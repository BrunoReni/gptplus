#Include "tlpp-core.th"
#include "tlpp-rest.th"

Namespace totvs.protheus.health.plans.beneficiaryPosition.api.search

/*/{Protheus.doc} SearchBeneficiaryController
Classe responsavel por pesquisar os beneficiários

@type class
@author Vinicius Queiros Teixeira
@since 05/11/2022
@version Protheus 12
/*/
Class SearchBeneficiaryController

    Private Data oService As Object

    Public Method new() Constructor

    @Get("/totvsHealthPlans/v1/beneficiaryPosition/search")
    Public Method searchBeneficiary()

EndClass

/*/{Protheus.doc} new
Método construtor da classe

@type method
@author Vinicius Queiros Teixeira
@since 05/11/2022
@version Protheus 12
/*/
Method new() Class SearchBeneficiaryController
Return Self

/*/{Protheus.doc} getBeneficiary
Método responsavel pela API que irá retornar o resultado da busca do beneficiário
informado no path param
Url: /totvsHealthPlans/v1/beneficiaryPosition/search
Verbo: GET

@type method
@author Vinicius Queiros Teixeira
@since 05/11/2022
@version Protheus 12
/*/
Method searchBeneficiary() Class SearchBeneficiaryController

    Local jQueryParam := oRest:getQueryRequest() As Json
    Local jFault As Json

    If jQueryParam:hasProperty("key")
        Self:oService := SearchBeneficiaryService():New()
        Self:oService:setQueryParam(oRest:getQueryRequest())

        If Self:oService:SearchBeneficiary(jQueryParam["key"])
            oRest:setResponse(Self:oService:getJsonResult())
            oRest:setStatusCode(Self:oService:getCodeStatus())
        EndIf
    Else
        jFault := {"code": "E001", "message" : "Nenhuma chave de busca informada.",;
                   "detailedMessage" : "Obrigatório informar no query param a chave (key) de busca do beneficiário."}

        oRest:setFault(jFault:toJson())
        oRest:setStatusCode(400)
    EndIf

Return
