#Include "tlpp-core.th"

Namespace totvs.protheus.health.plans.beneficiaryPosition.api.search

Using Namespace totvs.protheus.health.plans.beneficiaryPosition.api.util

/*/{Protheus.doc} SearchBeneficiaryAdapter
Classe adaptadora de collenction da busca dos beneficiários

@type class
@author Vinicius Queiros Teixeira
@since 05/11/2022
@version Protheus 12
/*/
Class SearchBeneficiaryAdapter From BaseAdapter

	Public Method new() Constructor
	Public Method getSearchBeneficiary(cKey As Character, jParam As json) As Logical
	
	Private Method mapFieldsSearches() As Logical
	Private Method getQuerySearches() As Character
	Private Method getWhereSearches(cKey As Character) As Character
	Private Method getOrderSearches() As Character

EndClass

/*/{Protheus.doc} new
Método construtor da classe

@type method
@author Vinicius Queiros Teixeira
@since 05/11/2022
@version Protheus 12
/*/
Method New() Class SearchBeneficiaryAdapter
	_Super:new()

    Self:setStyleReturn("beneficiaries") // Nome da propriedade de retorno dos itens no JSON
return

/*/{Protheus.doc} getSearchBeneficiary
Método responsavel por retornar o resultado da busca dos beneficiários

@type method
@author Vinicius Queiros Teixeira
@since 05/11/2022
@version Protheus 12
/*/
Method getSearchBeneficiary(cKey As Character, jParam As json) As Logical Class SearchBeneficiaryAdapter

	Local lReturn := .F. As Logical
	
	Self:mapFieldsSearches()

	If Self:executeQueryAdapter(Self:getQuerySearches(), Self:getWhereSearches(cKey), Self:getOrderSearches(), jParam)
		lReturn := .T.
	EndIf
	
Return lReturn

/*/{Protheus.doc} mapFieldsSearches
Método responsavel por mapear os atributos e campos (Tabela) para retorno na API

@type method
@author Vinicius Queiros Teixeira
@since 05/11/2022
@version Protheus 12
/*/
Method mapFieldsSearches() As Logical Class SearchBeneficiaryAdapter

    Self:oAdapterBase:AddMapFields("card", "MATRICULA", .T., .F., {"MATRICULA", "C",;
								   TamSX3("BA1_CODINT")[1]+TamSX3("BA1_CODEMP")[1]+TamSX3("BA1_MATRIC")[1]+TamSX3("BA1_TIPREG")[1]+TamSX3("BA1_DIGITO")[1], 0},;
								   "BA1_CODINT+BA1_CODEMP+BA1_MATRIC+BA1_TIPREG+BA1_DIGITO")
    Self:oAdapterBase:AddMapFields("name", "BA1_NOMUSR", .T., .F., {"BA1_NOMUSR", "C", TamSX3("BA1_NOMUSR")[1], 0})
	Self:oAdapterBase:AddMapFields("socialName", "BA1_NOMSOC", .T., .F., {"BA1_NOMSOC", "C", TamSX3("BA1_NOMSOC")[1], 0})
    Self:oAdapterBase:AddMapFields("type", "BA1_TIPUSU", .T., .F., {"BA1_TIPUSU", "C", TamSX3("BA1_TIPUSU")[1], 0})
    Self:oAdapterBase:AddMapFields("kinship", "BRP_DESCRI", .T., .F., {"BRP_DESCRI", "C", TamSX3("BRP_DESCRI")[1], 0})
    Self:oAdapterBase:AddMapFields("situation", "SITUACAO", .T., .F., {"SITUACAO", "C", 15, 0},;
                      			   "CASE WHEN BA1_DATBLO = '' THEN 'Ativo' WHEN BA1_DATBLO > '"+DToS(dDataBase)+"' THEN 'Bloqueio Futuro' ELSE 'Bloqueado' END")

Return .T.

/*/{Protheus.doc} getQuerySearches
Método responsavel por retornar o corpo da query de busca dos beneficiários

@type Method
@author Vinicius Queiros Teixeira
@since 05/11/2022
@version Protheus 12
/*/
Method getQuerySearches() As Character Class SearchBeneficiaryAdapter

	Local cQuery As Character
	
	cQuery := "SELECT #QueryFields# FROM "+RetSqlName("BA1")+" BA1 "
    cQuery += "LEFT JOIN "+RetSqlName("BRP")+" BRP "
	cQuery += "  ON BRP.BRP_FILIAL = '"+FWxFilial("BRP")+"' "
	cQuery += " AND BRP.BRP_CODIGO = BA1.BA1_GRAUPA "
	cQuery += " AND BRP.D_E_L_E_T_ = ' ' "
  	cQuery += "WHERE #QueryWhere#""

Return cQuery

/*/{Protheus.doc} getWhereSearches
Método responsavel por retornar o where da query de busca dos beneficiários

@type Method
@author Vinicius Queiros Teixeira
@since 05/11/2022
@version Protheus 12
/*/
Method getWhereSearches(cKey As Character) As Character Class SearchBeneficiaryAdapter

	Local cQuery As Character
    Local nX := 0 As Numeric
    Local aFields := {"BA1_NOMUSR", "BA1_CPFUSR", "BA1_NOMSOC", "BA1_CODINT+BA1_CODEMP+BA1_MATRIC+BA1_TIPREG+BA1_DIGITO"} As Array

	cQuery += " BA1_FILIAL = '"+FWxFilial('BA1')+"' AND "
    cQuery += " ("
    For nX := 1 To Len(aFields)
        cQuery += aFields[nX]+" LIKE '%"+Upper(cKey)+"%'"

        cQuery += IIf(nX < Len(aFields), " OR ", " ")
    Next nX 
    cQuery += " )"
	cQuery += " AND BA1.D_E_L_E_T_ = ' ' "

Return cQuery

/*/{Protheus.doc} getOrderSearches
Método responsavel por retornar a ordem dos beneficiários encontrados na busca

@type Method
@author Vinicius Queiros Teixeira
@since 05/11/2022
@version Protheus 12
/*/
Method getOrderSearches() As Character Class SearchBeneficiaryAdapter

	Local cOrdemQuery As Character

    cOrdemQuery := "BA1_CODINT,BA1_CODEMP,BA1_MATRIC,BA1_TIPREG,BA1_DIGITO"

Return cOrdemQuery
