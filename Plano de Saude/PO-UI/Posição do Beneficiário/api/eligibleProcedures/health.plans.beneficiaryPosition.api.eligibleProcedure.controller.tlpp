#Include "tlpp-core.th"
#include "tlpp-rest.th"

Namespace totvs.protheus.health.plans.beneficiaryPosition.api.eligibleProcedure

/*/{Protheus.doc} EligibleProceduresBeneficiaryController
Classe responsavel por controlar as APIs de Elegibilidade dos procedimentos
(carência e cobertura)

@type class
@author Vinicius Queiros Teixeira
@since 05/12/2022
@version Protheus 12
/*/
Class EligibleProceduresBeneficiaryController

    Private Data oService As Object

    Public Method new() Constructor

    @GET("/totvsHealthPlans/v1/beneficiaryPosition/:subscriberId/eligibleProcedures")
    Public Method getEligibleProcedures()

EndClass

/*/{Protheus.doc} new
Método construtor da classe

@type method
@author Vinicius Queiros Teixeira
@since 05/12/2022
@version Protheus 12
/*/
Method new() Class EligibleProceduresBeneficiaryController
Return Self

/*/{Protheus.doc} getEligibleProcedures
Método responsavel pela API que irá retornar os procedimentos elegiveis de carência
e cobertura beneficiário
Url: /totvsHealthPlans/v1/beneficiaryPosition/:subscriberId/eligibleProcedures
Verbo: GET

@type method
@author Vinicius Queiros Teixeira
@since 05/12/2022
@version Protheus 12
/*/
Method getEligibleProcedures() Class EligibleProceduresBeneficiaryController

    Local jPath := oRest:getPathParamsRequest() As Json

    Self:oService := EligibleProceduresBeneficiaryService():New()
    Self:oService:setQueryParam(oRest:getQueryRequest())

    If Self:oService:allEligibleProceduresPage(jPath["subscriberId"])
        oRest:setResponse(Self:oService:getJsonResult())
        oRest:setStatusCode(Self:oService:getCodeStatus())
    Else
        oRest:setFault(Self:oService:getJsonResult())
        oRest:setStatusCode(Self:oService:getCodeStatus())
    EndIf

Return
