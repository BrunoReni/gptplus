#Include "tlpp-core.th"

Namespace totvs.protheus.health.plans.beneficiaryPosition.api.contract.cid

Using Namespace totvs.protheus.health.plans.beneficiaryPosition.api.util

/*/{Protheus.doc} CIDBeneficiaryService
Classe responsavel por processar a busca das doenças preexistens (CID)
do beneficiário

@type class
@author Vinicius Queiros Teixeira
@since 08/10/2022
@version Protheus 12
/*/
Class CIDBeneficiaryService From BaseService

    Private Data oAdapter As Object

  	Public Method new() Constructor
    Public Method allCIDPage(cSubscriberId As Character) As Logical
    Public Method allCIDProceduresPage(cSubscriberId As Character) As Logical

EndClass

/*/{Protheus.doc} new
Método construtor da classe

@type method
@author Vinicius Queiros Teixeira
@since 08/10/2022
@version Protheus 12
/*/
Method new() Class CIDBeneficiaryService
    _Super:new()
Return Self

/*/{Protheus.doc} allCIDPage
Método responsavel por retornar a pagina de doenças preexistens (CID)

@type method
@author Vinicius Queiros Teixeira
@since 08/10/2022
@version Protheus 12
/*/
Method allCIDPage(cSubscriberId As Character) As Logical Class CIDBeneficiaryService

    Local aArea := FWGetArea() As Array
    Local lSucess := .F. As Logical
    Local jDadosBeneficiario As Json

    BA1->(DbSetOrder(2))
    If BA1->(MsSeek(FWXFilial("BA1")+Padr(cSubscriberId, TamSX3("BA1_CODINT")[1]+TamSX3("BA1_CODEMP")[1]+TamSX3("BA1_MATRIC")[1]+TamSX3("BA1_TIPREG")[1]+TamSX3("BA1_DIGITO")[1])))        
        Self:oAdapter := CIDBeneficiaryAdapter():New()

        jDadosBeneficiario := JsonObject():new()
        jDadosBeneficiario["operadora"] := BA1->BA1_CODINT
        jDadosBeneficiario["empresa"] := BA1->BA1_CODEMP
        jDadosBeneficiario["matricula"] := BA1->BA1_MATRIC
        jDadosBeneficiario["tipoRegistro"] := BA1->BA1_TIPREG

        If Self:oAdapter:getBuildPageCID(jDadosBeneficiario, Self:jParam)
            lSucess := .T.
            Self:jResult := Self:oAdapter:getJsonResult()
            Self:nCodeStatus := 200 // Ok
        EndIf       
    Else
        lSucess := .F.
        Self:SetError("E001", "Beneficiário não encontrado.",;
                              "Não foi encontrado nenhum beneficiário com a matricula "+cSubscriberId,;
                              404) // Not Found
    EndIf

    FWRestArea(aArea)
    
Return lSucess

/*/{Protheus.doc} allCIDProceduresPage
Método responsavel por retornar a pagina de procedimentos da doença preexistens (CID)

@type method
@author Vinicius Queiros Teixeira
@since 08/10/2022
@version Protheus 12
/*/
Method allCIDProceduresPage(cSubscriberId As Character, cCID As Character) As Logical Class CIDBeneficiaryService

    Local aArea := FWGetArea() As Array
    Local lSucess As Logical
    Local jDadosCID As Json

    BA1->(DbSetOrder(2))
    If BA1->(MsSeek(FWXFilial("BA1")+Padr(cSubscriberId, TamSX3("BA1_CODINT")[1]+TamSX3("BA1_CODEMP")[1]+TamSX3("BA1_MATRIC")[1]+TamSX3("BA1_TIPREG")[1]+TamSX3("BA1_DIGITO")[1]))) 
        BF3->(DbSetOrder(1))
        If BF3->(MsSeek(FWXFilial("BF3")+Substr(cSubscriberId, 1, 16)+cCID))        
            Self:oAdapter := CIDBeneficiaryAdapter():New()

            jDadosCID := JsonObject():new()
            jDadosCID["operadora"] := BF3->BF3_CODINT
            jDadosCID["empresa"] := BF3->BF3_CODEMP
            jDadosCID["matricula"] := BF3->BF3_MATRIC
            jDadosCID["tipoRegistro"] := BF3->BF3_TIPREG
            jDadosCID["cid"] := BF3->BF3_CODDOE

            If Self:oAdapter:getBuildPageProcedures(jDadosCID, Self:jParam)
                lSucess := .T.
                Self:jResult := Self:oAdapter:getJsonResult()
                Self:nCodeStatus := 200 // Ok
            EndIf 
        Else
            lSucess := .T.
            Self:nCodeStatus := 200 // Ok
            Self:jResult["items"] := {}
            Self:jResult["hasNext"] := .F.
            Self:jResult["remainingRecords"] := 0
        EndIf      
    Else
        lSucess := .F.
        Self:SetError("E001", "Beneficiário não encontrado.",;
                      "Não foi encontrado nenhum Beneficiário com a matricula "+cSubscriberId,;
                      404) // Not Found
    EndIf

    FWRestArea(aArea)
    
Return lSucess
