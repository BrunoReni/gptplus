#Include "tlpp-core.th"
#include "tlpp-rest.th"

Namespace totvs.protheus.health.plans.beneficiaryPosition.api.contract.cid

/*/{Protheus.doc} CIDBeneficiaryController
Classe responsavel por controlar as APIs de doenças preexistente dos beneficiários

@type class
@author Vinicius Queiros Teixeira
@since 08/10/2022
@version Protheus 12
/*/
Class CIDBeneficiaryController

    Private Data oService As Object

    Public Method new() Constructor

    @Get("/totvsHealthPlans/v1/beneficiaryPosition/:subscriberId/cid")
    Public Method getCID()

    @Get("/totvsHealthPlans/v1/beneficiaryPosition/:subscriberId/cid/:cid/procedures")
    Public Method getProcedures()

EndClass

/*/{Protheus.doc} new
Método construtor da classe

@type method
@author Vinicius Queiros Teixeira
@since 08/10/2022
@version Protheus 12
/*/
Method new() Class CIDBeneficiaryController
Return Self

/*/{Protheus.doc} getCID
Método responsavel pela API que irá retornar as doenças preexistente (CID)
Url: /totvsHealthPlans/v1/beneficiaryPosition/:subscriberId/CID
Verbo: GET

@type method
@author Vinicius Queiros Teixeira
@since 08/10/2022
@version Protheus 12
/*/
Method getCID() Class CIDBeneficiaryController

    Local jPath := oRest:getPathParamsRequest() As Json

    Self:oService := CIDBeneficiaryService():New()
    Self:oService:setQueryParam(oRest:getQueryRequest())

    If Self:oService:allCIDPage(jPath["subscriberId"])
        oRest:setResponse(Self:oService:getJsonResult())
        oRest:setStatusCode(Self:oService:getCodeStatus())
    Else
        oRest:setFault(Self:oService:getJsonResult())
        oRest:setStatusCode(Self:oService:getCodeStatus())
    EndIf

Return

/*/{Protheus.doc} getProcedures
Método responsavel pela API que irá retornar os procedimentos da 
doença preexistente (CID)
Url: /totvsHealthPlans/v1/beneficiaryPosition/:subscriberId/CID/:cid/procedures
Verbo: GET

@type method
@author Vinicius Queiros Teixeira
@since 08/10/2022
@version Protheus 12
/*/
Method getProcedures() Class CIDBeneficiaryController

    Local jPath := oRest:getPathParamsRequest() As Json

    Self:oService := CIDBeneficiaryService():New()
    Self:oService:setQueryParam(oRest:getQueryRequest())

    If Self:oService:allCIDProceduresPage(jPath["subscriberId"], jPath["cid"])
        oRest:setResponse(Self:oService:getJsonResult())
        oRest:setStatusCode(Self:oService:getCodeStatus())
    Else
        oRest:setFault(Self:oService:getJsonResult())
        oRest:setStatusCode(Self:oService:getCodeStatus())
    EndIf

Return
