#Include "tlpp-core.th"
#include "tlpp-rest.th"

Namespace totvs.protheus.health.plans.beneficiaryPosition.api.authorization

/*/{Protheus.doc} AuthorizationsBeneficiaryController
Classe responsavel por controlar as APIs de Autorizações do Beneficiário

@type class
@author Vinicius Queiros Teixeira
@since 07/11/2022
@version Protheus 12
/*/
Class AuthorizationsBeneficiaryController

    Private Data oService As Object

    Public Method new() Constructor

    @GET("/totvsHealthPlans/v1/beneficiaryPosition/:subscriberId/authorizations")
    Public Method getAuthorizations()

    @GET("/totvsHealthPlans/v1/beneficiaryPosition/authorizations/:authorizationId")
    Public Method getAuthorizationId()

    @GET("/totvsHealthPlans/v1/beneficiaryPosition/authorizations/:authorizationId/events")
    Public Method getAuthorizationEvents()

EndClass

/*/{Protheus.doc} new
Método construtor da classe

@type method
@author Vinicius Queiros Teixeira
@since 07/11/2022
@version Protheus 12
/*/
Method new() Class AuthorizationsBeneficiaryController
Return Self

/*/{Protheus.doc} getAuthorizations
Método responsavel pela API que irá retornar as autorizações do beneficiário
passado pelo path param
Url: /totvsHealthPlans/v1/beneficiaryPosition/:subscriberId/authorizations
Verbo: GET

@type method
@author Vinicius Queiros Teixeira
@since 07/11/2022
@version Protheus 12
/*/
Method getAuthorizations() Class AuthorizationsBeneficiaryController

    Local jPath := oRest:getPathParamsRequest() As Json

    Self:oService := AuthorizationsBeneficiaryService():New()
    Self:oService:setQueryParam(oRest:getQueryRequest())

    If Self:oService:allAuthorizationsPage(jPath["subscriberId"])
        oRest:setResponse(Self:oService:getJsonResult())
        oRest:setStatusCode(Self:oService:getCodeStatus())
    Else
        oRest:setFault(Self:oService:getJsonResult())
        oRest:setStatusCode(Self:oService:getCodeStatus())
    EndIf

Return

/*/{Protheus.doc} getAuthorizationId
Método responsavel pela API que irá retornar os dados da autorização
informada pelo path param
Url: /totvsHealthPlans/v1/beneficiaryPosition/authorizations/:authorizationId
Verbo: GET

@type method
@author Vinicius Queiros Teixeira
@since 09/11/2022
@version Protheus 12
/*/
Method getAuthorizationId() Class AuthorizationsBeneficiaryController

    Local jPath := oRest:getPathParamsRequest() As Json

    Self:oService := AuthorizationsBeneficiaryService():New()
    Self:oService:setQueryParam(oRest:getQueryRequest())

    If Self:oService:idAuthorizationPage(jPath["authorizationId"])
        oRest:setResponse(Self:oService:getJsonResult())
        oRest:setStatusCode(Self:oService:getCodeStatus())
    Else
        oRest:setFault(Self:oService:getJsonResult())
        oRest:setStatusCode(Self:oService:getCodeStatus())
    EndIf

Return

/*/{Protheus.doc} getAuthorizationEvents
Método responsavel pela API que irá retornar os eventos da autorização
informada pelo path param
Url: /totvsHealthPlans/v1/beneficiaryPosition/authorizations/:authorizationId/events
Verbo: GET

@type method
@author Vinicius Queiros Teixeira
@since 07/11/2022
@version Protheus 12
/*/
Method getAuthorizationEvents() Class AuthorizationsBeneficiaryController

    Local jPath := oRest:getPathParamsRequest() As Json

    Self:oService := AuthorizationsBeneficiaryService():New()
    Self:oService:setQueryParam(oRest:getQueryRequest())

    If Self:oService:allEventsAuthorizationPage(jPath["authorizationId"])
        oRest:setResponse(Self:oService:getJsonResult())
        oRest:setStatusCode(Self:oService:getCodeStatus())
    Else
        oRest:setFault(Self:oService:getJsonResult())
        oRest:setStatusCode(Self:oService:getCodeStatus())
    EndIf

Return
