#INCLUDE 'protheus.ch'
#INCLUDE 'restful.ch'

//-------------------------------------------------------------------
/*/{Protheus.doc} PostAuditReq

@author    Lucas Nonato
@version   V12
@since     10/08/2021
/*/
class PostAuditReq from CenRequest 

    public data cError 
    public data lRet 
    public data oRest as object

    public method New(oRest) constructor
    // // @Post("/api/healthcare/hat/:apiVersion/postAudit")
    public method post()
    public method checkBody()
    public method valida()
    public method validaSchema()

endclass

//-------------------------------------------------------------------
/*/{Protheus.doc} New

@author    Lucas Nonato
@version   V12
@since     10/08/2021
/*/
method New(oRest) class PostAuditReq 
self:oRest     := oRest
self:cError    := ""
_Super:New(oRest,'')
return self

//-------------------------------------------------------------------
/*/{Protheus.doc} post

@author    Lucas Nonato
@version   V12
@since     10/08/2021
/*/
method post() class PostAuditReq
local oAppService   := nil
local oJson         := JsonObject():new()

if self:valida() .and. self:validaSchema()
    oAppService := PostAuditSvc():new(self:oRest)
    oAppService:post()
    self:cError := oAppService:cError
endif

oJson['hasError']       :=  iif(!empty(self:cError),.t.,.f.)
oJson['errorMessage']   :=  self:cError

self:oRest:setResponse(FWJsonSerialize(oJson, .F., .F.))

return .t.

//-------------------------------------------------------------------
/*/{Protheus.doc} valida

@author    Lucas Nonato
@version   V12
@since     08/03/2021
/*/
method valida() class PostAuditReq
local lRet      := .t.

if empty(self:oRest:file)
    self:cError := "Campo 'file' obrigatório."
    lRet := .f.
endif

if lRet .and. empty(self:oRest:protocol)
    self:cError := "Campo 'protocol' obrigatório."
    lRet := .f.
endif

return lRet

//-------------------------------------------------------------------
/*/{Protheus.doc} validaSchema

@author    Lucas Nonato
@version   V12
@since     08/03/2021
/*/
method validaSchema() class PostAuditReq
local lRet      := .t.
local cVerArq   := ""
local cError	:= ""
local cWarning	:= ""

cVerArq	:= Substr(self:oRest:file,At("Padrao>", self:oRest:file) + Len("Padrao>"),7)
if !xmlSVldSch( self:oRest:file,"\tiss\schemas\tissV" + strTran(cVerArq, ".", "_") + ".xsd",@cError,@cWarning )
    lRet := .f.
    self:cError := "XML Invalido: " + cError
endif

return lRet

//-------------------------------------------------------------------
/*/{Protheus.doc} checkBody

@author    Lucas Nonato
@version   V12
@since     01/03/2021
/*/
method checkBody() class PostAuditReq
local lRet := _Super:checkBody()

if lRet    
    self:oRest:file     := iif(!empty(self:jRequest['file']),decode64(self:jRequest['file']),'')
    self:oRest:protocol := self:jRequest['protocol']
endif

return lRet