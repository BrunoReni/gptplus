#Include 'Protheus.ch'

//-------------------------------------------------------------------
/*/{Protheus.doc} PLSGlosaRequest

@author    Lucas Nonato
@version   V12
@since     01/03/2021
/*/
class PLSGlosaRequest from CenRequest 

    public data oJson as object
    public data oRest as object

    public method New(oRest) constructor
    public method inclui() 
    public method valida() 
    public method getItens() 
    public method checkBody() 
    // // @Get("/api/healthcare/hat/:apiVersion/recurso")
    public method get()
  
endclass

method New(oRest,cSvcName) class PLSGlosaRequest 
    _Super:New(oRest,cSvcName)
    ::oRest := oRest
    ::oJson := jsonObject():new()
return self

//-------------------------------------------------------------------
/*/{Protheus.doc} inclui

@author    Lucas Nonato
@version   V12
@since     01/03/2021
/*/
method inclui() class PLSGlosaRequest 
local cMsg 	    as Character
local cProtoc   as Character
local aReturn   := {}
local aPreComit := {}
local aItens    := {}
local nResult   := 0

if ::oRest:operation == "5"
    aItens := ::getItens()
endif

aReturn := callIncRec(::oRest:protocol, ::oRest:healthProviderCode, ::oRest:formNumber, ::oRest:justification, ::oRest:operation, "", "2", aPreComit,,aItens)
cMsg 	:= aReturn[1]
nResult := aReturn[2]
cProtoc := aReturn[3]

::oJson['status']			:= iif(nResult==1,"true","false")
::oJson['message']			:= cMsg
::oJson['appealProtocol']   := cProtoc

return .t.

//-------------------------------------------------------------------
/*/{Protheus.doc} checkBody

@author    Lucas Nonato
@version   V12
@since     01/03/2021
/*/
method checkBody() class PLSGlosaRequest
local lRet := _Super:checkBody()

if lRet
    if !empty(self:jRequest['protocol']) 
        ::oRest:protocol := strzero(val(self:jRequest['protocol']),8)
    endif

    if !empty(self:jRequest['formNumber']) 
        ::oRest:formNumber := strzero(val(self:jRequest['formNumber']),8)
    endif
    
    ::oRest:healthProviderCode  := self:jRequest['healthProviderCode']
    ::oRest:justification       := self:jRequest['justification']
    ::oRest:operation           := self:jRequest['operation']
    ::oRest:items               := self:jRequest['items']
else
    ::oJson['status']			:= "false"
    ::oJson['message']			:= self:cFaultDesc + " " + self:cFaultDetail
    ::oJson['appealProtocol']   := ""
endif

if lRet 
    lRet := ::valida()
endif

return lRet

//-------------------------------------------------------------------
/*/{Protheus.doc} valida

@author    Lucas Nonato
@version   V12
@since     08/03/2021
/*/
method valida() class PLSGlosaRequest
local lRet      := .t.
local cMsg      := ""

if empty(::oRest:protocol)
    cMsg := "Campo 'protocol' obrigatório."
    lRet := .f.
endif

if lRet .and. empty(::oRest:operation)
    cMsg := "Campo 'operation' obrigatório."
    lRet := .f.
endif

if lRet .and. (::oRest:operation $ "35" .and. empty(::oRest:formNumber))
    cMsg := "Campo 'formNumber' obrigatório para operação 3 ou 5."
    lRet := .f.
endif

if lRet .and. (::oRest:operation == "5" .and. len(::oRest:items) == 0)
    cMsg := "Bloco 'items' obrigatório para operação 5."
    lRet := .f.
endif

if !lRet
    ::oJson['status']			:= "false"
    ::oJson['message']			:= cMsg
    ::oJson['appealProtocol']   := ""
endif

return lRet

//-------------------------------------------------------------------
/*/{Protheus.doc} getItens

@author    Lucas Nonato
@version   V12
@since     08/03/2021
/*/
method getItens() class PLSGlosaRequest
local aItens    := {}
local nX        := 0

for nX := 1 to len(self:oRest:items)
    aadd(aItens,{self:oRest:items[nX]['sequential'],cvaltochar(self:oRest:items[nX]['value']),self:oRest:items[nX]['justification']})
next

return aItens