#include 'protheus.ch'
#include 'FWMVCDEF.CH' 
#include 'restful.ch'

//-------------------------------------------------------------------
/*/{Protheus.doc} PLSClinicalStaffSvc

@author  sakai
@version P12
@since   06/09/22
/*/
//------------------------------------------------------------------- 
class PLSClinicalStaffSvc

    Data lAuto as Logical
    Data oError as Object
    Data oJsonReq as Object
    Data oDao as Object
    Data oEntity as Object
    Data lSuccess as logical
    //Atributos pesquisa
    Data cCodRda as Character
    Data cCodLoc as Character
    Data cCodEsp as Character

    public method new()

    public method getSuccess()
    public method getError()
    public method getClinicalStaff()
    public method block()
    public method setError(nStatus, cCode, cMessage, cDetailedMessage)
    public method postClinicalStaff()
    public method saveAttachment()
    public method bscACBNum(cObj) 

endClass

method new(oRest,cJsonReq,lAuto) class PLSClinicalStaffSvc

    Default lAuto := .F.
    
    self:lAuto    := lAuto
    self:oError   := JsonObject():new()
    self:oDao     := PLSClinicalStaffDao():new()
    self:oEntity  := PLSClinicalStaffEntity():new()
    self:lSuccess := .T.
    if !self:lAuto
        self:cCodRda  := oRest:healthProviderCode
        self:cCodLoc  := oRest:locationCode
        self:cCodEsp  := oRest:specialtyCode
        self:oJsonReq := cJsonReq
        self:oDao:setPageSize(oRest:pageSize)
        self:oDao:setNumPage(oRest:page)
        self:oEntity:setPageSize(oRest:pageSize)
    endIf

Return self


//-------------------------------------------------------------------
/*/{Protheus.doc} Metodos auxiliares

@author  sakai
@version P12
@since   06/09/22
/*/
//------------------------------------------------------------------- 
method getSuccess() class PLSClinicalStaffSvc
return self:lSuccess

method setError(nStatus, cCode, cMessage, cDetailedMessage) class PLSClinicalStaffSvc

    Default nStatus  := 400
    Default cCode    := '0002'
    Default cMessage := 'Bad Request'
    Default cDetailedMessage := 'O servidor nao foi capaz de entender a solicitacao'

    self:oError['status'] := nStatus
    self:oError['code'] := cCode
    self:oError['message'] := cMessage
    self:oError['detailedMessage'] := cDetailedMessage
    self:lSuccess := .F.

return

method getError() class PLSClinicalStaffSvc
return self:oError


//-------------------------------------------------------------------
/*/{Protheus.doc} Metodos que montam o json de resposta

@author  sakai
@version P12
@since   06/09/22
/*/
//------------------------------------------------------------------- 
method getClinicalStaff() class PLSClinicalStaffSvc

    Local aRet := {}

    self:lSuccess := self:oDao:getClinical(self:cCodRda,self:cCodLoc,self:cCodEsp)

    if self:lSuccess
        self:oEntity:montaJson(self:oDao)
        //Encerra Json
        aadd(aRet,self:oEntity:getResult())
        aadd(aRet,self:oEntity:getStatusCode())
    else
        self:setError(400,"0003","Registros nao encontrados","Nao foi encontrado o corpo clinico para os parametros informados")
    endIf
    self:oDao:closeQuery()

return aRet


//-------------------------------------------------------------------
/*/{Protheus.doc} Metodos que montam o json de resposta

@author  sakai
@version P12
@since   06/09/22
/*/
//------------------------------------------------------------------- 
method postClinicalStaff() class PLSClinicalStaffSvc

    local oResult := JsonObject():new()
    local cDados := ''
    local aRet := {}
  
    //Linha modelo
    //"000004;BC1_CODIGO~001;BC1_CODLOC~002;BC1_CODESP~TESTE INCLUSAO PORTAL 2;BC1_NOMPRF~125369;BC1_NUMCR~SP    ;BC1_ESTCR~08859188008;BB0_CGC~CRM    ;BC1_SIGLCR"
    cDados += self:oJsonReq['healthProviderCode']        + ";BC1_CODIGO~" 
    cDados += self:oJsonReq['locationCode']              + ";BC1_CODLOC~"
    cDados += self:oJsonReq['specialtyCode']             + ";BC1_CODESP~"
    cDados += self:oJsonReq['name']                      + ";BC1_NOMPRF~"
    cDados += self:oJsonReq['professionalCouncilNumber'] + ";BC1_NUMCR~"
    cDados += self:oJsonReq['stateAbbreviation']         + ";BC1_ESTCR~"
    cDados += self:oJsonReq['officialRecord']            + ";BB0_CGC~"
    cDados += self:oJsonReq['professionalCouncil']       + ";BC1_SIGLCR"

    cCodSeq := PLS814LOG(cDados, 'hat')
    
    if Empty(cCodSeq)
        self:setError(400,"0003","Falha ao criar pedido","Nao foi possivel gerar o pedido de inclusao de Profissional no Corpo Clinico")
    else
        self:saveAttachment(cCodSeq)
        oResult["code"]    := "0001"
        oResult["message"] := "Pedido de inclusao gerado com sucesso: " + cCodSeq

        aadd(aRet,oResult)
        aadd(aRet,200)
    endIf

return aRet


method saveAttachment(cCodSeq) class PLSClinicalStaffSvc

    local cDirDocs  := ""
    local cDescri  	:= ""
    local cExtArq  	:= ""
    local cFileName := self:oJsonReq['filename']
    local nH  		:= 0

    if !empty(cCodSeq) .And. !empty(self:oJsonReq['filename']) .And. !empty(self:oJsonReq['base64file'])
           
        //Pega a extensão do arquivo
        cExtArq	:= subStr(cFileName, RAT(".", cFileName)+1)

        //Monta nome
        cDescri 	:= cFileName
        cFileName 	:= upper(left(substr(cFileName, 1, RAT(".", cFileName)-1) + strtran(Time(), ":", "_"), len( ACB->ACB_OBJETO )-5)  + "." + cExtArq)

        ACB->(dbSetOrder(1))
        AC9->(dbSetOrder(1))

        cDirDocs := iif(MsMultDir(),MsRetPath(),MsDocPath())

        nH := fCreate(cDirDocs + "\" + cFileName)
        fWrite(nH, decode64(self:oJsonReq['base64file']))
        fClose(nH)

        cObj := ACB->(getSXENum( "ACB", "ACB_CODOBJ" ))
        ACB->(confirmSX8())

        self:bscACBNum(cObj)
   
        ACB->( RecLock( "ACB", .T. ) )
        ACB->ACB_FILIAL  := xFilial( "ACB" )
        ACB->ACB_CODOBJ := cObj
        ACB->ACB_OBJETO := cFileName
        ACB->ACB_DESCRI := cDescri
        ACB->( MsUnlock() )

        AC9->(RecLock( "AC9", .T. ))
        AC9->AC9_FILIAL := xFilial( "AC9" )
        AC9->AC9_FILENT := xFilial( "B98" )
        AC9->AC9_ENTIDA := "B98"
        AC9->AC9_CODENT := xFilial( "B98" ) + cCodSeq
        AC9->AC9_CODOBJ := cObj
        AC9->( MsUnlock() )
    
    endIf

return
//-------------------------------------------------------------------
/*/{Protheus.doc} Bloqueia o profissional

@author  Lucas Nonato
@version P12
@since   24/05/2023
/*/
Method block(nRecno) class PLSClinicalStaffSvc
    if !self:oDao:block(nRecno)
        self:setError(400,"0003","Registros nao encontrados","Nao foi encontrado corpo clinico com o id informado")
    endIf
Return

Method bscACBNum(cObj) class PLSClinicalStaffSvc
    
    Local cAutoObj := Replicate("9",tamSX3("ACB_CODOBJ")[1])
  
    while ACB->( msSeek( xFilial("ACB") + cObj ) )
        cObj := iif(!self:lAuto, ACB->(getSXENum( "ACB", "ACB_CODOBJ" )), cAutoObj) 
        iif(!self:lAuto, ACB->(confirmSX8()), NIL)
    endDo

Return cObj