#INCLUDE 'protheus.ch'
#INCLUDE 'restful.ch'
#DEFINE _tgProc 'procedures'
#DEFINE _tgRejec 'rejectionCauses'

//-------------------------------------------------------------------
/*/{Protheus.doc} PLSAuthorizationsEntityStandard

@author  Daniel Silva
@version P12
@since   16/05/23
/*/
//------------------------------------------------------------------- 
class PLSAuthorizationsEntityInitialSituation from PLSAuthorizationsEntityLib

    public method new()
    public method montaCab()
    public method montaDente()
    public method deParaProtheusHat()
     public method montaEve()

endClass

method new(cGuia) class PLSAuthorizationsEntityInitialSituation

    _Super:New(cGuia)
    self:cGuia   := cGuia
    self:oDaoCab := PLSAuthorizationsDaoBEC():new(self:cGuia)

Return self

method montaCab() class PLSAuthorizationsEntityInitialSituation

    Local cAliTrb := ''

    self:getDao('CAB'):buscaGuia()
    cAliTrb := self:getAliasTemp('CAB')

    //Campos BEC
    self:oResult["sequencial"]         := self:maskField( (cAliTrb)->BEC_SEQUEN )
    self:oResult["idOnHealthProvider"] := self:maskField( (cAliTrb)->BEC_GUIPRE )
    self:oResult["idOnHealthInsurer"]  := self:maskField( (cAliTrb)->BEC_GUIOPE )
    self:oResult["mainAuthorizationCode"] := self:maskField( (cAliTrb)->BEC_GUIPRI )
    self:oResult["periodontalDisease"] := self:maskField( (cAliTrb)->BEC_SIDOPE )
    self:oResult["softTissuesChange"]  := self:maskField( (cAliTrb)->BEC_ALTEMO )
    self:oResult["observation"]        := self:maskField( (cAliTrb)->OBSERVACAO )
    self:oResult["healthProviderId"]   := self:maskField( (cAliTrb)->BEC_CODRDA )
    self:oResult["requestedDate"]      := self:maskField( (cAliTrb)->BEC_DATINC, .T. )
    self:oResult["operatorMainGuide"]  := self:maskField( (cAliTrb)->BEC_GPRIOP )
    self:oResult["tissSequentialTransaction"] := self:maskField( (cAliTrb)->BEC_LOTGUI )
    self:montaDente(cAliTrb)

return



method montaDente(cAliTrb) class PLSAuthorizationsEntityInitialSituation

local aDentes := {"11","12","13","14","15","16","17","18",;
                 "21","22","23","24","25","26","27","28",;
                 "31","32","33","34","35","36","37","38",;
                 "41","42","43","44","45","46","47","48",;
                 "51","52","53","54","55",;
                 "61","62","63","64","65",;
                 "71","72","73","74","75",;
                 "81","82","83","84","85"}

local nX := 0
self:oResult["teeth"] := {}

    For nX := 1 to Len(aDentes)
    
        aAdd(self:oResult["teeth"], JsonObject():new())
        self:oResult['teeth'][nx]['tooth']         := self:maskField( aDentes[nX] )
        self:oResult['teeth'][nx]['toothStatus']   := self:maskField( self:deParaProtheusHat((cAliTrb)->(&("BEC_DENT"+ aDentes[nX]))) )
        self:oResult['teeth'][nx]['supranumerary'] := self:maskField( "0" )

    next 

    self:getDao('CAB'):closeQuery()

return


method deParaProtheusHat(cDenteProtheus) class PLSAuthorizationsEntityInitialSituation

local nDenteHat := 0

    do case
        case cDenteProtheus == "H"
            nDenteHat := 1
        case cDenteProtheus == "C"
            nDenteHat := 2
        case cDenteProtheus == "R"
            nDenteHat := 3
        case cDenteProtheus == "E"
            nDenteHat := 4
        case cDenteProtheus == "A"
            nDenteHat := 5
    endcase

return nDenteHat

method montaEve() class PLSAuthorizationsEntityInitialSituation
return

