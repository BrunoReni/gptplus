#INCLUDE "TOTVS.CH"

//-------------------------------------------------------------------
/*/{Protheus.doc} PLSBenefElegSvc

@author    PLSTEAM
@version   V12
@since     28/03/2022
/*/
//-------------------------------------------------------------------
class PLSBenefElegSvc

    public data oRest as object
    public data oJson as object
    public data oDao  as object

    public method new(oRest) constructor

    public method elegibility()
    public method valida()
    public method checkAuth()

endclass

//-------------------------------------------------------------------
/*/{Protheus.doc} new

@author    PLSTEAM
@version   V12
@since     28/03/2022
/*/
//-------------------------------------------------------------------
method new(oRest) class PLSBenefElegSvc

    ::oRest := oRest
    ::oJson := jsonObject():new()
    ::oDao  := PLSBenefElegDao():new()

return self
//-------------------------------------------------------------------
/*/{Protheus.doc} valida

@author    PLSTEAM
@version   V12
@since     08/03/2021
/*/
//-------------------------------------------------------------------
method valida() class PLSBenefElegSvc

    local lRet   := .t.
    local cError := ''

    if empty(::oRest:cardNumberOrCpf)
        cError := "Não foi informado o CPF ou MATRICULA"
    endif

    ::oRest:cardNumberOrCpf := strTran(strTran(strTran(::oRest:cardNumberOrCpf,'.',''),'-',''),'/','')

    lRet := iif( empty(cError), .t., .f.)

    if !lRet
        ::oJson['hasError']      :=  .t.
        ::oJson['errorMessage']  :=  cError
        ::oRest:setResponse(EncodeUTF8(::oJson:toJSon()))
    endIf

return lRet

//-------------------------------------------------------------------
/*/{Protheus.doc} elegibility

@author    PLSTEAM
@version   V12
@since     28/03/2022
/*/
//-------------------------------------------------------------------
method elegibility() class PLSBenefElegSvc

    local lRet  := .t.
    local nSecond := seconds()

    ::oJson := ::oDao:searchByCpfOrCardNumber(::oRest:cardNumberOrCpf)

    ::oRest:setResponse(EncodeUTF8(::oJson:toJSon()))

    coNout('Busca realizada (' + dToc(date())+' - ' + time() + ') - CPF ou MATRIC ['+::oRest:cardNumberOrCpf+'] | Tempo gasto: ['+ cValToChar(seconds() - nSecond) +']')

return lRet


