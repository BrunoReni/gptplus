#Include "tlpp-core.th"

Namespace totvs.protheus.health.plans.api.familyContract.company.contract.subcontract

Using Namespace totvs.protheus.health.plans.api.util

/*/{Protheus.doc} SubcontractService
Classe de serviço de SubContratos - Regra de Negócio

@type class
@author Vinicius Queiros Teixeira
@since 08/02/2023
@version Protheus 12
/*/
Class SubcontractService From BaseService

    Private Data oAdapter As Object

  	Public Method new() Constructor
    Public Method getSubcontracts() As Logical

EndClass

/*/{Protheus.doc} new
Método construtor da classe

@type method
@author Vinicius Queiros Teixeira
@since 08/02/2023
@version Protheus 12
/*/
Method new() Class SubcontractService

    _Super:new()

Return Self

/*/{Protheus.doc} getContracts
Método responsavel por retornar as paginas de subContratos do Contrato da empresa

@type method
@author Vinicius Queiros Teixeira
@since 08/02/2023
@version Protheus 12
/*/
Method getSubcontracts() As Logical Class SubcontractService

    Local lSucess := .F. As Logical
    Local aKeys := {} As Array

    // Chaves do qpath param e do headers obrigatórios na api
    aAdd(aKeys, {"type" : "pathParams", "key" : "companyCode"})
    aAdd(aKeys, {"type" : "pathParams", "key" : "contractCode"})
    aAdd(aKeys, {"type" : "queryParams", "key" : "health-insurer-code"})

    If Self:checkRequiredKeys(aKeys, "E001")
        BG9->(DbSetOrder(1))
        If BG9->(MsSeek(xFilial("BG9")+Padr(Self:jParams["health-insurer-code"], TamSX3("BG9_CODINT")[1])+Padr(Self:jPath["companyCode"], TamSX3("BG9_CODIGO")[1])))
            BT5->(DbSetOrder(1))
            If BT5->(MsSeek(xFilial("BT5")+Padr(Self:jParams["health-insurer-code"], TamSX3("BT5_CODINT")[1])+Padr(Self:jPath["companyCode"], TamSX3("BT5_CODIGO")[1])+Padr(Self:jPath["contractCode"], TamSX3("BT5_NUMCON")[1])))
                Self:oAdapter := SubcontractAdapter():New()
                Self:oAdapter:setQueryParams(Self:jParams)
                Self:oAdapter:setPathParams(Self:jPath)

                If Self:oAdapter:getPageSubcontracts()
                    lSucess := .T.
                    Self:nCodeStatus := 200
                    Self:jResult := Self:oAdapter:getJsonResult()
                EndIf
            Else
                Self:SetError("E003", "Contrato da empresa não encontrado.",;
                                      "Não foi encontrado na tabela BT5 o contrato de código "+Self:jPath["contractCode"]+" (BT5_NUMCON+BT5_VERSAO).",;
                                      404) // Not found
            EndIf
        Else
            Self:SetError("E002", "Empresa não encontrada na operadora.",;
                                  "Não foi encontrada na tabela BG9 a empresa de código "+Self:jPath["companyCode"]+" (BG9_CODIGO).",;
                                  404) // Not found
        EndIf
    EndIf
   
Return lSucess
