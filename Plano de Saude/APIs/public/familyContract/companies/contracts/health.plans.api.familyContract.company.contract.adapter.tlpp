#Include "tlpp-core.th"

Namespace totvs.protheus.health.plans.api.familyContract.company.contract

Using Namespace totvs.protheus.health.plans.api.util

/*/{Protheus.doc} ContractAdapter
Classe adaptadora de collenction de Contratos - Base de dados

@type class
@author Vinicius Queiros Teixeira
@since 08/02/2023
@version Protheus 12
/*/
Class ContractAdapter From BaseAdapter

	Public Method new() Constructor
	Public Method getPageContracts() As Logical

	Private Method mapFieldsContracts() As Logical
	Private Method getQueryContracts() As Character
	Private Method getWhereContracts() As Character
	Private Method getOrderContracts() As Character

EndClass

/*/{Protheus.doc} new
Método construtor da classe

@type method
@author Vinicius Queiros Teixeira
@since 08/02/2023
@version Protheus 12
/*/
Method new() class ContractAdapter

	_Super:new()

Return Self

/*/{Protheus.doc} getPageContracts
Método responsavel por retornar a pagina de contratos da empresa

@type method
@author Vinicius Queiros Teixeira
@since 08/02/2023
@version Protheus 12
/*/
Method getPageContracts() As Logical Class ContractAdapter

	Local lSucess := .F. As Logical
    Local cQuery := Self:getQueryContracts() As Character
    Local cWhere := Self:getWhereContracts() As Character
    Local cOrder := Self:getOrderContracts() As Character
	
	Self:mapFieldsContracts()

	If Self:executeQueryAdapter(cQuery, cWhere, cOrder)
		lSucess := .T.
	EndIf

Return lSucess

/*/{Protheus.doc} mapFieldsContracts
Método responsavel por mapear os atributos do json com os campos da tabela de contratos

@type method
@author Vinicius Queiros Teixeira
@since 08/02/2023
@version Protheus 12
/*/
Method mapFieldsContracts() As Logical Class ContractAdapter

	Self:oAdapterBase:addMapFields("company-code", "BT5_CODIGO", .T., .F., {"BT5_CODIGO", "C", TamSX3("BT5_CODIGO")[1], 0})
    Self:oAdapterBase:addMapFields("contract-code", "BT5_NUMCON", .T., .F., {"BT5_NUMCON", "C", TamSX3("BT5_NUMCON")[1], 0})
    Self:oAdapterBase:addMapFields("contract-version-code", "BT5_VERSAO", .T., .F., {"BT5_VERSAO", "C", TamSX3("BT5_VERSAO")[1], 0})
	Self:oAdapterBase:addMapFields("contract-date", "BT5_DATCON", .T., .F., {"BT5_DATCON", "C", TamSX3("BT5_DATCON")[1], 0}, Self:getFormatDate("BT5_DATCON"))
	Self:oAdapterBase:addMapFields("contract-type", "BT5_TIPCON", .T., .F., {"BT5_TIPCON", "C", TamSX3("BT5_TIPCON")[1], 0})
	Self:oAdapterBase:addMapFields("description-contract-type", "BII_DESCRI", .T., .F., {"BII_DESCRI", "C", TamSX3("BII_DESCRI")[1], 0})
	
Return .T.

/*/{Protheus.doc} getQueryContracts
Método responsavel por retornar o corpo da query que busca os contratos

@type Method
@author Vinicius Queiros Teixeira
@since 08/02/2023
@version Protheus 12
/*/
Method getQueryContracts() As Character Class ContractAdapter

	Local cQuery As Character
	
	cQuery := "SELECT #QueryFields# FROM "+RetSqlName("BT5")+" BT5 "

	If Self:jParams:hasProperty("login-user")
		// Usuario Portal x Empresa
		cQuery += " INNER JOIN "+RetSqlName("B40")+" B40 "
		cQuery += "   ON B40.B40_FILIAL = '"+xFilial("B40")+"' "
		cQuery += "  AND B40.B40_CODINT = BT5.BT5_CODINT "
		cQuery += "  AND B40.B40_CODEMP = BT5.BT5_CODIGO "
		cQuery += "  AND ((B40.B40_NUMCON = BT5.BT5_NUMCON AND B40.B40_VERCON = BT5.BT5_VERSAO) OR B40.B40_NUMCON = ' ')" // // Contrato vazio (B40_SUBCON), será retornado todos os contratos
		cQuery += "  AND B40.D_E_L_E_T_ = ' ' "
		// Usuarios do Portal
		cQuery += " INNER JOIN "+RetSqlName("BSW")+" BSW "
		cQuery += "   ON BSW.BSW_FILIAL = '"+xFilial("BSW")+"' "
		cQuery += "  AND BSW.BSW_CODUSR = B40.B40_CODUSR "
		cQuery += "  AND BSW.D_E_L_E_T_ = ' ' "
	EndIf
	// Tipos de Contratos
	cQuery += " INNER JOIN "+RetSqlName("BII")+" BII "
	cQuery += "   ON BII.BII_FILIAL = '"+xFilial("BII")+"' "
	cQuery += "  AND BII.BII_CODIGO = BT5.BT5_TIPCON "
	cQuery += "  AND BII.D_E_L_E_T_ = ' ' "

  	cQuery += " WHERE #QueryWhere#"

Return cQuery

/*/{Protheus.doc} getWhereContracts
Método responsavel por retornar o WHERE da query que busca os contratos

@type Method
@author Vinicius Queiros Teixeira
@since 08/02/2023
@version Protheus 12
/*/
Method getWhereContracts() As Character Class ContractAdapter

	Local cQuery As Character
	
	cQuery := " BT5.BT5_FILIAL = '"+xFilial("BT5")+"' AND "
    cQuery += " BT5.BT5_CODINT = '"+Self:jParams["health-insurer-code"]+"' AND "
	cQuery += " BT5.BT5_CODIGO = '"+Self:jPath["companyCode"]+"' AND "

	If Self:jParams:hasProperty("login-user")
		cQuery += " UPPER(BSW.BSW_LOGUSR) = '"+Upper(Self:jParams["login-user"])+"' AND "
	EndIf

	cQuery += " BT5.D_E_L_E_T_ = ' '"

Return cQuery

/*/{Protheus.doc} getOrderContracts
Método responsavel por retornar a ORDEM da query que busca os contratos

@type Method
@author Vinicius Queiros Teixeira
@since 08/02/2023
@version Protheus 12
/*/
Method getOrderContracts() As Character Class ContractAdapter

	Local cOrdemQuery As Character
	
	cOrdemQuery := "BT5.BT5_CODINT, BT5.BT5_CODIGO, BT5.BT5_NUMCON, BT5.BT5_VERSAO"

Return cOrdemQuery
