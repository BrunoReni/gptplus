#Include "tlpp-core.th"

Namespace totvs.protheus.health.plans.api.familyContract.beneficiary.rescissionFine

Using Namespace totvs.protheus.health.plans.api.util

/*/{Protheus.doc} BeneficiaryService
Classe de Serviço de Multa Rescisória

@type class
@author Guilherme Carreiro da Silva
@since 01/04/2023
@version Protheus 12
/*/
Class RescissionFineService From BaseService

    Private Data oService As Object

    Public Method new() Constructor
    Public Method getRescissionValue() As Logical
    Public Method setJsonResponse() As Logical
        
EndClass

/*/{Protheus.doc} new
Método construtor da classe

@type method
@author Guilherme Carreiro da Silva
@since 01/04/2023
@version Protheus 12
/*/
Method new() Class RescissionFineService

    _Super:new()

Return Self

/*/{Protheus.doc} getRescissionValue
Método responsavel por retornar o valor da multa

@type method
@author Guilherme Carreiro da Silva
@since 01/04/2023
@version Protheus 12
/*/
Method getRescissionValue() As Logical Class RescissionFineService

    Local lSucess := .F. As Logical
    Local aKeys := {} As Array

    // Chaves do path Params obrigatórios na api
    aAdd(aKeys, {"type" : "jPathParams", "key" : "subscriberId"})

    If Self:checkRequiredKeys(aKeys, "E001")

        BA1->(DbSetOrder(2))

        If !BA1->(MsSeek(xFilial("BA1")+Padr(Self:JPATH["subscriberId"],tamSX3("BA1_CODINT")[1]+tamSX3("BA1_CODEMP")[1]+tamSX3("BA1_MATRIC")[1]+tamSX3("BA1_TIPREG")[1]+tamSX3("BA1_DIGITO")[1])))
            lRetorno := .F.
            Self:setError("E002","Usuário não encontrado", "Não foi possível retornar os dados do beneficiário através da matrícula informada.",404)
        Else
            If Self:setJsonResponse()
                Self:nCodeStatus:= 200
                lSucess := .T.
            EndIf
        EndIf

    EndIf

Return lSucess

/*/{Protheus.doc} setJsonResponse
Método responsavel por processar o Json de retorno

@type method
@author Guilherme Carreiro da Silva
@since 01/04/2023
@version Protheus 12
/*/
Method setJsonResponse() As Logical Class RescissionFineService

    Local oRequest := PLBenefMulta():New() As Json
    Local oDetalhe := nil  As Json
    Local lSucess := .T. As Logical
    Local nPos As Numeric
    Local nCont As Numeric
    Local aBeneficiaries := {} As Array 
    
    If Self:JPARAMS["allFamily"] == "1"
        oRequest:setFamilia(SubStr(self:JPATH["subscriberId"],1,14))
    Else
        oRequest:setBeneficiarios({Self:JPATH["subscriberId"]})
    EndIf

    oDetalhe := oRequest:getDetalhe()
    
    Self:setAttributeJson({"attribute":"product","value":IIF(oDetalhe:hasProperty("produto"),oDetalhe['produto'],""),"type":"C"})
    Self:setAttributeJson({"attribute":"productDescription","value":IIF(oDetalhe:hasProperty("descricaoProduto"),oDetalhe['descricaoProduto'],""),"type":"C"})
    Self:setAttributeJson({"attribute":"inclusionDate","value":IIF(oDetalhe:hasProperty("dataInclusao"),STOD(oDetalhe['dataInclusao']),STOD("")),"type":"D"})
    Self:setAttributeJson({"attribute":"fidelityMonths","value":IIF(oDetalhe:hasProperty("fidelidade") .And. oDetalhe["fidelidade"]:hasProperty("quantidadeMeses"),oDetalhe['fidelidade']['quantidadeMeses'],""),"type":"N"})
    Self:setAttributeJson({"attribute":"fidelityFinalDate","value":IIF(oDetalhe:hasProperty("fidelidade") .And. oDetalhe["fidelidade"]:hasProperty("dataFinal"),STOD(oDetalhe['fidelidade']['dataFinal']),STOD("")),"type":"D"})
    Self:setAttributeJson({"attribute":"totalAmountFine","value":IIF(oDetalhe:hasProperty("valorTotalMulta"),oDetalhe['valorTotalMulta'],""),"type":"N"})

    Self:setAttributeJson({"attribute" : "beneficiaries", "value" : aBeneficiaries, "type" : "A"})
    
    if oRequest:calcular() > 0
        oDetalhe := oRequest:getDetalhe()

        Self:setAttributeJson({"attribute":"totalAmountFine","value":oDetalhe['valorTotalMulta'],"type":"N"})

        If Self:jResult:hasProperty("beneficiaries")

            For nCont := 1 to Len(oDetalhe['beneficiarios'])

                aAdd(Self:jResult["beneficiaries"], JsonObject():new())
                        nPos := Len(Self:jResult["beneficiaries"])

                Self:setAttributeJson({"attribute" : "subscriberId", "value" : oDetalhe['beneficiarios'][nCont]['idMatricula'], "type" : "C", "setResponse" : .T.}, Self:jResult["beneficiaries"][nPos])
                Self:setAttributeJson({"attribute" : "name", "value" : oDetalhe['beneficiarios'][nCont]['nome'], "type" : "C", "setResponse" : .T.}, Self:jResult["beneficiaries"][nPos])
                Self:setAttributeJson({"attribute" : "amountFine", "value" : oDetalhe['beneficiarios'][nCont]['valorMulta'], "type" : "C", "setResponse" : .T.}, Self:jResult["beneficiaries"][nPos])

            Next nCont 

        EndIf

    EndIf 

Return lSucess
