#Include "tlpp-core.th"

Namespace totvs.protheus.health.plans.api.invoicing.billingEntry

Using Namespace totvs.protheus.health.plans.api.util

/*/{Protheus.doc} BillingEntryAdapter
Classe adaptadora de collenction de Lançamentos - Base de dados

@type class
@author Guilherme Carreiro
@since 29/05/2023
@version Protheus 12
/*/
Class BillingEntryAdapter From BaseAdapter

	Public Method new() Constructor
	Public Method getPageBillingEntries() As Logical

	Private Method mapFieldsBillingEntries() As Logical
	Private Method getQueryBillingEntries() As Character
	Private Method getWhereBillingEntries() As Character
	Private Method getOrderBillingEntries() As Character

EndClass

/*/{Protheus.doc} new
Método construtor da classe

@type method
@author Guilherme Carreiro
@since 29/05/2023
@version Protheus 12
/*/
Method new() class BillingEntryAdapter

	_Super:new()

Return Self

/*/{Protheus.doc} getPageBillingEntries
Método responsavel por retornar a pagina de Lançamentos

@type method
@author Guilherme Carreiro
@since 29/05/2023
@version Protheus 12
/*/
Method getPageBillingEntries() As Logical Class BillingEntryAdapter

	Local lSucess := .F. As Logical
    Local cQuery := Self:getQueryBillingEntries() As Character
    Local cWhere := Self:getWhereBillingEntries() As Character
    Local cOrder := Self:getOrderBillingEntries() As Character
	
	Self:mapFieldsBillingEntries()

	If Self:executeQueryAdapter(cQuery, cWhere, cOrder)
		lSucess := .T.
	EndIf

Return lSucess

/*/{Protheus.doc} mapFieldsBillingEntries
Método responsavel por mapear os atributos do json com os campos da tabela de empresas

@type method
@author Guilherme Carreiro
@since 29/05/2023
@version Protheus 12
/*/
Method mapFieldsBillingEntries() As Logical Class BillingEntryAdapter

	Self:oAdapterBase:addMapFields("owner", "BFQ_PROPRI", .T., .F., {"BFQ_PROPRI", "C", TamSX3("BFQ_PROPRI")[1], 0})
	Self:oAdapterBase:addMapFields("invoice-entry-code", "BFQ_CODLAN", .T., .F., {"BFQ_CODLAN", "C", TamSX3("BFQ_CODLAN")[1], 0})
	Self:oAdapterBase:addMapFields("description", "BFQ_DESCRI", .T., .F., {"BFQ_DESCRI", "C", TamSX3("BFQ_DESCRI")[1], 0})
	Self:oAdapterBase:addMapFields("sequential", "BFQ_SEQUEN", .T., .F., {"BFQ_SEQUEN", "C", TamSX3("BFQ_SEQUEN")[1], 0})
	Self:oAdapterBase:addMapFields("type", "BFQ_DEBCRE", .T., .F., {"BFQ_DEBCRE", "C", TamSX3("BFQ_DEBCRE")[1], 0})
	Self:oAdapterBase:addMapFields("active", "BFQ_ATIVO", .T., .F., {"BFQ_ATIVO", "C", TamSX3("BFQ_ATIVO")[1], 0})
	Self:oAdapterBase:addMapFields("finance-statetment", "BFQ_EXTFIN", .T., .F., {"BFQ_EXTFIN", "C", TamSX3("BFQ_EXTFIN")[1], 0})
	
Return .T.

/*/{Protheus.doc} getQueryBillingEntries
Método responsavel por retornar o corpo da query que busca as Empresas

@type Method
@author Guilherme Carreiro
@since 29/05/2023
@version Protheus 12
/*/
Method getQueryBillingEntries() As Character Class BillingEntryAdapter

	Local cQuery As Character
		
	cQuery := "SELECT #QueryFields# FROM "+RetSqlName("BFQ")+" BFQ "
  	cQuery += " WHERE #QueryWhere#"

Return cQuery

/*/{Protheus.doc} getWhereBillingEntries
Método responsavel por retornar o WHERE da query que busca as Empresas

@type Method
@author Guilherme Carreiro
@since 29/05/2023
@version Protheus 12
/*/
Method getWhereBillingEntries() As Character Class BillingEntryAdapter

	Local cQuery As Character
	
	cQuery := " BFQ.BFQ_FILIAL = '"+xFilial("BFQ")+"' AND "
    cQuery += " BFQ.BFQ_CODINT = '"+Self:jParams["health-insurer-code"]+"' AND "

	If Self:jParams:hasProperty("is-finance-statetment") .And. Self:jParams["is-finance-statetment"] == "1"
		cQuery += " BFQ.BFQ_EXTFIN = '1' AND "
	EndIf

	cQuery += " BFQ.D_E_L_E_T_ = ' '"

Return cQuery

/*/{Protheus.doc} getOrderBillingEntries
Método responsavel por retornar a ORDEM da query que busca as Empresas

@type Method
@author Guilherme Carreiro
@since 29/05/2023
@version Protheus 12
/*/
Method getOrderBillingEntries() As Character Class BillingEntryAdapter

	Local cOrdemQuery As Character
	
	cOrdemQuery := "BFQ.BFQ_SEQUEN"

Return cOrdemQuery
