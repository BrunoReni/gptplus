#Include "tlpp-core.th"

Namespace totvs.protheus.health.plans.api.refundSetup.continuedMedication

Using Namespace totvs.protheus.health.plans.api.util

/*/{Protheus.doc} ContinuedMedicationAdapter 
Classe adaptadora de collenction de Beneficiarios - Base de dados

@type class
@author Giovanna Charlo
@since 11/04/2023
@version Protheus 12
/*/
Class ContinuedMedicationAdapter From BaseAdapter

	Public Method new() Constructor
	Public Method getPageContinuousMedications() As Logical
	Public Method getPageRefunds() As Logical
	
    Private Method mapFieldsContinuousMedications() As Logical
	Private Method getQueryContinuousMedications() As Character
	Private Method getWhereContinuousMedications() As Character
	Private Method getOrderContinuousMedications() As Character

    Private Method mapFieldsRefunds() As Logical
	Private Method getQueryRefunds() As Character
	Private Method getWhereRefunds() As Character
	Private Method getOrderRefunds() As Character

EndClass

/*/{Protheus.doc} new
Método construtor da classe

@type method
@author Giovanna Charlo
@since 11/04/2023
@version Protheus 12
/*/
Method new() class ContinuedMedicationAdapter

	_Super:new()

Return Self

/*/{Protheus.doc} mapFieldsContinuousMedications
Método responsavel por mapear os atributos do json com os campos da Consulta dos Medicamentos Contínuos

@type method
@author Giovanna Charlo
@since 11/04/2023
@version Protheus 12
/*/
Method mapFieldsContinuousMedications() As Logical Class ContinuedMedicationAdapter

	Self:oAdapterBase:addMapFields("prescription-status", "B4F_STATUS", .T., .F., {"B4F_STATUS", "C", TamSX3("B4F_STATUS")[1], 0})
	Self:oAdapterBase:addMapFields("prescription-code", "B7D_CODREC", .T., .F., {"B7D_CODREC", "C", TamSX3("B7D_CODREC")[1], 0})
	Self:oAdapterBase:addMapFields("initial-medication-date", "B7D_DTVINI", .T., .F., {"B7D_DTVINI", "C", TamSX3("B7D_DTVINI")[1], 0}, Self:getFormatDate("B7D_DTVINI"))
	Self:oAdapterBase:addMapFields("final-medication-date", "B7D_DTFVAL", .T., .F., {"B7D_DTFVAL", "C", TamSX3("B7D_DTVINI")[1], 0}, Self:getFormatDate("B7D_DTVINI"))
	Self:oAdapterBase:addMapFields("medication-code", "B7D_CODMED", .T., .F., {"B7D_CODMED", "C", TamSX3("B7D_CODMED")[1], 0})
	Self:oAdapterBase:addMapFields("medication-description", "BR8_DESCRI", .T., .F., {"BR8_DESCRI", "C", TamSX3("BR8_DESCRI")[1], 0})
    Self:oAdapterBase:addMapFields("unit-measure", "B7D_UNICON", .T., .F., {"B7D_UNICON", "C", TamSX3("B7D_UNICON")[1], 0})
    Self:oAdapterBase:addMapFields("quantity-authorized", "B7D_QTDAUT", .T., .F., {"B7D_QTDAUT", "N", TamSX3("B7D_QTDAUT")[1], 0})
    Self:oAdapterBase:addMapFields("quantity-executed", "B7D_QTDEXE", .T., .F., {"B7D_QTDEXE", "N", TamSX3("B7D_QTDEXE")[1], 0})
    Self:oAdapterBase:addMapFields("state-abbreviation", "B4F_ESTSOL", .T., .F., {"B4F_ESTSOL", "C", TamSX3("B4F_ESTSOL")[1], 0})
    Self:oAdapterBase:addMapFields("professional-council", "B4F_SIGLA", .T., .F., {"B4F_SIGLA", "C", TamSX3("B4F_SIGLA")[1], 0})
    Self:oAdapterBase:addMapFields("professional-council_number", "B4F_REGSOL", .T., .F., {"B4F_REGSOL", "C", TamSX3("B4F_REGSOL")[1], 0})
    Self:oAdapterBase:addMapFields("professional-name", "BB0_NOME", .T., .F., {"BB0_NOME", "C", TamSX3("BB0_NOME")[1], 0})  
 
Return .T.

/*/{Protheus.doc} getPageContinuousMedications
Método responsavel por retornar a resposta da Consulta dos Medicamentos Contínuos

@type method
@author Giovanna Charlo
@since 11/04/2023
@version Protheus 12
/*/
Method getPageContinuousMedications() As Logical Class ContinuedMedicationAdapter

	Local lSucess := .F. As Logical
    Local cQuery := Self:getQueryContinuousMedications() As Character
    Local cWhere := Self:getWhereContinuousMedications() As Character
	Local cOrder := Self:getOrderContinuousMedications() As Character
	
	Self:mapFieldsContinuousMedications()

	If Self:executeQueryAdapter(cQuery, cWhere, cOrder)
		lSucess := .T.
	EndIf

Return lSucess

/*/{Protheus.doc} getQueryContinuousMedications
Método responsavel por retornar o corpo da query que busca a Consulta dos Medicamentos Contínuos

@type Method
@author Giovanna Charlo
@since 11/04/2023
@version Protheus 12
/*/
Method getQueryContinuousMedications() As Character Class ContinuedMedicationAdapter

	Local cQuery As Character

    cQuery :=  "SELECT #QueryFields# FROM "+RetSqlName("B7D")+" B7D "
	cQuery += " INNER JOIN " +RetSqlName("B4F")+" B4F "
    cQuery += " ON B4F.B4F_FILIAL = '"+xFilial("B4F")+"' "
	cQuery += " AND B4F.B4F_CODREC = B7D.B7D_CODREC " 
    cQuery += " AND B4F.D_E_L_E_T_ = ' '  "
    cQuery += " INNER JOIN " +RetSqlName("BR8")+" BR8 "
	cQuery += " ON BR8.BR8_FILIAL = '"+xFilial("BR8")+"' "
    cQuery += " AND BR8.BR8_CODPAD = B7D.B7D_CODPAD  "
    cQuery += " AND BR8.BR8_CODPSA = B7D.B7D_CODMED " 
    cQuery += " AND BR8.D_E_L_E_T_ = ' '   "
    cQuery += " INNER JOIN " +RetSqlName("BB0")+" BB0 "
	cQuery += " ON BB0.BB0_FILIAL = '"+xFilial("BB0")+"' "
    cQuery += " AND BB0.BB0_ESTADO  = B4F.B4F_ESTSOL " 
    cQuery += " AND BB0.BB0_CODSIG  = B4F.B4F_SIGLA " 
    cQuery += " AND BB0.BB0_NUMCR  = B4F.B4F_REGSOL "
    cQuery += " AND BB0.D_E_L_E_T_ = ' ' " 

	cQuery += " WHERE #QueryWhere#"
   
Return cQuery

/*/{Protheus.doc} getWhereContinuousMedications
Método responsavel por retornar o WHERE da query que busca a Consulta dos Medicamentos Contínuos
@type Method
@author GiovannaCharlo

@since 11/04/2023
@version Protheus 12
/*/
Method getWhereContinuousMedications() As Character Class ContinuedMedicationAdapter

	Local cQuery As Character
    Local cFieldInitialData := Iif(GetNewPar("MV_PLVALRE", "0") == "0", "B4F.B4F_DATINI", "B7D.B7D_DTVINI") As Character
    Local cFieldFinalDate := Iif(GetNewPar("MV_PLVALRE", "0") == "0", "B4F.B4F_DATFIN", "B7D.B7D_DTFVAL") As Character
	
	cQuery := " B7D.B7D_FILIAL = '"+xFilial("B7D")+"' AND "
	cQuery += " B7D.B7D_BENEFI = '"+Self:jParams["subscriber-id"]+"' "

	If Self:jParams:hasProperty("prescription-code")
		cQuery += " AND B7D.B7D_CODREC = '"+Self:jParams["prescription-code"]+"' "
	EndIf

	If Self:jParams:hasProperty("medication-code")
		cQuery += "  AND B7D.B7D_CODMED = '"+Self:jParams["medication-code"]+"'"
	EndIf

	If Self:jParams:hasProperty("prescription-status")
		cQuery += " AND B4F.B4F_STATUS IN ("+Self:breakValueQuery(Self:jParams["prescription-status"])+")"
	EndIf

    If Self:jParams:hasProperty("expiration-date")
		Do Case
			Case Self:jParams["expiration-date"] == "1" // Dentro da Validade
				cQuery += " AND "+cFieldInitialData+" <= '"+DToS(dDataBase)+"' AND "+cFieldFinalDate+" >= '"+DToS(dDataBase)+"'"

			Case Self:jParams["expiration-date"] == "2" // Fora da Validade
				cQuery += " AND "+cFieldInitialData+" >= '"+DToS(dDataBase)+"' AND "+cFieldFinalDate+" <= '"+DToS(dDataBase)+"'"
		EndCase		
	EndIf

	cQuery += " AND B7D.D_E_L_E_T_ = ' ' "
  
Return cQuery

/*/{Protheus.doc} getOrderContinuousMedications
Método responsavel por retornar a ORDEM da query que busca a Consulta dos Medicamentos Contínuos

@type Method
@author Giovanna Charlo
@since 11/04/2023
@version Protheus 12
/*/
Method getOrderContinuousMedications() As Character Class ContinuedMedicationAdapter

	Local cOrdemQuery As Character
	
	cOrdemQuery := "B7D.B7D_DTFVAL"

Return cOrdemQuery

/*/{Protheus.doc}  mapFieldsRefunds
Método responsavel por mapear os atributos do json com os campos das consultas dos medicamentos de uso continuo 
dos Protocolos de Reembolso 

@type method
@author Giovanna Charlo
@since 11/04/2023
@version Protheus 12
/*/
Method mapFieldsRefunds() As Logical Class ContinuedMedicationAdapter

	Self:oAdapterBase:addMapFields("prescription-code", "B1N_CODREC", .T., .F., {"B1N_CODREC", "C", TamSX3("B1N_CODREC")[1], 0})
	Self:oAdapterBase:addMapFields("medication-code", "B1N_CODPRO", .T., .F., {"B1N_CODPRO", "C", TamSX3("B1N_CODPRO")[1], 0})
	Self:oAdapterBase:addMapFields("medication-description", "BR8_DESCRI", .T., .F., {"BR8_DESCRI", "C", TamSX3("BR8_DESCRI")[1], 0})
	Self:oAdapterBase:addMapFields("protocol", "B1N_PROTOC", .T., .F., {"B1N_PROTOC", "C", TamSX3("B1N_PROTOC")[1], 0})
	Self:oAdapterBase:addMapFields("status", "BOW_STATUS", .T., .F., {"BOW_STATUS", "C", TamSX3("BOW_STATUS")[1], 0})
  	Self:oAdapterBase:addMapFields("request-date", "BOW_DTDIGI", .T., .F., {"BOW_DTDIGI", "C", TamSX3("BOW_DTDIGI")[1], 0}, Self:getFormatDate("BOW_DTDIGI") )
	Self:oAdapterBase:addMapFields("quantity-requested", "B1N_QTDMED", .T., .F., {"B1N_QTDMED", "N", TamSX3("B1N_QTDMED")[1], 0})
	Self:oAdapterBase:addMapFields("repayment-date", "BOW_DATPAG", .T., .F., {"BOW_DATPAG", "C", TamSX3("BOW_DATPAG")[1], 0}, Self:getFormatDate("BOW_DATPAG"))

Return .T.


/*/{Protheus.doc} getPageMedicalPrescription
Método responsavel por retornar a resposta da consulta dos medicamentos de uso continuo 
dos Protocolos de Reembolso 
@type method
@author Giovanna Charlo
@since 11/04/2023
@version Protheus 12
/*/
Method getPageRefunds() As Logical Class ContinuedMedicationAdapter

	Local lSucess := .F. As Logical
    Local cQuery := Self:getQueryRefunds() As Character
    Local cWhere := Self:getWhereRefunds() As Character
	Local cOrder := Self:getOrderRefunds() As Character
	
	Self:mapFieldsRefunds()

	If Self:executeQueryAdapter(cQuery, cWhere, cOrder)
		lSucess := .T.
	EndIf

Return lSucess

/*/{Protheus.doc} getQueryRefunds
Método responsavel por retornar o corpo da query que busca a consulta dos medicamentos de uso continuo 
dos Protocolos de Reembolso 

@type Method
@author Giovanna Charlo
@since 11/04/2023
@version Protheus 12
/*/
Method getQueryRefunds() As Character Class ContinuedMedicationAdapter

	Local cQuery As Character

    cQuery :=  "SELECT #QueryFields# FROM "+RetSqlName("B1N")+" B1N "
	cQuery += " INNER JOIN " +RetSqlName("BOW")+" BOW "
    cQuery += " ON B1N.B1N_PROTOC = BOW.BOW_PROTOC"
    cQuery += " AND BOW.D_E_L_E_T_ = ' '  "
    cQuery += " INNER JOIN " +RetSqlName("BR8")+" BR8 "
    cQuery += " ON BR8.BR8_CODPAD = B1N.B1N_CODPAD  "
    cQuery += " AND BR8.BR8_CODPSA = B1N.B1N_CODPRO  "
    cQuery += " AND BR8.D_E_L_E_T_ = ' '  "

	cQuery += " WHERE #QueryWhere# "
   
Return cQuery

/*/{Protheus.doc} getWhereRefunds
Método responsavel por retornar o WHERE da query que busca a consulta dos medicamentos de uso continuo 
dos Protocolos de Reembolso 

@author GiovannaCharlo

@since 11/04/023
@version Protheus 12
/*/
Method getWhereRefunds() As Character Class ContinuedMedicationAdapter

	Local cQuery As Character
	
	cQuery := " B1N.B1N_FILIAL = '"+xFilial("B1N")+"' AND "
	cQuery += " B1N.B1N_CODREC = '"+Self:jParams["prescription-code"]+"' AND "

	If Self:jParams:hasProperty("medication-code")
		cQuery += " B1N.B1N_CODMED = '"+Self:jParams["medication-code"]+"' AND "
	EndIf
    
	cQuery += " B1N.D_E_L_E_T_ = ' ' "
   
Return cQuery

/*/{Protheus.doc} getOrderRefunds
Método responsavel por retornar a ORDEM da query que busca a consulta dos medicamentos de uso continuo 
dos Protocolos de Reembolso 

@type Method
@author Giovanna Charlo
@since 11/04/2023
@version Protheus 12
/*/
Method getOrderRefunds() As Character Class ContinuedMedicationAdapter

	Local cOrdemQuery As Character
	
	cOrdemQuery := "B1N.B1N_CODREC"

Return cOrdemQuery