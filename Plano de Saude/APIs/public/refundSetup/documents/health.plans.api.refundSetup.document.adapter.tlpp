#Include "tlpp-core.th"

Namespace totvs.protheus.health.plans.api.refundSetup.document

Using Namespace totvs.protheus.health.plans.api.util

/*/{Protheus.doc} DocumentAdapter
Classe adaptadora de collenction de Documentos de Reembolso - Base de dados

@type class
@author Vinicius Queiros Teixeira
@since 31/03/2023
@version Protheus 12
/*/
Class DocumentAdapter From BaseAdapter

	Public Method new() Constructor
	Public Method getPageDocuments() As Logical

	Private Method mapFieldsDocuments() As Logical
	Private Method getQueryDocuments() As Character
	Private Method getWhereDocuments() As Character
	Private Method getOrderDocuments() As Character

EndClass

/*/{Protheus.doc} new
Método construtor da classe

@type method
@author Vinicius Queiros Teixeira
@since 31/03/2023
@version Protheus 12
/*/
Method new() class DocumentAdapter

	_Super:new()

Return Self

/*/{Protheus.doc} getPageDocuments
Método responsavel por retornar a pagina de Documentos de Reembolso

@type method
@author Vinicius Queiros Teixeira
@since 31/03/2023
@version Protheus 12
/*/
Method getPageDocuments() As Logical Class DocumentAdapter

	Local lSucess := .F. As Logical
    Local cQuery := Self:getQueryDocuments() As Character
    Local cWhere := Self:getWhereDocuments() As Character
    Local cOrder := Self:getOrderDocuments() As Character
	
	Self:mapFieldsDocuments()

	If Self:executeQueryAdapter(cQuery, cWhere, cOrder)
		lSucess := .T.
	EndIf

Return lSucess

/*/{Protheus.doc} mapFieldsDocuments
Método responsavel por mapear os atributos do json com os campos dos tipos de documentos
do reembolso

@type method
@author Vinicius Queiros Teixeira
@since 31/03/2023
@version Protheus 12
/*/
Method mapFieldsDocuments() As Logical Class DocumentAdapter

	Self:oAdapterBase:addMapFields("code", "BBS_COD", .T., .F., {"BBS_COD", "C", TamSX3("BBS_COD")[1], 0})
	Self:oAdapterBase:addMapFields("description", "BBS_DESCRI", .T., .F., {"BBS_DESCRI", "C", TamSX3("BBS_DESCRI")[1], 0})
	Self:oAdapterBase:addMapFields("image-href", "BBS_IMG", .T., .F., {"BBS_IMG", "C", TamSX3("BBS_IMG")[1], 0})
	Self:oAdapterBase:addMapFields("required", "BBS_OBRIGA", .T., .F., {"BBS_OBRIGA", "C", TamSX3("BBS_OBRIGA")[1], 0})
	
Return .T.

/*/{Protheus.doc} getQueryDocuments
Método responsavel por retornar o corpo da query que busca os tipos de documentos

@type Method
@author Vinicius Queiros Teixeira
@since 31/03/2023
@version Protheus 12
/*/
Method getQueryDocuments() As Character Class DocumentAdapter

	Local cQuery As Character

	cQuery := "SELECT #QueryFields# FROM "+RetSqlName("BBS")+" BBS "
    cQuery += " WHERE #QueryWhere#"
 
Return cQuery

/*/{Protheus.doc} getWhereDocuments
Método responsavel por retornar o WHERE da query que busca os Tipos de documentos

@type Method
@author Vinicius Queiros Teixeira
@since 31/03/2023
@version Protheus 12
/*/
Method getWhereDocuments() As Character Class DocumentAdapter

	Local cQuery As Character
	
	cQuery := " BBS.BBS_FILIAL = '"+xFilial("BBS")+"' AND "

    // Filtros simples da api (propriedade=valor)
	If Self:jParams:hasProperty("code")
		cQuery += " BBS.BBS_COD = '"+Self:jParams["code"]+"' AND "
	EndIf

    If Self:jParams:hasProperty("description")
		cQuery += " UPPER(BBS.BBS_DESCRI) LIKE '%"+Upper(Self:jParams["description"])+"%' AND "
	EndIf

    If Self:jParams:hasProperty("required")
		cQuery += " BBS.BBS_OBRIGA = '"+Self:jParams["required"]+"' AND "
	EndIf

	cQuery += " BBS.D_E_L_E_T_ = ' ' "

Return cQuery

/*/{Protheus.doc} getOrderDocuments
Método responsavel por retornar a ORDEM da query que busca os tipos de documentos

@type Method
@author Vinicius Queiros Teixeira
@since 31/03/2023
@version Protheus 12
/*/
Method getOrderDocuments() As Character Class DocumentAdapter

	Local cOrdemQuery As Character
	
	cOrdemQuery := "BBS.BBS_COD"

Return cOrdemQuery
