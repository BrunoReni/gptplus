#Include "tlpp-core.th"
#Include "tlpp-rest.th"

Namespace totvs.protheus.health.plans.api.attendance.authorization.protocol

/*/{Protheus.doc} AuthorizationProtocolController
Classe controladora das APIs de Protocolo de Autorização

@type class
@author Vinicius Queiros Teixeira
@since 21/03/2023
@version Protheus 12
/*/
Class AuthorizationProtocolController

    Private Data oService As Object

    Public Method new() Constructor

    @POST("/totvsHealthPlans/attendance/v1/authorizations/protocols")
    Public Method apiPostAuthorizationProtocol()

    @GET("/totvsHealthPlans/attendance/v1/authorizations/:subscriberId/protocols") 
    Public Method apiGetAuthorization()

    @GET("/totvsHealthPlans/attendance/v1/authorizations/protocols/:protocolId/interactions") 
    Public Method apiGetInteractions()

    @POST("/totvsHealthPlans/attendance/v1/authorizations/protocols/attachments") 
    Public Method apiPostProtocolsAttachment()


EndClass

/*/{Protheus.doc} new
Método construtor da classe

@type method
@author Vinicius Queiros Teixeira
@since 21/03/2023
@version Protheus 12
/*/
Method new() Class AuthorizationProtocolController
Return Self

/*/{Protheus.doc} apiPostAuthorizationProtocol
Método responsável por cadastrar um novo protocolo de autorização 
para o beneficiário
Url: /totvsHealthPlans/attendance/v1/authorizations/protocols
Verbo: POST

@type method
@author Vinicius Queiros Teixeira
@since 21/03/2023
@version Protheus 12
/*/
Method apiPostAuthorizationProtocol() Class AuthorizationProtocolController

    Local cBody := oRest:getBodyRequest() As Character

    Self:oService := AuthorizationProtocolService():new()

    If Self:oService:setBodyString(cBody, "E001")
        If Self:oService:postAuthorizationProtocol()
            oRest:setResponse(Self:oService:getJsonResult())
            oRest:setStatusCode(Self:oService:getStatusCode())
        Else
            oRest:setFault(Self:oService:getJsonResult())
            oRest:setStatusCode(Self:oService:getStatusCode())
        EndIf
    Else
        oRest:setFault(Self:oService:getJsonResult())
        oRest:setStatusCode(Self:oService:getStatusCode())
    EndIf

    oRest:setKeyHeaderResponse("Content-Type", "application/json")

Return

/*/{Protheus.doc} apiGetAuthorization
Método responsável pela api que retorna as solicitações de autorizações
Url: /totvsHealthPlans/attendence/v1/authorization
Verbo: GET

@type method
@author Gabriela Cattin
@since 14/03/2023
@version Protheus 12
/*/
Method apiGetAuthorization() Class AuthorizationProtocolController

    Local jPathParams := oRest:getPathParamsRequest() As Json
    Local jQueryParams := oRest:getQueryRequest() As Json
    
    Self:oService := AuthorizationProtocolService():new()
    Self:oService:setPathParams(jPathParams)
    Self:oService:setQueryParams(jQueryParams)

    If Self:oService:getAuthorizationProtocol()
        oRest:setResponse(Self:oService:getJsonResult())
        oRest:setStatusCode(Self:oService:getStatusCode())
    Else
        oRest:setFault(Self:oService:getJsonResult())
        oRest:setStatusCode(Self:oService:getStatusCode())
    EndIf

    oRest:setKeyHeaderResponse("Content-Type", "application/json")

Return

/*/{Protheus.doc} apiGetInteractions
Método responsável pela api que retorna as interações das solicitação de autorização
Url: /totvsHealthPlans/attendence/v1/authorization
Verbo: GET

@type method
@author Gabriela Cattin
@since 17/03/2023
@version Protheus 12
/*/

Method apiGetInteractions() Class AuthorizationProtocolController

    Local jPathParams := oRest:getPathParamsRequest() As Json
    Local jQueryParams := oRest:getQueryRequest() As Json
    
    Self:oService := AuthorizationProtocolService():new()
    Self:oService:setPathParams(jPathParams)
    Self:oService:setQueryParams(jQueryParams)

    If Self:oService:getInteractionsProtocol()
        oRest:setResponse(Self:oService:getJsonResult())
        oRest:setStatusCode(Self:oService:getStatusCode())
    Else
        oRest:setFault(Self:oService:getJsonResult())
        oRest:setStatusCode(Self:oService:getStatusCode())
    EndIf

    oRest:setKeyHeaderResponse("Content-Type", "application/json")

Return

/*/{Protheus.doc} apiPostProtocolsAttachment
Método responsável por cadastrar anexos na solicitação de autorização
Url: /totvsHealthPlans/attendance/v1/authorizations/protocols/attachments
Verbo: POST

@type method
@author Gabriela Cattin Gomes
@since 23/03/23
@version Protheus 12
/*/
Method apiPostProtocolsAttachment() Class AuthorizationProtocolController

    Local cBody := oRest:getBodyRequest() As Character

    Self:oService := AuthorizationProtocolService():new()

    If Self:oService:setBodyString(cBody, "E001")
        If Self:oService:postProtocolsAttachment()
            oRest:setResponse(Self:oService:getJsonResult())
            oRest:setStatusCode(Self:oService:getStatusCode())
        Else
            oRest:setFault(Self:oService:getJsonResult())
            oRest:setStatusCode(Self:oService:getStatusCode())
        EndIf
    Else
        oRest:setFault(Self:oService:getJsonResult())
        oRest:setStatusCode(Self:oService:getStatusCode())
    EndIf
    
    oRest:setKeyHeaderResponse("Content-Type", "application/json")

Return