#include "tlpp-core.th"
#include "tlpp-rest.th"

namespace totvs.protheus.health.plans.api.attendance.refund.expense

/*/{Protheus.doc} ExpenseController
Classe controladora das APIs de despesas do protocolo de reembolso

@type class
@version Protheus 12.1.2310
@author vinicius.queiros
@since 02/05/2023
/*/
class ExpenseController

    private data oService as object

    public method new() constructor
  
    @GET("/totvsHealthPlans/attendance/v1/refunds/:protocol/expenses")
    public method apiGetExpenses()

    @DELETE("/totvsHealthPlans/attendance/v1/refunds/:protocol/expenses/:sequential")
    public method apiDeleteExpenses()

    @POST("/totvsHealthPlans/attendance/v1/refunds/expenses")
    public method apiPostExpenses()

    @PUT("/totvsHealthPlans/attendance/v1/refunds/:protocol/expenses/:sequential")
    public method apiPutExpenses()

    @GET("/totvsHealthPlans/attendance/v1/refunds/:protocol/expenses/:sequential/reasonDenied")
    public method apiGetReasonDenied()

endclass

/*/{Protheus.doc} new
Contrutor da classe

@type method
@version Protheus 12.1.2310  
@author vinicius.queiros
@since 02/05/2023
@return object, objecto da classe ExpenseController
/*/
method new() class ExpenseController
return self

/*/{Protheus.doc} apiGetExpenses
API responsavél por retornar as despesas do protocolo de reembolso

@type method
@version Protheus 12.1.2310 
@author vinicius.queiros
@since 02/05/2023
/*/
method apiGetExpenses() class ExpenseController

    local jQueryParams := oRest:getQueryRequest() as json
    local jPathParams := oRest:getPathParamsRequest() as json

    self:oService := ExpenseService():new()
    self:oService:setQueryParams(jQueryParams)
    self:oService:setPathParams(jPathParams)

    if self:oService:getExpenses()
        oRest:setResponse(self:oService:getJsonResult())
        oRest:setStatusCode(self:oService:getStatusCode())
    else
        oRest:setFault(self:oService:getJsonResult())
        oRest:setStatusCode(self:oService:getStatusCode())
    endif

    oRest:setKeyHeaderResponse("Content-Type", "application/json")
    
return

/*/{Protheus.doc} apiDeleteExpenses
API responsavél por deletar as despesas do protocolo de reembolso

@type method
@version Protheus 12.1.2310 
@author vinicius.queiros
@since 03/05/2023
/*/
method apiDeleteExpenses() class ExpenseController

    local jPathParams := oRest:getPathParamsRequest() as json
    
    self:oService := ExpenseService():new()
    self:oService:setPathParams(jPathParams)

    if self:oService:deleteExpenses()
        oRest:setStatusCode(self:oService:getStatusCode())
    else
        oRest:setFault(self:oService:getJsonResult())
        oRest:setStatusCode(self:oService:getStatusCode())

        oRest:setKeyHeaderResponse("Content-Type", "application/json")
    endif

return

/*/{Protheus.doc} apiPostExpenses
API responsavél por adicionar uma nova despesa ao protocolo de reembolso

@type method
@version Protheus 12.1.2310 
@author vinicius.queiros
@since 29/05/2023
/*/
method apiPostExpenses() class ExpenseController

    local cBody := oRest:getBodyRequest() as character

    self:oService := ExpenseService():new()

    if self:oService:setBodyString(cBody, "E001")
        if self:oService:postExpenses()
            oRest:setResponse(self:oService:getJsonResult())
            oRest:setStatusCode(self:oService:getStatusCode())
        else
            oRest:setFault(self:oService:getJsonResult())
            oRest:setStatusCode(self:oService:getStatusCode())
        endif
    else
        oRest:setFault(self:oService:getJsonResult())
        oRest:setStatusCode(self:oService:getStatusCode())
    endif

    oRest:setKeyHeaderResponse("Content-Type", "application/json")
    
return

/*/{Protheus.doc} apiPutExpenses
API responsavél por alterar as despesas do protocolo de reembolso

@type method
@version Protheus 12.1.2310 
@author vinicius.queiros
@since 03/05/2023
/*/
method apiPutExpenses() class ExpenseController

    local jPathParams := oRest:getPathParamsRequest() as json
    local cBody := oRest:getBodyRequest() as character
    
    self:oService := ExpenseService():new()
    self:oService:setPathParams(jPathParams)

    if self:oService:setBodyString(cBody, "E001")
        if self:oService:putExpenses()
            oRest:setResponse(self:oService:getJsonResult())
            oRest:setStatusCode(self:oService:getStatusCode())
        else
            oRest:setFault(self:oService:getJsonResult())
            oRest:setStatusCode(self:oService:getStatusCode())
        endif
    else
        oRest:setFault(self:oService:getJsonResult())
        oRest:setStatusCode(self:oService:getStatusCode())
    endif

    oRest:setKeyHeaderResponse("Content-Type", "application/json")

return

/*/{Protheus.doc} apiGetReasonDenied
API responsavél por retornar o motivo de ter autorizado a despesa

@type method
@version Protheus 12.1.2310 
@author vinicius.queiros
@since 02/06/2023
/*/
method apiGetReasonDenied() class ExpenseController

    local jPathParams := oRest:getPathParamsRequest() as json

    self:oService := ExpenseService():new()
    self:oService:setPathParams(jPathParams)

    if self:oService:getReasonDenied()
        oRest:setResponse(self:oService:getJsonResult())
        oRest:setStatusCode(self:oService:getStatusCode())
    else
        oRest:setFault(self:oService:getJsonResult())
        oRest:setStatusCode(self:oService:getStatusCode())
    endif

    oRest:setKeyHeaderResponse("Content-Type", "application/json")

return
