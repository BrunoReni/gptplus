#include "tlpp-core.th"
#include "tlpp-rest.th"

namespace totvs.protheus.health.plans.api.attendance.refund

/*/{Protheus.doc} RefundController
Classe controladora das APIs de Protocolo de Reembolso

@type class
@author Vinicius Queiros Teixeira
@since 11/04/2023
@version Protheus 12
/*/
class RefundController

    private data oService as Object

    public method new() constructor

    @POST("/totvsHealthPlans/attendance/v1/refunds")
    public method apiPostRefunds()

    @GET("/totvsHealthPlans/attendance/v1/refunds")
    public method apiGetRefunds()

    @DELETE("/totvsHealthPlans/attendance/v1/refunds/:protocol")
    public method apiDeleteRefunds()

    @POST("/totvsHealthPlans/attendance/v1/refunds/send")
    public method apiPostSendProtocol()

    @GET("/totvsHealthPlans/attendance/v1/refunds/:protocol/protocol/base64")
    public method apiGetProtocolBase64()

endclass

/*/{Protheus.doc} new
Método construtor da classe

@type method
@author Vinicius Queiros Teixeira
@since 11/04/2023
@version Protheus 12
/*/
method new() class RefundController
return self

/*/{Protheus.doc} apiPostRefunds
Método responsável por cadastrar protocolo de reembolso
Url: /totvsHealthPlans/attendance/v1/refunds
Verbo: POST

@type method
@author Vinicius Queiros Teixeira
@since 11/04/2023
@version Protheus 12
/*/
method apiPostRefunds() class RefundController

    local cBody := oRest:getBodyRequest() as character

    self:oService := RefundService():new()

    if self:oService:setBodyString(cBody, "E001")
        if self:oService:postRefunds()
            oRest:setResponse(self:oService:getJsonResult())
            oRest:setStatusCode(self:oService:getStatusCode())
        else
            oRest:setFault(self:oService:getJsonResult())
            oRest:setStatusCode(self:oService:getStatusCode())
        endif
    else
        oRest:setFault(self:oService:getJsonResult())
        oRest:setStatusCode(self:oService:getStatusCode())
    endif

    oRest:setKeyHeaderResponse("Content-Type", "application/json")

return

/*/{Protheus.doc} apiGetRefunds
API responsavél por retornar os protocolos de reembolsos do beneficiário

@type method
@version Protheus 12.1.2310 
@author vinicius.queiros
@since 26/04/2023
/*/
method apiGetRefunds() class RefundController

    local jQueryParams := oRest:getQueryRequest() as Json
    
    self:oService := RefundService():new()
    self:oService:setQueryParams(jQueryParams)

    if self:oService:getRefunds()
        oRest:setResponse(self:oService:getJsonResult())
        oRest:setStatusCode(self:oService:getStatusCode())
    else
        oRest:setFault(self:oService:getJsonResult())
        oRest:setStatusCode(self:oService:getStatusCode())
    endif

    oRest:setKeyHeaderResponse("Content-Type", "application/json")

return

/*/{Protheus.doc} apiDeleteRefunds
API responsavél por deletar os protocolos de reembolsos do beneficiário

@type method
@version Protheus 12.1.2310 
@author vinicius.queiros
@since 28/04/2023
/*/
method apiDeleteRefunds() class RefundController

    local jPathParams := oRest:getPathParamsRequest() as Json
    
    self:oService := RefundService():new()
    self:oService:setPathParams(jPathParams)

    if self:oService:deleteRefunds()
        oRest:setStatusCode(self:oService:getStatusCode())
    else
        oRest:setFault(self:oService:getJsonResult())
        oRest:setStatusCode(self:oService:getStatusCode())

        oRest:setKeyHeaderResponse("Content-Type", "application/json")
    endif

return

/*/{Protheus.doc} apiPostProtocol
API responsavél por enviar o reembolso com o status em aberto (Solicitação não concluida)

@type method
@version Protheus 12.1.2310
@author vinicius.queiros
@since 02/06/2023
/*/
method apiPostSendProtocol() class RefundController

    local cBody := oRest:getBodyRequest() as character

    self:oService := RefundService():new()

    if self:oService:setBodyString(cBody, "E001")
        if self:oService:postSendProtocol()
            oRest:setResponse(self:oService:getJsonResult())
            oRest:setStatusCode(self:oService:getStatusCode())
        else
            oRest:setFault(self:oService:getJsonResult())
            oRest:setStatusCode(self:oService:getStatusCode())
        endif
    else
        oRest:setFault(self:oService:getJsonResult())
        oRest:setStatusCode(self:oService:getStatusCode())
    endif

    oRest:setKeyHeaderResponse("Content-Type", "application/json")

return

/*/{Protheus.doc} apiGetProtocolBase64
API responsavel por retornar o pdf do protocolo de reembolso em arquivo base64

@type method
@version Protheus 12.1.2310
@author vinicius.queiros
@since 07/06/2023
/*/
method apiGetProtocolBase64() class RefundController

    local jPathParams := oRest:getPathParamsRequest() as json
    
    self:oService := RefundService():new()
    self:oService:setPathParams(jPathParams)

    if self:oService:getProtocolBase64()
        oRest:setResponse(self:oService:getJsonResult())
        oRest:setStatusCode(self:oService:getStatusCode())
        
        oRest:SetKeyHeaderResponse("content-type", "application/octet-stream")
    else
        oRest:setFault(self:oService:getJsonResult())
        oRest:setStatusCode(self:oService:getStatusCode())

        oRest:setKeyHeaderResponse("Content-Type", "application/json")
    endif

return
