#include "tlpp-core.th"

namespace totvs.protheus.health.plans.api.attendance.refund.attachment

using namespace totvs.protheus.health.plans.api.util

/*/{Protheus.doc} AttachmentService
Classe responsavel por validar/processar a requisição da api dos anexos
do protocolo de reembolso

@type class
@version Protheus 12.1.2310
@author vinicius.queiros
@since 04/05/2023
/*/
class AttachmentService from BaseService
    
    public method new() constructor
    public method getAttachments() as logical
    public method postAttachments() as logical
    public method deleteAttachments() as logical
    
    private method addAttachments(cChave as character) as logical

endclass

/*/{Protheus.doc} new
Contrutor da classe

@type method
@version Protheus 12.1.2310  
@author vinicius.queiros
@since 04/05/2023
@return object, objeto da classe AttachmentService
/*/
method new() class AttachmentService

    _Super:new()

return self

/*/{Protheus.doc} getAttachments
Valida os dados recebidos pela api e processa a classe adapter para retornar
os anexos do protocolo de reembolso

@type method
@version Protheus 12.1.2310  
@author vinicius.queiros
@since 04/05/2023
/*/
method getAttachments() as logical class AttachmentService

    local lSucess := .F. as logical
    local aFields := {} as array

    aAdd(aFields, {"field" : "protocol", "required" : .T., "type" : "C", "size" : tamSX3("BOW_PROTOC")[1]})
    
    if self:checkBodyFields(aFields, "E001", self:jPath, nil, nil, "A chave do path param está inválida")
        BOW->(dbSetOrder(1)) // BOW_FILIAL + BOW_PROTOC
        if BOW->(msSeek(xFilial("BOW")+self:jPath["protocol"]))
        
            self:jResult := self:getKnowledgeBank("BOW", xFilial("BOW")+BOW->(BOW_OPEMOV+BOW_PROTOC))
            lSucess := .T.
        else
            self:setError("E002", "Protocolo de reembolso não encontrado",;
                                  "Não foi encontrado nenhum protocolo de reembolso com o numero "+self:jPath["protocol"]+" (BOW_PROTOC)",;
                                  404) // Not found
        endif
    endif
   
return lSucess

/*/{Protheus.doc} postAttachments
Realiza a inclusão de um novo anexo no protocolo de reembolso

@type method
@version Protheus 12.1.2310
@author vinicius.queiros
@since 05/05/2023
@return logical, se o anexo foi inserido com sucesso no protocolo de reembolso
/*/
method postAttachments() as logical class AttachmentService

    local lSucess := .F. as logical
    local aFields := {} as logical

    // Verifica se os campos do body estão validos
    aAdd(aFields, {"field" : "protocol", "required" : .T., "type" : "C", "size" : tamSX3("BOW_PROTOC")[1]})
    aAdd(aFields, {"field" : "attachments", "required" : .T., "type" : "A"})
    
    if self:checkBodyFields(aFields, "E002")
        BOW->(dbSetOrder(1)) // BOW_FILIAL + BOW_PROTOC
        if BOW->(msSeek(xFilial("BOW")+self:jBody["protocol"]))
            if BOW->BOW_STATUS == "A" .or. BOW->BOW_STATUS == "B" // Solicitação não concluida ou Aguardando informação do beneficiário
                if self:addAttachments(BOW->(BOW_OPEMOV+BOW_PROTOC))
                    lSucess := .T.
                    self:nCodeStatus := 201 // Create

                    if BOW->BOW_STATUS == "B" // Aguardando informação do beneficiário
						BOW->(recLock("BOW", .F.))
						    BOW->BOW_STATUS := "2" // Em analise
						BOW->(msUnLock())
					endif
                endif
            else
                self:setError("E007", "Permitido anexar documentos no protocolo somente no status de solicitação não concluida e aguardando informação do beneficiário",;
                              "Permitido somente anexar documentos no protocolo com o status (BOW_STATUS) igual a A (Solicitação não concluida) ou B (Aguardando informação do beneficiário)",;
                               400) // Bad Request
            endif
        else
            self:setError("E003", "Protocolo de reembolso não encontrado",;
                                  "Não foi encontrado nenhum protocolo de reembolso com o numero "+self:jBody["protocol"]+" (BOW_PROTOC)",;
                                  404) // Not found
        endif  
    endif

return lSucess

/*/{Protheus.doc} deleteAttachments
Deleta o anexo do reembolso enviado pelo path param da requisição

@type method
@version Protheus 12.1.2310  
@author vinicius.queiros
@since 05/05/2023
@return logical, se houve sucesso ao deletar o anexo
/*/
method deleteAttachments() as logical class AttachmentService

    local lSucess := .F. as logical
    local aFields := {} as array
    
    aAdd(aFields, {"field" : "protocol", "required" : .T., "type" : "C", "size" : tamSX3("BOW_PROTOC")[1]})
    aAdd(aFields, {"field" : "code", "required" : .T., "type" : "C", "size" : tamSX3("ACB_CODOBJ")[1]})

    if self:checkBodyFields(aFields, "E001", self:jPath, nil, nil, "As chaves do path param estão inválidas")
        BOW->(dbSetOrder(1)) // BOW_FILIAL + BOW_PROTOC
        if BOW->(msSeek(xFilial("BOW")+self:jPath["protocol"]))
            if BOW->BOW_STATUS == "A" // Solicitação não concluida

                AC9->(dbSetOrder(1)) // AC9_FILIAL + AC9_CODOBJ + AC9_ENTIDA
                if AC9->(msSeek(xFilial("AC9")+self:jPath["code"]+"BOW")) .and. alltrim(AC9->(AC9_CODENT)) == alltrim(xFilial("BOW")+BOW->(BOW_OPEMOV+BOW_PROTOC))

                    begin transaction
                        lSucess := PLSOUTCONH(AC9->(recno()))
                    end transaction

                    if lSucess
                        self:nCodeStatus := 204 // No content
                    endif
                else
                    self:setError("E004", "Anexo não encontrada para o protocolo de reembolso "+self:jPath["protocol"],;
                                  "Não foi encontrada o anexo de código "+self:jPath["code"]+" (ACB_CODOBJ) para o protocolo "+self:jPath["protocol"]+" (BOW_PROTOC)",;
                                  404) // Not found
                endif
            else
                self:setError("E003", "Não foi possível excluir o anexo pois a solicitação já esta protocolada, entre em contato com a operadora",;
                              "Permitido somente excluir anexos para protocolos com o status (BOW_STATUS) igual a A (Solicitação não concluida)",;
                               400) // Bad Request
            endif
        else
            self:setError("E002", "Protocolo de reembolso não encontrado",;
                                  "Não foi encontrado o protocolo de reembolso "+self:jPath["protocol"]+" (BOW_PROTOC) na base de dados (BOW)",;
                                  404) // Not found
        endif
    endif
   
return lSucess

/*/{Protheus.doc} addAttachments
Adiciona o anexo no banco de conhecimento para o protocolo de reembolso

@type method
@version Protheus 12.1.2310 
@author vinicius.queiros
@since 05/05/2023
@return logical, Se o anexo foi inserido com sucesso no banco de conhecimento
/*/
method addAttachments(cChave as character) as logical class AttachmentService

    local lAdd := .F. as logical
    local nX := 0 as numeric
    local aDetailsErro := {} as array
    local aFieldsAttachments := {} as array
    local jDownload as json
    local aAttachments := {} as array

    aAdd(aFieldsAttachments, {"field" : "href", "required" : .T., "type" : "C"})

    for nX := 1 to len(self:jBody["attachments"])
        if self:checkBodyFields(aFieldsAttachments, "E004", self:jBody["attachments"][nX], @aDetailsErro, .F.)
            jDownload := self:fileDownload(self:jBody["attachments"][nX]["href"])

            if jDownload["sucess"]
                aAdd(aAttachments, {"fileDirectory" : jDownload["fileDirectory"]})
            else
                aAdd(aDetailsErro, {"code" : "E005-400",; // Bad Request
                                    "message" : jDownload["message"],;
                                    "detailedMessage" : jDownload["detailedMessage"]})
            endif
        endif
    next nX

    if len(aDetailsErro) == 0
        if self:addknowledgeBank(aAttachments, "BOW", xFilial("BOW")+cChave)
            self:jResult := self:getKnowledgeBank("BOW", xFilial("BOW")+cChave)
            lAdd := .T.
        endif
    else
        self:setError("E006", "Dados inválidos para realizar a inclusão dos anexos",;
                              "Verifique os detalhes dos erros no campo details",;
                              400,; // Bad Request
                              aDetailsErro)
    endif

return lAdd
