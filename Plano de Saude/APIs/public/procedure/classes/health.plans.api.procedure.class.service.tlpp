#Include "tlpp-core.th"

Namespace totvs.protheus.health.plans.api.procedures.classProcedure

Using Namespace totvs.protheus.health.plans.api.util

/*/{Protheus.doc} ClassService
Classe de serviço de Classes de Procedimentos - Regra de Negócio

@type class
@author Vinicius Queiros Teixeira
@since 05/04/2023
@version Protheus 12
/*/
Class ClassService From BaseService

    Private Data oAdapter As Object

    Public Method new() Constructor
    Public Method getClasses() As Logical
    Public Method getProcedures() As Logical

EndClass

/*/{Protheus.doc} new
Método construtor da classe

@type method
@author Vinicius Queiros Teixeira
@since 05/04/2023
@version Protheus 12
/*/
Method new() Class ClassService

    _Super:new()

Return Self

/*/{Protheus.doc} getClasses
Método responsavel por retornar as paginas de Classes de procedimentos

@type method
@author Vinicius Queiros Teixeira
@since 05/04/2023
@version Protheus 12
/*/
Method getClasses() As Logical Class ClassService

    Local lSucess := .F. As Logical
    Local aKeys := {} As Array

    aAdd(aKeys, {"type" : "queryParams", "key" : "health-insurer-code"})
 
    If Self:checkRequiredKeys(aKeys, "E001")
        Self:oAdapter := ClassAdapter():New()
        Self:oAdapter:setQueryParams(Self:jParams)
        Self:oAdapter:setLinks({"rel" : "procedures",;
                                "url" : "/totvsHealthPlans/procedure/v1/classes",;
                                "paths" : {{"path" : {"class-code"}, "resource" : "procedures"}};
                                })

        If Self:oAdapter:getPageClasses()
            lSucess := .T.
            Self:nCodeStatus := 200 // Ok
            Self:jResult := Self:oAdapter:getJsonResult()
        EndIf
    EndIf

Return lSucess

/*/{Protheus.doc} getProcedures
Método responsavel por retornar as paginas de procedimentos da classe

@type method
@author Vinicius Queiros Teixeira
@since 06/04/2023
@version Protheus 12
/*/
Method getProcedures() As Logical Class ClassService

    Local lSucess := .F. As Logical
    Local aKeys := {} As Array

    aAdd(aKeys, {"type" : "pathParams", "key" : "classId"})
    
    If Self:checkRequiredKeys(aKeys, "E001")
        Self:oAdapter := ClassAdapter():New()
        Self:oAdapter:setQueryParams(Self:jParams)
        Self:oAdapter:setPathParams(Self:jPath)
      
        If Self:oAdapter:getPageProcedures()
            lSucess := .T.
            Self:nCodeStatus := 200 // Ok
            Self:jResult := Self:oAdapter:getJsonResult()
        EndIf
    EndIf

Return lSucess
