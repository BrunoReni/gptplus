#Include "tlpp-core.th"

Namespace totvs.protheus.health.plans.api.procedures.classProcedure

Using Namespace totvs.protheus.health.plans.api.util

/*/{Protheus.doc} ClassAdapter
Classe adaptadora de collenction de Classes de Procedimentos - Base de dados

@type class
@author Vinicius Queiros Teixeira
@since 05/04/2023
@version Protheus 12
/*/
Class ClassAdapter From BaseAdapter

	Public Method new() Constructor
	Public Method getPageClasses() As Logical
	Public Method getPageProcedures() As Logical

	Private Method mapFieldsClasses() As Logical
	Private Method getQueryClasses() As Character
	Private Method getWhereClasses() As Character
	Private Method getOrderClasses() As Character

	Private Method mapFieldsProcedures() As Logical
	Private Method getQueryProcedures() As Character
	Private Method getWhereProcedures() As Character
	Private Method getOrderProcedures() As Character

	Private Method getCodeStandardTableRefund() As Character

EndClass

/*/{Protheus.doc} new
Método construtor da classe

@type method
@author Vinicius Queiros Teixeira
@since 05/04/2023
@version Protheus 12
/*/
Method new() class ClassAdapter

	_Super:new()

Return Self

/*/{Protheus.doc} getPageClasses
Método responsavel por retornar a pagina de Classes de Procedimentos

@type method
@author Vinicius Queiros Teixeira
@since 05/04/2023
@version Protheus 12
/*/
Method getPageClasses() As Logical Class ClassAdapter

	Local lSucess := .F. As Logical
    Local cQuery := Self:getQueryClasses() As Character
    Local cWhere := Self:getWhereClasses() As Character
    Local cOrder := Self:getOrderClasses() As Character
	
	Self:mapFieldsClasses()

	If Self:executeQueryAdapter(cQuery, cWhere, cOrder)
		lSucess := .T.
	EndIf

Return lSucess

/*/{Protheus.doc} mapFieldsClasses
Método responsavel por mapear os atributos do json com os campos das classes de 
procedimentos

@type method
@author Vinicius Queiros Teixeira
@since 05/04/2023
@version Protheus 12
/*/
Method mapFieldsClasses() As Logical Class ClassAdapter

	Self:oAdapterBase:addMapFields("class-code", "BJE_CODIGO", .T., .F., {"BJE_CODIGO", "C", TamSX3("BJE_CODIGO")[1], 0})
	Self:oAdapterBase:addMapFields("description", "BJE_DESCRI", .T., .F., {"BJE_DESCRI", "C", TamSX3("BJE_DESCRI")[1], 0})
	Self:oAdapterBase:addMapFields("is-medication", "BJE_ISMEDI", .T., .F., {"BJE_ISMEDI", "C", TamSX3("BJE_ISMEDI")[1], 0})
	Self:oAdapterBase:addMapFields("class-type", "BJE_TIPO", .T., .F., {"BJE_TIPO", "C", TamSX3("BJE_TIPO")[1], 0})
    Self:oAdapterBase:addMapFields("standard-table-code", "BJE_CODPAD", .T., .F., {"BJE_CODPAD", "C", TamSX3("BJE_CODPAD")[1], 0})
    Self:oAdapterBase:addMapFields("standard-procedure-code", "BJE_CODPRO", .T., .F., {"BJE_CODPRO", "C", TamSX3("BJE_CODPRO")[1], 0})
    Self:oAdapterBase:addMapFields("procedure-description", "BR8_DESCRI", .T., .F., {"BR8_DESCRI", "C", TamSX3("BR8_DESCRI")[1], 0})
  
Return .T.

/*/{Protheus.doc} getQueryClasses
Método responsavel por retornar o corpo da query que busca as classes de procedimentos

@type Method
@author Vinicius Queiros Teixeira
@since 05/04/2023
@version Protheus 12
/*/
Method getQueryClasses() As Character Class ClassAdapter

	Local cQuery As Character

	cQuery := "SELECT #QueryFields# FROM "+RetSqlName("BJE")+" BJE "
	cQuery += "LEFT JOIN "+RetSqlName("BR8")+" BR8 " 
	cQuery += "  ON BR8_FILIAL = '"+xFilial("BR8")+"'
	cQuery += " AND BR8.BR8_CODPAD = BJE.BJE_CODPAD "
	cQuery += " AND BR8.BR8_CODPSA = BJE.BJE_CODPRO "
	cQuery += " AND BR8.D_E_L_E_T_ = ' ' "
    cQuery += " WHERE #QueryWhere#"
 
Return cQuery

/*/{Protheus.doc} getWhereClasses
Método responsavel por retornar o WHERE da query que busca as classes de procedimentos

@type Method
@author Vinicius Queiros Teixeira
@since 05/04/2023
@version Protheus 12
/*/
Method getWhereClasses() As Character Class ClassAdapter

	Local cQuery As Character
	
	cQuery := " BJE.BJE_FILIAL = '"+xFilial("BJE")+"' AND "
	cQuery += " BJE.BJE_CODINT = '"+Self:jParams["health-insurer-code"]+"' AND "

    // Filtros simples da api (propriedade=valor)
	If Self:jParams:hasProperty("class-code")
		cQuery += " BJE.BJE_CODIGO = '"+Self:jParams["class-code"]+"' AND "
	EndIf

	If Self:jParams:hasProperty("is-medication")
		cQuery += " BJE.BJE_ISMEDI = '"+Self:jParams["is-medication"]+"' AND "
	EndIf

	If Self:jParams:hasProperty("class-type")
		cQuery += " BJE.BJE_TIPO = '"+Self:jParams["class-type"]+"' AND "
	EndIf

	If Self:jParams:hasProperty("has-procedures") .And. Self:jParams["has-procedures"] == "1" // 1 = Sim
		cQuery += " EXISTS( SELECT BR8EXIST.BR8_CODPSA FROM "+RetSqlName("BR8")+" BR8EXIST "
		cQuery += " WHERE BR8EXIST.BR8_FILIAL = '"+xFilial("BR8")+"'"
		cQuery += "   AND BR8EXIST.BR8_CLASSE = BJE.BJE_CODIGO "
		If Self:jParams:hasProperty("is-beneficiary-portal")
			cQuery += " AND BR8EXIST.BR8_EXPBEN = '"+Self:jParams["is-beneficiary-portal"]+"' "
		EndIf
		cQuery += "   AND BR8EXIST.D_E_L_E_T_ = ' ' "
		cQuery += " ) AND "
	EndIf
	
	cQuery += " BJE.D_E_L_E_T_ = ' ' "

Return cQuery

/*/{Protheus.doc} getOrderClasses
Método responsavel por retornar a ORDEM da query que busca as classes de procedimentos

@type Method
@author Vinicius Queiros Teixeira
@since 05/04/2023
@version Protheus 12
/*/
Method getOrderClasses() As Character Class ClassAdapter

	Local cOrdemQuery As Character
	
	cOrdemQuery := "BJE.BJE_CODIGO"

Return cOrdemQuery

/*/{Protheus.doc} getPageProcedures
Método responsavel por retornar a pagina de procedimentos da classe

@type method
@author Vinicius Queiros Teixeira
@since 06/04/2023
@version Protheus 12
/*/
Method getPageProcedures() As Logical Class ClassAdapter

	Local lSucess := .F. As Logical
    Local cQuery := Self:getQueryProcedures() As Character
    Local cWhere := Self:getWhereProcedures() As Character
    Local cOrder := Self:getOrderProcedures() As Character
	
	Self:mapFieldsProcedures()

	If Self:executeQueryAdapter(cQuery, cWhere, cOrder)
		lSucess := .T.
	EndIf

Return lSucess

/*/{Protheus.doc} mapFieldsProcedures
Método responsavel por mapear os atributos do json com os campos dos procedimentos
da classe

@type method
@author Vinicius Queiros Teixeira
@since 06/04/2023
@version Protheus 12
/*/
Method mapFieldsProcedures() As Logical Class ClassAdapter

	Self:oAdapterBase:addMapFields("table-code", "BR8_CODPAD", .T., .F., {"BR8_CODPAD", "C", TamSX3("BR8_CODPAD")[1], 0})
	Self:oAdapterBase:addMapFields("procedure-code", "BR8_CODPSA", .T., .F., {"BR8_CODPSA", "C", TamSX3("BR8_CODPSA")[1], 0})
	Self:oAdapterBase:addMapFields("procedure-description", "BR8_DESCRI", .T., .F., {"BR8_DESCRI", "C", TamSX3("BR8_DESCRI")[1], 0})
	Self:oAdapterBase:addMapFields("active", "BR8_BENUTL", .T., .F., {"BR8_BENUTL", "C", TamSX3("BR8_BENUTL")[1], 0})
  
Return .T.

/*/{Protheus.doc} getQueryProcedures
Método responsavel por retornar o corpo da query que busca os procedimentos
da classe

@type Method
@author Vinicius Queiros Teixeira
@since 06/04/2023
@version Protheus 12
/*/
Method getQueryProcedures() As Character Class ClassAdapter

	Local cQuery As Character

	cQuery := "SELECT #QueryFields# FROM "+RetSqlName("BR8")+" BR8 "
    cQuery += " WHERE #QueryWhere#"
 
Return cQuery

/*/{Protheus.doc} getWhereProcedures
Método responsavel por retornar o WHERE da query que busca os procedimentos
da classe

@type Method
@author Vinicius Queiros Teixeira
@since 06/04/2023
@version Protheus 12
/*/
Method getWhereProcedures() As Character Class ClassAdapter

	Local cQuery As Character
	Local cCodeStandard As Character
	
	cQuery := " BR8.BR8_FILIAL = '"+xFilial("BR8")+"' AND "
	cQuery := " BR8.BR8_CLASSE = '"+Self:jPath["classId"]+"' AND "

	If Self:jParams:hasProperty("check-refund-table") .And. Self:jParams["check-refund-table"] == "1" .And. Self:jParams:hasProperty("health-insurer-code") // 1 = Sim
		cCodeStandard := Self:getCodeStandardTableRefund()
		
		If !Empty(cCodeStandard)
			cQuery += " BR8.BR8_CODPAD IN ("+cCodeStandard+") AND "
		EndIf
	EndIf

	If Self:jParams:hasProperty("is-beneficiary-portal")
		cQuery += " BR8.BR8_EXPBEN = '"+Self:jParams["is-beneficiary-portal"]+"' AND "
	EndIf

	If Self:jParams:hasProperty("procedure-code")
		cQuery += " UPPER(BR8.BR8_CODPSA) LIKE '%"+Upper(Self:jParams["procedure-code"])+"%' AND "
	EndIf

	If Self:jParams:hasProperty("procedure-description")
		cQuery += " UPPER(BR8.BR8_DESCRI) LIKE '%"+Upper(Self:jParams["procedure-description"])+"%' AND "
	EndIf

	cQuery += " BR8.D_E_L_E_T_ = ' ' "

Return cQuery

/*/{Protheus.doc} getOrderProcedures
Método responsavel por retornar a ORDEM da query que busca os procedimentos
da classe

@type Method
@author Vinicius Queiros Teixeira
@since 06/04/2023
@version Protheus 12
/*/
Method getOrderProcedures() As Character Class ClassAdapter

	Local cOrdemQuery As Character
	
	cOrdemQuery := "BR8.BR8_CODPAD, BR8.BR8_CODPSA"

Return cOrdemQuery

/*/{Protheus.doc} getCodeStandardTableRefund
Método responsavel por retornar os códigos padrão (CodPad) das tabelas de reembolso
da operadora saúde

@type Method
@author Vinicius Queiros Teixeira
@since 06/04/2023
@version Protheus 12
/*/
Method getCodeStandardTableRefund() As Character Class ClassAdapter

	Local cCodeStandard As Character
	Local cAliasTemp As Character
	Local cHealthInsurerCode := Padr(Self:jParams["health-insurer-code"], tamSX3("BA0_CODIDE")[1]+tamSX3("BA0_CODINT")[1])

	BA0->(DbSetOrder(1))
	If BA0->(MsSeek(xFilial("BA0")+cHealthInsurerCode))
		If !Empty(BA0->BA0_TBRFRE)
			BF8->(DbSetOrder(1))
			If BF8->(MsSeek(xFilial("BF8")+BA0->(BA0_CODIDE+BA0_CODINT+BA0_TBRFRE)))
				cCodeStandard += "'"+BF8->BF8_CODPAD+"'"
			EndIf
		EndIf

		cAliasTemp := getNextAlias()
		BeginSql Alias cAliasTemp	
			SELECT BF8.BF8_CODPAD FROM %table:B7T% B7T 
			INNER JOIN %table:BF8% BF8
				 ON BF8.BF8_FILIAL = %xFilial:BF8%
				AND BF8.BF8_CODINT = B7T.B7T_CODINT
				AND BF8.BF8_CODIGO = B7T.B7T_TABREE
				AND BF8.%NotDel%
			WHERE B7T.B7T_FILIAL = %xFilial:B7T% 
			  AND B7T.B7T_CODINT = %Exp:cHealthInsurerCode%
			  AND B7T.%NotDel% 
		EndSql
		
		While !(cAliasTemp)->(Eof())
			cCodeStandard += IIf(Empty(cCodeStandard), "'"+(cAliasTemp)->BF8_CODPAD+"'", ",'"+(cAliasTemp)->BF8_CODPAD+"'")

			(cAliasTemp)->(DbSkip())
		EndDo

		(cAliasTemp)->(DbCloseArea())
	EndIf

Return cCodeStandard
