#INCLUDE 'protheus.ch'
#INCLUDE 'restful.ch'

//-------------------------------------------------------------------
/*/{Protheus.doc} PLPegTransferSvc
Realiza a transferencia de guias em PEGS temporarias para PEGS de faturamento

@author  sakai
@version P12
@since   04/10/2022
/*/
//------------------------------------------------------------------- 
class PLPegTransferSvc from CenRequest 

    Data nTotGuias as Integer
    Data nStatus as Integer
    Data oError as Object
    Data oResult as Object
    Data oObjRequest as Object

    Public Method New()
    Public Method vldQtdGuias()
    Public Method processa()
    Private Method getQryBD5()
    Private Method setError(nStatus, cCode, cMessage, cDetailedMessage)
    Private Method setResult(aProc)
    Private Method getTipGui()
    Public Method setObjRequest(oObjRequest)
    Public Method getError()
    Public Method getResult()
    Public Method getStatusCode()
    Public Method existField()

endClass

Method New() class PLPegTransferSvc

    self:oError    := JsonObject():new()
    self:oResult   := JsonObject():new()
    self:nTotGuias := 0
    self:nStatus   := 200

Return self

Method vldQtdGuias() class PLPegTransferSvc
    
    local nX      := 0
    local nGuias  := 0
    local cSql    := ''
    local lRet    := .T.
    local cCodLdp := PLSRETLDP(9)

    self:nTotGuias := len(self:oObjRequest['idOnHealthInsurer'])

    cSql := " SELECT COUNT (R_E_C_N_O_) AS TOTAL FROM " + retSQLName("BD5")
    cSql += " WHERE BD5_FILIAL = '"+xFilial("BD5")+"' "
    cSql += " AND ( "
    for nX := 1 to self:nTotGuias
        cGuia := self:oObjRequest['idOnHealthInsurer', nX]
        cSql += "    ( BD5_OPEMOV = '"+Substr(cGuia,01,04)+"' "
        cSql += "  AND BD5_ANOAUT = '"+Substr(cGuia,05,04)+"' "
        cSql += "  AND BD5_MESAUT = '"+Substr(cGuia,09,02)+"' "
        cSql += "  AND BD5_NUMAUT = '"+Substr(cGuia,11,08)+"' ) "
        cSql += iif(nX < self:nTotGuias," OR ","")
    next
    cSql += " ) "
    cSql += " AND BD5_CODLDP = '"+cCodLdp+"' "
    cSql += " AND BD5_TIPGUI = '"+self:getTipGui()+"' "
    cSql += " AND D_E_L_E_T_ = ' ' "

    dbUseArea(.T.,"TOPCONN",TCGENQRY(,,cSql),"TRB",.F.,.T.)
    if !TRB->(Eof())
        nGuias := TRB->TOTAL
    endIf
    TRB->(dbClosearea())

    if nGuias <> self:nTotGuias
        lRet := .F.
        self:setError(400,'0002',nil,'Nao foram encontradas no SIGAPLS todas as guias informadas para processamento')
    endIf

Return lRet

Method processa() class PLPegTransferSvc

    local aRet := {}
    local lRet := .F.
    Local cQry := self:getQryBD5()
    
    if !empty(cQry)
        aRet := PLSTRANGU2(cQry,self:nTotGuias,"BD5",self:oObjRequest['batchNumber'])
        lRet := len(aRet) > 0
    endIf
    iif(lRet, self:setResult(aRet), self:setError(400,'0001',nil,'Nao foi possivel processar a solicitacao'))
   
Return lRet

Method getQryBD5() class PLPegTransferSvc

    Local cSql := ''
    Local nX   := 0
    local cCodLdp := PLSRETLDP(9)

    if self:nTotGuias > 0 
        cSql += " SELECT "
        cSql += " BD5_CODRDA CODRDA, BD5_TIPGUI TIPGUI, "
        cSql += " BD5_CODOPE CODOPE, BD5_CODLDP CODLDP, "
        cSql += " BD5_CODPEG CODPEG, BD5_NUMERO NUMERO, "
        cSql += " BD5_ORIMOV ORIMOV, R_E_C_N_O_ IDENLINHA "
        
        cSql += " FROM " + retSQLName("BD5")
        cSql += " WHERE BD5_FILIAL = '"+xFilial("BD5")+"' "
        cSql += " AND ( "
        for nX := 1 to self:nTotGuias
            cGuia := self:oObjRequest['idOnHealthInsurer', nX]
            cSql += "(     BD5_OPEMOV = '"+Substr(cGuia,01,04)+"' "
            cSql += "  AND BD5_ANOAUT = '"+Substr(cGuia,05,04)+"' "
            cSql += "  AND BD5_MESAUT = '"+Substr(cGuia,09,02)+"' "
            cSql += "  AND BD5_NUMAUT = '"+Substr(cGuia,11,08)+"' ) "
            cSql += iif(nX < self:nTotGuias," OR ","")
        next
        cSql += " ) "
        cSql += " AND BD5_CODLDP = '"+cCodLdp+"' "
        cSql += " AND BD5_TIPGUI = '"+self:getTipGui()+"' "
        cSql += " AND D_E_L_E_T_ = ' ' "
    endIf

Return cSql

method setError(nStatus, cCode, cMessage, cDetailedMessage) class PLPegTransferSvc

    Default nStatus  := 400
    Default cCode    := '0002'
    Default cMessage := 'Bad Request'
    Default cDetailedMessage := 'O servidor nao foi capaz de entender a solicitacao'

    self:oError['status'] := nStatus
    self:oError['code'] := cCode
    self:oError['message'] := cMessage
    self:oError['detailedMessage'] := cDetailedMessage
    self:nStatus  := nStatus

return

method setResult(aProc) class PLPegTransferSvc
    self:oResult['batchNumber']  := aProc[1]
    self:oResult['value']        := aProc[2]
    self:oResult['formQuantity'] := aProc[3]
return

method setObjRequest(oObjRequest) class PLPegTransferSvc
    self:oObjRequest := oObjRequest
return

method getError() class PLPegTransferSvc
return self:oError

method getResult() class PLPegTransferSvc
return self:oResult:toJson()

method getStatusCode() class PLPegTransferSvc
return self:nStatus

Method existField(cAlias,cField) class PLPegTransferSvc
    local lRet := .T.
    if (cAlias)->(FieldPos(cField)) <= 0
        lRet := .F.
        self:setError(400,'0003',nil,'Campo '+cField+' nao encontrado no sistema de gestao SIGAPLS')
    endIf
return lRet

method getTipGui() class PLPegTransferSvc
    Local cTipGui := ''
    Do Case
        Case self:oObjRequest['authType'] == '1'
            cTipGui := '01'
        Case self:oObjRequest['authType'] == '2'
            cTipGui := '02'
        Case self:oObjRequest['authType'] == '9'
            cTipGui := '13'
    EndCase
return cTipGui