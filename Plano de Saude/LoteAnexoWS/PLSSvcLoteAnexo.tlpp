#include "fileIO.ch"
#include "protheus.ch"
#include "xmlxfun.ch"
#include "totvs.ch"

#define CRLF chr( 13 ) + chr( 10 )
#define G_ANEX_QUIM "07"
#define G_ANEX_RADI "08"
#define G_ANEX_OPME "09"

//-------------------------------------------------------------------
/*/{Protheus.doc} PLSSvcLoteAnexo
Serviço de montagem do TISS Online Lote Anexo WS

@author    Lucas Nonato
@version   V12
@since     24/10/2022
/*/
class PLSSvcLoteAnexo

	public data lSuccess
	public data cError
	public data cXml
	public data cNS
	public data cVersao
	public data oXml

    public method new() constructor
    public method processa() 
	public method addNS()

endclass

//-------------------------------------------------------------------
/*/{Protheus.doc} new

@author    Lucas Nonato
@version   V12
@since     24/10/2022
/*/
method new() class PLSSvcLoteAnexo
self:oXml    	:= tXmlManager():New()
self:lSuccess	:= .t.
return self

//-------------------------------------------------------------------
/*/{Protheus.doc} processa

@author    Lucas Nonato
@version   V12
@since     24/10/2022
/*/
method processa() class PLSSvcLoteAnexo

local cWarning 	:= ""
local cPath 	:= ""
local cSoap 	:= ""
local nPos      := 0
local aNS		:= {}
local oTiss		:= nil

B09->(dbsetorder(1))
B04->(dbsetorder(1))
BR8->(dbsetorder(1))

self:lSuccess := self:oXML:parse(self:cXml, @self:cError, @cWarning)
if self:lSuccess
	aNS             := self:oXML:xPathGetRootNsList()
	nPos            := ascan(aNS,{|x| upper(alltrim(x[1])) == upper(self:cNS) })
	if nPos > 0
		self:oXML:XPathRegisterNs( aNS[ nPos ][ 1 ],aNS[ nPos ][ 2 ] )
	else	    	
	    self:cError := "Não foi possivel identificar o Namespace"
		self:lSuccess := .f.
	endif
else
    self:cError := "Erro parse SOAP: [" + self:oXml:Error() + "]"
	self:lSuccess := .f.
endif

if self:lSuccess
	cPath := self:addNS("/loteAnexoWS/loteAnexo/AnexosGuiasTISS")
	do case
		case self:oXML:XPathHasNode( cPath + self:addNS("/anexoSolicitacaoQuimio") )			
			oTiss := PLSLoteQuimio():new()
			oTiss:cTipGui := G_ANEX_QUIM
			oTiss:cPath := cPath + self:addNS("/anexoSolicitacaoQuimio")
		case self:oXML:XPathHasNode( cPath + self:addNS("/anexoSolicitacaoRadio") )
			oTiss := PLSLoteRadio():new()
			oTiss:cTipGui := G_ANEX_RADI
			oTiss:cPath := cPath + self:addNS("/anexoSolicitacaoRadio")
		case self:oXML:XPathHasNode( cPath + self:addNS("/anexoSolicitacaoOPME") )
			oTiss := PLSLoteOpme():new()
			oTiss:cTipGui := G_ANEX_OPME
			oTiss:cPath := cPath + self:addNS("/anexoSolicitacaoOPME")
		case self:oXML:XPathHasNode( cPath + self:addNS("/anexoSituacaoInicial[1]") )	
			oTiss := PLSLoteSituacao():new()
			oTiss:cTipGui := ''
			oTiss:cPath := cPath + self:addNS("/anexoSituacaoInicial[1]")
		otherwise
			self:cError := "Transação não identificada"
			self:lSuccess := .f.
	endcase

	if self:lSuccess
		oTiss:cVersao 	:= self:cVersao
		oTiss:oXml 		:= self:oXml
		oTiss:cNS 		:= self:cNS
		oTiss:processa()
		if oTiss:lSuccess 
			oTiss:gravaAnexo() 
		endif

		cSoap := oTiss:geraResposta()
	endif	
endif

if !self:lSuccess
	cSoap := self:cError
endif

return cSoap

//-------------------------------------------------------------------
/*/{Protheus.doc} addNS

@author    Lucas Nonato
@version   V12
@since     24/10/2022
/*/
method addNS(cTag) class PLSSvcLoteAnexo

if !empty(self:cNS)
    cTag := strtran(cTag, "/", "/" + self:cNS + ":")
endif

return cTag
