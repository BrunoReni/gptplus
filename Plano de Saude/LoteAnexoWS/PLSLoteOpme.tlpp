#include "fileIO.ch"
#include "protheus.ch"
#include "xmlxfun.ch"
#include "totvs.ch"

#define CRLF chr( 13 ) + chr( 10 )

//-------------------------------------------------------------------
/*/{Protheus.doc} PLSLoteOpme
Serviço de montagem do TISS Online Lote Anexo WS

@author    Lucas Nonato
@version   V12
@since     24/10/2022
/*/
class PLSLoteOpme from PLSLoteAnexo

    public method new() constructor
	public method processaGuia() 
	public method guia()
	public method procedimentos()

endclass

//-------------------------------------------------------------------
/*/{Protheus.doc} new

@author    Lucas Nonato
@version   V12
@since     24/10/2022
/*/
method new() class PLSLoteOpme
	_Super:new()
return self

//-------------------------------------------------------------------
/*/{Protheus.doc} processaGuia

@author    Lucas Nonato
@version   V12
@since     24/10/2022
/*/
method processaGuia() class PLSLoteOpme
local nProc 	:= 1
local cTag 		:= ''

self:oJson['atendRN'] := self:oXML:XPathGetNodeValue( self:cPath + self:addNS("/dadosBeneficiario/atendimentoRN" ))
self:oJson['nomeSol']	:= self:oXML:XPathGetNodeValue( self:cPath + self:addNS("/profissionalSolicitante/nomeProfissional" ))
self:oJson['telSol']	:= self:oXML:XPathGetNodeValue( self:cPath + self:addNS("/profissionalSolicitante/telefoneProfissional" ))
self:oJson['emailSol']	:= self:oXML:XPathGetNodeValue( self:cPath + self:addNS("/profissionalSolicitante/emailProfissional" ))

self:oJson['jusTec']	:= self:oXML:XPathGetNodeValue( self:cPath + self:addNS("/justificativaTecnica" ))
self:oJson['espMat']	:= self:oXML:XPathGetNodeValue( self:cPath + self:addNS("/especificacaoMaterial" ))

self:cTagProc := self:cPath + self:addNS("/opmeSolicitadas/opmeSolicitada")
self:oJson['procedimentos']	:= {}
while self:hasNext(nProc,@cTag)
	aadd(self:oJson['procedimentos'], jsonObject():new())
	self:addProc(cTag+self:addNs("/identificacaoOPME"),nProc)
	self:oJson['procedimentos'][nProc]['opcFabric'] := self:oXML:XPathGetNodeValue( cTag + self:addNS("/opcaoFabricante" ))
	self:oJson['procedimentos'][nProc]['qtdApr']	:= val(self:oXML:XPathGetNodeValue( cTag + self:addNS("/quantidadeSolicitada" )))
	self:oJson['procedimentos'][nProc]['valorApr'] 	:= val(self:oXML:XPathGetNodeValue( cTag + self:addNS("/valorSolicitado" )))
	self:oJson['procedimentos'][nProc]['regAnv'] 	:= self:oXML:XPathGetNodeValue( cTag + self:addNS("/registroANVISA" ))
	self:oJson['procedimentos'][nProc]['cofRefFab'] := self:oXML:XPathGetNodeValue( cTag + self:addNS("/codigoRefFabricante" ))
	self:oJson['procedimentos'][nProc]['autFunc'] 	:= self:oXML:XPathGetNodeValue( cTag + self:addNS("/autorizacaoFuncionamento" ))
	self:oJson['procedimentos'][nProc]['dtProc'] 	:= date()
    nProc++
enddo
	

return 

//-------------------------------------------------------------------
/*/{Protheus.doc} guia

@author    Lucas Nonato
@version   V12
@since     24/10/2022
/*/
method guia() class PLSLoteOpme

self:montaTag( 4,"anexoOPME")
self:dadosAutorizacao()
self:montaTag( 5,"dadosBeneficiario")
self:montaTag( 6,"numeroCarteira",B4A->(B4A_OPEUSR+B4A_CODEMP+B4A_MATRIC+B4A_TIPREG+B4A_DIGITO))
self:montaTag( 6,"atendimentoRN",self:oJson['atendRN'])
self:montaTag( 5,"dadosBeneficiario",,.T.)
self:montaTag( 5,"nomebeneficiario",alltrim(B4A->B4A_NOMUSR))
self:montaTag( 5,"statusSolicitacao",B4A->B4A_STTISS)

self:montaTag( 5,"prestadorAutorizado")
self:montaTag( 6,"codigoPrestadorNaOperadora",self:oJson['codRda'])
self:montaTag( 5,"prestadorAutorizado",,.T.)
self:procedimentos()
self:montaTag( 4,"anexoOPME",,.T.)

return

//-------------------------------------------------------------------
/*/{Protheus.doc} procedimentos

@author    Lucas Nonato
@version   V12
@since     24/10/2022
/*/
method procedimentos() class PLSLoteOpme
local nX := 1

for nX:=1 to len(self:oJson['procedimentos'])
	self:montaTag( 5,"servicosAutorizadosOPME")
	self:montaTag( 6,"sequencialItem",self:oJson['procedimentos'][nX]['sequencialTiss'])
	self:montaTag( 6,"procedimento")
	self:montaTag( 7,"codigoTabela",self:oJson['procedimentos'][nX]['codPadOri'])
	self:montaTag( 7,"codigoProcedimento",self:oJson['procedimentos'][nX]['codProcOri'])
	self:montaTag( 7,"descricaoProcedimento",self:oJson['procedimentos'][nX]['desProc'])
	self:montaTag( 6,"procedimento",,.T.)
	self:montaTag( 6,"quantidadeSolicitada",cvaltochar(self:oJson['procedimentos'][nX]['qtdApr']))
	self:montaTag( 6,"quantidadeAutorizada",cvaltochar(self:oJson['procedimentos'][nX]['qtdPro']))
	self:montaTag( 6,"valorSolicitado",cvaltochar(self:oJson['procedimentos'][nX]['valorApr']))
	self:montaTag( 6,"valorAutorizado",cvaltochar(self:oJson['procedimentos'][nX]['valorAut']))
	self:motivoNegativa(self:oJson['procedimentos'][nX]['sequencial'])
	self:montaTag( 5,"servicosAutorizadosOPME",,.T.)
next

return