#include 'tlpp-core.th'
#include 'tlpp-rest.th'

#Define DEFAULT_VERB 'GET'

namespace totvs.protheus.backoffice.bindingchartofaccounts.referenceaccount.data

Class bindingchartofaccountsReferenceAccountData From FWAdapterBaseV2
    
    Public Method New()
    public Method GetPage()

EndClass

Method New() Class bindingchartofaccountsReferenceAccountData
    _Super:New( DEFAULT_VERB, .T. )
Return Self

Method GetPage() Class bindingchartofaccountsReferenceAccountData

    AddMapFields( self )
    //Informa a Query a ser utilizada pela API
    ::SetQuery( GetQuery() )
    //Informa a clausula Where da Query
    cWhere := " CVN_FILIAL = '"+ FWxFilial('CT1') +"' AND CVN.D_E_L_E_T_ = ' ' AND CVN_CLASSE ='2'"
    ::SetWhere( cWhere )
    //Informa a ordenação padrão a ser Utilizada pela Query
    ::SetOrder( "CVN_CODPLA" )
    //Executa a consulta, se retornar .T. tudo ocorreu conforme esperado
    If ::Execute()
        // Gera o arquivo Json com o retorno da Query
        ::FillGetResponse()
    EndIf

Return

Static Function AddMapFields( oSelf )  
    oSelf:AddMapFields( 'filial'    , 'CVN_FILIAL' , .T., .F., { 'CVN_FILIAL', 'C'  , TamSX3( 'CVN_FILIAL')[1]  , 0 } )
    oSelf:AddMapFields( 'codigo'    , 'CVN_CODPLA' , .T., .F., { 'CVN_CODPLA', 'C'  , TamSX3( 'CVN_CODPLA')[1]  , 0 } )    
    oSelf:AddMapFields( 'versao'    , 'CVN_VERSAO' , .T., .F., { 'CVN_VERSAO', 'C'  , TamSX3( 'CVN_VERSAO')[1]  , 0 } )    
    oSelf:AddMapFields( 'dtvigini'  , 'CVN_DTVIGI' , .T., .F., { 'CVN_DTVIGI', 'D'  , TamSX3( 'CVN_DTVIGI')[1]  , 0 } )    
    oSelf:AddMapFields( 'dtvigfim'  , 'CVN_DTVIGF' , .T., .F., { 'CVN_DTVIGF', 'D'  , TamSX3( 'CVN_DTVIGF')[1]  , 0 } )  
    oSelf:AddMapFields( 'entref'    , 'CVN_ENTREF' , .T., .F., { 'CVN_ENTREF', 'C'  , TamSX3( 'CVN_ENTREF')[1]  , 0 } )  
    oSelf:AddMapFields( 'descricao' , 'CVN_DSCPLA' , .T., .F., { 'CVN_DSCPLA', 'C'  , TamSX3( 'CVN_DSCPLA')[1]  , 0 } )
Return

Static Function GetQuery()
    Local cQuery 
    cQuery := " SELECT #QueryFields#"
    cQuery +=   " FROM " + RetSqlName( 'CVN' ) + " CVN "
    cQuery += " WHERE #QueryWhere#"
Return cQuery
