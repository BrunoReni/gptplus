#include "tlpp-core.th"

namespace totvs.protheus.backoffice.reconciliation.matchprogress

//-------------------------------------------------------------------
/*/{Protheus.doc} MatchProgressProtheusData
Classe responsável pela consulta de dados

@author Totvs
/*/
//-------------------------------------------------------------------
class MatchProgressProtheusData from FWAdapterBaseV2
    Public method new()
    Public method getAll()
    static method getData() As object
endclass

//-------------------------------------------------------------------
/*/{Protheus.doc} MatchProgressProtheusData
Metodo construtor

@author Totvs
/*/
//-------------------------------------------------------------------
method new(cVerbo as Character, lList as Logical) Class MatchProgressProtheusData
    Default cVerbo := "GET"
    Default lList  := .T.
    _Super:New(cVerbo, lList)
return

//-------------------------------------------------------------------
/*/{Protheus.doc} MatchProgressProtheusData
Método para chamada e validação do tratamento de dados

@author Totvs
/*/
//-------------------------------------------------------------------
method getData() class MatchProgressProtheusData As Object
    static __oActiveData As Object

    If ValType(__oActiveData) == "U"
        __oActiveData := MatchProgressProtheusData():new()
    EndIf
return __oActiveData

//-------------------------------------------------------------------
/*/{Protheus.doc} getAll
Metodo responsável pela busca das configuracoes do conciliador

@author Totvs
/*/
//-------------------------------------------------------------------
method getAll(cTable as Character) class MatchProgressProtheusData
    Local cQuery As Character
    Local cAliasAux := GetNextAlias()
    Local cReturn   := '{"reconciled": 0, "notreconciled": 0, "total": 0}'

    cQuery := " SELECT SUM(MATCHTRUE) MATCHTRUE, SUM(MATCHFALSE) MATCHFALSE "
    cQuery += " FROM ("
    cQuery += " SELECT COUNT(1) MATCHTRUE, 0 MATCHFALSE "
	cQuery += " FROM "+cTable+"	WHERE RECONCILED = 'S' "
    cQuery += " UNION "
    cQuery += " SELECT 	0 MATCHTRUE, COUNT(1) MATCHFALSE "
	cQuery += " FROM "+cTable+"	WHERE RECONCILED = 'N' "
    cQuery += " ) TMP "

    dbUseArea( .T., "TOPCONN", TcGenQry(,,cQuery), cAliasAux, .T., .T. )   

    If !(cAliasAux)->(Eof())
        cReturn := '{"reconciled": '+CValToChar((cAliasAux)->MATCHTRUE)+',"notreconciled": '+CValToChar((cAliasAux)->MATCHFALSE)+', "total": '+CValToChar((cAliasAux)->MATCHTRUE+(cAliasAux)->MATCHFALSE)+'}'    
    EndIf

    TCRefresh(cTable) // Resetar tempo de timeout

    (cAliasAux)->(dbCloseArea())

return cReturn
