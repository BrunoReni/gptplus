#Include "BACKOFFICE.RECONCILIATION.TABLESLINK.DATA.PROTHEUS.ch"
#include "tlpp-core.th"

namespace totvs.protheus.backoffice.reconciliation.tableslink
using namespace totvs.protheus.backoffice.reconciliation.util

//-------------------------------------------------------------------
/*/{Protheus.doc} TablesLinkProtheusData
Classe responsável pela consulta de dados

@author Totvs
/*/
//-------------------------------------------------------------------
class TablesLinkProtheusData from FWAdapterBaseV2
    Public method new()
    Public method getAll()
    Private method retJsonPadraoCT2()
    Private method retJsonChaveSX9()
    Static method getData() As object    
    Static method retCpoUUID()
endclass

//-------------------------------------------------------------------
/*/{Protheus.doc} TablesLinkProtheusData
Metodo construtor

@author Totvs
/*/
//-------------------------------------------------------------------
method new(cVerbo as Character, lList as Logical) Class TablesLinkProtheusData
    Default cVerbo := "GET"
    Default lList  := .T.
    _Super:New(cVerbo, lList)
return

//-------------------------------------------------------------------
/*/{Protheus.doc} TablesLinkProtheusData
Método para chamada e validação do tratamento de dados

@author Totvs
/*/
//-------------------------------------------------------------------
method getData() class TablesLinkProtheusData As Object
    static __oActiveData As Object

    If ValType(__oActiveData) == "U"
        __oActiveData := TablesLinkProtheusData():new()
    EndIf
return __oActiveData

//-------------------------------------------------------------------
/*/{Protheus.doc} getAll
Metodo responsável pela busca das configuracoes do conciliador

@author Totvs
/*/
//-------------------------------------------------------------------
method getAll(cTabOri as Character, cTabDes as Character, cReturn as Character) class TablesLinkProtheusData
    Local aArea := GetArea() as Array
    Local lReturn := .F. as Logical

    If cTabOri == "CT2" .Or. cTabDes == "CT2"
        lReturn := ::retJsonPadraoCT2(cTabOri, cTabDes, @cReturn)
    Else
        lReturn := ::retJsonChaveSX9(cTabOri, cTabDes, @cReturn)
    EndIf     
    
    RestArea(aArea)
    FwFreeArray(aArea)
return lReturn

//-------------------------------------------------------------------
/*/{Protheus.doc} RetJsonPadraoCT2
Retorna a chave padrão para ligações com a CT2

@author Totvs
/*/
//-------------------------------------------------------------------
method retJsonPadraoCT2(cTabOri as Character, cTabDes as Character, cReturn as Character) class TablesLinkProtheusData
Local cCpoOri := "" as Character
Local cCpoDes := "" as Character
Local lReturn := .F. as Logical

DEFAULT cTabOri := ""
DEFAULT cTabDes := ""
DEFAULT cReturn := ""

cCpoOri := ::retCpoUUID(cTabOri) 
cCpoDes := ::retCpoUUID(cTabDes)

If !Empty(cCpoOri) .And. !Empty(cCpoDes)
    cReturn :=  '{   "cidori": "'+cCpoOri+'",'+;
                '    "ciddes": "'+cCpoDes+'",'+;
                '    "regmat": {'+;
                '        "rules": ['+;
                '            {'+;
                '                "idrule": "001",'+;
                '                "name": "regra_001",'+;
                '                "linktable": "CV3",'+;
                '                "rule": {'+;
                '                    "ori_fields": "'+cCpoOri+'",'+;
                '                    "ori_link": "'+cCpoOri+' = CV3_IDORIG",'+;
                '                    "des_fields": "'+cCpoDes+'",'+;
                '                    "des_link": "'+cCpoDes+' = CV3_IDDEST",'+;
                '                    "condition": "CV3_IDORIG <> '+"' '"+' AND CV3_IDDEST <> '+"' '"+' AND '+cCpoOri+' = CV3_IDORIG AND '+cCpoDes+' = CV3_IDDEST"'+;
                '                }'+;
                '            }'+;
                '        ]'+;
                '     }'+;
                '}'
    lReturn := .T.
Else
    cReturn := STR0001 //"Campo _MSUIDT não encontrado. Verifique as tabelas informadas."
EndIf

Return lReturn

//-------------------------------------------------------------------
/*/{Protheus.doc} RetJsonChaveSX9
Retorna a Chave SX9 das tabelas, caso exista

@author Totvs
/*/
//-------------------------------------------------------------------
method retJsonChaveSX9(cTabOri as Character, cTabDes as Character, cReturn as Character) class TablesLinkProtheusData
Local cCpoOri := "" as Character
Local cCpoDes := "" as Character
Local cCondition := "" as Character
Local lReturn := .F. as Logical
Local aCpoOri := {} as Array
Local aCpoDes := {} as Array
Local nI      := 0 as Numeric

DEFAULT cTabOri := ""
DEFAULT cTabDes := ""
DEFAULT cReturn := ""

SX9->(dbSetOrder(2))
If SX9->(dbSeek(cTabDes+cTabOri))
    cCpoOri := StrTran(SX9->X9_EXPDOM ,"+",",")
    cCpoDes := StrTran(SX9->X9_EXPCDOM,"+",",")
    aCpoOri := StrToArray(cCpoOri,",")
    aCpoDes := StrToArray(cCpoDes,",")
    cCpoUUIDOri := ::retCpoUUID(cTabOri)
    cCpoUUIDDes := ::retCpoUUID(cTabDes)

    If !Empty(cCpoUUIDOri) .And. !Empty(cCpoUUIDDes)
        
        If Len(aCpoOri) == Len(aCpoDes)
            For nI := 1 to Len(aCpoOri)
                If nI > 1
                    cCondition += " AND "
                EndIf
                cCondition += aCpoOri[nI]+" = "+aCpoDes[nI]
            Next nI
        Else
            cCondition := AllTrim(SX9->X9_EXPDOM)+" = "+AllTrim(SX9->X9_EXPCDOM)
        EndIf
                
        cReturn    :=  '{ "cidori": "'+cCpoUUIDOri+'",'+;
                        ' "ciddes": "'+cCpoUUIDDes+'",'+;
                        ' "regmat": {'+;
                        '     "rules": ['+;
                        '         {'+;
                        '             "idrule": "001",'+;
                        '             "name": "regra_001",'+;
                        '             "rule": {'+;
                        '                 "ori_fields": "'+AllTrim(cCpoOri)+'",'+;
                        '                 "des_fields": "'+AllTrim(cCpoDes)+'",'+;                
                        '                 "condition": "'+AllTrim(cCondition)+'"'+;
                        '             }'+;
                        '         }'+;
                        '     ]'+;
                        '  }'+;
                        '}'
        lReturn := .T.
    Else
        cReturn := STR0001 //"Campo _MSUIDT não encontrado. Verifique as tabelas informadas."
    EndIf
EndIf

Return lReturn

//-------------------------------------------------------------------
/*/{Protheus.doc} retCpoUUID
Retorna o campo UUID de acordo com a tabela recebida

@author Totvs
/*/
//-------------------------------------------------------------------
method retCpoUUID(cTable) class TablesLinkProtheusData
    Local cCpoUUID := "" as Character
    DEFAULT cTable := ""

    If &(cTable+"->(FieldPos('"+cTable+"_MSUIDT'))") > 0
        cCpoUUID := cTable+"_MSUIDT"
    ElseIf &(cTable+"->(FieldPos('"+SubStr(cTable,2,2)+"_MSUIDT'))") > 0
        cCpoUUID := SubStr(cTable,2,2)+"_MSUIDT"    
    EndIf
return cCpoUUID
