#include "tlpp-core.th"
#include "backoffice.reconciliation.matchsettingitems.controller.ch"

namespace totvs.protheus.backoffice.reconciliation.matchsettingitems
using namespace totvs.protheus.backoffice.reconciliation.util
using namespace totvs.protheus.backoffice.reconciliation.userprofile

//-------------------------------------------------------------------
/*/{Protheus.doc} MatchSettingItems
Classe principal de controle, onde é inicializado o EndPoint

@author Totvs
/*/
//-------------------------------------------------------------------
class MatchSettingItems
    public method new()

    @Get("/api/tc/matchsettingitems/")
    public method getAllMatchSettingItems()
endclass

//-------------------------------------------------------------------
/*/{Protheus.doc} MatchSettingItems
Metodo construtor

@author Totvs
/*/
//-------------------------------------------------------------------
method new() class MatchSettingItems
return

//-------------------------------------------------------------------
/*/{Protheus.doc} getAllMatchSettingItems
Metodo que inicia a chamada das configuracoes de match do conciliador

@author Totvs
/*/
//-------------------------------------------------------------------
method getAllMatchSettingItems() class MatchSettingItems
    Local oService  As Object
    Local oField    As Object
    Local jResposta As Json
    Local jProfile  As Json
    Local cEmpBkp   As Character
    Local cFilBkp   As Character
    Local nPage     As Numeric
    Local nPageSize As Numeric
    Local lResponse As Logical
    Local cChaveRes As Character
    Local cResponse As Character	
    Local cCodCfg   as Character
    Local oUserService as Object
    Local cProfile as Character
    Local aProfile as Array
    Local nI as Numeric
    Local cCidNotFound := "" as Character

    Local cFromWhere := "" as Character
    Local aCidFields := {} as Array

    //Inicilaiza variaveis
    oService  := MatchSettingItemsService():getInstance()
    oField    := tcTreatsFilter():new()
    jResposta := JsonObject():new()
    jProfile  := JsonObject():new()
    cEmpBkp   := cEmpAnt
    cFilBkp   := cFilAnt
    nPage     := 1
    nPageSize := 10
    lResponse := .F.
    cChaveRes := "message"
    cResponse := STR0001 //"Resposta inválida."
    oUserService := UserProfileService():getInstance()
    xValue      := oRest:getQueryRequest()
    cCodCfg     := oRest:getQueryRequest():GetJsonText("codcfg")
    cFromWhere  := oRest:getQueryRequest():GetJsonText("fromWhere") // 1 = Chamado do conciliador ou dashboard | 2 = Chamado do setup

    If ValType(cCodCfg)=="C" .And. !Empty(cCodCfg) .And. cCodCfg <> "null"        
        tcGetHeaders()
        
        tcGetPageAndPageSize(@nPage, @nPageSize)

        //Se chamado do Conciliador ou Dash, valida campo UNION
        If cFromWhere == "1" .And.; 
            ( cCodCfg == "0020" .Or. cCodCfg == "0021" .Or. cCodCfg == "0022" .Or. cCodCfg == "0025") .And.;
                QLD->(FieldPos("QLD_UNION") ) < 1

            cResponse := STR0004 //"Verifique a criação do campo QLD_UNION"
        Else
            jResposta:fromJson(oService:getAllMatchSettingItems(cCodCfg, nPage, nPageSize, cFromWhere))
        
            //Se foi chamado do conciliador ou dashboard deve ser validado a existencia dos campos de cidori e ciddes
            If cFromWhere == "1" .And. (jResposta:hasProperty('items') .And. Len(jResposta['items']))
                aCidFields := oService:validCidFieldsItems(jResposta)

                For nI := 1 to Len(aCidFields)
                    If !aCidFields[ni][2]
                        cCidNotFound += aCidFields[nI][1] + "; "
                    EndIf
                Next nI

            EndIf
        
            //Consulta profile dos filtros        
            aProfile := oUserService:getUserProfile(cCodCfg)

            If ValType(aProfile) == "A" .And. aProfile[1]
                cProfile := aProfile[2][1]
            EndIf

            If !Empty(cProfile)
                jProfile:fromJson(cProfile)            
            EndIf                
        
            oField:tcPutFieldSettings(jResposta, jProfile)
        EndIf
    Else        
        cResponse := STR0002 //"parâmetro codcfg não informado"
    EndIf

    If ValType(jResposta:GetJsonText("items")) <> "U" .And. jResposta:GetJsonText("items") <> "null"
        If cFromWhere == "1" //Chamado do conciliador, confiro o retorno da validação de existencia de campos cidori e ciddes
            If Empty(cCidNotFound) // Se o cCidNotFound estiver vazio, os campos existem, retorno OK 
                tcAnswerRest(jResposta, .T.)
             Else
                cResponse := STR0003 + cCidNotFound //"Não é possível a utilização desta configuração de conciliação pois não foram encontrados os seguintes campos de identificação unica em seu ambiente: "
                tcSetResponse(lResponse, cChaveRes, cResponse, .F.)
            EndIf
            FwFreeArray(aCidFields)
        Else
            tcAnswerRest(jResposta, .T.)
        EndIf 
    Else        
        tcSetResponse(lResponse, cChaveRes, cResponse, .F.)
    EndIf

    //Restaura empresa e filial
    cEmpAnt := cEmpBkp
    cFilAnt := cFilBkp

return
