#include "tlpp-core.th"
#include "backoffice.reconciliation.matchmanual.controller.ch"

namespace totvs.protheus.backoffice.reconciliation.matchmanual
using namespace totvs.protheus.backoffice.reconciliation.util

//-------------------------------------------------------------------
/*/{Protheus.doc} MatchManual
Classe principal de controle, onde é inicializado o EndPoint

@author Totvs
/*/
//-------------------------------------------------------------------
class MatchManual
    public method new()

    @Post("/api/tc/matchmanual/")
    public method getAllMatchManuals()
endclass

//-------------------------------------------------------------------
/*/{Protheus.doc} MatchManual
Metodo construtor

@author Totvs
/*/
//-------------------------------------------------------------------
method new() class MatchManual
return

//-------------------------------------------------------------------
/*/{Protheus.doc} getAllMatchManuals
Metodo que inicia a chamada das configuracoes de match manual do 
conciliador

@author Totvs
/*/
//-------------------------------------------------------------------
method getAllMatchManuals() class MatchManual
    Local oService  := MatchManualService():getInstance() As Object
    Local cBody     := oRest:getBodyRequest() As Object
    Local jBody     := JsonObject():new() As Json
    Local aResponse := {} As Array
    Local cEmpBkp   := cEmpAnt As Character
    Local cFilBkp   := cFilAnt As Character
    Local uRet      := Nil
    Local lPadrao   := .F. As Logical
    Local lResponse := .F. As Logical
    Local cChaveRes := "message" As Character    
    Local cResponse := STR0001 As Character //"Conteúdo do corpo inválido."

    If ValType(cBody) == "C"
        uRet := jBody:fromJson(cBody)
        If ValType(uRet) == "U"            
            tcGetHeaders() //Posiciona na filial passada pelo tenantId            
            aResponse := oService:matchManualByBody(jBody)             
            
            If ValType(aResponse) == "A" .And. Len(aResponse) > 1
                If aResponse[1]
                    lPadrao   := .T.
                    lResponse := aResponse[1]
                    cResponse := aResponse[2]                    
                Else
                    cResponse := aResponse[2]
                EndIf             
            EndIf        
        EndIf    
    EndIf

    tcSetResponse(lResponse, cChaveRes, cResponse, lPadrao)
    FwFreeArray(aResponse)
    FreeObj(oService)                
 
    //Restaura empresa e filial
    cEmpAnt := cEmpBkp
    cFilAnt := cFilBkp
return
