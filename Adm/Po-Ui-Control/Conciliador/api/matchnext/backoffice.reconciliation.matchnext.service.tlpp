#include "tlpp-core.th"
#include "backoffice.reconciliation.matchnext.service.ch"

namespace totvs.protheus.backoffice.reconciliation.matchnext

//-------------------------------------------------------------------
/*/{Protheus.doc} MatchNextService
Classe de servico, realizada instancia e chamada de metodos de servicos

@author Totvs
/*/
//-------------------------------------------------------------------
class MatchNextService
    public method new()
    public method getInstance()
    public method getNextMatchManual() As Array
endclass

//-------------------------------------------------------------------
/*/{Protheus.doc} MatchNextService
Metodo construtor

@author Totvs
/*/
//-------------------------------------------------------------------
method new() class MatchNextService
return

//-------------------------------------------------------------------
/*/{Protheus.doc} MatchNextService
Responsavel por instanciar a classe controller

@author Totvs
/*/
//-------------------------------------------------------------------
method getInstance() class MatchNextService
    static __instance As Object
    
    If ValType(__instance) == "U"
        __instance := MatchNextService():new()
    EndIf
return

//-------------------------------------------------------------------
/*/{Protheus.doc} getNextMatchManual
Responsavel por chamar a consulta

@author Totvs
/*/
//-------------------------------------------------------------------
method getNextMatchManual() class MatchNextService
Local omatchNext := MatchNextProtheusData():getData()
Local cSeqMatch  := omatchNext:tcGetMatchNext() As Character
Local aResponse  := {} As Array

aAdd(aResponse, .F.)
aAdd(aResponse, STR0001) //"Erro na busca de sequencial, tabela temporaria nao informada ou nao existe"  

If ValType(cSeqMatch) == "C" .And. !Empty(cSeqMatch)                                                         
    aResponse := {}
    aAdd(aResponse, .T.)
    aAdd(aResponse, cSeqMatch)            
EndIf
FreeObj(omatchNext)

return aResponse
