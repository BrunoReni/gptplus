#include "tlpp-core.th"
#include "backoffice.reconciliation.matchtotal.controller.ch"

namespace totvs.protheus.backoffice.reconciliation.matchtotal
using namespace totvs.protheus.backoffice.reconciliation.util

//-------------------------------------------------------------------
/*/{Protheus.doc} MatchTotal
Classe principal de controle, onde é inicializado o EndPoint

@author Totvs
/*/
//-------------------------------------------------------------------
class MatchTotal
    public method new()
    
    @Get("/api/tc/matchtotal/")  //GET Descontinuado
    public method getMatchTotal()

    @Post("/api/tc/matchtotal/")
    public method postMatchTotal()
endclass

//-------------------------------------------------------------------
/*/{Protheus.doc} MatchTotal
Metodo construtor

@author Totvs
/*/
//-------------------------------------------------------------------
method new() class MatchTotal
return

method getMatchTotal() class MatchTotal
    ::postMatchTotal() // Desvio para o Post - Controle provisório - prevenção de erro
return 

//-------------------------------------------------------------------
/*/{Protheus.doc} getMatchTotal
Metodo que inicia a chamada dos totais de match do conciliador

@author Totvs
/*/
//-------------------------------------------------------------------
method postMatchTotal() class MatchTotal
    Local oService  := MatchTotalService():getInstance() As Object    
    Local jResponse := JsonObject():new() As Json
    Local aResponse := {} As Array
    Local lResponse := .F. As Logical
    Local cChaveRes := "message" As Character
    Local cResponse := STR0001 As Character //"Json inválido - Tabela: QLB - field: QLB_TOTAL"
    Local cBody     := oRest:getBodyRequest() as object

    aResponse := oService:getTotals(cBody)    

    If ValType(aResponse) == "A" .And. Len(aResponse) > 1
        If aResponse[1]            
            jResponse["items"] := aClone(aResponse[2])
            oRest:setKeyHeaderResponse("Content-Type", "application/json")
            oRest:setResponse(jResponse)           
        Else            
            cResponse := aResponse[2]
            tcSetResponse(lResponse, cChaveRes, cResponse, .F.)
        EndIf    
    EndIf
        
    FwFreeArray(aResponse)
    FreeObj(oService)                                    
return
