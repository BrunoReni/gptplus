#include "tlpp-core.th"
#include "backoffice.reconciliation.setupfields.controller.ch"

namespace totvs.protheus.backoffice.reconciliation.setupfields
using namespace totvs.protheus.backoffice.reconciliation.util

//-------------------------------------------------------------------
/*/{Protheus.doc} SetupFields
Classe principal de controle, onde é inicializado o EndPoint

@author Totvs
/*/
//-------------------------------------------------------------------
class SetupFields
    public method new()

    @Get("/api/tc/setupfields/")
    public method getSetupFields()
endclass

//-------------------------------------------------------------------
/*/{Protheus.doc} SetupFields
Metodo construtor

@author Totvs
/*/
//-------------------------------------------------------------------
method new() class SetupFields
return

//-------------------------------------------------------------------
/*/{Protheus.doc} getSetupFields
Metodo que inicia a chamada dos campos para o setup

@author Totvs
/*/
//-------------------------------------------------------------------
method getSetupFields() class SetupFields
    Local oService  := SetupFieldsService():getInstance() as Object    
    Local jResponse := JsonObject():new() as Json
    Local aResponse := oService:getFields() as Array
    Local lResponse := .F. as Logical
    Local cChaveRes := STR0001 as Character //"message"
    Local cResponse := STR0002 as Character //"Json inválido"

    If aResponse[1]            
        jResponse := aResponse[2][1]
        oRest:setKeyHeaderResponse("Content-Type", "application/json")
        oRest:setResponse(jResponse)           
    Else            
        cResponse := aResponse[2]
        tcSetResponse(lResponse, cChaveRes, cResponse, .F.)
    EndIf
    
    FwFreeArray(aResponse)
    FreeObj(oService)                                   
    
return
