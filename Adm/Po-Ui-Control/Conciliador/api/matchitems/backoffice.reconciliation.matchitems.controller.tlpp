#include "tlpp-core.th"
#include "backoffice.reconciliation.matchitems.controller.ch"

namespace totvs.protheus.backoffice.reconciliation.matchitems
using namespace totvs.protheus.backoffice.reconciliation.util

//-------------------------------------------------------------------
/*/{Protheus.doc} MatchItems
Classe principal de controle, onde é inicializado o EndPoint

@author Totvs
/*/
//-------------------------------------------------------------------
class MatchItems
    public method new()

    @Get("/api/tc/matchitems/")
    public method getAllMatchItems()
endclass

//-------------------------------------------------------------------
/*/{Protheus.doc} MatchItems
Metodo construtor

@author Totvs
/*/
//-------------------------------------------------------------------
method new() class MatchItems
return

//-------------------------------------------------------------------
/*/{Protheus.doc} getAllMatchItemss
Metodo que inicia a chamada das configuracoes de match do conciliador

@author Totvs
/*/
//-------------------------------------------------------------------
method getAllMatchItems() class MatchItems
    Local oService  := MatchItemsService():getInstance() As Json
    Local jResposta := JsonObject():new() As Json 
    Local nPage     := 1 As Numeric
    Local nPageSize := 200 As Numeric
    Local cTable    := oRest:getQueryRequest():GetJsonText("table") As Character
    Local cIdMatch  := oRest:getQueryRequest():GetJsonText("idmatch") As Character
    Local lResponse := .F. As Logical
    Local cChaveRes := "message" As Character
    Local cResponse := STR0001 As Character //"Resposta inválida."

    tcGetPageAndPageSize(@nPage, @nPageSize)

    jResposta:fromJson(oService:getAllMatchItems(nPage, nPageSize, cTable, cIdMatch))
    
    If ValType(jResposta:GetJsonText("items")) <> "U"  
        tcAnswerRest(jResposta, .T.)
    EndIf
return
