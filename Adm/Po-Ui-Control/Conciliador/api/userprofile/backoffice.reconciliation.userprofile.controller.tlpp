#include "tlpp-core.th"
#include "backoffice.reconciliation.userprofile.controller.ch"

namespace totvs.protheus.backoffice.reconciliation.userprofile
using namespace totvs.protheus.backoffice.reconciliation.util

//-------------------------------------------------------------------
/*/{Protheus.doc} UserProfile
Classe principal de controle, onde e inicializado o EndPoint

@author Totvs
/*/
//-------------------------------------------------------------------
class UserProfile
public method new()

@Post("/api/tc/userprofile/")
public method postUserProfile()

@Get("/api/tc/userprofile/")
public method getUserProfile()
endclass

//-------------------------------------------------------------------
/*/{Protheus.doc} UserProfile
Metodo construtor

@author Totvs
/*/
//-------------------------------------------------------------------
method new() class UserProfile
return

//-------------------------------------------------------------------
/*/{Protheus.doc} postUserProfile
Metodo que inicia a chamada para criacao de profile das filiais de 
usuário do conciliador

@author Totvs
/*/
//-------------------------------------------------------------------
method postUserProfile() class UserProfile
Local oService  := UserProfileService():getInstance() as Object
Local cBody     := oRest:getBodyRequest() as Object
Local jBody     := JsonObject():new() as Json
Local jResponse := JsonObject():new() as Json
Local aResponse := {} as Array
Local cEmpBkp   := cEmpAnt as Character
Local cFilBkp   := cFilAnt as Character
Local uRet      := Nil
Local lPadrao   := .F. as Logical
Local lResponse := .F. as Logical
Local cChaveRes := "message" as Character
Local cResponse := STR0001 as Character //"Conteúdo do corpo inválido."

If ValType(cBody) == "C"
    uRet := jBody:fromJson(cBody)
    If ValType(uRet) == "U"            
        tcGetHeaders() //Posiciona na filial passada pelo tenantId            
        aResponse := oService:postUserProfileByBody(jBody)
        
        If ValType(aResponse) == "A" .And. Len(aResponse) > 1
            If aResponse[1]
                jResponse["branches"] := aResponse[2]
                oRest:setKeyHeaderResponse("Content-Type", "application/json")
                oRest:setResponse(jResponse)                 
            EndIf             
        EndIf 
    Else
        tcSetResponse(lResponse, cChaveRes, cResponse, lPadrao)
    EndIf    
EndIf

FwFreeArray(aResponse)
FreeObj(oService)                

//Restaura empresa e filial
cEmpAnt := cEmpBkp
cFilAnt := cFilBkp
return

//-------------------------------------------------------------------
/*/{Protheus.doc} getUserProfile
Metodo que inicia a chamada das filiais de susuário do conciliador

@author Totvs
/*/
//-------------------------------------------------------------------
method getUserProfile() class UserProfile    
Local oService  := UserProfileService():getInstance() as Object   
Local aResponse := {} as Array
Local cEmpBkp   := cEmpAnt as Character
Local cFilBkp   := cFilAnt as Character       
Local lResponse := .T. as Logical
Local cChaveRes := "message" as Character
Local cResponse := STR0002 as Character //"Conteúdo do corpo inválido."
Local jResponse := JsonObject():new() As Json
    
tcGetHeaders() //Posiciona na filial passada pelo tenantId            
aResponse := oService:getUserProfile()             

If ValType(aResponse) == "A" .And. Len(aResponse) > 1
    If aResponse[1]                       
        jResponse["branches"] := aClone(aResponse[2])
        oRest:setKeyHeaderResponse("Content-Type", "application/json")
        oRest:setResponse(jResponse)                     
    Else
        cResponse := aResponse[2]
        tcSetResponse(lResponse, cChaveRes, cResponse, .F.)
    EndIf             
EndIf        
       
FwFreeArray(aResponse)
FreeObj(oService)                

//Restaura empresa e filial
cEmpAnt := cEmpBkp
cFilAnt := cFilBkp
return
