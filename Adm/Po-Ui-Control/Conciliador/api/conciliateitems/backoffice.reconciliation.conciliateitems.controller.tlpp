#include "tlpp-core.th"
#include "backoffice.reconciliation.conciliateitems.controller.ch"

namespace totvs.protheus.backoffice.reconciliation.conciliateitem
using namespace totvs.protheus.backoffice.reconciliation.util

//-------------------------------------------------------------------
/*/{Protheus.doc} conciliateitems
Classe principal de controle, onde é inicializado o EndPoint

@author Totvs
/*/
//-------------------------------------------------------------------
class ConciliateItems
	Data jResposta	as json
	Data Page       as Numeric
	Data PageSize   as Numeric
	Data match      as Character	
	Data table      as Character	
	Data sort       as Character	
	Data oService   as Object
	Data aFieldsApi as Array
	Data aUrlFilter as Array
	Data formatDate as Character
	Data lExcel 	as Logical 
	Data jBody      as json

    public method new()

    @Get("/api/tc/conciliateitems")
    public method getAllConciliateItems()

	@Post("/api/tc/conciliateitems/")
    public method getconciliateitemsbyfilter()

endclass

//-------------------------------------------------------------------
/*/{Protheus.doc} conciliateitems
Metodo construtor

@author Totvs
/*/
//-------------------------------------------------------------------
method new() class ConciliateItems
	::page       := 1
	::pagesize   := 10
	::match      := ""
	::table      := ""
	::sort       := ""
	::formatDate := ""	
	::oService   := conciliateitemsService():getInstance()
	::jResposta  := JsonObject():New()
	::aFieldsApi := {}
	::aUrlFilter := {}	
	::lExcel	 := .F.
	::jBody 	 := JsonObject():New()
return

//-------------------------------------------------------------------
/*/{Protheus.doc} getAllconciliateitems
Metodo que inicia a chamada das configuracoes de match do conciliador

@author Totvs
/*/
//-------------------------------------------------------------------
method getAllConciliateItems() class ConciliateItems		
	Local aJsonHead := {} as Array	
	Local oField    := tcTreatsFilter():new() as Object
	
	::table      := oRest:getQueryRequest():GetJsonText("table")
	::table      := StrTran(::table, "null", "")	
	::sort       := oRest:getQueryRequest():GetJsonText("sort")
	::sort       := StrTran(::sort, "null", "")	
	::formatDate := oRest:getQueryRequest():GetJsonText("formatdate")
	::formatDate := StrTran(::formatDate, "null", "")	
	::aFieldsApi := {}
    ::aUrlFilter := tcGetFilters()			
	::match      := tcGetQryParams("match")
	::lExcel     := tcGetQryParams("lExcel") == "true"

	tcGetPageAndPageSize(@::page, @::pageSize)
    ::jResposta:fromJson(::oService:getAllconciliateitems(::table,::page,::pageSize,::aFieldsApi,::sort,::aUrlFilter,::match,::formatDate,::lExcel))            
    
	//Adiciona informacoes SX3 dos campos no Json de retorno
	If ValType(::jResposta:GetJsonText("items")) <> "U" .And. Len(::aFieldsApi) > 0		
		aJsonHead := oField:tcSetStruct(::aFieldsApi)
		
		If Len(aJsonHead) > 0
			::jResposta["fields"] := JsonObject():new()
        	::jResposta["fields"] := aJsonHead
			tcAnswerRest(::jResposta, .T.)
		EndIf
	EndIf

	//Limpa array
	FWFreeArray(aJsonHead)
	FWFreeArray(::aFieldsApi)
return

//-------------------------------------------------------------------
/*/{Protheus.doc} getconciliateitemsbyfilter
Metodo que realiza o filtro composto dos itens de conciliacao

@author Totvs
/*/
//-------------------------------------------------------------------
method getconciliateitemsbyfilter() class ConciliateItems	

	Local aJsonHead := {} as Array	
	Local oField    := tcTreatsFilter():new() as Object
	Local cBody     := oRest:getBodyRequest() As Object
	
	::table      := oRest:getQueryRequest():GetJsonText("table")
	::table      := StrTran(::table, "null", "")	
	::sort       := oRest:getQueryRequest():GetJsonText("sort")
	::sort       := StrTran(::sort, "null", "")	
	::formatDate := oRest:getQueryRequest():GetJsonText("formatdate")
	::formatDate := StrTran(::formatDate, "null", "")	
	::aFieldsApi := {}
    ::aUrlFilter := tcGetFilters()			
	::match      := tcGetQryParams("match")

	tcGetPageAndPageSize(@::page, @::pageSize)
	If ValType(cBody) == "C"
		::jBody:fromJson(cBody)
		::jResposta:fromJson(::oService:getconciliateitemsbyfilter(::table,::page,::pageSize,::aFieldsApi,::sort,::aUrlFilter,::match,::formatDate,::jBody))
	EndIf
    
	//Adiciona informacoes SX3 dos campos no Json de retorno
	If ValType(::jResposta:GetJsonText("items")) <> "U" .And. Len(::aFieldsApi) > 0		
		aJsonHead := oField:tcSetStruct(::aFieldsApi)
		
		If Len(aJsonHead) > 0
			::jResposta["fields"] := JsonObject():new()
        	::jResposta["fields"] := aJsonHead
			tcAnswerRest(::jResposta, .T.)
		EndIf
	EndIf

	//Limpa array
	FWFreeArray(aJsonHead)
	FWFreeArray(::aFieldsApi)

return
