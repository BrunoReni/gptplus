#include "tlpp-core.th"

namespace totvs.protheus.backoffice.controlchecklist.ecfvalidators

//-------------------------------------------------------------------
/*/{Protheus.doc} EcfValidatorsService
Classe de servico, realizada instancia e chamada de métodos de servicos

@author Totvs
/*/
//-------------------------------------------------------------------
class EcfValidatorsService
	Private Data jResponse as Json

    public method new()
    public method getInstance()
    public method getEcfValidatorByOption()
endclass

//-------------------------------------------------------------------
/*/{Protheus.doc} EcfValidatorsService
Metodo construtor

@author Totvs
/*/
//-------------------------------------------------------------------
method new() class EcfValidatorsService	
return

//-------------------------------------------------------------------
/*/{Protheus.doc} EcfValidatorsService
Responsável por instanciar a classe controller

@author Totvs
/*/
//-------------------------------------------------------------------
method getInstance() class EcfValidatorsService
    static __instance As Object
    
    If ValType(__instance) == "U"
        __instance := EcfValidatorsService():new()
    EndIf
return

//-------------------------------------------------------------------
/*/{Protheus.doc} getEcfValidatorByOption
Responsável por chamar a consulta e parsear o retorno no formato JSON

@author Totvs
/*/
//-------------------------------------------------------------------
method getEcfValidatorByOption(cOption as Character, aOptionsApi as Array) class EcfValidatorsService
    Local oValidators := EcfValidatorsProtheusData():getData() as Object
    Local jResponse   := JsonObject():New() as Json
                    
    oValidators:getAllEcfValidators(cOption)

    If oValidators:lOk        
        jResponse   := oValidators:getJSONResponse()
        aOptionsApi := oValidators:getOptionsQuery()          
    EndIf

    oValidators:DeActivate()
    FreeObj(oValidators)
return jResponse
