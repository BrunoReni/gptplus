#include "tlpp-core.th"
#include "backoffice.controlchecklist.mainchecklist.data.protheus.ch"

namespace totvs.protheus.backoffice.controlchecklist.mainchecklist
//-------------------------------------------------------------------
/*/{Protheus.doc} MainChecklistProtheusData
Classe responsável pela consulta de dados

@author Totvs
/*/
//-------------------------------------------------------------------
class MainChecklistProtheusData from FWAdapterBaseV2
    Public method new()
    Public method getAll()
    Public method getDadosServer()
    static method getData() As object
endclass

//-------------------------------------------------------------------
/*/{Protheus.doc} MainChecklistProtheusData
Metodo construtor

@author Totvs
/*/
//-------------------------------------------------------------------
method new(cVerbo as Character, lList as Logical) Class MainChecklistProtheusData
    Default cVerbo := "GET"
    Default lList  := .T.
    _Super:New(cVerbo, lList)
return

//-------------------------------------------------------------------
/*/{Protheus.doc} MainChecklistProtheusData
Método para chamada e validação do tratamento de dados

@author Totvs
/*/
//-------------------------------------------------------------------
method getData() class MainChecklistProtheusData As Object
    static __oActiveData As Object

    If ValType(__oActiveData) == "U"
        __oActiveData := MainChecklistProtheusData():new()
    EndIf
return __oActiveData

//-------------------------------------------------------------------
/*/{Protheus.doc} getAll
Metodo responsável pela busca dos gerais do checklist

@author Totvs
/*/
//-------------------------------------------------------------------
method getAll() class MainChecklistProtheusData

    Local oSettings := MainChecklistProtheusData():getData() As Object
    Local cReturn   := "" as Character

    cReturn := oSettings:getDadosServer()

return cReturn

//-------------------------------------------------------------------
/*/{Protheus.doc} GetDadosServer
Metodo responsável pela busca dos dados do server do checklist

@author Totvs
/*/
//-------------------------------------------------------------------
method getDadosServer() class MainChecklistProtheusData

	// Dados do Server    
	Local cVBuild 	:= GetBuild() 		// Traz informações do Application Server
	Local cVClient 	:= GetBuild(.T.)  // Traz informações do SmartClient
	Local cVDBAcc	:= TCGetBuild() 	// Traz informações do DBAccess
	Local cLib		:=	__FWLibVersion() 				// Valida data de Lib
	Local cRpoRelease := GetRpoRelease()
	Local lTopMemo	:= GetSrvProfString("TOPMEMOMEGA","") == "1" // Valida se tem TopMemoMega ativado
	Local cTopMemo  := "" as Character
	Local cAmbiente := Capital(GetEnvServer())
	Local cLocFiles := GetSrvProfString("LocalFiles","Ctree")
	Local cTopDaBase:= TCGetDB()
    Local cReturn   := "" as Character

    If lTopMemo
        cTopMemo := STR0001 // "Habilitado"
    Else
        cTopMemo := STR0002 // "Desabilitado"
    EndIf       

    cReturn := '{"build": '+'"'+CValToChar(cVBuild)+'"'+',"client": '+'"'+CValToChar(cVClient)+'"'+', "dbaccess": '+'"'+CValToChar(cVDBAcc)+'"'+',"lib": '+'"'+CValToChar(cLib)+'"'+',"rporelease": '+'"'+CValToChar(cRpoRelease)+'"'+',"ambiente": '+'"'+CValToChar(cAmbiente)+'"'+',"topmemo": '+'"'+CValToChar(cTopMemo)+'"'+',"locfiles": '+'"'+CValToChar(cLocFiles)+'"'+',"topdabase": '+'"'+CValToChar(cTopDaBase)+'"'+'}'

return cReturn
