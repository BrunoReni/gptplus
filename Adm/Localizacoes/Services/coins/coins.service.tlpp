#include 'tlpp-core.th'

namespace tr.coins

/*/{Protheus.doc} coinsService
Class coinsService
@type class
@version  1
@author José González
@since 04/03/2021
/*/
Class coinsService
	Public Method new()
	Public Method getcoins()
	Public Method getLocalCurrency()
EndClass

/*/{Protheus.doc} coinsService::new
Inicializador de la clase
@type method
@version  1
@author luis.aboytes
@since 04/03/2021
/*/
Method new() Class coinsService
Return

/*/{Protheus.doc} coinsService::getcoins
Obtiene el contenido de la tasa de las monedas configuradas en el sistema
@type method
@version  1
@author luis.aboytes
@since 19/02/2021
/*/
Method getcoins (pathParams) Class coinsService
	Local response := JsonObject():New()
    Local aMoedas := {}
	Local aJson := {}
	Local coins := JsonObject():new()
	Local nItens := 1
	Local i := 1
	Local cMoeda1		:=	lower(Alltrim(superGetMV("MV_MOEDA1")))
	Local cMoeda2		:=	lower(Alltrim(superGetMV("MV_MOEDA2")))
	Local cMoeda3		:=	lower(Alltrim(superGetMV("MV_MOEDA3")))
	Local cMoeda4		:=	lower(Alltrim(superGetMV("MV_MOEDA4")))
	Local cMoeda5		:=	lower(Alltrim(superGetMV("MV_MOEDA5")))

	AADD(aMoedas,	{cMoeda1, RecMoeda(pathParams['datebase'],1,.T.),"M2_MOEDA1",1})
	If  cMoeda2 <> ""
		AADD(aMoedas,	{cMoeda2, RecMoeda(pathParams['datebase'],2,.T.),"M2_MOEDA2",2})
		nItens++
	EndIf
	If  cMoeda3 <> ""
		AADD(aMoedas,	{cMoeda3, RecMoeda(pathParams['datebase'],3,.T.),"M2_MOEDA3",3})
		nItens++
	EndIf
	If  cMoeda4 <> ""
		AADD(aMoedas,	{cMoeda4, RecMoeda(pathParams['datebase'],4,.T.),"M2_MOEDA4",4})
		nItens++
	EndIf
	If	cMoeda5 <> ""
		AADD(aMoedas,	{cMoeda5, RecMoeda(pathParams['datebase'],5,.T.),"M2_MOEDA5",5})
		nItens++
	EndIf
    
	For i := 1 to nItens 
        Aadd(aJson,JsonObject():new())
        nPos := Len(aJson)
        aJson[nPos]['property' ] := aMoedas[i][1]
        aJson[nPos]['label' ] := aMoedas[i][1]
        aJson[nPos]['type' ] := 'currency'
        aJson[nPos]['value' ] := aMoedas[i][2]
		aJson[nPos]['fieldValue' ] := aMoedas[i][1] 
		aJson[nPos]['gridColumns' ] := 7
		aJson[nPos]['decimalsLength' ] := TamSx3("M2_MOEDA"+Alltrim(Str(i)))[2]
		aJson[nPos]['thousandMaxlength' ] :=GetSX3Cache( aMoedas[i][3],"X3_TAMANHO" ) - ( GetSX3Cache( aMoedas[i][3],"X3_DECIMAL" ) +1)
		aJson[nPos]['moneda' ] := aMoedas[i][4]
    Next
                             
	coins:set(aJson)     
	response["result"] := .T.
	response[ "response" ] := coins
	
Return response

/*/{Protheus.doc} coinsService::getLocalCurrency
Obtiene la moneda local en plural del pais para ser mostrada en la ventan principal del aplicativo de totvs recibo
@type method
@version  1
@author luis.aboytes
@since 24/10/2022
/*/
Method getLocalCurrency (pathParams) Class coinsService
	Local response 	:= JsonObject():New()
	Local jResponse	:= JsonObject():New()
	Local cMoeda1	:=	lower(Alltrim(superGetMV("MV_MOEDAP1")))

	jResponse['localCurrency'] := ALLTRIM(cMoeda1)
	jResponse['cents'] := MsDecimais(1)

	response["result"] := .T.
	response[ "response" ] := jResponse
Return response
