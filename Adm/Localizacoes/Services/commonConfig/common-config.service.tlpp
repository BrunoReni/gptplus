#include 'tlpp-core.th'
#include 'COMMONCONFIG.SERVICE.CH'

namespace tr.commonConfig
using namespace tr.util.sx3service

Static __instance As Object

/*/{Protheus.doc} commonConfigService
Clase donde estan las reglas de negocio
@type class
@version  1
@author jose.gonzalez
@since 23/03/2021
/*/
Class commonConfigService
	Public Method new()
	Public Method getInstance()
	Public Method getCommonConfig()
	Public Method getConfigSE1Service()
	Public Method getConfigSELService()
	Public Method getConfigTAMService()
	Public Method getConfigcBox()
EndClass

/*/{Protheus.doc} commonConfigService::new
Constructor de clase
@type method
@version  1
@author jose.gonzalez
@since 23/03/2021
/*/
Method new() Class commonConfigService
Return

/*/{Protheus.doc} commonConfigService::getInstance
Metodo que obtiene la instancia de la clase
@type method
@version  1
@author jose.gonzalez
@since 23/03/2021
/*/
Method getInstance() Class commonConfigService
	If(__instance == Nil)
		__instance := commonConfigService():new()
	EndIf
Return __instance

/*/{Protheus.doc} commonConfigService::getCommonConfig
Obtiene la configuracion del Factoraje para MEX
Verifica si el pais es Mexico para los estaus del Documento
@type method
@version  1
@author jose.gonzalez
@since 23/03/2021
/*/
Method getCommonConfig()Class commonConfigService
	Local lfactor := .F. As Logical
	Local lMex := .F. 	As Logical
	Local lArg := .F.	As Logical
	Local lPar := .F.	As Logical
	Local lChi := .F.	As Logical
	Local lPer := .F.	As Logical
	Local lBol := .F. 	As Logical
	Local lUru := .F.   As Logical
	Local lCheckreader	:= .F. As Logical
	Local jCommonConfig := JsonObject():New()
	Local jResponse := JsonObject():New()

	If cPaisLoc == "MEX"
		lMex := .T.
	EndIf
	If cPaisLoc == "ARG"
		lArg := .T.
		lCheckreader := SuperGetMv("MV_CMC7FIN") == "S"
	EndIf
	If cPaisLoc == "PAR"
		lPar := .T.
	EndIf
	If cPaisLoc == "CHI"
		lChi := .T.
	EndIf
	If cPaisLoc == "PER"
		lPer := .T.
	EndIf
	If cPaisLoc == "BOL"
		lBol := .T.
	EndIf
	If cPaisLoc == "URU"
		lUru := .T.
	Endif

	jCommonConfig['mexico'] := lMex
	jCommonConfig['argentina'] := lArg
	jCommonConfig['paraguay'] := lPar
	jCommonConfig['chile'] := lChi
	jCommonConfig['peru'] := lPer
	jCommonConfig['bolivia'] := lBol
	jCommonConfig['uruguay'] := lUru

	If (cPaisLoc == "MEX" .And. SuperGetMv("MV_CFDI33",.F.,.F.) .And. SEL->(FieldPos("EL_FACTOR")) > 0)
		lfactor := .T.
	EndIf
	jCommonConfig['factoring' ] := 	lfactor
	jCommonConfig['checkReader'] := lCheckreader
	jCommonConfig['isEnableCFDI'] := SuperGetMv("MV_CFDI33",.F.,.F.) .Or. SuperGetMV("MV_CFDI40", .F., .F.) 
	jResponse["result"] := .T.
	jResponse[ "response" ] := jCommonConfig

Return jResponse

/*/{Protheus.doc} commonConfigService::getConfigSE1Service() As Object
Metodo que obtiene el tamaño de los campos de la tabla SE1
@type method
@version  1
@author luis.aboytes
@since 6/4/2021
/*/
Method getConfigSE1Service()Class commonConfigService
	Local aCampos As Array
	Local aJson As Array
	Local jResponse := JsonObject():New()
	Local jTemp  := JsonObject():New()

	aCampos := {{'E1_PREFIXO','prefix'},{'E1_NUM','numberDocument'}}
	aJson := getSX3Size(aCampos)

	jTemp:set(aJson)
	jResponse["result"] := .T.
	jResponse["response"]:= jTemp

Return jResponse

/*/{Protheus.doc} commonConfigService::getConfigSELService() As Object
Metodo que obtiene el tamaño de los campos de la tabla SEL
@type method
@version  1
@author luis.aboytes
@since 7/4/2021
/*/
Method getConfigSELService() Class commonConfigService
	Local aCampos 	As Array
	Local jData 	:= JsonObject():New()
	Local jResponse := JsonObject():New()
	Local jTemp  	:= JsonObject():New()

	aCampos := {{'EL_RECIBO','numberReceipt'},{'EL_SERIE','serie'},{'EL_RECPROV','recprov'}}
	jData["maxlenghts"] := getSX3Size(aCampos)

	jTemp:set(jData)
	jResponse["result"] := .T.
	jResponse["response"]:= jTemp

Return jResponse


/*/{Protheus.doc} commonConfigService::getConfigSELService() As Object
Metodo que obtiene el tamaño de los campos de la tabla SEL
@type method
@version  1
@author José
@since 7/4/2021
/*/
Method getConfigTAMService() Class commonConfigService
	Local jCampos 	:=  JsonObject():New()
	Local jResponse := JsonObject():New()

	
	jCampos['thousandMaxlength' ] := GetSX3Cache(	"E1_VALOR","X3_TAMANHO" ) - ( GetSX3Cache( "E1_VALOR","X3_DECIMAL" ) +1)
	jCampos['decimalsLength' ] 	:= GetSX3Cache( "E1_VALOR","X3_DECIMAL" )
	 
	
	jResponse["result"] := .T.
	jResponse["response"]:= jCampos

Return jResponse


/*/{Protheus.doc} commonConfigService::getConfigcBox() As Object

@type method
@version  1
@author José
@since 22/02/2022
/*/
Method getConfigcBox() Class commonConfigService

	Local jCampos 	:= {}
	Local jResponse := JsonObject():New()
	Local jCompl := JsonObject():New()
	local jTemp := JsonObject():New()
	local jText := JsonObject():New()
	local nI := 1
	local cCampos := ""
	aCampos:={}

	cCampos	:= GetSX3Cache("EL_TIPAGRO","X3_CBOX") // se usa el GetSX3Cache para posicionar el item
	cCampos	:= X3Cbox("EL_TIPAGRO") // Se usa el X3Cbox ya que este devuelve el contenido en el idioma configurado 
	aCampos:=	separa(cCampos,";")

	FOR nI := 1 to len(aCampos)
		Aadd(jCampos,JsonObject():new())
		jCampos[nI]['value'] := SubStr(aCampos[nI], 1, 2)
		jCampos[nI]['label']  := aCampos[nI]
	Next  

	jTemp:set(jCampos)
	
	jText["text1"] :=STR0001
	jText["text2"] :=STR0002
	jText["text3"] :=STR0003

	jCompl["options"]:= jCampos 
	jCompl["texts"]:=jText

	jResponse["result"] := .T.
	jResponse["response"]:= jCompl 
	

Return jResponse

		