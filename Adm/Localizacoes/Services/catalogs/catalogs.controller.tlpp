#include "tlpp-core.th"
#include "tlpp-rest.th"

namespace tr.Catalogs

using namespace tr.util
using namespace tr.Catalogs.Service

/*/{Protheus.doc} CatalogsController
Declaracion de endpoints
@type class
@version  1
@author José González
@since 23/03/2021
/*/
class CatalogsController

	public method New()

	@GET('/api/v1/totvsRecibos/catalogs/:catalog')
	public method getCatalogs()
	@GET('/api/v1/totvsRecibos/catalogs/:catalog/:filtro')
    public method getCatalogs2() 
    
endclass

/*/{Protheus.doc} CatalogsController::new
Constructor de la clase
@type method
@version  1
@author José González
@since 23/03/2021
/*/
Method new() class CatalogsController
return

/*/{Protheus.doc} CatalogsController::getCatalogs
EndPoint  para obtener el catalogo estandar de la tabla enviada
@type method
@version  1
@author José González
@since 23/03/2021
/*/
Method getCatalogs() Class CatalogsController

	Local oCatalogsService as Object
	Local body
	Local bodyContent
	Local response as Object
 
	body := JsonObject():New()
	bodyContent := body:fromJson(oRest:getPathParamsRequest())
  
	If !( bodyContent <> nil )
		oRest:setStatusCode ( 403 )
		oRest:setResponse( "NULL" + bodyContent )
	Else 
		oCatalogsService := CatalogsService():new()
		response  := oCatalogsService:getCatalogsService(oRest:getPathParamsRequest(),oRest:getQueryRequest())		
	EndIf
	AnswerRest(response)
Return .T.


//-------------------------------------------------------------------
/*/{Protheus.doc} totvsRecibos/Catalogs
EndPoint  para obtener el catalogo estandar de la tabla enviada con Filtro preeseleccionado

@author José González
@since 23/03/2021
/*/
//-------------------------------------------------------------------

Method getCatalogs2() Class CatalogsController

	Local oCatalogsService as Object
	Local body
	Local bodyContent
	Local response as Object
 
	body := JsonObject():New()
	bodyContent := body:fromJson(oRest:getPathParamsRequest())
  
	If !( bodyContent <> nil )
		oRest:setStatusCode ( 403 )
		oRest:setResponse( "NULL" + bodyContent )
	Else 
		oCatalogsService := CatalogsService():new()
		response  := oCatalogsService:getCatalogsService(oRest:getPathParamsRequest(),oRest:getQueryRequest())		
	EndIf
	AnswerRest(response)
Return .T.
 