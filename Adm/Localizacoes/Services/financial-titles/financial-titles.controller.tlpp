#include 'tlpp-core.th'
#include 'tlpp-rest.th'
#include 'financialtitlescontroller.ch'

namespace tr.financialTitles
using namespace tr.util

/*/{Protheus.doc} financialtitlescontroller
Declaracion de los metodos en la clase
@type class
@version  1
@author luis.aboytes
@since 10/8/2021
/*/
class financialtitlescontroller

	public method New()

	@POST('/api/v1/totvsRecibos/titles/financialTitles/:number')
	public method financialTitles()
	@POST('/api/v1/totvsRecibos/titles/totalsFinancialTitles')
	public method totalsFinancialTitles()
	@POST('/api/v1/totvsRecibos/titles/financialTitles/')
	public method financialTitlesClient()
	@POST('/api/v1/totvsRecibos/titles/validTitlePago')
	public method validTitlePago()
	@POST('/api/v1/totvsRecibos/titles/totalsTitles')
	public method totalsTitles()
	@POST('/api/v1/totvsRecibos/titles/financialTitles/others/')
	public method financialTitlesOthers()
	@POST('/api/v1/totvsRecibos/titles/totalsTitlesFinancial')
	public method totalsTitlesFinancial()
	@POST('/api/v1/totvsRecibos/titles/totalsTitlesFinancial/checkTimb')
	public method totalsTitlesCheckTimb()
	@POST('/api/v1/totvsRecibos/titles/isTitleTimb')
	public method isTitleTimb()

	public method validTitleLock(Character,JsonObject)
endclass

/*/{Protheus.doc} financialtitlescontroller::new
Constructor de la clase
@type method
@version  1
@author luis.aboytes
@since 10/8/2021
/*/
Method new() class financialtitlescontroller
return

/*/{Protheus.doc} financialTitles
EndPoint para obtener los titulos financieros
@type function
@version  1
@author luis.aboytes
@since 24/02/2021
@input 	json ,  {
	   			 "origBranch":"" ,
	   			 "customer":"",
	   			 "class":"",
       			 "unit":"",
	   			 "exchangeRate": 1
				}
		numeric	, number (1 -Total cartera 2 -Vencidos 3 -Por vencer)
/*/
Method financialTitles() Class financialtitlescontroller
	Local oFinancialTitlesService as Object
	Local jBody
	Local cBodyContent
	Local oResponse as Object

	jBody := JsonObject():New()
	cBodyContent := jBody:fromJson(oRest:GetBodyRequest())

	//Validamos si recibio un Json
	If ( cBodyContent <> nil )
		oRest:setStatusCode ( 400 )
		oRest:setResponse( STR0001 + cBodyContent ) //STR0001 "Objeto Json invalido."
	Else
		oFinancialTitlesService := financialTitlesService():New()
		oResponse := oFinancialTitlesService:financialTitlesServices(jBody,oRest:getQueryRequest(),oRest:getPathParamsRequest())
		AnswerRest(oResponse)
	EndIf
Return

/*/{Protheus.doc} totalsFinancialTitles
EndPoint para obtener los totales de los titulos financieros (Total vencido, Total por vender, Total cartera)
@type function
@version  1
@author luis.aboytes
@since 24/02/2021
@input 	json ,  {
	   			 "origBranch":"" ,
	   			 "customer":"",
	   			 "class":"",
       			 "unit":"",
	   			 "exchangeRate": 1
				}
/*/
Method totalsFinancialTitles() Class financialtitlescontroller
	Local oFinancialTitlesService as Object
	Local jBody
	Local cBodyContent
	Local oResponse as Object

	jBody := JsonObject():New()
	cBodyContent := jBody:fromJson(oRest:GetBodyRequest())

	//Validamos si recibio un Json
	If ( cBodyContent <> nil )
		oRest:setStatusCode ( 400 )
		oRest:setResponse( STR0001 + cBodyContent )//STR0001 "Objeto Json invalido."
	Else
		oFinancialTitlesService := financialTitlesService():New()
		oResponse := oFinancialTitlesService:totalsFinancialTitlesService(jBody,oRest:getQueryRequest())
		AnswerRest(oResponse)
	EndIf
Return

/*/{Protheus.doc} financialTitlesClient
EndPoint para obtener los titulos financieros de un cliente y tienda en especifico
@type function
@version  1
@author luis.aboytes
@since 01/03/2021
@input 	character, filial (código de filial)
	    character, cliente(código de cliente)
		character, tienda (código de tienda)
/*/
Method financialTitlesClient() Class financialtitlescontroller
	Local oFinancialTitlesService as Object
	Local oResponse as Object
	Local jBody
	Local cBodyContent

	jBody := JsonObject():New()
	cBodyContent := jBody:fromJson(oRest:GetBodyRequest())

	//Validamos si recibio un Json
	If !( cBodyContent <> nil )
		oFinancialTitlesService := FinancialTitlesService():New()
		oResponse := oFinancialTitlesService:financialTitlesClientService("SE1",oRest:getPathParamsRequest(),oRest:getQueryRequest(),jBody)
		AnswerRest(oResponse)
	EndIf
Return

/*/{Protheus.doc} validTitlePago
EndPoint que valida los titulos mandados por un Json,
las validaciones que son parte de la funcion A087aPagtos de la Fina087a.PRW
@type function
@version  1
@author luis.aboytes
@since 11/3/2021
@input json, {
  		  	"type":"" ,
   		 	 "class":"",
   		 	 "origin":""
			}
/*/
Method validTitlePago() Class financialtitlescontroller
	Local oFinancialTitlesService as Object
	Local jBody
	Local cBodyContent
	Local oResponse as Object

	jBody := JsonObject():New()
	cBodyContent := jBody:fromJson(oRest:GetBodyRequest())

	//Validamos si recibio un Json
	If ( cBodyContent <> nil )
		oRest:setStatusCode ( 400 )
		oRest:setResponse( STR0001 + cBodyContent ) //STR0001 "Objeto Json invalido."
	Else
		oFinancialTitlesService := financialTitlesService():New()
		oResponse := oFinancialTitlesService:validTitlePagoService(jBody)
		AnswerRest(oResponse)
	EndIf
Return

/*/{Protheus.doc} validTitlePago
EndPoint que permite el bloqueo y desbloqueo de un título al momento
de seleccionarlo.
@type function
@version  1
@author eduardo.manriquez
@since 11/3/2021
@input cBody - Json que contine la información del titulo seleccionado.
@input jResponse - Respuesta del servicio en formado json
/*/
Method validTitleLock(cBody,jResponse) Class financialtitlescontroller
	Local oFinancialTitlesService as Object

	jBody := JsonObject():New()
	jBody:fromJson(cBody)
	oFinancialTitlesService := financialTitlesService():New()
	jResponse := oFinancialTitlesService:validTitleLockService(jBody)

Return 

/*/{Protheus.doc} totalsTitles
Endpoint que recibira un Arreglo de objetos el cual calculara los totales por moneda
@type function
@version  1
@author luis.aboytes
@since 11/3/2021
@input json, {
  		 	 "type":"" ,
   		 	 "total":"",
   			 "coin":""
		     }
/*/
Method totalsTitles() Class financialtitlescontroller
	Local oFinancialTitlesService as Object
	Local jBody
	Local cBodyContent
	Local oResponse as Object

	jBody := JsonObject():New()
	cBodyContent := jBody:fromJson(oRest:GetBodyRequest())

	//Validamos si recibio un Json
	If ( cBodyContent <> nil )
		oRest:setStatusCode ( 400 )
		oRest:setResponse( STR0001 + cBodyContent ) //STR0001 "Objeto Json invalido."
	Else
		oFinancialTitlesService := FinancialTitlesService():New()
		oResponse := oFinancialTitlesService:totalsTitlesService(jBody)
		AnswerRest(oResponse)
	EndIf
Return

/*/{Protheus.doc} financialTitlesOthers
Endpoint para obtener los titulos financieros que no son del cliente
@type function
@version  1
@author luis.aboytes
@since 23/3/2021
@input json, {
			  "branch": "",
			  "code": "",
			  "store": "",
			  "prefix": "",
			  "ofNumber": "",
			  "toNumber": "",
			  "ofDate": "",
			  "toDate": ""
			}
@input json, {
  				"branch": "",
  				"store": "",
				"code": [
    					{
      					 "codeClient": ""
    					},
    					{
      					 "codeClient": ""
    					}
  						],
  				"prefix": "",
  				"ofNumber": "",
  				"toNumber": "",
  				"ofDate": "",
  				"toDate": ""
			 }		
/*/	
Method financialTitlesOthers() Class financialtitlescontroller
	Local oFinancialTitlesService as Object
	Local jBody as Character
	Local oResponse as Object

	jBody := JsonObject():New()
	cBodyContent := jBody:fromJson(oRest:GetBodyRequest())

	//Validamos si recibio un Json
	If ( cBodyContent <> nil )
		oRest:setStatusCode ( 400 )
		oRest:setResponse( STR0001 + cBodyContent )//STR0001 "Objeto Json invalido."
	Else
		oFinancialTitlesService := financialTitlesService():New()
		oResponse := oFinancialTitlesService:financialTitlesOthersService(jBody,oRest:getPathParamsRequest(),oRest:getQueryRequest())
		AnswerRest(oResponse)
	EndIf

Return

/*/{Protheus.doc} totalsTitlesFinancial
Endpoint para obtener los totales de los titulos financieros cuando se recibe un metodo de pago
@type function
@version  1
@author luis.aboytes
@since 24/3/2021
@input json, {
			  "received": {
			    "peso": 0,
			    "dolar": 0
			  },
			  "titles": [
			    {
			      "type": "NCC",
			      "peso": 100,
			      "dolar": 10
			    },
			    {
			      "type": "NF",
			      "peso": 400,
			      "dolar": 30
			    }
			  ]
			}
/*/
Method totalsTitlesFinancial() Class financialtitlescontroller
	Local oFinancialTitlesService as Object
	Local jBody as Character
	Local oResponse as Object

	jBody := JsonObject():New()
	cBodyContent := jBody:fromJson(oRest:GetBodyRequest())

	//Validamos si recibio un Json
	If ( cBodyContent <> nil )
		oRest:setStatusCode ( 400 )
		oRest:setResponse( STR0001 + cBodyContent )//STR0001 "Objeto Json invalido."
	Else
		oFinancialTitlesService := financialTitlesService():New()
		oResponse := oFinancialTitlesService:totalsTitlesFinancialService(jBody)
		AnswerRest(oResponse)
	EndIf
Return


/*/{Protheus.doc} totalsTitlesCheckTimb
Servicio que recibira los parametros del titulo financiero (NF) y comprobara si este esta timbrado o no para poder 
generar un nuevo recibo (EXCLUSIVO DE MEXICO)
@type function
@version  1
@author luis.aboytes
@since 14/6/2021
/*/
Method totalsTitlesCheckTimb() Class financialtitlescontroller
	Local oFinancialTitlesService as Object
	Local jBody as Character
	Local oResponse as Object

	jBody := JsonObject():New()
	cBodyContent := jBody:fromJson(oRest:GetBodyRequest())

	//Validamos si recibio un Json
	If ( cBodyContent <> nil )
		oRest:setStatusCode ( 400 )
		oRest:setResponse( STR0001 + cBodyContent )//STR0001 "Objeto Json invalido."
	Else
		oFinancialTitlesService := financialTitlesService():New()
		oResponse := oFinancialTitlesService:financialTitlesCheckTimb(jBody)
		AnswerRest(oResponse)
	EndIf
Return

/*/{Protheus.doc} financialtitlescontroller::isTitleTimb
Endpoint para verificar si un titulo seleccionado en el front-end esta timbrado (Exclusivo de México)
@type method
@version  1
@author luis.aboytes
@since 22/9/2021
/*/
Method isTitleTimb() Class financialtitlescontroller
	Local oFinancialTitlesService As Object
	Local oResponse As Object
	Local jBody := JsonObject():New() As Object

	cBodyContent := jBody:fromJson(oRest:GetBodyRequest())

	//Validamos si recibio un Json
	If ( cBodyContent <> nil )
		oRest:setStatusCode ( 400 )
		oRest:setResponse( STR0001 + cBodyContent )//STR0001 "Objeto Json invalido."
	Else
		oFinancialTitlesService := financialTitlesService():New()
		oResponse := oFinancialTitlesService:financialTitleCheckTimb(jBody)
		AnswerRest(oResponse)
	EndIf
Return
