#include 'tlpp-core.th'
#include 'tlpp-rest.th'

namespace tr.collector
using namespace tr.util

////////////////////////////////////////////////////////////////////
/*{Protheus.doc} 
	Controlador con los Endpoint de entrada a los servicios de cobradores
*/
////////////////////////////////////////////////////////////////////

//-------------------------------------------------------------------
/*/{Protheus.doc} /api/v1/totvsRecibos/collector
EndPoint para obtener los datos de cobradores de la tabla SAQ

@author Luis Aboytes
@since 18/02/2021
/*/
//-------------------------------------------------------------------
@GET('/api/v1/totvsRecibos/collector')
Function getCollectors()
	Local response As Object
	Local collectorService As Object

	collectorService := collectorService():getInstance()
	response := collectorService:getCollectorsService2("SAQ")
	AnswerRest(response)
Return

//-------------------------------------------------------------------
/*/{Protheus.doc} /api/v1/totvsRecibos/collector/:collector
EndPoint que obtiene un id de un cobrador y retorna sus datos

@author Luis Aboytes
@since 19/02/2021
/*/
//-------------------------------------------------------------------
@GET('/api/v1/totvsRecibos/collector/:collector')
Function getCollector()
	Local response As Object
	Local collectorService As Object

	collectorService := collectorService():getInstance()
	response := collectorService:getCollectorService("SAQ",oRest:getPathParamsRequest())
	AnswerRest(response)
Return

//-------------------------------------------------------------------
/*/{Protheus.doc} /api/v1/totvsRecibos/collector/verify/:collector
EndPoint que obtiene un id de un cobrador y verifica la regla de negocio

@author Luis Aboytes
@since 19/02/2021
/*/
//-------------------------------------------------------------------
@GET('/api/v1/totvsRecibos/collector/verify/:collector')
Function collectorVerify()
	Local response As Object
	Local collectorService As Object

	collectorService := collectorService():getInstance()
	response := collectorService:verifyCollectorService("SAQ",oRest:getPathParamsRequest())
	AnswerRest(response)
Return

//-------------------------------------------------------------------
/*/{Protheus.doc} /api/v1/totvsRecibos/collector/verify/:collector
EndPoint que obtiene un id de un cobrador del Punto de Entrada

@author José.Gonzalez
@since 14/02/2022
/*/
//-------------------------------------------------------------------
@GET('/api/v1/totvsRecibos/collector/pe/:client/:loja')
Function collectorPE()
	Local oResponse As Object
	Local collectorService As Object

	collectorService := collectorService():getInstance()
	oResponse := collectorService:getcollectorPE(oRest:getPathParamsRequest())
	AnswerRest(oResponse)
Return
