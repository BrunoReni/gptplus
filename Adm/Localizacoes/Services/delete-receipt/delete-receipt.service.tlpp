#include "tlpp-core.th"
#include "tlpp-rest.th"
#include "deletereceipt.service.ch"
#include "FWMVCDEF.CH"

namespace tr.deleteReceipt
//-------------------------------------------------------------------
/*/{Protheus.doc} totvsRecibos/deleteReceipt
Class deleteReceiptService

@author José González
@since 13/05/2021
/*/ 
//-------------------------------------------------------------------
Class deleteReceiptService
	Public Method new()
	Public Method getdeleteReceiptService()
	Public Method getSE5Orig()
EndClass

//-------------------------------------------------------------------
/*/{Protheus.doc} totvsRecibos/deleteReceipt
new
Constructor de la clase

@author José González
@since 13/05/2021
/*/
//-------------------------------------------------------------------
Method new() Class deleteReceiptService
Return


//-------------------------------------------------------------------
/*/{Protheus.doc} totvsRecibos/deleteReceipt
@Return oResponse As Jobject, retorna la confirmación del borrado
@author José González
@since 13/05/2021
/*/
//-------------------------------------------------------------------
 
Method getdeleteReceiptService (oJParams ) class  deleteReceiptService
	
	Local oReceiptDetaiAdapter As Object
	Local oResponse 	:= JsonObject():New()
	Local oResAuto 	:= JsonObject():New()
	Local oJson		:= JsonObject():New()
    Local lDelete 	:= .T.
    Local lCfdi33 	:= SuperGetMv("MV_CFDI33",.F.,.F.)
	Local cMsg 		:= ""	
    Local cBranch	:= ""	
    Local cCliente	:= ""	
    Local cLoja		:= ""		  
	Local cSerie	:= ""	 	
	Local cRecibo	:= ""	
	Local lAuto     := IsBlind()
	Local aError    := {}
	Local lDel		:= .F.


	oReceiptDetaiAdapter :=deleteReceiptData():new()
	
	//Se asignan los valores del parametros params a variables
	cBranch 	:= oJParams['branch'	]
	cSerie		:= oJParams['serial'	]
	cRecibo 	:= oJParams['receipt'	]
	cCliente 	:= oJParams['customer'	]
	cLoja 	    := oJParams['unit'		]
	
	oJson := oReceiptDetaiAdapter:getdeleteReceiptAdapter(cBranch,cSerie,cRecibo,cCliente,cLoja)
	
	If cPaisLoc == "MEX"
		If F472VldConc( oJson['aRegs'] )
			cMsg := STR0001
			lDelete := .F.
		EndIf
		If lCfdi33 .And. ( !(oJson['cancel'] == "F") .Or. !Empty(oJson['uuid']) )
			cMsg := STR0002
			lDelete := .F.
		EndIf
	EndIf
	
	If lDelete
		cSerie		:= PadR( alltrim(oJParams['serial'	]),GetSx3Cache("EL_SERIE","X3_TAMANHO"))
		
		Pergunte("FIN088",.F.)
		SetMVValue("FIN088","MV_PAR04", oJParams['parameters']['mv_par01'])			//Mostra Lançamentos - 1 = Si / 2 = No
		SetMVValue("FIN088","MV_PAR05", oJParams['parameters']['mv_par02'])			//Aglutina Lançamentos - 1 = Si / 2 = No
		
		oMdlTab := FwLoadModel("FINA887")
		DbSelectArea("FJT")
		FJT->(DbSetOrder(1)) //FJT_FILIAL+FJT_SERIE+FJT_RECIBO+FJT_VERSAO                                                                                                                      
		IF FJT->(MsSeek(xFilial("FJT")+cSerie+cRecibo,.T.))
			oMdlTab:SetOperation(MODEL_OPERATION_DELETE)
			oMdlTab:Activate()
			IF oMdlTab:VldData()
				oMdlTab:CommitData()
				lDel := .T.
			ELSE
				aError := oMdlTab:GetErrorMessage()
			ENDIF		
		ELSE
			//Si se quiere borrar un recibo generado con rutinas anteriores donde no guardaba FJT
			//Si no se encuentra en la FJT, generara un grabado de los datos en la tabla FJT para borrar correctamente un recibo
			DbSelectArea("SEL")
			SEL->(DbSetOrder(8)) //EL_FILIAL+EL_SERIE+EL_RECIBO+EL_TIPODOC+EL_PREFIXO+EL_NUMERO+EL_PARCELA+EL_TIPO  
			IF SEL->(MsSeek(xFilial("SEL")+cSerie+cRecibo))  
				If self:getSE5Orig(cRecibo, cSerie)
					RecLock("FJT",.T.)
					FJT->FJT_FILIAL := SEL->EL_FILIAL
					FJT->FJT_DTDIGI := SEL->EL_DTDIGIT
					FJT->FJT_SERIE	:= SEL->EL_SERIE
					FJT->FJT_RECIBO := SEL->EL_RECIBO
					FJT->FJT_VERSAO := "00"
					FJT->FJT_EMISSA := SEL->EL_EMISSAO
					FJT->FJT_NATURE := SEL->EL_NATUREZ
					FJT->FJT_CLIENT := SEL->EL_CLIORIG
					FJT->FJT_LOJA 	:= SEL->EL_LOJA
					FJT->FJT_VERATU := "1"
					FJT->(MsUnlock())
				
					DbSelectArea("FJT")
					FJT->(DbSetOrder(1)) //FJT_FILIAL+FJT_SERIE+FJT_RECIBO+FJT_VERSAO     
					FJT->(MsSeek(xFilial("FJT")+cSerie+cRecibo,.T.))                                               
					oMdlTab:SetOperation(MODEL_OPERATION_DELETE)
					oMdlTab:Activate()
					IF oMdlTab:VldData()
						oMdlTab:CommitData()
						lDel := .T.
					ELSE
						aError := oMdlTab:GetErrorMessage()
					ENDIF	
				ENDIF
			ENDIF
		ENDIF
		oResponse['receipt'] := cRecibo
		oResponse["success"] := lDel
		oResponse["message"] := ""
		oMdlTab:DeActivate() 
		If Len(aError)>0 .and. alltrim(aError[6]) <> ""
			oResponse["message"] := aError[6] 
		Endif
	Else
		oResponse['receipt'] := cRecibo
		oResponse["success"] :=  .F.
		oResponse["message"] :=cMsg 
	Endif
	if lAuto
		oResAuto["result"] := .T.
		oResAuto["response"] := oResponse
		oResponse := oResAuto
	Endif
	
Return oResponse

//-------------------------------------------------------------------
/*/{Protheus.doc} totvsRecibos/getSE5Orig
@Return lRet As logical, retorna si fue encontrado el registro con origen en la fina087a
@author Raúl Ortiz
@since 10/01/2023
@params 
		cRecibo as character - Número de recibo
		cSerie  as character - Serie del recibo
/*/
//-------------------------------------------------------------------
Method getSE5Orig (cRecibo As character, cSerie As character ) class  deleteReceiptService
Local cTemp		:= GetNextAlias()
Local lRet 		:= .F.
Local nCount	:= 0

Default cRecibo := ""
Default cSerie	:= ""

	//-- Filtra la información
	BEGINSQL ALIAS cTemp
		SELECT
			SE5.E5_FILIAL, SE5.E5_ORDREC, SE5.E5_SERREC, SE5.E5_ORIGEM
		FROM
			%Table:SE5% SE5
		WHERE
			SE5.%notdel%
			AND     SE5.E5_FILIAL  	= %xFilial:SE5%
			AND     SE5.E5_RECPAG  	= 'R'
			AND     SE5.E5_ORDREC 	= %Exp:cRecibo%
			AND     SE5.E5_SERREC   = %Exp:cSerie%
	ENDSQL

	count to nCount

	If nCount > 0
		lRet := .T.
	EndIf

	(cTemp)->(dbCloseArea())

Return lRet
