#include 'tlpp-core.th'

namespace tr.store.client


/*/{Protheus.doc} storeClientsService
Clase que obtiene los querys para obtener los datos que se necesitan para las reglas de negocio
@type class
@version  1
@author luis.aboytes
@since 10/02/2021
/*/
Class storeClientsService
	Public Method new()
	Public Method getStoreClientsService()
	Public Method storeClientsService()
	Public Method getEmailClientService()
	Public Method getEmailClientArrayService()
EndClass

/*/{Protheus.doc} storeClientsService::new
Constructor de la clase
@type method
@version  1
@author luis.aboytes
@since 10/02/2021
/*/
Method new() Class storeClientsService
Return Nil


/*/{Protheus.doc} storeClientsService::getStoreClientsService
Retorna las tiendas con sus respectivos datos
@type method
@version  1
@author luis.aboytes
@since 10/02/2021
@param cTableNick, character, nombre de la tabla
@param jParamsRequest, Jobject, parametros en el URL
@param jQueryRequestParams, Jobject, parametros en la URL
@return Object, {
    			"items": [
    			    {
    			        "tienda": "",
    			        "nombre": "",
    			        "codigo": ""
    			    },
    			    {
    			        "tienda": "",
    			        "nombre": "",
    			        "codigo": ""
    			    }
				]
				}
/*/
Method getStoreClientsService(cTableNick ,jParamsRequest ,jQueryRequestParams )  Class storeClientsService
	Local oStoreAdapter As Object
	Local cClient As Character
	Local cFil As Character
	Local oJson := JsonObject():New()
	Local oResponse As Object

	oResponse := Nil

	cClient = ""
	cFil 	= ""

	oStoreAdapter := storeClientsAdapter():new('GET')

	//Indica cual pagina debemos retornar
	If !(Empty(jQueryRequestParams['page']))
		oStoreAdapter:setPage(Val(jQueryRequestParams['page']))
	EndIf

	//Indica el tamaño de la pagina
	If !(Empty(jQueryRequestParams['pagesize']))
		oStoreAdapter:setPageSize(Val(jQueryRequestParams['pagesize']))
	EndIf

	If !(Empty(jParamsRequest['client']))
		cClient = jParamsRequest['client']
	EndIf

	If !(Empty(jQueryRequestParams['filial']))
		cFil = jQueryRequestParams['filial']
	EndIf

	oJson := oStoreAdapter:getStoreAdapter(cTableNick, cClient, cFil)

	oResponse := JsonObject():New()

	oResponse["result"] := .T.
	oResponse["response"] := oJson

Return oResponse

/*/{Protheus.doc} getEmailClientService::getStoreClientsService
Retorna el correo electronico del cliente especifico
@type function
@version  1
@author luis.aboytes
@since 19/3/2021
@return Object , [
   					 {
       					 "success": true,
       					 "email": "CORREOHOLLA@TOTVS.COM.BR      "
    				 }
				 ]
/*/
Method getEmailClientService(cTableNick ,jParamsRequest )  Class storeClientsService
	Local oStoreAdapter As Object
	Local cClient As Character
	Local cTienda As Character
	Local aEmailClient := JsonObject():New()
	Local jResponse := JsonObject():New()
	Local jTemp := JsonObject():New()
	Local aJson As Array

	aEmailClient :={}
	aJson := {}
	jResponse["result"] := .T.
	jResponse["response"] := '{ "success": false , "email": "" }'

	oStoreAdapter := storeClientsAdapter():new('GET')

	If !(Empty(jParamsRequest['client']))
		cClient = jParamsRequest['client']
	EndIf

	If !(Empty(jParamsRequest['store']))
		cTienda = jParamsRequest['store']
	EndIf

	aEmailClient:= oStoreAdapter:getEmailClientAdapter(cTableNick, cClient,cTienda)

	If aEmailClient['email']!= ""
		jTemp["success"] := .T.
		jTemp["email"] := aEmailClient['email']
		jResponse["response"] := jTemp
	EndIf

Return jResponse

/*/{Protheus.doc} storeClientsService::getEmailClientArrayService(cTableNick As Character,jBody As Jobject) As Object
Metodo para obtener un arreglo de correos electronicos
@type method
@version  1
@author luis.aboytes
@since 28/7/2021
/*/
Method getEmailClientArrayService(cTableNick ,jBody ) Class storeClientsService
	Local oStoreAdapter 	As Object
	Local jResponse 		AS Object
	Local jTemp 			AS Object
	Local nCont				As Numeric
	Local aJson 			As Array

	jResponse 		:= JsonObject():New()
	jTemp 			:= JsonObject():New()
	aJson			:= {}
	jResponse["result"] 	:= .T.
	jResponse["response"] 	:= '{ "success": false , "email": "" }'

	oStoreAdapter := storeClientsAdapter():new('GET')

	For nCont := 1 to LEN(jBody)
		AADD(aJson,JsonObject():New())
		aJson[LEN(aJson)] := oStoreAdapter:getEmailClientAdapter(cTableNick,jBody[nCont]['client'],jBody[nCont]['store'])
	Next

	For nCont := 1 to LEN(aJson)
		jTemp["success"] := .T.
		jTemp["values"] := aJson
		jResponse["response"] := jTemp
	Next

Return jResponse
