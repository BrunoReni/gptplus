#include 'tlpp-core.th'

namespace tr.ClassCode
//-------------------------------------------------------------------
/*/{Protheus.doc} totvsRecibos/ClassCode
Class ClassCodeData

@author José González
@since 24/01/2022
/*/
//-------------------------------------------------------------------
Class ClassCodeAdapter From FWAdapterBaseV2
	Data cTableNick As Character

	Public Method new()
	
	Public Method ClassCodeAdapter() 
	
EndClass

Method new(cResMethod As Character) Class ClassCodeAdapter
	_Super:new(cResMethod)
Return


//-------------------------------------------------------------------
/*/{Protheus.doc} totvsRecibos/ClassCode

	Prepara y retorna el detalle de la Modalidad

@author José González
@since 24/01/2022
/*/
//-------------------------------------------------------------------
Method ClassCodeAdapter( cFil As Character) Class ClassCodeAdapter

Local cQuery As Character
Local oClassCode As Object
Local aMod := {}
Local cAlias
Local lRequ := .T.

cAlias := GetNextAlias()
	
cQuery := " SELECT "
cQuery += "    ED_CODIGO, "
cQuery += "    ED_DESCRIC "
cQuery += " FROM " + RetSqlName("SED")
cQuery += " Where D_E_L_E_T_ = ' '  "
If !Empty(cFil)
	cQuery += "and ED_FILIAL = '" + xFilial("SED",cFil) + "'"
EndIf
	
cQuery := ChangeQuery(cQuery)
MPSysOpenQuery(cQuery, cAlias)
  
IF (cAlias)->(!EOF())
	WHILE (cAlias)->(!EOF())
		oClassCodees := JsonObject():New()
		oClassCodees['code'] 				:= (cAlias)->ED_CODIGO
		oClassCodees['description'] 		:= (cAlias)->ED_DESCRIC
		
		AAdd(aMod,oClassCodees)
		(cAlias)->(DbSkip())
	END

	// Llamado al punto de entrada para obligatoriedad del campo Modalidad
	If  ExistBLock('F998NATVAZ')
		lRequ	:=	ExecBlock('F998NATVAZ',.F.,.F.)
	Endif
EndIf

	(cAlias)->(DbCloseArea())

	oClassCode	:= JsonObject():New()
	oClassCode['items']	:= aMod
	oClassCode['required']	:= lRequ
	

Return oClassCode
