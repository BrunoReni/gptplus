#INCLUDE "CONA100A.CH"
#Include "PROTHEUS.Ch"
// 17/08/2009 -- Filial com mais de 2 caracteres
/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³cA100Incl ³ Autor ³ Wagner Xavier         ³ Data ³          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Programa de inclus„o de Lan‡amentos Cont beis.              ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ ExpL1:=cA100Incl(ExpC1,ExpN1,ExpN2,ExpC2,ExpL1,ExpL2)      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ ExpC1 = Nome do arquivo                                    ³±±
±±³          ³ ExpN1 = Numero do Header                                   ³±±
±±³          ³ ExpN2 = Numero da Opcao escolhida                          ³±±
±±³          ³ ExpC2 = Numero do Lote                                     ³±±
±±³          ³ ExpL1 = Se Mostra ou nao                                   ³±±
±±³          ³ ExpL2 = Se Aglutina ou nao                                 ³±±
±±³          ³ ExpC3 = Determina se sera On Line ou pelo cProva           ³±±
±±³          ³ dData = Data para geracao dos lancamentos contabeis        ³±±
±±³          ³ dReproc = Parametro que indica que lancamentos nao atualiza³±±
±±³          ³           saldos e apos gravacao executa reprocessamento   ³±±
±±³          ³ aFlagCTB    = Array com dados do Flag CTB                  ³±±
±±³          ³ aDadosProva = Array com dados para utilizacao multi-thread ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Generico                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function cA100Incl(	cArquivo,nHdlPrv,nOpcx,cLoteContabil,lDigita,lAglut,cOnLine,;
					dData,dReproc,aFlagCTB,aDadosProva,aSeqDiario,aTpSaldo,lSimula,cTabCTK,cTabCT2,cIdProcess)

Local aDiario := aClone(aSeqDiario)
DEFAULT aFlagCTB   := {}
DEFAULT aTpSaldo   := Nil
Default lSimula		:= .F.
Default cTabCTK		:= "CTK"
Default cTabCT2		:= "CT2"

cLoteContabil := Substr(cLoteContabil,1,6)

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Adapta‡„o para chamar a rotina de Inclus„o do SIGACTB caso habilitado  ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

Return CTB_Incl(cArquivo,nHdlPrv,nOpcx,cLoteContabil,lDigita,lAglut,cOnLine,dData,dReproc,@aFlagCTB,aDadosProva,@aTpSaldo,aDiario,lSimula,cTabCTK,cTabCT2,cIdProcess)
/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³cA100Apaga³ Autor ³ Eveli Morasco         ³ Data ³ 29/09/92 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Desvia o processamento para -> ca100apcon  se MV_MCONTAB = ³±±
±±³          ³ CON                                                        ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ cA100Apaga(ExpC1,ExpD1)                                    ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ ExpC1 = String com o(s) nome(s) do(s) programa(s)          ³±±
±±³          ³         gerador(es) dos lancamentos que serao apagados     ³±±
±±³          ³ ExpD1 = Data limite a considerar no arquivo de lancamentos ³±±
±±³          ³ ExpL1 = Reprocessa lancamento contabeis (Default .T.)      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Generico                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function cA100Apaga(cRotina,dDtLimite,lReproc)

Ca100ApCTB(cRotina,dDtLimite,lReproc)

Return .T.
/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³cA100ApCtb³ Autor ³ Pilar S. Albaladejo   ³ Data ³ 18/06/01 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Apaga lancamentos feitos por outros programas e estorna    ³±±
±±³          ³ os valores do Plano de Conta (CT1) - SIGACTB               ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ cA100ApCTB(ExpC1,ExpD1)                                    ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ ExpC1 = String com o(s) nome(s) do(s) programa(s)          ³±±
±±³          ³         gerador(es) dos lancamentos que serao apagados     ³±±
±±³          ³ ExpD1 = Data limite a considerar no arquivo de lancamentos ³±±
±±³          ³ ExpL1 = Reprocessa lancamento contabeis (Default .T.)      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Generico                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function Ca100ApCTB(cRotina,dDataFim,lReproc)

Local dDataIni := GetMv("MV_ULMES")+1

Local lCusto	:= CtbMovSaldo("CTT")
Local lItem		:= CtbMovSaldo("CTD")
Local lCLVL		:= CtbMovSaldo("CTH")
Local lDeleta   := .T.
Local nMinRecno, nMaxRecno
Local cAliasQry := GetNextAlias()
Local cQuery2 := ""
Local cQueryQLD := ""
Local cQueryQLC := ""
Local cQueryCV3 := ""
Local cCodCon   := ""
Local lVldIni 	:= .F. 

Local nCont
Local nValor      
Local nCountReg	:= 0
Local lDelFisico:=	GetNewPar('MV_CON100D',.T.)

Local lExclusivo	:= If(FindFunction("ADMTabExc"), ADMTabExc("CT2"), !Empty(xFilial("CT2"))) //Analisa se a tabela esta exclusiva

Default lReproc := .T.

cRotina	:= Upper(cRotina)

If CtbInUse()
	ChkFile("CT2")
Endif

If IsInCallStack("MATA330") .Or. IsInCallStack("MATA331") .Or. IsInCallStack("MATR902")
	#IFDEF TOP
		If TcSrvType() != "AS/400"  .And. lDelFisico

	// Verifico na moeda 01 se a data de inicio e de fim eh valida
			lVldIni := SuperGetMv('MV_VLCLOTE',.F.,.F.)
			If (!lVldIni .and. !CtbDtComp(5,dDataIni,"01")) .Or. ! CtbDtComp(5,dDataFim,"01")
				Return
			Endif
			
			//Verifico o menor registro e maior registro da tabela a ser atualizada		
			cRotina := If(Right(cRotina, 1) = "/", Left(cRotina, Len(cRotina) - 1), cRotina)
			
			cRecno := "cRecno"  						
			cQuery := "SELECT R_E_C_N_O_ RECNO "
			cQuery += "FROM "+RetSqlName("CT2")+ " "
			cQuery += "WHERE CT2_FILIAL = '" + xFilial ("CT2") + "' AND "
			cQuery += "CT2_DATA >= '" + Dtos(dDataIni) + "' AND "
			cQuery += "CT2_DATA <= '" + Dtos(dDataFim) + "' AND "
			cQuery += "CT2_ROTINA IN " + FormatIn(cRotina, "/") + " AND "
			cQuery += "(CT2_FILORI = '  ' OR CT2_FILORI = '" + cFilAnt + "' ) AND "
			cQuery += "(CT2_EMPORI = '  ' OR CT2_EMPORI = '" + cEmpAnt + "' )"
			cQuery += " ORDER BY RECNO "
			cQuery := ChangeQuery(cQuery)

			If ( Select ( "cRecno" ) <> 0 )
				dbSelectArea ( "cRecno" )
				dbCloseArea ()
			Endif
				
			dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cRecno,.T.,.F.)

			If AliasInDic("QLC") .And. AliasInDic("QLD") .And. CT2->(FieldPos("CT2_MSUIDT"))
				CA100DelQLD(cRotina, dDataIni, dDataFim)
			EndIf
						
			//Exclui CV3 relacionados aos CT2 que serao excluidos
			cQueryCV3 := "DELETE FROM "+RetSqlName("CV3")
			cQueryCV3 += " WHERE R_E_C_N_O_ IN ("
			cQueryCV3 += " SELECT CV3.R_E_C_N_O_" 
			cQueryCV3 += " FROM "+RetSqlName("CV3")+" CV3"
			cQueryCV3 += " INNER JOIN "+RetSqlName("CT2")+" CT2"
			cQueryCV3 += " ON CV3.CV3_FILIAL = CT2.CT2_FILIAL"
			cQueryCV3 += IIf(Upper(TcGetDb()) $ "ORACLE|DB2|INFORMIX", " AND NVL(TO_NUMBER(TRIM(CV3.CV3_RECDES)), 0) = CT2.R_E_C_N_O_",; 
							IIf(Upper(TcGetDb()) $ "POSTGRES", " AND COALESCE(CAST(TRIM(CV3.CV3_RECDES) AS INT),0) = CT2.R_E_C_N_O_",; 
							" AND CONVERT(INT, CV3.CV3_RECDES) = CT2.R_E_C_N_O_"))  								
			cQueryCV3 += " AND CV3.CV3_SEQUEN = CT2.CT2_SEQUEN"
			cQueryCV3 += " AND CV3.CV3_DTSEQ = CT2.CT2_DTCV3" 
			cQueryCV3 += " WHERE CT2.CT2_FILIAL = '"+xFilial("CT2")+"'" 
			cQueryCV3 += " AND CT2.CT2_DATA >= '"+Dtos(dDataIni)+"'"
			cQueryCV3 += " AND CT2.CT2_DATA <= '"+Dtos(dDataFim)+"'"															
			cQueryCV3 += " AND CT2_ROTINA IN " + FormatIn(cRotina, "/")			
			cQueryCV3 += " AND (CT2.CT2_FILORI = '"+Space(TamSx3("CT2_FILORI")[1])+"' OR CT2.CT2_FILORI = '"+cFilAnt+"')"
			cQueryCV3 += " AND (CT2.CT2_EMPORI = '"+Space(TamSx3("CT2_EMPORI")[1])+"' OR CT2.CT2_EMPORI = '"+cEmpAnt+"')"
			cQueryCV3 += " AND CT2.D_E_L_E_T_ = ' '"
			cQueryCV3 += " AND CV3.D_E_L_E_T_ = ' ')"
			IIF(TcSqlExec(cQueryCV3) <> 0, Conout(TCSqlError()),)

			cQuery := "DELETE FROM "+RetSqlName("CT2")+ " "
			cQuery += "WHERE CT2_FILIAL = '"+xFilial ("CT2") +"' AND "
			cQuery += "CT2_DATA >= '" + Dtos(dDataIni) + "' AND "
			cQuery += "CT2_DATA <= '" + Dtos(dDataFim) + "' AND "
			cQuery += "CT2_ROTINA IN " + FormatIn(cRotina, "/") + " AND "
			cQuery += "(CT2_FILORI = '  ' OR CT2_FILORI = '" + cFilAnt + "' ) AND "
			cQuery += "(CT2_EMPORI = '  ' OR CT2_EMPORI = '" + cEmpAnt + "' ) AND "			
			
			PcoIniLan("000082")

			While cRecno->(!Eof())
		
				nMin := (cRecno)->RECNO
				
				nCountReg := 0
					
				While cRecno->(!EOF()) .and. nCountReg <= 4096
						
					nMax := (cRecno)->RECNO
					nCountReg++
					CtbPcoDel((cRecno)->RECNO)
					cRecno->(DbSkip())

				End
					
				cChave := " R_E_C_N_O_>="+Str(nMin,10,0)+" AND R_E_C_N_O_<="+Str(nMax,10,0)+""
				TcSqlExec(cQuery+cChave)
			End			

			PcoFinLan("000082")
			dbSelectArea("cRecno")
			dbCloseArea()
		Else
	#ENDIF

	dbSelectArea("CT2")
	dbSeek(xFilial()+DTOS(dDataIni),.T.)

	While ! Eof() .And. CT2->CT2_FILIAL == xFilial() .And. ;
			DTOS(CT2->CT2_DATA) <= DTOS(dDataFim)
		
		If ! (Alltrim(Upper(CT2->CT2_ROTINA))$cRotina )
			dbSkip()
			Loop
		EndIf
		
		If !Empty(CT2->CT2_FILORI)
			If CT2->CT2_FILORI != cFilAnt
				dbSkip()
				Loop
			EndiF
		EndIf
		
		If !Empty(CT2->CT2_EMPORI)
			If CT2->CT2_EMPORI != cEmpAnt
				dbSkip()
				Loop
			EndiF
		EndIf
		
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Atualiza o Plano de Contas                                   ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		lDeleta := .T.							// Verifica qual registro pode deletar
		For nCont := 1 To Len(CT2->CT2_MOEDAS)
			IF SubStr(CT2->CT2_MOEDAS,nCont,1) == "1" .And. lDeleta
				cMoeda  := StrZero(nCont,2)
				nValor  := &('CT2->CT2_VLR'+cMoeda)
				If lDeleta
					lDeleta := CtbDtComp(5,CT2->CT2_DATA,cMoeda)
				Endif

	// Removida desgravacao de saldos - Sera Chamado Reprocessamento

			EndIf
		Next nCont		
		If lDeleta
			dbSelectArea("CT2")
			RecLock( "CT2", .f., .t. )
			CT2->( DbDelete() )
			MsUnlock()
		EndIf
		
		dbSkip( )
	End

	#IFDEF TOP
		Endif
	#ENDIF

	// Reprocessamento contabil
	If lReproc
		cFil190 := If(lExclusivo, cFilAnt, XFilial("CT2"))
		CTBA190(.T.,dDataIni,dDataFim,cFil190,cFil190,"1",.F.,"  ")
	EndIf	
EndIf


Return
/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³Ca100Msg  ³ Autor ³ Pilar S. Albaladejo   ³ Data ³ 06.05.98 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Pegunta se usuario deseja continuar tentando travar o regist³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ConA100                                                     ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function Ca100Msg()
Local lRet:=.f.

lRet := MsgYesNo(	OemToAnsi(STR0027) + CHR(13)+Chr(10)+; 	//"Nao consegui travar o registro para  gravar"++;
	OemToAnsi(STR0028) + CHR(13)+Chr(10)+;		// "os Lancamentos  digitados.  Se  nao  quiser"
	OemToAnsi(STR0029) + CHR(13)+Chr(10)+;		// "continuar, o  Contabil  sera finalizado. Se"
	OemToAnsi(STR0030) + CHR(13)+Chr(10)+;		// "quiser continuar tentando travar o registro"
	OemToAnsi(STR0031) ,OemToAnsi(STR0012))	// "escolha a opcao 'Sim'."

Return (!lRet)


/*/{Protheus.doc} CtbPcoDel
	@description excluir registros AKD integracao CTB x PCO
	@type Static Function
	@author Felipe Mayer
	@since 02/12/2021
	@see https://tdn.totvs.com/pages/viewpage.action?pageId=6073474
/*/

Static Function CtbPcoDel(nRecCT2)

	If nRecCT2 > 0
		CT2->(dbGoto(nRecCT2))

		If CT2->CT2_DC != "4"
			PcoDetLan("000082","01","CTBA105",.T.)
		EndIf
	EndIf
	
Return

/*/{Protheus.doc} CA100DelQLD
	(long_description)
	@type  Function
	@author TOTVS
	@since 21/03/2023
	@version version
	@param param_name, param_type, param_descr
	@return return_var, return_type, return_description
	@example
	(examples)
	@see (links_or_references)
	/*/
Static Function CA100DelQLD(cRotina, dDataIni, dDataFim)
Local cQueryQLC := ""
Local cQueryQLD := ""
Local cStrInCT2 := ""
Local cStrInQLD := ""
Local cCpoMSUIDT:= ""
Local nTamSpace := 0
Local nTamCT2   := 0
Local nTamQLD   := 0
Local cGetDB    := AllTrim(Upper(TcGetDB()))
Local cConcat   := IIf("SQL"$cGetDB,"+","||")

cCpoMSUIDT := "CT2_MSUIDT"

If cGetDB == "POSTGRES"
	cCpoMSUIDT := "CAST(CT2_MSUIDT AS VARCHAR)"
ElseIf cGetDB == "ORACLE"
	//Tratamento para não usar o RTRIM() no campo QLD_IDITEM
	//para não prejudicar a performance
	nTamSpace := 4
	nTamCT2 := TamSX3("CT2_MSUIDT")[1]
	nTamQLD := TamSX3("QLD_IDITEM")[1]
	
	If nTamCT2 > 0 .And. nTamQLD > 0
		nTamSpace := nTamQLD-nTamCT2
	EndIf
	cCpoMSUIDT := "CT2_MSUIDT||'"+Space(nTamSpace)+"'"
EndIf

cStrInCT2 :=" SELECT "+cCpoMSUIDT+;				
			" FROM "+RetSqlName("CT2")+" CT2 "+;
			" WHERE CT2_FILIAL = '"+xFilial("CT2")+"' AND "+;
			" CT2_DATA   >= '"+Dtos(dDataIni)+"' AND "+;
			" CT2_DATA   <= '"+Dtos(dDataFim)+"' AND "+;
			" CT2_ROTINA IN "+FormatIn(cRotina, "/")+" AND "+;
			" (CT2_FILORI = ' ' OR CT2_FILORI = '"+cFilAnt+"' ) AND "+;
			" (CT2_EMPORI = ' ' OR CT2_EMPORI = '"+cEmpAnt+"' ) AND "+;
			" CT2.D_E_L_E_T_ = ' '

cStrInQLD :=" SELECT QLD_FILIAL"+cConcat+"QLD_CODCON"+cConcat+"QLD_REGMAT"+cConcat+"QLD_SEQMAT"+;
			" FROM "+RetSqlName("QLD")+" QLD "+;
			" WHERE QLD_IDITEM IN("+cStrInCT2+") "+;
			" AND QLD.D_E_L_E_T_ = ' '


cQueryQLD :=" UPDATE "+RetSqlName("QLD")+;
			" SET D_E_L_E_T_ = '*', R_E_C_D_E_L_ = R_E_C_N_O_  "+;
			" WHERE QLD_FILIAL"+cConcat+"QLD_CODCON"+cConcat+"QLD_REGMAT"+cConcat+"QLD_SEQMAT IN("+cStrInQLD+")"	
IIF(TcSqlExec(cQueryQLD) <> 0, Conout(TCSqlError()), )


cQueryQLC := " UPDATE "+RetSQLName("QLC")+;
				" SET D_E_L_E_T_ = '*', R_E_C_D_E_L_ = R_E_C_N_O_  "+;
				" WHERE NOT EXISTS (SELECT 1 "+;
									" FROM "+RetSQLName("QLD")+" QLD "+;
									" WHERE QLD_FILIAL = QLC_FILIAL AND "+;
									" QLD_CODCON = QLC_CODCON  AND "+;
									" QLD.D_E_L_E_T_ = ' ') AND "+;
					" D_E_L_E_T_ = ' ' "
IIF(TcSqlExec(cQueryQLC) <> 0, Conout(TCSqlError()), )

Return 
