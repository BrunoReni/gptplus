#include 'tlpp-core.th'
#include 'tlpp-rest.th'

#DEFINE STR0001 'issuerID não informado'
#DEFINE STR0002 'não existem dados para o emitente com código: '

#DEFINE POS_CGC          01
#DEFINE POS_IE           02
#DEFINE POS_NAME         03
#DEFINE POS_CITY         04
#DEFINE POS_STATE        05
#DEFINE POS_COMPANY_CODE 06
#DEFINE POS_COMPANY_NAME 07

namespace portal.cliente.util
using namespace gfin.util

//--------------------------------------------------------------------
/*/
{Protheus.doc} issuerData
retorna os Dados do emissor

@author Renato Ito
@since 12/11/2020
/*/
//--------------------------------------------------------------------
@Get('/api/pc/v1/issuerData/:issuerID')
function issuerData()
	local response  As Json
    local params    As Json
    local issuerID  As Character
    local sm0Fields As Array
    local sm0Data   As Array

    params := oRest:getPathParamsRequest()
    sm0Fields := getSM0Fields()
    issuerID := params['issuerID']

    // verifica se recebeu dados do emitente
    if (Empty(issuerID))
        oRest:setStatusCode( 403 )
		oRest:setResponse(STR0001)
    else
        // recuperando dados do emitente
        sm0Data := FWSM0Util():GetSM0Data(cEmpAnt, issuerID, sm0Fields)

        if (len(sm0Data) == 0)
            oRest:setStatusCode( 403 )
		    oRest:setResponse(STR0002 + issuerID)
        else
            response := JsonObject():New()
            response["result"]   := .T.
            response["response"] := JsonObject():New()
            response["response"]["issuerID"] := issuerID
            response["response"]["issuerName"]              := allTrim(sm0Data[POS_NAME        , 02])
            response["response"]["issuerCity"]              := allTrim(sm0Data[POS_CITY        , 02])
            response["response"]["issuerState"]             := allTrim(sm0Data[POS_STATE       , 02])
            response["response"]["issuerDocumentID"]        := allTrim(sm0Data[POS_CGC         , 02])
            response["response"]["issuerStateRegistration"] := allTrim(sm0Data[POS_IE          , 02])
            response["response"]["companyID"]               := allTrim(sm0Data[POS_COMPANY_CODE, 02])
            response["response"]["companyName"]             := allTrim(sm0Data[POS_COMPANY_NAME, 02])

            AnswerRest(response)
        endif
    endif
return

static function getSM0Fields()
    local fields as Array

    fields := {}

    AAdd(fields, "M0_CGC")
    AAdd(fields, "M0_INSC")
    AAdd(fields, "M0_NOMECOM")
    AAdd(fields, "M0_CIDENT")
    AAdd(fields, "M0_ESTENT")
    AAdd(fields, "M0_CODIGO")
    AAdd(fields, "M0_NOME")
return fields
