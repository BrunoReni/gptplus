#include 'tlpp-core.th'
#include 'tlpp-rest.th'
#include 'PC.BILLS.CONTROLLER.CH'

namespace portal.cliente.bills
using namespace gfin.util

//--------------------------------------------------------------------
/*/{Protheus.doc} getBills
EndPoint para obter os títulos financeiros do cliente

@body deve ser encaminhado em json com os atributos:
	{
		"customerid": character "código do cliente",
		"storeid": character "loja do cliente",
		"branchid": array "filiais do sistema a ser consideradas na busca",
		"filter": array para filtro com os atributos
				[ atributo a ser filtrado, operador, valor]
				Os atributos possíveis de filtro são:
				"issueDate": character "data de emissão no formato YYYYMMDD",
				"billNumber": número do título financeiro		
	}
@return JSON,
	hasNext: logical
	items: [
		{
			"code": "301",
			"parcel": "1",
			"type": "BOL",
			"financialType": "R",
			"issueDate": "2019-12-31",
			"realDueDate": "2019-12-31",
			"amount": 752.5,
			"balance": 752.5,
			"status": "1",
			"codebar": "zl2k4i",
			"status": "PENDING"
		},
		{
			"code": "302",
			"parcel": "1",
			"type": "BOL",
			"financialType": "R",
			"issueDate": "2020-01-03",
			"realDueDate": "2020-01-03",
			"amount": 755,
			"balance": 755,
			"status": "1",
			"codebar": "egqel1",
			"status": "PENDING"
		}
	]
@author Alison Lemes
@since aug|2020
/*/
//--------------------------------------------------------------------
@Post('/api/pc/v1/Bills/')
Function getBills()
	Local billsService As Object
	Local response	   As Json
	Local body		   As Json
	Local bodyContent  As Character

	body := JsonObject():new()
	bodyContent := body:fromJson(oRest:GetBodyRequest())

	//Valida se foi recebido um JSON 
	If !(Empty(bodyContent))
		oRest:setStatusCode(403)
		oRest:setResponse(STR0001 + bodyContent)
	Else
		billsService := BillsService():getInstance()

		If (oRest:getQueryRequest()['limit'] != Nil)
			If Val(oRest:getQueryRequest()['limit']) >= 50
				billsService:setLimit(50)
			Else 
				billsService:setLimit(Val(oRest:getQueryRequest()['limit']))
			EndIf
		EndIf

		If (oRest:getQueryRequest()['page'] != Nil)
			billsService:setPage(VAL(oRest:getQueryRequest()['page']))
		Else
			billsService:setPage(1)
		EndIf

		response := billsService:getCustomerBills(body, oRest:getHeaderRequest()["Authorization"])
		AnswerRest(response)
	EndIf
	
Return

//--------------------------------------------------------------------
/*/{Protheus.doc} getBillsInvoice
EndPoint para obter os títulos financeiros do cliente

*Esse endpoint foi criado para que somente
cliente com o RPO atualizado consigam ver títulos
nas notas fiscais.

@body deve ser encaminhado em json com os atributos:
	{
		"customerid": character "código do cliente",
		"storeid": character "loja do cliente",
		"branchid": array "filiais do sistema a ser consideradas na busca",
		"filter": array para filtro com os atributos
				[ atributo a ser filtrado, operador, valor]
				Os atributos possíveis de filtro são:
				"issueDate": character "data de emissão no formato YYYYMMDD",
				"billNumber": número do título financeiro		
	}
@return JSON,
	hasNext: logical
	items: [
		{
			"code": "301",
			"parcel": "1",
			"type": "BOL",
			"financialType": "R",
			"issueDate": "2019-12-31",
			"realDueDate": "2019-12-31",
			"amount": 752.5,
			"balance": 752.5,
			"status": "1",
			"codebar": "zl2k4i",
			"status": "PENDING"
		},
		{
			"code": "302",
			"parcel": "1",
			"type": "BOL",
			"financialType": "R",
			"issueDate": "2020-01-03",
			"realDueDate": "2020-01-03",
			"amount": 755,
			"balance": 755,
			"status": "1",
			"codebar": "egqel1",
			"status": "PENDING"
		}
	]
@author Luiz Nai
@since Mar|2022
/*/
//--------------------------------------------------------------------
@Post('/api/pc/v1/BillsInvoice/')
Function getBillsInvoice()
	Local billsService As Object
	Local response	   As Json
	Local body		   As Json
	Local bodyContent  As Character

	body := JsonObject():new()
	bodyContent := body:fromJson(oRest:GetBodyRequest())

	//Valida se foi recebido um JSON 
	If !(Empty(bodyContent))
		oRest:setStatusCode(403)
		oRest:setResponse(STR0001 + bodyContent)
	Else
		billsService := BillsService():getInstance()

		If (oRest:getQueryRequest()['limit'] != Nil)
			If Val(oRest:getQueryRequest()['limit']) >= 50
				billsService:setLimit(50)
			Else 
				billsService:setLimit(Val(oRest:getQueryRequest()['limit']))
			EndIf
		EndIf

		If (oRest:getQueryRequest()['page'] != Nil)
			billsService:setPage(VAL(oRest:getQueryRequest()['page']))
		Else
			billsService:setPage(1)
		EndIf

		response := billsService:getCustomerBills(body, oRest:getHeaderRequest()["Authorization"])
		AnswerRest(response)
	EndIf
	
Return


@Post('/api/pc/v1/BillsNumbers/')
Function getNumbers()
	Local billsService  	As Object
	Local response			As Json
	Local body				As Json
	Local bodyContent		As Character

	body := JsonObject():new()
	bodyContent := body:fromJson(oRest:GetBodyRequest())

	//Valida se foi recebido um JSON 
	If !(Empty(bodyContent))
		response := answerErrorFormat(403, STR0001, bodyContent)
	Else
		billsService := BillsService():getInstance()
		response := billsService:getBillsNumbers(body, oRest:getHeaderRequest()["Authorization"])
	EndIf

	AnswerRest(response)
Return

/*/{Protheus.doc} putBanks
Envio de Boleto por E-mail

@author luiz.nai
@since 31/05/2021
/*/
@POST('/api/pc/v1/Bills/Email')
Function BillsEmail()
  Local oResponse     As Object
  Local oService      As Object
  Local oBody         As Json
  Local cBodyContent  As Character

  oBody        := JsonObject():new()
  cBodyContent := oBody:fromJson(oRest:GetBodyRequest())

  If !(Empty(cBodyContent))
    oResponse := answerErrorFormat(403, 'body', STR0001 + cBodyContent) // #"Objeto JSON inválido: "
  ElseIf !(validBody(oBody))
    oResponse := answerErrorFormat(412, 'body', STR0002) // #"Não foram recebidos dados obrigatórios para localização do Título Financeiro."
  Else
    oService := BillsService():New()
    oResponse := oService:sendEmail(oBody)
  EndIf

  AnswerRest(oResponse)
  FreeObj(oService)
  FreeObj(oResponse)
Return

/*/
{Protheus.doc} validBody
Validação do body recebido

@param oBody, object, body recebido

@return lRet, logical, .T. para body válido

@author luiz.nai
@since 31/05/2021
/*/
Static Function validBody(oBody As Json) As Logical
  Local lRet    As Logical
  Local aNames  As Array
  Local aFields As Array
  Local nIndex  As numeric

  lRet := .T.

  // recupera as propriedades do body
  aNames := oBody:getNames()

  // define os campos obrigatórios
  aFields := {}
  AAdd(aFields, 'ea_prefixo') // prefixo do título
  AAdd(aFields, 'ea_num') // número do título
  AAdd(aFields, 'ea_parcela') // parcela do título
  AAdd(aFields, 'ea_tipo') // tipo do título

  // valida se body está em branco ou não possui todas as propriedades
  If (Len(aNames) == 0)
    lRet := .F.
  Else
    For nIndex := 01 To Len(aFields)
      If (AScan(aNames, {|x| AllTrim(x) == AllTrim(aFields[nIndex])}) == 0)
        lRet := .F.
        Exit
      EndIf
    Next nIndex

    // verifica se recebeu ea_filial ou e1_filorig
    If (AScan(aNames, {|x| AllTrim(x) $ 'ea_filial|e1_filorig'}) == 0)
        lRet := .F.
    EndIf
  EndIf
Return lRet 

/*/
{Protheus.doc} getVersion
Retorna a versão dos fontes.

*Favor, atualizar versão quando
algo no bills for alterado.

@return cVersion, Numeric.

@author luiz.nai
@since 29/03/2022
/*/
Function getVersion() As Numeric
	Local cVersion As Character
	cVersion := "20220329"
Return Val(cVersion)
