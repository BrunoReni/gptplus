#include 'tlpp-core.th'
#include 'tlpp-rest.th'

#DEFINE STR0001 "Invalid Json Object"

namespace portal.cliente.home
using namespace gfin.util

//--------------------------------------------------------------------
/*/{Protheus.doc}Movements
EndPoint para obter os movimentos do cliente no período

@body deve ser encaminhado em json com os atributos:
	{
		"customerid": character "código do cliente",
		"storeid": character "loja do cliente",
		"branchid": array "filiais do sistema a ser consideradas na busca",
		"date": character "data de referencias no formato YYYYMMDD",
		"periods": numeric "quantidade de meses a serem retornados"
	}
@return JSON, 
	items:[
		{	
			period: string;
			value: number;
		}
	]
@author Renato Ito
@since 03/08/2020
/*/
//--------------------------------------------------------------------
@Post('/api/pc/v1/Movements/')
function getMovements()
	local homeService	as Object
	local response		as Json
	local body			as Json
	local bodyContent	as character

	body := JsonObject():new()
	bodyContent := body:fromJson( oRest:GetBodyRequest() )

	//Valida se foi recebido um JSON 
	If !(Empty(bodyContent))
		response := answerErrorFormat( 403, STR0001, bodyContent )
	else
		homeService := HomeService():getInstance()
		response := homeService:getCustomerMovements( body, oRest:getHeaderRequest()["Authorization"] )
	endif
	
	AnswerRest( response )

return

//-------------------------------------------------------------------
/*/{Protheus.doc}Balances
EndPoint para obter os saldos do cliente

@body deve ser encaminhado em json com os atributos:
	{
		"customerid": character "código do cliente",
		"storeid": character "loja do cliente",
		"branchid": array "filiais do sistema a ser consideradas na busca",
		"date": character "data de referencias no formato YYYYMMDD"
	}
@return JSON
	{
		totalBalance: number;
		weekBalance: number;
		overdueBalance: number;
	}

@author Renato Ito
@since 03/08/2020
/*/
//-------------------------------------------------------------------
@Post('/api/pc/v1/Balances/')
function getBalances()
	local homeService	as Object
	local response		as Json
	local body			as Json
	local bodyContent	as character

	body := JsonObject():new()
	bodyContent := body:fromJson( oRest:GetBodyRequest() )

	//Valida se foi recebido um JSON 
	If !(Empty(bodyContent))
		response := answerErrorFormat( 403, STR0001, bodyContent )
	else
		homeService := HomeService():getInstance()
		response := homeService:getCustomerBalances( body, oRest:getHeaderRequest()["Authorization"] )
	endif
	
	AnswerRest( response )

return

/*/
{Protheus.doc} getVersion
Retorna a versão dos fontes.

*Favor, atualizar versão quando
algo no home for alterado.

@return cVersion, Numeric.

@author luiz.nai
@since 29/03/2022
/*/
Function getVersion() As Numeric
	Local cVersion As Character
	cVersion := "20220329"
Return Val(cVersion)
