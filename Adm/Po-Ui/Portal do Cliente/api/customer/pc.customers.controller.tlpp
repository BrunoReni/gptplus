#Include 'tlpp-core.th'
#Include 'tlpp-rest.th'
#Include 'pc.customers.controller.ch'
#INCLUDE "FWLIBVERSION.CH"

Namespace portal.cliente.customer
Using Namespace gfin.util
Using Namespace portal.cliente.util


//-------------------------------------------------------------------
/*/{Protheus.doc} auth()
EndPoint para pegar os customers.

@header Authorization: Basic /ENCODE64(user:password)/
@body { 'login':'nome_do_usuario', password:'password_do_usuario'  }

@return Nil

@author luiz.nai
@since 07/04/2021
/*/
//-------------------------------------------------------------------
@Post('/api/pc/v1/Customers/')
Function getCustomers()
	Local customerService  	As Object
	Local response	    	As Json
	Local body				As Json
	Local lMetric	:= (FwLibVersion() >= "20210517")	As Logical

	FWLsPutAsyncInfo("LS006",RetCodUsr(),'06',"PORTAL_CLIENTE")
	body := JsonObject():New()
	body:fromJson(oRest:GetBodyRequest())

	If(GetRpoRelease() < '12.1.033')
		response := AnswerErrorFormat(400, STR0003, STR0003)
		oRest:setKeyHeaderResponse('Access-Control-Allow-Credentials' ,'true')
		oRest:setResponse(response["response"])
	Else 	
		// Valida se foi recebido um JSON 
		If (Len(body:GetNames()) == 0)
			response := AnswerErrorFormat(400, STR0001, STR0001)
		Else
			customerService := CustomerService():getInstance()
			response := customerService:serviceCustomer(body)
			If lMetric
				FwCustomMetrics():setSumMetric("ACESSO_PORTAL", "financeiro-protheus_qtd-por-acesso_total", 1,,, "PORTAL_CLIENTE")
			Endif
		EndIf

		If (response["statusCode"] != Nil)
			AnswerRest(response)
		Else
			oRest:setKeyHeaderResponse("Content-Type", "application/json")
			oRest:setKeyHeaderResponse('Access-Control-Allow-Credentials' ,'true')
			oRest:setResponse(response["response"])
		EndIf
	EndIf		
Return

//-------------------------------------------------------------------
/*/{Protheus.doc} auth()
EndPoint para alterar a senha do usuário.

@header Authorization: Basic /ENCODE64(user:password)/
@body { 
	'login':'nome_do_usuario', 
	'current_password':'senha_atual_do_usuario',   
	'updated_password':'senha_nova_do_usuario'
}

@return Nil

@author vinicius.prado
@since 17/10/2022
/*/
//-------------------------------------------------------------------
@Post('/api/pc/v1/Customers/changePassword/')
Function changePassword()
	Local customerService  	As Object
	Local response	    	As Json
	Local body				As Json

	body := JsonObject():New()
	body:fromJson(oRest:GetBodyRequest())

	// Valida se foi recebido um JSON 
	If (Len(body:GetNames()) == 0)
		response := AnswerErrorFormat(400, STR0001, STR0001)
	Else
		customerService := CustomerService():getInstance()
		response := customerService:servicePasswordCustomer(body)
	EndIf

	If (response:hasProperty('statusCode'))
		AnswerRest(response)
	Else
		oRest:setKeyHeaderResponse("Content-Type", "application/json")
		oRest:setKeyHeaderResponse('Access-Control-Allow-Credentials' ,'true')
		oRest:setResponse(response["response"])
	EndIf
	
Return

/*/
{Protheus.doc} getVersion
Retorna a versão dos fontes.

*Favor, atualizar versão quando
algo no customers for alterado.

@return cVersion, Numeric.

@author luiz.nai
@since 29/03/2022
/*/
Function getVersion() As Numeric
	Local cVersion As Character
	cVersion := "20221017"
Return Val(cVersion)
