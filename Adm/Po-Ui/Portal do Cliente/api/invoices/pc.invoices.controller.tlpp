#Include 'tlpp-core.th'
#Include 'tlpp-rest.th'

#Define STR0001 "Invalid Json Object"

Namespace portal.cliente.invoices
Using Namespace gfin.util

//--------------------------------------------------------------------
/*/{Protheus.doc}Invoices
EndPoint para obter as notas fiscais do cliente.

@body deve ser encaminhado em json com os atributos:
	{
		"customerid": character "código do cliente",
		"storeid": character "loja do cliente",
		"branchid": array "filiais do sistema a ser consideradas na busca",
		"filter": array para filtro com os atributos
				[ atributo a ser filtrado, operador, valor]
				Os atributos possíveis de filtro são:
				"issueDate": character "data de emissão no formato YYYYMMDD",
				"invoicenumber": número do documento		
	}
@return JSON,
	hasNext: logical
	items:[
		{	
			"invoiceBranch": character,
			"invoiceNumber": character,
			"invoiceSerie": character,
			"invoiceValue": numeric,
			"invoiceCurrency": character,
			"issueDate": character
		}
	]
@author Renato Ito
@since 19/08/2020
/*/
//--------------------------------------------------------------------
@Post('/api/pc/v1/Invoices/')
Function allInvoices()
	Local invoicesService	As Object
	Local response			As Json
	Local body				As Json
	Local bodyContent		As Character

	body := JsonObject():New()
	bodyContent := body:fromJson(oRest:GetBodyRequest())

	//Valida se foi recebido um JSON 
	If !(Empty(bodyContent))
		response := answerErrorFormat(403, STR0001, bodyContent)
	Else
		invoicesService := InvoicesService():getInstance()

		If (oRest:getQueryRequest()['limit'] != Nil)
			If Val(oRest:getQueryRequest()['limit']) >= 50
				invoicesService:setLimit(50)
			Else 
				invoicesService:setLimit(Val(oRest:getQueryRequest()['limit']))
			EndIf
		Else
			invoicesService:setLimit(25)
		EndIf

		If (oRest:getQueryRequest()['page'] != Nil)
			invoicesService:setPage(Val(oRest:getQueryRequest()['page']))
		Else
			invoicesService:setPage(1)
		EndIf

		response := invoicesService:getInvoices(body, oRest:getHeaderRequest()["Authorization"])
	EndIf

	AnswerRest(response)
Return


//-------------------------------------------------------------------
/*/{Protheus.doc} getInvoiceProducts
EndPoint para obter os detalhes da nota fiscal do cliente.

@body
	{
		"branchId": Character - Filial da nota,
		"invoiceNumber": Character - Número da nota,
		"serie": Character - Série da nota,
		"customerId": Character - Código do cliente,
		"storeId": Character - Loja do cliente
	}

@return Nil

@author richard.lopes
@since 21/08/2020
/*/
//-------------------------------------------------------------------
@Post('/api/pc/v1/InvoiceProducts')
Function getInvoiceProducts()
	Local invoicesService As Object
	Local body			  As Json
	Local response		  As Json
	Local bodyContent	  As Character

	body 		:= JsonObject():New()
	bodyContent := body:FromJson(oRest:GetBodyRequest())

	//Valida se foi recebido um JSON 
	If !(Empty(bodyContent))
		response := AnswerErrorFormat(400, STR0001, bodyContent)
	Else
		invoicesService := InvoicesService():getInstance()
		response := InvoicesService:getCustomerInvoiceProducts(body, oRest:getHeaderRequest()["Authorization"])
	EndIf

	AnswerRest(response)
Return

/*/
{Protheus.doc} getVersion
Retorna a versão dos fontes.

*Favor, atualizar versão quando
algo no invoices for alterado.

@return cVersion, Numeric.

@author luiz.nai
@since 29/03/2022
/*/
Function getVersion() As Numeric
	Local cVersion As Character
	cVersion := "20220329"
Return Val(cVersion)
