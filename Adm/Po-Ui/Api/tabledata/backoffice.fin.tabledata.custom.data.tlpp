#include 'tlpp-core.th'
#INCLUDE "FWLIBVERSION.CH"

NAMESPACE totvs.protheus.backoffice.fin.tabledata
USING NAMESPACE totvs.protheus.backoffice.acf.customer
USING NAMESPACE totvs.protheus.backoffice.fin.apiutil

Static __lCacheQry := FwLibVersion() >= "20211116"

/*/{Protheus.doc} responseSA1FIN
	verifica se existe títulos em aberto para cada cliente
	@type  Function
	@author renato.ito
	@since 20/10/2022
	@param jResponse, Json, response gerado pela classe
	@return jResponse, Json, response com items tratados
/*/
Function responseSA1FIN(jResponse as Json) as Json
	Local nItem       		:= 1 								as Numeric
	Local cFilSA1			:= ""								as Character
	Local cCliente    		:= ""     							as Character
	Local cLoja       		:= ""    							as Character
	Local oPendente	   		:= NIL 								as Object
	Local oVencido	   		:= NIL 								as Object									
	Local nCountPendente	:= 0     							as Numeric
	Local nCountVencidos	:= 0     							as Numeric
	Local nMvCusto 			:= Val(Alltrim(SuperGetMV("MV_MCUSTO",.F.,"2"))) as Numeric

	If __lCacheQry
		oPendente := FWExecStatement():new()
		oVencido := FWExecStatement():new()
	Else
		oPendente := FWPreparedStatement():New()
		oVencido := FWPreparedStatement():New()
	Endif

	If jResponse:hasProperty('items') .And. ValType(jResponse['items']) == 'A'
		For nItem := 1 To Len(jResponse['items'])
			cFilSA1   := jResponse['items'][nItem]['a1_filial']
			cCliente  := jResponse['items'][nItem]['a1_cod']
			cLoja     := jResponse['items'][nItem]['a1_loja']

			//Ajuste moeda
            If  jResponse['items'][nItem]['a1_moedalc'] == 0
                jResponse['items'][nItem]['a1_moedalc'] := nMvCusto
            EndIf

			//Legenda
			nCountPendente := customerBills("pendente", oPendente, cCliente, cLoja, cFilSA1, " COUNT(SE1.E1_NUM) ")
			nCountVencidos := customerBills("vencido", oVencido, cCliente, cLoja, cFilSA1, " COUNT(SE1.E1_NUM) ") 
			
			If nCountPendente + nCountVencidos  > 0
				If nCountVencidos > 0
					jResponse['items'][nItem]['openlabel'] = '2' //Com títulos em aberto e vencidos (vermelho)
				Else
					jResponse['items'][nItem]['openlabel'] = '1' //Com títulos em aberto (amarelo)
				Endif	
			Else
				jResponse['items'][nItem]['openlabel'] = '0' //Sem títulos (verde)
			EndIf

		Next
	EndIf

	oPendente:Destroy()  
	oVencido:Destroy()

Return jResponse

/*/{Protheus.doc} responseSE1LEG
	Retorna legenda customizada para os titulos a receber
	@type  Function
	@author Vitor Duca
	@since 02/12/2022
	@param jResponse, Json, response gerado pela classe
	@return jResponse, Json, response com items tratados
/*/
Function responseSE1LEG(jResponse as Json, cIdLeg As Character) as Json
	Local nItem	:= 0 As Numeric
	Local cDateVenc := "" As Character
	Local cDateBase := Dtos(dDatabase) As Character 

	If jResponse:hasProperty('items') .And. ValType(jResponse['items']) == 'A'
		For nItem := 1 To Len(jResponse['items'])
			Do Case
				Case AllTrim(Upper(cIdLeg)) == "ACF"
					cDateVenc := totvs.protheus.backoffice.fin.apiutil.jsonStringToIso(jResponse['items'][nItem]['e1_vencrea'])
					//Legenda
					If jResponse['items'][nItem]['e1_saldo'] > 0 .and. cDateVenc >= cDateBase
						jResponse['items'][nItem]['status'] = '1' //Pendente
					Elseif 	jResponse['items'][nItem]['e1_saldo'] > 0 .and. cDateVenc < cDateBase
						jResponse['items'][nItem]['status'] = '2' //Vencido
					Endif
			End Case
		Next
	EndIf

Return jResponse
