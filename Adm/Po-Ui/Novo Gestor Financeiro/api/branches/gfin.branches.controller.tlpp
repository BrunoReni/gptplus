#include 'tlpp-core.th'
#include 'tlpp-rest.th'


NAMESPACE gfin.controller.branches
USING NAMESPACE gfin.util
USING NAMESPACE gfin.util.validRelease


//-------------------------------------------------------------------
/*/{Protheus.doc} getBranches
EndPoint para obter as filiais do usuário

@return JSON
@author richard.lopes
@since 20/10/2020
/*/
//-------------------------------------------------------------------
@Get('/api/gfin/v1/Branches')
Function getBranches()
  Local response As Json

  response := JsonObject():New()
  response["response"] := JsonObject():New()
  response["response"]["items"] := gfin.util.branchesOfUser()
  response["result"]   := .T.

  AnswerRest(response)
  FreeObj(response)
  response := nil
Return

//-------------------------------------------------------------------
/*/{Protheus.doc} keepAlive
EndPoint para manter a conexão do end point ativa no protheus

@return JSON
@author Daniel
@since 11/02/2021
/*/
//-------------------------------------------------------------------
@Get('/api/gfin/v1/KeepAlive')
Function keepAlive()
  Local response As Json
  Local status   As Json

  response := JsonObject():New()
  status   := JsonObject():New()
  status["status"]     := "OK"
  response["response"] := status
  response["result"]   := .T.

  AnswerRest(response)
  FreeObj(response)
  response := nil
Return

//-------------------------------------------------------------------
/*/{Protheus.doc} keepAlive
EndPoint para manter a conexão do end point ativa no protheus

@return JSON
@author Daniel
@since 11/02/2021
/*/
//-------------------------------------------------------------------
@GET('/api/gfin/v1/ReleaseRpo')
Function getReleaseRpo()

  Local response    As Json
  Local ReleaseRpo  As Json

  response    := JsonObject():New()
  ReleaseRpo  := JsonObject():New()
  status      := JsonObject():New()

  If !(GetRpoRelease() >= "12.1.033")

    If (gfin.util.validRelease.getValidRelease())
      status["status"]     := "OK"
      response["response"] := status
      response["result"]   := .T.
      AnswerRest(response)
    Else
      AnswerRest(answerErrorFormat(412, "", "")) 
    Endif
  Else
    status["status"]     := "OK"
    response["response"] := status
    response["result"]   := .T.
    AnswerRest(response)
  Endif

  FreeObj(response)
  FreeObj(status)
  FreeObj(ReleaseRpo)
  response := nil

Return
