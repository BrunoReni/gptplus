#INCLUDE "tlpp-core.th"

NAMESPACE gfin.api.orders
USING NAMESPACE totvs.protheus.backoffice.ngf.util

Static __lF76FILORI := F76->(FieldPos("F76_FILORI")) > 0
Static __lF76BLQLIB := F76->(FieldPos("F76_BLQLIB")) > 0
//-------------------------------------------------------------------
/*/{Protheus.doc} apiOrdersFields
campos defaults para retorno da API

@param  table As Character, SC6 ou SC7
@param  aApiFields As Array, lista de campos para adicionar

@return array, lsita dos campos

@author Alison Kaique
@since mar|2021
/*/
//-------------------------------------------------------------------
Function apiOrdersFields(cTable as Character, aApiFields as Array) as Array
  Local cfields   := '' as Character
  Local nField    := 1  as Numeric
  Local cFilTable := '' as Character

  If 'SC6' $ cTable
    cFilTable := 'C6_FILIAL,'
    cfields   := 'C6_FILIAL,C6_NUM,C6_ITEM,C6_PRODUTO,C6_CLI,C6_LOJA,A1_NREDUZ,C6_ENTREG,'
    cfields   += 'C6_VALOR,F76_DATA,F76_MOEDA,F76_TXMOED,F76_VALOR,F76_VLORIG'
  ElseIf 'SC7' $ cTable
    cFilTable := 'C7_FILIAL,'
    cfields   := 'C7_FILIAL,C7_NUM,C7_ITEM,C7_PRODUTO,C7_FORNECE,C7_LOJA,A2_NREDUZ,C7_DATPRF,'
    cfields   += 'C7_TOTAL,F76_DATA,F76_MOEDA,F76_TXMOED,F76_VALOR,F76_VLORIG'
  EndIf

  If __lF76BLQLIB
    cfields += ",F76_BLQLIB"
  EndIf

  for nField := 1 to len(aApiFields)
    if !(aApiFields[nField] $ cfields)
      cfields += ',' + aApiFields[nField]
    endif
  next
  // retira o campo de filial se for compartilhado
  if FWModeAccess(cTable, 1) == 'C'
    strTran(cfields, cFilTable, '')
  endif
Return STRtoArray(cfields, ',')

//-------------------------------------------------------------------
/*/{Protheus.doc} apiOrdersQuery
query para retorno da API

@param  table As Character, SC6 ou SC7

@return query As Character, query padrão para uso na api

@author Alison Kaique
@since mar|2021
/*/
//-------------------------------------------------------------------
Function apiOrdersQuery(table as Character)
  Local query               as Character
  Local fieldNick           as Character
  Local customerVendor      as Character
  Local type                as Character
  Local customerVendorTable as Character
  Local customerVendorNick  as Character
  Local customerVendorSize  As Numeric
  Local tableSize           As Numeric

  If 'SC6' $ table
    fieldNick           := table + '.C6_'
    customerVendorNick  := 'A1_'
    customerVendor      := 'CLI'
    customerVendorTable := 'SA1'
    type                := '1'
  Else
    fieldNick           := table + '.C7_'
    customerVendorNick  := 'A2_'
    customerVendor      := 'FORNECE'
    customerVendorTable := 'SA2'
    type                := '2'
  EndIf

  customerVendorSize := Len(AllTrim(FWxFilial(customerVendorTable)))
  tableSize          := Len(AllTrim(FWxFilial(table)))

  query := " SELECT #QueryFields# "
  query += " FROM " + RetSqlName(table) + " " + table
  
  // Join com a F76
  query += " LEFT JOIN " + RetSqlName('F76') + " F76"
  If __lF76FILORI
    query += " ON " + fieldNick + "FILIAL = F76.F76_FILORI"
  Else
    query += " ON " + fieldNick + "FILIAL = F76.F76_FILIAL"
  EndIf
  query += " AND " + fieldNick + "NUM = F76.F76_PEDIDO"
  query += " AND " + fieldNick + "ITEM = F76.F76_ITEM"
  query += " AND " + fieldNick + customerVendor + " = F76.F76_CLIFOR"
  query += " AND " + fieldNick + "LOJA = F76.F76_LOJA"
  query += " AND F76.D_E_L_E_T_ =' '"
  query += " AND F76.F76_TIPO ='" + type + "'"
  
  If table == 'SC6'
    // Join com a SC5
    query += " INNER JOIN " + RetSqlName("SC5") + " SC5 "
    query += " ON SC5.C5_FILIAL = " + fieldNick + "FILIAL "
    query += " AND SC5.C5_NUM = " + fieldNick + "NUM "
    query += " AND SC5.D_E_L_E_T_ = ' ' "
  Endif
  
  // Join com os fornecedores/clientes
  query += " INNER JOIN " + RetSqlName(customerVendorTable) + " CLIFOR"

  query += " ON " + totvs.protheus.backoffice.ngf.util.BranchRelation( {table, SubsTr(fieldNick,5,3)  + "FILIAL", table}, {customerVendorTable, customerVendorNick + "FILIAL", "CLIFOR"} )

  query += " AND CLIFOR." + customerVendorNick + "COD = " + fieldNick + customerVendor
  query += " AND CLIFOR." + customerVendorNick + "LOJA = " + fieldNick + "LOJA"
  query += " AND CLIFOR.D_E_L_E_T_ =' '"
  query += " WHERE "
  query += " #QueryWhere#"
Return query

//-------------------------------------------------------------------
/*/{Protheus.doc} apiOrdersOrder
ordem da consulta para retorno da API

@param  table As Character, SC6 ou SC7

@return order As Character, string de order para query

@author Alison Kaique
@since mar|2021
/*/
//-------------------------------------------------------------------
Function apiOrdersOrder(table as Character)
  Local queryOrder as Character

  If 'SC6' $ table
    queryOrder := 'C6_FILIAL,C6_NUM,C6_ITEM,C6_PRODUTO,C6_CLI,C6_LOJA,C6_ENTREG'
  ElseIf 'SC7' $ table
    queryOrder := 'C7_FILIAL,C7_NUM,C7_ITEM,C7_PRODUTO,C7_FORNECE,C7_LOJA,C7_DATPRF'

  EndIf
Return queryOrder

//-------------------------------------------------------------------
/*/{Protheus.doc} dbConcat
retorno o comando de concatenação de acordo com o banco de dados.

@return concat as Character, comando de concatenação

@author daniele.ferreira
@since 25/05/2021
/*/
//-------------------------------------------------------------------
Function dbConcat() as Character
  Local concat   as Character
  Local typeDb   as Character

  typeDb := Upper(TcGetDb())
  concat := "+"
  
  If typeDb $ "ORACLE|POSTGRES"  
    concat := "||"
  EndIf

Return concat
