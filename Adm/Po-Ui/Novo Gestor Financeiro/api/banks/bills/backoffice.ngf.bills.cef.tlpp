#include 'tlpp-core.th'
#include "COLORS.CH"
#include "PROTHEUS.CH"
#include "BACKOFFICE.NGF.BILLS.CEF.CH"

NameSpace totvs.protheus.backoffice.ngf.cef
USING NAMESPACE totvs.protheus.backoffice.ngf.bills.functions

/*/{Protheus.doc} Prepara XML para envio ao CEF
    @type function
    @version 1.0
    @author francisco.oliveira
    @since 16/11/2021
    @param cXMLCEF Layout As Character
    @return XML ajustado para o CEF
/*/

//Dados de entrada do serviço – Header/Dados – Inclui, altera e baixa boleto

Function prepare104(oLayout As Json) As Character

	Local cXmlCEF    	:= "" As Character
	Local cAutentica    := "" As Character
	Local cIdCNAB       := "" As Character
	Local cFormData     := "" As Character
	Local cDataAux		:= "" As Character
	Local cCodEmprSEE	:= "" As Character
	Local cNossoNum		:= "" As Character
	Local cVlrNom		:= "" As Character
	Local cVlrAbat      := "" As Character
	Local cOperacao     := "" As Character
	Local cUnidade      := "" As Character
	Local cMaskVlr      := "" As Character
	Local cMaskPer      := "" As Character
	Local cProtesto		:= "" As Character
	Local cDiasProt		:= "" As Character
	Local cCgcEmp       := "" As Character
    Local cTipoRazao    := "" As Character
    Local cNrCPFCNPJ    := "" As Character
    Local cNumTit       := "" As Character

	//TAGS INICIO HEADER
    If oLayout:Hasproperty('beneficiarioFilial')
        cCgcEmp 	:= AllTrim(FWSM0Util():GetSM0Data(cEmpAnt, oLayout['beneficiarioFilial'] , {'M0_CGC'})[1][2])
    Else
	    cCgcEmp 	:= AllTrim(FWSM0Util():GetSM0Data(cEmpAnt, cFilAnt , {'M0_CGC'})[1][2])
    EndIf
	cCodAgAux 	:= Iif(Len(Alltrim(getAgenciaSEE())) < 4, PadL(Alltrim(getAgenciaSEE()), 4, "0"), Alltrim(getAgenciaSEE()))
	cUnidade    := SubStr(cCodAgAux, Len(cCodAgAux) - 3, 4)
	cOperacao   := "INCLUI_BOLETO"
	cMaskVlr    := "9999999999999.99"
	cMaskPer    := "9999999999.99999"
	cNossoNum	:= "14" + PadL(Alltrim(NossoNum()),15,"0")
	cProtesto	:= "DEVOLVER"
	cDiasProt	:= "2"
	cCodEmprSEE	:= PadL(AllTrim(SEE->EE_CODEMP), 7, "0")

	cFormData	:= StrTran(oLayout['DATA_VENCIMENTO'],'.','')
	cVlrNom		:= PadL(AllTrim(Transform((Val(oLayout['VALOR']) / 100), cMaskVlr)), 16, "0")

	cAutentica  := cCodEmprSEE + cNossoNum + cFormData + PadL(AllTrim(oLayout['VALOR']), 15, "0") + cCgcEmp
	cAutentica  := Encode64(SHA256(cAutentica, 1 ))

	cIdCNAB		:= PadL(AllTrim(SE1->E1_IDCNAB), 11, "0")

    If oLayout:hasProperty('NUM_TIT_BENEF') .And. !Empty(oLayout['NUM_TIT_BENEF'])
        cNumTit := SubStr(Upper(oLayout['NUM_TIT_BENEF']),1,11)
    Else
        cNumTit := SE1->E1_NUM
    EndIf

	cXmlCEF += "<soapenv:Envelope xmlns:soapenv='http://schemas.xmlsoap.org/soap/envelope/' "
	cXmlCEF += "xmlns:ext='http://caixa.gov.br/sibar/manutencao_cobranca_bancaria/boleto/externo' "
	cXmlCEF += "xmlns:sib='http://caixa.gov.br/sibar'>" + Chr(10)

	cXmlCEF += "<soapenv:Header/>" + Chr(10)
	cXmlCEF += "<soapenv:Body>" + Chr(10)
	cXmlCEF += "<ext:SERVICO_ENTRADA>" + Chr(10)
	cXmlCEF += 		"<sib:HEADER>" + Chr(10)
	cXmlCEF +=           "<VERSAO>2.1</VERSAO>" + Chr(10)
	cXmlCEF +=           "<AUTENTICACAO>" + cAutentica + "</AUTENTICACAO>" + Chr(10)
	cXmlCEF +=           "<USUARIO_SERVICO>SGCBS02P</USUARIO_SERVICO>" + Chr(10)
	cXmlCEF +=           "<OPERACAO>" + cOperacao + "</OPERACAO>" + Chr(10)
	cXmlCEF +=           "<SISTEMA_ORIGEM>SIGCB</SISTEMA_ORIGEM>" + Chr(10)
	cXmlCEF +=           "<UNIDADE>" + cUnidade + "</UNIDADE>" + Chr(10)
	cXmlCEF +=           "<DATA_HORA>" + DTOS(Date()) + StrTran(Time(), ":", "") + "</DATA_HORA>" + Chr(10)
	cXmlCEF +=      "</sib:HEADER>" + Chr(10)

// Inclusão dos dados do BOLETO
	cXmlCEF +=      "<DADOS>" + Chr(10)
	cXmlCEF +=           "<INCLUI_BOLETO>" + Chr(10)
	cXmlCEF +=               "<CODIGO_BENEFICIARIO>" + cCodEmprSEE + "</CODIGO_BENEFICIARIO>" + Chr(10)
	cXmlCEF +=               "<TITULO>" + Chr(10)

	cXmlCEF +=                   "<NOSSO_NUMERO>" + cNossoNum + "</NOSSO_NUMERO>" + Chr(10)
	cXmlCEF +=                   "<NUMERO_DOCUMENTO>" + cNumTit + "</NUMERO_DOCUMENTO>" + Chr(10)

	cDataAux  := StrTran(oLayout['DATA_VENCIMENTO'],'.','')
	cFormData := SubStr(cDataAux, 5, 4) + "-" + SubStr(cDataAux, 3, 2) + "-" + SubStr(cDataAux, 1, 2)

	cXmlCEF +=                   "<DATA_VENCIMENTO>" + cFormData + "</DATA_VENCIMENTO>" + Chr(10)
	cXmlCEF +=                   "<VALOR>" + cVlrNom + "</VALOR>" + Chr(10)
	cXmlCEF +=                   "<TIPO_ESPECIE>" + PadL(AllTrim(SEA->EA_ESPECIE), 2, "0") + "</TIPO_ESPECIE>" + Chr(10)
	
    If oLayout:hasProperty('ACEITE')
        cXmlCEF +=                   "<FLAG_ACEITE>" + iiF(oLayout['ACEITE'] == 1, "S", "N") + "</FLAG_ACEITE>" + Chr(10)
    Else
        cXmlCEF +=                   "<FLAG_ACEITE>N</FLAG_ACEITE>" + Chr(10)
    Endif    

	cDataAux  := DtoS(SE1->E1_EMISSAO)
	cFormData := SubStr(cDataAux, 1, 4) + "-" + SubStr(cDataAux, 5, 2) + "-" + SubStr(cDataAux, 7, 2)

	cXmlCEF +=                   "<DATA_EMISSAO>" + cFormData + "</DATA_EMISSAO>" + Chr(10)
	cXmlCEF +=                   "<JUROS_MORA>" + Chr(10)
	If oLayout['JUROS_MORA']['TIPO'] == 1 //"Dia"
		cDataAux  := StrTran(oLayout['JUROS_MORA']['DATA'], '-', '')
		cFormData := SubStr(cDataAux, 1, 4) + "-" + SubStr(cDataAux, 5, 2) + "-" + SubStr(cDataAux, 7, 2)
		cXmlCEF +=                       "<TIPO>VALOR_POR_DIA</TIPO>" + Chr(10)
		cXmlCEF +=                       "<DATA>" + cFormData + "</DATA>" + Chr(10)
		cXmlCEF +=                       "<VALOR>" + PadL(AllTrim(Transform(oLayout['JUROS_MORA']['VALOR'], cMaskVlr )), 16, "0") + "</VALOR>" + Chr(10)
	ElseIf oLayout['JUROS_MORA']['TIPO'] == 2 //"Mes"
		cDataAux  := StrTran(oLayout['JUROS_MORA']['DATA'], '-', '')
		cFormData := SubStr(cDataAux, 1, 4) + "-" + SubStr(cDataAux, 5, 2) + "-" + SubStr(cDataAux, 7, 2)
		cXmlCEF +=                       "<TIPO>TAXA_MENSAL</TIPO>" + Chr(10)
		cXmlCEF +=                       "<DATA>" + cFormData + "</DATA>" + Chr(10)
		cXmlCEF +=                       "<PERCENTUAL>" + PadL(oLayout['JUROS_MORA']['PERCENTUAL'], 16, "0") + "</PERCENTUAL>" + Chr(10)
	Else
		cXmlCEF +=                       "<TIPO>ISENTO</TIPO>" + Chr(10)
		cXmlCEF +=                       "<VALOR>0</VALOR>" + Chr(10)
	Endif
	cXmlCEF +=                   "</JUROS_MORA>" + Chr(10)

    If oLayout:hasProperty('VALOR_ABATIMENTO')
	    cVlrAbat := PadL(AllTrim(Transform(Val(oLayout['VALOR_ABATIMENTO']), cMaskVlr)), 16, "0")
    EndIf

	If cVlrAbat == '0000000000000.00' .Or. Empty(cVlrAbat)
		cVlrAbat := "0"
	Endif

	cXmlCEF +=                   "<VALOR_ABATIMENTO>" + cVlrAbat + "</VALOR_ABATIMENTO>" + Chr(10)
	cXmlCEF +=                   "<POS_VENCIMENTO>" + Chr(10)

	If SEE->EE_DIASPRT > "0" .And. !Empty(SEE->EE_DIASPRT)
		cProtesto := "PROTESTAR"
		cDiasProt := SEE->EE_DIASPRT
	Endif

	cXmlCEF +=                       "<ACAO>" + cProtesto + "</ACAO>" + Chr(10)
	cXmlCEF +=                       "<NUMERO_DIAS>" + cDiasProt + "</NUMERO_DIAS>" + Chr(10)
	cXmlCEF +=                   "</POS_VENCIMENTO>" + Chr(10)

	cXmlCEF +=                   "<CODIGO_MOEDA>09</CODIGO_MOEDA>" + Chr(10)
	cXmlCEF +=                   "<PAGADOR>" + Chr(10)

	If Len(Alltrim(SA1->A1_CGC)) == 11
        cNrCPFCNPJ := PadL(Alltrim(SA1->A1_CGC), 11, "0")
        cTipoRazao := "CPF"
		cXmlCEF +=                       "<CPF>" + cNrCPFCNPJ + "</CPF>" + Chr(10)
		cXmlCEF +=                       "<NOME>" + SubStr(AllTrim(characterXML(oLayout['PAGADOR']['NOME'])), 1, 40) + "</NOME>" + Chr(10)
	Else
		cNrCPFCNPJ := PadL(Alltrim(SA1->A1_CGC), 14, "0")
        cTipoRazao := "CNPJ"
        cXmlCEF +=                       "<CNPJ>" + cNrCPFCNPJ + "</CNPJ>" + Chr(10)
		cXmlCEF +=                       "<RAZAO_SOCIAL>" + SubStr(AllTrim(characterXML(oLayout['PAGADOR']['NOME'])), 1, 40) + "</RAZAO_SOCIAL>" + Chr(10)
	Endif

	cXmlCEF +=                           "<ENDERECO>" + Chr(10)
	cXmlCEF +=                               "<LOGRADOURO>" + SubStr(AllTrim(characterXML(oLayout['ENDERECO']['LOGRADOURO'])), 1, 40) + "</LOGRADOURO>" + Chr(10)
	cXmlCEF +=                               "<BAIRRO>" + SubStr(AllTrim(characterXML(oLayout['ENDERECO']['BAIRRO'])), 1, 15) + "</BAIRRO>" + Chr(10)
	cXmlCEF +=                               "<CIDADE>" + SubStr(AllTrim(characterXML(oLayout['ENDERECO']['CIDADE'])), 1, 15) + "</CIDADE>" + Chr(10)
	cXmlCEF +=                               "<UF>" + SubStr(oLayout['ENDERECO']['UF'], 1, 2) + "</UF>" + Chr(10)
	cXmlCEF +=                               "<CEP>" + SubStr(oLayout['ENDERECO']['CEP'], 1, 8) + "</CEP>" + Chr(10)
	cXmlCEF +=                           "</ENDERECO>" + Chr(10)
	cXmlCEF +=                   "</PAGADOR>" + Chr(10)

	If oLayout['MULTA']['TIPO'] == 1
		cDataAux  := StrTran(oLayout['MULTA']['DATA'],"-", "")
		cFormData := SubStr(cDataAux, 1, 4) + "-" + SubStr(cDataAux, 5, 2) + "-" + SubStr(cDataAux, 7, 2)
		cXmlCEF +=                   "<MULTA>" + Chr(10)
		cXmlCEF +=                       "<DATA>" + cFormData + "</DATA>" + Chr(10)
		cXmlCEF +=                       "<VALOR>" + PadL(AllTrim(Transform(Val(oLayout['MULTA']['VALOR']), cMaskVlr)), 16, "0") + "</VALOR>" + Chr(10)
		cXmlCEF +=                   "</MULTA>" + Chr(10)
	ElseIf oLayout['MULTA']['TIPO'] == 2
		cDataAux  := StrTran(oLayout['MULTA']['DATA'],"-", "")
		cFormData := SubStr(cDataAux, 1, 4) + "-" + SubStr(cDataAux, 5, 2) + "-" + SubStr(cDataAux, 7, 2)
		cXmlCEF +=                   "<MULTA>" + Chr(10)
		cXmlCEF +=                       "<DATA>" + cFormData + "</DATA>" + Chr(10)
		cXmlCEF +=                       "<PERCENTUAL>" + PadL(AllTrim(Transform(Val(oLayout['MULTA']['PERCENTUAL']), cMaskPer)), 16, "0") + "</PERCENTUAL>" + Chr(10)
		cXmlCEF +=                   "</MULTA>" + Chr(10)
	Endif

	cXmlCEF +=                   "<DESCONTOS>" + Chr(10)
	cXmlCEF +=                       "<DESCONTO>" + Chr(10)

	If oLayout['DESCONTO']['TIPO'] == 1
		cDataAux  := StrTran(oLayout['DESCONTO']['DATA'],"-", "")
		cFormData := SubStr(cDataAux, 1, 4) + "-" + SubStr(cDataAux, 5, 2) + "-" + SubStr(cDataAux, 7, 2)
		cXmlCEF +=                           "<DATA>" + cFormData + "</DATA>" + Chr(10)
		cXmlCEF +=                           "<VALOR>" + PadL(AllTrim(Transform(Val(oLayout['DESCONTO']['VALOR']), cMaskPer)), 16, "0") + "</VALOR>" + Chr(10)
		cXmlCEF +=                           "<TIPO>VALOR_FIXO_ATE_DATA</TIPO>" + Chr(10)
	ElseIf oLayout['DESCONTO']['TIPO'] == 2
		cDataAux  := StrTran(oLayout['DESCONTO']['DATA'],"-", "")
		cFormData := SubStr(cDataAux, 1, 4) + "-" + SubStr(cDataAux, 5, 2) + "-" + SubStr(cDataAux, 7, 2)
		cXmlCEF +=                           "<DATA>" + cFormData + "</DATA>" + Chr(10)
		cXmlCEF +=                           "<PERCENTUAL>" + PadL(AllTrim(Transform(Val(oLayout['DESCONTO']['PERCENTUAL']), cMaskPer)), 16, "0") + "</PERCENTUAL>" + Chr(10)
		cXmlCEF +=                           "<TIPO>PERCENTUAL_ATE_DATA</TIPO>" + Chr(10)
	Else
		cXmlCEF +=                           "<VALOR>0000000000000.00</VALOR>" + Chr(10)
		cXmlCEF +=                           "<TIPO>ISENTO</TIPO>" + Chr(10)
	Endif
	cXmlCEF +=                       "</DESCONTO>" + Chr(10)
	cXmlCEF +=                   "</DESCONTOS>" + Chr(10)

    cXmlCEF +=                   "<IDENTIFICACAO_EMPRESA>" + cIdCNAB + "</IDENTIFICACAO_EMPRESA>" + Chr(10)

	cXmlCEF +=                   "<FICHA_COMPENSACAO>" + Chr(10)
	cXmlCEF +=                       "<MENSAGENS>" + Chr(10)
	cXmlCEF +=                           "<MENSAGEM>" + Iif(!Empty(AllTrim(SEE->EE_FORMEN1)), SubStr(AllTrim(SEE->EE_FORMEN1), 1, 40 ), " ") + "</MENSAGEM>" + Chr(10)
	cXmlCEF +=                           "<MENSAGEM>" + Iif(!Empty(AllTrim(SEE->EE_FORMEN2)), SubStr(AllTrim(SEE->EE_FORMEN2), 1, 40 ), " ") + "</MENSAGEM>" + Chr(10)
	cXmlCEF +=                       "</MENSAGENS>" + Chr(10)
	cXmlCEF +=                   "</FICHA_COMPENSACAO>" + Chr(10)

	cXmlCEF +=                   "<RECIBO_PAGADOR>" + Chr(10)
	cXmlCEF +=                       "<MENSAGENS>" + Chr(10)
	cXmlCEF +=                           "<MENSAGEM>" + Iif(!Empty(AllTrim(SEE->EE_FORMEN1)), SubStr(AllTrim(SEE->EE_FORMEN1), 1, 40 ), " ") + "</MENSAGEM>" + Chr(10)
	cXmlCEF +=                           "<MENSAGEM>" + Iif(!Empty(AllTrim(SEE->EE_FORMEN2)), SubStr(AllTrim(SEE->EE_FORMEN2), 1, 40 ), " ") + "</MENSAGEM>" + Chr(10)
	cXmlCEF +=                           "<MENSAGEM>" + Iif(!Empty(AllTrim(SEE->EE_FOREXT1)), SubStr(AllTrim(SEE->EE_FORMEN1), 1, 40 ), " ") + "</MENSAGEM>" + Chr(10)
	cXmlCEF +=                           "<MENSAGEM>" + Iif(!Empty(AllTrim(SEE->EE_FOREXT2)), SubStr(AllTrim(SEE->EE_FORMEN2), 1, 40 ), " ") + "</MENSAGEM>" + Chr(10)
	cXmlCEF +=                       "</MENSAGENS>" + Chr(10)
	cXmlCEF +=                   "</RECIBO_PAGADOR>" + Chr(10)

	cXmlCEF +=                   "<PAGAMENTO>" + Chr(10)
	cXmlCEF +=                       "<QUANTIDADE_PERMITIDA>1</QUANTIDADE_PERMITIDA>" + Chr(10)
	cXmlCEF +=                       "<TIPO>NAO_ACEITA_VALOR_DIVERGENTE</TIPO>" + Chr(10)
	cXmlCEF +=                       "<VALOR_MINIMO>0000000000000.00</VALOR_MINIMO>" + Chr(10)
	cXmlCEF +=                       "<VALOR_MAXIMO>0000000000000.00</VALOR_MAXIMO>" + Chr(10)
	cXmlCEF +=                   "</PAGAMENTO>" + Chr(10)
	cXmlCEF +=               "</TITULO>" + Chr(10)
	cXmlCEF +=           "</INCLUI_BOLETO>" + Chr(10)
	cXmlCEF +=      "</DADOS>" + Chr(10)
	cXmlCEF += "</ext:SERVICO_ENTRADA>" + Chr(10)
	cXmlCEF += "</soapenv:Body>" + Chr(10)
	cXmlCEF += "</soapenv:Envelope>" + Chr(10)

	FreeObj(oLayout)
    
    oLayout := JsonObject():new()
	oLayout['XmlCEF']  := cXmlCEF
    oLayout['TpRazao'] := cTipoRazao
    oLayout['nrcpfcnpj'] := cNrCPFCNPJ

Return cXmlCEF
/*/{Protheus.doc} Caixa104
    Gera o boleto do Banco Caixa Economica Federal
    @type function
    @version  12.1.33
    @author francisco.oliveira
    @since 01/12/2021
    @param cData, Character, dados do boleto
    @param oPrint, Object, Objeto do FWMSPrinter
/*/
Function Caixa104(cData As Character, oPrint AS Object)
    Local aDados      As Array
    Local nOffset     As Numeric
    Local nOffsetLine As Numeric
    Local nOffsetRec  As Numeric
    Local nOffsetBol  As Numeric
    Local nLinha      As Numeric
    Local nColuna     As Numeric
    Local nLimBen     As Numeric
    Local nLimPag     As Numeric
    Local oData       As Object
    Local oFont7      As Object
    Local oFont8      As Object
    Local oFont10     As Object
    Local oFont11     As Object
    Local oFont15     As Object
    Local oFont14n    As Object

    oData := JsonObject():new()
    oData:fromJson(cData)

    oFont7     := TFont():New("Arial" ,9,7,.T.,.T.,5,.T.,5,.T.,.F.)
    oFont8     := TFont():New("Arial" ,9,8,.T.,.F.,5,.T.,5,.T.,.F.)
    oFont10    := TFont():New("Arial" ,9,10,.T.,.T.,5,.T.,5,.T.,.F.)
    oFont11    := TFont():New("Arial" ,9,11,.T.,.T.,5,.T.,5,.T.,.F.)
    oFont15    := TFont():New("Arial" ,9,17,.T.,.T.,5,.T.,5,.T.,.F.)
    oFont14n   := TFont():New("Arial" ,9,16,.T.,.T.,5,.T.,5,.T.,.F.)

    nLinha      := 10
    nColuna     := 10
    nOffsetBol  := 0
    nOffsetRec  := 0
    nOffsetLine := 0
    aDados      := {}
    nLimBen     := 50
    nLimPag     := 65

    // Beneficiario
    aAdd(aDados, oData['beneficiario']['banco'])     // 1 - Numero do Banco
    aAdd(aDados, oData['beneficiario']['agencia'])   // 2 - Agencia/Conta Beneficiário
    aAdd(aDados, oData['beneficiario']['nome'])      // 3 - Nome Benef.
    aAdd(aDados, oData['beneficiario']['cnpj'])      // 4 - CNPJ Benef.
    aAdd(aDados, oData['beneficiario']['endereco'])  // 5 - Endereço Benef.

    // Pagador
    aAdd(aDados, oData['pagador']['nome'])                    // 6 - Pagador
    aAdd(aDados, oData['pagador']['cnpj/cpf'])                // 7 - CPF Pagador
    aAdd(aDados, oData['pagador']['endereco']['logradouro'])  // 8 - End. Logradouro, Numero.
    aAdd(aDados, oData['pagador']['endereco']['municipio'])   // 9 - End. Bairro, Municipio, UF e CEP.

    // Dados do Boleto
    aAdd(aDados, oData['boleto']['nossoNumero'])     // 10 - Nosso Numero
    aAdd(aDados, oData['boleto']['numeroDocumento']) // 11 - Numero documento
    aAdd(aDados, oData['boleto']['linhaDigitavel'])  // 12 - Linha Digitavel
    aAdd(aDados, oData['boleto']['codigoBarras'])    // 13 - Cod. Barras
    aAdd(aDados, oData['boleto']['localPagamento'])  // 14 - Local Pagamento
    aAdd(aDados, oData['boleto']['usoBanco'])        // 15 - Uso Banco
    aAdd(aDados, oData['boleto']['mensagem'])        // 16 - Mensagem
    aAdd(aDados, oData['boleto']['vencimento'])      // 17 - Vencimento
    aAdd(aDados, oData['boleto']['emissao'])         // 18 - Emissao
    aAdd(aDados, oData['boleto']['processamento'])   // 19 - Processamento
    aAdd(aDados, oData['boleto']['especieDoc'])      // 20 - Especie Documento
    aAdd(aDados, oData['boleto']['especie'])         // 21 - Especie Moeda
    aAdd(aDados, oData['boleto']['aceite'])          // 22 - Aceite
    aAdd(aDados, oData['boleto']['carteira'])        // 23 - Carteira
    aAdd(aDados, oData['boleto']['valor'])           // 24 - Valor
    aAdd(aDados, oData['boleto']['desconto'])        // 25 - Desconto
    aAdd(aDados, oData['boleto']['juroMulta'])       // 26 - Juros/Multa
    aAdd(aDados, oData['boleto']['totalCobrado'])    // 27 - Valor Cobrado

    aAdd(aDados, oData['boleto']['msgDesconto'])     // 28 - Desconto
    aAdd(aDados, oData['boleto']['msgJuros'])        // 29 - Juro Multa
    aAdd(aDados, oData['boleto']['msgMulta'])        // 30 - Juro Multa

    If oData['boleto']['acao'] == "DEVOLVER"
        aAdd(aDados, "NAO RECEBER APÓS " + oData['boleto']['acaodias'] + " DIAS DE ATRASO" ) //31 - AÇÃO - DEVOLVER / PROTESTAR
    ElseIf oData['boleto']['acao'] == "PROTESTAR"
        aAdd(aDados, "SERÁ ENVIADO PARA PROTESTO APOS " + oData['boleto']['acaodias'] + " DIAS DE ATRASO" ) //31 - AÇÃO - DEVOLVER / PROTESTAR
    Endif

    aAdd(aDados, oData['beneficiario']['cep']) // 32 - CEP
    aAdd(aDados, oData['beneficiario']['uf'])  // 33 - Estado

    aAdd(aDados, oData['pagador']['endereco']['uf'])  // 34 - UF do Pagador 
    aAdd(aDados, oData['pagador']['endereco']['cep']) // 35 - CEP do Pagador
    aAdd(aDados, oData['pagador']['endereco']['bairro'])   // 36 - End. Bairro, Municipio, UF e CEP.

    aAdd(aDados, oData['beneficiario']['bairro'])       // 37 - bairro Benef.
    aAdd(aDados, oData['beneficiario']['municipio'])    // 38 - bairro Benef.
    aAdd(aDados, oData['boleto']['msgAbatimento'])      // 39 - abatimento.

    oPrint:SetPortrait()
    oPrint:StartPage()

    //RECIBO DO PAGADOR
    nOffset := nOffsetRec

    //Dados LINE(A)

    oPrint:Box(nLinha + 5, nColuna + 3, nLinha + 40, nColuna + 560, "-1")

    oPrint:SayBitmap( nLinha + 8    + nOffset, nColuna + 20 , 'NGFCAIXA.bmp', 110, 24) //Logo do banco
    oPrint:Say      ( nLinha + 25 + nOffset, nColuna + 180, "COBRANÇA BANCÁRIA CAIXA",    oFont14n  ) // COBRANÇA BANCÁRIA CAIXA

    oPrint:Box(nLinha + 42, nColuna + 3, nLinha + 305, nColuna + 560, "-1")

    // RECIBO DO PAGADOR

    // LINHA 01 - DADOS BENEFICIARIO
    oPrint:Say  ( nLinha + 50 + nOffset, nColuna + 5   , STR0001,   oFont10 ) // Beneficiário
    oPrint:Say  ( nLinha + 60 + nOffset, nColuna + 5   , SubStr(aDados[3],1,nLimBen), oFont10)
    oPrint:Line ( nLinha + 42 + nOffset, nColuna + 320 , nLinha + 65 + nOffset, nColuna + 320, CLR_BLACK ) // Divisor de Coluna

    oPrint:Say  ( nLinha + 50 + nOffset, nColuna + 325 , STR0002,   oFont10 ) // CPF/CNPJ
    oPrint:Say  ( nLinha + 60 + nOffset, nColuna + 325 , aDados[4], oFont10)
    oPrint:Line ( nLinha + 42 + nOffset, nColuna + 422 , nLinha + 65 + nOffset, nColuna + 422, CLR_BLACK ) // Divisor de Coluna

    oPrint:Say  ( nLinha + 50 + nOffset, nColuna + 425   , STR0003,   oFont10 ) // Agência / Código do Beneficiário
    oPrint:Say  ( nLinha + 60 + nOffset, nColuna + 425, aDados[2], oFont10)

    oPrint:Line ( nLinha + 65 + nOffset, nColuna + 3  , nLinha + 65 + nOffset, 570, CLR_BLACK )   // Linha Horizontal

    // LINHA 02 - ENDEREÇO BENEFICIARIO
    oPrint:Say  ( nLinha + 75 + nOffset, nColuna + 5  , STR0004,   oFont10 ) // Endereço do Beneficiário
    oPrint:Say  ( nLinha + 85 + nOffset, nColuna + 5  , SubStr(aDados[5],1,nLimBen), oFont10)    
    oPrint:Say  ( nLinha + 95 + nOffset, nColuna + 5  , SubStr(aDados[37],1,nLimBen), oFont10)    // Bairro
    oPrint:Say  ( nLinha + 105 + nOffset, nColuna + 5  , SubStr(aDados[38],1,nLimBen), oFont10)    // Municipio
    oPrint:Line ( nLinha + 65 + nOffset, nColuna + 320, nLinha + 108 + nOffset, nColuna + 320, CLR_BLACK ) // Divisor de Coluna

    oPrint:Say  ( nLinha + 75 + nOffset, nColuna + 325, STR0005,   oFont10 ) // Estado do Beneficiário
    oPrint:Say  ( nLinha + 85 + nOffset, nColuna + 325, aDados[33], oFont10)
    oPrint:Line ( nLinha + 65 + nOffset, nColuna + 422, nLinha + 108 + nOffset, nColuna + 422, CLR_BLACK ) // Divisor de Coluna

    oPrint:Say  ( nLinha + 75 + nOffset, nColuna + 425, STR0006,   oFont10 ) // CEP do Beneficiário
    oPrint:Say  ( nLinha + 85 + nOffset, nColuna + 425, aDados[32], oFont10)

    oPrint:Line ( nLinha + 108 + nOffset, nColuna + 3  , nLinha + 108 + nOffset, 570, CLR_BLACK )   // Linha Horizontal

    // LINHA 03 - DOCUMENTOS BENEFICIARIO
    oPrint:Say  ( nLinha + 118  + nOffset, nColuna + 5 , STR0007,   oFont10 ) // Data do documento
    oPrint:Say  ( nLinha + 128 + nOffset, nColuna + 5 , aDados[18], oFont10)
    oPrint:Line ( nLinha + 108  + nOffset, nColuna + 83, nLinha + 131 + nOffset, nColuna + 83, CLR_BLACK ) // Divisor de Coluna

    oPrint:Say  ( nLinha + 118  + nOffset, nColuna + 88 , STR0008,   oFont10 ) // Nr. do Documento
    oPrint:Say  ( nLinha + 128 + nOffset, nColuna + 88 , aDados[11], oFont10)
    oPrint:Line ( nLinha + 108  + nOffset, nColuna + 176, nLinha + 131 + nOffset, nColuna + 176, CLR_BLACK ) // Divisor de Coluna

    oPrint:Say  ( nLinha + 118  + nOffset, nColuna + 180, STR0009,   oFont10 ) // Espécie
    oPrint:Say  ( nLinha + 128 + nOffset, nColuna + 180, aDados[21], oFont10)
    oPrint:Line ( nLinha + 108  + nOffset, nColuna + 235, nLinha + 131 + nOffset, nColuna + 235, CLR_BLACK ) // Divisor de Coluna

    oPrint:Say  ( nLinha + 118  + nOffset, nColuna + 240, STR0010,   oFont10 ) // Carteira
    oPrint:Say  ( nLinha + 128 + nOffset, nColuna + 240, aDados[23], oFont10)
    oPrint:Line ( nLinha + 108  + nOffset, nColuna + 320, nLinha + 131 + nOffset, nColuna + 320, CLR_BLACK ) // Divisor de Coluna

    oPrint:Say  ( nLinha + 118  + nOffset, nColuna + 325, STR0011,   oFont10 ) // Data do processamento
    oPrint:Say  ( nLinha + 128 + nOffset, nColuna + 325, aDados[19], oFont10)
    oPrint:Line ( nLinha + 108  + nOffset, nColuna + 422, nLinha + 131 + nOffset, nColuna + 422, CLR_BLACK ) // Divisor de Coluna

    oPrint:Say  ( nLinha + 118  + nOffset, nColuna + 425, STR0012,   oFont10 ) // Nosso Número
    oPrint:Say  ( nLinha + 128 + nOffset, nColuna + 425, aDados[10], oFont10)

    oPrint:Line ( nLinha + 131 + nOffset, nColuna + 3  , nLinha + 131 + nOffset, 570, CLR_BLACK )   // Linha Horizontal

    // LINHA 04 - DADOS DO PAGADOR

    oPrint:Say  ( nLinha + 141 + nOffset, nColuna + 5  , STR0013,   oFont10 ) // Pagador
    oPrint:Say  ( nLinha + 151 + nOffset, nColuna + 5  , SubStr(aDados[6],1,nLimPag), oFont10)
    oPrint:Line ( nLinha + 131 + nOffset, nColuna + 422, nLinha + 154 + nOffset, nColuna + 422, CLR_BLACK ) // Divisor de Coluna

    oPrint:Say  ( nLinha + 141 + nOffset, nColuna + 425, STR0002,   oFont10 ) // CPF/CNPJ
    oPrint:Say  ( nLinha + 151 + nOffset, nColuna + 425, aDados[7], oFont10)

    oPrint:Line ( nLinha + 154 + nOffset, nColuna + 3  , nLinha + 154 + nOffset, 570, CLR_BLACK )   // Linha Horizontal

    // LINHA 05 - ENDEREÇO DO PAGADOR

    oPrint:Say  ( nLinha + 164 + nOffset, nColuna + 5  , STR0014,   oFont10 ) // Endereço do Pagador
    oPrint:Say  ( nLinha + 174 + nOffset, nColuna + 5  , SubStr(aDados[8],1,nLimPag), oFont10)
    oPrint:Say  ( nLinha + 184 + nOffset, nColuna + 5  , SubStr(aDados[36],1,nLimPag), oFont10) // Bairro
    oPrint:Say  ( nLinha + 194 + nOffset, nColuna + 5  , SubStr(aDados[9],1,nLimPag), oFont10) // Municipio
    oPrint:Line ( nLinha + 154 + nOffset, nColuna + 422, nLinha + 197 + nOffset, nColuna + 422, CLR_BLACK ) // Divisor de Coluna

    oPrint:Say  ( nLinha + 164 + nOffset, nColuna + 425, STR0005,   oFont10 ) // UF
    oPrint:Say  ( nLinha + 174 + nOffset, nColuna + 425, aDados[34], oFont10)
    oPrint:Line ( nLinha + 154 + nOffset, nColuna + 460, nLinha + 197 + nOffset, nColuna + 460, CLR_BLACK ) // Divisor de Coluna

    oPrint:Say  ( nLinha + 164 + nOffset, nColuna + 465, STR0006,   oFont10 ) // CEP
    oPrint:Say  ( nLinha + 174 + nOffset, nColuna + 465, aDados[35], oFont10)

    oPrint:Line ( nLinha + 197 + nOffset, nColuna + 3  , nLinha + 197 + nOffset, 570, CLR_BLACK )   // Linha Horizontal

    // LINHA 06 - DADOS DO AVALISTA

    oPrint:Say  ( nLinha + 207 + nOffset, nColuna + 5  , STR0015,   oFont10 ) // Pagador/Avalista
    oPrint:Line ( nLinha + 197 + nOffset, nColuna + 422, nLinha + 220 + nOffset, nColuna + 422, CLR_BLACK ) // Divisor de Coluna

    oPrint:Say  ( nLinha + 207 + nOffset, nColuna + 425, STR0002,   oFont10 ) // CPF/CNPJ

    oPrint:Line ( nLinha + 220 + nOffset, nColuna + 3  , nLinha + 220 + nOffset, 570, CLR_BLACK )   // Linha Horizontal

    // BOX DO TEXTO DE RESPONSABILIDADE DO CEDENTE

    oPrint:Say  ( nLinha + 230 + nOffset, nColuna + 5  , STR0016,   oFont10 ) // TEXTO DE RESPONSABILIDADE DO CEDENTE
    oPrint:Say  ( nLinha + 240 + nOffset, nColuna + 5  , aDados[31], oFont10)
    oPrint:Say  ( nLinha + 250 + nOffset, nColuna + 5  , aDados[39], oFont10) // Abatimento

    oPrint:Line ( nLinha + 280 + nOffset, nColuna + 3  , nLinha + 280 + nOffset, 570, CLR_BLACK )   // Linha Horizontal
    
    // RODAPÉ RECIBO DO PAGADOR

    oPrint:Say  ( nLinha + 290 + nOffset, nColuna + 5  , STR0017,   oFont10 ) // Moeda
    oPrint:Line ( nLinha + 280 + nOffset, nColuna + 65 , nLinha + 305 + nOffset, nColuna + 65, CLR_BLACK ) // Divisor de Coluna

    oPrint:Say  ( nLinha + 290 + nOffset, nColuna + 70 , STR0018,   oFont10 ) // Quantidade
    oPrint:Line ( nLinha + 280 + nOffset, nColuna + 120, nLinha + 305 + nOffset, nColuna + 120, CLR_BLACK ) // Divisor de Coluna

    oPrint:Say  ( nLinha + 290 + nOffset, nColuna + 125, STR0019,   oFont10 ) // Valor
    oPrint:Line ( nLinha + 280 + nOffset, nColuna + 170, nLinha + 305 + nOffset, nColuna + 170, CLR_BLACK ) // Divisor de Coluna

    oPrint:Say  ( nLinha + 290 + nOffset, nColuna + 175, STR0020,   oFont10 ) // Vencimento
    oPrint:Say  ( nLinha + 300 + nOffset, nColuna + 175, aDados[17], oFont10)
    oPrint:Line ( nLinha + 280 + nOffset, nColuna + 225, nLinha + 305 + nOffset, nColuna + 225, CLR_BLACK ) // Divisor de Coluna

    oPrint:Say  ( nLinha + 290 + nOffset, nColuna + 230, STR0021,   oFont10 ) // Valor do Documento
    oPrint:Say  ( nLinha + 300 + nOffset, nColuna + 230, "R$ " + aDados[24], oFont10)
    oPrint:Line ( nLinha + 280 + nOffset, nColuna + 310, nLinha + 305 + nOffset, nColuna + 310, CLR_BLACK ) // Divisor de Coluna

    oPrint:Say  ( nLinha + 290 + nOffset, nColuna + 315, STR0022,   oFont10 ) // Autenticação Mecânica - Recibo do Sacado
    
    oPrint:Say  ( nLinha + 315 + nOffset, nColuna + 3  , Replicate("--", 67), oFont14n)

    // BOLETO DE COBRANÇA
    // Dados BANCO - LOGO E LINHA DIGITAVEL
    oPrint:SayBitmap( nLinha + 325 + nOffset, nColuna + 5  , 'NGFCAIXA.bmp', 110, 24) // Logo do banco
    oPrint:Line     ( nLinha + 325 + nOffset, nColuna + 130, nLinha + 350 + nOffset, nColuna + 130, CLR_BLACK ) // Divisor de Coluna
    oPrint:Say      ( nLinha + 345 + nOffset, nColuna + 138, aDados[1],     oFont15 )   // Numero do Banco
    oPrint:Line     ( nLinha + 325 + nOffset, nColuna + 185, nLinha + 350 + nOffset, nColuna + 185, CLR_BLACK ) // Divisor de Coluna
    oPrint:Say      ( nLinha + 345 + nOffset, nColuna + 205, aDados[12],    oFont14n )  // Linha Digitavel

    // BOX COM DADOS DO BOLETO DE COBRANÇA
    oPrint:Box(nLinha + 355, nColuna + 3, nLinha + 670, nColuna + 560, "-1")

    // LINHA 1 - DADOS DO BOLETO DE COBRANÇA
    oPrint:Say      ( nLinha + 365 + nOffset, nColuna + 5  , STR0023,    oFont10  ) // Local de pagamento
    oPrint:Say      ( nLinha + 375 + nOffset, nColuna + 5  , aDados[14], oFont10 )
    oPrint:Line     ( nLinha + 355 + nOffset, nColuna + 425, nLinha + 378 + nOffset, nColuna + 425, CLR_BLACK ) // Divisor de Coluna

    oPrint:Say      ( nLinha + 365 + nOffset, nColuna + 430, STR0020,    oFont10  ) // Vencimento
    oPrint:Say      ( nLinha + 375 + nOffset, nColuna + 430, aDados[17], oFont10)   
    oPrint:Line     ( nLinha + 378 + nOffset, nColuna + 3  , nLinha + 378 + nOffset, 570, CLR_BLACK )   // Linha Horizontal

    // LINHA 2 - DADOS DO BOLETO DE COBRANÇA

    oPrint:Say  ( nLinha + 388 + nOffset, nColuna + 5  , STR0001,   oFont10 ) // Beneficiário
    oPrint:Say  ( nLinha + 398 + nOffset, nColuna + 5  , SubStr(aDados[3],1,nLimBen), oFont10)
    oPrint:Line ( nLinha + 378 + nOffset, nColuna + 320, nLinha + 401 + nOffset, nColuna + 320, CLR_BLACK ) // Divisor de Coluna

    oPrint:Say  ( nLinha + 388 + nOffset, nColuna + 325, STR0002,   oFont10 ) // CPF/CNPJ
    oPrint:Say  ( nLinha + 398 + nOffset, nColuna + 325, aDados[4], oFont10)
    oPrint:Line ( nLinha + 378 + nOffset, nColuna + 425, nLinha + 401 + nOffset, nColuna + 425, CLR_BLACK ) // Divisor de Coluna

    oPrint:Say  ( nLinha + 388 + nOffset, nColuna + 430, STR0003,   oFont10 ) // Agência / Código do Beneficiário
    oPrint:Say  ( nLinha + 398 + nOffset, nColuna + 430, aDados[2], oFont10)

    oPrint:Line ( nLinha + 401 + nOffset, nColuna + 3  , nLinha + 401 + nOffset  , 570, CLR_BLACK ) // Linha horizontal

    // LINHA 3 - DADOS DO BOLETO DE COBRANÇA

    oPrint:Say  ( nLinha + 411 + nOffset, nColuna + 5  , STR0007,   oFont10 ) // Data do documento
    oPrint:Say  ( nLinha + 421 + nOffset, nColuna + 5  , aDados[18], oFont10)
    oPrint:Line ( nLinha + 401 + nOffset, nColuna + 100, nLinha + 424 + nOffset, nColuna + 100, CLR_BLACK ) // Divisor de Coluna

    oPrint:Say  ( nLinha + 411 + nOffset, nColuna + 105, STR0008,   oFont10 ) // Nr. do Documento
    oPrint:Say  ( nLinha + 421 + nOffset, nColuna + 105, aDados[11], oFont10)
    oPrint:Line ( nLinha + 401 + nOffset, nColuna + 180, nLinha + 424 + nOffset, nColuna + 180, CLR_BLACK ) // Divisor de Coluna

    oPrint:Say  ( nLinha + 411 + nOffset, nColuna + 185, STR0009,   oFont10 ) // Espécie
    oPrint:Say  ( nLinha + 421 + nOffset, nColuna + 185, aDados[21], oFont10)
    oPrint:Line ( nLinha + 401 + nOffset, nColuna + 245, nLinha + 424 + nOffset, nColuna + 245, CLR_BLACK ) // Divisor de Coluna

    oPrint:Say  ( nLinha + 411 + nOffset, nColuna + 250, STR0024,   oFont10 ) // Aceite
    oPrint:Say  ( nLinha + 421 + nOffset, nColuna + 250, aDados[22], oFont10)
    oPrint:Line ( nLinha + 401 + nOffset, nColuna + 320, nLinha + 424 + nOffset, nColuna + 320, CLR_BLACK ) // Divisor de Coluna

    oPrint:Say  ( nLinha + 411 + nOffset, nColuna + 325, STR0011,   oFont10 ) // Data do processamento
    oPrint:Say  ( nLinha + 421 + nOffset, nColuna + 325, aDados[19], oFont10)
    oPrint:Line ( nLinha + 401 + nOffset, nColuna + 425, nLinha + 424 + nOffset, nColuna + 425, CLR_BLACK ) // Divisor de Coluna

    oPrint:Say  ( nLinha + 411 + nOffset, nColuna + 430, STR0012,   oFont10 ) // Nosso Número
    oPrint:Say  ( nLinha + 421 + nOffset, nColuna + 430, aDados[10], oFont10)

    oPrint:Line ( nLinha + 424 + nOffset, nColuna + 3  , nLinha + 424 + nOffset  , 570, CLR_BLACK ) // Linha horizontal

    // LINHA 4 - DADOS DO BOLETO DE COBRANÇA

    oPrint:Say  ( nLinha + 434 + nOffset, nColuna + 5  , STR0025,   oFont10 ) // Uso do Banco
    oPrint:Line ( nLinha + 424 + nOffset, nColuna + 100, nLinha + 447 + nOffset, nColuna + 100, CLR_BLACK ) // Divisor de Coluna

    oPrint:Say  ( nLinha + 434 + nOffset, nColuna + 105, STR0010,   oFont10 ) // Carteira
    oPrint:Say  ( nLinha + 444 + nOffset, nColuna + 105, aDados[23], oFont10)
    oPrint:Line ( nLinha + 424 + nOffset, nColuna + 145, nLinha + 447 + nOffset, nColuna + 145, CLR_BLACK ) // Divisor de Coluna

    oPrint:Say  ( nLinha + 434 + nOffset, nColuna + 150, STR0017,   oFont10 ) // Moeda
    oPrint:Say  ( nLinha + 444 + nOffset, nColuna + 150, "R$", oFont10)
    oPrint:Line ( nLinha + 424 + nOffset, nColuna + 180, nLinha + 447 + nOffset, nColuna + 180, CLR_BLACK ) // Divisor de Coluna

    oPrint:Say  ( nLinha + 434 + nOffset, nColuna + 185, STR0018,   oFont10 ) // Quantidade
    oPrint:Line ( nLinha + 424 + nOffset, nColuna + 320, nLinha + 447 + nOffset, nColuna + 320, CLR_BLACK ) // Divisor de Coluna

    oPrint:Say  ( nLinha + 434 + nOffset, nColuna + 325, STR0019,   oFont10 ) // Valor
    oPrint:Line ( nLinha + 424 + nOffset, nColuna + 425, nLinha + 447 + nOffset, nColuna + 425, CLR_BLACK ) // Divisor de Coluna

    oPrint:Say  ( nLinha + 434 + nOffset, nColuna + 430, STR0026,   oFont10 ) // (=) Valor do Documento
    oPrint:Say  ( nLinha + 444 + nOffset, nColuna + 430, "R$ " + aDados[24], oFont10)

    oPrint:Line ( nLinha + 447 + nOffset, nColuna + 3  , nLinha + 447 + nOffset  , 570, CLR_BLACK ) // Linha horizontal 

    // BOX E LINHAS A DIREITA DO BOX - DADOS DO BOLETO DE COBRANÇA

    oPrint:Say  ( nLinha + 457 + nOffset, nColuna + 5  , STR0016,   oFont10 ) // TEXTO DE RESPONSABILIDADE DO CEDENTE
    oPrint:Say  ( nLinha + 467 + nOffset, nColuna + 5  , aDados[31], oFont10)
    oPrint:Say  ( nLinha + 477 + nOffset, nColuna + 5  , aDados[39], oFont10) // Abatimento
    oPrint:Line ( nLinha + 447 + nOffset, nColuna + 425, nLinha + 470 + nOffset, nColuna + 425, CLR_BLACK ) // Divisor de Coluna

    oPrint:Say  ( nLinha + 457 + nOffset, nColuna + 430, STR0027, oFont10 ) // (-) Desconto
    oPrint:Say  ( nLinha + 467 + nOffset, nColuna + 430, ''     , oFont10)
    oPrint:Line ( nLinha + 470 + nOffset, nColuna + 425, nLinha + 496 + nOffset, nColuna + 425, CLR_BLACK ) // Divisor de Coluna
    oPrint:Line ( nLinha + 470 + nOffset, nColuna + 425, nLinha + 470 + nOffset  , 570, CLR_BLACK ) // Linha horizontal 

    oPrint:Say  ( nLinha + 480 + nOffset, nColuna + 430, STR0028, oFont10 ) // (-) Outras Deduções/Abatimento
    oPrint:Line ( nLinha + 496 + nOffset, nColuna + 425, nLinha + 496 + nOffset  , 570, CLR_BLACK ) // Linha horizontal 

    oPrint:Say  ( nLinha + 506 + nOffset, nColuna + 430, STR0029, oFont10 ) // (+) Mora/Multa/Juros
    oPrint:Say  ( nLinha + 516 + nOffset, nColuna + 430, ''     , oFont10)
    oPrint:Line ( nLinha + 496 + nOffset, nColuna + 425, nLinha + 519 + nOffset, nColuna + 425, CLR_BLACK ) // Divisor de Coluna
    oPrint:Line ( nLinha + 519 + nOffset, nColuna + 425, nLinha + 519 + nOffset  , 570, CLR_BLACK ) // Linha horizontal 

    oPrint:Say  ( nLinha + 529 + nOffset, nColuna + 430, STR0030, oFont10 ) // (+) Outros Acréscimos
    oPrint:Line ( nLinha + 519 + nOffset, nColuna + 425, nLinha + 542 + nOffset, nColuna + 425, CLR_BLACK ) // Divisor de Coluna
    oPrint:Line ( nLinha + 542 + nOffset, nColuna + 425, nLinha + 542 + nOffset  , 570, CLR_BLACK ) // Linha horizontal 

    oPrint:Say  ( nLinha + 552 + nOffset, nColuna + 430, STR0031, oFont10 ) // (=) Valor Cobrado
    oPrint:Say  ( nLinha + 562 + nOffset, nColuna + 430, ''     , oFont10)
    oPrint:Line ( nLinha + 542 + nOffset, nColuna + 425, nLinha + 565 + nOffset, nColuna + 425, CLR_BLACK ) // Divisor de Coluna
    oPrint:Line ( nLinha + 565 + nOffset, nColuna + 3  , nLinha + 565 + nOffset  , 570, CLR_BLACK ) // Linha horizontal 

    // BOX E LINHAS A DIREITA DO BOX - DADOS DO BOLETO DE COBRANÇA

    // BOX COM DADOS DO PAGADOR

    oPrint:Say  ( nLinha + 575 + nOffset, nColuna + 5  , STR0013,   oFont10 ) // Pagador
    oPrint:Say  ( nLinha + 585 + nOffset, nColuna + 5  , SubStr(aDados[6],1,nLimPag), oFont10)

    oPrint:Say  ( nLinha + 575 + nOffset, nColuna + 430, STR0002,   oFont10 ) // CPF/CNPJ
    oPrint:Say  ( nLinha + 585 + nOffset, nColuna + 430, aDados[7], oFont10)

    oPrint:Say  ( nLinha + 597 + nOffset, nColuna + 5  , STR0014,   oFont10 ) // Endereço do Pagador:
    oPrint:Say  ( nLinha + 607 + nOffset, nColuna + 5  , SubStr(aDados[8],1,nLimPag), oFont10)

    oPrint:Say  ( nLinha + 597 + nOffset, nColuna + 430, STR0005,   oFont10 ) // UF:
    oPrint:Say  ( nLinha + 607 + nOffset, nColuna + 430, aDados[34], oFont10)

    oPrint:Say  ( nLinha + 597 + nOffset, nColuna + 465, STR0006,   oFont10 ) // CEP:
    oPrint:Say  ( nLinha + 607 + nOffset, nColuna + 465, aDados[35], oFont10)

    oPrint:Say  ( nLinha + 617 + nOffset, nColuna + 5  , SubStr(aDados[36],1,nLimPag), oFont10) // Bairro

    oPrint:Say  ( nLinha + 627 + nOffset, nColuna + 5  , SubStr(aDados[9],1,nLimPag), oFont10) // Municipio

    oPrint:Say  ( nLinha + 639 + nOffset, nColuna + 5  , STR0015,   oFont10 ) // Pagador/Avalista

    oPrint:Say  ( nLinha + 639 + nOffset, nColuna + 430, STR0002,   oFont10 ) // CPF/CNPJ

    oPrint:Say  ( nLinha + 680 + nOffset, nColuna + 430, STR0032,   oFont10 ) // Ficha de Compensação
    oPrint:Say  ( nLinha + 690 + nOffset, nColuna + 430, STR0033,   oFont10 ) // Autenticação no verso

    // CÓDIGO DE BARRAS
    oPrint:FWMsBar("INT25", (57 + (nOffset * (43/500))), 2,aDados[13],oPrint,.F.,CLR_BLACK,.T.,0.025,0.8,.F.,,,.F.,,,.F.)
    oPrint:EndPage()

    FreeObj(oData)
    FreeObj(oFont8)
    FreeObj(oFont10)
    FreeObj(oFont11)
    FreeObj(oFont15)
    FreeObj(oFont14n)
    FwFreeArray(aDados)

Return 

/*/{Protheus.doc} frtEmailCaixa
    Carrega as informações no objeto do e-mail
    @type function
    @version 12.1.33
    @author vinicius.prado
    @since 07/10/2021
    @param oAPIMSG, Json, boleto transmitido ao banco
    @return Object, objeto com as informações do layout do boleto
/*/

Function frtEmailCaixa(oAPIMSG As JSON)
    Local oDataEMail    As Object
    Local oBodyXML      As Object
    Local oResulXML     As Object
    Local aFilAtu       := {} As Array
    Local cMarkCNPJ     := '' As Character
    Local cBanco        := '' As Character
    Local cErroXmlBd	:= '' As Character
    Local cWarnXmlBd	:= '' As Character
    Local cErroXmlRe	:= '' As Character
    Local cWarnXmlRe	:= '' As Character
    Local cBaseXML      := '' As Character
    Local cNomepag      := '' As Character
    Local cCPFCNPJ      := '' As Character
    Local cLogradour    := '' As Character
    Local cMunicipio    := '' As Character
    Local cBairro       := '' As Character
    Local cCodBenefi    := '' As Character
    Local cCompEnd      := '' As Character
    Local cTipoRazao    := '' As Character
    Local cFilBen       := '' As Character
    Local cAbatementMsg := '' As Character
    
    If oAPIMSG:Hasproperty('beneficiarioFilial')
        cFilBen     := oAPIMSG['beneficiarioFilial']
        aFilAtu     := FWArrFilAtu(cEmpAnt,cFilBen)
    Else
        cFilBen     := cFilAnt
        aFilAtu     := FWArrFilAtu()        
    EndIf
    cBanco    := oAPIMSG['banco']
    cMarkCNPJ := '@R 99.999.999/9999-99'
    cBaseXML  := "oBodyXML:_SOAPENV_ENVELOPE:_SOAPENV_BODY:_EXT_SERVICO_ENTRADA:_DADOS:_INCLUI_BOLETO:_TITULO:_PAGADOR:"

    If oAPIMSG:hasProperty('TpRazao')
        cTipoRazao := oAPIMSG['TpRazao']
    Else
        cTipoRazao := oAPIMSG['boleto']['TpRazao']
    EndIf

    oBodyXML  := XMLPARSER(oAPIMSG['boleto']['XmlCEF'] , "_", @cErroXmlBd, @cWarnXmlBd)
    oResulXML := XMLPARSER(oAPIMSG['response'], "_", @cErroXmlRe, @cWarnXmlRe)

    If oBodyXML <> Nil .And. Empty(cErroXmlBd) .And. Empty(cWarnXmlBd)
                
        cLogradour  := &(cBaseXML + "_ENDERECO:_LOGRADOURO:TEXT")
        cBairro     := &(cBaseXML + "_ENDERECO:_BAIRRO:TEXT")
        cMunicipio  := &(cBaseXML + "_ENDERECO:_CIDADE:TEXT")
        cCodBenefi  := oBodyXML:_SOAPENV_ENVELOPE:_SOAPENV_BODY:_EXT_SERVICO_ENTRADA:_DADOS:_INCLUI_BOLETO:_CODIGO_BENEFICIARIO:TEXT

        If cTipoRazao == "CPF"
            cCPFCNPJ :=  &(cBaseXML + "_CPF:TEXT")
            cNomepag := &(cBaseXML + "_NOME:TEXT")
        Else
            cCPFCNPJ := &(cBaseXML + "_CNPJ:TEXT")
            cNomepag := &(cBaseXML + "_RAZAO_SOCIAL:TEXT")
        Endif
    Endif

    oDataEMail                          := JsonObject():new()
    oDataEMail['beneficiario']          := JsonObject():new()
    oDataEMail['boleto']                := JsonObject():new()
    oDataEMail['banco']                 := cBanco
    oDataEMail['pagador']               := JsonObject():new()
    oDataEMail['pagador']['endereco']   := JsonObject():new()

    oDataEMail['pagador']['nome']                   := cNomepag
    oDataEMail['pagador']['cnpj/cpf']               := printCpfCnpj(cCPFCNPJ, cTipoRazao)  
    oDataEMail['pagador']['endereco']['logradouro'] := cLogradour
    oDataEMail['pagador']['endereco']['bairro']  :=  cBairro
    oDataEMail['pagador']['endereco']['municipio']  :=  cMunicipio
    oDataEMail['pagador']['endereco']['uf']         :=  &(cBaseXML + "_ENDERECO:_UF:TEXT")
    oDataEMail['pagador']['endereco']['cep']        :=  Alltrim(Transform(&(cBaseXML + "_ENDERECO:_CEP:TEXT"), "@R 99999-999" ))

    cBaseXML  := "oBodyXML:_SOAPENV_ENVELOPE:_SOAPENV_BODY:_EXT_SERVICO_ENTRADA:"

    oDataEMail['beneficiario']['banco']     := oAPIMSG['banco'] + "-0" // Banco e digito
    oDataEMail['beneficiario']['agencia']   := PadL( &(cBaseXML + "_SIB_HEADER:_UNIDADE:TEXT"), 4, "0")
    oDataEMail['beneficiario']['agencia']   += "/" + PadL(cCodBenefi, 7, "0")
    oDataEMail['beneficiario']['cnpj']      := AllTrim(Transform(aFilAtu[18], cMarkCNPJ))
    oDataEMail['beneficiario']['nome']      := AllTrim(aFilAtu[17])

    cCompEnd := Iif(!Empty((Alltrim(FWSM0Util():GetSM0Data(cEmpAnt, cFilBen , {'M0_COMPENT'})[1][2]))), ' - ' + (Alltrim(FWSM0Util():GetSM0Data(cEmpAnt, cFilBen , {'M0_COMPENT'})[1][2])), ' - ')

    oDataEMail['beneficiario']['endereco']  := Alltrim(FWSM0Util():GetSM0Data(cEmpAnt, cFilBen , {'M0_ENDENT'})[1][2])
    oDataEMail['beneficiario']['endereco']  += cCompEnd
    oDataEMail['beneficiario']['bairro']    := Alltrim(Alltrim(FWSM0Util():GetSM0Data(cEmpAnt, cFilBen , {'M0_BAIRENT'})[1][2])) 
    oDataEMail['beneficiario']['municipio'] := Alltrim(Alltrim(FWSM0Util():GetSM0Data(cEmpAnt, cFilBen , {'M0_CIDENT'})[1][2] ))
    oDataEMail['beneficiario']['uf']        := Alltrim(Alltrim(FWSM0Util():GetSM0Data(cEmpAnt, cFilBen , {'M0_ESTENT'})[1][2] ))
    oDataEMail['beneficiario']['cep']       := Alltrim(Transform(FWSM0Util():GetSM0Data(cEmpAnt, cFilBen , {'M0_CEPENT'})[1][2], "@R 99999-999" ))

    cBaseXML := "oBodyXML:_SOAPENV_ENVELOPE:_SOAPENV_BODY:_EXT_SERVICO_ENTRADA:_DADOS:_INCLUI_BOLETO:_TITULO:"

    oDataEMail['boleto']['nossoNumero']     := &(cBaseXML + "_NOSSO_NUMERO:TEXT") + "-" + MODULO11(&(cBaseXML + "_NOSSO_NUMERO:TEXT"), 2, 9)
    oDataEMail['boleto']['numeroDocumento'] := &(cBaseXML + "_NUMERO_DOCUMENTO:TEXT")

    cBaseXML  := "oResulXML:_SOAPENV_ENVELOPE:_SOAPENV_BODY:_MANUTENCAOCOBRANCABANCARIA_SERVICO_SAIDA:_DADOS:_INCLUI_BOLETO:"
    
    oDataEMail['boleto']['linhaDigitavel']  := AllTrim(Transform(&(cBaseXML + "_LINHA_DIGITAVEL:TEXT") , "@R 99999.99999 99999.999999 99999.999999 9 99999999999999"))
    oDataEMail['boleto']['codigoBarras']    := Alltrim(&(cBaseXML + "_CODIGO_BARRAS:TEXT") )
    oDataEMail['boleto']['localPagamento']  := "PREFERENCIALMENTE NAS CASAS LOTERICAS ATÉ O VALOR LIMITE" //STR0001 // PAGÁVEL PREFERENCIALMENTE NAS AGÊNCIAS DO BRADESCO
    oDataEMail['boleto']['usoBanco']        := ""

    cBaseXML := "oBodyXML:_SOAPENV_ENVELOPE:_SOAPENV_BODY:_EXT_SERVICO_ENTRADA:_DADOS:_INCLUI_BOLETO:_TITULO:"

    oDataEMail['boleto']['vencimento']      := SubStr(&(cBaseXML + "_DATA_VENCIMENTO:TEXT"), 9,2) + "/" + SubStr(&(cBaseXML + "_DATA_VENCIMENTO:TEXT"), 6,2) + "/" + SubStr(&(cBaseXML + "_DATA_VENCIMENTO:TEXT"), 1,4)
    oDataEMail['boleto']['emissao']         := SubStr(&(cBaseXML + "_DATA_EMISSAO:TEXT"), 9,2) + "/" + SubStr(&(cBaseXML + "_DATA_EMISSAO:TEXT"), 6,2) + "/" + SubStr(&(cBaseXML + "_DATA_EMISSAO:TEXT"), 1,4)
    oDataEMail['boleto']['especie']         := Alltrim(Posicione("F77", 1, xFilial("F77") + "104" + &(cBaseXML + "_TIPO_ESPECIE:TEXT"), "F77_SIGLA" ))
    oDataEMail['boleto']['aceite']          := Alltrim(&(cBaseXML + "_FLAG_ACEITE:TEXT"))

    cBaseXML := "oBodyXML:_SOAPENV_ENVELOPE:_SOAPENV_BODY:_EXT_SERVICO_ENTRADA:_SIB_HEADER:_DATA_HORA:TEXT"

    oDataEMail['boleto']['processamento']   := SubStr(&(cBaseXML), 7,2) + "/" + SubStr(&(cBaseXML), 5,2) + "/" + SubStr(&(cBaseXML), 1,4)
    oDataEMail['boleto']['especieDoc']      := ""
    oDataEMail['boleto']['carteira']        := "RG"

    cBaseXML  := "oResulXML:_SOAPENV_ENVELOPE:_SOAPENV_BODY:_MANUTENCAOCOBRANCABANCARIA_SERVICO_SAIDA:_DADOS:_CONTROLE_NEGOCIAL:"

    oDataEMail['boleto']['mensagem']        := "Texto de Responsabilidade do Beneficiário:"
    oDataEMail['boleto']['mensagem']        += &(cBaseXML + "_MENSAGENS:TEXT")

    cBaseXML := "oBodyXML:_SOAPENV_ENVELOPE:_SOAPENV_BODY:_EXT_SERVICO_ENTRADA:_DADOS:_INCLUI_BOLETO:_TITULO:"

    oDataEMail['boleto']['valor']           := AllTrim(Transform(Val(&(cBaseXML + "_VALOR:TEXT")), "@E 9,999,999,999,999.99"))
    oDataEMail['boleto']['desconto']        := Iif(Val(&(cBaseXML + "_DESCONTOS:_DESCONTO:_VALOR:TEXT")) > 0, AllTrim(Transform(Val(&(cBaseXML + "_DESCONTOS:_DESCONTO:_VALOR:TEXT")), "@E 9,999,999,999,999.99")), "" )
    oDataEMail['boleto']['juroMulta']       := Iif(Val(&(cBaseXML + "_JUROS_MORA:_VALOR:TEXT")) > 0, AllTrim(Transform(Val(&(cBaseXML + "_JUROS_MORA:_VALOR:TEXT")), "@E 9,999,999,999,999.99")), "" )
    oDataEMail['boleto']['totalCobrado']    := ""
    oDataEMail['boleto']['acao']            := &(cBaseXML + "_POS_VENCIMENTO:_ACAO:TEXT")
    oDataEMail['boleto']['acaodias']        := &(cBaseXML + "_POS_VENCIMENTO:_NUMERO_DIAS:TEXT")

    If FindFunction('abatementMsg')
        cAbatementMsg  := abatementMsg(&(cBaseXML + "_VALOR_ABATIMENTO:TEXT"))
    EndIf
    oDataEMail['boleto']['msgAbatimento'] := cAbatementMsg

    FwFreeArray(aFilAtu)

Return oDataEmail

