#include 'tlpp-core.th'
#include 'gfin.profile.service.ch'

NameSpace gfin.api.profile
Using NameSpace gfin.util

Class ProfileService FROM FWAdapterBaseV2
  Public Method new()
  Public Method UserProfile()
  Public Method GetAccess()
EndClass

Method new() Class ProfileService
  _Super:new('GET')
  If MethIsMemberOf( self, "setUseSpaces", .T. )
    ::setUseSpaces(.T.)
  Endif
Return Self

//--------------------------------------------------------------------
/*/{Protheus.doc }getBanks
Atualiza, salva ou pegar um profile

@param queryRequestParams As Json

@author Luiz Nai
@since 27/04/2021
/*/
//--------------------------------------------------------------------
Method UserProfile(queryRequestParams As Json, queryType As Character) class ProfileService
    Local response   as Json
    Local oFields    as Array
    Local cUser      as Character
    Local cProg      as Character
    Local cTask      as Character
    Local cType      as Character
    Local cConfig    as Character
    Local aAnswer    as Array
    local checkEmpty as Logical
    Local i 	       as Numeric

    aAnswer    := {}
    oFields    := JsonObject():New()
    response   := JsonObject():New()
    checkEmpty := .T.

    If(queryType == 'GET' .AND. !Empty(queryRequestParams['fields']))
      checkEmpty := .F.
      oFields:fromJson(queryRequestParams['fields'])

      For i := 1 To Len(oFields)
        If (FindProfDef(oFields[i]['user'], oFields[i]['program'], oFields[i]['task'], oFields[i]['type']))
          aAdd(aAnswer, {;
            {'program', oFields[i]['program']},;
            {'task', oFields[i]['task']},;
            {'type', oFields[i]['type']},;
            {'config', RetProfDef(oFields[i]['user'],;
          oFields[i]['program'],;
          oFields[i]['task'],;
          oFields[i]['type'])}; 
          })
        Endif
      Next i
    Elseif(!Empty(queryRequestParams['user']) .AND. ;
     !Empty(queryRequestParams['program']) .AND. ;
     !Empty(queryRequestParams['task'])    .AND. ;
     !Empty(queryRequestParams['type']))

      checkEmpty := .F.
      cUser      := queryRequestParams['user']
      cProg      := queryRequestParams['program']
      cTask      := queryRequestParams['task']
      cType      := queryRequestParams['type']
      cConfig    := queryRequestParams['config']
      aAdd(aAnswer, {;
        {STR0001, STR0002};
      })

      If FindProfDef( cUser, cProg, cTask, cType )
        WriteProfDef( cUser, cProg, cTask, cType, cUser, cProg, cTask, cType, cConfig )
      Else                
        WriteNewProf( cUser, cProg, cTask , cType, cConfig)
      Endif
    Endif

  If(Len(aAnswer) > 0)
    response['result'] := .T.
    response['response'] := JsonObject():New()
    response['response']['profile'] := ArrayToJson(aAnswer)
  Else
    If(!checkEmpty)
        response := AnswerErrorFormat(204, STR0003, STR0004)
    Else
        response := AnswerErrorFormat(403, STR0003, STR0005)
    Endif
  Endif

Return response

//--------------------------------------------------------------------
/*/{Protheus.doc }getBanks
Atualiza, salva ou pegar um profile

@param queryRequestParams As Json

@author Luiz Nai
@since 27/04/2021
/*/
//--------------------------------------------------------------------

Method GetAccess() class ProfileService

    Local response  As Json
    Local jRetPriv  As Json

    response := JsonObject():New()
    jRetPriv := getMenu710()

    response['result'] := .T.
    response['response'] := JsonObject():New()
    response['response'] := jRetPriv

Return response
