#include 'tlpp-core.th'
#include 'tlpp-rest.th'
#include 'gfin.params.service.ch'

NameSpace gfin.api.params
Using NameSpace gfin.util

/*/{Protheus.doc} getMVParam
  retorna o conteúdo do parâmetro.
  @type function
  @version 12.1.33
  @author renato.ito
  @since 10/05/2021

  @param cParam As Character, parâmetro para consulta
  @return Json, ['result'] := .T. ou .F.
                ['response']['param'] := cParam
                ['response']['value'] := conteúdo do parâmetro
/*/
Function getMVParam(cParam As Character) As Json
	Local oResponse      As Json
	Local oModeAccess    As Json
	Local cAllowedParams := '' As Character
	Local cParAntec      := '' As Character
	Local xValue
	Local lValParam      := .T. As Logical

	oModeAccess := gfin.util.tableModeAccess('FWP')

	oResponse := JsonObject():new()
	// lista de parâmetros autorizados
	cAllowedParams := 'MV_NGFCART|MV_TFCJOBT|MV_CARTECF'
	If !(cParam $ cAllowedParams)
		oResponse := answerErrorFormat(403, STR0001, STR0002)
	Else
		// Cria o parâmetro conforme compartilhamento da FWP
		// Verifica se é exclusivo, se já existe o parâmetro na filial e se existe para ser copiado
		If 'MV_NGFCART' $ cParam .And. oModeAccess['Company'] == 'E' .And. !ExistFilParam(cParam, cFilAnt) .And. FWSX6Util():ExistsParam( cParam )
			FWSX6Util():ReplicateParam( cParam , {cFilAnt} , oModeAccess['Unit'] == 'C' , oModeAccess['Branch'] == 'C' )
			// Apaga o valor do parâmetro copiado
			PutMV(cParam, '')
		EndIf

		oResponse['result']   := .T.
		oResponse['response'] := JsonObject():new()

		If 'MV_CARTECF' $ cParam
			cParAntec := GETMV(cParam, .T., STR0003)
			If (valtype(cParAntec) == 'C' .and. cParAntec <> STR0003 .and. !Empty(cParAntec))
				oResponse['response']['param'] := 'true'
			Else
				oResponse['response']['param'] := 'false'
			EndIf
			lValParam := .F.
		Endif

		If lValParam
			xValue := GETMV(cParam, .T., STR0003)
			If valtype(xValue) <> 'C' .or. (valtype(xValue) == 'C' .and. xValue <> STR0003)
				oResponse['response']['param'] := cParam
				oResponse['response']['value'] := Iif(ValType(xValue) == 'D', stringDateToISO(dtos(xValue)), xValue)
			Else
				oResponse := answerErrorFormat(404, STR0004 + ' ' + cParam, xValue)
			EndIf
		Endif
	EndIf
Return oResponse

/*/{Protheus.doc} setMVParam
  atualiza o valor de um parâmetro.
  @type function
  @version 12.1.33
  @author renato.ito
  @since 10/05/2021

  @param cParam As Character, parâmetro para consulta
  @return Json, ['result'] := .T. ou .F.
                ['response']['param'] := cParam
                ['response']['value'] := conteúdo do parâmetro
/*/
Function setMVParam(cParam As Character, xValue) As Json
	Local oResponse      As Json
	Local cAllowedParams As Character
	Local oModeAccess    As Json

	oResponse := JsonObject():new()
	cAllowedParams := 'MV_NGFCART'

	oModeAccess := gfin.util.tableModeAccess('FWP')

	If !(cParam $ cAllowedParams)
		oResponse := answerErrorFormat(403, STR0001, STR0002)
	Else
		// Cria o parâmetro conforme compartilhamento da FWP
		// Verifica se é exclusivo, se já existe o parâmetro na filial e se existe para ser copiado
		If 'MV_NGFCART' $ cParam .And. oModeAccess['Company'] == 'E' .And. !ExistFilParam(cParam, cFilAnt) .And. FWSX6Util():ExistsParam( cParam )
			FWSX6Util():ReplicateParam( cParam , {cFilAnt} , oModeAccess['Unit'] == 'C' , oModeAccess['Branch'] == 'C' )
			// Apaga o valor do parâmetro copiado
			PutMV(cParam, '')
		EndIf
		If PUTMV(cParam, xValue)
			oResponse['result'] := .T.
			oResponse['response'] := JsonObject():new()
			oResponse['response']['param'] := cParam
			xValue := GETMV(cParam, .T., STR0003)
			If valtype(xValue) <> 'C' .or. (valtype(xValue) == 'C' .and. xValue <> STR0003)
				oResponse['response']['value'] := Iif(ValType(xValue) == 'D', stringDateToISO(dtos(xValue)), xValue)
			Else
				oResponse := answerErrorFormat(404, STR0004 + ' ' + cParam, xValue)
			EndIf
		Else
			oResponse := answerErrorFormat(404, STR0004 + ' ' + cParam, STR0003)
		EndIf
	EndIf
Return oResponse
