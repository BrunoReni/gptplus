#INCLUDE 'tlpp-core.th'

NameSpace gfin.api.cashFlow
Using NameSpace gfin.util

Static __lSEHDATLIB   := SEH->(FieldPos("EH_DATALIB")) > 0

//---------------------------------------------------------------------
/*/{Protheus.doc }getDocumentFlow
retorna os saldos de titulos no periodo definido

@param queryFilter  , character, filtro da query 
@param cJoin        , character, join da query
@param cCustomSearch, character, filtro personalizado

@author renato.ito
@since 24/02/2021
/*/
//---------------------------------------------------------------------
Function getDocumentFlow(queryFilter as Character, cJoin As Character, cCustomSearch As Character)
  Local aliasResult  as Character
  Local retValues    as Array
  Local queryGroup   as Character

  aliasResult := ''

  // agrupa os valores por data
  queryGroup := "SELECT F75_VENCTO, SUM(F75_SALDO) VALUE, COUNT(F75_VENCTO) QUANTITY FROM "
  queryGroup += RetSqlName('F75') + " F75"

  If !(Empty(cJoin))
    queryGroup += " " + cJoin
  EndIf

  queryGroup += " WHERE F75.D_E_L_E_T_ = ' ' " + queryFilter

  If !(Empty(cCustomSearch))
    queryGroup += " AND " + cCustomSearch
  EndIf

  queryGroup += " GROUP BY F75_VENCTO "
  queryGroup += " ORDER BY F75_VENCTO"

  aliasResult := MpSysOpenQuery(ChangeQuery(queryGroup))

  retValues := {}

  While (aliasResult)->(!EOF())
    AAdd(retValues, {;
      {"date", stringDateToIso((aliasResult)->F75_VENCTO)},;
      {"value",(aliasResult)->VALUE},;
      {"quantity",(aliasResult)->QUANTITY};
    })
    (aliasResult)->(dbSkip())
  EndDo
  (aliasResult)->(dbCloseArea())

Return arrayToJson(retValues)

//---------------------------------------------------------------------
/*/{Protheus.doc }getApplicationFlowPeriod
retorna os saldos das aplicações no periodo definido

@param queryFilter  , character, filtro da query 

@author Francisco Oliveira
@since 16/12/2022
/*/
//---------------------------------------------------------------------
Function getApplicationFlowPeriod(cDateFrom As Character, cDateTo As Character, aFiliais As Array) As Array

  Local cQuery    := '' As Character
  Local cTempSEH  := '' As Character
  Local cCfgApl   := '' As Character
  Local cDataIni  := '' As Character
  Local cDataFim  := '' As Character
  Local cDataAux  := '' As Character
  Local cDataEH   := '' As Character
  Local aRetTtl   := {} As Array
  Local aGetArea  := {} As Array
  Local aFlowAPL  := {} As Array
  Local nCount    := 0  As Numeric
  Local nValueApl := 0  As Numeric
  Local nQuant    := 0  As Numeric
  Local nQuote    := 0  As Numeric

  cDataIni := StrTran(cDateFrom, "-", "" )
  cDataFim := StrTran(cDateTo  , "-", "" )

  cTempSEH := GetNextAlias()

  aGetArea := SEH->(GetArea())

  cCfgApl  := getProfileUser(__cUserId, "NGF", "CashFlow", "Filter", 'considersAPL' )

  If !Empty(cCfgApl) .And. cCfgApl != 'consnot'

    For nCount := 1 To 3
      nValueApl := 0
      nQuote    := 0
      nQuant    := 0
      cDataEH   := ''

      cQuery := " SELECT R_E_C_N_O_ AS RECNO,  "


      If __lSEHDATLIB
        cQuery += " CASE "
        cQuery  += "   WHEN "
        cQuery += "     (SEH.EH_DATALIB = ' ' AND SEH.EH_DATARES = SEH.EH_DATALIB) "
        cQuery += "     THEN "
        cQuery += "SEH.EH_DATA"

        cQuery += "   WHEN "
        cQuery += "     (SEH.EH_DATALIB != ' ' AND SEH.EH_DATARES = SEH.EH_DATALIB) "
        cQuery += "     THEN "
        cQuery += "SEH.EH_DATALIB"

        cQuery += "   WHEN "
        cQuery += "     (SEH.EH_DATALIB != ' ' AND SEH.EH_DATARES != ' ') "
        cQuery += "     THEN "
        cQuery += "SEH.EH_DATALIB"

        cQuery += "   WHEN "
        cQuery += "     (SEH.EH_DATARES  = ' ' AND SEH.EH_DATALIB != ' ') "
        cQuery += "     THEN "
        cQuery += "SEH.EH_DATALIB"

        cQuery += "   WHEN "
        cQuery += "     (SEH.EH_DATARES != ' ' AND SEH.EH_DATALIB  = ' ') "
        cQuery += "     THEN "
        cQuery += "SEH.EH_DATARES"
        cQuery += " END DATALIB "
      Else
        cQuery += " CASE "
        cQuery += "   WHEN "
        cQuery += "     (SEH.EH_DATARES != ' ') "
        cQuery += "     THEN "
        cQuery += "     SEH.EH_DATARES "

        cQuery += "   WHEN "
        cQuery += "     (SEH.EH_DATARES = ' ') "
        cQuery += "     THEN "
        cQuery += "     SEH.EH_DATA "
        cQuery += " END DATALIB "
      Endif

      cQuery += " FROM "
      cQuery +=   RetSqlName("SEH") + " SEH "
      cQuery += " WHERE "
      cQuery += "     SEH.EH_FILIAL IN (" + gfin.util.branchesFormatToIn(aFiliais, 'SEH') + ")"
      cQuery += " AND SEH.EH_APLEMP  = 'APL' "

      If nCount == 1
        cQuery += getPreviousPeriod(cCfgApl, cDataIni)
      ElseIf nCount == 2
        cQuery += getCurrentPeriod(cCfgApl, cDataIni, cDataFim)
      Else
        cQuery += getAfterPeriod(cCfgApl, cDataFim)
      Endif

      cQuery += " AND SEH.EH_SALDO   > 0 "
      cQuery += " AND SEH.D_E_L_E_T_ = ' ' "
      cQuery += " ORDER BY DATALIB "

      cQuery	:= ChangeQuery(cQuery)

      MPSysOpenQuery( cQuery, cTempSEH )

      While (cTempSEH)->(!Eof())
        cDataEH := (cTempSEH)->(DATALIB)
        aRetTtl := {}

        While (cTempSEH)->(!Eof()) .And. cDataEH == (cTempSEH)->(DATALIB)
          SEH->(DbGoTo((cTempSEH)->(RECNO)))

          aRetTtl := Fa171Calc(STOD((cTempSEH)->(DATALIB)))

          If Len(aRetTtl) > 0
            nQuant++
            If SEH->EH_MOEDA > 1
              nValueApl += validateRate(aRetTtl[1], SEH->EH_TIPO, SEH->EH_MOEDA)
            Else
              nValueApl += aRetTtl[1]
            Endif
          Endif

          (cTempSEH)->(DbSkip())
        EndDo

        cDataAux := SubStr(cDataEH, 1, 4) + "-" + SubStr(cDataEH, 5, 2) + "-" + SubStr(cDataEH, 7, 2)

        If nCount == 2 .And. nValueApl > 0
          Aadd(aFlowAPL, { cDataAux, nValueApl, nQuant } )
          nValueApl := 0
          nQuant    := 0
        Endif
      EndDo

      If nValueApl > 0
        If nCount == 1
          Aadd(aFlowAPL, { cDateFrom, nValueApl, nQuant } )
        ElseIf nCount == 3
          Aadd(aFlowAPL, { cDateTo, nValueApl, nQuant } )
        Endif
      Endif

      (cTempSEH)->(DbCloseArea())

      Next nCount
    Endif

  RestArea(aGetArea)

Return aFlowAPL

//---------------------------------------------------------------------
/*/{Protheus.doc }getPreviousPeriod
retorna a query para filtro de aplicações anteriores ao periodo.

@param cCfgApl  , character, configuração do filtro
@param cDataIni , character, data inicial do periodo

@author Francisco Oliveira
@since 16/12/2022
/*/
//---------------------------------------------------------------------
Function getPreviousPeriod(cCfgApl As Character, cDataIni As Character) As Character
  Local cQuery := "" as Character
  If cCfgApl == 'consreleased'
    IF __lSEHDATLIB
      cQuery += " AND SEH.EH_DATALIB < '" + cDataIni + "' "
      cQuery += " AND SEH.EH_DATALIB != ' ' "
    Else
      cQuery += " AND SEH.EH_DATARES < '" + cDataIni + "' "
      cQuery += " AND SEH.EH_DATARES != ' ' "
    EndIf
  Else
    If __lSEHDATLIB
      cQuery += " AND ((SEH.EH_DATALIB != ' ' AND SEH.EH_DATALIB < '" + cDataIni + "') OR " 
      cQuery += " (SEH.EH_DATALIB = ' ' AND SEH.EH_DATARES != ' ' AND SEH.EH_DATARES < '" + cDataIni + "') OR " 
      cQuery += " (SEH.EH_DATALIB = ' ' AND SEH.EH_DATARES = ' ' AND SEH.EH_DATA < '" + cDataIni + "')) "
    Else
      cQuery += " AND ((SEH.EH_DATARES != ' ' AND SEH.EH_DATARES < '" + cDataIni + "') OR " 
      cQuery += " (SEH.EH_DATARES = ' ' AND SEH.EH_DATA < '" + cDataIni + "')) "
    EndIf
  Endif
Return cQuery

//---------------------------------------------------------------------
/*/{Protheus.doc }getCurrentPeriod
retorna a query para filtro de aplicações dentro ao periodo.

@param cCfgApl  , character, configuração do filtro
@param cDataIni , character, data inicial do periodo

@author Francisco Oliveira
@since 16/12/2022
/*/
//---------------------------------------------------------------------
Function getCurrentPeriod(cCfgApl As Character, cDataIni As Character, cDataFim As Character) As Character
  Local cQuery := "" as Character
  If cCfgApl == 'consreleased'
    IF __lSEHDATLIB
      cQuery += " AND SEH.EH_DATALIB >= '" + cDataIni + "' "
      cQuery += " AND SEH.EH_DATALIB <= '" + cDataFim   + "' "
      cQuery += " AND SEH.EH_DATALIB != ' ' "
    Else
      cQuery += " AND SEH.EH_DATARES >= '" + cDataIni + "' "
      cQuery += " AND SEH.EH_DATARES <= '" + cDataFim   + "' "
      cQuery += " AND SEH.EH_DATARES != ' ' "
    EndIf
  Else
    If __lSEHDATLIB
      cQuery += " AND ((SEH.EH_DATALIB != ' ' AND SEH.EH_DATALIB >= '" + cDataIni + "' AND SEH.EH_DATALIB <= '" + cDataFim + "') OR " 
      cQuery += " (SEH.EH_DATALIB = ' ' AND SEH.EH_DATARES != ' ' AND SEH.EH_DATARES >= '" + cDataIni + "' AND SEH.EH_DATARES <= '" + cDataFim + "') OR " 
      cQuery += " (SEH.EH_DATALIB = ' ' AND SEH.EH_DATARES = ' ' AND SEH.EH_DATA >= '" + cDataIni + "' AND SEH.EH_DATA <= '" + cDataFim + "')) "
    Else
      cQuery += " AND ((SEH.EH_DATARES != ' ' AND SEH.EH_DATARES >= '" + cDataIni + "' AND SEH.EH_DATARES <= '" + cDataFim + "') OR " 
      cQuery += " (SEH.EH_DATARES = ' ' AND SEH.EH_DATA >= '" + cDataIni + "' AND SEH.EH_DATA <= '" + cDataFim + "')) "
    EndIf
  Endif
Return cQuery

//---------------------------------------------------------------------
/*/{Protheus.doc }getAFterPeriod
retorna a query para filtro de aplicações posteriores ao periodo.

@param cCfgApl  , character, configuração do filtro
@param cDataIni , character, data inicial do periodo

@author Francisco Oliveira
@since 16/12/2022
/*/
//---------------------------------------------------------------------
Function getAFterPeriod(cCfgApl As Character, cDataFim As Character) As Character
  Local cQuery := "" as Character
  If cCfgApl == 'consreleased' 
    If __lSEHDATLIB
      cQuery += " AND SEH.EH_DATALIB > '" + cDataFim + "' "
      cQuery += " AND SEH.EH_DATALIB != ' ' "
    Else
      cQuery += " AND SEH.EH_DATARES > '" + cDataFim + "' "
      cQuery += " AND SEH.EH_DATARES != ' ' "
    EndIf
  Else
    IF __lSEHDATLIB
      cQuery += " AND ((SEH.EH_DATALIB != ' ' AND SEH.EH_DATALIB > '" + cDataFim + "') OR " 
      cQuery += " ( SEH.EH_DATALIB = ' ' AND SEH.EH_DATARES != ' ' AND SEH.EH_DATARES > '" + cDataFim + "') OR " 
      cQuery += " (SEH.EH_DATALIB = ' ' AND SEH.EH_DATARES = ' ' AND SEH.EH_DATA > '" + cDataFim + "')) "
    Else
      cQuery += " AND ((SEH.EH_DATARES != ' ' AND SEH.EH_DATARES > '" + cDataFim + "') OR " 
      cQuery += " (SEH.EH_DATARES = ' ' AND SEH.EH_DATA > '" + cDataFim + "')) "
    EndIf
  Endif
Return cQuery
