#include 'tlpp-core.th'
#include 'tlpp-rest.th'

NAMESPACE totvs.protheus.backoffice.ngf.applicationsLoans
USING NAMESPACE gfin.util
USING NAMESPACE totvs.protheus.backoffice.ngf.util
USING NAMESPACE totvs.protheus.backoffice.ngf.appropQuotas

/*/{Protheus.doc} getApplicationsLoans
  EndPoint para obter os registros de Aplicações e Emprestimos.

  @author vinicius.prado
  @since 19/11/2021
/*/
@GET('/api/gfin/v1/applicationsLoans')
Function getApplicationsLoans()
  Local jResponse as Json
  Local oService  as Object

  oService := GfinApplicationLoanService():new()
  jResponse := oService:getAll(oRest:getQueryRequest(), oRest:getHeaderRequest())
  answerBaseV2(jResponse)
  FreeObj(oService)
  FreeObj(jResponse)
Return

/*/{Protheus.doc} DeleteApplicationsLoans
  EndPoint para deletar o registro de Aplicações ou Empréstimos.

  @author Vitor Duca
  @since 24/11/2021
/*/
@DELETE('/api/gfin/v1/applicationsLoans/:InternalID')
Function DeleteApplicationsLoans()
  Local oService  as Object
  Local cInternalID := "" As Character
  Local oBody As Json
  Local oHeader := oRest:getHeaderRequest() As Json

  If oHeader:hasProperty('dataBase') .and. !Empty(oHeader['dataBase'])
    dDataBase := stringIsoToDate(oHeader['dataBase'])
  Endif

  oBody := JsonObject():new()
  oBody:FromJson(oRest:GetBodyRequest())

  cInternalID := oRest:getPathParamsRequest()['InternalID']

  oService := GfinApplicationLoanService():new()
  oRest:setResponse(answerRest(oService:deleteByID(cInternalID,oBody)))

  FreeObj(oService)
Return

/*/{Protheus.doc} PostApplicationsLoans
  EndPoint para incluir o registro de Aplicações ou Empréstimos.

  @author Vitor Duca
  @since 24/11/2021
/*/
@POST('/api/gfin/v1/applicationsLoans')
Function PostApplicationsLoans()
  Local oService  as Object
  Local oBody As Json
  Local oHeader := oRest:getHeaderRequest() As Json

  If oHeader:hasProperty('dataBase') .and. !Empty(oHeader['dataBase'])
    dDataBase := stringIsoToDate(oHeader['dataBase'])
  Endif

  oBody := JsonObject():new()
  oBody:FromJson(DecodeUTF8(oRest:GetBodyRequest()))

  oService := GfinApplicationLoanService():new()
  oRest:setResponse(answerRest(oService:postItem(oBody)))

  FreeObj(oService)
Return


/*/{Protheus.doc} getOperationsSX5
  EndPoint para obter os registros da tabela 11 (SX5) de acordo com o
  tipo de contrato (APL ou EMP)

  @author Vitor Duca
  @since 08/12/2021
/*/
@GET('/api/gfin/v1/applicationsLoans/operations/sx5/:type')
Function getOperationsSX5()
  Local jResponse as Json
  Local oService  as Object

  oService := GfinApplicationLoanService():new()
  oRest:setResponse(oService:getOperations(oRest:getPathParamsRequest()['type']))

  FreeObj(oService)
  FreeObj(jResponse)
Return

/*/{Protheus.doc} PostCalculateParcel
  EndPoint para calcular as parcelas de um empréstimo.

  @author Vitor Duca
  @since 16/12/2021
/*/
@POST('/api/gfin/v1/applicationsLoans/calculateparcels')
Function PostCalculateParcel()
  Local oBody As Json
  Local oHeader := oRest:getHeaderRequest() As Json

  If oHeader:hasProperty('dataBase') .and. !Empty(oHeader['dataBase'])
    dDataBase := stringIsoToDate(oHeader['dataBase'])
  Endif

  Set(_SET_DATEFORMAT, 'dd/mm/yyyy')

  oBody := JsonObject():new()
  oBody:FromJson(oRest:GetBodyRequest())

  oRest:setResponse(AnswerRest(CalculateParcels(oBody)))

  FreeObj(oBody)
Return

/*/{Protheus.doc} PostApplicationsLoans
  EndPoint para editar o registro de Aplicações ou Empréstimos.

  @author vinicius.prado
  @since 20/12/2021
/*/
@PUT('/api/gfin/v1/applicationsLoans/:InternalID')
Function PutApplicationsLoans()
  Local oService  as Object
  Local oBody As Json
  Local cInternalID := "" As Character
  Local oHeader := oRest:getHeaderRequest() As Json

  If oHeader:hasProperty('dataBase') .and. !Empty(oHeader['dataBase'])
    dDataBase := stringIsoToDate(oHeader['dataBase'])
  Endif

  cInternalID := oRest:getPathParamsRequest()['InternalID']

  oBody := JsonObject():new()
  oBody:FromJson(oRest:GetBodyRequest())

  oService := GfinApplicationLoanService():new()
  oRest:setResponse(answerRest(oService:putItem(oBody, cInternalID)))

  FreeObj(oService)
Return

/*/{Protheus.doc} getNatureParam
  EndPoint para obter as naturezas de inclusão de aplicações/emprestimos

  @author Vitor Duca
  @since 12/01/2022
/*/
@GET('/api/gfin/v1/applicationsLoans/param')
Function getNatureParam()
  Local jResponse as Json
  Local oService  as Object

  oService := GfinApplicationLoanService():new()
  jResponse := oService:getParam(oRest:getQueryRequest())

  oRest:setKeyHeaderResponse("Content-Type", "application/json")

  If ( jResponse["result"] )
      oRest:setResponse( jResponse[ "response" ] )
  Endif

  oRest:setStatusCode( jResponse[ "statusCode" ] )

  FreeObj(oService)
  FreeObj(jResponse)
Return

/*/{Protheus.doc} Appropriation
  EndPoint para realizar a apropriação de aplicações e emprestimos.

  @author Vitor Duca
  @since 18/02/2022
/*/
@POST('/api/gfin/v1/applicationsLoans/appropiation')
Function Appropriation()
  Local jBody As Json
  Local oHeader := oRest:getHeaderRequest() As Json

  If oHeader:hasProperty('dataBase') .and. !Empty(oHeader['dataBase'])
    dDataBase := stringIsoToDate(oHeader['dataBase'])
  Endif

  jBody := JsonObject():new()
  jBody:FromJson(oRest:GetBodyRequest())

  oService := GfinApplicationLoanService():new()
  jResponse := oService:PostAppropriation(jBody)

  oRest:setResponse(AnswerRest(jResponse))

Return

/*/{Protheus.doc} getAppropQuotas
  EndPoint para obter os claclulos do apropiação por cotas

  @author luiz.nai
  @since 05/04/2022
/*/
@GET('/api/gfin/v1/appropriationQuotas/:id/values')
Function getAppropQuotas()
	Local jResponse as Json
	Local oService  as Object
	Local cId := "" as Character
	SetFunName("FINA183")
	cId       := oRest:getPathParamsRequest()['id']
	oService  := GfinAppropQuotasService():New()
	jResponse := oService:getApprop(cId, oRest:getQueryRequest())

	AnswerRest(jResponse)
	FreeObj(oService)
	FreeObj(jResponse)
	Return

/*/{Protheus.doc} postAppropQuotas
  EndPoint para efetivar a apropiação

  @author luiz.nai
  @since 11/04/2022
/*/
@POST('/api/gfin/v1/appropriationQuotas/:id')
Function postAppropQuotas()
	Local jBody As Json
	Local cId := "" as Character
	SetFunName("FINA183")
	cId   := oRest:getPathParamsRequest()['id']
	jBody := JsonObject():new()
	jBody:FromJson(oRest:GetBodyRequest())

	oService := GfinAppropQuotasService():new()
	jResponse := oService:postApprop(cId, jBody)

	oRest:setResponse(AnswerRest(jResponse))
Return

/*/{Protheus.doc} cancelAppropriation
  EndPoint para obter os valores de estorno

  @author luiz.nai
  @since 05/04/2022
/*/
@GET('/api/gfin/v1/appropriationQuotas/:id/reversalValues')
Function cancelAppropriation()
	Local jResponse as Json
	Local oService  as Object
	Local cId := "" as Character
	SetFunName("FINA183")
	cId   := oRest:getPathParamsRequest()['id']

	oService := GfinAppropQuotasService():new()
	jResponse := oService:cancelApprop(cId, oRest:getQueryRequest(), .F.)

	AnswerRest(jResponse)
	FreeObj(oService)
	FreeObj(jResponse)
Return

/*/{Protheus.doc} postAppropQuotas
  Estorna a apropriação com cotas.

  @author luiz.nai
  @since 11/04/2022
/*/
@DELETE('/api/gfin/v1/appropriationQuotas/:id')
Function deleteAppropQuotas()
	Local jBody As Json
	Local cId := "" as Character
	SetFunName("FINA183")
	cId   := oRest:getPathParamsRequest()['id']

	jBody := JsonObject():new()
	jBody:FromJson(oRest:GetBodyRequest())

	oService := GfinAppropQuotasService():new()
	jResponse := oService:cancelApprop(cId, jBody, .T.)

	oRest:setResponse(AnswerRest(jResponse))
Return

/*/{Protheus.doc} calcAppropQuotas
  EndPoint para calcular alteração de campos.

  @author luiz.nai
  @since 12/04/2022
/*/
@POST('/api/gfin/v1/appropriationQuotas/:id/calc')
Function calcAppropQuotas()
	Local jBody As Json
	Local cId := "" as Character
	SetFunName("FINA183")
	cId   := oRest:getPathParamsRequest()['id']
	jBody := JsonObject():new()
	jBody:FromJson(oRest:GetBodyRequest())

	oService := GfinAppropQuotasService():new()
	jResponse := oService:calcApprop(cId, jBody)

	oRest:setResponse(AnswerRest(jResponse))
Return

/*/{Protheus.doc} PostRecalculateFeesSAC
  EndPoint para recalcular o juros de uma parcelas do empréstimo SAC.

  @author Vinicius Prado
  @since 06/05/2022
/*/
@POST('/api/gfin/v1/applicationsLoans/calculateparcels/recalculateFeesSAC')
Function PostRecalculateFeesSAC()
  Local oBody As Json
  Local oHeader := oRest:getHeaderRequest() As Json

  If oHeader:hasProperty('dataBase') .and. !Empty(oHeader['dataBase'])
    dDataBase := stringIsoToDate(oHeader['dataBase'])
  Endif

  Set(_SET_DATEFORMAT, 'dd/mm/yyyy')

  oBody := JsonObject():new()
  oBody:FromJson(oRest:GetBodyRequest())

  oRest:setResponse(AnswerRest(recalculateSAC(oBody)))

  FreeObj(oBody)
Return

/*/{Protheus.doc} simulation
  EndPoint para realizar a simulação dos calculos do template de formulas.

  @author Vinicius do Prado
  @since 21/03/2023
/*/
@POST('/api/gfin/v1/applicationsLoans/simulation')
Function AppropriationSimulation()
  Local jBody As Json
  Local oHeader := oRest:getHeaderRequest() As Json

  If oHeader:hasProperty('dataBase') .and. !Empty(oHeader['dataBase'])
    dDataBase := stringIsoToDate(oHeader['dataBase'])
  Endif

  jBody := JsonObject():new()
  jBody:FromJson(oRest:GetBodyRequest())

  oService := GfinApplicationLoanService():new()
  jResponse := oService:postSimulation(jBody)

  oRest:setResponse(AnswerRest(jResponse))
Return
