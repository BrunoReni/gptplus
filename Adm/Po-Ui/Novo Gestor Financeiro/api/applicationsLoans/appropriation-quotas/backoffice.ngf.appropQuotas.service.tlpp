#include 'tlpp-core.th'
#include 'totvs.ch'
#include "backoffice.ngf.appropquotas.service.ch"

NAMESPACE totvs.protheus.backoffice.ngf.appropQuotas
USING NAMESPACE gfin.util
USING NAMESPACE totvs.protheus.backoffice.ngf.util

Class GfinAppropQuotasService FROM FWAdapterBaseV2
	Public Method new()
	Public Method getApprop()
	Public Method cancelApprop()
	Public Method postApprop()
	Public Method calcApprop()
EndClass

Method new() Class GfinAppropQuotasService
	_Super:new('GET')
  If MethIsMemberOf( self, "setUseSpaces", .T. )
    ::setUseSpaces(.T.)
  Endif
Return Self

/*/{Protheus.doc} getApprop
	obter os registros de apropriação com cotas.

	@param headers As Json, cabeçalho recebido
	@param jQueryRequestParams As Json, parâmetros recebidos

	@Return jResponse As Json, retorna os dados do formulário de apropriação.

	@author luiz.nai
	@since 12/04/2022
/*/
Method getApprop(cId as Character, jQueryParams as Json) Class GfinAppropQuotasService
	Local cError           := ""  as Character
	Local aRetAuto         := {}  as Array
	Local aError           := {}  as Array
	Local jResponse               as Json
	Local nIndex           := 1   as Numeric
	Local aChave           := {}  as Array
	Private lMsErroAuto    := .F. as Logical
	Private lAutoErrNoFile := .T. as Logical
	Private lMsHelpAuto    := .T. as Logical

	jResponse := JsonObject():New()
	aChave    := STRTOKARR(cId, '|' )

	If LEN(aChave) < 3
		jResponse := getError('A183CHAVE')
	Else
		aContrato := setContrato(aChave, jQueryParams)
    	
		MsExecAuto( {|x| aRetAuto := F183Calc(x)} , aContrato) //inclusao

		IF lMsErroAuto
			aError := GetAutoGRLog()
			IF !Empty(aError)
				For nIndex := 1 To Len(aError)
					cError += aError[nIndex] + CRLF
				Next nIndex
			ENDIF
			jResponse := getError(cError)
		Else
			jResponse["result"] := .T.
			jResponse["response"] := JsonObject():New()
			jResponse["response"]["items"] := arrayToJson({aRetAuto})
		EndIf
	EndIf

	::DeActivate()

Return jResponse

/*/{Protheus.doc} cancelApprop
	obter os registros de estorno com cotas.

	@param headers As Json, cabeçalho recebido
	@param jQueryRequestParams As Json, parâmetros recebidos

	@Return jResponse As Json, retorna os dados do formulário de apropriação.

	@author luiz.nai
	@since 12/04/2022
/*/
Method cancelApprop(cId as Character,  jQueryParams As Json, lDelete As Logical) Class GfinAppropQuotasService
	Local cError           := ""  as Character
	Local aRetAuto         := {}  as Array
	Local aError           := {}  as Array
	Local aChave           := {}  as Array
	Local jResponse               as Json
	Local nIndex           := 1   as Numeric
	Private lMsErroAuto    := .F. as Logical
	Private lAutoErrNoFile := .T. as Logical
	Private lMsHelpAuto    := .T. as Logical
	jResponse              := JsonObject():New()


	aChave    := STRTOKARR(cId, '|' )

	If LEN(aChave) < 3
		jResponse := getError('A183CHAVE')
	Else

		aContrato := setContrato(aChave, jQueryParams)

		If(!lDelete)
			MsExecAuto( {|x| aRetAuto := F183GetEst(x)} , aContrato) //retornar campo estorno
		Else
			MsExecAuto( {|x,y| aRetAuto := Fina183(x,y)} , 4, aContrato) //retornar campo estorno
		EndIf

		IF lMsErroAuto
			aError := GetAutoGRLog()
			IF !Empty(aError)
				For nIndex := 1 To Len(aError)
					cError += aError[nIndex] + CRLF
				Next nIndex
			ENDIF

			jResponse := getError(cError)
		Else
			jResponse["result"] := .T.
			jResponse["response"] := JsonObject():New()

			If(!lDelete)
				jResponse["response"]["items"] := arrayToJson({aRetAuto})
			Else
				jResponse["response"]["message"] := STR0001
			EndIf
		EndIf
	EndIf

	::DeActivate()
Return jResponse

/*/{Protheus.doc} postApprop
	salva os registros de apropriação com cotas.

	@param jQueryRequestParams As Json, parâmetros recebidos

	@Return jResponse As Json, retorna se o processo foi concluído com sucesso.

	@author luiz.nai
	@since 12/04/2022
/*/
Method postApprop(cId as Character, jBodyParams As Json) Class GfinAppropQuotasService
	Local cError  		   := ""  	as Character
  	Local oError         			As Object
	Local aError 		   := {} 	as Array
	Local jResponse    				as Json
	Local nIndex 		   := 1  	as Numeric
	Local aChave           := {} 	as Array
	Private lMsErroAuto    := .F. 	as Logical
	Private lAutoErrNoFile := .T. 	as Logical
	Private lMsHelpAuto    := .T. 	as Logical
	jResponse              := JsonObject():New()

	aChave    := STRTOKARR(cId, '|' )

	If LEN(aChave) < 3
		jResponse := getError('A183CHAVE')
	Else
		aContrato := setContrato(aChave, jBodyParams)
    	oError := ErrorBlock( { |e| AplEmpErr(e, 'FINA183', 'ExecAutoFINA183', @cError) } )

    	Begin Transaction
			MsExecAuto( {|x,y| FINA183(x, y)} , 3, aContrato) //baixa
		End Transaction

    	ErrorBlock(oError)

		If Empty(cError)
			IF lMsErroAuto
				aError := GetAutoGRLog()
				IF !Empty(aError)
					For nIndex := 1 To Len(aError)
						cError += aError[nIndex] + CRLF
					Next nIndex
				ENDIF

				jResponse := getError(cError)
			Else
				jResponse["result"] := .T.
				jResponse["response"] := JsonObject():New()
				jResponse["response"]["message"] := STR0002
			EndIf
		Else
			jResponse := answerErrorFormat(500, 'Internal server error', cError)
			DisarmTransaction()
		Endif
	EndIf

	::DeActivate()
Return jResponse

/*/{Protheus.doc} calcApprop
	calcula os registros de apropriação com cotas.

	@param jQueryRequestParams As Json, parâmetros recebidos

	@Return jResponse As Json, retorna os campos calculados.

	@author luiz.nai
	@since 12/04/2022
/*/
Method calcApprop(cId as Character, jBodyParams As Json) Class GfinAppropQuotasService
	Local cError           := ""  as Character
	Local aRetAuto         := {}  as Array
	Local aError           := {}  as Array
	Local aChave           := {}  as Array
	Local jResponse               as Json
	Local nIndex           := 1   as Numeric
	Private lMsErroAuto    := .F. as Logical
	Private lAutoErrNoFile := .T. as Logical
	Private lMsHelpAuto    := .T. as Logical
	jResponse	:= JsonObject():New()

	aChave    := STRTOKARR(cId, '|' )

	If LEN(aChave) < 3
		jResponse := getError('A183CHAVE')
	Else
		aContrato := setContrato(aChave, jBodyParams)

		MsExecAuto( {|x| aRetAuto := F183CalAlt(x)} , aContrato)//inclusao

		IF lMsErroAuto
			aError := GetAutoGRLog()
			IF !Empty(aError)
				For nIndex := 1 To Len(aError)
					cError += aError[nIndex] + CRLF
				Next nIndex
			ENDIF
			jResponse := getError(cError)
		Else
			jResponse["result"] := .T.
			jResponse["response"] := JsonObject():New()
			jResponse["response"]["items"] := arrayToJson({aRetAuto})
		EndIf
	EndIf
	::DeActivate()
Return jResponse

/*/{Protheus.doc} getError
	Verifica qual foi o retorno do erro.

	@param cError as Character, parâmetros recebidos

	@Return jResponse As Json, retorna json com o erro.

	@author luiz.nai
	@since 19/04/2022
/*/
Static Function getError(cError as Character)
	Local cErrorTitle := ""  as Character
	Local cErroCode   := 201 as Numeric
	If ("AJUDA:A183DTAPR" $ cError)
		cErrorTitle :=  'A183DTAPR'
	Elseif ("AJUDA:A183APLIC" $ cError)
		cErrorTitle :=  'A183APLIC'
	ElseIf ("AJUDA:A183APROP" $ cError)
		cErrorTitle :=  'A183APROP'
	ElseIf ("AJUDA:NATNAOENC" $ cError)
		cErrorTitle :=  'NATNAOENC'
	ElseIf ("AJUDA:NATVAZIA" $ cError)
		cErrorTitle :=  'NATVAZIA'
	ElseIf ("AJUDA:A183DEMOVF" $ cError)
		cErrorTitle :=  'A183DEMOVF'
	ElseIf ("AJUDA:A183RESGAP" $ cError)
		cErrorTitle :=  'A183RESGAP'
	ElseIf ("A183CHAVE" $ cError)
		cErrorTitle :=  'A183RESGAP'
	Else
		cErrorTitle := STR0003
		cErroCode   := 403
	EndIf
Return answerErrorFormat(cErroCode, cErrorTitle, cError)

/*/{Protheus.doc} setContrato
	Preapara o array de contrato
	@type	Static Function
	@author renato.ito
	@since 19/04/2022
	@param aChave, array, array com a chave do título
	@param jParams, json, json com as propriedades para o execauto
	@return Array, array praparado para o execauto
/*/
Static Function setContrato(aChave as Array, jParams as Json)
	Local aContrato := {} as Array
	DEFAULT jParams := JsonObject():new()

	aContrato := {;
		{'EH_FILIAL',PADR(aChave[1], fwsizefilial())},;
		{'EH_NUMERO',PADR(aChave[2], Tamsx3("EH_NUMERO")[1])},;
		{'EH_REVISAO',aChave[3]};
	}

	If jParams:hasProperty("dataBase")
		dDataBase := CTOD(jParams["dataBase"])
	EndIf
	If jParams:hasProperty("ca183Codigo")
		aadd(aContrato, {'ca183Codigo', jParams["ca183Codigo"]})
	EndIf
	If jParams:hasProperty("cNBanco")
		aadd(aContrato, {'cNBanco'    , jParams["cNBanco"]})
	EndIf
	If jParams:hasProperty("EH_DATA")
		aadd(aContrato, {'EH_DATA'    , jParams["EH_DATA"]})
	EndIf
	If jParams:hasProperty("EH_SALDO")
		aadd(aContrato, {'EH_SALDO'   , jParams["EH_SALDO"]})
	EndIf
	If jParams:hasProperty("na183VlAtu")
		aadd(aContrato, {'na183VlAtu' , jParams["na183VlAtu"]})
	EndIf
	If jParams:hasProperty("ca183Bco")
		aadd(aContrato, {'ca183Bco'   , jParams["ca183Bco"]})
	EndIf
	If jParams:hasProperty("ca183Age")
		aadd(aContrato, {'ca183Age'   , jParams["ca183Age"]})
	EndIf
	If jParams:hasProperty("ca183Cta")
		aadd(aContrato, {'ca183Cta'   , jParams["ca183Cta"]})
	EndIf
	If jParams:hasProperty("da183Cred")
		aadd(aContrato, {'da183Cred'  , jParams["da183Cred"]})
	EndIf
	If jParams:hasProperty("ca183Nat")
		aadd(aContrato, {'ca183Nat'   , jParams["ca183Nat"]})
	EndIf
	If jParams:hasProperty("ca183Histor")
		aadd(aContrato, {'ca183Histor', jParams["ca183Histor"]})
	EndIf
	If jParams:hasProperty("nVlCotaAtu")
		aadd(aContrato, {'nVlCotaAtu' , jParams["nVlCotaAtu"]})
	EndIf
	If jParams:hasProperty("na183AtuIr")
		aadd(aContrato, {'na183AtuIr' , jParams["na183AtuIr"]})
	EndIf
	If jParams:hasProperty("na183VlIrf")
		aadd(aContrato, {'na183VlIrf' , jParams["na183VlIrf"]})
	EndIf
	If jParams:hasProperty("nRendimento")
		aadd(aContrato, {'nRendimento', jParams["nRendimento"]})
	EndIf
	If jParams:hasProperty("n183QtdCota")
		aadd(aContrato, {'n183QtdCota', jParams["n183QtdCota"]})
	EndIf
	If jParams:hasProperty("n183SldCota")
		aAdd(aContrato, {'n183SldCota', jParams["n183SldCota"]})
	EndIf
	If jParams:hasProperty("fieldName")
		aAdd(aContrato, {'ALT_CAMPO', jParams["fieldName"]})
	EndIf
	If jParams:hasProperty("fieldValue")
		aAdd(aContrato, {'ALT_VALOR', jParams["fieldValue"]})
	EndIf
Return aContrato

