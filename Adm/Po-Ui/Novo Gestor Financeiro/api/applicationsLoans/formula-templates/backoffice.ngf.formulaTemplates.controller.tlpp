#include 'tlpp-core.th'
#include 'tlpp-rest.th'
#include "backoffice.ngf.formulaTemplates.controller.CH"

NAMESPACE totvs.protheus.backoffice.ngf.formulaTemplates
USING NAMESPACE gfin.util
USING NAMESPACE totvs.protheus.backoffice.ngf.util

//-------------------------------------------------------------------
/*/{Protheus.doc} postFormulaTemplates
	EndPoint para inclusão de template de formulas.

	@author Vinicius do Prado
	@since abr|2022
/*/
//-------------------------------------------------------------------
@POST('/api/gfin/v1/applicationsLoans/formulaTemplates')
Function postFormulaTemplates()
  Local oService  as Object
  Local oBody as Json
  Local jResponse as Json

  oBody := JsonObject():new()
  oBody:FromJson(oRest:GetBodyRequest())
  oService := GfinFormulaTemplatesService():new()

  If AliasInDic('F7B') .And. AliasInDic('F7C')
    oRest:setResponse(answerRest(oService:postItem(oBody)))
	Else
    jResponse := answerFormat(.F., 500, STR0001, STR0002) // Tabelas F7B e F7C não encontradas
    oRest:setResponse(answerRest(jResponse))
  EndIf

  FreeObj(oService)
Return

//-------------------------------------------------------------------
/*/{Protheus.doc} putFormulaTemplates
	EndPoint para alteração dos template de formulas.

	@author Vinicius do Prado
	@since abr|2022
/*/
//-------------------------------------------------------------------
@PUT('/api/gfin/v1/applicationsLoans/formulaTemplates/:InternalID')
Function putFormulaTemplates()
  Local oService  as Object
  Local oBody as Json
  Local cInternalID := "" as Character
  Local jResponse as Json

  cInternalID := oRest:getPathParamsRequest()['InternalID']

  oBody := JsonObject():new()
  oBody:FromJson(oRest:GetBodyRequest())
  oService := GfinFormulaTemplatesService():new()

  If AliasInDic('F7B') .And. AliasInDic('F7C')
    oRest:setResponse(answerRest(oService:putItem(oBody, cInternalID)))
  Else
    jResponse := answerFormat(.F., 500, STR0001, STR0002) // Tabelas F7B e F7C não encontradas
    oRest:setResponse(answerRest(jResponse))
  EndIf

  FreeObj(oService)
Return

//-------------------------------------------------------------------
/*/{Protheus.doc} deleteFormulaTemplates
	EndPoint para deleção dos templates de formula.

	@author Vinicius do Prado
  @since abr|2022
/*/
//-------------------------------------------------------------------
@DELETE('/api/gfin/v1/applicationsLoans/formulaTemplates/:InternalID')
Function deleteFormulaTemplates()
  Local oService  as Object
  Local cInternalID := "" as Character
  Local jResponse as Json

  cInternalID := oRest:getPathParamsRequest()['InternalID']
  oService := GfinFormulaTemplatesService():new()

  If AliasInDic('F7B') .And. AliasInDic('F7C')
    oRest:setResponse(answerRest(oService:deleteByID(cInternalID)))
  Else
    jResponse := answerFormat(.F., 500, STR0001, STR0002) // Tabelas F7B e F7C não encontradas
    oRest:setResponse(answerRest(jResponse))
  EndIf

  FreeObj(oService)
Return

//-------------------------------------------------------------------
/*/{Protheus.doc} getTemplateConfig
	EndPoint para obter as configurações de template

	@author Renato ito
	@since 31/05/2022
/*/
//-------------------------------------------------------------------
@GET('/api/gfin/v1/applicationsLoans/template/configuration/:type')
Function getTemplateConfig()
	Local oService                        as Object
	Local cType     := ""                 as Character
	Local jResponse := JsonObject():New() as Json

	cType    := UPPER(oRest:getPathParamsRequest()[ 'type' ])
	oService := totvs.protheus.backoffice.ngf.template.Template():New()

	jResponse['result'] := .T.
	If cType == 'APL'
		jResponse['response'] := oService:getAplTemplate()
	Else
		jResponse['response'] := oService:getEmpTemplate()
	EndIf

	gfin.util.answerRest(jResponse)

	FreeObj(oService)
Return

