#include 'tlpp-core.th'
#include 'backoffice.ngf.formulaTemplates.service.ch'

NAMESPACE totvs.protheus.backoffice.ngf.formulaTemplates
USING NAMESPACE gfin.util
USING NAMESPACE totvs.protheus.backoffice.ngf.util


Class GfinFormulaTemplatesService FROM FWAdapterBaseV2
  Public Method new()
  Public METHOD postItem()
  Public METHOD putItem()
  Public METHOD deleteByID()
EndClass

Method new() Class GfinFormulaTemplatesService
  _Super:new('GET')
  If MethIsMemberOf( self, "setUseSpaces", .T. )
    ::setUseSpaces(.T.)
  Endif
Return Self

//-----------------------------------------------------------------
/*/{Protheus.doc} postItem
	Realiza a inserção do registro na tabela F7B e F7C de acordo com o body da requisição.

  @param jBodyRequest, json, campos no body da requisição.
  @return jResponse, Json, resposta da requisição.

	@author Vinicius do Prado
	@since abr|2022
/*/
//-------------------------------------------------------------------
Method postItem(jBodyRequest as Json) Class GfinFormulaTemplatesService
  Local jResponse as Json
  Local lOk := .T. as Logical
  Local cMessage := "" as Character
  Local nI := 0 as Numeric
  Local cAuxBody := "" as Character
  Local cConfig := "" As Character

  If ValType(jBodyRequest['F7B']) != 'J' .Or. ValType(jBodyRequest['F7C']) != 'A'
    cMessage := STR0001 // Necessário informar os dados das tabelas F7B e F7C
    lOk := .F.
  EndIf

  If lOk 
    cAuxBody := DecodeUtf8(jBodyRequest:toJson())
    jBodyRequest:fromJson(cAuxBody)
  EndIf

  IF lOk 
    If Empty(jBodyRequest['F7B']['f7b_codigo']) .Or.;
       Empty(jBodyRequest['F7B']['f7b_descri']) .Or.;
       Empty(jBodyRequest['F7B']['f7b_aplemp'])

      cMessage := STR0002 // Campos obrigatórios da tabela F7B não informados
      lOk := .F.
    EndIf
  EndIf

  If lOk
    For nI := 1 To Len(jBodyRequest['F7C'])
      IF Empty(jBodyRequest['F7C'][nI]['f7c_tipo'])   .Or.;
         Empty(jBodyRequest['F7C'][nI]['f7c_descri']) .Or.;
         Empty(jBodyRequest['F7C'][nI]['f7c_form'])   .Or.;
         jBodyRequest['F7C'][nI]['f7c_config'] == NIL

        cMessage := STR0003 // Campos obrigatórios da tabela F7C não informados
        lOk := .F.
      Else
        If ValType( jBodyRequest['F7C'][nI]['f7c_config'] ) == 'J'
          cConfig := jBodyRequest['F7C'][nI]['f7c_config']:ToJson() 
          jBodyRequest['F7C'][nI]['f7c_config'] := NIL
          jBodyRequest['F7C'][nI]['f7c_config'] := cConfig
        Endif
      Endif
    Next nI
  EndIf

  If lOk
    jResponse := formulaTemplatesInclude(jBodyRequest)
  Else
    jResponse := answerFormat(.F., 400, STR0004, cMessage) // Erro ao incluir o template
  EndIf

Return jResponse

//-----------------------------------------------------------------
/*/{Protheus.doc} putItem
	Realiza a alteração do registro na tabela F7B e F7C de acordo com o body da requisição.

  @param jBodyRequest, json, campos no body da requisição.
  @return jResponse, Json, resposta da requisição.

	@author Vinicius do Prado
	@since abr|2022
/*/
//-------------------------------------------------------------------
Method putItem(jBodyRequest as Json, cInternalID as Character) Class GfinFormulaTemplatesService 
  Local jResponse as Json
  Local lOk := .T. as Logical
  Local cMessage := "" as Character
  Local nI := 0 as Numeric
  Local cAuxBody := "" as Character
  Local cConfig := "" As Character

  If ValType(jBodyRequest['F7B']) != "J" .And. ValType(jBodyRequest['F7C']) != "A"
    cMessage := STR0005 // Necessário informar os dados das tabelas F7B ou F7C
    lOk := .F.
  EndIf

  If lOk .And. ValType(jBodyRequest['F7B']) == "J"
     If Empty(jBodyRequest['F7B']['f7b_descri'])
      cMessage := STR0002 // Campos obrigatórios da tabela F7B não informados
      lOk := .F.
    EndIf
  EndIf


  If lOk .And. ValType(jBodyRequest['F7C']) == "A"
    For nI := 1 To Len(jBodyRequest['F7C'])
      IF Empty(jBodyRequest['F7C'][nI]['f7c_tipo'])   .Or.;
         Empty(jBodyRequest['F7C'][nI]['f7c_descri']) .Or.;
         Empty(jBodyRequest['F7C'][nI]['f7c_form'])   .Or.;
         jBodyRequest['F7C'][nI]['f7c_config'] == NIL

        cMessage := STR0003 // Campos obrigatórios da tabela F7C não informados
        lOk := .F.
      Else
        If ValType( jBodyRequest['F7C'][nI]['f7c_config'] ) == 'J'
          cConfig := jBodyRequest['F7C'][nI]['f7c_config']:ToJson() 
          jBodyRequest['F7C'][nI]['f7c_config'] := NIL
          jBodyRequest['F7C'][nI]['f7c_config'] := cConfig
        Endif
      Endif
    Next nI
  EndIf

  If lOk
    cAuxBody := DecodeUtf8(jBodyRequest:toJson())
    jBodyRequest:fromJson(cAuxBody)
  EndIf

  If lOk
    jResponse := formulaTemplatesEdit(jBodyRequest, cInternalID)
  Else
    jResponse := answerFormat(.F., 400, STR0008, cMessage)
  EndIf
Return jResponse

//-----------------------------------------------------------------
/*/{Protheus.doc} deleteByID
	Realiza a deleção do registro na tabela F7B e F7C de acordo com a chave informada.

  @param cInternalID, json, chave do registro da tabela F7B para deleção.
  @return jResponse, Json, resposta da requisição.

	@author Vinicius do Prado
	@since abr|2022
/*/
//-------------------------------------------------------------------
Method deleteByID(cInternalID as Character) Class GfinFormulaTemplatesService
  Local jResponse as Json

  jResponse := formulaTemplatesDelete(cInternalID)
  
Return jResponse
