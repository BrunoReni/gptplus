#include 'tlpp-core.th'
#include 'tlpp-rest.th'

NAMESPACE totvs.protheus.backoffice.ngf.payment
USING NAMESPACE gfin.util
USING NAMESPACE totvs.protheus.backoffice.ngf.util

/*/{Protheus.doc}
  EndPoint para efetuar os pagamentos dos emprestimos

  @author Vitor Duca
  @since 04/01/2022
/*/
@POST('/api/gfin/v1/applicationsLoans/payment')
Function includePayment()
  Local oBody as Json
  Local jResponse as Json
  Local oHeader := oRest:getHeaderRequest() As Json 

  If oHeader:hasProperty('dataBase') .and. !Empty(oHeader['dataBase'])
    dDataBase := stringIsoToDate(oHeader['dataBase'])
  Endif

  oBody := JsonObject():new()
  oBody:FromJson(oRest:GetBodyRequest())

  jResponse := PaymentLoan(oBody)

	oRest:setResponse(answerRest(jResponse))

Return

/*/{Protheus.doc}
  EndPoint para calcular o valor de pagamento de uma parcela

  @author Vitor Duca
  @since 18/01/2022
/*/
@POST('/api/gfin/v1/applicationsLoans/payment/value')
Function calcValuePayment()
  Local oBody as Json
  Local jResponse as Json
  Local oHeader := oRest:getHeaderRequest() As Json 

  If oHeader:hasProperty('dataBase') .and. !Empty(oHeader['dataBase'])
    dDataBase := stringIsoToDate(oHeader['dataBase'])
  Endif

  oBody := JsonObject():new()
  oBody:FromJson(oRest:GetBodyRequest())

  jResponse := ValuePayment(oBody)

  oRest:setKeyHeaderResponse("Content-Type", "application/json")
  oRest:setResponse( jResponse[ "response" ] )
  oRest:setStatusCode( jResponse[ "statusCode" ] )

Return

/*/{Protheus.doc}
  EndPoint para calcular os campos do emprestimo, atraves da função
  Fa171Calc

  @author Vitor Duca
  @since 05/01/2022
/*/
@POST('/api/gfin/v1/applicationsLoans/payment/calculate')
Function calculatePayment()
  Local oBody as Json
  Local jResponse as Json
  Local oHeader := oRest:getHeaderRequest() As Json 

  If oHeader:hasProperty('dataBase') .and. !Empty(oHeader['dataBase'])
    dDataBase := stringIsoToDate(oHeader['dataBase'])
  Endif

  oBody := JsonObject():new()
  oBody:FromJson(oRest:GetBodyRequest())

  jResponse := CalculationPayment(oBody)

	oRest:setResponse(jResponse)

Return

/*/{Protheus.doc}
  EndPoint para obter a sequencia de movimentação da parcela

  @author Vinicius Prado
  @since 28/01/2022
/*/
@GET('/api/gfin/v1/applicationsLoans/payment/sequence')
Function getSequenceParcelPayment()
  Local jResponse as Json

  jResponse := getSequenceParcelService(oRest:getQueryRequest())

  oRest:setKeyHeaderResponse("Content-Type", "application/json")

  If ( jResponse["result"] )
      oRest:setResponse( jResponse[ "response" ] )
  Endif

  oRest:setStatusCode( jResponse[ "statusCode" ] )

  FreeObj(jResponse)
Return

/*/{Protheus.doc}
  EndPoint para calcular o valor de amortização em um emprestimo

  @author Vitor Duca
  @since 18/01/2022
/*/
@POST('/api/gfin/v1/applicationsLoans/payment/amortization')
Function calcValueAmortization()
	Local oBody as Json
	Local jResponse as Json
  Local oHeader := oRest:getHeaderRequest() As Json 

  If oHeader:hasProperty('dataBase') .and. !Empty(oHeader['dataBase'])
    dDataBase := stringIsoToDate(oHeader['dataBase'])
  Endif

	oBody := JsonObject():new()
	oBody:FromJson(DecodeUTF8(oRest:GetBodyRequest()))

	jResponse := ValueAmortization(oBody)

	oRest:setKeyHeaderResponse("Content-Type", "application/json")
	oRest:setResponse( jResponse[ "response" ] )
	oRest:setStatusCode( jResponse[ "statusCode" ] )

Return

/*/{Protheus.doc}
  EndPoint para estornar os pagamentos ou amortizações dos emprestimos

  @author Vitor Duca
  @since 26/04/2022
/*/
@DELETE('/api/gfin/v1/applicationsLoans/payment/:internalID')
Function reversePayment()
  Local jResponse as Json
  Local cPathParam := "" As Character
  Local oBody as Json
  Local oHeader := oRest:getHeaderRequest() As Json 

  If oHeader:hasProperty('dataBase') .and. !Empty(oHeader['dataBase'])
    dDataBase := stringIsoToDate(oHeader['dataBase'])
  Endif

  oBody := JsonObject():new()
  oBody:FromJson(oRest:GetBodyRequest())

  cPathParam := oRest:getPathParamsRequest()['internalID']
  jResponse := ReversePaymentLoan(cPathParam, oBody)

  oRest:setResponse(answerRest(jResponse))
  FreeObj(jResponse)
Return
