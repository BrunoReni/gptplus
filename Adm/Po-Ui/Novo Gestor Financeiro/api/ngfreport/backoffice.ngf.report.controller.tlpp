#INCLUDE 'tlpp-core.th'
#INCLUDE 'tlpp-rest.th'
#INCLUDE 'backoffice.ngf.report.controller.ch'

NAMESPACE totvs.protheus.backoffice.ngf.report
USING NAMESPACE gfin.util
USING NAMESPACE totvs.protheus.backoffice.ngf.util

/*/{Protheus.doc} getVersion
	Retorna a versão do endpoint
	@type  Function
	@author Vitor Duca
	@since 19/10/2022
	@return numeric, número da versão
/*/
Function getVersion() As Numeric
Return	1

/*/{Protheus.doc} Report
	API para impressão de dados utilizando o TReport
	@author Vitor Duca
	@since 11/10/2022
/*/
@POST('/api/gfin/v1/report')
Function NGFreport()
    Local jResponse := JsonObject():new() as Json
    Local jBody := JsonObject():new() as Json
    Local cBodyContent := jBody:fromJson(DecodeUtf8(oRest:GetBodyRequest())) as character
    Local oReport := NIL As Object
    Local cFileName := "" As Character
    Local cFilePDF := "" As Character
    Local cDirectory := "" As Character
    Local lRet := .T. As Logical 
    Local lOk := .T. As Logical 
    Local oFile := NIL As Object

    If (!Empty(cBodyContent))
        jResponse := answerFormat(.F., 403, STR0001 + cBodyContent, "")
        lRet := .F.
    Endif

    If lRet .and. !jBody:hasProperty("sections")
        jResponse := answerFormat(.F., 403, STR0002 + 'sections' + STR0003 , "")
        lRet := .F.
    Endif

    If lRet
        oReport := totvs.protheus.backoffice.ngf.treport.FINDTDYNAMICREPORT():new("DINAMIC", jBody["title"],  jBody["description"])
        oReport:setNameFile(jBody["filename"])
        oReport:setSection(jBody)
        oReport:execute()

        cFileName := oReport:getFileName()
        cDirectory := oReport:getDirectoryFile()

        oRest:SetKeyHeaderResponse("Content-Disposition", "attachment; filename=" + cFileName + "")
        oRest:SetKeyHeaderResponse("content-type", "application/octet-stream")

        oFile := FwFileReader():New(cDirectory + cFileName)

        If (!oFile:Open())
            oFile:Close()
            FwFreeObj(oFile)
            cFileName := strtran(cFileName, ".tmp", "")
            oFile := FwFileReader():New(cDirectory + cFileName)
            lOk := oFile:Open()
        Endif

        If lOk
            cFilePDF := oFile:FullRead() 
            cFilePDF := Encode64(cFilePDF)
            jResponse['file'] := cFilePDF
            jResponse['fileName'] := cFileName
            oRest:SetResponse(jResponse)
            oFile:Close()
            fErase(cDirectory + cFileName)
        Else
            jResponse := answerFormat(.F., 412, STR0004 , FwHttpEncode(STR0005) + cDirectory + cFileName)
            answerRest(jResponse)
            oFile:Close()
        EndIf
    Else
        answerRest(jResponse)
    Endif   
    
    FwFreeObj(oFile)
Return
