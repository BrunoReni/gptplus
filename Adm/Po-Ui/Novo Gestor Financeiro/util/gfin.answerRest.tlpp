#INCLUDE 'tlpp-core.th'

NameSpace gfin.util

//-------------------------------------------------------------------
/*/{Protheus.doc} AnswerRest
Envio o resultado de sucesso ou falha para o serviço rest,
fazendo ja o tratamento do statusCode
@param jServiceResponse Objeto json de resposta. Deve conter os seguintes atributos:
    - {
        "result" : true ou false 
        "response" : json de resposta
        "statusCode": código http de resposta quando necessário

    }
@author Renato Ito
@since 03/08/2020
/*/
//-------------------------------------------------------------------
Function AnswerRest(jServiceResponse As Json)

	oRest:setKeyHeaderResponse("Content-Type", "application/json")
	
    If ( jServiceResponse["result"] )
        oRest:setResponse( jServiceResponse[ "response" ] ) 
    Else
        oRest:setFault(jServiceResponse[ "response" ]:toJson())
    Endif

	If ( jServiceResponse[ "statusCode" ] != nil )
		oRest:setStatusCode( jServiceResponse[ "statusCode" ] )  
	Endif
	FreeObj(jServiceResponse)
	jServiceResponse := nil
Return

//-------------------------------------------------------------------
/*/{Protheus.doc} AnswerErrorFormat
Formata o respota de erro no formato json

@param 	statusCode, numeric, status code
		message, character, mensagem de erro
		detailed, character, mensagem detalhada

@return jRet, Json, json com os atributos:
	{
        "result" :  logical 
        "statusCode": numeric
        "response" : {
			"code" : character
			"message" : character
			"detailedMessage" : character
		}
    }
@author Renato Ito
@since 17/08/2020
/*/
//-------------------------------------------------------------------
Function AnswerErrorFormat(statusCode As Numeric, message As Character, detailed As Character) As Json
	
	Local jRet As Json

	jRet := {;
				"result": .F. , ;
				"statusCode": statusCode,;
				"response": {;
					"code": cValToChar(statusCode),;
					"message": message,;
					"detailedMessage": detailed;
				};
			}

return jRet

//-------------------------------------------------------------------
/*/{Protheus.doc} answerFormat
Formata a respota de sucesso no formato json

@param 	statusCode, numeric, status code
		message, character, mensagem de erro
		detailed, character, mensagem detalhada

@return jRet, Json, json com os atributos:
	{
        "result" :  logical 
        "statusCode": numeric
        "response" : {
			"code" : character
			"message" : character
			"detailedMessage" : character
		}
    }
@author Vitor Duca
@since 10/01/2021
/*/
//-------------------------------------------------------------------
Function answerFormat(lSucess As Logical, nStatusCode As Numeric, cMessage As Character, cDetailed As Character) As Json
	
	Local jRet As Json

	jRet := {;
				"result": lSucess , ;
				"statusCode": nStatusCode,;
				"response": {;
					"code": cValToChar(nStatusCode),;
					"message": cMessage,;
					"detailedMessage": cDetailed;
				};
			}

return jRet
