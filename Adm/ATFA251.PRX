#INCLUDE "ATFA251.CH"
#INCLUDE "PROTHEUS.CH"
#Include "FWLIBVERSION.CH"

STATIC lIsRussia	:= If(cPaisLoc$"RUS",.T.,.F.) // CAZARINI - Flag to indicate if is Russia location
Static __nExeDel 	:= 0
Static lN1Ciap 		:= Nil
Static aTipos		:= RetTipos( {"02","07","10","11","12","14","16","17","05"} )  	//Utilizado nas funcionalidades Detalhar e Agrupar
Static nPosGerCIAP  := 0
Static aItensMark   := {}
Static _lFirst      := .T.
Static __lAgrupComp := .F.
Static __lMetric	:= FwLibVersion() >= "20210517" .And. GetSrvVersion() >= "19.3.0.6" //Metricas apenas em Lib a partir de 20210517 e Binario 19.3.0.6
Static lAutomato	:= .F.
Static lCT34		:= .F.
Static __oQueryN3   := Nil
Static __oQry       := Nil
Static __oQryBemC   := Nil

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³ATFA251   ºAutor  ³      Jair Ribeiro  º Data ³  13/06/00   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Rotina de Aquisicao por Transferencia.                      º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±º          ³ Fonte Rev. 51 15/04/11 - Atualizado em 16/11/11       	  º±±
±±º          ³ Jair Ribeiro - Tratamento para os tipos 02|07|10|11|14     º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ Ativo Fixo                                                 º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function ATFA251(nPosArotina)
Private aRotina      := MenuDef()
Private cMarca       := GetMark()
Private aDiario      :={}
Private cCodRat
Private cCodDiario   := ""
Private cPerg	       := "AFA251"
Private cCadastro    := STR0005 							// "Aquisicao por Transferencia"
Private nPerRat      := 0
Private aAtvClas     := {}

Default nPosArotina 	:= 0
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Ativa tecla F12 para ativar parametros de lan‡amentos contab.           ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Pergunte(cPerg,.F.)
ATFXKERNEL()
SetKey( VK_F12, { || Pergunte(cPerg,.T.) })
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Carrega as perguntas selecionadas:                                     ³
//³ mv_par01 - 1 Mostra lan‡amentos cont beis da Baixa                     ³
//³            2 NAO Mostra lan‡amentos cont beis da baixa                 ³
//³            3 NAO Contabiliza a baixa de adiantamentos                  ³
//³ mv_par02 - 1 Aglutina lancamentos da baixa de adiantamentos            ³
//³            2 Nao Aglutina lancamentos da baixa de adiantamentos        ³
//³ mv_par03 - 1 Repete Chapa                                              ³
//³            2 Nao Repete a Chapa                                        ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ lClassifica usada p/ classificacao. Aqui p/ Nao criar Automatico  ³
//³ qdo entrar na tela de inclusao no ATFA010 (lClassifica := .T.)    ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
AF251ChkCiap()

Set Decimals to 4
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Endere‡a a fun‡„o de BROWSE ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If nPosArotina == 0
	mBrowse( 6, 1,22,75,"SN1",,"N1_BAIXA",22,,,AtfLegenda("SN1"))
Else
	If nPosArotina == 4
		bBlock := &( "{ || Af251Canc( , , , ,.T., , , , , )}" )
		Eval( bBlock )	
	ElseIf nPosArotina == 6
		bBlock := &( "{ || af251Baix('2')}" )
		Eval( bBlock )
	ElseIf nPosArotina == 7
		bBlock := &( "{ || af251Baix('3')}" )
		Eval( bBlock )	
	ElseIf nPosArotina == 8 
		bBlock := &( "{ || af251Baix('0',,)}" )
		Eval( bBlock )	
	ElseIf nPosArotina == 9
		bBlock := &( "{ || af251Baix('1',,)}" )
		Eval( bBlock )	
	Endif
EndIf

SET KEY VK_F12 TO

Return Nil
/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o   ³ AF251Baix  ³ Autor ³ 				      ³ Data ³ 13.06.00 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o³ Aquisicao por Transferencia                                  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso     ³ Generico                                                     ³±±
±±ÀÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function af251Baix(cOpcao,nReg,nOpc)

Local oDlg1			:= Nil
Local oQtda			:= Nil
Local oValor		:= Nil
Local lInverte  	:= .F.
Local nOpcA     	:= 0
Local nOpct     	:= 0
Local nIndex		:= 0
Local dUltDepr 		:= GETMV("MV_ULTDEPR")
Local lGspInUseM 	:= If(Type('lGspInUse')=='L', lGspInUse, .F.)
Local nSaveSx8Len 	:= GetSx8Len()
Local cOrdem		:= ""
Local aAF251Imp		:= {} 									//Controle de Impostos dos Bens Informados
Local aAF251Desc	:= {} 									//Controle de Descricao Estendida
Local aAF251DOri	:= {} 									//Controle de Descricao Estendida dos itens Originais
Local cPictVlr		:= PesqPict("SN3","N3_VORIG1")
Local cPictQtd		:= PesqPict("SN1","N1_QUANTD")
Local dDataBloq 	:= GetNewPar("MV_ATFBLQM",CTOD(""))		//Data de Bloqueio da Movimentação - MV_ATFBLQM


Local aParam		:= {}
Local aRetPB		:= {}
Local aDetalhar		:= {}
Local aParametro	:= {}
Local cItem			:= ""
Local lDetail		:= .F.
Local lAgrupa		:= .F.
Local aCampos		:= {}
Local lRet			:= .T.
Local lBmContr      := IIf(SN1->(FieldPos("N1_BMCONTR"))>0,.T., .F.) 
Local lAgrupComp	:= .F.
Local aComponent    := {}
Local lSalvaPr      := IIf(lAgrupComp, .F., .T.)

Private cTrbTmp     := ''
Private oMark 	    := Nil
Private cBaseDe		:= ""
Private cBaseAte	:= ""
Private nCallsFunc 	:= 0 //telemetria quantidade de chamadas da funcao af251rateio
Default cOpcao		:= ""

lTransf	   := (cOpcao == "0")
lDetail	   := (cOpcao == "1")
lAgrupa	   := (cOpcao == "2")

lAgrupComp  := (cOpcao == "3")
__lAgrupComp:= lAgrupComp
aItensMark	:= {}

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Estrutura do aAF251Imp:        ³
//³[n][1] = Imposto               ³
//³[n][2] = Credito S/N           ³
//³[n][3] = Qtd Meses para Credito³
//³[n][4] = CIAP S/N              ³
//³[n][5] = Total Original        ³
//³[n][6] = Saldo a Ratear        ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Extrutura do Array aAF251Desc:                         ³
//³[n][1] = (Array) Descrição Estendida                   ³
//³   ... [1] = linha da Descricao                        ³
//³   ... [2] = Descricao (Limit a 40 Caractere)          ³
//³[n][2] = Vinculo com a linha do Grid da Descricao      ³
//³[n][3] = Logico que controla se a descricao foi editada³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Estrutura do aAF251DOri										³
//³[n][1]  = Código do bem original								³
//³[n][2]  = Item do bem original								³
//³[n][3]  = Tipo do bem original								³
//³[n][4]  = Sequencia do bem original							³
//³[n][5]  = Recno() do bem original							³
//³[n][6]  = (Array) Descrição Estendida						³
//³... [1] = linha da Descricao									³
//³... [2] = Descricao (Limitada a 40 Caractere)				³
//³[n][7]  = Numérico (indica se a descrição já foi atribuída)	³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

AF251ChkCiap()

If lGspInUseM //Se for GSP, pega o ultimo dia do mes anterior
	dUltDepr := MsSomaMes(dUltDepr,-1,.T.)
Endif
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ lCopia := .T. para que possa escolher a opcao no   ³
//³combo . Valida‡„o est  no SX3 AF010NAOALT().        ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Private lCopia     := .T.
Private nValorFis  := 0
Private nValorGer  := 0
Private nQtdBem    := 0
Private aCiap      := {}
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Valores Originais iniciais a ratear (n3_vorig1)Aba1³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
// *******************************
// Controle de multiplas moedas  *
// *******************************
Private aValorOri	:= AtfMultMoe(,,{|x| 0})
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Valores de depreciacao acumulada a ratear      Aba1³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
// *******************************
// Controle de multiplas moedas  *
// *******************************
Private aValDepAc	:= AtfMultMoe(,,{|x| 0})
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Valores Originais iniciais a ratear (n3_vorig1)Aba2³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
// *******************************
// Controle de multiplas moedas  *
// *******************************
Private aVlrOri	:= AtfMultMoe(,,{|x| 0})
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Valores de depreciacao acumulada a ratear     Aba2 ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
// *******************************
// Controle de multiplas moedas  *
// *******************************
Private aVlrDepAc	:= AtfMultMoe(,,{|x| 0})

If Isblind()
	lAutomato := .T.
Endif

If lAgrupComp .And. !lBmContr
	Help("",1,"AF251BMCON",,STR0190,1,0)//"Atualize o dicionário para nova função" 
	__lAgrupComp:=.F.
	Return
EndIf

Pergunte(cPerg,IIF(!lAutomato,.T.,.F.))
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Verifica se a data ‚ v lida                        ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If !Empty(dDataBloq) .AND. (dDataBase <= dDataBloq)
	Help(" ",1,"AF251BLQM",,STR0123 + DTOC(dDataBloq) ,1,0)    		//"A data de aquisição do bem é igual ou menor que a data de bloqueio de movimentação : "
	Return
EndIf

//Validacao para o bloqueio do processo
If !CtbValiDt(,dDataBase  ,,,,{"ATF001"},)
	Return
EndIf

If dDataBase < dUltDepr .Or. (dDataBase > (LastDAy(dUltDepr+1))) .OR. !(dDataBase >= dUltDepr)		//Tipo Depreciacao diferente 02-Mes Subsequente
	If GetMv("MV_TIPDEPR") <> "2"
		HELP(" ",1,"AF250DATAT") //"A transferência deve ser feita no dia do cálculo da depreciação após a execução, ou no mês posterior a data do último cálculo de depreciação."
		Return
	ElseIf dDataBase < (FirstDay(dUltDepr))
		Help(" ",1,"AF251DEPREC",,STR0064+DTOC(GetMV("MV_ULTDEPR")),1,0)
		Return
	EndIf
EndIf

cLoteAtf := LoteCont("ATF")
cBaseDe  := cBaseAte := CRIAVAR("N1_CBASE")
cTipo	 := "01"

While .T.
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Monta os campo da markbrowse³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If !lDetail
		aAdd(aCampos,{"N3_OK",,"  ",""})
		SX3->(DbSetOrder(1))
		SX3->(MsSeek("SN3"))
		Do While SX3->X3_ARQUIVO == "SN3" .And. SX3->(!EOF())
			If(X3USO(SX3->x3_usado)  .and. cNivel >= SX3->x3_nivel .and. SX3->X3_context # "V") .or.;
				(SX3->X3_PROPRI == "U" .and. SX3->X3_CONTEXT!="V" .and. SX3->X3_TIPO<>'M') .or.;
				Alltrim(SX3->X3_CAMPO) $ "N3_CBASE#N3_ITEM" .and. Alltrim(SX3->X3_CAMPO) != "N3_OK"

				aAdd(aCampos,{SX3->X3_CAMPO,,SX3->(X3TITULO()) ,SX3->X3_PICTURE})
			Endif
			SX3->(DbSkip())
		Enddo
	EndIf

	If lDetail
		If lBmContr
			If AdtComVinc(SN1->N1_CBASE,SN1->N1_ITEM)
				Help( " ", 1, "AF010BMCOM",,STR0189, 1, 0 )//"O bem é um componente de um Bem em Constr, use 'Outras ações>Agr. Bem Construc.' "
				Return
			EndIf
			If BemConsDis(SN1->N1_CBASE,SN1->N1_ITEM)
				Help( " ", 1, "AF010BMCOM",,STR0192, 1, 0 )//"Bem em Constr, use 'Outras ações>Agr. Bem Construc.' "
				Return
			EndIf
		EndIf
		If SN1->N1_BAIXA != CTOD("  /  /  ")
			Help(" ",1,"020BAIXADO")
			Exit
		Else
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Parambox 1 - Detalhar           ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			aAdd(aParam,{1,STR0010	,space(TamSx3("N1_CBASE")[1]),"@!","","","",50,.T.})
			aAdd(aParam,{2,STR0124	,1,{STR0126,STR0124},50,,.T.})
			aAdd(aParam,{2,STR0125	,1,{STR0126,STR0125},50,,.T.})
			If !lAutomato
				If !(Parambox(aParam,STR0127,aRetPB,,,.T.,,,,"AF251P1",.T.,.T.))
					Exit
				EndIf
			else
				If FindFunction("GetParAuto")
					aRetAuto	:= GetParAuto("ATFA251TestCase"	)
					aRetPB		:= aRetAuto[1]
				EndIf
			Endif

		EndIf
		cBaseDe	:= SN1->N1_CBASE
		cBaseAte:= SN1->N1_CBASE
		cItem	:= SN1->N1_ITEM
		AjRetParam(aRetPB,aParam)
		aAdd(aParametro,aRetPB[1])
		aAdd(aParametro,ATFXProxIt(xFilial("SN3"),aRetPB[1]))//Augusto A função AFA060GETITEM foi descontinuada , e foi implementada na função ATFXProxIt
		aAdd(aParametro,aRetPB[2])
		aAdd(aParametro,aRetPB[3])

		If Select("_SN3") > 0
			DbSelectArea("_SN3")
			_SN3->(DbCloseArea())
		EndIf

		If !ChkFile("SN3",.F.,"_SN3")
			Exit
		EndIf
		Pergunte(cPerg,.F.)  	//Devido ao uso da parambox se faz necessario para carregar as variaveis dos MV_PAR0x

	ElseIf lAgrupa
		If lBmContr
			If AdtComVinc(SN1->N1_CBASE,SN1->N1_ITEM)
				Help( " ", 1, "AF010BMCOM",,STR0189, 1, 0 )//"O bem é um componente de um Bem em Constr, use 'Outras ações>Agr. Bem Construc.' "
				Return
			EndIf
			If BemConsDis(SN1->N1_CBASE,SN1->N1_ITEM)
				Help( " ", 1, "AF010BMCOM",,STR0192, 1, 0 )//"Bem em Constr, use 'Outras ações>Agr. Bem Construc.' "
				Return
			EndIf
		EndIf
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Parambox 2 - Agrupar            ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		aAdd(aParam,{1,STR0008			,space(TamSx3("N1_CBASE")[1]),"@!", "","SN1","",50,.T.})
		aAdd(aParam,{1,STR0009			,space(TamSx3("N1_CBASE")[1]),"@!", "","SN1","",50,.T.})
		aAdd(aParam,{1,STR0010			,space(TamSx3("N1_CBASE")[1]),"@!","","","",50,.T.})
		aAdd(aParam,{2,STR0124			,1,{STR0126,STR0124},50,,.T.})
		aAdd(aParam,{2,STR0125			,1,{STR0126,STR0125},50,,.T.})

		If !lAutomato
			If !(Parambox(aParam,STR0127	,aRetPB,,,.T.,,,,"AF251P2",.T.,.T.))
				Exit
			EndIf
		Else
			If FindFunction("GetParAuto")
				aRetAuto	:= GetParAuto("ATFA251TestCase")
				aRetPB		:= aRetAuto[1]
			EndIf
		EndIf

		AjRetParam(aRetPB,aParam)
		cBaseDe	:= aRetPB[1]
		cBaseAte:= aRetPB[2]
		If lBmContr
			If AdtComVinc(SN1->N1_CBASE,SN1->N1_ITEM)
				Help( " ", 1, "AF010BMCOM",,STR0189, 1, 0 )//"O bem é um componente de um Bem em Constr, use 'Outras ações>Agr. Bem Construc.' "
				Return
			EndIf
			If BemConsDis(SN1->N1_CBASE,SN1->N1_ITEM)
				Help( " ", 1, "AF010BMCOM",,STR0192, 1, 0 )//"Bem em Constr, use 'Outras ações>Agr. Bem Construc.' "
				Return
			EndIf
		EndIf
		aAdd(aParametro,aRetPB[3])
		aAdd(aParametro,ATFXProxIt(xFilial("SN3"),aRetPB[3]))//Augusto A função AFA060GETITEM foi descontinuada , e foi implementada na função ATFXProxIt
		aAdd(aParametro,aRetPB[4])
		aAdd(aParametro,aRetPB[5])

		If Select("_SN3") > 0
			DbSelectArea("_SN3")
			_SN3->(DbCloseArea())
		EndIf

		If !ChkFile("SN3",.F.,"_SN3")
			Exit
		EndIf
		Pergunte(cPerg,.F.)  	//Devido ao uso da parambox se faz necessario para carregar as variaveis dos MV_PAR0x

	ElseIf lAgrupComp .And. lBmContr
		SaveInter()
		If BemConsAgr(SN1->N1_CBASE, SN1->N1_ITEM)	
			Help( " ", 1, "AF010BMCOM",,STR0193, 1, 0 )//"Bem em construção já foi agrupado. 
			Return				
		EndIf

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Parambox 2- Agrupa  Bem Constr. ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		aAdd(aParam,{1,STR0188			,space(TamSx3("N1_CBASE")[1]),"@!", "","SN1BMC","",50,lSalvaPr,lSalvaPr})
		aAdd(aParam,{2,STR0124			,2,{STR0126,STR0124},50,,.T.})
		
		If !lAutomato
			If !(Parambox(aParam,STR0188	,aRetPB,,,.T.,,,,"AF251P2",.T.,.T.))
				Exit
			EndIf
		Else
			If FindFunction("GetParAuto")
				aRetAuto	:= GetParAuto("ATFA251TestCase")
				aRetPB		:= aRetAuto[1]
			EndIf
		EndIf
		
		If BemConsAgr(aRetPB[1],alltrim(SN1->N1_ITEM))
			Help( " ", 1, "AF010BMCOM",,STR0193, 1, 0 )//"Bem em construção já foi agrupado. 
			Return				
		EndIf
		
		AjRetParam(aRetPB,aParam)
		aComponent:=CompDoBemC(aRetPB[1],alltrim(SN1->N1_ITEM))
		If len(aComponent) > 0
			cBaseDe	:= aComponent[1][1]
			cBaseAte:= aComponent[len(aComponent)][1]
		Else
			Help("",1,"AF251BMCON",,STR0191,1,0)//O bem não possui componentes
			RestInter() 
			Return
		EndIf

		aAdd(aParametro,aRetPB[1])
		aAdd(aParametro,alltrim(SN1->N1_ITEM))
		aAdd(aParametro,aRetPB[2])
		If Select("_SN3") > 0
			DbSelectArea("_SN3")
			_SN3->(DbCloseArea())
		EndIf

		If !ChkFile("SN3",.F.,"_SN3")
			Exit
		EndIf
		RestInter()
		Pergunte(cPerg,.F.)  	//Devido ao uso da parambox se faz necessario para carregar as variaveis dos MV_PAR0x
	
	ElseIf lTransf
		If lBmContr
			If AdtComVinc(SN1->N1_CBASE,SN1->N1_ITEM)
				Help( " ", 1, "AF010BMCOM",,STR0189, 1, 0 )//"O bem é um componente de um Bem em Constr, use 'Outras ações>Agr. Bem Construc.' "
				Return
			EndIf
			If BemConsDis(SN1->N1_CBASE,SN1->N1_ITEM)
				Help( " ", 1, "AF010BMCOM",,STR0192, 1, 0 )//"Bem em Constr, use 'Outras ações>Agr. Bem Construc.' "
				Return
			EndIf
		EndIf
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Parambox 3 - Transferir         ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		aAdd(aParam,{1,STR0008,space(TamSx3("N1_CBASE")[1]),"@!", "","SN1","",50,.T.})
		aAdd(aParam,{1,STR0009,space(TamSx3("N1_CBASE")[1]),"@!", "","SN1","",50,.T.})

		If !lAutomato
			If !(Parambox(aParam,STR0006,aRetPB,,,.T.,80,3,,"AF251P3",.T.,.T.)) .or. (nOpca:=TudOk())!= 1
				Exit
			EndIf
		Else
			If FindFunction("GetParAuto")
				aRetAuto	:= GetParAuto("ATFA251TestCase")
				aRetPB		:= aRetAuto[1]
			EndIf
		EndIf

		AjRetParam(aRetPB,aParam)
		cBaseDe	:= aRetPB[1]
		cBaseAte:= aRetPB[2]

		If Select("_SN3") > 0
			DbSelectArea("_SN3")
			_SN3->(DbCloseArea())
		EndIf

		If !ChkFile("SN3",.F.,"_SN3")
			Exit
		EndIf

		Pergunte(cPerg,.F.)  	//Devido ao uso da parambox se faz necessario para carregar as variaveis dos MV_PAR0x
	Else
		__lAgrupComp:=.F.
		Exit
	EndIf

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ BOPS 00000123127 - PROTECAO DA NUMERACAO SEQUENCIAL DA BAIXA ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If !AF251VLDNM(@cOrdem)
		Exit
	EndIf

	cCodRat := GetSXENum("SN3","N3_CODBAIX",,Val(cOrdem))
	ConfirmSX8()

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Filtra o arquivo por tipo e vencimento                       ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	DbSelectArea("SN3")
	DbSetOrder(1)
	cIndex := CriaTrab(nil,.f.)
	cChave  := IndexKey()
	IndRegua("SN3",cIndex,cChave,,FA251Check(cBaseDe,cBaseAte,cItem,MV_PAR07,lAgrupComp,aComponent,@cTrbTmp),STR0011) // "Selecionando Registros..."
	nIndex := RetIndex("SN3")
	DbSelectArea("SN3")
	#IFNDEF TOP
		dbSetIndex( cIndex +OrdBagExt())
	#ENDIF
	DbSelectArea("SN3")
	DbSetOrder(nIndex+1)
	DbGoTop()

	If BOF() .and. EOF()
		Help(" ",1,"RECNO")
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Restaura os indices      ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		RetIndex("SN3")
		Set Filter To
		fErase (cIndex+OrdBagExt())
		While GetSx8Len() > nSaveSx8Len
			RollBackSx8()
		EndDo
		Exit
	EndIf

	nValorFis	:= 0
	nValorGer	:= 0
	nQtdBem     := 0

	SN3->(DBEVAL({ |a| AF251DBEVA(cMarca,.F.)}))

	If lDetail
		SN3->(DbSeek(xFilial("SN3")+cBaseDe+cItem))
		RecLock("SN3",.F.)
		SN3->N3_OK := cMarca
		SN3->(MsUnlock())
		MarcouItem()
		lRet := AF251BxOK(@aAF251Imp, @aAF251DOri,lDetail)
		If lRet	
			nOpct:= AF251DIST(SN3->N3_VORIG1+SN3->N3_AMPLIA1,aDetalhar)
		EndIf
	Else
		If !lAutomato
			aSize := MSADVSIZE()
			DEFINE MSDIALOG oDlg1 TITLE STR0012 From aSize[7],0 To aSize[6],aSize[5] OF oMainWnd PIXEL // "Selecao para Transferencia"
			oDlg1:lMaximized := .T.

			oPanel := TPanel():New(0,0,'',oDlg1,, .T., .T.,, ,30,30,.T.,.T. )
			oPanel:Align := CONTROL_ALIGN_TOP

			@0.8,.8 	Say STR0166 Of oPanel // "Valor Total Bens Fiscais :"
			@0.8, 10 	Say oValor 	VAR nValorFis 	Picture cPictVlr Of oPanel
			@1.3,.8 	Say STR0167 Of oPanel //"Quantidade Marcação"
			@1.3, 9 	Say oQtda 	VAR nQtdBem Picture cPictQtd SIZE 75,10 Of oPanel

			@0.8,20 	Say STR0168 Of oPanel //"Valor Total Bens Gerenciais :"
			@0.8, 31 	Say oValorGer 	VAR nValorGer 	Picture cPictVlr Of oPanel

			oMark := MsSelect():New("SN3","N3_OK","!N3_BAIXA",aCampos,@lInverte,@cMarca,{35,oDlg1:nLeft,oDlg1:nBottom,oDlg1:nRight})
			oMark:bMark := {|| a251Display(cMarca,lInverte,oValor,oQtda,.T., oValorGer)}
			oMark:oBrowse:bAllMark := {|| SN3->(DBEVAL({ |a| AF251DBEVA(cMarca,.T.)})),SN3->(dbgoTop()),oQtda:Refresh(),oValor:Refresh(),oValorGer:Refresh()}
			oMark:oBrowse:Align := CONTROL_ALIGN_ALLCLIENT

			ACTIVATE MSDIALOG oDlg1 ON INIT EnchoiceBar(oDlg1,	{|| IIF( AF251BxOK(@aAF251Imp, @aAF251DOri), (nOpct:=1,oDlg1:End()), nOpct:=0)},;
			{|| nOpct:=2,oDlg1:End()}) CENTERED
		Else
			If AF251BxOK(@aAF251Imp, @aAF251DOri)
	  			nOpct := 1
			EndIf
		EndIf
	EndIf

	If lRet 
		If nOpct == 1

			_lFirst := .T.
			af251Rateio(cBaseDe,cBaseAte, nIndex, @aAF251Imp, @aAF251Desc, @aAF251DOri,aDetalhar,(lAgrupa .Or. __lAgrupComp),aParametro,cOpcao)

			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Restaura os indices      ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			RetIndex("SN3")
			Set Filter To
			fErase (cIndex+OrdBagExt())

			If Select("_SN3") > 0
				DbSelectArea("_SN3")
				DbCloseArea()
			EndIf
		ElseIf nOpct == 2 .Or. nOpct == 0
			A251Desmar(nIndex,cBaseDe,cBaseAte)
			While GetSx8Len() > nSaveSx8Len
				RollBackSx8()
			EndDo
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Restaura os indices      ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			RetIndex("SN3")
			Set Filter To
			fErase (cIndex+OrdBagExt())

			If Select("_SN3") > 0
				DbSelectArea("_SN3")
				DbCloseArea()
			EndIf
		EndIf
	EndIf
	Exit
EndDo


If __lMetric
	ATF251Metrics("01" /*cEvent*/,/*nStart*/, "001" /*cSubEvent*/, Alltrim(ProcName()) /*cSubRoutine*/, /*nQtdReg*/, nCallsFunc /*nCallsFunc*/)
Endif

aItensMark := {}

If __oQry != Nil
   __oQry:Destroy()
   __oQry := Nil
EndIf

If __oQryBemC != Nil
   __oQryBemC:Delete()
   __oQryBemC := Nil
Endif

Return
/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³ AF251BxOk ³ Autor ³					     ³ Data ³ 20.12.99 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Valida a tela de marcacao dos itens para processamento      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ AF251BxOk()                                                 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ ATFA251                                                     ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function AF251BxOK(aAF251Imp, aAF251DOri, lDetail)
Local lRet 		:= .T.
Local nCount 	:= 0
Local aArea		:= SN3->(GetArea())

Default lDetail := .F.

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Verifica se existem itens selecionados     ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
//OBS: Estou considerando o filtro da tabela SN3

SN3->(DbGoTop())
SN3->(DbEval({ |a| IIF(SN3->N3_OK == cMarca,nCount++,.F.)}))

If nCount == 0
	Help(" ", 1, "AFNOSELECT",, STR0118+CRLF+STR0119+CRLF+STR0120, 1, 0) //"Não existem itens selecionados para "###"processamento. Selecione pelo menos um "###"item antes de confirmar a operacao."
	lRet := .F.
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Validacao para demais tratamentos:         ³
//³ Impostos e Descricao Estendida			   ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If lRet
	// Já exibe as mensagens de erro caso pertinentes
	lRet := AF251RatInf(@aAF251Imp, @aAF251DOri, lDetail)
EndIf

SN3->(DbGoTop())
SN3->(RestArea(aArea))
Return lRet
/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³AF251Rateio³ Autor ³ 					     ³ Data ³ 20.12.99 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Rateio dos valores dos adtos a serem baixados               ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ AF251Rateio()                                               ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ ATFA251                                                     ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function AF251Rateio(cBaseDe, cBaseAte, nIndex, aAF251Imp, aAF251Desc, aAF251DOri,aDetalhar,lAgrupa,aParametro, cOpcao)
Local nOpcA          := 0
Local aButtons       := {}
Local nSaveSx8Len    := GetSx8Len()
Local lRatDic        := AFXVerRat()
Local lAbaComp       := ((MV_PAR04 == 1).or.(MV_PAR04 == 2 .and. MV_PAR06 == 2))
Local aTitlesFH      := {}
Local aPagesFH       := {}

Local aTitles        := IiF(lRatDic,{STR0069,STR0070,STR0071,STR0130},{STR0069,STR0070,STR0071}) //'Totais do Rateio'###'Detalhes dos Impostos'###'Descrição Extendida'
Local aPages         := IiF(lRatDic,{"HEADER","HEADER","HEADER","HEADER"},{"HEADER","HEADER","HEADER"})

Local bBlqLinOk      := {|| AF251LinOk(@aAF251Imp,@oFolder, @aAF251Desc, @oGetDadTot, @oGetDadImp)}
Local bBlqTudOk      := {|| AF251TudOk(@aAF251Imp, @aAF251Desc, @oFolder, @oGetDadTot, @oGetDadImp, @aAF251DOri)}
Local cTexto         := ""
Local cTextoOri      := ""
Local aHead251Imp    := {}
Local aFieldDOri     := {}
Local aSizes         := {}
Local aCols251Imp    := {}
Local aColsTotais    := {}

Local oOk			:= LoadBitMap(GetResources(), "ENABLE")
Local oNo			:= LoadBitMap(GetResources(), "DISABLE")

Local oFolder,oDlg, oBtn1, oBtn2, oBtn3, oBtn4, oBtn5, oGetDatImp, oDscOri, oLbx
Local oPanel2,oPanel3,oPanel4, oPanel5, oPanel6, oPanel7, oPanel8, oPanel9
Local oMemo,oMemoOri
Local j

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Variaveis para uso dos dados complementares e rateio de despesas³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Local nVOrigDb       := 0
Local nValTp02       := 0
Local nValTp05       := 0
Local nValTp07       := 0
Local nValTp11       := 0
Local aValMTp        := {}	//Array para tipo multiplos

Local oPanelFH2      := Nil
Local oPanel1FH2     := Nil
Local oFolderHead    := Nil
Local oPanelFH1      := Nil
Local oSay1          := Nil
Local oSay2          := Nil
Local oSay3          := Nil
Local oSay4          := Nil
Local oSay11         := Nil
Local oSay21         := Nil
Local oSay31         := Nil
Local oSay41         := Nil

Local cDescriSay     := Space(TamSx3("N1_DESCRIC")[1])
Local cCBaseSay      := Space(TamSx3("N1_CBASE")[1])
Local cItemSay       := Space(TamSx3("N1_ITEM")[1])


Local aColsDadoC	:= {}
Local aHeadDadoC	:= {}
Local aColsX		:= {}
Local aColsBkp		:= {}
Local aTiposC		:= {}					//Tipos permitidos para aba complementos
Local nHeader		:= 0
Local oArial12		:= tFont():New("Arial",,-12,,.T.)
Local oArial12It	:= tFont():New("Arial",,-12,,.F.,,,,.T.)

Local bSetOption	:= {|| IiF(oGetDadosC != Nil,;
IiF(oFolderHead:nOption == 2 .and. !Eval(bTudoOk),;
.F.,;
(;
AF251CLONE(oGetDadosC,aColsDadoC,oFolderHead:nOption,,aColsBkp),;
cCBaseSay 	:= GdFieldGet("N1_CBASE"	,oGet:oBrowse:nAt,.F.,aHeader,aCols),;
cItemSay 	:= GdFieldGet("N1_ITEM"		,oGet:oBrowse:nAt,.F.,aHeader,aCols),;
cDescriSay 	:= GdFieldGet("N1_DESCRIC"	,oGet:oBrowse:nAt,.F.,aHeader,aCols),;
nVOrigDb	:= GdFieldGet("N3_VORIG1"	,oGet:oBrowse:nAt,.F.,aHeader,aCols),;
oSay11:Refresh(),;
oSay21:Refresh(),;
oSay31:Refresh(),;
oSay41:Refresh(),;
oGetDadTot:ForceRefresh(),;
.T.,;
);
),;
 .F.)}

Local bChangeTF	     := {|| IiF(oGetDadosC != Nil,;
(AF251ATURAT(aRateio,oGetDdRat,oGetDadosC:oBrowse:nAt,oFolderHead:nOption,aColsRat,oGet:oBrowse:nAt)),;
Nil)}

Local bFieldok       := {|| AF251Field(oGetDaDosC,aTiposC)}
Local bLinhaok       := {|| (AF251VldDc(oGetDaDosC,.T.) .and. Eval(bVorig1))}
Local bDelok         := {|| AF251VldDc(oGetDaDosC)}
Local bTudoOk        := {|lRet| lRet := Eval(bLinhaok) .and. AF251TdokC(oGetDaDosC,aColsBkp,bVorig1)}
Local bVorig1        := {|nLin| AF251VORIG(oGetDaDosC,oGetDadTot,aColsDadoC,oGet:oBrowse:nAt,nVOrigDb,aValMTp,nValTp02,nValTp07,nValTp11,nLin,@oGetDadImp)}

Local bComplOk		:= {|lRet| lRet := Af251CpOk(oGetDaDosC,aColsDadoC,oGet:oBrowse:nAt,aTiposC)}

//______________ Variaveis para rateio
Local aRateio		:= {{},{}}
Local aRateioOrig 	:= {}
Local aHeaderRat	:= {}
Local aColsRat		:= {}
Local oPanelRat		:= Nil
Local oGetDdRat		:= Nil

Local lPEHabComp	
Local aRegHabCmp	:= {}
Local aAltAgrCp 	:= {}

//______________ Variaveis Detalhar
Local lDetail	:= (!Empty(aDetalhar))

Local aArea		:= SN3->(GetArea())   // Uso devido despocionamento de tabela causado pela instancia do objeto MsGetDados
Local nPosCalcPis   := 0

local nx			:= 0 //utilizada pra robo de testes
Default cOpcao		:= ""

Private oValRat
Private oValRatICMS
Private oValTotICMS
Private oValor
Private aGETS[0]
Private nValRat		 := 0
Private aCols  		 := {}
Private aHeader		 := {}
Private nUsado        := 0
Private nTotICMS      := 0
Private nValRatICMS   := 0
Private bRetGet       := {|nVal| AF251RetGet(oGetDaDosC,nVal)}

Private oGetDadosC	:= Nil
Private oGet			:= Nil
Private oGetDadTot
Private aHeadTotais	:= {}

//Desativa tecla F12 ao entrar na rotina
SET KEY VK_F12 TO

If lAbaComp
	If !AF251VAVP()
		Return
	EndIf
EndIf

If !AF251VLABA(lAbaComp)
	Return
EndIf

aAdd(aValMtp,{"10",{}})
aAdd(aValMtp,{"12",{}})
aAdd(aValMtp,{"14",{}})
aAdd(aValMtp,{"16",{}})
aAdd(aValMtp,{"17",{}})



Af251aHead()

aAdd(aHeadTotais,{STR0072		,'DESCRIC'		,"@!"							,30	,0,	"",	"û", 'C', '',		'',	'',	'',	".T."})	//'Tipo de Total'
aAdd(aHeadTotais,{STR0017		,'N3_TIPO'		,PesqPict("SN3","N3_TIPO")		,2 	,0,	"", "û", 'C', '', 		'', '', '', ".T."})	// Tipo
aAdd(aHeadTotais,{STR0158		,'N3_TPSALDO'	,PesqPict("SN3","N3_TPSALDO")	,1 	,0,	"", "û", 'C', '', 		'', '', '', ".T."})	// Tipo de Saldo
aAdd(aHeadTotais,{STR0073		,'N3_VORIG1'	,"@E 999,999,999,999,999.99"	,16	,2,	"",	"û", 'N', '',		'',	'',	'',	".T."})	//"Valor"
aAdd(aHeadTotais,{STR0074		,'N3_VORIG1'	,"@E 999,999,999,999,999.99"	,16	,2,	"",	"û", 'N', '',		'',	'',	'',	".T."})	//'Rateado'
aAdd(aHead251Imp,{STR0075		,'DESCRIC'		,"@!"							,30	,0,	"",	"û", 'C', '',		'',	'',	'',	".T."})	//'Imposto'

aAdd(aColsTotais,{STR0105,"01","1",nValorFis,nValRat,.F.})
// Carrega tabela de totais
Af251DCPRt(cBaseDe,cBaseAte,@aColsTotais,aValMTp,@nValTp02,@nValTp05,@nValTp07,@nValTp11,aTiposC,(lDetail .or. lAgrupa .Or. __lAgrupComp .or. lTransf))

//Verifico se existem tipos gerenciais para habilitar a aba complemento
If lAbaComp
	lAbaComp := AScan(aColsTotais,{|x| x[2] $ ATFXTpBem(2) }) > 0
EndIf

If ExistBlock("AF251HCOMP")

	aRegHabCmp := aClone(aColsTotais)
	
	lPEHabComp := ExecBlock( "AF251HCOMP", , , {aRegHabCmp})

	IIF(ValType(lPEHabComp) == "L", lAbaComp := lPEHabComp, Nil)
EndIf

aTitlesFH	:= If(lAbaComp,{STR0128,STR0129},{STR0128}) //Titulos para oFolder1
aPagesFH	:= If(lAbaComp,{"aHeader","aHeader"},{"aHeader"})

SX3->(DbSetOrder(2))

If lN1Ciap
	SX3->( dbSeek( 'N1_CALCPIS' ), .F.)
	AADD(aHead251Imp,{ STR0076,		'N1_CALCPIS',	SX3->X3_PICTURE,	SX3->X3_TAMANHO,	SX3->X3_DECIMAL,	"",	"û", SX3->X3_TIPO, '',	'',	'',	'',	".T."}) //'Credito'

	SX3->( dbSeek( 'N1_MESCPIS' ), .F.)
	AADD(aHead251Imp,{ X3Titulo(),	'N1_MESCPIS',	SX3->X3_PICTURE,	SX3->X3_TAMANHO,	SX3->X3_DECIMAL,	"",	"û", SX3->X3_TIPO, '',	'',	'',	'',	".T."})

	SX3->( dbSeek( 'N1_CIAP' ), .F.)
	AADD(aHead251Imp,{ X3Titulo(),	'N1_CIAP'	,	SX3->X3_PICTURE,	SX3->X3_TAMANHO,	SX3->X3_DECIMAL,	"",	"û", SX3->X3_TIPO, '',	'',	'',	'',	".T."})

	SX3->( dbSeek( 'N1_ICMSAPR' ), .F.)
	AADD(aHead251Imp,{ STR0078,		'N1_ICMSAPR',	SX3->X3_PICTURE,	SX3->X3_TAMANHO,	SX3->X3_DECIMAL,	"",	"û", SX3->X3_TIPO, '',	'',	'',	'',	".T."}) //'Total Original'
	AADD(aHead251Imp,{ STR0079,		'N1_ICMSAPR',	SX3->X3_PICTURE,	SX3->X3_TAMANHO,	SX3->X3_DECIMAL,	"",	"û", SX3->X3_TIPO, '',	'',	'',	'',	".T."}) //'Saldo a Ratear'
EndIf

aAdd( aSizes,		5 )
aAdd( aFieldDOri, " " )

SX3->( dbSeek( 'N1_CBASE' ), .F.)
aAdd( aSizes,		TamSx3('N1_CBASE')[1] )
aAdd( aFieldDOri, 	X3Titulo() )

SX3->( dbSeek( 'N1_ITEM' ), .F.)
aAdd( aSizes,		TamSx3('N1_ITEM')[1] )
aAdd( aFieldDOri, 	X3Titulo() )

SX3->( dbSeek( 'N3_TIPO' ), .F.)
aAdd( aSizes,		TamSx3('N3_TIPO')[1] )
aAdd( aFieldDOri, 	X3Titulo() )

SX3->( dbSeek( 'N3_SEQ' ), .F.)
aAdd( aSizes,		TamSx3('N3_SEQ')[1] )
aAdd( aFieldDOri, 	X3Titulo() )


SX3->(DbSetOrder(1))
nOpca := 0

SN1->(DbSeek(xFilial("SN1") + cBaseDe + SN1->N1_ITEM))	// Carregar variaveis para uso em gatilho
SN1->(RegToMemory("SN1", .F.))            // uso os parametros iniciais pois pode haver mais de um bem

nPosCalcPis   := Ascan(aHeader, {|x| Alltrim(x[2])  == "N1_CALCPIS"} )

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Cria aCOLS de acordo com Tamanho do Arquivo enviado  ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If lDetail
	Af251aCDet(aDetalhar,aParametro,aRateio,@nVOrigDb)
ElseIf lAgrupa .Or. __lAgrupComp
	Af251aCAgr(aParametro,aRateio,@nVOrigDb)
Else
	If !lAutomato
		aAdd(aCols,Array(nUsado+1))
		nUsado := 0
		For j:=1 To Len(aHeader)
			nUsado++

			If aHeader[j][8] == "C"

				If aHeader[j][2] == "N3_TIPO"
					aCols[1][nUsado] := "01"
				Else
					aCols[1][nUsado] := CriaVar(Trim(aHeader[j][2]),.T.)
				Endif

			ElseIf aHeader[j][8] == "D"
				// Inicializa o campo N3_DINDEPR conforme parametro MV_TIPDEPR
				If aHeader[j][2] == "N3_DINDEPR"
					aCols[1][nUsado] := RetDinDepr(dDataBase)
				Else
					aCols[1][nUsado] := dDataBase
				Endif

			ElseIf aHeader[j][2] <> 'N3_PERC'
				//Campo montado direto no fonte, sem análise do dicionário
				aCols[1][nUsado] := CriaVar(Trim(aHeader[j][2]),.T.)

			Else
				aCols[1][nUsado] := 0

			EndIf

			M->&(Alltrim(aHeader[j][2])) := aCols[1][nUsado]

		Next j

		aCols[1][nUsado+1] := .F.

		If nPosCalcPis > 0
			aCols[1][nPosCalcPis] := If( Empty(SN1->N1_CODCIAP), '2', SN1->N1_CALCPIS)
		EndIf

		If lN1Ciap .And. nPosGerCIAP > 0
			aCols[1][nPosGerCIAP] := If( Empty(SN1->N1_CODCIAP), '2', '1')
		EndIf

		aCols[1][Ascan(AHEADER, {|e| Alltrim(e[2]) == "N1_CONSAB" } ) ]:=Criavar("N1_CONSAB",.T.)
		aCols[1][Ascan(AHEADER, {|e| Alltrim(e[2]) == "N3_TPSALDO" } ) ]:=Criavar("N3_TPSALDO",.T.)
	Else
		//Tratativa para automacao da rotina, dos valores aglutinados automaticamente, passagem para array automatico
		aCols := aClone(aColsAut)

		If aCols[1][9] == 100			
			aCols[1][13] := 0 //Valor aglutinado dos bens com ICMS
			For nx:= 1 To Len(aAF251Imp) //percorrer array do ICMS ciap.
				aCols[1][13] += aAF251Imp[nx][5] //Valor aglutinado dos bens com ICMS
			Next nx
		EndIf
		
	Endif
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Mostra o corpo da rateio                           ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If AFXVerRat()
	SNV->(RegToMemory("SNV",.T.,.T.,.T.))
EndIf

If Empty(aCols)
	Help(" ", 1,"AF251TIPOC",, STR0135,1,0)
	Return() 
EndIf 	

While .T.
	If !lAutomato //Para robo de automação e/ou rotina automatica
		aSize := MSADVSIZE()
		DEFINE MSDIALOG oDlg TITLE STR0005 From aSize[7],0 To aSize[6],aSize[5] OF oMainWnd  PIXEL //	"Aquisicao por Transf"
		oDlg:lMaximized := .T.

		oFolderHead 		:= TFolder():New(0,0,aTitlesFH,aPagesFH,oDlg,,,, .T., .F.,200,600,)
		oFolderHead:Align 	:= CONTROL_ALIGN_ALLCLIENT
		oFolderHead:SetOption(1)
		oFolderHead:bSetOption 	:= bSetOption
		oFolderHead:bChange		:= bChangeTF
		oPanelFH1 := TPanel():New(0,0,'',oFolderHead:aDialogs[1],, .T., .T.,, ,60,120,.T.,.T. )
		oPanelFH1:Align := CONTROL_ALIGN_ALLCLIENT

		If __lAgrupComp
			For nX := 1 To Len(aHeader)
				If !aHeader[nX,2] $ 'N1_CBASE/N1_ITEM/N3_PERC'
					aAdd(aAltAgrCp, aHeader[nX,2])
				EndIf
			Next nX
		EndIf

		oGet := MSGetDados():New(0,0,30,30,3,bBlqLinOk,bBlqTudOk,"",Iif(__lAgrupComp,.F.,.T.),Iif(__lAgrupComp,aAltAgrCp,nil), ,.F.,Iif(__lAgrupComp,1,999), , , ,"AF251DelLi",oPanelFH1)
		oGet:oBrowse:Align := CONTROL_ALIGN_ALLCLIENT
	Endif
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³					Aba complementos                       ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If lAbaComp
		If !lAutomato //Para robo de automação e/ou rotina automatica
			oPanel1FH2 := TPanel():New(0,0,'',oFolderHead:aDialogs[2],, .T., .T.,, ,120,30,.T.,.T. )
			oPanel1FH2:Align := CONTROL_ALIGN_TOP

			oSay1	:= tSay():New(01,01		,{|| STR0131	}	,oPanel1FH2,								,oArial12	)	//"Codigo Base:"
			oSay11	:= tSay():New(01,06		,{|| cCBaseSay	}	,oPanel1FH2,PesqPict("SN3","N1_CBASE")		,oArial12It	)

			oSay2	:= tSay():New(01,13		,{|| STR0132	}	,oPanel1FH2,								,oArial12	)	//"Item:"
			oSay21	:= tSay():New(01,15		,{|| cItemSay	}	,oPanel1FH2,PesqPict("SN3","N1_ITEM")		,oArial12It	)
			oSay3	:= tSay():New(01,19.3	,{|| STR0133	}	,oPanel1FH2,								,oArial12	)	//"Descricao:"
			oSay31	:= tSay():New(01,24		,{|| cDescriSay	}	,oPanel1FH2,PesqPict("SN3","N1_DESCRIC")	,oArial12It	)
			oSay4	:= tSay():New(01,44		,{|| STR0134	}	,oPanel1FH2,								,oArial12	)	//"Valor Referencia:"
			oSay41	:= tSay():New(01,50.5	,{|| nVOrigDb	}	,oPanel1FH2,PesqPict("SN3","N3_VORIG1")		,oArial12It	)
		Endif

		Af251aHDDC(aHeadDadoC,aTiposC)

		
		aAdd(aColsX,Array(Len(aHeadDadoC)+1))
		aColsX[Len(aColsX),Len(aHeadDadoC)+1] := .F.
		
		If !lAutomato//Para robo de automação e/ou rotina automatica
			aAdd(aColsDadoC,{oGEt:oBrowse:nAt,aColsX})
		else
			// aAdd(AcolsDadoC,nRegPass,aCompRet)
			aAdd(AcolsDadoC,aCompRet)
		endIf


		For nHeader := 1 To Len(aHeadDadoC)
			aColsX[Len(aColsX)][nHeader] := CriaVar(aHeadDadoC[nHeader][2])
		Next nHeader

		aColsBkp	:= aClone(aColsX)

		If !lAutomato //Para robo de automação e/ou rotina automatica
			oPanelFH2 := TPanel():New(0,0,'',oFolderHead:aDialogs[2],, .T., .T.,, ,60,120,.T.,.T. )
			oPanelFH2:Align := CONTROL_ALIGN_ALLCLIENT

			oGetDadosC  :=  MsNewGetDados():New(0,0,150,200,(GD_INSERT+GD_UPDATE+GD_DELETE),"AllwaysTrue","AllwaysTrue",,,,,"AllwaysTrue",,"AllwaysTrue",oPanelFH2,aHeadDadoC,aColsX)
			oGetDadosC:oBrowse:Align := CONTROL_ALIGN_ALLCLIENT
			oGetDadosC:bFieldok	:= bFieldOk
			oGetDadosC:bLinhaOk	:= bLinhaok
			oGetDadosC:bDelOk	:= bDelok

			oGetDadosC:bChange	:= {|| AF251ATURAT(aRateio,oGetDdRat,oGetDadosC:oBrowse:nAt,oFolderHead:nOption,aColsRat,oGet:oBrowse:nAt)}
		Endif

		If lDetail
			SN3->(RestArea(aArea))
			If !lautomato
				Af251DetC(oGetDadosC,aDetalhar,aColsDadoC,aParametro,aRateio,aValMTp,@nValTp02,@nValTp05,@nValTp07,@nValTp11)
			Else
				//Passando aHeadDadoC somente quando for via robo, pois precisa percorrer a definicao dos campos
				Af251DetC(oGetDadosC,aDetalhar,aColsDadoC,aParametro,aRateio,aValMTp,@nValTp02,@nValTp05,@nValTp07,@nValTp11, aHeadDadoC)
			Endif
			If !Empty(aRateio[1]) .or. !Empty(aRateio[2])
				aRateioOrig := aClone(aRateio)
			EndIf
		ElseIf lAgrupa .Or. __lAgrupComp
			SN3->(RestArea(aArea))
			If !Empty(aRateio[1]) .or. !Empty(aRateio[2])
				aRateioOrig := aClone(aRateio)
			EndIf
			If !lAutomato 
				Af251AgrC(oGetDadosC,aColsDadoC,aParametro,aRateio,aValMTp,@nValTp02,@nValTp05,@nValTp07,@nValTp11)
			Else
				Af251AgrC(oGetDadosC,aColsDadoC,aParametro,aRateio,aValMTp,@nValTp02,@nValTp05,@nValTp07,@nValTp11,aHeadDadoC)
			endIf
		EndIf
	EndIf

	If !lAutomato //Para robo de automação e/ou rotina automatica
		oPanel := TPanel():New(0,0,'',oDlg,, .T., .T.,, ,60,120,.T.,.T. )
		oPanel:Align := CONTROL_ALIGN_BOTTOM

		oFolder := TFolder():New(0,0,aTitles,aPages,oPanel,,,, .T., .F.,30,30,)
		oFolder:Align := CONTROL_ALIGN_ALLCLIENT
		oFolder:SetOption(1)
	Endif

	If AFXVerRat()
		//-- JRJ
		//aAdd(aButtons,{"S4WB013N",{||  A251RATDesp(aRateio,oGet,oGetDadosC,oFolderHead:nOption), AF251ATURAT(aRateio,oGetDdRat,oGetDadosC:oBrowse:nAt,oFolderHead:nOption,aColsRat,oGet:oBrowse:nAt)},STR0130, STR0125})
		aAdd(aButtons,{"S4WB013N",{|| A251RATDesp(aRateio,oGet,IIf(lAbaComp,oGetDadosC,oGet),oFolderHead:nOption),AF251ATURAT(aRateio,oGetDdRat,IIf(lAbaComp,oGetDadosC:oBrowse:nAt,oGet:oBrowse:nAt),oFolderHead:nOption,aColsRat,oGet:oBrowse:nAt)},STR0130,STR0125})
		//-- JRJ

		If !lAutomato //Para robo de automação e/ou rotina automatica
			oPanelRat := TPanel():New(0,0,'',oFolder:aDialogs[4],, .T., .T.,, ,60,120,.T.,.T. )
			oPanelRat:Align 	:= CONTROL_ALIGN_ALLCLIENT
			oPanelRat:nHeight	:= 350
		Endif

		aHeaderRat := AF011HeadSNV()
		If Empty(aRateio[1])
			aAdd(aRateio[1],{"","","3",1,{},.F.})
			aColsRat:= AF011CargaGD(aHeaderRat,3,aRateio[1],1)
		Else
			aColsRat:= aClone(aRateio[1,1,5])
		EndIf

		If !lAutomato //Para robo de automação e/ou rotina automatica
			oGetDdRat					:= MsNewGetDados():New(0,0,0,0,0,"AllwaysTrue","AllwaysTrue","+NV_SEQUEN",,,999,/*fieldok*/,/*superdel*/,/*delok*/,oPanelRat,aHeaderRat,aColsRat)
			oGetDdRat:oBrowse:Align 	:= CONTROL_ALIGN_ALLCLIENT
		Endif
		aColsRat					:= AF011CargaGD(aHeaderRat,3,{{"","","3",1,{},.F.}},1) 	// Zera array para uso da funcao AF251ATURAT como array padrao
	EndIf

	If !lAutomato //Para robo de automação e/ou rotina automatica
		oPanel2 			:= TPanel():New(0,0,'',oFolder:aDialogs[3],, .T., .T.,, ,30,30,.T.,.T. )
		oPanel2:nWidth 	:= oFolder:oWnd:nClientWidth / 4
		oPanel2:Align 	:= CONTROL_ALIGN_LEFT

		oPanel3			:= TPanel():New(0,0,'',oFolder:aDialogs[3],, .T., .T.,, ,44,30,.T.,.T. )
		oPanel3:Align 	:= CONTROL_ALIGN_LEFT

		oPanel5 			:= TPanel():New(0,0,'',oFolder:aDialogs[3],, .T., .T.,, ,44,30,.T.,.T. )
		oPanel5:nWidth 	:= oFolder:oWnd:nClientWidth / 4
		oPanel5:Align 	:= CONTROL_ALIGN_LEFT

		oPanel8 			:= TPanel():New(0,0,'',oPanel5,, .T., .T.,, ,15,15,.T.,.T. )
		oPanel8:Align 	:= CONTROL_ALIGN_TOP

		oSayOri := TSAY():Create(oPanel8)
		oSayOri:cName := "oSayOri"
		oSayOri:cCaption := STR0115 //"Descricao Original"
		oSayOri:nLeft := 10
		oSayOri:nTop := 10
		oSayOri:nWidth := 251
		oSayOri:nHeight := 17
		oSayOri:lShowHint := .F.
		oSayOri:lReadOnly := .T.
		oSayOri:Align := 0
		oSayOri:lVisibleControl := .T.
		oSayOri:lWordWrap := .F.
		oSayOri:lTransparent := .F.

		oPanel9 := TPanel():New(0,0,'',oPanel5,, .T., .T.,, ,8,8,.T.,.T. )
		oPanel9:Align 	:= CONTROL_ALIGN_BOTTOM

		oMemoOri := TMultiGet():Create(oPanel5)
		oMemoOri:cName := "oMemoOri"
		oMemoOri:nHeight := 180
		oMemoOri:lShowHint := .F.
		oMemoOri:lReadOnly := .T.
		oMemoOri:cVariable := "cTextoOri"
		oMemoOri:bSetGet := {|u| If(PCount()>0,cTextoOri:=u,cTextoOri) }
		oMemoOri:lVisibleControl := .T.
		oMemoOri:lWordWrap := .T.
		oMemoOri:Align 	:= CONTROL_ALIGN_ALLCLIENT

		oPanel4 := TPanel():New(0,0,'',oFolder:aDialogs[3],, .T., .T.,, ,30,30,.T.,.T. )
		oPanel4:Align 	:= CONTROL_ALIGN_ALLCLIENT

		oLBx          := TWBrowse():New( 05,10,150,50,,aFieldDOri,aSizes,oPanel4,,,,,,,,,,,,.F.,,.T.,,.F.,,,)
		oLBx:SetArray(aAF251DOri)
		oLBx:bLine 	:= { || {If(Empty(aAF251DOri[oLbx:nAt,7]),oOk,oNo),aAF251DOri[oLBx:nAT][1],aAF251DOri[oLBx:nAT][2],aAF251DOri[oLBx:nAT][3],aAF251DOri[oLBx:nAT][4]} }
		oLBx:Align    := CONTROL_ALIGN_ALLCLIENT

		oPanel6 := TPanel():New(0,0,'',oPanel2,, .T., .T.,, ,15,15,.T.,.T. )
		oPanel6:Align 	:= CONTROL_ALIGN_TOP

		oSay1 := TSAY():Create(oPanel6)
		oSay1:cName := "oSay1"
		oSay1:cCaption := STR0080 //"Digite abaixo a descrição estendida"
		oSay1:nLeft := 10
		oSay1:nTop := 10
		oSay1:nWidth := 250
		oSay1:nHeight := 17
		oSay1:lShowHint := .F.
		oSay1:lReadOnly := .T.
		oSay1:Align := 0
		oSay1:lVisibleControl := .T.
		oSay1:lWordWrap := .F.
		oSay1:lTransparent := .F.

		oPanel7 := TPanel():New(0,0,'',oPanel2,, .T., .T.,, ,8,8,.T.,.T. )
		oPanel7:Align 	:= CONTROL_ALIGN_BOTTOM

		oMemo := TMultiGet():Create(oPanel2)
		oMemo:cName := "oMemo"
		oMemo:nHeight := 180
		oMemo:lShowHint := .F.
		oMemo:lReadOnly := Mv_Par05==1
		oMemo:cVariable := "cTexto"
		oMemo:bSetGet := {|u| If(PCount()>0,cTexto:=u,cTexto) }
		oMemo:lVisibleControl := .T.
		oMemo:lWordWrap := .T.
		oMemo:bChange 	:= {|| AF250DescG(@aAF251Desc, @cTexto) } //Serao utilizados para gravar o MEMO
		oMemo:bValid 	:= {|| AF250DescG(@aAF251Desc, @cTexto) } //Serao utilizados para gravar o MEMO
		oMemo:Align 	:= CONTROL_ALIGN_ALLCLIENT

		oGetDadTot  := MsNewGetDados():New(005,005,090,300,0,/*ValidLin*/,/*TudoOk*/,/*inicpos*/,/*aCpoHead*/,/*freeze*/,999,/*fieldok*/,/*superdel*/,/*delok*/,oFolder:aDialogs[1],aHeadTotais,aColsTotais)
		oGetDadImp  := MsNewGetDados():New(005,005,090,300,0,/*ValidLin*/,/*TudoOk*/,/*inicpos*/,/*aCpoHead*/,/*freeze*/,120,/*fieldok*/,/*superdel*/,/*delok*/,oFolder:aDialogs[2],aHead251Imp,aCols251Imp)

		oFolder:bSetOption := {|nDst| AF251CtImp(@aAF251Imp, @oFolder, @aAF251Desc, @oGetDadTot, @oGetDadImp), AF251CtDesc( @aAF251Desc, @oFolder, @oMemo, @oPanel3, @cTexto, @oPanel4) }

		oGetDadTot:oBrowse:Align := CONTROL_ALIGN_ALLCLIENT
		oGetDadImp:oBrowse:Align := CONTROL_ALIGN_ALLCLIENT

		oBtn1 := SBUTTON():Create(oPanel3)
		oBtn1:cName := "oBtn1"
		oBtn1:cCaption := STR0081 //Atribuir
		oBtn1:nLeft := 05
		oBtn1:nTop := 05
		oBtn1:nWidth := 80
		oBtn1:nHeight := 22
		oBtn1:lShowHint := .F.
		oBtn1:lReadOnly := .F.
		oBtn1:Align := 0
		oBtn1:lVisibleControl := .T.
		oBtn1:nType := 1
		oBtn1:bWhen := {|| AF251AtBt(1, @oLbx, @aAF251DOri, @oGet, @oMemo, aAF251Desc, @oBtn1 ) }
		oBtn1:bAction := {|| AF251ExBut(1, @oLbx, @aAF251DOri, @aAF251Desc, @oBtn1, @cTexto, @oMemo)  }

		oBtn2 := SBUTTON():Create(oPanel3)
		oBtn2:cName := "oBtn2"
		oBtn2:cCaption := STR0082 //Desatribuir
		oBtn2:nLeft := 05
		oBtn2:nTop := 30
		oBtn2:nWidth := 80
		oBtn2:nHeight := 22
		oBtn2:lShowHint := .F.
		oBtn2:lReadOnly := .F.
		oBtn2:Align := 0
		oBtn2:lVisibleControl := .T.
		oBtn2:nType := 1
		oBtn2:bWhen := {|| AF251AtBt(2, @oLbx, @aAF251DOri, @oGet, @oMemo, aAF251Desc, @oBtn2 ) }
		oBtn2:bAction := {|| AF251ExBut(2, @oLbx, @aAF251DOri, @aAF251Desc, @oBtn2, @cTexto, @oMemo)  }

		oBtn3 := SBUTTON():Create(oPanel3)
		oBtn3:cName := "oBtn3"
		oBtn3:cCaption := STR0083 //"Copiar"
		oBtn3:nLeft := 05
		oBtn3:nTop := 55
		oBtn3:nWidth := 80
		oBtn3:nHeight := 22
		oBtn3:lShowHint := .F.
		oBtn3:lReadOnly := .F.
		oBtn3:Align := 0
		oBtn3:lVisibleControl := .T.
		oBtn3:nType := 1
		oBtn3:bWhen := {|| AF251AtBt(3, @oLbx, @aAF251DOri, @oGet, @oMemo, aAF251Desc, @oBtn3 ) }
		oBtn3:bAction := {|| AF251ExBut(3, @oLbx, @aAF251DOri, @aAF251Desc, @oBtn3, @cTexto, @oMemo)  }

		oBtn4 := SBUTTON():Create(oPanel3)
		oBtn4:cName := "oBtn4"
		oBtn4:cCaption := STR0084 //"Editar"
		oBtn4:nLeft := 05
		oBtn4:nTop := 80
		oBtn4:nWidth := 80
		oBtn4:nHeight := 22
		oBtn4:lShowHint := .F.
		oBtn4:lReadOnly := .F.
		oBtn4:Align := 0
		oBtn4:lVisibleControl := .T.
		oBtn4:nType := 1
		oBtn4:bWhen := {|| AF251AtBt(4, @oLbx, @aAF251DOri, @oGet, @oMemo, aAF251Desc, @oBtn4 ) }
		oBtn4:bAction := {|| AF251ExBut(4, @oLbx, @aAF251DOri, @aAF251Desc, @oBtn4, @cTexto, @oMemo)  }

		oBtn5 := SBUTTON():Create(oPanel3)
		oBtn5:cName := "oBtn5"
		oBtn5:cCaption := STR0085 //"Limpar"
		oBtn5:nLeft := 05
		oBtn5:nTop := 105
		oBtn5:nWidth := 80
		oBtn5:nHeight := 22
		oBtn5:lShowHint := .F.
		oBtn5:lReadOnly := .F.
		oBtn5:Align := 0
		oBtn5:lVisibleControl := .T.
		oBtn5:nType := 1
		oBtn5:bWhen := {|| AF251AtBt(5, @oLbx, @aAF251DOri, @oGet, @oMemo, aAF251Desc, @oBtn5 ) }
		oBtn5:bAction := {|| AF251ExBut(5, @oLbx, @aAF251DOri, @aAF251Desc, @oBtn5, @cTexto, @oMemo)  }

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Folder Total do Rateio                                       ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		For j := 1 To Len( oFolder:aDialogs )
			oFolder:aDialogs[j]:oFont := oDlg:oFont
		Next

		oGet:oBrowse:bChange:= {|| AF251CtImp(@aAF251Imp, @oFolder, @aAF251Desc, @oGetDadTot, @oGetDadImp), AF251CtDesc( @aAF251Desc, @oFolder, @oMemo, @oPanel3, @cTexto, @oPanel4), AF251AtBtR({@oBtn1,@oBtn2,@oBtn3,@oBtn4,@oBtn5}, @oMemoOri, @cTextoOri, aAF251DOri, @oLBx),AF251ATURAT(aRateio,oGetDdRat,oGet:oBrowse:nAt,oFolderHead:nOption,aColsRat),oGet:oBrowse:SetFocus() }
		oLBx:bChange := {|| AF251AtBtR({@oBtn1,@oBtn2,@oBtn3,@oBtn4,@oBtn5}, @oMemoOri, @cTextoOri, aAF251DOri, @oLBx), oLBx:SetFocus() } //, @oLbx, @aAF251DOri, @oGet, @oMemo, aAF251Desc ) }
		AF251CtImp(@aAF251Imp, @oFolder, @aAF251Desc, @oGetDadTot, @oGetDadImp, .T. /*lAtuaColsT*/)
		
		//atribui a aColsTotais o acols do objeto oGetDadTot
		aColsTotais := oGetDadTot:aCols
		oGetDadTot:oBrowse:Refresh()
		oGetDadTot:ForceRefresh()
	Endif
	nTotICMS := 0
	aEval( aAF251Imp, {|ICMS| nTotICMS += If( ICMS[1]=='ICMS', ICMS[5], 0) } )

	If !lAutomato

		ACTIVATE MSDIALOG oDlg ON INIT (EnchoiceBar(oDlg, {|| nOpca:= 1,;
		Iif((oGetDadosC != Nil),;
		IiF((Eval(bTudoOk) .and. Eval(bComplOk)),;
		AF251CLONE(oGetDadosC,aColsDadoC,oFolderHead:nOption,.T.,,,oGet:oBrowse:SetFocus()),;
		nOpca := 0),;
		Nil),;
		IiF(!(Af251TudOk(@aAF251Imp, @aAF251Desc, @oFolder, @oGetDadTot, @oGetDadImp, @aAF251DOri).and. nOpca == 1),nOpca := 0,Nil),;
		IiF(nOpca == 1,oDlg:End(),.F.) },;
		{|| nOpca:=2,oDlg:End()},,aButtons),oGetDadTot:oBrowse:Refresh())

	Else
		nOpcA := 1
	EndIf

	If nOpca == 0 .or. nOpca == 2
		A251Desmar(nIndex,cBaseDe,cBaseAte)
		While GetSx8Len() > nSaveSx8Len
			RollBackSx8()
		EndDo
	Elseif nOpca == 1
		If lAutomato .and. lCT34 //COM DADOS ELE GERA OS CAMPOS OBRIGATORIOS AUTOMATICAMENTE, VERIFICAR FUNCAO COMPARATIVA OU SO DESVIAR COM MV_PAR DE DADOS = TRUE
			aColsDadoC := aClone(aCompRet)
		Endif

		AF251GRAVA(cBaseDe,cBaseAte,nSaveSx8Len, nIndex,nOpca, aAF251Imp, aAF251Desc,aHeadDadoC,aColsDadoC,aRateio,aRateioOrig,cOpcao)
	Endif
	Exit
EndDo

//Ativa tecla F12 ao sair da rotina
SetKey( VK_F12, { || Pergunte(cPerg,.T.) })

If __lMetric
	nCallsFunc ++
Endif

Return
/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³ AF251Bem   ³ Autor ³ 				     ³ Data ³ 20.12.99 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Verifica se o novo bem ja' existe                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ ATFA251                                                      ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function Af251Bem( cBase , cItemAtivo )
Local lExist := .F.
Local nOrdem := 0 , nPosicao := 0

dbSelectarea( "SN1" )
nOrdem := IndexOrd()
nPosicao := Recno()

dbSetOrder( 1 )
lExist := Iif( dbSeek( xFilial("SN1") + cBase + cItemAtivo ) ,.T. , .F. )

If lExist
	HELP(" ",1,"AF40JAEXIS")
Endif

dbSelectArea( "SN1" )
dbSetOrder( nOrdem )
dbGoto( nPosicao )

Return IIf( lExist , .F. , .T. )

/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³FA251Check³ Autor ³ 				      ³ Data ³ 10.01.00 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Retorna expressao para Indice Condicional                  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ FA251Check()                                               ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ FINA251                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function FA251Check(cBaseDe,cBaseAte,cItem,cSaldoGer, lAgrupComp, aComponent,cTrbTmp)
Local cFiltro := ""
Local nX  := 0
Local lComponent   := .F.

Default cItem := ""
Default cSaldoGer := Nil
Default lAgrupComp := .F.
Default aComponent:= {}
Default cTrbTmp    := ''

If cSaldoGer == Nil
	Pergunte("AFA251",.F.)
	cSaldoGer := MV_PAR07
EndIf

cFiltro := 'N3_FILIAL == "' + xFilial("SN3") + '" .AND. '

If cBaseDe == cBaseAte
	cFiltro += 'N3_CBASE == "' + cBaseDe        + '" .AND. '
Else
	cFiltro += 'N3_CBASE >= "' + cBaseDe        + '" .AND. '
	cFiltro += 'N3_CBASE <= "' + cBaseAte       + '" .AND. '
EndIf
cFiltro += 'N3_BAIXA < "1"'
If !Empty(cItem)
	cFiltro += '.And. N3_ITEM == "'+cItem+'"'
EndIf
If mv_par04 == 2
	cFiltro += ' .And. (N3_TIPO == "03" .OR. ( N3_TIPO $ "13/15" .And. N3_TPSALDO == "'+cSaldoGer+'" ) ) '
Else
	cFiltro += '.And. ( N3_TIPO $ "01/03" .OR. ( N3_TIPO $ "'+ATFXTpBem(2)+"/13/15"+'" .And. N3_TPSALDO == "'+cSaldoGer+'") ) '  //10/12/13/15
Endif

If ExistBlock("AF251FILTR")
	cFilAux := ExecBlock( "AF251FILTR", .F., .F., {cFiltro} )
	If Valtype( cFilAux ) == "C"
		cFiltro := cFilAux
	EndIf
Endif

cFiltro += ".AND. AF251FTOV(SN3->N3_CBASE,SN3->N3_ITEM)"

//tratamento para bens em construção 
lComponent := len(aComponent) > 0

If lAgrupComp .And. lComponent 
	//Para até 100 componentes vinculados ao bem em construção
	If  len(aComponent) <= 100 
		cFiltro += " .AND. ( N3_CBASE + N3_ITEM $ '"
		For nX := 1 to len(aComponent)
			If nx > 1
				cFiltro += "/"
			Endif
			cFiltro += aComponent[nX][1] + aComponent[nX][2] 
		Next
		cFiltro += "')"
	Else 
		cTrbTmp := AF251VERIT(aComponent)
		cFiltro += " .AND. ((cTrbTmp)->(DBSEEK(SN3->N3_CBASE+SN3->N3_ITEM)))" 	
EndIf
EndIf

Return cFiltro
/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o   ³a251Display ³ Autor ³ 				 	     ³ Data ³ 05.01.00 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o³Atualiza tela de sele‡ao de registros da baixa autom tica     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe  ³a251Display ( cMarca,lInverte,nValorFis,nQtdBem,oValor,oQtda )   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso     ³ ATFA251                                                      ³±±
±±ÀÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function a251Display(cMarca,lInverte,oValor,oQtda,lMarc,oValorGer)
Local aArea 	:= GetArea()
Local aAreaSN3	:= SN3->(GetArea())
Local cBase		:= SN3->N3_CBASE
Local cItem		:= SN3->N3_ITEM
Local lAtu      := .T.
Local nJ 		:=0
Local lDesMarkCIAP
Local nPosCIAP
Local nPsCIAP2

Local cTypes10		:= IIF(lIsRussia,"/" + AtfNValMod({1}, "/"),"") // CAZARINI - 24/03/2017 - If is Russia, add new valuations models - main models
Local cTypesNM		:= IIF(lIsRussia,"/" + AtfNValMod({3,4}, "/"),"") // CAZARINI - 24/03/2017 - If is Russia, add new valuations models - 17 and 16 models
Default lMarc 		:= .F.

SN3->(dbSetOrder(1)) //N3_FILIAL+N3_CBASE+N3_ITEM+N3_TIPO+N3_BAIXA+N3_SEQ

If IsMark("N3_OK",cMarca,lInverte)
	If A251VldAquis(SN3->N3_CBASE,SN3->N3_ITEM,lMarc)
		SN3->(MsSeek(xFilial("SN3")+ cBase + cItem))
		While  SN3->( N3_FILIAL+N3_CBASE+N3_ITEM ) == xFilial("SN3")+ cBase + cItem
			RecLock("SN3",.f.)
			SN3->N3_OK := cMarca
			MsUnlock()
			MarcouItem()

			If SN3->N3_TIPO $ '01/03'
				nValorFis  += (SN3->N3_VORIG1 + SN3->N3_AMPLIA1 + SN3->N3_VRCACM1)
				AtfMultMoe(,,{|x| aValorOri[x] += (SN3->&("N3_VORIG"+Alltrim(Str(x)))+SN3->&(If(x>9,"N3_AMPLI","N3_AMPLIA")+Alltrim(Str(x))) + If(x=1,SN3->N3_VRCACM1,0)) })
				AtfMultMoe(,,{|x| aValDepAc[x]	+= SN3->&(If(x>9,"N3_VRDAC","N3_VRDACM")+Alltrim(Str(x))) })
			Else
				nValorGer  += (SN3->N3_VORIG1 + SN3->N3_AMPLIA1 + SN3->N3_VRCACM1)
			EndIf

			If SN3->N3_TIPO $ ('10/13/15/16/17' + cTypes10 + cTypesNM)
				AtfMultMoe(,,{|x| aVlrOri[x] += (SN3->&("N3_VORIG"+Alltrim(Str(x)))+SN3->&(If(x>9,"N3_AMPLI","N3_AMPLIA")+Alltrim(Str(x))) + If(x=1,SN3->N3_VRCACM1,0)) })
				AtfMultMoe(,,{|x| aVlrDepAc[x]	+= SN3->&(If(x>9,"N3_VRDAC","N3_VRDACM")+Alltrim(Str(x))) })
			EndIf

			nQtdBem++

			SN3->(dbSkip())
		EndDo

	Else
		RecLock("SN3",.f.)
		SN3->N3_OK := Space(2)
		MsUnlock()
		DesmrkItem()
	Endif
Else

	SN3->(MsSeek(xFilial("SN3")+ cBase + cItem))
	While  SN3->( N3_FILIAL+N3_CBASE+N3_ITEM ) == xFilial("SN3")+ cBase + cItem
		RecLock("SN3",.f.)
		SN3->N3_OK := Space(2)
		MsUnlock()
		DesmrkItem()
		If SN3->N3_TIPO $ '01/03'
			nValorFis  -= (SN3->N3_VORIG1 + SN3->N3_AMPLIA1 + SN3->N3_VRCACM1)
			AtfMultMoe(,,{|x| aValorOri[x] -= (SN3->&("N3_VORIG"+Alltrim(Str(x)))+SN3->&(If(x>9,"N3_AMPLI","N3_AMPLIA")+Alltrim(Str(x))) + If(x=1,SN3->N3_VRCACM1,0)) })
			AtfMultMoe(,,{|x| aValDepAc[x]	-= SN3->&(If(x>9,"N3_VRDAC","N3_VRDACM")+Alltrim(Str(x))) })
		Else
			nValorGer  -= (SN3->N3_VORIG1 + SN3->N3_AMPLIA1 + SN3->N3_VRCACM1)
		EndIf

		If SN3->N3_TIPO $ ('10/13/15/16/17' + cTypes10 + cTypesNM)
			AtfMultMoe(,,{|x| aVlrOri[x] -= (SN3->&("N3_VORIG"+Alltrim(Str(x)))+SN3->&(If(x>9,"N3_AMPLI","N3_AMPLIA")+Alltrim(Str(x))) + If(x=1,SN3->N3_VRCACM1,0)) })
			AtfMultMoe(,,{|x| aVlrDepAc[x]	-= SN3->&(If(x>9,"N3_VRDAC","N3_VRDACM")+Alltrim(Str(x))) })
		EndIf

		nQtdBem--
		nQtdBem:= Iif(nQtdBem < 0, 0, nQtdBem)
		SN3->(dbSkip())
	EndDo

EndIf

SN3->(MsSeek(xFilial("SN3")+ cBase + cItem))

For nJ:=1 to Len(aAtvClas)
	If SN3->N3_CBASE == aAtvClas[nJ][1]
		//Help(" ",1,"AF010CLAS",,STR0177,1,0)
		lAtu := .F.
		If !Empty(SN3->N3_OK)
			nValorFis -= (SN3->N3_VORIG1+SN3->N3_AMPLIA1 + SN3->N3_VRCACM1)
			nQtdBem--
		EndIf
		RecLock("SN3",.f.)
		SN3->N3_OK := Space(2)
		MsUnlock()
		DesmrkItem()
	EndIf
Next nJ

//Variavel para verificar se desmarca registro
lDesMarkCIAP := .F.

//procura N3_CBASE no array ACIAP elemento 1
nPosCIAP := Ascan(aCiap, {|x| Alltrim(x[1])  == Alltrim(SN3->N3_CBASE)})

If nPosCIAP > 0  //somente entrar se encontrou N3_CBASE no elemento 1 do array ACIAP

	//procura CODIGO DO CIAP no array ACIAP elemento 2
	nPsCIAP2 := Ascan(aCiap, {|x| Alltrim(x[2])  == LEFT(aCiap[nPosCIAP][2], LEN(SN1->N1_CODCIAP)) + ".T."})

	lDesMarcCIAP := ( nPsCIAP2 > 0 )  //se encontrou no array aCIAP
	//se encontrou e N3_CBASE eh diferente
	lDesMarcCIAP := lDesMarcCIAP .And. ( aCiap[nPsCIAP2][1] != SN3->N3_CBASE )

	If lDesMarkCIAP   //vai desmarcar porque encontrou no array ACIAP o codigo base
	                  //e CODIGO CIAP elemento 2 esta marcado em outro codigo base
		Help(" ",1,"AF010CIAP",,STR0176,1,0)
		lAtu := .F.

		nValorFis -= (SN3->N3_VORIG1+SN3->N3_AMPLIA1 + SN3->N3_VRCACM1)
		nQtdBem --
		RecLock("SN3",.F.)
		SN3->N3_OK := Space(2)
		MsUnlock()

		DesmrkItem()

	//atualmente esta desmarcado e encontrou no array ACIAP elemento 1 o codigo base entao verifica se codigo do CIAP esta marcado
	ElseIf SN3->N3_OK == "  " .And. RIGHT(aCiap[nPosCIAP][2],3) == ".T."
		aCiap[nPosCIAP][2]:= StrTran (aCiap[nPosCIAP][2],".T." ,".F.") //ATRIBUI FALSO PARA ELEMENTO 2 CODIGO CIAP

	//atualmente esta marcado e encontrou no array ACIAP elemento 1 o codigo base entao verifica se codigo do CIAP esta desmarcado
	ElseIf SN3->N3_OK != "  " .And.  RIGHT(aCiap[nPosCIAP][2],3) == ".F."
		aCiap[nPosCIAP][2]:= StrTran (aCiap[nPosCIAP][2],".F." ,".T.") //ATRIBUI FALSO PARA ELEMENTO 2 CODIGO CIAP

	EndIf

EndIf

If lAtu .And. !lAutomato
	oValor:Refresh()
	oValorGer:Refresh()
	oQtda:Refresh()
EndIf

RestArea(aAreaSN3)
RestArea(aArea)

If Valtype(oMark) == 'O'
	oMark:oBrowse:Refresh(.t.)
Endif

Return

/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³A251Desmar  ³ Autor ³ 			        ³ Data ³ 20.12.99 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Desmarca os bens se NAO confirmar a baixa                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³A251Desmar()                                                  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ ATFA251                                                      ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function A251Desmar(nIndex,cBasede,cBaseAte)
Local aArea := { Alias(), IndexOrd(), Recno()}

Default cBasede := " "
Default cBaseAte := " "

dbSelectArea("SN3")
SN3->(DBSetFilter({||!Empty(N3_OK)}, "!Empty(N3_OK)"))
SN3->(dbgotop())

While SN3->(!EOF())
	If SN3->N3_CBASE >= cBasede .And. SN3->N3_CBASE <= cBaseAte
		RecLock("SN3",.f.) 
		SN3->N3_OK := "  "
		MsUnlock()
		DesmrkItem()
		SN3->(dbSkip())
	Else
		SN3->(dbSkip())
	End
	Loop
EndDo

nQtdBem    := 0
nValorFis  := 0

DBClearFilter()
dbSelectArea(aArea[1])
dbSetOrder(aArea[2])
dbGoto(aArea[3])
aSize(aArea,0)
aArea := nil 
Return

/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³AF251DBEVA³ Autor ³ Wagner Xavier         ³ Data ³ 20/05/92 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Trata o dbeval para marcar e desmarcar item                ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ AF251DBEVA(ExpN1,ExpD1,ExpD2)                              ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ ExpN1 = Limite de valor para marcar titulos                ³±±
±±³          ³ ExpD1 = Data de vencimento inicial a considerar            ³±±
±±³          ³ ExpD2 = Data de vencimento final a considerar              ³±±
±±³          ³ ExpN1 = Verifica se titulo entrara marcado ou nao          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ ATFA251                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³AF251DBEVA³ Autor ³ Wagner Xavier         ³ Data ³ 20/05/92 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Trata o dbeval para marcar e desmarcar item                ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ AF251DBEVA(ExpN1,ExpD1,ExpD2)                              ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ ATFA251                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function AF251DbEva(cMarca,lTela)
Local aArea 		:= GetArea()
Local aAreaSN1 	:= SN1->(GetArea())
Local lProjeto	:= .F.

Local cTypes10		:= IIF(lIsRussia,"/" + AtfNValMod({1}, "/"),"") // CAZARINI - 24/03/2017 - If is Russia, add new valuations models - main models
Local cTypesNM		:= IIF(lIsRussia,"/" + AtfNValMod({3,4}, "/"),"") // CAZARINI - 24/03/2017 - If is Russia, add new valuations models - 17 and 16 models
SN1->(MsSeek(xFilial("SN1") + SN3->(N3_CBASE + N3_ITEM)))

If !(SN1->N1_STATUS $ "2/3")
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Realiza a inversao³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	RecLock("SN3",.F.)
	SN3->N3_OK := IIF(Empty(SN3->N3_OK),cMarca,Space(2) )
	MsUnlock()
	If SN3->N3_OK == Space(2)
		DesmrkItem()
	Else
		MarcouItem()
	EndIf

Endif

/*
 * Se os ativo for do tipo Orçamento de Despesa de Provisão ou Provisão de Despesa para não permitir a transferência, deixar desmarcado
 */
If AllTrim(SN1->N1_PATRIM) $ "O|V"
	SN3->(RecLock("SN3",.F.))
	SN3->N3_OK := Space(2)
	SN3->(MsUnlock())
	DesmrkItem()
EndIf

// Se pendente de classificação os itens ficam desmarcados 
If AllTrim(SN1->N1_STATUS)== "0"
	SN3->(RecLock("SN3",.F.))
	SN3->N3_OK := Space(2)
	SN3->(MsUnlock())
	DesmrkItem()
	lMarcClas := .F.
	AADD(aAtvClas,{SN1->N1_CBASE})
	Return
EndIf

//Validação do projeto do Ativo
If FindFunction("ATFXVerPrj") .And. !IsInCallStack("ATFA430") .And. ATFXVerPrj(SN3->N3_CBASE,SN3->N3_ITEM)
	RecLock("SN3",.F.)
	SN3->N3_OK :=Space(2)
	MsUnlock()
	DesmrkItem()
	lProjeto := .T.
EndIf

If !Empty(SN1->N1_CODCIAP)

	If SN3->N3_OK == cMarca
		nPosCIAP := Ascan(aCiap, {|x| Alltrim(x[2])  == SN1->N1_CODCIAP+".T."})

		If nPosCIAP > 0
			If aCiap[nPosCIAP][1] != SN1->N1_CBASE  //somente desmarca se ja usado este codigo ciap em outro N1_CBASE
				RecLock("SN3",.F.)
				SN3->N3_OK :=Space(2)
				MsUnlock()
				DesmrkItem()
				AADD(aCiap,{SN1->N1_CBASE, SN1->N1_CODCIAP+".F."})
			EndIf
		Else
			AADD(aCiap,{SN1->N1_CBASE, SN1->N1_CODCIAP+".T."})
		EndIf

	EndIf

Endif

If SN3->N3_OK == cMarca
	If SN3->N3_TIPO $ '01/03'
		nValorFis += (SN3->N3_VORIG1+SN3->N3_AMPLIA1 + SN3->N3_VRCACM1)
		AtfMultMoe(,,{|x| aValorOri[x] += (SN3->&("N3_VORIG"+Alltrim(Str(x)))+SN3->&(If(x>9,"N3_AMPLI","N3_AMPLIA")+Alltrim(Str(x))) + If(x=1,SN3->N3_VRCACM1,0)) })
		AtfMultMoe(,,{|x| aValDepAc[x]	+= SN3->&(If(x>9,"N3_VRDAC","N3_VRDACM")+Alltrim(Str(x))) })
	Else
		nValorGer += (SN3->N3_VORIG1+SN3->N3_AMPLIA1 + SN3->N3_VRCACM1)
	EndIf

	If SN3->N3_TIPO $ ('10/13/15/16/17' + cTypes10 + cTypesNM)
		AtfMultMoe(,,{|x| aVlrOri[x] += (SN3->&("N3_VORIG"+Alltrim(Str(x)))+SN3->&(If(x>9,"N3_AMPLI","N3_AMPLIA")+Alltrim(Str(x))) + If(x=1,SN3->N3_VRCACM1,0)) })
		AtfMultMoe(,,{|x| aVlrDepAc[x]	+= SN3->&(If(x>9,"N3_VRDAC","N3_VRDACM")+Alltrim(Str(x))) })
	Endif

	nQtdBem++
ElseIf Empty(SN3->N3_OK) .And. lTela .And. !(SN1->N1_STATUS $ "2/3") .and. !lProjeto

	If SN3->N3_TIPO $ '01/03'
		nValorFis     -= (SN3->N3_VORIG1+SN3->N3_AMPLIA1 + SN3->N3_VRCACM1)
		AtfMultMoe(,,{|x| aValorOri[x] -= (SN3->&("N3_VORIG"+Alltrim(Str(x)))+SN3->&(If(x>9,"N3_AMPLI","N3_AMPLIA")+Alltrim(Str(x))) + IIF(x=1,SN3->N3_VRCACM1,0)) })
		AtfMultMoe(,,{|x| aValDepAc[x]	-= SN3->&(If(x>9,"N3_VRDAC","N3_VRDACM")+Alltrim(Str(x))) })
	Else
		nValorGer     -= (SN3->N3_VORIG1+SN3->N3_AMPLIA1 + SN3->N3_VRCACM1)
	EndIf

	If SN3->N3_TIPO $ ('10/13/15/16/17' + cTypes10 + cTypesNM)
		AtfMultMoe(,,{|x| aVlrOri[x] -= (SN3->&("N3_VORIG"+Alltrim(Str(x)))+SN3->&(If(x>9,"N3_AMPLI","N3_AMPLIA")+Alltrim(Str(x))) + IIF(x=1,SN3->N3_VRCACM1,0)) })
		AtfMultMoe(,,{|x| aVlrDepAc[x]	-= SN3->&(If(x>9,"N3_VRDAC","N3_VRDACM")+Alltrim(Str(x))) })
	Endif

	nQtdBem --
Endif

nValorFis := Round(nValorFis,X3Decimal("N3_VORIG1"))

RestArea(aAreaSN1)
RestArea(aArea)
Return Nil
/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o	 ³Af251LinOk³ Autor ³ 				     ³ Data ³ 12.01.00 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Valida a linha da getdados                                  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³             												  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ atfa251													  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function Af251LinOK(aAF251Imp,oFolder,aAF251Desc, oGetDadTot, oGetDadImp)
Local nPosBase := Ascan(aHeader, {|x| Alltrim(x[2]) == "N1_CBASE"})
Local nPosItem := Ascan(aHeader, {|x| Alltrim(Alltrim(x[2]) ) == "N1_ITEM"})
Local nPosDescr:= Ascan(aHeader, {|x| Alltrim(x[2])  == "N1_DESCRIC"})
Local nPosChapa:= Ascan(aHeader, {|x| Alltrim(x[2])  == "N1_CHAPA"})
Local nPosHisto:= Ascan(aHeader, {|x| Alltrim(x[2])  == "N3_HISTOR"})
Local nPosCCont:= Ascan(aHeader, {|x| Alltrim(x[2])  == "N3_CCONTAB"})
Local nPosOrig1:= Ascan(aHeader, {|x| Alltrim(x[2])  == "N3_VORIG1"})

Local nPosValICMS	:= Ascan(aHeader, {|x| Alltrim(x[2])  == "N1_ICMSAPR"} )
Local nPosCIAP		:= Ascan(aHeader, {|x| Alltrim(x[2])  == "N1_CIAP"} )
Local nPosCalcP		:= Ascan(aHeader, {|x| Alltrim(x[2])  == "N1_CALCPIS"} )
Local nPosMesCP		:= Ascan(aHeader, {|x| Alltrim(x[2])  == "N1_MESCPIS"} )
Local nPosCdForn	:= Ascan(aHeader, {|x| Alltrim(x[2])  == "N1_FORNEC"} )
Local nPosLjForn	:= Ascan(aHeader, {|x| Alltrim(x[2])  == "N1_LOJA"} )

Local cMesCPis		:= SuperGetMv('MV_ATFMAPR',.T.,'0/12/24/48')
Local nA			:= 0
Local nSomaICMS		:= 0
Local nPosImpCiap 	:= IIF(Type("oGetDadImp") == "U",0,Ascan(oGetDadImp:aHeader, {|x| Alltrim(x[2])  == "N1_CIAP"} ))
Local nJ			:= 0
Local aRetAF251LOK 	:= {} /* retorno do PE AF251LOK */

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Nao valida linha deletada                          ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If aCols[n][nUsado+1]
	Return .T.
Endif

IF nPosCalcP >0 .AND. nPosMesCP > 0 .AND. nPosCIAP > 0

	If aCols[n][nPosCalcP]$ '1/2' .and. aCols[n][nPosMesCP] <> 0
		Help(" ",1,"AF251MESPIS",,STR0086+CRLF+STR0087+CRLF+STR0088+AllTrim(Str(n)),1,0) //"O campo [Meses Cl.Pis] deve estar zerado para a condição de calculo de PIS (SIM ou NÃO) , ajuste a linha "
		Return .F.
	ElseIf aCols[n][nPosCalcP]=='3' .and. aCols[n][nPosMesCP]==0
		Help(" ",1,"AF251MESPIS",,STR0089+CRLF+STR0090+AllTrim(Str(n)),1,0) //"é obrigatorio o preenchimento do campo [Meses Cl.Pis], ajuste a linha "
		Return .F.
	ElseIf aCols[n][nPosCalcP]=='3' .and. !(AllTrim(Str(Int(aCols[n][nPosMesCP]))) $ cMesCPis)
		Help(" ",1,"AF251MESPIS",,STR0091+CRLF+STR0092+CRLF+STR0093+AllTrim(Str(n)),1,0) //'é obrigatorio o preenchimento do campo [Meses Cl.Pis] com um valor válido, verifique o parâmetro MV_ATFMAPR, ajuste a linha '
		Return .F.
	ElseIf aCols[n][nPosCalcP]=='3' .and. aScan( aAF251Imp, {|MesImp| MesImp[3] == aCols[n][nPosMesCP] } ) == 0
		Help(" ",1,"AF251MCIAP",,STR0094+CRLF+STR0095+CRLF+STR0096+AllTrim(Str(n)),1,0) // N�o existe CIAP com a quantidade de meses informado a ser apropriado, Verifique a Guia [Detalhes dos Impostos] ajuste a linha 
		Return .F.
	EndIf

ENDIF

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Verifica se N1_CBASE+N1_ITEM ja existe no SN1      ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If !Empty(aCols[n][nPosBase]) .And. !Empty(aCols[n][nPosItem])
	dbSelectArea("SN1")
	dbSetOrder(1)
	If dbSeek(xFilial("SN1")+aCols[n][nPosBase]+aCols[n][nPosItem])
		Help(" ",1,"JAGRAVADO")
		Return .F.
	Endif
Endif
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Os campos cBase, n1_item, descricao, historico, cta contabil,³
//³ Valor na Moeda1 e na moeda3.                                 ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If Empty(aCols[n][nPosBase])  .Or. Empty(aCols[n][nPosItem]) .Or.;
	Empty(aCols[n][nPosDescr])  .Or. Empty(aCols[n][nPosHisto]) .Or.;
	Empty(aCols[n][nPosCCont])
	Help(" ",1,"AF250BRAN")
	Return .F.
Endif
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ O cpo val original nao pode ficar em branco.       ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If Empty(aCols[n][nPosOrig1])
	Help(" ",1,"AF250BRAN")
	Return .F.
Endif

If !Af251Chapa(aCols[n][nPosChapa])
	Return .F.
Endif

IF cPaisLoc == "COL" .And. nPosCdForn > 0 .And. nPosLjForn > 0
	IF EMPTY(aCols[n][nPosCdForn]) .OR. EMPTY(aCols[n][nPosLjForn])
		HELP("",1,"AF010FORNE")
		Return .F.
	ELSE
		SA2->(DbSetOrder(1))
		IF SA2->(DbSeek(xFilial("SA2")+aCols[n][nPosCdForn]+aCols[n][nPosLjForn]))
			IF EMPTY(SA2->A2_CGC)
				HELP("",1,"AF010NONIT")
				Return .F.
			ENDIF
		ELSE
			HELP("",1,"AF010NOFORNEC")
			Return .F.
		ENDIF
	ENDIF
ENDIF

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Campos obrigatorios nao podem ficar em branco      ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
For nJ:=1 to Len(aHeader)
	If Empty(aCols[N][nJ]) .AND. X3Obrigat(aHeader[nJ][2])
		Help(" ",1,"OBRIGAT2",,AllTrim(RetTitle(aHeader[nJ][2])),3,1)
		Return .F.
	Endif
Next nJ

If ExistBlock('AF251LOK')
	If !ExecBlock( 'AF251LOK', .F., .F., @aAF251Imp )
		Return .F.
	EndIf
EndIf

/* Ponto de entrada permite manipular dados das abas supeiores e inferiores - verificar se estiver no padrao antigo */
If ExistBlock('AF251LNK')
	aRetAF251LOK := ExecBlock( 'AF251LNK', .F., .F., {@oGetDadTot, @oGetDadImp} )
	/* Function Af251LinOK(aAF251Imp,oFolder,aAF251Desc, oGetDadTot, oGetDadImp, aColsDadoC)
	// oGetDadosC e  oGet são private*/
	oGetDadTot := aRetAF251LOK[1]
	oGetDadImp := aRetAF251LOK[2]

EndIf

If nPosCalcP >0 .AND. nPosMesCP > 0 .AND. nPosCIAP > 0

	For nA := 1 To Len( aAF251Imp )
		nSomaICMS := 0
		aEval( aCols, {|Linha| nSomaICMS+=If(	Linha[nPosCalcP] == aAF251Imp[nA][2] .and.;
		Linha[nPosMescP] == aAF251Imp[nA][3] .and.;
		IIf(lN1Ciap,Linha[nPosCiap] == If(aAF251Imp[nA][4],'1','2'),.T.) , Linha[nPosValICMS] , 0 )  } )
		aAF251Imp[nA][6] := nSomaICMS
	Next nA

	AF251CtImp(@aAF251Imp, @oFolder, @aAF251Desc, @oGetDadTot, @oGetDadImp, aCols[n][9] )

ENDIF

Return .T.

/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o	 ³af251TudOk³ Autor ³ 				      ³ Data ³ 05.01.00 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Analisa a tela digitada									  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³af251TudOk)												  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ ATFA251													  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function af251TudOK(aAF251Imp, aAF251Desc, oFolder, oGetDadTot, oGetDadImp, aAF251DOri)
Local nPosBase 	:= Ascan(aHeader, {|x| Alltrim(x[2])  == "N1_CBASE"})
Local nPosItem 	:= Ascan(aHeader, {|x| Alltrim(x[2])  == "N1_ITEM"})
Local nPosDescr	:= Ascan(aHeader, {|x| Alltrim(x[2])  == "N1_DESCRIC"})
Local nPosChapa	:= Ascan(aHeader, {|x| Alltrim(x[2])  == "N1_CHAPA"})
Local nPosHisto	:= Ascan(aHeader, {|x| Alltrim(x[2])  == "N3_HISTOR"})
Local nPosCCont	:= Ascan(aHeader, {|x| Alltrim(x[2])  == "N3_CCONTAB"})
Local nPosOrig1	:= Ascan(aHeader, {|x| Alltrim(x[2])  == "N3_VORIG1"})

Local i,j, nA, nSomaICMS, nPos, nx,nItemCiap := 0
Local nTamDecImp	:= TamSx3('N1_ICMSAPR')[2]
Local nPosValICMS	:= Ascan(aHeader, {|x| Alltrim(x[2])  == "N1_ICMSAPR"} )
Local nPosCIAP		:= Ascan(aHeader, {|x| Alltrim(x[2])  == "N1_CIAP"} )
Local nPosCalcP		:= Ascan(aHeader, {|x| Alltrim(x[2])  == "N1_CALCPIS"} )
Local nPosMesCP		:= Ascan(aHeader, {|x| Alltrim(x[2])  == "N1_MESCPIS"} )
Local nPosCdForn	:= Ascan(aHeader, {|x| Alltrim(x[2])  == "N1_FORNEC"} )
Local nPosLjForn	:= Ascan(aHeader, {|x| Alltrim(x[2])  == "N1_LOJA"} )
Local nPosN3Aquis   := Ascan(aHeader, {|x| Alltrim(x[2])  == "N3_AQUISIC"} )
Local cMesCPis		:= SuperGetMv('MV_ATFMAPR',.F.,'0/12/24/48')
Local lValidCIAP    := .F.
Local lValIcms 		:= .T.
Local lExisDados	:= .F.
Local lBemCiap      := .F.
Local nPosImpCiap 	:= IIF(Type("oGetDadImp") == "U",0,Ascan(oGetDadImp:aHeader, {|x| Alltrim(x[2])  == "N1_CIAP"} ))
Local lVldRTp10 := SuperGetMV("MV_VLTP10R",.F.,.T.)

If nPosCIAP > 0
	For i:=1 to Len(aCols)
		If !aCols[i][nUsado+1] .And. aCols[i][nPosCIAP]=='1'
			lValidCIAP    := .T.
		EndIf
	Next
EndIf

If ExistBlock("AF251ICM")
	lValIcms := ExecBlock("AF251ICM",.F.,.F.)
EndIf

IF nPosCalcP >0 .AND. nPosMesCP > 0 .AND. nPosCIAP > 0

	AF251CtImp(@aAF251Imp, @oFolder, @aAF251Desc, @oGetDadTot, @oGetDadImp, .T.)

	For i:=1 to Len(aCols)
		If !aCols[i][nUsado+1]
			If aCols[i][nPosCalcP] $ "1/2" .and. aCols[i][nPosMesCP] <> 0
					Help(" ",1,"AF251MESPIS",,STR0086+CRLF+STR0087+CRLF+STR0088+AllTrim(Str(n)),1,0)
					Return .F.
			ElseIf aCols[i][nPosCalcP]=='3' .and. aCols[i][nPosMesCP]==0
					Help(" ",1,"AF251MESPIS",,STR0089+CRLF+STR0090+AllTrim(Str(n)),1,0)
					Return .F.
			ElseIf aCols[i][nPosCalcP]=='3' .and. !(AllTrim(Str(Int(aCols[i][nPosMesCP]))) $ cMesCPis)
					Help(" ",1,"AF251MESPIS",,STR0091+CRLF+STR0092+CRLF+STR0093+AllTrim(Str(n)),1,0)
					Return .F.
			ElseIf aCols[i][nPosCalcP]=='3' .and. aScan( aAF251Imp, {|MesImp| MesImp[3] == aCols[i][nPosMesCP] } ) == 0
					Help(" ",1,"AF251MCIAP",,STR0094+CRLF+STR0095+CRLF+STR0096+AllTrim(Str(i)),1,0)
					Return .F.
			EndIf
		EndIf
	Next i

	//verifico se algum bem tem CIAP, se sim, no minimo 1 tem que ter o CIAP igual a sim
	lBemCiap := aScan(oGetDadImp:aCols,{|aItem| Alltrim(aItem[nPosImpCiap]) ==  "1"}) > 0 // verifica se algum bem tem CIAP
	If lBemCiap
	
		//necessita ao menos 1 bem no grid com ciap = sim e com icms > que zero
		aEval( aCols, {|Linha| nItemCiap+=If(!Linha[nUsado+1] .and. ;
		Alltrim(Linha[nPosCiap]) ==  "1" .and. Linha[nPosValICMS] >  0 , 1 , 0 )  } )
		
		If nItemCiap == 0
			Help(" ",,"AF251REGRA",,STR0121+cValTochar(i),1,0,,,,,,{STR0187}) // "Combinaçao de impostos invalida na linha - Solu��o: Verifique o campo CIAP"
			Return .F.
		EndIf
	EndIf

	//recalcula o grid de impostos rateados para o CIAP/ICMS
	For nA := 1 To Len( aAF251Imp )
		If Upper(AllTrim(aAF251Imp[nA][1])) == 'ICMS' .and. aAF251Imp[nA][4] //CIAP
			nSomaICMS := 0
			
			aEval( aCols, {|Linha| nSomaICMS+=If( !Linha[nUsado+1] .and. alltrim(Linha[nPosCiap]) == If(aAF251Imp[nA][4],'1','2'), Linha[nPosValICMS] , 0 )  } )
			
			aAF251Imp[nA][6] := nSomaICMS
		EndIf
		If lValIcms
			If lValidCIAP .And. aAF251Imp[nA][4] .And. Round(NoRound(aAF251Imp[nA][5],nTamDecImp+1),nTamDecImp) <> Round(NoRound(aAF251Imp[nA][6],nTamDecImp+1),nTamDecImp)
				Help(" ",1,"AF251ICMS",,STR0097+CRLF+STR0098,1,0) //'Ainda existe saldo de Impostos a apropriar, verifique a Guia DETALHES DOS IMPOSTOS!'
				Return .F.
			EndIf
		EndIf
	Next nA

	nSomaICMS := 0
	aEval( aAF251Imp, {|Imp| nSomaICMS += If(AllTrim(Upper(Imp[1]))=='ICMS',Imp[6],0) } )

	If lValIcms
		If (lValidCIAP .And. Round(NoRound(nSomaICMS,nTamDecImp+1),nTamDecImp) <> Round(NoRound(nTotICMS,nTamDecImp+1),nTamDecImp)) .Or.;
			(Round(NoRound(nSomaICMS,nTamDecImp+1),nTamDecImp) <> Round(NoRound(nTotICMS,nTamDecImp+1),nTamDecImp))
			Help(" ",1,"AF251ICMS",,STR0097+CRLF+STR0098,1,0) //'Ainda existe saldo de ICMS a apropriar, verifique a Guia DETALHES DOS IMPOSTOS!'
			Return .F.
		EndIf
	EndIf

	If nTotICMS > 0     //rever esta logica aqui
	   For i := 1 TO Len(oGetDadTot:aCols)
		   If AllTrim(Upper(oGetDadTot:aCols[i,1]))=='ICMS'
			   	oGetDadTot:aCols[i,5] := nTotICMS
				oGetDadTot:aCols[i,4] := nSomaICMS //Atualiza total rateado
			   	oGetDadTot:ForceRefresh()
			EndIf
		Next
	EndIf

ENDIF

For i:=1 to Len(aCols)
	If !aCols[i][nUsado+1]

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Os campos cBase, n1_item, descricao, historico, cta contabil,³
		//³ Valor na Moeda1 e na moeda3.                                 ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If Empty(aCols[i][nPosBase])  .Or. Empty(aCols[i][nPosItem]) .Or. Empty(aCols[i][nPosDescr]) .Or.;
			Empty(aCols[i][nPosHisto])  .Or. Empty(aCols[i][nPosCCont]) .Or.;
			Empty(aCols[i][nPosOrig1])
			Help(" ",1,"AF250BRAN")
			Return .F.
		Endif
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ O cpo val original nao pode ficar em branco.       ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If Empty(aCols[i][nPosOrig1])
			Help(" ",1,"AF250BRAN")
			Return .F.
		Endif

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Campos obrigatorios nao podem ficar em branco      ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		For j:=1 to Len(aHeader)
			If Empty(aCols[i][j]) .AND. X3Obrigat(aHeader[j][2])
				Help(" ",1,"OBRIGAT2",,AllTrim(RetTitle(aHeader[j][2])),3,1)
				Return .F.
			Endif
		Next j

		If ! Af251Chapa(aCols[i][nPosChapa],i)
			Return .F.
		Endif

		IF cPaisLoc == "COL" .And. nPosCdForn > 0 .And. nPosLjForn > 0
			IF EMPTY(aCols[i][nPosCdForn]) .OR. EMPTY(aCols[i][nPosLjForn])
				HELP("",1,"AF010FORNE")
				Return .F.
			ELSE
				SA2->(DbSetOrder(1))
				IF SA2->(DbSeek(xFilial("SA2")+aCols[i][nPosCdForn]+aCols[i][nPosLjForn]))
					IF EMPTY(SA2->A2_CGC)
						HELP("",1,"AF010NONIT")
						Return .F.
					ENDIF
				ELSE
					HELP("",1,"AF010NOFORNEC")
					Return .F.
				ENDIF
			ENDIF
		ENDIF
		IF EMPTY(aCols[i][nPosN3Aquis])  //DATA DE AQUISICAO NAO PODE ESTAR VAZIA
			HELP("",1,"DT_VAZIO",,STR0178 ,1,0)  //"Data de aquisicao deve ser preenchida. Verifique!"
			Return .F.
		ENDIF
		
		lExisDados := .T.
	Endif
Next i

//Validação pra caso seja preenchido o CBASE+ITEM e
//depois serem modificados para um codigo e item existentes na grid
//Ocasionava ErrorLog no banco de chave duplicada
If len(aCols) > 1
	For nx := 1 to Len(aCols)
		If nx <> n
			If (aCols[nx][1]+aCols[nx][2]) == (aCols[n][1] + aCols[n][2])
				Help(" ",1,"JAGRAVADO")
				Return .F.
			Endif
		Endif
	Next
Endif

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ O valor total nÆo pode ser menor q a soma dos rateios   ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
For i := 1 to Len(oGetDadTot:aCols)
	If oGetDadTot:aCols[i][1] == 'ICMS(CTE)'  //conhecimento de transporte nao deve validar se foi rateado
		Loop
	EndIf
	If lVldRTp10 .Or. (!lVldRTp10 .And. !(oGetDadTot:aCols[i][2] == "10"))
		If Str(oGetDadTot:aCols[i][4],19,2) != Str(oGetDadTot:aCols[i][5],19,2)
			Help(" ",1,"AF251VALOR",,STR0169 ,1,0) //"A soma dos valores rateados não bate com o valor a ratear. Verifique os valores dos rateios"
			Return .F.
		Endif
	EndIf
Next i 

If Mv_Par05 == 2 //Atribuir
	nPos := aScan( aAF251DOri, {|DscAtr| DscAtr[7] == 0 } )
	If nPos <> 0
		Help(" ",1,"AF251DSCEST",,STR0099+CRLF+STR0100,1,0) //'Ainda existem descrições para serem atribuidas,'###'Verifique a Guia [Descrição Estendida] '
		Return .F.
	EndIf
EndIf

If !lExisDados .And. Len(aCols) > 0  // Indica que não existem linhas validadas para a guia dados do bem e existem deletadas. Não deve prosseguir.
	Help(" ",1,"AF250BRAN")
	Return .F.
EndIf

If ExistBlock('AF251TOK')
	If !ExecBlock( 'AF251TOK', .f., .f., {@aAF251Imp,@aAF251Desc,@aAF251DOri} )
		Return .F.
	EndIf
EndIf

Return .T.

/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o	 ³Af251CalcV³ Autor ³ 				      ³ Data ³ 05.01.00 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Calcula o Val Original para outras moedas                   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³af251CalcV() 												  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ atfa251													  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function AF251CalcV()

Local nPercent, nVorig1, nValAnt1

// *******************************
// Controle de multiplas moedas  *
// *******************************
Local PosICMS,	aPosOrig
Local aPosAc
//Local nPosOrig1, nPosOrig2, nPosOrig3, nPosOrig4, nPosOrig5, nPosICMS
//Local nPosAc1, nPosAc2, nPosAc3, nPosAc4, nPosAc5
Local nPosPerc
Local __nQuantas := AtfMoedas()
Local nX

Local lContinua	:= .T.



If "N3_VORIG1" $ ReadVar() // Realiza a conversao somente a partir da moeda 1
	If lContinua

		aPosOrig	:= AtfMultPos(aHeader,"N3_VORIG")
		aPosAc		:= AtfMultPos(aHeader,"N3_VRDACM")
		nPosPerc  := Ascan(aHeader, {|x| Alltrim(x[2])  == "N3_PERC" })

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ nValorFis  Valor inicial a ser rateado                  ³
		//³ O valor rateado n„o pode ser maior que o valor origem³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		nValAnt1:= aCols[n][aPosOrig[1]]

		nVorig1 := &(ReadVar())

		If QtdComp(nVorig1) > QtdComp(nValorFis)
			Help(" ",1,"AF250VALOR")
			Return .F.
		Endif

		If !aCols[n][nUsado+1]
			nValRat  := nValRat+nVorig1-nValAnt1
			If QtdComp(nValRat) > QtdComp(nValorFis)
				Help(" ",1,"AF250VALOR")
				nValRat := nValRat-nVorig1+nValAnt1
				Return .F.
			Endif

			nPercent := NoRound(nVorig1/aValorOri[1],5)

			For nX := 2 to __nQuantas
				AtfMultMoe(,,{|x| aCols[n][aPosOrig[nX]] := aValorOri[nX] * nPercent })
			Next

			AtfMultMoe(,,{|x| aCols[n][aPosAc[x]]   := aValDepAc[x] * nPercent })

			aCols[n][nPosPerc]  := Round(nPercent*100,2)

		Else
			Help(" ",1,"AF250VALOR")
			Return .F.
		Endif
	EndIf
Endif

Return .t.

/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o	 ³Af251ExisC³ Autor ³ 				      ³ Data ³ 11.01.00 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Verifica se o registro ja existe no SN1                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³af251ExisC()												  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ atfa251													  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function AF251ExisC()
Local aArea := { Alias(), IndexOrd() }
Local lRet  := .T.
Local cItem := &(Readvar())
Local nx

If (!Empty(aCols[n][1]) .and. !Empty(cItem))
	dbSelectArea("SN1")
	dbSetOrder(1)
	If dbSeek(xFilial("SN1")+aCols[n][1]+cItem)
		Help(" ",1,"JAGRAVADO")
		lRet := .F.
		Return lRet
	Endif

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Verifico se o cbase+item digitado e igual a algum an-³
//³ terior digitado na getdados.                         ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
For nx := 1 to Len(aCols)-1
		If (aCols[nx][1]+aCols[nx][2]) == (aCols[n][1] + cItem)
		Help(" ",1,"JAGRAVADO")
		lRet := .F.
		Return lRet
	Endif
Next
Endif


dbSelectArea(aArea[1])
dbSetOrder(aArea[2])
Return lRet

/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o	 ³Af251Chapa³ Autor ³ 				      ³ Data ³ 11.01.00 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Verifica se a chapa ja existe no SN1 ou na getdados         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³af251Chapa() 												  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ atfa251													  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function AF251Chapa(cChapa, nLinha)
Local aArea := GetArea()
Local lRet  := .T.
Local nPosChapa, i
Local lRepete

DEFAULT cChapa := &(Readvar())
DEFAULT nLinha := n

lRepete :=  IIf(mv_par03 == 1,.T.,.F.)

nPosChapa := ASCAN(aHeader,{|x| Alltrim(x[2])  == "N1_CHAPA" })

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Verifico se a chapa ja existe no SN1                 ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ BOPS 00000120962 - CENTRALIZACAO DA VALIDACAO DA CHAPA E P.E.³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
lRet := AF010CHAPA(cChapa,lRepete)

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Verifica se esta chapa ja existe em linha anterior na getdados   ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
IF lRet .AND. !lRepete

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ BOPS 00000120962 - CENTRALIZACAO DA VALIDACAO DA CHAPA E P.E.³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	IF ExistBlock("AF251CHP")

		lRet := ExecBlock("AF251CHP",.F.,.F.,{cChapa,lRepete,nPosChapa,aCols})
		lRet := IIF(ValType(lRet) == "L",lRet,.F.)

	ELSE
		FOR i := 1 to Len(aCols)
			IF aCols[i][nPosChapa] == cChapa .And. i != nLinha
				Help(" ",1,"AFA010CHAP")
				lRet := .F.
				EXIT
			ENDIF
		NEXT
	ENDIF
ENDIF

RestArea(aArea)
Return lRet

/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o	 ³Af251TxDep³ Autor ³ 				      ³ Data ³ 11.01.00 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Preencher a taxa de deprecia‡„o nas outras moedas           ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³af251TxDep() 												  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ atfa251													  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function AF251TxDep()
Local aArea := { Alias(), IndexOrd() }
Local lRet  := .T.
Local nTaxa := &(Readvar())

aPosTxDp	:= AtfMultPos(aHeader,"N3_TXDEPR")

AtfMultMoe(,,{|x| If(x=1,.F.,acols[n][aPosTxDp[x]] := nTaxa)  })

dbSelectArea(aArea[1])
dbSetOrder(aArea[2])
Return lRet

/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o	 ³Af251Grava³ Autor ³ 				      ³ Data ³ 11.01.00 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Grava os dados do acols e atualiza os arquivos              ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³af251Grava() 												  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ atfa251													  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function Af251Grava(cBaseDe,cBaseAte,nSaveSx8Len, nIndex,nOpca, aAF251Imp, aAF251Desc,aHeadDadoC,aColsDadoC, aRateio,aRateioOrig,cOpcao)
Local nx,ny
Local cPadrao := "835"
Local lPadrao := VerPadrao(cPadrao)
Local cMoedaAtf := GetMV("MV_ATFMOED")
Local cLoteAtf
Local lPrim     := .T.
Local nTotal    := 0
Local lContabiliza:= mv_par01 == 1 //Contabiliza baixa
Local nPosBase := Ascan(aHeader, {|x| Alltrim(Alltrim(x[2]) ) == "N1_CBASE"})
Local nPosItem := Ascan(aHeader, {|x| Alltrim(Alltrim(x[2]) ) == "N1_ITEM"})
Local nPosTipo := Ascan(aHeader, {|x| Alltrim(x[2])  == "N3_TIPO"})
Local nPosAquis:= Ascan(aHeader, {|x| Alltrim(Alltrim(x[2]) ) == "N3_AQUISIC"})
Local nPosDescr:= Ascan(aHeader, {|x| Alltrim(Alltrim(x[2]) ) == "N1_DESCRIC"})
Local nPosQuant:= Ascan(aHeader, {|x| Alltrim(Alltrim(x[2]) ) == "N1_QUANTD"})
Local nPosIcmsApr := Ascan(aHeader, {|x| Alltrim(Alltrim(x[2]) ) == "N1_ICMSAPR"})
Local nPosPerce := Ascan(aHeader, {|x| Alltrim(Alltrim(x[2]) ) == "N3_PERC"})
//Dados para gravacao do CIAP
Local nPoslCiap		:= Ascan(aHeader, {|x| Alltrim(Alltrim(x[2]) ) == "N1_CIAP"})
Local nPosFornec	:= Ascan(aHeader, {|x| Alltrim(Alltrim(x[2]) ) == "N1_FORNEC"})
Local nPosLoja		:= Ascan(aHeader, {|x| Alltrim(Alltrim(x[2]) ) == "N1_LOJA"})
Local nPosNfSerie	:= Ascan(aHeader, {|x| Alltrim(Alltrim(x[2]) ) == SerieNfId("SN1",3,"N1_NSERIE") } )
Local nPosNFiscal	:= Ascan(aHeader, {|x| Alltrim(Alltrim(x[2]) ) == "N1_NFISCAL"})
Local nPoscCONTAB	:= Ascan(aHeader, {|x| Alltrim(Alltrim(x[2]) ) == "N3_CCONTAB"})
Local nPoscUSTBEM	:= Ascan(aHeader, {|x| Alltrim(Alltrim(x[2]) ) == "N3_CUSTBEM"})
Local nPoscHISTOR	:= Ascan(aHeader, {|x| Alltrim(Alltrim(x[2]) ) == "N3_HISTOR"})

Local lA251GRSN4 := ExistBlock("A251GRSN4")
Local cNewCiap	 := ""
Local cERRCIAP	 := ""
Local aLogErro	 := {}
Local nLinhas	 := 0
Local nPosDesc	 := 0
Local cIDMOV	 := ""
Local cTpSaldo	 := ""
Local lSN3Saldo  := .T.
Local cOcorr 	 := ""
Local aDadosComp :={}
Local aValores   := {}
Local nVlaSoma   := 0
Local aContCompl := {}
Local lPesqArry	 := .F.

Local cSeqDadosC := ""
Local nPosDadosC := 0
Local nI		 := 0
Local aColsX	 := {}
Local nPosTp	 := 0

//Variaveis para rateio
Local aRateioB	 := aClone(aRateio[1])
Local nPosRatB	 := 0
Local lGrvRatB	 := .F.

Local aRateioC	 := {}
Local nPosRatC	 := 0
Local lGrvRatC	 := .F.

Local aRateioSt	 := {}

Local cRevAtu	 := ""
Local lRateioOrig:=(!Empty(aRateioOrig))

Local aRatZeroB	 := {}
Local nPosRatZB	 := 0

Local aRatZeroC	 := {}
Local nPosRatZC	 := 0

Local aRatZeroG	 := {}

Local nPosSn3		:= 0
Local cPadAnt		:= ""
Local lPadAnt

//AVP
Local lAvpAtf 		:= AFAvpAtf()
Local aRetBxAVP	    :={}
Local cIdProcAVP	:= ""
Local dDataAvp		:= STOD("")
Local cIndAvp		:= ""
Local nTaxaAvp		:= 0
Local cChaveBx		:= ""
Local cBase			:= ""
Local nSomaVlAq     := 0

// Adicionado Ciap
Local nSf9Ciap     := 0
Local nSf9Estorn   := 0
Local nSldParc     := 0
Local nQtdParc     := 0
Local nSf9SldApr   := 0
Local nSF9Aux      := 0
Local nLinha	   := 0
Local cSF9_CODBAIX := " "
// Rateio do Valor Original do SN1
Local nSN1ValOri   := 0
Local nTotRat      := 0
Local cTypes10	   := IIF(lIsRussia,"/" + AtfNValMod({1}, "/"),"") // CAZARINI - 24/03/2017 - If is Russia, add new valuations models - main models
Local cTypes12	   := IIF(lIsRussia,"/" + AtfNValMod({2}, "/"),"") // CAZARINI - 10/04/2017 - If is Russia, add new valuations models - recoverable models
Local nSeqSFA	   := 0
Local nTamLinha    := TamSx3("N2_SEQUENC")[1]
Local cOpcaoGrv	   := ""
Local aCompCiap    := {} //Bens componentes - Ciap
Local aPrinCiap    := {} //Bem principal - Ciap

Local cFormPr		:= ""
Local nPIcmCi		:= 0 
Local nIcmCmp		:= 0 
Local nVlDbAt		:= 0
Local nVlIcco		:= 0
Local nPercICMS		:= 0
Local nValFret		:= 0
Local nValIcst		:= 0
Local aFlagCTB      := {}
Local lUsaFlag      := SuperGetMV( "MV_CTBFLAG" , .T. /*lHelp*/, .F. /*cPadrao*/)
Local cMensagem		:= ''
Local dDtentne		:= dDataBase
Local dDtemine		:= dDataBase
Local cNumDoc	
Local cNumSer	
Local cCodFor	
Local cCodLoj	
Local cChavenf	
Local lBxCiapC		:= SuperGetMV( "MV_BXCIAPC" , .F. /*lHelp*/, .T. /*cPadrao*/) 
Local nVIcmsCR		:= 0
Local cN3Item		:= ""
Local cNumCta		:= ""
Local cNumccus		:= ""
Local cFunBem		:= ""

Private cArquivo
Private nHdlPrv
Private nNfItem
Private dDtIniCIAP

Default aHeadDadoC	:= {}
Default aColsDadoC	:= {}
Default cOpcao		:= ""
Default lAgrupComp  := .F.

//Opcao para PE AF251GRV, 0 = Transfere, 1 = Detalhar, 2 = Agrupar
If Empty(cOpcao) .Or. Len(cOpcao) > 1
	cOpcaoGrv := "0"
Else
	cOpcaoGrv := cOpcao
EndIf

If lRateioOrig
	aRatZeroB := aClone(aRateioOrig[1])
EndIf

lOnOff := MV_PAR08 == 1

AF251ChkCiap()

nValorOr := 0
nValorDp := 0
nValorCo := 0
nValorCd := 0
nValBxOr := 0
nValBxDp := 0
nValBxCo := 0
nValBxCd := 0

nGValorOr := 0
nGValorDp := 0
nGValorCo := 0
nGValorCd := 0
nGValBxOr := 0
nGValBxDp := 0
nGValBxCo := 0
nGValBxCd := 0

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Verifica o n£mero do Lote do m¢dulo Ativo Fixo     ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
cLoteAtf := LoteCont("ATF")

If !Empty( aItensMark )
	lPesqArry := aScan( aItensMark , { | aPesq | !Empty( aPesq[ 1 ] ) } ) > 0
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³1¦ PARTE - EFETUO A BAIXA DOS ADIANTAMENTOS DO SN1, SN3, SN4 E ATUALIZO ³
//³  o SN5/SN6                                                             ³
//³2¦ PARTE - GERO OS NOVOS REGISTROS (BENS DO TIPO 01) NO SN1, SN3, SN4 e ³
//³  ATUALIZO O SN5/SN6.                                                   ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ 1¦ Parte - baixo do SN3, SN1, SN4 todos os bem marcados para serem bai-³
//³  xados atualizo o SN5/SN6. Baixo os bem com cMarca.                    ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Begin Transaction

//22/07/2010 Kazoolo
PcoIniLan("000366")
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Limpa filtro para busca										 ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
RetIndex("SN3")
Set Filter To

dbSelectArea("SN3")

If !Empty(SN3->(IndexKey( 12 ))) .And. lPesqArry
	SN3->(dbsetOrder(12)) //N3_FILIAL+N3_CBASE+N3_ITEM+N3_TIPO+N3_SEQ
Else
	SN3->(DbSetOrder(01)) //N3_FILIAL+N3_CBASE+N3_ITEM+N3_TIPO+N3_BAIXA+N3_SEQ
EndIf

SN3->(dbSeek(xFilial("SN3")+cBaseDe, .T.))
While SN3->(!Eof()) .And. xFilial("SN3") == SN3->N3_FILIAL .And. SN3->N3_CBASE <= cBaseAte
	nValBxOr := 0
	nValBxDp := 0
	nValBxCo := 0
	nValBxCd := 0
	nSeqSFA++

	If Val(SN3->N3_BAIXA) != 0
		SN3->(dbSkip())
		Loop
	Endif

	If !lPesqArry
		If cChaveBx == SN3->(N3_FILIAL+N3_CBASE+N3_ITEM)
			SN3->(dbSkip())
			Loop
		Else
			cChaveBx := ""
		EndIf

		If (SN3->N3_OK != cMarca ) // Se o item nao esta marcado nao baixar.
			cChaveBx:= SN3->(N3_FILIAL+N3_CBASE+N3_ITEM)
			SN3->(dbSkip())
			Loop
		Endif
	ElseIf aScan( aItensMark , { | aPesq | aPesq[ 1 ] == SN3->(N3_FILIAL+N3_CBASE+N3_ITEM) } ) == 0
		SN3->(dbSkip())
		Loop
	EndIf

	//Array para mudanca de status de rateio
	aAdd(aRateioSt,SN3->N3_FILIAL+SN3->N3_CBASE+SN3->N3_ITEM)

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Atualiza arquivo Movimenta‡”es (Deprecia‡„o)                        ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	SN1->(dbSetOrder(1))
	If SN1->(dbSeek(xFilial("SN1")+SN3->N3_CBASE+SN3->N3_ITEM))
		//AVP
		If lAvpAtf
			dDataAvp	:= Iif(Empty(dDataAvp),SN1->N1_DTAVP,dDataAvp)
			cIndAvp	 	:= Iif(Empty(cIndAvp),SN1->N1_INDAVP,cIndAvp)
			nTaxaAvp	:= Iif(Empty(nTaxaAvp),SN1->N1_TAXAVP,nTaxaAvp)
		EndIf
		// Usar o total dos itens para rateio dos valores.
		if SN1->N1_BAIXA <> dDataBase
	   		nSN1ValOri += SN1->N1_VLAQUIS
        endif

		Reclock("SN1")
		SN1->N1_BAIXA := dDataBase
		MsUnLock()	
		
		

			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³Baixa do Registro de CIAP³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			nSF9Aux := nSF9Estorn	
		
			If lBxCiapC
				ATFBxaCiap(SN1->N1_CBASE,SN1->N1_ITEM,cMoedaAtf,'ATFA251',dDataBase,IIf(SN3->N3_TIPO=="03","15","01"),(SN3->N3_VORIG1+SN3->N3_AMPLIA1),SerieNfId('SN1',2,'N1_NSERIE'),SN1->N1_NFISCAL,@nSf9Ciap,@nSf9Estorn,@nSldParc,@nQtdParc, @cSF9_CODBAIX,nSeqSFA)			
			EndIf

			nSf9Estorn += nSF9Aux
			nSf9Ciap += nSf9Ciap
			aAdd(aCompCiap, {SF9->F9_CODIGO}) //Adiciona bens componentes - CIAP

		If  ( cBase <> SN3->N3_CBASE .Or. ( cBase == SN3->N3_CBASE .And. cN3Item != SN3->N3_ITEM )  )  .And. !Empty(SN1->N1_CODCIAP)

			dbSelectArea("SF9")
			dbSetOrder(1)
			If ( dbSeek(xFilial("SF9")+SN1->N1_CODCIAP) )
				cFormPr		:= SF9->F9_PROPRIO //Form Proprio
				nPIcmCi		:= SF9->F9_CFOENT  //CFOP Entrada
				nIcmCmp		+= SF9->F9_VALICMP //ICMS Proprio
				nVlDbAt		+= SF9->F9_VLDBATV //Val.Deb.Atv.
				nVlIcco		+= SF9->F9_VALICCO //ICMS Comple.
				nPercICMS	:= SF9->F9_PICM	   //Aliq ICMS	
				nValFret    += SF9->F9_VALFRET //ICMS Frete
				nValIcst    += SF9->F9_VALICST //ICMS ST   
				dDtentne 	:= SF9->F9_DTENTNE //Dt.Digit.NFE
				dDtemine	:= SF9->F9_DTEMINE //Dt.Emis.NFE 
				cNumDoc		:= SF9->F9_DOCNFE  //Numero Nf-e
				cNumSer		:= SF9->F9_SERNFE  //Serie Nf-e
				cCodFor		:= SF9->F9_FORNECE //Codigo do fornecedor
				cCodLoj		:= SF9->F9_LOJAFOR //Loja do Fornecedor
				cChavenf	:= SF9->F9_CHAVENF //Chave NF-e					
			EndIf
		EndIf	
	Endif

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Atualiza SN3         ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

	//AVP
	//Se for um tipo AVP
	If lAvpAtf .and. SN3->N3_TIPO == '14'
		aRetBxAVP := AF036AVP(.T.,dDataBase,,cIdMov)
	Endif

	RecLock("SN3")
	SN3->N3_BAIXA   := IIf(SN3->N3_TIPO=="03","2","1")
	SN3->N3_IDBAIXA := "3"
	SN3->N3_DTBAIXA := dDataBase
	SN3->N3_CODBAIX := cCodRat
	If SN3->N3_TIPO $ ('01/03/10' + cTypes10)
		SN3->N3_BXICMS  := SN1->N1_ICMSAPR
	EndIf
	MsUnLock()


	nValBxOr := SN3->N3_VORIG1+SN3->N3_AMPLIA1
	nValBxDp := SN3->N3_VRDACM1
	nValBxCo := SN3->N3_VRCACM1
	nValBxCd := SN3->N3_VRCDA1

	// Alimenta aDiario
	AADD(aDiario,{"SN3",SN3->(recno()),cCodDiario,"N3_NODIA","N3_DIACTB"})

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Gera registro de movimenta‡„o         ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	cOcorr		:= '15' //IIf(SN3->N3_TIPO$"03#13","15","01") // Baixa por Transferencia
	aDadosComp := ATFXCompl( /*nTaxaMedia*/,/*nTxDepre*/,'08',cCodRat,/*cFilOrig*/,/*cSerie*/,/*cNota*/,/*nVenda*/,/*cLocal*/, SN3->N3_PRODMES )
	aValores   := AtfMultMoe(,,{|x| (SN3->&("N3_VORIG"+Alltrim(Str(x))) + SN3->&(If(x>9,"N3_AMPLI","N3_AMPLIA")+Alltrim(Str(x))) + If(x=1,SN3->N3_VRCACM1,0))})
	If lSN3Saldo
		cTpSaldo := SN3->N3_TPSALDO
	EndIf
	ATFXMOV(cFilAnt,@cIDMOV,dDataBase,cOcorr,SN3->N3_CBASE,SN3->N3_ITEM,SN3->N3_TIPO,SN3->N3_BAIXA,SN3->N3_SEQ,SN3->N3_SEQREAV,"1",0,cTpSaldo,,aValores,aDadosComp,,,,,lOnOff,cPadrao)

	If lUsaFlag  // Armazena em aFlagCTB para atualizar no modulo Contabil
		aAdd(aFlagCTB,{"N4_LA","S","SN4",SN4->(Recno()),0,0,0})
	EndIf

	IF lA251GRSN4
		ExecBlock("A251GRSN4",.F.,.F.,{nOpca,SN4->N4_TIPO,"1",SN4->N4_OCORR, SN4->N4_TIPOCNT})
	ENDIF

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Atualiza arquivo movimenta‡„o (Corre‡„o)                               ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	IF SN3->N3_VRCACM1 != 0
		cOcorr 	   := '07'
		aDadosComp := ATFXCompl(/*nTaxaMedia*/, &(If(Val(cMoedaAtf)>9,'SN3->N3_TXDEP','SN3->N3_TXDEPR')+cMoedaAtf),'08',cCodRat,/*cFilOrig*/,/*cSerie*/,/*cNota*/,/*nVenda*/,/*cLocal*/, SN3->N3_PRODMES )
		aValores   := AtfMultMoe(,,{|x| 0})
		aValores[1] := Round(SN3->N3_VRCACM1 , X3Decimal("N4_VLROC1") )
		If lSN3Saldo
			cTpSaldo := SN3->N3_TPSALDO
		EndIf
		ATFXMOV(cFilAnt,@cIDMOV,SN3->N3_AQUISIC,cOcorr,SN3->N3_CBASE,SN3->N3_ITEM,SN3->N3_TIPO,SN3->N3_BAIXA,SN3->N3_SEQ,SN3->N3_SEQREAV,"2",0,cTpSaldo,,aValores,aDadosComp,,,,,lOnOff,cPadrao)

		IF lA251GRSN4
			ExecBlock("A251GRSN4",.F.,.F.,{nOpca,SN4->N4_TIPO,"1",SN4->N4_OCORR, SN4->N4_TIPOCNT})
		ENDIF
	EndIf

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Atualiza arquivo Movimenta‡”es (Corre‡„o da Deprecia‡„o)               ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	IF SN3->N3_VRCDA1 > 0
		cOcorr 	   := '08'
		aDadosComp := ATFXCompl(/*nTaxaMedia*/, &(If(Val(cMoedaAtf)>9,'SN3->N3_TXDEP','SN3->N3_TXDEPR')+cMoedaAtf),'08',cCodRat,/*cFilOrig*/,/*cSerie*/,/*cNota*/,/*nVenda*/,/*cLocal*/, SN3->N3_PRODMES )
		aValores   := AtfMultMoe(,,{|x| 0})
		aValores[1] := Round(SN3->N3_VRCDA1 , X3Decimal("N4_VLROC1") )
		If lSN3Saldo
			cTpSaldo := SN3->N3_TPSALDO
		EndIf
		ATFXMOV(cFilAnt,@cIDMOV,SN3->N3_AQUISIC,cOcorr,SN3->N3_CBASE,SN3->N3_ITEM,SN3->N3_TIPO,SN3->N3_BAIXA,SN3->N3_SEQ,SN3->N3_SEQREAV,"5",0,cTpSaldo,,aValores,aDadosComp,,,,,lOnOff,cPadrao)

		IF lA251GRSN4
			ExecBlock("A251GRSN4",.F.,.F.,{nOpca,SN4->N4_TIPO,"1",SN4->N4_OCORR, SN4->N4_TIPOCNT})
		ENDIF

	EndIf

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Atualiza arquivo Movimenta‡”es (Deprecia‡„o)                           ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	IF SN3->N3_VRDACM1 != 0
		cOcorr 	   := "01"                //Deprecia‡„o
		aDadosComp := ATFXCompl(/*nTaxaMedia*/, &(If(Val(cMoedaAtf)>9,'SN3->N3_TXDEP','SN3->N3_TXDEPR')+cMoedaAtf),'08',cCodRat,/*cFilOrig*/,/*cSerie*/,/*cNota*/,/*nVenda*/,/*cLocal*/, SN3->N3_PRODMES )
		aValores   := AtfMultMoe(,,{|x| SN3->&(If(x>9,"N3_VRDAC","N3_VRDACM")+Alltrim(Str(x))) })
		If lSN3Saldo
			cTpSaldo := SN3->N3_TPSALDO
		EndIf
		ATFXMOV(cFilAnt,@cIDMOV,dDataBase,cOcorr,SN3->N3_CBASE,SN3->N3_ITEM,SN3->N3_TIPO,SN3->N3_BAIXA,SN3->N3_SEQ,SN3->N3_SEQREAV,"4",0,cTpSaldo,,aValores,aDadosComp,,,,,lOnOff,cPadrao)

		IF lA251GRSN4
			ExecBlock("A251GRSN4",.F.,.F.,{nOpca,SN4->N4_TIPO,"1",SN4->N4_OCORR, SN4->N4_TIPOCNT})
		ENDIF

	EndIf
	Af251Saldo("R", "+")

	If lOnOff
		If lPadrao   // Se existe o Lacto padrao
			If lContabiliza  //Contabilizo baixa
				If lPrim
					nHdlPrv := HeadProva(cLoteAtf,"ATFA250",Substr(cUsername,1,6),@cArquivo)
					lPrim := .F.
				Endif
				nTotal += DetProva(nHdlPrv,cPadrao,"ATFA250",cLoteAtf)
			Endif
		Endif
	EndIf

	If lAvpAtf .and. Len(aRetBxAVP) > 0
		//Contabiliza os movimentos de AVP gerados pela baixa
		AF450CtbAvp (aRetBxAVP,.F.,@nTotal,@nHdlPrv,@cArquivo)
		aRetBxAVP := {}
	Endif


	If cBase <> SN3->N3_CBASE
		nVlaSoma += SN1->N1_VLAQUIS
		cBase := SN3->N3_CBASE
	EndIf

	cN3Item := SN3->N3_ITEM

	SN3->(DbSkip())

EndDo

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ No AS400 o arquivo n„o pode estar com o filtro ativo na cria‡„o de³
//³ um registro novo. ( Est  fora da condi‡„o do filtro e n„o permite ³
//³ a grava‡„o do registro)                                           ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
RetIndex("SN3")
Set Filter To

SN3->(DbSetOrder(1)) //N3_FILIAL+N3_CBASE+N3_ITEM+N3_TIPO+N3_BAIXA+N3_SEQ
For nI := 1 To Len(aRateioSt)
	SN3->(DbSeek(aRateioSt[nI]))
	While SN3->(!EOF()) .and. (SN3->N3_FILIAL+SN3->N3_CBASE+SN3->N3_ITEM) == aRateioSt[nI]
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Atualiza SNV         ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If AFXVerRat()
			If SN3->N3_RATEIO == "1"
				cRevAtu := AF011GETREV(SN3->N3_CODRAT)
				Af011AtuStatus(SN3->N3_CODRAT,cRevAtu,"4")
			Endif
		Endif
		SN3->(DbSkip())
	EndDo
Next nI

nValBxOr := 0
nValBxDp := 0
nValBxCo := 0
nValBxCd := 0

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³2¦ Parte - Gero os novos registros (bens do tipo 01) no SN1, SN3, SN4 e ³
//³  atualizo o SN5/SN6. Os bens est„o no aCols.                           ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ


AF251DELR(aRateioB,aCols)
lGrvRatB:= AF011GRV(3,aRateioB)
//22/07/2010
//PcoIniLan("000366")

nSomaVlAq     := 0

//Guardo o número do item da nota a ser gravado na tabela SF9, ao entrar no laço abaixo e no caso de divisão de bens o sistema sempre irá posicionar na última SN1 gravada
nNfItem := SN1->N1_NFITEM

//Variavel usada para gravar a data de inicio de uso no CIAP que será incluído no fonte ATFXINT.
dDtIniCIAP := SN1->N1_AQUISIC

For nx := 1 to Len(aCols)
	nValorOr := 0
	nValorDp := 0
	nValorCo := 0
	nValorCd := 0
	nVIcmsCR := 0	

	If !aCols[nx][Len(aCols[nx])]

		IIF(EMPTY(aCols[nx][nPosNFiscal]), cNumDoc, cNumDoc := aCols[nx][nPosNFiscal] )  //Numero Nf-e
		IIF(EMPTY(aCols[nx][nPosNfSerie]), cNumSer, cNumSer := aCols[nx][nPosNfSerie] )  //Serie Nf-e
		IIF(EMPTY(aCols[nx][nPosFornec] ), cCodFor, cCodFor := aCols[nx][nPosFornec]  )  //Codigo do fornecedor
		IIF(EMPTY(aCols[nx][nPosLoja]   ), cCodLoj, cCodLoj := aCols[nx][nPosLoja]    )  //Codigo do fornecedor	
		
		//Verifica percentual do rateio se diferente de 100% executa calculo
		If aCols[nx,nPosPerce] == 100
			nVIcmsCR := nVlIcco					
		Else
			nVIcmsCR := ( nVlIcco * aCols[nx,nPosPerce] ) / 100
			
		EndIf

		//carrega campos SN3 para SF9 Destino
		cNumCta		:= aCols[nx][nPoscCONTAB] //C.Contábil
		cNumccus	:= aCols[nx][nPoscUSTBEM] //Centro Custo
		cFunBem		:= aCols[nx][nPoscHISTOR] //Funcao Bem
	
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Inclusao do novo registro de CIAP³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If lBxCiapC .And. lN1Ciap .And. aCols[nx][nPoslCiap]=="1" .And. aCols[nx][nPosIcmsApr]>0
			If !ATFGrvCiap(@cNewCiap,@cERRCIAP, aCols[nx][nPosDescr], cCodFor,cCodLoj, cNumDoc,;
				cNumSer, nNfItem , cFormPr, dDatabase, dDtemine, aCols[nx][nPosIcmsApr], "ATFA251", nPIcmCi, nPercICMS, nLinha,;
							nSf9Ciap, nSf9Estorn, nSf9SldApr,nSldParc,nQtdParc, cSF9_CODBAIX,Iif(__lAgrupComp, nIcmCmp ,aCols[nx][nPosIcmsApr]), nVlDbAt, nVIcmsCR, nValIcst, nValFret, __lAgrupComp, cChavenf,cNumCta, cNumccus, cFunBem) //Devera ser calculado o percentual de ICMS com base no valor do item
																								//Devera ser calculado o percentual de ICMS com base no valor do item
				//Gravar LOG de ERRO
				aAdd( aLogErro, {dDataBase, aCols[nX], cERRCIAP} )

				ProcLogIni()
				ProcLogAtu("INICIO")
				ProcLogAtu("ERRO", STR0101, cMensagem) //'Cadastro Novo CIAP.'
				ProcLogAtu("FIM")
			ElseIf aCols[nx,nPosPerce] == 100
				aAdd(aPrinCiap, SF9->F9_CODIGO) //Armazena Bem Principal - CIAP								
			EndIf
		EndIf

	    //nProp := aCols[nX][9]/100
  		//nVlaAquis := nVlaSoma * nProp

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Campos com tratamento especifico que nao estao no aCols³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		
		If __lAgrupComp .And. Len(aLogErro) == 0
			SN1->(MsSeek(xFilial("SN1")+aCols[1][1]+aCols[1][2]))
			RecLock("SN1",.F.)
			SN1->N1_AQUISIC := aCols[nx][nPosAquis]	
			SN1->N1_VLAQUIS := nSN1ValOri * aCols[nX][nPosPerce] / 100
			SN1->N1_STATUS  := "1"
			nTotRat += SN1->N1_VLAQUIS
			If nX = Len(aCols) .and. nSN1ValOri <> nTotRat
				SN1->N1_VLAQUIS += nSN1ValOri - nTotRat
			Endif
			For nY := 1 to Len(aHeader)
				If SUBSTR(aHeader[nY][2],1,2) == "N1" .AND. SN1->(FieldPos(aHeader[nY][2])) > 0
					SN1->&(aHeader[nY][2]) := aCols[nx][ny]
				EndIf
			Next nY
			SN1->(MsUnLock())
		Else
			RecLock("SN1",.T.)
			SN1->N1_FILIAL  := xFilial("SN1")
			SN1->N1_AQUISIC := aCols[nx][nPosAquis]
			SN1->N1_CODCIAP := cNewCiap
			SN1->N1_VLAQUIS := nSN1ValOri * aCols[nX][nPosPerce] / 100
			SN1->N1_STATUS  := "1"
			nTotRat += SN1->N1_VLAQUIS
			If nX = Len(aCols) .and. nSN1ValOri <> nTotRat
				SN1->N1_VLAQUIS += nSN1ValOri - nTotRat
			Endif

			//AVP
			If lAvpAtf
				SN1->N1_DTAVP	:= dDataAvp
				SN1->N1_INDAVP	:= cIndAvp
				SN1->N1_TAXAVP	:= nTaxaAvp
			EndIf
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³Demais campos com conteudo no aCols ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			For nY := 1 to Len(aHeader)
				If SUBSTR(aHeader[nY][2],1,2) == "N1" .AND. SN1->(FieldPos(aHeader[nY][2])) > 0
					SN1->&(aHeader[nY][2]) := aCols[nx][ny]
				EndIf
			Next nY
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³Campos com tratamento especifico que estao no aCols    ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			SN1->N1_QUANTD  := IIf(aCols[nx][nPosQuant] = 0,1,aCols[nx][nPosQuant])
			FkCommit()	
		EndIf

		If __lAgrupComp .And. Len(aLogErro) == 0
			SN3->(MsSeek(xFilial("SN3")+aCols[1][1]+aCols[1][2]))
			RecLock("SN3",.F.)
			SN3->N3_BAIXA    := "0"
			SN3->N3_IDBAIXA  := " "
			SN3->N3_SEQ      := "001"
			SN3->N3_CODBAIX  := cCodRat
			For nY := 1 to Len(aHeader)
				If SUBSTR(aHeader[nY][2],1,2) == "N3" .AND. SN3->(FieldPos(aHeader[nY][2])) > 0
					SN3->&(aHeader[nY][2]) := aCols[nx][ny]
				EndIf
			Next nY			
			SN3->(MsUnLock())
		Else
			RecLock("SN3",.T.)
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³Campos com tratamento especifico que nao estao no aCols³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			SN3->N3_FILIAL   := xFilial("SN3")
			SN3->N3_CBASE    := aCols[nx][nPosBase]
			SN3->N3_ITEM     := aCols[nx][nPosItem]
			SN3->N3_BAIXA    := "0"
			SN3->N3_IDBAIXA  := " "
			SN3->N3_SEQ      := "001"
			SN3->N3_CODBAIX  := cCodRat
			SN3->N3_FILORIG  := cFilAnt

			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³Demais campos com conteudo no aCols ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			For nY := 1 to Len(aHeader)
				IF SUBSTR(aHeader[nY][2],1,2) == "N3" .AND. SN3->(FieldPos(aHeader[nY][2])) > 0
					SN3->&(aHeader[nY][2]) := aCols[nx][ny]
				ENDIF
			Next nY

			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Grava campos referente a Rateio da SN3		              ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If AFXVerRat() .and. lGrvRatB
				If(nPosRatB := IiF(!Empty(aRateioB), aScan(aRateioB,{|x| x[4] == nx }),0)) > 0
					SN3->N3_RATEIO := "1"
					SN3->N3_CODRAT := aRateioB[nPosRatB,1]

					If lRateioOrig
						If(nPosRatZB := IiF(!Empty(aRatZeroB), aScan(aRatZeroB,{|x| x[4] == nx }),0)) > 0
							aRatZeroB[nPosRatZB,1] := aRateioB[nPosRatB,1]
							aRatZeroB[nPosRatZB,2] := Replicate("0",TamSx3("NV_REVISAO")[1])
							aRatZeroG:= {aClone(aRatZeroB[nPosRatZB])}
							AF011Grv(3,aRatZeroG)
							Af011AtuStatus(aRatZeroB[nPosRatZB,1],aRatZeroB[nPosRatZB,2],"5")
						EndIf
					EndIf
				EndIf
			Endif
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³Campos com tratamento especifico que estao no aCols    ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			// Nenhum item com tratamento especifico
			FkCommit()		
		EndIf

		nPosSn3 := SN3->(Recno())

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Grava apontamento de produção ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If SN3->N3_TPDEPR $ "4|5|8|9|"
			//Apontamento inicial de estimativa de produção - P0
			AF110GrvAp(nPosSn3,"P0")

			//Salva o LP anterior
			cPadAnt := cPadrao
			lPadAnt := lPadrao

			cPadrao := "870"		//Apontamento de estimativa de produção
			lPadrao := VerPadrao(cPadrao)

			If ValType(nHdlPrv) == "N" .And. nHdlPrv > 0 .And. lPadrao .and. lOnOff
				nTotal += DetProva(nHdlPrv,cPadrao,"ATFA250",cLoteAtf)
			EndIf

			//Restaura o LP anterior
			cPadrao := cPadAnt
			lPadrao := lPadAnt

			If (SN3->N3_PRODACM > 0) .And. (SN3->N3_VRDACM1 > 0)
				//Apontamento de produção acumulada - P5
				AF110GrvAp(nPosSn3,"P5")
			EndIf
		EndIf

		nPosDesc := aScan( aAF251Desc, {|aDesc| aDesc[2] == nX } )
		If nPosDesc > 0
			For nLinhas := 1 To Len( aAF251Desc[nPosDesc][1] )
				RecLock( 'SN2', .T. )
				SN2->N2_FILIAL 	:= xFilial('SN3')
				SN2->N2_CBASE	:= aCols[nx][nPosBase]
				SN2->N2_ITEM	:= aCols[nx][nPosItem]
				SN2->N2_SEQUENC	:= StrZero( nLinhas, nTamLinha )
				SN2->N2_TIPO	:= aCols[nx][nPosTipo]
				SN2->N2_HISTOR	:= aAF251Desc[nPosDesc][1][nLinhas][2]
				SN2->N2_SEQ		:= "001"
				FkCommit()
			Next nLinhas
		EndIf
		//grava valor de aquisicao mesmo valor de N3_VORIG1
		RecLock("SN1",.F.)
		SN1->N1_VLAQUIS := SN3->N3_VORIG1+SN3->N3_AMPLIA1
		MsUnLock()
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ BOPS 00000119360 - PONTO DE ENTRADA APOS SN3 e ANTES SN4 ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If ExistBlock("A251GRN3")
			Execblock("A251GRN3",.F.,.F.,{Acols[nX],nX})
		Endif

		nValorOr := SN3->N3_VORIG1+SN3->N3_AMPLIA1
		nValorDp := SN3->N3_VRDACM1
		nValorCo := SN3->N3_VRCACM1
		nValorCd := SN3->N3_VRCDA1

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Atualiza Arquivo de Movimenta‡”es                   ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		cOcorr 	   := "16"		// Aquisicao por transferencia
		aDadosComp := ATFXCompl(/*nTaxaMedia*/,/*nTxDepre*/,/*cMotivo*/,cCodRat,/*cFilOrig*/,/*cSerie*/,/*cNota*/,/*nVenda*/,/*cLocal*/, SN3->N3_PRODMES )
		aValores   := AtfMultMoe(,,{|x| ( SN3->&("N3_VORIG"+Alltrim(Str(x))) + SN3->&(If(x>9,"N3_AMPLI","N3_AMPLIA")+Alltrim(Str(x))) ) })
		If lSN3Saldo
			cTpSaldo := SN3->N3_TPSALDO
		EndIf

		ATFXMOV(cFilAnt,@cIDMOV,SN3->N3_AQUISIC,cOcorr,SN3->N3_CBASE,SN3->N3_ITEM,SN3->N3_TIPO,SN3->N3_BAIXA,SN3->N3_SEQ,SN3->N3_SEQREAV,"1",SN1->N1_QUANTD,cTpSaldo,,aValores,aDadosComp,,,,,lOnOff,cPadrao)
		
		If lUsaFlag  // Armazena em aFlagCTB para atualizar no modulo Contabil
			aAdd(aFlagCTB,{"N4_LA","S","SN4",SN4->(Recno()),0,0,0})
	    EndIf

		IF lA251GRSN4
			ExecBlock("A251GRSN4",.F.,.F.,{nOpca,SN4->N4_TIPO,"2",SN4->N4_OCORR, SN4->N4_TIPOCNT})
		ENDIF

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Atualiza arquivo movimenta‡„o (Corre‡„o)                               ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		IF SN3->N3_VRCACM1 != 0
			cOcorr 	   := "07"		 //Corre‡„o
			aDadosComp := ATFXCompl(/*nTaxaMedia*/, &(If(Val(cMoedaAtf)>9,'SN3->N3_TXDEP','SN3->N3_TXDEPR')+cMoedaAtf),/*cMotivo*/,cCodRat,/*cFilOrig*/,/*cSerie*/,/*cNota*/,/*nVenda*/,/*cLocal*/, SN3->N3_PRODMES )
			aValores   := AtfMultMoe(,,{|x| 0})
			aValores[1] := Round(SN3->N3_VRCACM1 , X3Decimal("N4_VLROC1") )
			If lSN3Saldo
				cTpSaldo := SN3->N3_TPSALDO
			EndIf
			ATFXMOV(cFilAnt,@cIDMOV,SN3->N3_AQUISIC,cOcorr,SN3->N3_CBASE,SN3->N3_ITEM,SN3->N3_TIPO,SN3->N3_BAIXA,SN3->N3_SEQ,SN3->N3_SEQREAV,"2",0,cTpSaldo,,aValores,aDadosComp,,,,,lOnOff,cPadrao)

			IF lA251GRSN4
				ExecBlock("A251GRSN4",.F.,.F.,{nOpca,SN4->N4_TIPO,"2",SN4->N4_OCORR, SN4->N4_TIPOCNT})
			ENDIF
		EndIf

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Atualiza arquivo Movimenta‡”es (Corre‡„o da Deprecia‡„o)               ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		IF SN3->N3_VRCDA1 > 0
			cOcorr 	   := "08"
	 		aDadosComp := ATFXCompl(/*nTaxaMedia*/, &(If(Val(cMoedaAtf)>9,'SN3->N3_TXDEP','SN3->N3_TXDEPR')+cMoedaAtf),/*cMotivo*/,cCodRat,/*cFilOrig*/,/*cSerie*/,/*cNota*/,/*nVenda*/,/*cLocal*/, SN3->N3_PRODMES )
			aValores   := AtfMultMoe(,,{|x| 0})
			aValores[1] := Round(SN3->N3_VRCDA1 , X3Decimal("N4_VLROC1") )
			If lSN3Saldo
				cTpSaldo := SN3->N3_TPSALDO
			EndIf
			ATFXMOV(cFilAnt,@cIDMOV,SN3->N3_AQUISIC,cOcorr,SN3->N3_CBASE,SN3->N3_ITEM,SN3->N3_TIPO,SN3->N3_BAIXA,SN3->N3_SEQ,SN3->N3_SEQREAV,"5",0,cTpSaldo,,aValores,aDadosComp,,,,,lOnOff,cPadrao)
			IF lA251GRSN4
				ExecBlock("A251GRSN4",.F.,.F.,{nOpca,SN4->N4_TIPO,"2",SN4->N4_OCORR, SN4->N4_TIPOCNT})
			ENDIF

		EndIf

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Atualiza arquivo Movimenta‡”es (Deprecia‡„o)                           ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		IF SN3->N3_VRDACM1 != 0 
			cOcorr 	   := "06" //Deprecia‡„o
			aDadosComp := ATFXCompl(/*nTaxaMedia*/, &(If(Val(cMoedaAtf)>9,'SN3->N3_TXDEP','SN3->N3_TXDEPR')+cMoedaAtf),/*cMotivo*/,cCodRat,/*cFilOrig*/,/*cSerie*/,/*cNota*/,/*nVenda*/,/*cLocal*/, SN3->N3_PRODMES )
			aValores   := AtfMultMoe(,,{|x| SN3->&(If(x>9,"N3_VRDAC","N3_VRDACM")+Alltrim(Str(x))) })
			If lSN3Saldo
				cTpSaldo := SN3->N3_TPSALDO
			EndIf
			ATFXMOV(cFilAnt,@cIDMOV,SN3->N3_AQUISIC,cOcorr,SN3->N3_CBASE,SN3->N3_ITEM,SN3->N3_TIPO,SN3->N3_BAIXA,SN3->N3_SEQ,SN3->N3_SEQREAV,"4",0,cTpSaldo,,aValores,aDadosComp,,,,,lOnOff,cPadrao)

			IF lA251GRSN4
				ExecBlock("A251GRSN4",.F.,.F.,{nOpca,SN4->N4_TIPO,"2",SN4->N4_OCORR, SN4->N4_TIPOCNT})
			ENDIF

		EndIf

		//22/07/2010
		PcoDetLan("000366","01","ATFA250")
		Af251Saldo("Q", "+")		

		If ExistBlock("AF251GRV")  // PONTO DE ENTRADA ANTES DA COTABILIZACAO
			Execblock("AF251GRV",.F.,.F.,{Acols[nX], cOpcaoGrv})
		Endif
		If lOnOff
			If lPadrao         // Existe Lancto padrao
				If lContabiliza // Contabiliza
					nTotal += DetProva(nHdlPrv,cPadrao,"ATFA250",cLoteAtf)
				Endif
			Endif
		EndIf

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Grava dados complementares caso exista		³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If ((MV_PAR04 == 1).or.(MV_PAR04 == 2 .and. MV_PAR06 == 2)) .and. !Empty(aHeadDadoC) .and. !Empty(aColsDadoC) 		//Tipos Gerenciais 10/12

			If (nPosDadosC := aSCan(aColsDadoC,{|aX| aX[1] == nx})) > 0
				aColsX := aClone(aColsDadoC[nPosDadosC,2])

				//Valida os registros do aColsX, verifica se existe campo obrigatorio em branco
				For nI := 1 To Len(aColsX)
					aAdd( aContCompl , .T. )
					For nY := 1 To Len(aHeadDadoC)
						If aHeadDadoC[nY][17] .And. Empty(aColsX[nI,nY])
							aContCompl[nI] := .F.
							Exit
						EndIf
					Next nY
				Next nI

				aRateioC 	:= {}
				lGrvRatC	:= .F.
				If !Empty(aRateio[2])
					If (nPosRatC:= aScan(aRateio[2],{|aX| aX[1] == nX}))>0
						aRateioC := aClone(aRateio[2,nPosRatC][2])
						AF251DELR(aRateioC,aColsX)
						lGrvRatC := AF011GRV(3,aRateioC)
					EndIf
				EndIf

				cSeqDadosC := "001"
				nPosTp:=  Ascan(aHeadDadoC, {|x| Alltrim(Alltrim(x[2]) ) == "N3_TIPO"})
				For nI	:= 1 To Len(aColsX)
					If aContCompl[ nI ]//So entra na rotina caso o registro esteja valido
						nGValorOr := 0
						nGValorDp := 0
						nGValorCo := 0
						nGValorCd := 0

						If !aColsX[nI][Len(aColsX[nI])] .and. !Empty(aColsX[nI,nPosTp])
							RecLock("SN3",.T.)

							cSeqDadosC	:= Soma1(cSeqDadosC)
							For nY:=1 to Len(aHeadDadoC)
								SN3->(FieldPut(FieldPos(aHeadDadoC[nY,2]),aColsX[nI,nY]))
							Next nY
							SN3->N3_FILIAL   := xFilial("SN3")
							SN3->N3_CBASE    := aCols[nx][nPosBase]
							SN3->N3_ITEM     := aCols[nx][nPosItem]
							SN3->N3_BAIXA    := "0"
							SN3->N3_IDBAIXA  := " "
							SN3->N3_SEQ      := cSeqDadosC
							SN3->N3_CODBAIX  := cCodRat

							//variaveis para contabiliazacao do tipo gerencial

							nGValorOr := SN3->N3_VORIG1+SN3->N3_AMPLIA1
							nGValorDp := SN3->N3_VRDACM1
							nGValorCo := SN3->N3_VRCACM1
							nGValorCd := SN3->N3_VRCACM1

							//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							//³ Atualiza Arquivo de Movimenta‡”es                   ³
							//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
							cOcorr 	   := "16"		// Aquisicao por transferencia
							aDadosComp := ATFXCompl(/*nTaxaMedia*/,/*nTxDepre*/,/*cMotivo*/,cCodRat,/*cFilOrig*/,/*cSerie*/,/*cNota*/,/*nVenda*/,/*cLocal*/, SN3->N3_PRODMES )
							aValores   := AtfMultMoe(,,{|x| ( SN3->&("N3_VORIG"+Alltrim(Str(x))) + SN3->&(If(x>9,"N3_AMPLI","N3_AMPLIA")+Alltrim(Str(x))) ) })
							If lSN3Saldo
								cTpSaldo := SN3->N3_TPSALDO
							EndIf
							ATFXMOV(cFilAnt,@cIDMOV,SN3->N3_AQUISIC,cOcorr,SN3->N3_CBASE,SN3->N3_ITEM,SN3->N3_TIPO,SN3->N3_BAIXA,SN3->N3_SEQ,SN3->N3_SEQREAV,"1",SN1->N1_QUANTD,cTpSaldo,,aValores,aDadosComp,,,,,lOnOff,cPadrao)

							IF lA251GRSN4
								ExecBlock("A251GRSN4",.F.,.F.,{nOpca,SN4->N4_TIPO,"2",SN4->N4_OCORR, SN4->N4_TIPOCNT})
							ENDIF

							//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							//³ Atualiza arquivo movimenta‡„o (Corre‡„o)                               ³
							//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
							IF SN3->N3_VRCACM1 != 0
								cOcorr 	   := "07"		 //Corre‡„o
								aDadosComp := ATFXCompl(/*nTaxaMedia*/, &(If(Val(cMoedaAtf)>9,'SN3->N3_TXDEP','SN3->N3_TXDEPR')+cMoedaAtf),/*cMotivo*/,cCodRat,/*cFilOrig*/,/*cSerie*/,/*cNota*/,/*nVenda*/,/*cLocal*/, SN3->N3_PRODMES )
								aValores   := AtfMultMoe(,,{|x| 0})
								aValores[1] := Round(SN3->N3_VRCACM1 , X3Decimal("N4_VLROC1") )
								If lSN3Saldo
									cTpSaldo := SN3->N3_TPSALDO
								EndIf
								ATFXMOV(cFilAnt,@cIDMOV,SN3->N3_AQUISIC,cOcorr,SN3->N3_CBASE,SN3->N3_ITEM,SN3->N3_TIPO,SN3->N3_BAIXA,SN3->N3_SEQ,SN3->N3_SEQREAV,"2",0,cTpSaldo,,aValores,aDadosComp,,,,,lOnOff,cPadrao)

								IF lA251GRSN4
									ExecBlock("A251GRSN4",.F.,.F.,{nOpca,SN4->N4_TIPO,"2",SN4->N4_OCORR, SN4->N4_TIPOCNT})
								ENDIF
							EndIf

							//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							//³ Atualiza arquivo Movimenta‡”es (Corre‡„o da Deprecia‡„o)               ³
							//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
							IF SN3->N3_VRCDA1 > 0
								cOcorr 	   := "08"
								aDadosComp := ATFXCompl(/*nTaxaMedia*/, &(If(Val(cMoedaAtf)>9,'SN3->N3_TXDEP','SN3->N3_TXDEPR')+cMoedaAtf),/*cMotivo*/,cCodRat,/*cFilOrig*/,/*cSerie*/,/*cNota*/,/*nVenda*/,/*cLocal*/, SN3->N3_PRODMES )
								aValores   := AtfMultMoe(,,{|x| 0})
								aValores[1] := Round(SN3->N3_VRCDA1 , X3Decimal("N4_VLROC1") )
								If lSN3Saldo
									cTpSaldo := SN3->N3_TPSALDO
								EndIf
								ATFXMOV(cFilAnt,@cIDMOV,SN3->N3_AQUISIC,cOcorr,SN3->N3_CBASE,SN3->N3_ITEM,SN3->N3_TIPO,SN3->N3_BAIXA,SN3->N3_SEQ,SN3->N3_SEQREAV,"5",0,cTpSaldo,,aValores,aDadosComp,,,,,lOnOff,cPadrao)
								IF lA251GRSN4
									ExecBlock("A251GRSN4",.F.,.F.,{nOpca,SN4->N4_TIPO,"2",SN4->N4_OCORR, SN4->N4_TIPOCNT})
								ENDIF

							EndIf

							//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							//³ Atualiza arquivo Movimenta‡”es (Deprecia‡„o)                           ³
							//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
							IF SN3->N3_VRDACM1 != 0
								If SN3->N3_TIPO $  ("10|12|14|15|50|51|52|53|54" + cTypes10 + cTypes12)
									cOcorr	:= "20"	// Depreciacao Gerencial
								Else
									cOcorr	:= "06" 	//Depreciacao
								EndIf
								aDadosComp := ATFXCompl(/*nTaxaMedia*/, &(If(Val(cMoedaAtf)>9,'SN3->N3_TXDEP','SN3->N3_TXDEPR')+cMoedaAtf),/*cMotivo*/,cCodRat,/*cFilOrig*/,/*cSerie*/,/*cNota*/,/*nVenda*/,/*cLocal*/, SN3->N3_PRODMES )
								aValores   := AtfMultMoe(,,{|x| SN3->&(If(x>9,"N3_VRDAC","N3_VRDACM")+Alltrim(Str(x))) })
								If lSN3Saldo
									cTpSaldo := SN3->N3_TPSALDO
								EndIf
								ATFXMOV(cFilAnt,@cIDMOV,SN3->N3_AQUISIC,cOcorr,SN3->N3_CBASE,SN3->N3_ITEM,SN3->N3_TIPO,SN3->N3_BAIXA,SN3->N3_SEQ,SN3->N3_SEQREAV,"4",0,cTpSaldo,,aValores,aDadosComp,,,,,lOnOff,cPadrao)

								IF lA251GRSN4
									ExecBlock("A251GRSN4",.F.,.F.,{nOpca,SN4->N4_TIPO,"2",SN4->N4_OCORR, SN4->N4_TIPOCNT})
								ENDIF

							EndIf

							Af251Saldo("Q", "+")

							//--------------------------------------------------------
							//AVP
							//GRAVA AVP INCLUSAO - Constituicao
							If lAvpAtf .and. SN3->N3_TIPO == '14'
								//Obtenho o ID de processo
								cIdProcAVP	:= GetSxeNum('FNF','FNF_IDPROC','FNF_IDPROC'+cEmpAnt,3)
								//Gravo o movimento de constituicao do AVP pela inclusao do bem
								AfGrvAvp(cFilAnt,"1",SN1->N1_AQUISIC,SN3->N3_CBASE,SN3->N3_ITEM,SN3->N3_TIPO,SN3->N3_TPSALDO,SN3->N3_BAIXA,SN3->N3_SEQ,SN3->N3_SEQREAV,SN3->N3_VORIG1,lOnOff,@nTotal,@nHdlPrv,cLoteAtf,SN3->(RECNO()),cIdProcAVP,/*aRecCtb*/,/*lBxTotal*/,SN4->N4_IDMOV)
								//Confirmo o ID do processo nas tabelas de controle
								ConfirmSX8()
								If nTotal > 0
									lPadrao := .T.
								EndIf
							EndIf

							//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							//³ Grava campos referente a Rateio da SN3		              ³
							//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
							If lGrvRatC
								If(nPosRatC := IiF(!Empty(aRateioC), aScan(aRateioC,{|x| x[4] == nI }),0)) > 0
									SN3->N3_RATEIO	:= "1"
									SN3->N3_CODRAT	:= aRateioC[nPosRatC,1]
									If lRateioOrig

										If (nPosRatZC:= aScan(aRateioOrig[2],{|aX| aX[1] == nX}))>0
											aRatZeroC := aClone(aRateioOrig[2,nPosRatZC][2])

											If(nPosRatZC := IiF(!Empty(aRatZeroC), aScan(aRatZeroC,{|x| x[4] == nx }),0)) > 0
												aRatZeroC[nPosRatZC,1] := aRateioC[nPosRatC,1]
												aRatZeroC[nPosRatZC,2] := Replicate("0",TamSx3("NV_REVISAO")[1])
												aRatZeroG:= {aClone(aRatZeroC[nPosRatZC])}
												AF011Grv(3,aRatZeroG)
												Af011AtuStatus(aRatZeroC[nPosRatZC,1],aRatZeroC[nPosRatZC,2],"5")
											EndIf
										EndIf
									EndIf
								EndIf
							Endif
							FkCommit()

						EndIf

						If lOnOff
							If lPadrao         // Existe Lancto padrao
									If lContabiliza // Contabiliza
									nTotal += DetProva(nHdlPrv,cPadrao,"ATFA250",cLoteAtf)
								Endif
							Endif
						EndIf
					EndIf
				Next nI
			EndIf
		EndIf
	Endif
Next

//Atualiza Código da Baixa - CIAP
If lBxCiapC .And. ExistFunc("ATFAtuCiap") .And. Len(aPrinCiap) > 0 .And. Len(aCompCiap) > 0
	ATFAtuCiap(aPrinCiap, aCompCiap)
EndIf

//22/07/2010
PcoFinLan("000366")
While GetSx8len() > nSaveSx8Len
	ConfirmSX8()
End

End Transaction

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Contabilizacao da geracao do(s) novo(s) bem(s)          ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If lOnOff
	If lPadrao .And. lContabiliza
		RodaProva(nHdlPrv,nTotal)
		cA100Incl(cArquivo,nHdlPrv,3,cLoteAtf,IIf(mv_par01 == 1, .T., .F.),IIf(mv_par02 == 1, .T., .F.),,,,aFlagCTB,,aDiario)
	Endif
EndIF

Return

/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o	 ³Af251Tipo ³ Autor ³ 				      ³ Data ³ 11.01.00 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Verifica se tipo ‚ "01" (So pode ser '01'na baixa de adiat) ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³af251Tipo()  												  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ atfa251													  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function AF251Tipo()
Local cTipo := &(ReadVar())
Local lRet  := .T.

If cTipo != "01"
	Help(" ",1,"AF250TIPO")
	lRet := .F.
	Return lRet
Endif

Return lRet

/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o   ³ AF251Canc  ³ Autor ³ 				      ³ Data ³ 14.12.99 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o³ Cancelamento dos adiantamentos                               ³±±
±±ÃÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso     ³ Generico                                                     ³±±
±±ÀÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function Af251Canc(cAlias,nReg,nOpcx,aCampos,lDireto,aParam,cCodLanPco,cPrgPco,aRetAuto,lCont)
Local oDlg
Local nOpcA := 0, nCnt, nx
Local cBase, cItem, cTipo,cRateio
Local dDataBx, cChave
Local cPadrao 	 := "836"
Local lPadrao 	 := VerPadrao(cPadrao)
Local cLoteAtf
Local nTotal     := 0
Local lContabiliza
Local lPrim 	 := .T.
Local aTpSaldo	 := { "Q", "R"} 	// Tipo de saldo para registro origem/destino
Local nQtdBai	 := 0			// Variavel para retorno da quantidade no SN1
Local dUltDepr   := GETMV("MV_ULTDEPR")
Local lGspInUseM := If(Type('lGspInUse')=='L', lGspInUse, .F.)
Local nIndex
Local lCancela	 := .T.
Local cFilSN1	 := xFilial("SN1")
Local nPropSF9	 := 0
Local nVorig1	 := 0
Local nVorig2	 := 0
Local nVorig3	 := 0
Local nVorig4	 := 0
Local nVorig5	 := 0
Local cCodBx 	 := ""
Local nRegSn3Atu := 0
Local lPosicione := .F.
Local aArea		 := {}
Local lBmContr   := IIf(SN1->(FieldPos("N1_BMCONTR"))>0,.T., .F.) 
Local lBmContrAg := .F. // Bem em construção agrupado
Local lAtfa040 	 := cPrgPco == 'ATFA040' // Cancelamento vindo da rotina atfa040	

//Data de Bloqueio da Movimentação - MV_ATFBLQM
Local dDataBloq := GetNewPar("MV_ATFBLQM",CTOD(""))

// *******************************
// Controle de multiplas moedas  *
// *******************************
Local aValorMOed
Local cPadAnt		:= ""
Local lPadAnt

Local cOpcaoGrv	:= "3" //Opcao para PE AF251GRV, 3 = Cancelar

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Array Auxiliar para mudanca de status do rateio                  ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Local aRateioSt := {}
Local nI		:= 0

Default nOpcx := 5
Default aRetAuto 	:= {}
Default lCont 		:= .F.

//Se chamada da ATFA040, lAutomato precisa ser verificado
If lAtfa040
	lAutomato := IsBlind()
EndIf

AF251ChkCiap()

If lGspInUseM
	//Se for GSP, pega o ultimo dia do mes anterior
	dUltDepr := MsSomaMes(dUltDepr,-1,.T.)
Endif

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Variável que indica que a rotina será executada ³
//³de forma automatica                             ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Default lDireto	:= .F.
Default aParam  := {}

//Parâmetros utilizados para estorno de lançamentos no PCO
//Se estiverem em vazias, conforme DEFAULT abaixo definido, não será feito o estorno
Default cCodLanPco := ""
Default cPrgPco    := ""

Private cArquivo
Private nHdlPrv


//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Valida, caso a rotina seja acionada de forma automatica³
//³se as tabelas estão posicionadas corretamente          ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If lDireto
	If SN1->(EOF()) .Or. SN3->(EOF())
		Help(" ", 1, "AF251POS",,STR0116,1,0) //  "Os arquivos SN1 e SN3 devem estar corretamente posicionados"
		Return(.F.)
	EndIf
EndIf

Pergunte("AFA251",.F.)
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Carrega os parametros do pergunte ³
//³baseado no vetor de aParam        ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If !Empty(aParam)
	For nx := 1 to Len(aParam)
		&("MV_PAR"+Strzero(nx,2)) := aParam[nX]
	Next nx
EndIf

If lAtfa040 .And. nOpcx == 4
	lContabiliza:= lCont
Else
	lContabiliza:= MV_PAR01 == 1  //Contabiliza baixa
EndIf

nValorOr := 0
nValorDp := 0
nValorCo := 0
nValorCd := 0
nValBxOr := 0
nValBxDp := 0
nValBxCo := 0
nValBxCd := 0
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³O cancela/o das baixas de adiantamentos ‚ da seguinte maneira.          ³
//³- Se o cod. de liga‡„o (N3_CODBAIX) E a data de baixa (N3_DTBAIXA) esti-³
//³  verem preenchidos, estes geraram o(s) bem(s) definitivo(s), ou seja,  ³
//³  s„o os 'adianta/os' baixados.                                         ³
//³- Se o somente o cod. de liga‡„o estiver preenchido (N3_CODBAIX), estes ³
//³  s„o os bens definitivos gerados.                                      ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Verifica a validade da data                     ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If !Empty(dDataBloq) .AND. (dDataBase <= dDataBloq)
	HELP(" ",1,"AF251BLQM",,STR0165 + DTOC(dDataBloq) ,1,0)    //"A data da operação é igual ou menor que a data de bloqueio de movimentação : "
	Return
EndIf

//Validacao para o bloqueio do processo
If !CtbValiDt(,dDataBase,,,,{"ATF001"},)
	Return
EndIf

If (dDataBase) <= (dUltDepr) .Or. (dDataBase) > LastDay(dUltDepr+1)
//Tipo Depreciacao diferente 02-Mes Subsequente
	If GetMv("MV_TIPDEPR") <> "2"
		Help(" ", 1, "AFDTCANCEL")
		Return(.F.)
	ElseIF dDataBase < (FirstDay(dUltDepr))
		Help(" ",1,"AF251DSCEST",,STR0064+DTOC(SuperGetMV("MV_ULTDEPR")),1,0)
		Return(.F.)
	Endif
Endif

If !lAutomato
	cLoteAtf := LoteCont("ATF")

	cBase  := SN1->N1_CBASE
	cItem  := SN1->N1_ITEM
	cTipo  := "01"
Else
	cLoteAtf	:= LoteCont("ATF")
	cBase	:= aRetAuto[2]
	cItem  	:= aRetAuto[3]
	cTipo  	:= "01"
EndIf
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Prepara o Alias SF9 para validacao                  ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
DbSelectArea("SF9")
DbSetOrder(1)

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Procuro no SN3 pelo registro com  preenchido        ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
dbSelectArea("SN3")
dbsetOrder(1)
SN3->(DBClearFilter())
SN3->(dbgotop())
If ! dbSeek(xFilial("SN3")+cBase+cItem) .Or. Empty(SN3->N3_CODBAIX)
	Help(1, " ", "AF250NOREC")
	Return(.F.)
Endif

cRateio := SN3->N3_CODBAIX
dDataBx := SN3->N3_DTBAIXA
lParcial := .F.
If Alltrim(FunName()) != "ATFA251"

	cCodBx:= SN3->N3_CODBAIX

	//BeginSQL Alias "TMPSN3"
	cQry:="	SELECT COUNT(DISTINCT N3_CODBAIX) AS CODBAIX "
	cQry+="	FROM "+RetSqlName("SN3")
	cQry+="	WHERE D_E_L_E_T_ = '' AND "
	cQry+="	N3_FILIAL = '"+xFilial("SN3")+"' AND "
	cQry+="	N3_CBASE"+ " || " +"N3_ITEM"+ " || " +"N3_TIPO = (SELECT DISTINCT N3_CBASE"+ " || " +"N3_ITEM"+ " || " +"N3_TIPO FROM "+RetSqlName("SN3")+" WHERE D_E_L_E_T_ = '' AND N3_CODBAIX = '"+cCodBx+"' AND N3_TIPO = '03' AND N3_CBASE = '"+cBase+"' AND N3_ITEM = '"+cItem+"' )"
	//EndSQL
	cQry := ChangeQuery( cQry )
	If Select("TMPSN3") >0 
		DbSelectArea("TMPSN3")
		TMPSN3->(dbCloseArea())
	EndIF	
	dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQry),"TMPSN3",.T.,.T.)

	If TMPSN3->(CODBAIX) > 1
		lParcial := .T.

	EndIf

	TMPSN3->(dbCloseArea())
EndIf
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Filtra o arquivo por tipo e vencimento                       ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
dbSelectArea("SN3")
cIndex 	:= CriaTrab(nil,.f.)
cChave  := "N3_FILIAL+N3_CODBAIX+N3_CBASE+N3_ITEM+N3_SEQ"
IndRegua("SN3",cIndex,cChave,,Af251CancBx(cRateio),STR0011) // "Selecionando Registros..."
nIndex := RetIndex("SN3")
dbSelectArea("SN3")
dbSetOrder(nIndex+1)
dbGoTop( )

If BOF() .and. EOF()
	Help(" ",1,"RECNO")
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Restaura os indices      ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	Set Filter To
	RetIndex("SN3")
	fErase (cIndex+OrdBagExt())
	Return(.F.)
Endif

If SN3->N3_IDBAIXA = "2"
	aTpSaldo := { "1", "5" }
	cPadrao  := "816"
Endif

lPadrao 	:= VerPadrao(cPadrao)

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Monta a entrada de dados do arquivo                          ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Private aTELA[0][0],aGETS[0],aHeader[0],nUsado:=0

Af251aHead(.T.)

dbSelectArea("SN3")
dbSetOrder(nIndex+1)
dbGotop()
nCnt := 0 
While !Eof() .And. ((SN3->N3_FILIAL+SN3->N3_CODBAIX==xFilial("SN3")+cRateio) .Or. (lAtfa040 .And. SN3->N3_FILIAL==xFilial("SN3") .And.;
					 SN3->N3_CODBAIX != cRateio .And. SN3->N3_BAIXA=="0")) //se existir um codigo de baixa diferente que esteja ativo nao pode interromper o laço
	If	SN3->N3_CODBAIX == cRateio  
		dbSelectArea("SN1")
		dbSetOrder(1)
		If dbSeek(xFilial("SN1")+SN3->N3_CBASE+SN3->N3_ITEM)
			nCnt++
		Endif
		dbSelectArea("SN3")
		dbSetOrder(nIndex+1)
	EndIf
	dbSkip()
EndDo

If (nCnt < 3  .And. lParcial) .or. (Alltrim(FunName()) == "ATFA251"	.and. !aF251vldCan(cRateio))
  	Help("  ",1,"AF251CANT",,STR0172,1,0) //Alguns ativos já sofreram baixa e não poderão ser cancelados!
	Return
EndIf
PRIVATE aCOLS[nCnt][Len(aHeader)+1]

dbGoTop()
nCnt := 0

dbSelectArea("SN1")
dbSetOrder(1)

If !lAutomato
	While SN3->(!Eof()) .And. ((SN3->N3_FILIAL+SN3->N3_CODBAIX==xFilial("SN3")+cRateio) .Or. (lAtfa040 .And. SN3->N3_FILIAL==xFilial("SN3") .And.;
					 SN3->N3_CODBAIX != cRateio .And. SN3->N3_BAIXA=="0")) //se existir um codigo de baixa diferente que esteja ativo nao pode interromper o laço
		If	SN3->N3_CODBAIX == cRateio 
			If SN1->(dbSeek(xFilial("SN1")+SN3->N3_CBASE+SN3->N3_ITEM))
				If cPrgPco <> "ATFA040" .Or. !Empty(SN3->N3_DTBAIXA) .Or. SN3->N3_TIPO == "01"
					nCnt++
					For nx := 1 to Len(aHeader)
						If  !AllTrim(aHeader[nx][2]) $ "SN3_REC_WT|SN3_ALI_WT"
							aCols[nCnt][nx] := &(aHeader[nx][9] +"->"+aHeader[nx][2])
						Else
							If AllTrim(aHeader[nx][2]) == "SN3_REC_WT"
								aCols[nCnt][nx] := SN3->(Recno())
							ElseIf AllTrim(aHeader[nx][2]) == "SN3_ALI_WT"
								aCols[nCnt][nx] := "SN3"
							EndIf
						EndIf
					Next
					aCols[nCnt][nx] := .F.
				Else
					Adel(aCols, Len(aCols)) 
					aCols := aSize(aCols,Len(aCols)-1)
				EndIf
			Endif
		EndIf
		SN3->(dbSkip())
	EndDo
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ BOPS 00000154755 - TRATAMENTO DO CIAP NO CANCELAMENTO³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

SF9->(DbSetOrder(1))
SN1->(DbSetOrder(1))
SN4->(DbSetOrder(1))//N4_FILIAL+N4_CBASE+N4_ITEM+N4_TIPO+DTOS(N4_DATA)+N4_OCORR+N4_SEQ

dbSelectArea("SN3")
dbSetOrder(nIndex+1)
dbGoTop()

While SN3->(!Eof()) .And. SN3->N3_FILIAL+SN3->N3_CODBAIX==xFilial("SN3")+cRateio 

	IF SN3->N3_BAIXA == "0" // ITEM ATIVO

		SN1->(MsSeek(cFilSN1+SN3->N3_CBASE+SN3->N3_ITEM))
		IF !Empty(SN1->N1_CODCIAP)
			IF SF9->(MsSeek(xFilial("SF9")+	SN1->N1_CODCIAP))
				If  (SF9->F9_ICMIMOB <> SN1->N1_ICMSAPR) .OR. (SF9->F9_BXICMS <> 0 .Or. SF9->F9_MOTIVO <> " ")
					If ! MsgYesNo(STR0173 + SN1->N1_CODCIAP +STR0174  ,STR0175 )//"O Bem possui um Credito de ICMS do Ativo Permanente (CIAP) associado com o código "###"CIAP."###"Prosseguir com o cancelamento?" )
						Help("  ",1,"A100CIAPDE")
						lCancela := .F.
						Exit
					EndIf
				ENDIF
			ENDIF
		ENDIF
		//Verifica se o ativo já sofreu depreciação
		lCancela := aF251Depr(SN3->N3_CBASE, SN3->N3_ITEM, SN3->N3_TIPO, lAtfa040)

		If !lCancela // se houver depreciação interrompo o laço 
			Exit 
		EndIf
	Else
		//Verifica se o ativo originado já sofreu baixa
		
		If 	SN4->(dbSeek(xFilial("SN4") + SN3->N3_CBASE + SN3->N3_ITEM + SN3->N3_TIPO + DTOS(SN3->N3_AQUISIC) +"01" ))
			If SN4->N4_MOTIVO <> '08'
				lCancela := .F.
				Help("  ",1,"AF251CANC2",,STR0172,1,0) //Alguns ativos já sofreram baixa e não poderão ser cancelados!
				Exit
			EndIf
		EndIf
	EndIf
	SN3->(dbSkip())
EndDo

dbSelectArea("SN3")
dbSetOrder(nIndex+1)
dbGoTop()

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ BOPS 00000123127 - VALIDACAO PARA CANCELAMENTO      ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If lCancela .AND. ExistBlock("AF251CAN")
	lCancela := Execblock("AF251CAN",.F.,.F.,{aCols,nCnt})
	lCancela := IIF(ValType(lCancela) == "L",lCancela,.T.)
Endif

While lCancela
	nOpca := 0
	If !lDireto .And. !lAutomato
		aSize := MSADVSIZE()
		DEFINE MSDIALOG oDlg TITLE STR0057 From aSize[7],0 To aSize[6],aSize[5] OF oMainWnd  PIXEL //	"Cancelamento da Baixa de Adiantamentos por Rateios"
		oDlg:lMaximized := .T.

		oPanel := TPanel():New(0,0,'',oDlg,, .T., .T.,, ,30,30,.T.,.T. )
		oPanel:Align := CONTROL_ALIGN_BOTTOM

		@ 0.8 , 35  Say STR0058 FONT oDlg:oFont Of oPanel 		// "Total de bens a Cancelar "
		@ 0.8 , 49  Say oQtdBem VAR nCnt Picture "@E 999,999,999.99" FONT oDlg:oFont Of oPanel

		oGet := MSGetDados():New(30,oDlg:nLeft,oDlg:nBottom,oDlg:nRight,2,"af251LinOk","af251TudOk","",.T., , ,.f.)
		oGet:oBrowse:Align := CONTROL_ALIGN_ALLCLIENT

		ACTIVATE MSDIALOG oDlg ON INIT EnchoiceBar(oDlg,{||nOpca:=1,oDlg:End()},{|| nOpca:=2,oDlg:End()})

	Else
		nOpca := 1
	EndIf

	If nOpca == 1
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Apaga registros novos do SN3 e desmarca os adtos baixados        ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

		BEGIN TRANSACTION

			If !Empty(cCodLanPco)
				PcoIniLan(cCodLanPco)
			EndIf


			dbSelectArea("SN3")
			If lAtfa040
				dbSetOrder(1)
			Else
				dbSetOrder(nIndex+1)
			EndIF
			dbGotop()
			IF !lAtfa040
				If SN3->N3_BAIXA = "2" .And. (! Empty(SN3->N3_DTBAIXA))
					aArea	:= SN3->(GetArea())
					dbSetOrder(1)
					If SN3->(DbSeek(xFilial("SN3")+SN3->N3_CBASE+SN3->N3_ITEM+'03'+'0'))
						nRegSn3Atu := SN3->(Recno())
						SN3->( dbGotop())
					EndIf
					SN3->(RestArea(aArea))
				EndIf
			EndIF
			nProxRec := 0
			nCnt := 0
			While SN3->(!Eof()) .And. ((xFilial("SN3")+cRateio==SN3->N3_FILIAL+SN3->N3_CODBAIX ).Or. (lAtfa040 .And. SN3->N3_FILIAL==xFilial("SN3") .And.; //tratamento para o atfa040
					 SN3->N3_CODBAIX != cRateio .And. SN3->N3_BAIXA=="0")) //se existir um codigo de baixa diferente que esteja ativo nao pode interromper o laço
				nCnt++
				If !lAtfa040 .and. nCnt == 1 .And. ! Empty(SN3->N3_DTBAIXA) .And. nRegSn3Atu <> 0
					SN3->(dbGoTo(nRegSn3Atu))
					lPosicione := .T.
				EndIf
				nValorOr := 0
				nValorDp := 0
				nValorCo := 0
				nValorCd := 0
				nValBxOr := 0
				nValBxDp := 0
				nValBxCo := 0
				nValBxCd := 0

				If lPadrao   // Se existe o Lacto padrao
					If lContabiliza  //Contabilizo baixa
						If lPrim
							nHdlPrv := HeadProva(cLoteAtf,"ATFA250",Substr(cUsername,1,6),@cArquivo)
							lPrim := .F.
						Endif
					Endif
				Endif

				//Verifica se deve estornar o lançamento no PCO
				If !Empty(cCodLanPco)
					PcoDetLan(cCodLanPco,"01",cPrgPco,.T.)
				EndIf

				// *******************************
				// Controle de multiplas moedas  *
				// *******************************
				aOrig		:= AtfMultMoe(,,{|x| 0})
				aAmplia	:= AtfMultMoe(,,{|x| 0})

				nVrcMes1 := nVrcBal1 := nVrcAcm1 := 0
				nVrcdM1	 := nVrcdB1	 := nVrcdA1	 := 0

				// *******************************
				// Controle de multiplas moedas  *
				// *******************************
				aVrdMes := AtfMultMoe(,,{|x| 0})
				aVrdBal := AtfMultMoe(,,{|x| 0})
				aVrdAcm := AtfMultMoe(,,{|x| 0})

				lParcial := .F.
				aOrig	 := AtfMultMoe(,,{|x| SN3->&("N3_VORIG"+Alltrim(Str(x)))})

				aAmplia := AtfMultMoe("SN3","N3_AMPLIA")

				nVrcMes1 := SN3->N3_VRCMES1
				nVrcBal1 := SN3->N3_VRCBAL1 - nVrcMes1
				nVrcAcm1 := SN3->N3_VRCACM1 - nVrcMes1

				nVrcdM1	:= SN3->N3_VRCDM1
				nVrcdB1	:= SN3->N3_VRCDB1 - nVrcdM1
				nVrcdA1	:= SN3->N3_VRCDA1 - nVrcdM1

				aVrdMes := AtfMultMoe("SN3","N3_VRDMES")

				aVrdBal := AtfMultMoe(,,{|x| SN3->&(If(x>9,"N3_VRDBA","N3_VRDBAL")+Alltrim(Str(x))) - aVrdMes[x] })


				aVrdAcm := AtfMultMoe(,,{|x| SN3->&(If(x>9,"N3_VRDAC","N3_VRDACM")+Alltrim(Str(x))) - aVrdMes[x] })

				If SN3->N3_BAIXA = "2" .And. ! Empty(SN3->N3_DTBAIXA) .And. Val(SN3->N3_SEQ) > 1
					lParcial := .T.
					dDataBx := SN3->N3_DTBAIXA
				Endif

				If 	! Empty(SN3->N3_CODBAIX) .And. (Empty(SN3->N3_DTBAIXA) .And. ! lParcial)
					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³ Excluir os bens DESTINO (gerados)             ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					nValorOr := SN3->N3_VORIG1+SN3->N3_AMPLIA1+SN3->N3_AMPLIA1
					nValorDp := SN3->N3_VRDACM1
					nValorCo := SN3->N3_VRCACM1
					nValorCd := SN3->N3_VRCDA1

					dbSelectArea("SN1")
					dbSetorder(1)

					If SN1->(dbSeek(xFilial("SN1")+SN3->N3_CBASE+SN3->N3_ITEM))
						dbSelectArea("SN4")
						dbSetOrder(1)

						Af251DelSn4(xFilial("SN4")+SN3->N3_CBASE+SN3->N3_ITEM+SN3->N3_TIPO+;
							DTOS(SN3->N3_AQUISIC), cRateio,, {  "20" , "16", "05" },;
							aTpSaldo[1] = "1")

						//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
						//³ Atualiza os arquivos de Saldos SN5/SN6 caso gerado p/ ATFA251³
						//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
						If aTpSaldo[1] = "Q"
							Af251Saldo(aTpSaldo[1], "-")
						Endif
						//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
						//³ Deleta Descri‡”es Analticas³
						//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
						dbSelectArea("SN2")
						dbSeek( xFilial("SN2")+SN3->N3_CBASE+SN3->N3_ITEM+SN3->N3_TIPO )
						cChave := xFilial("SN2")+SN3->N3_CBASE+SN3->N3_ITEM+SN3->N3_TIPO
						While !Eof() .and. SN2->N2_FILIAL+SN2->N2_CBASE+SN2->N2_ITEM+SN2->N2_TIPO == cChave
							Reclock("SN2" ,.F.,.T.)
							dbDelete()
							FkCommit()
							SN2->(dbSkip())
						End

						//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
						//³ Exclui o REGISTRO DEFINTIVO (gerados) NO SF9 - CIAP          ³
						//³ Ou atualiza no caso de um bem em construção cancelado        ³
						//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
						If lBmContr
							lBmContrAg:=BemConsAgr(SN1->N1_CBASE,SN1->N1_ITEM)
						EndIf
						If !EMPTY(SN1->N1_CODCIAP)
							ATFRMVCIAP(SN1->N1_CODCIAP,lBmContrAg) 
						EndIf

						//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
						//³ Exclui apontamento de estimativa inicial de produção	³
						//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
						dbSelectArea("FNA")
						dbSetOrder(2)		//FNA_FILIAL+FNA_CBASE+FNA_ITEM+FNA_TIPO+FNA_SEQ+FNA_SEQREA+FNA_TPSALD+DTOS(FNA_DATA)
						dbGoTop()
						If FNA->(MsSeek(xFilial("FNA")+SN3->(N3_CBASE+N3_ITEM+N3_TIPO+N3_SEQ+N3_SEQREAV+N3_TPSALDO)))
							While FNA->(!EoF()) .And.;
									FNA->(FNA_FILIAL+FNA_CBASE+FNA_ITEM+FNA_TIPO+FNA_SEQ+FNA_SEQREA+FNA_TPSALD) == SN3->(N3_FILIAL+N3_CBASE+N3_ITEM+N3_TIPO+N3_SEQ+N3_SEQREAV+N3_TPSALDO)
								RecLock("FNA",.F.)
								//Salva o LP anterior
								cPadAnt := cPadrao
								lPadAnt := lPadrao

								Do Case
								Case FNA->FNA_OCORR == "P0"
									cPadrao := "875"		//Estorno de apontamento de estimativa de produção
								Case FNA->FNA_OCORR == "P1"
									cPadrao := "876"		//Estorno de apontamento de revisão de estimativa de produção
								Case FNA->FNA_OCORR == "P2"
									cPadrao := "877"		//Estorno de apontamento de produção
								Case FNA->FNA_OCORR == "P3"
									cPadrao := "878"		//Estorno de apontamento de encerramento de produção
								Case FNA->FNA_OCORR == "P4"
									cPadrao := "879"		//Estorno de apontamento de complemento de produção
								EndCase
								lPadrao := VerPadrao(cPadrao)
								If ValType(nHdlPrv) == "N" .And. nHdlPrv > 0 .And. lPadrao
									nTotal += DetProva(nHdlPrv,cPadrao,"ATFA250",cLoteAtf)
								EndIf

								//Restaura o LP anterior
								cPadrao := cPadAnt
								lPadrao := lPadAnt

								dbDelete()
								MsUnlock()
								FNA->(dbSkip())
							EndDo
						EndIf

						// **********CONTABILIZAR
						If lPadrao   // Se existe o Lacto padrao
							If lContabiliza  //Contabilizo baixa
								nTotal += DetProva(nHdlPrv,cPadrao,"ATFA250",cLoteAtf)
							Endif
						Endif

						//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
						//³ Exclui o REGISTRO DEFINTIVO (gerados) DO SN3                 ³
						//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
						If AFXVerRat()
							If !Empty(SN3->N3_CODRAT)
								AF011DEL({{SN3->N3_CODRAT}},.T.)
							EndIf
						EndIf
						
						If lAtfa040 .And. !lParcial .And.ATF251ValOri() //Verifica se resgata valores para compor ativo original
							// Resgata valor do registro que será excluído somando valores para compor original
							nVorig1 += SN3->N3_VORIG1
							nVorig2 += SN3->N3_VORIG2
							nVorig3 += SN3->N3_VORIG3
							nVorig4 += SN3->N3_VORIG4
							nVorig5 += SN3->N3_VORIG5
						ElseIf !(Alltrim(FunName()) $ "ATFA251|ATFA040") 
							// Resgata valor do registro que será excluído
							nVorig1:= SN3->N3_VORIG1
							nVorig2:= SN3->N3_VORIG2
							nVorig3:= SN3->N3_VORIG3
							nVorig4:= SN3->N3_VORIG4
							nVorig5:= SN3->N3_VORIG5
						EndIf

						If lBmContr
							lBmContrAg:=BemConsAgr(SN1->N1_CBASE, SN1->N1_ITEM)//o bem que está sendo cancelado é um bem em construção que foi agrupado
						EndIf
						
						If lBmContrAg
							RecLock("SN3",.F.)
							SN3->N3_BAIXA    := "0"
							SN3->N3_IDBAIXA  := " "
							SN3->N3_SEQ      := "001"
							SN3->N3_CODBAIX  := ""
							SN3->N3_VORIG1   := 0
							SN3->N3_TXDEPR1  := 0
							SN3->N3_VORIG2   := 0
							SN3->N3_TXDEPR2  := 0
							SN3->N3_VORIG3   := 0
							SN3->N3_TXDEPR3  := 0
							SN3->N3_VORIG4   := 0
							SN3->N3_TXDEPR4  := 0
							SN3->N3_VORIG5   := 0
							SN3->N3_TXDEPR5  := 0
							SN3->(MsUnLock())							
						Else
							Reclock("SN3", .F., .T.)
							dbDelete()
							FkCommit()
							msUnlock()
						EndIf

						If lBmContrAg
							RecLock("SN1",.F.)
							N1_STATUS  :='0' 
							N1_ICMSAPR := 0
							N1_CONSAB  :=''
							N1_VLAQUIS := 0
							SN1->(MsUnLock())
						ElseIf	AF251ExcSN1(SN3->N3_CBASE,SN3->N3_ITEM)
							Reclock("SN1",.F., .T.)
							dbDelete()
							FkCommit()
							MsUnlock()
						Endif
					Else
						Help(" ", 1, "AFDTCAN251",, STR0117,1,0) //"Nao existe ficha de ativo para esse bem."
						DisarmTransaction()
						lPadrao := .F.
						Exit
					EndIf
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³2¦ PARTE - CANCELAR ADIANTA/OS QUE GERARAM OS BENS DEFINITIVOS³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				ElseIf !Empty(SN3->N3_CODBAIX) .And. ( ! Empty(SN3->N3_DTBAIXA) .Or. lParcial)

					If ! lParcial
						dDataBx := SN3->N3_DTBAIXA
					Endif

					Af251DelSn4(xFilial("SN4")+SN3->N3_CBASE+SN3->N3_ITEM+SN3->N3_TIPO+;
						DTOS(dDataBx), cRateio, @nQtdBai,, aTpSaldo[1] = "1")

					DbSelectArea("SN3")
					nRecno := Recno()
					RecLock("SN3",.F.)

					AtfMultMoe("SN3","N3_VORIG",{|x| Round( aOrig[x]  , X3Decimal("N3_VORIG"+Alltrim(Str(x))) ) })
					AtfMultMoe("SN3","N3_AMPLIA",{|x| Round( aAmplia[x]  , X3Decimal(If(x>9,"N3_AMPLI","N3_AMPLIA")+Alltrim(Str(x))) ) })

					SN3->N3_VRCMES1 := Round( nVrcMes1, X3Decimal("N3_VRCMES1") )
					SN3->N3_VRCBAL1 := Round( nVrcBal1, X3Decimal("N3_VRCBAL1") )
					SN3->N3_VRCACM1 := Round( nVrcAcm1, X3Decimal("N3_VRCACM1") )

					SN3->N3_VRCDM1  := Round( nVrcdM1, X3Decimal("N3_VRCDM1") )
					SN3->N3_VRCDB1  := Round( nVrcdB1, X3Decimal("N3_VRCDB1") )
					SN3->N3_VRCDA1  := Round( nVrcdA1, X3Decimal("N3_VRCDA1") )

					If Alltrim(FunName()) != "ATFA251"

						AtfMultMoe("SN3","N3_VRDMES",{|x| Round( aVrdMes[x]  , X3Decimal(If(x>9,"N3_VRDME","N3_VRDMES")+Alltrim(Str(x))) ) })

						AtfMultMoe("SN3","N3_VRDBAL",{|x| Round( aVrdBal[x]  , X3Decimal(If(x>9,"N3_VRDBA","N3_VRDBAL")+Alltrim(Str(x))) ) })

						// Atualiza saldo da conta de depreciacao acumulada com a diferenca do valor
						// antigo a o valor atual (Valor do estorno)
						aValorMoed	:= AtfMultMoe(,,{|x|  SN3->&(If(x>9,"N3_VRDAC","N3_VRDACM")+Alltrim(Str(x)))-aVrdAcm[x] })

						ATFSaldo(SN3->N3_CCDEPR, dDataBase,"5", SN3->N3_VRDACM1-aVrdAcm[1],SN3->N3_VRDACM2-aVrdAcm[2],;
							SN3->N3_VRDACM3-aVrdAcm[3],SN3->N3_VRDACM4-aVrdAcm[4],SN3->N3_VRDACM5-aVrdAcm[5],;
							"+",,SN3->N3_SUBCCDE,,SN3->N3_CLVLCDE,SN3->N3_CCCDEP,"4", aValorMoed )

						AtfMultMoe("SN3","N3_VRDACM",{|x| Round( aVrdAcm[x]  , X3Decimal(If(x>9,"N3_VRDAC","N3_VRDACM")+Alltrim(Str(x))) ) })

					Endif

					cTpBaixa := SN3->N3_IDBAIXA

					SN3->N3_BAIXA   := "0"
					SN3->N3_IDBAIXA := " "
					SN3->N3_DTBAIXA := CTOD("  /  /  ")
					SN3->N3_OK      := Space(2)
					SN3->N3_CODBAIX := Space(6)
					SN3->N3_VORIG1  += nVorig1
					SN3->N3_VORIG2  += nVorig2
					SN3->N3_VORIG3  += nVorig3
					SN3->N3_VORIG4  += nVorig4
					SN3->N3_VORIG5  += nVorig5
					MsUnlock()

					nVorig1 := 0
					nVorig2 := 0
					nVorig3 := 0
					nVorig4 := 0
					nVorig5 := 0

					aAdd(aRateioSt,SN3->N3_FILIAL+SN3->N3_CBASE+SN3->N3_ITEM)

					nValBxOr := SN3->N3_VORIG1+SN3->N3_AMPLIA1
					nValBxDp := SN3->N3_VRDACM1
					nValBxCo := SN3->N3_VRCACM1
					nValBxCd := SN3->N3_VRCDA1

					dbSelectArea("SN1")
					dbSetorder(1)

					If dbSeek(xFilial("SN1")+SN3->N3_CBASE+SN3->N3_ITEM)
						Reclock("SN1",.F.)
						SN1->N1_BAIXA := CTOD("  /  /  ")
						If aTpSaldo[1] = "1"			// Baixa normal - Adiantamento
							SN1->N1_QUANTD += nQtdBai  // Retorno quantidade
						Endif
						MsUnlock()
					Endif

					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³ Restaura o registro de CIAP SF9 vinculado ao bem original    ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					IF !EMPTY(SN1->N1_CODCIAP)
						ATFRSTCIAP(SN1->N1_CODCIAP,@nPropSF9)
					ENDIF

					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³ Atualiza os arquivos de Saldos SN5/SN6 caso gerado p/ ATFA251³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

					If aTpSaldo[2] = "R"
						Af251Saldo(aTpSaldo[2], "-")
					Endif

					// Localizo registros no SN4 referente a baixa anterior para preencher novamente N3_CODBAIX

					DbSelectArea("SN4")
					If lAtfa040
						IndRegua(	"SN4",Left(cIndex, 7) + "A",SN4->(IndexKey(1)),,;
							"N4_FILIAL  = '" + xFilial("SN4") + "' .AND. " +;
							"N4_CBASE  = '" + SN1->N1_CBASE + "' .AND. " +;
							"N4_ITEM  = '" + SN1->N1_ITEM + "' .AND. " +;
							"N4_OCORR  = '01' .AND. " +;
							"! Empty(N4_CODBAIX) .AND. N4_CODBAIX <> '" +;
							cRateio + "'",STR0011) // "Selecionando Registros..."
					Else
						IndRegua(	"SN4",Left(cIndex, 7) + "A",SN4->(IndexKey(1)),,;
							"N4_FILIAL  = '" + xFilial("SN4") + "' .AND. " +;
							"N4_CBASE  = '" + SN1->N1_CBASE + "' .AND. " +;
							"N4_ITEM  = '" + SN1->N1_ITEM + "' .AND. " +;
							"! Empty(N4_CODBAIX) .AND. N4_CODBAIX <> '" +;
							cRateio + "'",STR0011) // "Selecionando Registros..."
					EndIf
					DbGoBottom()
					If ! Eof()
						DbSelectArea("SN3")
						DbGoto(nRecno)
						Reclock( "SN3" ,.F.)
						SN3->N3_IDBAIXA := cTpBaixa   
						SN3->N3_CODBAIX := SN4->N4_CODBAIX
						SN3->N3_BXICMS	-= nPropSF9
						MsUnlock()
					Endif

					DbSelectArea("SN4")
					DbClearFil()
					RetIndex("SN4")
					fErase (Left(cIndex, 7) + "A"+OrdBagExt())

					If ExistBlock("AF251GRV")  // PONTO DE ENTRADA ANTES DA COTABILIZACAO
						Execblock("AF251GRV",.F.,.F.,{aCols[nCnt], cOpcaoGrv})
					Endif

					// **********CONTABILIZAR
					If lPadrao         // Existe Lancto padrao
						If lContabiliza // Contabiliza
							nTotal += DetProva(nHdlPrv,cPadrao,"ATFA250",cLoteAtf)
						Endif
					Endif
				Endif
				
				SN3->(dbSkip())
				If lPosicione .And. nCnt == 1 .OR. !lAtfa040 .and. SN3->(Eof())
					SN3->( dbGotop())
					lPosicione:= .F.
				EndIf
			EndDo

			If !Empty(cCodLanPco)
				PcoFinLan(cCodLanPco)
			EndIf
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Finaliza o controle de transação para contabilizar      ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		END TRANSACTION


		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Contabilizacao dos cancelamentos dos bens.              ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If lPadrao .And. lContabiliza
			RodaProva(nHdlPrv,nTotal)
			cA100Incl(cArquivo,nHdlPrv,3,cLoteAtf,IIf(mv_par01 == 1, .T., .F.),IIf(mv_par02 == 1, .T., .F.))
		Endif
	Endif
	Exit
Enddo

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Restaura os indices      ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
DbSelectArea("SN3")
Set Filter To
RetIndex("SN3")
fErase (cIndex+OrdBagExt())

If AFXVerRat()
	SN3->(DbSetOrder(1)) //N3_FILIAL+N3_CBASE+N3_ITEM+N3_TIPO+N3_BAIXA+N3_SEQ
	For nI := 1 To Len(aRateioSt)
		SN3->(DbSeek(aRateioSt[nI]))
		While SN3->(!EOF()) .and. (SN3->N3_FILIAL+SN3->N3_CBASE+SN3->N3_ITEM) == aRateioSt[nI]
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Atualiza SNV         ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If SN3->N3_RATEIO == "1"
				cRevAtu := AF011GETREV(SN3->N3_CODRAT)
				Af011AtuStatus(SN3->N3_CODRAT,cRevAtu,"3")
			Endif
			SN3->(DbSkip())
		EndDo
	Next nI
EndIf

Return(.T.)

/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³Af251CanBx³ Autor ³ 				      ³ Data ³ 10.01.00 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Retorna expressao para Indice Condicional                  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ Af251CanBx()                                               ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ atfa251                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function Af251CancBx(cRateio,dDataBx) 
	Local cFiltro 	:= ""
	Local cQuery  	:= ""
	Local cAliasSQL := ""
	Local nx     	:= 0
	Local cConcatn3 := ""

	If Alltrim(Upper(TCGetDB())) == 'ORACLE' .Or. Alltrim(Upper(TCGetDB())) == 'POSTGRES' .Or. Alltrim(Upper(TCGetDB())) == 'DB2' ;
	.Or. Alltrim(Upper(TCGetDB())) == 'INFORMIX'
		cConcatn3 := ' N3_CBASE || N3_ITEM || N3_TIPO '
	Else
		cConcatN3 := ' N3_CBASE + N3_ITEM + N3_TIPO '
	EndIf
	

	cFiltro := 'N3_FILIAL  = "' + xFilial("SN3") + '" .AND. '
	cFiltro += 'N3_CODBAIX = "' + cRateio + '" '

	If	Alltrim(FunName()) == "ATFA040"
		cAliasSQL := GetNextAlias()	
		cQuery := "SELECT N3_CBASE,N3_ITEM,N3_TIPO,N3_BAIXA FROM"+RetSqlName('SN3')+" SN3 "+ ;
					"WHERE N3_FILIAL= '"+xFilial('SN3')+"' AND N3_BAIXA='0' AND N3_CODBAIX <> '"+ cRateio+ "' AND D_E_L_E_T_=' ' AND "+ cConcatN3 +" IN " 
		cQuery += "(SELECT DISTINCT("+cConcatN3+") " + ;
						" FROM "+RetSqlName('SN3')+" SN3 " + ;
							"WHERE N3_FILIAL= '"+xFilial('SN3')+"' AND N3_CODBAIX = '"+cRateio+ "' " + ;
								"AND N3_TIPO='03' AND D_E_L_E_T_=' ') " 

		cQuery := ChangeQuery(cQuery)
		MPSysOpenQuery(cQuery,cAliasSQL)
		If (cAliasSQL)->(!EoF()) 
			cFiltro += '.OR. (N3_FILIAL  = "' + xFilial("SN3") + '" .AND. N3_TIPO="03" .AND. N3_BAIXA="0" .AND. N3_CBASE+N3_ITEM $ "'
			While (cAliasSQL)->(!EoF()) 
				nx ++
				If nx > 1 
					cFiltro +=  "/"
				EndIf
				cFiltro +=  (cAliasSQL)->N3_CBASE +(cAliasSQL)->N3_ITEM
				(cAliasSQL)->(DbSkip())
			EndDo
			cFiltro += '")'
		EndIf
		(cAliasSQL)->(DbCloseArea())
	EndIf

Return cFiltro

/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³Af251DelLi³ Autor ³ 				      ³ Data ³ 10.01.00 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Funcao executada qdo a linha ‚ exclu¡da                    ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ Af251DelLi()                                               ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ atfa251                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function Af251DelLi()
Local nPosOrig1:= Ascan(aHeader, {|x| Alltrim(Alltrim(x[2]) ) == "N3_VORIG1"})
Local nValAnt1 := IIf(aCols[n][nPosOrig1]==NIL,0,aCols[n][nPosOrig1])
__nExeDel++
// Como esta rotina eh chamada duas vezes pela exclusao na GetDados, controlar
// as chamadas para nao ocorrer erro nos calculos dos dados do rodape
If (__nExeDel%2)==0
	Return .T.
Endif
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Nao valida linha deletada                          ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If !aCols[n][nUsado+1]
	nValRat := nValRat-nValAnt1
Else
	nValRat := nValRat+nValAnt1
Endif

Return(.T.)

/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³Af251Saldo³ Autor ³ Wagner Mobile Costa   ³ Data ³ 04.06.02 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Funcao para atualizacao dos saldos contabeis do ativo      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ Af251Saldo(cTipo, cSinal)                                  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ cTipo  = Tipo de movimento (Q/R)                           ³±±
±±³          ³ cSinal = + ou - (Identifica se soma ou diminui)            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Atfa251                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/

Static Function Af251Saldo(cTipo, cSinal)
Local aArea := GetArea()
// *******************************
// Controle de multiplas moedas  *
// *******************************
Local aValorMOed
Local cTpBem := SN3->N3_TIPO

aValorMOed := AtfMultMoe(,,{|x| SN3->&("N3_VORIG"+Alltrim(Str(x))) + If(x=1,SN3->N3_AMPLIA1,0) })

ATFSaldo(	SN3->N3_CCONTAB,dDataBase,cTipo,SN3->(N3_VORIG1+N3_AMPLIA1),SN3->N3_VORIG2,SN3->N3_VORIG3,;
SN3->N3_VORIG4,SN3->N3_VORIG5 ,cSinal,,SN3->N3_SUBCCON,,SN3->N3_CLVLCON,SN3->N3_CUSTBEM,"1", aValorMOed )
aValorMOed := AtfMultMoe(,,{|x| If(x=1,SN3->N3_VRCACM1,0) })

ATFSaldo(	SN3->N3_CCONTAB,dDataBase,"6", SN3->N3_VRCACM1,0,0,0,0 ,;
cSinal,,SN3->N3_SUBCCON,,SN3->N3_CLVLCON,SN3->N3_CUSTBEM,"1", aValorMOed )
aValorMOed := AtfMultMoe(,,{|x| If(x=1,SN3->N3_VRCACM1,0) })

ATFSaldo(	SN3->N3_CCORREC,dDataBase,"6", SN3->N3_VRCACM1,0,0,0,0 ,;
cSinal,,SN3->N3_SUBCCOR,,SN3->N3_CLVLCOR,SN3->N3_CCCORR,"2", aValorMOed )

aValorMOed := AtfMultMoe("SN3","N3_VRDACM")

If cTipo == "Q"
	If cTpBem $ ATFXTpBem(1)  // Fiscal
		ATFSaldo(	SN3->N3_CCDEPR, dDataBase,"4", SN3->N3_VRDACM1,SN3->N3_VRDACM2,SN3->N3_VRDACM3 ,;
		SN3->N3_VRDACM4,SN3->N3_VRDACM5, cSinal,,SN3->N3_SUBCCDE,,SN3->N3_CLVLCDE,SN3->N3_CCCDEP,"4", aValorMOed )
		//despesa de deprec
		ATFSaldo(	SN3->N3_CDEPREC, dDataBase,"4", SN3->N3_VRDACM1,SN3->N3_VRDACM2,SN3->N3_VRDACM3 ,;
		SN3->N3_VRDACM4,SN3->N3_VRDACM5, cSinal,,SN3->N3_SUBCDEP,, SN3->N3_CLVLDEP, SN3->N3_CCDESP,"3", aValorMOed )
	ElseIf cTpBem $ ATFXTpBem(2)  // gerencial
		ATFSaldo(	SN3->N3_CCDEPR, dDataBase,"Y", SN3->N3_VRDACM1,SN3->N3_VRDACM2,SN3->N3_VRDACM3 ,;
		SN3->N3_VRDACM4,SN3->N3_VRDACM5, cSinal,,SN3->N3_SUBCCDE,,SN3->N3_CLVLCDE,SN3->N3_CCCDEP,"4", aValorMOed )
		//despesa de deprec
		ATFSaldo(	SN3->N3_CDEPREC, dDataBase,"Y", SN3->N3_VRDACM1,SN3->N3_VRDACM2,SN3->N3_VRDACM3 ,;
		SN3->N3_VRDACM4,SN3->N3_VRDACM5, cSinal,,SN3->N3_SUBCDEP,, SN3->N3_CLVLDEP, SN3->N3_CCDESP,"3", aValorMOed )
	EndIf
elseIf cTipo == "R"
	If cTpBem $ ATFXTpBem(1)  // TIPO Fiscal
		ATFSaldo(	SN3->N3_CCDEPR, dDataBase,"5", SN3->N3_VRDACM1,SN3->N3_VRDACM2,SN3->N3_VRDACM3 ,;
		SN3->N3_VRDACM4,SN3->N3_VRDACM5, cSinal,,SN3->N3_SUBCCDE,,SN3->N3_CLVLCDE,SN3->N3_CCCDEP,"4", aValorMOed )
		//despesa de deprec
		ATFSaldo(	SN3->N3_CDEPREC, dDataBase,"5", SN3->N3_VRDACM1,SN3->N3_VRDACM2,SN3->N3_VRDACM3 ,;
		SN3->N3_VRDACM4,SN3->N3_VRDACM5, cSinal,,SN3->N3_SUBCDEP,, SN3->N3_CLVLDEP, SN3->N3_CCDESP,"3", aValorMOed )
	ElseIf cTpBem $ ATFXTpBem(2)  // TIPO gerencial
		// deprec acum
		ATFSaldo(	SN3->N3_CCDEPR, dDataBase,"R", SN3->N3_VRDACM1,SN3->N3_VRDACM2,SN3->N3_VRDACM3 ,;
		SN3->N3_VRDACM4,SN3->N3_VRDACM5, cSinal,,SN3->N3_SUBCCDE,,SN3->N3_CLVLCDE,SN3->N3_CCCDEP,"4", aValorMOed )
		//despesa de deprec
		ATFSaldo(	SN3->N3_CDEPREC, dDataBase,"R", SN3->N3_VRDACM1,SN3->N3_VRDACM2,SN3->N3_VRDACM3 ,;
		SN3->N3_VRDACM4,SN3->N3_VRDACM5, cSinal,,SN3->N3_SUBCDEP,, SN3->N3_CLVLDEP, SN3->N3_CCDESP,"3", aValorMOed )
	EndIf
EndIf

aValorMOed := AtfMultMoe(,,{|x| If(x=1,SN3->N3_VRCDA1,0) })

ATFSaldo(	SN3->N3_CCDEPR, dDataBase,"7", SN3->N3_VRCDA1,0,0,0,0 ,;
cSinal,,SN3->N3_SUBCCDE,,SN3->N3_CLVLCDE,SN3->N3_CCCDEP,"4", aValorMOed )
ATFSaldo(	SN3->N3_CDESP,  dDataBase,"7", SN3->N3_VRCDA1,0,0,0,0 ,;
cSinal,,SN3->N3_SUBCDES,,SN3->N3_CLVLDES,SN3->N3_CCCDES,"5", aValorMOed )

RestArea(aArea)
Return .T.

/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³Af251aHead³ Autor ³ Wagner Mobile Costa   ³ Data ³ 18.06.02 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Funcao para criacao do aHeader para uso na Rotina          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Atfa251                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function Af251aHead(lCancela)
LOCAL nX := 0
Local lAF251AHD	:= ExistBlock('AF251AHD')
Local aAF251AHD := {}
Local aOldHead	:= {}
// *******************************
// Controle de multiplas moedas  *
// *******************************
Local __nQuantas := AtfMoedas()
Local nCtaLen    := 0
Local nCCLen     := 0

AF251ChkCiap()
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Montagem da matriz aHeader											  ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
nUsado := 0

SX3->(DbSetOrder(2))

AADD(aHeader,{STR0015,"N1_CBASE","@!",TamSX3("N1_CBASE")[1],0,"","û","C","SN1" } ) // "Codigo Base"
AADD(aHeader,{STR0016,"N1_ITEM","@!",TamSX3("N1_ITEM")[1],0,"Af251ExisC()","û","C","SN1" } ) // "Item Base"
AADD(aHeader,{STR0017,"N3_TIPO","@!",TamSX3("N3_TIPO")[1],0,"AF251VLDTP(.T.)","û","C","SN3" } ) // "Tipo"

aArea:=GetArea()
SX3->(DbSetOrder(2))
SX3->(DBSEEK("N3_TIPREAV"))
AADD(aHeader,{Alltrim(X3TITULO()),"N3_TIPREAV",SX3->X3_PICTURE,;
SX3->X3_TAMANHO,SX3->X3_DECIMAL,SX3->X3_VALID,"û",SX3->X3_TIPO,"SN3" } )
RestArea(aArea)

AADD(aHeader,{STR0022,"N1_PATRIM","",; // "Classificacao"
1,0,"","û","C","SN1" } )
AADD(aHeader,{STR0018,"N3_AQUISIC","",; //  "Data Aquisic"
8,0,"AF251VLDAQ()","û","D","SN3" } )
AADD(aHeader,{STR0019,"N1_DESCRIC","@!",TamSX3("N1_DESCRIC")[1],0,"","û","C","SN1" } ) // "Descr Sintetica"

SX3->(DbSetOrder(2))
If SX3->(dbSeek("N1_GRUPO"))
	AADD(aHeader,{X3Titulo(),SX3->X3_CAMPO,AllTrim(SX3->X3_PICTURE),SX3->X3_TAMANHO,SX3->X3_DECIMAL,"ExistCpo('SNG') .AND. AF251GRUPO()","û",SX3->X3_TIPO,SX3->X3_ARQUIVO } )
EndIf
If !lCancela
	AADD(aHeader,{STR0102,'N3_PERC','@E 999.9999', 8,4,"Positivo() .and. AF251Perc(M->N3_PERC)","û",'N','SN1' } ) //'Percentual % '
EndIf

AADD(aHeader,{STR0020,"N1_QUANTD",X3Picture('N1_QUANTD'),TamSX3("N1_QUANTD")[1],4,"Positivo()","û","N","SN1" } ) //  "Quantd"
AADD(aHeader,{STR0021,"N1_CHAPA","@!",TamSX3("N1_CHAPA")[1],0,"AF251CHAPA()","û","C","SN1" } ) // "Chapa"

If !lCancela .And. lN1Ciap
	AADD(aHeader,{STR0103,'N1_CIAP',"@!",1,0,"Pertence('12')","û",'C', 'SN1' } ) //'Gera CIAP?'
	nPosGerCIAP := Len(aHeader)
EndIf

IF lN1Ciap
	SX3->(DbSetOrder(2))
	If SX3->(dbSeek("N1_ICMSAPR"))
		AADD(aHeader,{X3Titulo(),"N1_ICMSAPR",X3Picture("N1_ICMSAPR"),TamSX3("N1_ICMSAPR")[1],2,"Positivo().AND.AF251CIAP()","û","N","SN1" } ) // "Cod. CIAP"
	EndIf
	SX3->(DbSetOrder(2))
	If SX3->(dbSeek("N1_CALCPIS"))
		AADD(aHeader,{X3Titulo(),SX3->X3_CAMPO,AllTrim(SX3->X3_PICTURE),SX3->X3_TAMANHO,SX3->X3_DECIMAL,"Pertence('SN123')","û",SX3->X3_TIPO,SX3->X3_ARQUIVO } )
	EndIf
	SX3->(DbSetOrder(2))
	If SX3->(dbSeek("N1_MESCPIS"))
		AADD(aHeader,{X3Titulo(),SX3->X3_CAMPO,AllTrim(SX3->X3_PICTURE),SX3->X3_TAMANHO,SX3->X3_DECIMAL,"","û",SX3->X3_TIPO,SX3->X3_ARQUIVO } )
	EndIf
	SX3->(DbSetOrder(2))
	If SX3->(dbSeek("N1_ALIQPIS"))// Aliquota PIS
		AADD(aHeader,{X3Titulo(),SX3->X3_CAMPO,X3Picture("N1_ALIQPIS"),SX3->X3_TAMANHO,SX3->X3_DECIMAL,"Positivo()","û",SX3->X3_TIPO,SX3->X3_ARQUIVO } )
	EndIf
	SX3->(DbSetOrder(2))
	If SX3->(dbSeek("N1_CSTPIS"))// Sit.Trib.PIS
		AADD(aHeader,{X3Titulo(),SX3->X3_CAMPO,X3Picture("N1_CSTPIS"),SX3->X3_TAMANHO,SX3->X3_DECIMAL,"ExistCpo('SX5','SX'+M->N1_CSTPIS)","û",SX3->X3_TIPO,SX3->X3_ARQUIVO } )
	EndIf
	SX3->(DbSetOrder(2))
	If SX3->(dbSeek("N1_ALIQCOF"))// Aliquota COFINS
		AADD(aHeader,{X3Titulo(),SX3->X3_CAMPO,X3Picture("N1_ALIQCOF"),SX3->X3_TAMANHO,SX3->X3_DECIMAL,"Positivo()","û",SX3->X3_TIPO,SX3->X3_ARQUIVO } )
	EndIf
	SX3->(DbSetOrder(2))
	If SX3->(dbSeek("N1_CSTCOFI"))// Sit.Trib.Cof
		AADD(aHeader,{X3Titulo(),SX3->X3_CAMPO,X3Picture("N1_CSTCOFI"),SX3->X3_TAMANHO,SX3->X3_DECIMAL,"ExistCpo('SX5','SX'+M->N1_CSTCOFI)","û",SX3->X3_TIPO,SX3->X3_ARQUIVO } )
	EndIf

	//campos de origem de credito
	SX3->(DbSetOrder(2))
	If SX3->(dbSeek("N1_ORIGCRD"))// Origem Credito
		AADD(aHeader,{X3Titulo(),SX3->X3_CAMPO,X3Picture("N1_ORIGCRD"),SX3->X3_TAMANHO,SX3->X3_DECIMAL,"Pertence('01') .Or. Vazio()","û",SX3->X3_TIPO,SX3->X3_ARQUIVO } )
	EndIf

	SX3->(DbSetOrder(2))
	If SX3->(dbSeek("N1_CODBCC"))// Cod Bc Cred
		AADD(aHeader,{X3Titulo(),SX3->X3_CAMPO,X3Picture("N1_CODBCC"),SX3->X3_TAMANHO,SX3->X3_DECIMAL,"Vazio() .Or. ExistCpo('SX5','MZ'+M->N1_CODBCC)","û",SX3->X3_TIPO,SX3->X3_ARQUIVO  } )
	EndIf

	SX3->(DbSetOrder(2))
	If SX3->(dbSeek("N1_CBCPIS"))// Base Pis/Cofins
		AADD(aHeader,{X3Titulo(),SX3->X3_CAMPO,X3Picture("N1_CBCPIS"),SX3->X3_TAMANHO,SX3->X3_DECIMAL,"","û",SX3->X3_TIPO,SX3->X3_ARQUIVO } )
	EndIf


ENDIF

aArea:=GetArea()
SX3->(DbSetOrder(2))
SX3->(DBSEEK("N1_CONSAB"))
AADD(aHeader,{Alltrim(X3TITULO()),"N1_CONSAB",SX3->X3_PICTURE,; // "Codigo Base"
SX3->X3_TAMANHO,SX3->X3_DECIMAL,SX3->X3_VALID,"û",SX3->X3_TIPO,"SN1" } )
RestArea(aArea)

AADD(aHeader,{STR0023,"N3_HISTOR","@!",; // "Historico"
40,0,"","û","C","SN3" } )

aArea:=GetArea()
SX3->(DbSetOrder(2))
SX3->(DBSEEK("N3_TPSALDO"))
AADD(aHeader,{Alltrim(X3TITULO()),"N3_TPSALDO",SX3->X3_PICTURE,; // "Codigo Base"
SX3->X3_TAMANHO,SX3->X3_DECIMAL,SX3->X3_VALID,"û",SX3->X3_TIPO,"SN3" } )
RestArea(aArea)

nCtaLen := SN3->(TamSx3("N3_CCONTAB")[1])
nCCLen  := SN3->(TamSx3("N3_CUSTBEM")[1])

AADD(aHeader,{STR0024,"N3_CCONTAB","@!",; // "Conta"
nCtaLen,0,"Vazio() .Or. Ctb105CTA()","û","C","SN3" } )

AADD(aHeader,{STR0025,"N3_CUSTBEM","@!",; // "C.Custo do Bem"
nCCLen,0,"Vazio() .Or. Ctb105CC()","û","C","SN3" } )

AADD(aHeader,{STR0026,"N3_CDEPREC","@!",; // "Cta Desp Dep"
nCtaLen,0,"Vazio() .Or. Ctb105CTA()","û","C","SN3" } )

AADD(aHeader,{STR0027,"N3_CCUSTO","@!",; // "C Custo"
nCCLen,0,"Vazio() .Or. Ctb105CC()","û","C","SN3" } )

AADD(aHeader,{STR0028,"N3_CCDEPR","@!",; // "Cta Dep Acum"
nCtaLen,0,"Vazio() .Or. Ctb105CTA()","û","C","SN3" } )

AADD(aHeader,{STR0029,"N3_CDESP","@!",; // "Cta Cor Depr"
nCtaLen,0,"Vazio() .Or. Ctb105CTA()","û","C","SN3" } )

AADD(aHeader,{STR0030,"N3_CCORREC","@!",; // "Cta Correc"
nCtaLen,0,"Vazio() .Or. Ctb105CTA()","û","C","SN3" } )

AADD(aHeader,{STR0180,"N3_CCCORR","@!",; // "Cc Correcao"
nCCLen,0,"Vazio() .Or. Ctb105CC()","û","C","SN3" } )

AADD(aHeader,{STR0181,"N3_CCDESP","@!",; // "Cc Des Depr"
nCCLen,0,"Vazio() .Or. Ctb105CC()","û","C","SN3" } )

AADD(aHeader,{STR0182,"N3_CCCDEP","@!",; // "Cc Depr Ac"
nCCLen,0,"Vazio() .Or. Ctb105CC()","û","C","SN3" } )

AADD(aHeader,{STR0183,"N3_CCCDES", "@!",; // "Cc Cor Dep"
nCCLen,0,"Vazio() .Or. Ctb105CC()","û","C","SN3" } )

AADD(aHeader,{STR0031,"N3_DINDEPR","",; // "Dta Inicio Dep"
08,0,"","û","D","SN3" } )

// *******************************
// Controle de multiplas moedas  *
// *******************************
For nX := 1 to  __nQuantas
	cMoed := Alltrim(Str(nX))
	AADD(aHeader,{StrTran(STR0032,"1",cMoed),"N3_VORIG"+cMoed, AllTrim(x3Picture("N3_VORIG"+cMoed)),; // "Val Orig M1"
	16,TamSx3("N3_VORIG"+cMoed)[2],"Af251calcV()","û","N","SN3" } )
	If nX>9
		AADD(aHeader,{StrTran(STR0033,"1",cMoed),"N3_TXDEP"+cMoed,AllTrim(x3Picture("N3_TXDEP"+cMoed)),; // "Tx Anual Dep M1"   --"@E 999.9999"
		08,TamSx3("N3_TXDEP"+cMoed)[2],"Af251TxDep()","û","N","SN3" } )
		AADD(aHeader,{StrTran(STR0042,"1",cMoed),"N3_VRDAC"+cMoed,AllTrim(x3Picture("N3_VRDAC"+cMoed)),; // "Dep Acum M1"  -"@E 9,999,999,999.99"
		16,TamSx3("N3_VRDAC"+cMoed)[2],"","û","N","SN3" } )
	Else
		AADD(aHeader,{StrTran(STR0033,"1",cMoed),"N3_TXDEPR"+cMoed,AllTrim(x3Picture("N3_TXDEPR"+cMoed)),; // "Tx Anual Dep M1"  --"@E 999.9999"
		08,TamSx3("N3_TXDEPR"+cMoed)[2],"Af251TxDep()","û","N","SN3" } )
		AADD(aHeader,{StrTran(STR0042,"1",cMoed),"N3_VRDACM"+cMoed,AllTrim(x3Picture("N3_VRDACM"+cMoed)),; // "Dep Acum M1"  --"@E 9,999,999,999.99"
		16,TamSx3("N3_VRDACM"+cMoed)[2],"","û","N","SN3" } )
	EndIf
Next

AADD(aHeader,{STR0047,"N3_VRCACM1",AllTrim(x3Picture("N3_VRCACM1")),; // "Cor Acum M1"
16,TamSx3("N3_VRDACM1")[2],"","û","N","SN3" } )
AADD(aHeader,{STR0048,"N3_VRCDA1",AllTrim(x3Picture("N3_VRCDA1")),; // "Cor Dep Acum M1"
14,TamSx3("N3_VRCDA1")[2],"","û","N","SN3" } )

aArea:=GetArea()
SX3->(DbSetOrder(2))
SX3->(DBSEEK("N3_TPDEPR"))
AADD(aHeader,{Alltrim(X3TITULO()),"N3_TPDEPR",SX3->X3_PICTURE,;
SX3->X3_TAMANHO,SX3->X3_DECIMAL,SX3->X3_VALID,"û",SX3->X3_TIPO,"SN3" } )
RestArea(aArea)

aArea:=GetArea()
SX3->(DbSetOrder(2))
SX3->(DBSEEK("N3_PERDEPR"))
AADD(aHeader,{Alltrim(X3TITULO()),"N3_PERDEPR",SX3->X3_PICTURE,;
SX3->X3_TAMANHO,SX3->X3_DECIMAL,SX3->X3_VALID,"û",SX3->X3_TIPO,"SN3" } )
RestArea(aArea)

aArea:=GetArea()
SX3->(DbSetOrder(2))
SX3->(DBSEEK("N3_CRIDEPR"))
AADD(aHeader,{Alltrim(X3TITULO()),"N3_CRIDEPR",SX3->X3_PICTURE,;
SX3->X3_TAMANHO,SX3->X3_DECIMAL,SX3->X3_VALID,"û",SX3->X3_TIPO,"SN3" } )
RestArea(aArea)

aArea:=GetArea()
SX3->(DbSetOrder(2))
SX3->(DBSEEK("N3_CALDEPR"))
AADD(aHeader,{Alltrim(X3TITULO()),"N3_CALDEPR",SX3->X3_PICTURE,;
SX3->X3_TAMANHO,SX3->X3_DECIMAL,SX3->X3_VALID,"û",SX3->X3_TIPO,"SN3" } )
RestArea(aArea)

aArea:=GetArea()
SX3->(DbSetOrder(2))
SX3->(DBSEEK("N3_VMXDEPR"))
AADD(aHeader,{Alltrim(X3TITULO()),"N3_VMXDEPR",SX3->X3_PICTURE,;
SX3->X3_TAMANHO,SX3->X3_DECIMAL,SX3->X3_VALID,"û",SX3->X3_TIPO,"SN3" } )
RestArea(aArea)

aArea:=GetArea()
SX3->(DbSetOrder(2))
SX3->(DBSEEK("N3_VLSALV1"))
AADD(aHeader,{Alltrim(X3TITULO()),"N3_VLSALV1",SX3->X3_PICTURE,;
SX3->X3_TAMANHO,SX3->X3_DECIMAL,SX3->X3_VALID,"û",SX3->X3_TIPO,"SN3" } )
RestArea(aArea)

aArea:=GetArea()
SX3->(DbSetOrder(2))
SX3->(DBSEEK("N3_PRODANO"))
AADD(aHeader,{Alltrim(X3TITULO()),"N3_PRODANO",SX3->X3_PICTURE,;
SX3->X3_TAMANHO,SX3->X3_DECIMAL,SX3->X3_VALID,"û",SX3->X3_TIPO,"SN3" } )
RestArea(aArea)

aArea:=GetArea()
SX3->(DbSetOrder(2))
SX3->(DBSEEK("N3_PRODMES"))
AADD(aHeader,{Alltrim(X3TITULO()),"N3_PRODMES",SX3->X3_PICTURE,;
SX3->X3_TAMANHO,SX3->X3_DECIMAL,SX3->X3_VALID,"û",SX3->X3_TIPO,"SN3" } )
RestArea(aArea)

aArea:=GetArea()
SX3->(DbSetOrder(2))
SX3->(DBSEEK("N3_PRODACM"))
AADD(aHeader,{Alltrim(X3TITULO()),"N3_PRODACM",SX3->X3_PICTURE,;
SX3->X3_TAMANHO,SX3->X3_DECIMAL,SX3->X3_VALID,"û",SX3->X3_TIPO,"SN3" } )
RestArea(aArea)

If cPaisLoc == 'PTG'
	aArea:=GetArea()
	SX3->(DbSetOrder(2))
	SX3->(DBSEEK("N3_COEFICI"))
	AADD(aHeader,{Alltrim(X3TITULO()),"N3_COEFICI",SX3->X3_PICTURE,;
	SX3->X3_TAMANHO,SX3->X3_DECIMAL,SX3->X3_VALID,"û",SX3->X3_TIPO,"SN3" } )
	RestArea(aArea)

	aArea:=GetArea()
	SX3->(DbSetOrder(2))
	SX3->(DBSEEK("N3_CTXPERD"))
	AADD(aHeader,{Alltrim(X3TITULO()),"N3_CTXPERD",SX3->X3_PICTURE,;
	SX3->X3_TAMANHO,SX3->X3_DECIMAL,SX3->X3_VALID,"û",SX3->X3_TIPO,"SN3" } )
	RestArea(aArea)

	aArea:=GetArea()
	SX3->(DbSetOrder(2))
	SX3->(DBSEEK("N3_VLACTXP"))
	AADD(aHeader,{Alltrim(X3TITULO()),"N3_VLACTXP",SX3->X3_PICTURE,;
	SX3->X3_TAMANHO,SX3->X3_DECIMAL,SX3->X3_VALID,"û",SX3->X3_TIPO,"SN3" } )
	RestArea(aArea)
EndIf

AADD(aHeader,{STR0052,"N3_SUBCCON","@!",; // "Item do Bem"
Len(SN3->N3_SUBCCON),0,"ExistCpo('CTD')","û","C","SN3" } )
AADD(aHeader,{STR0053,"N3_SUBCCOR","@!",; // "Item Cor Bem"
Len(SN3->N3_SUBCCOR),0,"ExistCpo('CTD')","û","C","SN3" } )
AADD(aHeader,{STR0054,"N3_SUBCDEP","@!",; // "Item Des Dep"
Len(SN3->N3_SUBCDEP),0,"ExistCpo('CTD')","û","C","SN3" } )
AADD(aHeader,{STR0055,"N3_SUBCDES","@!",; // "Item Cor Dep"
Len(SN3->N3_SUBCDES),0,"ExistCpo('CTD')","û","C","SN3" } )
AADD(aHeader,{STR0056,"N3_SUBCCDE","@!",; // "Item Dep Acu"
Len(SN3->N3_SUBCCDE),0,"ExistCpo('CTD')","û","C","SN3" } )
AADD(aHeader,{STR0059,"N3_CLVLCON","@!",; // "Clvl do Bem"
Len(SN3->N3_CLVLCON),0,"ExistCpo('CTH')","û","C","SN3" } )
AADD(aHeader,{STR0060,"N3_CLVLCOR","@!",; // "Clvl Cor Bem"
Len(SN3->N3_CLVLCOR),0,"ExistCpo('CTH')","û","C","SN3" } )
AADD(aHeader,{STR0061,"N3_CLVLDEP","@!",; // "Clvl Des Dep"
Len(SN3->N3_CLVLDEP),0,"ExistCpo('CTH')","û","C","SN3" } )
AADD(aHeader,{STR0062,"N3_CLVLDES","@!",; // "Clvl Cor Dep"
Len(SN3->N3_CLVLDES),0,"ExistCpo('CTH')","û","C","SN3" } )
AADD(aHeader,{STR0063,"N3_CLVLCDE","@!",; // "Clvl Dep Acu"
Len(SN3->N3_CLVLCDE),0,"ExistCpo('CTH')","û","C","SN3" } )

aArea:=GetArea()
SX3->(DbSetOrder(2))
SX3->(DBSEEK("N3_CODIND"))
AADD(aHeader,{Alltrim(X3TITULO()),"N3_CODIND",SX3->X3_PICTURE,;
SX3->X3_TAMANHO,SX3->X3_DECIMAL,SX3->X3_VALID,"û",SX3->X3_TIPO,"SN3" } )
RestArea(aArea)

SX3->(DbSetOrder(2))
If SX3->(dbSeek("N1_FORNEC"))
	AADD(aHeader,{X3Titulo(),SX3->X3_CAMPO,AllTrim(SX3->X3_PICTURE),SX3->X3_TAMANHO,SX3->X3_DECIMAL,"","û",SX3->X3_TIPO,SX3->X3_ARQUIVO } )
EndIf
SX3->(DbSetOrder(2))
If SX3->(dbSeek("N1_LOJA"))
	AADD(aHeader,{X3Titulo(),SX3->X3_CAMPO,AllTrim(SX3->X3_PICTURE),SX3->X3_TAMANHO,SX3->X3_DECIMAL,"","û",SX3->X3_TIPO,SX3->X3_ARQUIVO } )
EndIf
SX3->(DbSetOrder(2))
If SX3->(dbSeek(SerieNfId("SN1",3,"N1_NSERIE")))
	AADD(aHeader,{X3Titulo(),SX3->X3_CAMPO,AllTrim(SX3->X3_PICTURE),SX3->X3_TAMANHO,SX3->X3_DECIMAL,"","û",SX3->X3_TIPO,SX3->X3_ARQUIVO } )
EndIf
SX3->(DbSetOrder(2))
If SX3->(dbSeek("N1_NFISCAL"))
	AADD(aHeader,{X3Titulo(),SX3->X3_CAMPO,AllTrim(SX3->X3_PICTURE),SX3->X3_TAMANHO,SX3->X3_DECIMAL,"","û",SX3->X3_TIPO,SX3->X3_ARQUIVO } )
EndIf

SX3->(DbSeek("SN3_FILIAL"))

cUsado := SX3->X3_USADO

If lAF251AHD
	aOldHead := aClone(aHeader)
	aAF251AHD := ExecBlock('AF251AHD', .F., .F., aClone(aHeader) )
	aHeader := aClone( aOldHead )
	If ValType( aAF251AHD ) == 'A'
		For nX := 1 To Len( aAF251AHD )
			If Len( aAF251AHD[nX] ) == 9 .and.	ValType( aAF251AHD[nX][1] ) == 'C' .and. ValType( aAF251AHD[nX][2] ) == 'C' .and.;
				ValType( aAF251AHD[nX][3] ) == 'C' .and. ValType( aAF251AHD[nX][4] ) == 'N' .and. ValType( aAF251AHD[nX][5] ) == 'N' .and.;
				ValType( aAF251AHD[nX][6] ) == 'C' .and. ValType( aAF251AHD[nX][7] ) == 'C' .and. ValType( aAF251AHD[nX][8] ) == 'C' .and.;
				ValType( aAF251AHD[nX][9] ) == 'C' .and. aScan( aHeader, {|aHd| aHd[2] == aAF251AHD[nX][2]} ) == 0

				Aadd( aHeader, aClone(aAF251AHD[nX]) )
			EndIf
		Next nX
	EndIf
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ ADICAO DOS CAMPOS OBRIGATORIOS DO SN1 / SN3 NO AHEADER       ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
SX3->(DbSetOrder(1))
SX3->(DbSeek("SN1"))
WHILE SX3->(!EOF()) .AND. SX3->X3_ARQUIVO == "SN1"

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ CAMPOS QUE NAO DEVEM SER ADICIONADOS POR POSSUIREM TRATAMENTO³
	//³ ESPECIFICOS                                                  ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	IF ALLTRIM(SX3->X3_CAMPO) $ "N1_AQUISIC" .or. ALLTRIM(SX3->X3_CAMPO) $ "N1_OK"
		SX3->(DbSkip())
		Loop
	ENDIF
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ VERIFICA SE NAO EXISTE NO AHEADER MAS E OBRIGATORIO          ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	IF aScan(aHeader,{|x| ALLTRIM(x[2]) == ALLTRIM(SX3->X3_CAMPO)}) == 0 .AND. X3Obrigat(SX3->X3_CAMPO)
		AADD(aHeader,{X3Titulo(),SX3->X3_CAMPO,AllTrim(SX3->X3_PICTURE),SX3->X3_TAMANHO,SX3->X3_DECIMAL,"","û",SX3->X3_TIPO,SX3->X3_ARQUIVO } )
	ENDIF

	SX3->(DbSkip())
END

SX3->(DbSetOrder(1))
SX3->(DbSeek("SN3"))
WHILE SX3->(!EOF()) .AND. SX3->X3_ARQUIVO == "SN3"

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ CAMPOS QUE NAO DEVEM SER ADICIONADOS POR POSSUIREM TRATAMENTO³
	//³ ESPECIFICOS                                                  ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	IF ALLTRIM(SX3->X3_CAMPO) $ "N3_CBASE#N3_ITEM"
		SX3->(DbSkip())
		Loop
	ENDIF

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ VERIFICA SE NAO EXISTE NO AHEADER MAS E OBRIGATORIO          ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	IF aScan(aHeader,{|x| ALLTRIM(x[2]) == ALLTRIM(SX3->X3_CAMPO)}) == 0 .AND. X3Obrigat(SX3->X3_CAMPO)
		AADD(aHeader,{X3Titulo(),SX3->X3_CAMPO,AllTrim(SX3->X3_PICTURE),SX3->X3_TAMANHO,SX3->X3_DECIMAL,"","û",SX3->X3_TIPO,SX3->X3_ARQUIVO } )
	ENDIF

	SX3->(DbSkip())
END

//Criaçao das Entidades Adicionais.
//Antes nao eram criadas no aheader e ao preencher o grupo nao era preenchido.
SX3->(DbSetOrder(2))
If SX3->(dbSeek("N3_EC05DB"))
	AADD(aHeader,{X3Titulo(),SX3->X3_CAMPO,AllTrim(SX3->X3_PICTURE),SX3->X3_TAMANHO,SX3->X3_DECIMAL,SX3->X3_VALID,"û",SX3->X3_TIPO,SX3->X3_ARQUIVO } )
EndIf

If SX3->(dbSeek("N3_EC05CR"))
	AADD(aHeader,{X3Titulo(),SX3->X3_CAMPO,AllTrim(SX3->X3_PICTURE),SX3->X3_TAMANHO,SX3->X3_DECIMAL,SX3->X3_VALID,"û",SX3->X3_TIPO,SX3->X3_ARQUIVO } )
EndIf

If SX3->(dbSeek("N3_EC06DB"))
	AADD(aHeader,{X3Titulo(),SX3->X3_CAMPO,AllTrim(SX3->X3_PICTURE),SX3->X3_TAMANHO,SX3->X3_DECIMAL,SX3->X3_VALID,"û",SX3->X3_TIPO,SX3->X3_ARQUIVO } )
EndIf

If SX3->(dbSeek("N3_EC06CR"))
	AADD(aHeader,{X3Titulo(),SX3->X3_CAMPO,AllTrim(SX3->X3_PICTURE),SX3->X3_TAMANHO,SX3->X3_DECIMAL,SX3->X3_VALID,"û",SX3->X3_TIPO,SX3->X3_ARQUIVO } )
EndIf

If SX3->(dbSeek("N3_EC07DB"))
	AADD(aHeader,{X3Titulo(),SX3->X3_CAMPO,AllTrim(SX3->X3_PICTURE),SX3->X3_TAMANHO,SX3->X3_DECIMAL,SX3->X3_VALID,"û",SX3->X3_TIPO,SX3->X3_ARQUIVO } )
EndIf

If SX3->(dbSeek("N3_EC07CR"))
	AADD(aHeader,{X3Titulo(),SX3->X3_CAMPO,AllTrim(SX3->X3_PICTURE),SX3->X3_TAMANHO,SX3->X3_DECIMAL,SX3->X3_VALID,"û",SX3->X3_TIPO,SX3->X3_ARQUIVO } )
EndIf

If SX3->(dbSeek("N3_EC08DB"))
	AADD(aHeader,{X3Titulo(),SX3->X3_CAMPO,AllTrim(SX3->X3_PICTURE),SX3->X3_TAMANHO,SX3->X3_DECIMAL,SX3->X3_VALID,"û",SX3->X3_TIPO,SX3->X3_ARQUIVO } )
EndIf

If SX3->(dbSeek("N3_EC08CR"))
	AADD(aHeader,{X3Titulo(),SX3->X3_CAMPO,AllTrim(SX3->X3_PICTURE),SX3->X3_TAMANHO,SX3->X3_DECIMAL,SX3->X3_VALID,"û",SX3->X3_TIPO,SX3->X3_ARQUIVO } )
EndIf

If SX3->(dbSeek("N3_EC09DB"))
	AADD(aHeader,{X3Titulo(),SX3->X3_CAMPO,AllTrim(SX3->X3_PICTURE),SX3->X3_TAMANHO,SX3->X3_DECIMAL,SX3->X3_VALID,"û",SX3->X3_TIPO,SX3->X3_ARQUIVO } )
EndIf

If SX3->(dbSeek("N3_EC09CR"))
	AADD(aHeader,{X3Titulo(),SX3->X3_CAMPO,AllTrim(SX3->X3_PICTURE),SX3->X3_TAMANHO,SX3->X3_DECIMAL,SX3->X3_VALID,"û",SX3->X3_TIPO,SX3->X3_ARQUIVO } )
EndIf

nUsado := Len(aHeader)
SX3->(DbSetOrder(1))
Return

/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³Af251DelSn4³ Autor ³ Wagner Mobile Costa  ³ Data ³ 19.06.02 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Funcao para delecao dos registros da chave atual SN3 X SN4 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ Af251Del(cChave, cRateio)                                  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ cChave  = Chave de busca na tabela de movimentos           ³±±
±±³          ³ cRateio = Codigo do rateio de ligacao entre gerado/gerador ³±±
±±³          ³ nQtdBai = Variavel para retorno da quantidade no SN1       ³±±
±±³          ³ aOcorr  = Tipos de ocorrencias para delecao de movimento   ³±±
±±³          ³ lDelSld = Indica se movimenta saldos contabeis pelo mov.   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Atfa251                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/

Function Af251DelSn4(cChave, cRateio, nQtdBai, aOcorr, lDelSld)

Local aValorMOed

DEFAULT aOcorr  := { "15", "01" }
DEFAULT lDelSld := .F.

dbSelectArea("SN4")
dbSetOrder(1)
dbSeek(cChave)		// A chave recebida ja tem a filial

While !Eof() .And. cChave==(SN4->N4_FILIAL+SN4->N4_CBASE+SN4->N4_ITEM+SN4->N4_TIPO+DTOS(SN4->N4_DATA))
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Procura pelo movimento de Baixa do valor do bem .       ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

	If 	SN4->N4_OCORR=aOcorr[1] .AND. SN4->N4_SEQ==SN3->N3_SEQ .And.;
		SN4->N4_CODBAIX==cRateio
		nQtdBai := SN4->N4_QUANTD

		If lDelSld
			aValorMOed := AtfMultMoe("SN4","N4_VLROC")
			If SN4->N4_OCORR == "09" //Ampliação
				AtfSaldo(	SN4->N4_CONTA,SN4->N4_DATA,"2", SN4->N4_VLROC1,SN4->N4_VLROC2,SN4->N4_VLROC3,SN4->N4_VLROC4,SN4->N4_VLROC5 ,;
				"-",SN4->N4_TXDEPR, SN4->N4_SUBCTA,, SN4->N4_CLVL, SN4->N4_CCUSTO,SN4->N4_TIPOCNT, aValorMOed )
			Else
				AtfSaldo(	SN4->N4_CONTA,SN4->N4_DATA,"5", SN4->N4_VLROC1,SN4->N4_VLROC2,SN4->N4_VLROC3,SN4->N4_VLROC4,SN4->N4_VLROC5 ,;
				"-",SN4->N4_TXDEPR, SN4->N4_SUBCTA,, SN4->N4_CLVL, SN4->N4_CCUSTO,SN4->N4_TIPOCNT, aValorMOed )
			EndIF
		Endif

		Reclock("SN4",.f.,.T.)
		dbDelete()
		FkCommit()
		MsUnlock()
	Endif

	// 01 = Baixa via rotina de adiantamento
	If (SN4->N4_OCORR == aOcorr[2] .Or. (Len(aOcorr)>2 .And. SN4->N4_OCORR == aOcorr[3])) .And.;
		SN4->N4_SEQ == SN3->N3_SEQ .And.;
		SN4->N4_CODBAIX==cRateio
		nQtdBai := SN4->N4_QUANTD

		If lDelSld
			aValorMOed := AtfMultMoe("SN4","N4_VLROC")
			AtfSaldo(	SN4->N4_CONTA,SN4->N4_DATA,If(!Empty(SN4->N4_MOTIVO), "5", "1"), SN4->N4_VLROC1,SN4->N4_VLROC2,SN4->N4_VLROC3,SN4->N4_VLROC4,SN4->N4_VLROC5 ,;
			"-",SN4->N4_TXDEPR, SN4->N4_SUBCTA,,SN4->N4_CLVL, SN4->N4_CCUSTO,SN4->N4_TIPOCNT, aValorMOed )
		Endif

		Reclock("SN4",.f.,.T.)
		dbDelete()
		FkCommit()
		MsUnlock()
	Endif

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Procura pelo movimento de DEPRECIA€ŽO do bem.           ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If SN4->N4_OCORR=="06" .AND. SN4->N4_SEQ==SN3->N3_SEQ .And. SN4->N4_CODBAIX==cRateio

		If lDelSld
			aValorMOed := AtfMultMoe("SN4","N4_VLROC")

			AtfSaldo(	SN4->N4_CONTA,SN4->N4_DATA,"4", SN4->N4_VLROC1,SN4->N4_VLROC2,SN4->N4_VLROC3,SN4->N4_VLROC4,SN4->N4_VLROC5 ,;
			"-",SN4->N4_TXDEPR, SN4->N4_SUBCTA,, SN4->N4_CLVL, SN4->N4_CCUSTO,SN4->N4_TIPOCNT, aValorMOed )

			// Variaveis para atualizacao do SN3

			If SN4->N4_TIPOCNT = "4"

				AtfMultMoe(,,{|x| aVrdMes[x] += SN4->&("N4_VLROC"+Alltrim(Str(x))) * (-1) })
				AtfMultMoe(,,{|x| aVrdBal[x] += aVrdMes[x] })
				AtfMultMoe(,,{|x| aVrdAcm[x] += aVrdMes[x] })

			EndIf
		Endif

		Reclock("SN4",.f.,.T.)
		dbDelete()
		FkCommit()
		msUnlock()
	Endif

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Procura pelo movimento de CORRE€ŽO da DEPREC ACUMULADA. ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If SN4->N4_OCORR=="08" .AND. SN4->N4_SEQ==SN3->N3_SEQ .And. SN4->N4_CODBAIX==cRateio

		If lDelSld .And. SN4->N4_TIPOCNT = "4"

			aValorMOed := AtfMultMoe("SN4","N4_VLROC")

			AtfSaldo(	SN4->N4_CONTA,SN4->N4_DATA,"7", SN4->N4_VLROC1,SN4->N4_VLROC2,SN4->N4_VLROC3,SN4->N4_VLROC4,SN4->N4_VLROC5 ,;
			"-",SN4->N4_TXDEPR, SN4->N4_SUBCTA,, SN4->N4_CLVL, SN4->N4_CCUSTO,SN4->N4_TIPOCNT, aValorMOed )

			// Variaveis para atualizacao do SN3

			If SN4->N4_TIPOCNT = "4"
				nVrcdM1 += SN4->N4_VLROC1 * (-1)
				nVrcdB1 += nVrcdM1
				nVrcdA1 += nVrcdM1
			Endif
		Endif

		Reclock("SN4",.f.,.T.)
		dbDelete()
		FkCommit()
		msUnlock()
	Endif
	dbSkip()
EndDo

Return .T.

/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³AF251VLDNM ³ Autor ³ Arnaldo Raymundo Jr. ³ Data ³ 22.05.07 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Avalia se existe o indice adequado no SIX para obtencao da ³±±
±±³          ³ numeracao sequencial adequada para a baixa.                ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ AF251VLDNUM()                                              ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Atfa251                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
FUNCTION AF251VLDNM(cOrdem)
Local lRet		:= .F.
Local aArea 	:= GetArea()
Local cChave	:= "N3_FILIAL+N3_CODBAIX+N3_CBASE+N3_ITEM+N3_TIPO+N3_SEQ"
Local cEOL		:= CHR(10)+CHR(13)

cOrdem 		:= IIF(Valtype(cOrdem) == "U" .OR. Empty(cOrdem),"8",cOrdem) // "N3_FILIAL+N3_CODBAIX+N3_CBASE+N3_ITEM+N3_TIPO+N3_SEQ"

dbSelectArea("SIX")
dbSetOrder(1)
IF DbSeek("SN3"+cOrdem) .AND. Alltrim(SIX->CHAVE) $ cChave
	lRet := .T.
ELSE
	MsgStop(STR0065+cEOL+STR0066,STR0067)
ENDIF

RestArea(aArea)
RETURN lRet

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³TudOk     ºAutor  ³Erica Casale        º Data ³  31/05/08   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Se Portugal, solicita o cod. do diario p/ contabilizacao   º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ AP                                                         º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function TudOk()
Local nOpca := 1
If cPaisLoc == "PTG"
	cCodDiario := CTBAVerDia()
	If Empty(cCodDiario)
		nOpca := 0
		Return nOpca
	EndIf
EndIf
Return nOpca

/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³AF251RATINF³ Autor ³ Evaldo V. Batista    ³ Data ³ 13.08.08 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Carrega das informações nos arrays de controle aAF251IMP e ³±±
±±³          ³ aAF251DESC                                                 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ AF251RatInf(aAF251IMP, aAF251DOri)                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Atfa251                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function AF251RatInf(aAF251IMP, aAF251DOri, lDetail)
Local nRegSn3	:= SN3->( Recno() )
Local nPosImp	:= 0
Local aRetImp	:= {}
Local nA		:= 0
Local nTamDesc	:= TamSx3('N2_HISTOR')[1]
Local lRet		:= .T.
Local cBase		:= ""
Local aAreaSx3	:= SN3->(GetArea())

Default lDetail := .F.

SN1->( dbSetOrder( 1 ) ) //N1_FILIAL+N1_CBASE+N1_ITEM

//OBS: Estou considerando o filtro da tabela SN3
SN3->( dbGoTop() ) //
While !SN3->( Eof() )
	If SN3->N3_OK == cMarca
		If SN1->( dbSeek( xFilial('SN1') + SN3->(N3_CBASE+N3_ITEM), .F. ))

			IF lN1Ciap .And. cPaisLoc == "BRA"
				//Tratamento para ICMS
				nPosImp := aScan( aAF251Imp, {|Imp|	Imp[1] == 'ICMS' .and.;
				Imp[2] == SN1->N1_CALCPIS .and.;
				Imp[3] == SN1->N1_MESCPIS .and.;
				Imp[4] == !Empty(SN1->N1_CODCIAP) } )
				If nPosImp == 0
				//Se a aquisição por trasnferência for oriunda do "Outras Opções >>Detalhe a posição[6] do array aAF251imp deve ser o valor total, pois a rotina só permite o rateio de 100% do ativo"
					If lDetail
						aAdd( aAF251imp, {'ICMS', SN1->N1_CALCPIS, SN1->N1_MESCPIS, !Empty(AllTrim(SN1->N1_CODCIAP)), SN1->N1_ICMSAPR, SN1->N1_ICMSAPR } )
					Else
						If Empty(SN1->N1_CODCIAP) .And. At251CTE(SN1->N1_NFISCAL,SN1->N1_NSERIE,SN1->N1_FORNEC,SN1->N1_LOJA)
							aAdd( aAF251imp, {'ICMS(CTE)', SN1->N1_CALCPIS, SN1->N1_MESCPIS, !Empty(AllTrim(SN1->N1_CODCIAP)), SN1->N1_ICMSAPR, 0 } )
						Else
							aAdd( aAF251imp, {'ICMS', SN1->N1_CALCPIS, SN1->N1_MESCPIS, !Empty(AllTrim(SN1->N1_CODCIAP)), SN1->N1_ICMSAPR, 0 } )
						EndIf
					EndIf
					cBase := SN3->(N3_CBASE+N3_ITEM)
				Else
		  			//Verifica se e o mesmo ativo com tipo diferente
		  			//para não duplicar o valor de ICMS
		  			If SN3->(N3_CBASE+N3_ITEM) <> cBase
						aAF251Imp[nPosImp][5] += SN1->N1_ICMSAPR
						cBase := SN3->(N3_CBASE+N3_ITEM)
					EndIf
				EndIf
			Endif
		EndIf

		//Tratamento para Descricao Estendida
		If SN2->( dbSeek( SN3->(N3_FILIAL+N3_CBASE+N3_ITEM+N3_TIPO), .T. ) )
			Aadd( aAF251DOri, {SN3->N3_CBASE, SN3->N3_ITEM, SN3->N3_TIPO, SN3->N3_SEQ, SN3->(Recno()), {},0} )
			While !SN2->( Eof() ) .and. SN2->(N2_FILIAL+N2_CBASE+N2_ITEM+N2_TIPO) == SN3->(N3_FILIAL+N3_CBASE+N3_ITEM+N3_TIPO)
				If SN2->N2_SEQ == SN3->N3_SEQ
					Aadd( aAF251DOri[Len(aAF251DOri),6], {SN2->N2_SEQUENC, Substr(SN2->N2_HISTOR,1,nTamDesc)} )
				EndIf
				SN2->( dbSkip() )
			EndDo
		EndIf

	EndIf
	SN3->( dbSkip() )
EndDo
SN3->( dbGoTo(nRegSN3) )

If Len( aAF251DOri ) == 0
	Aadd( aAF251DOri, {"", "", "", "", 0, {},0} )
	If Mv_Par05==2
		aAF251DOri := {}
		lRet := .F.
		Help(" ", 1, 'AF251DESCEST',, STR0108+CRLF+STR0109+CRLF+STR0110+CRLF+STR0111, 1, 0) //'Não existe [Descrição Estendida] para '###'nenhum dos bens selecionados.'###'Retorne ao inicio e defina DESCONSIDERA '###'para a pergunta [Descriçaõ estendida]'
	EndIf
EndIf
//Ponto de entrada para tratamento de outros impostos alem do ICMS
If ExistBlock('AF251RIMP')
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Devera ser retornado um array com as mesmas dimensoes e tipos de valores³
	//³que o array aAF251Imp pelo ponto de entrada.                            ³
	//³Cada linha valida retornada sera acrescentada no array aAF251Imp        ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³OBS: passo o array aAF251Imp para que seja possivel verificar os impostos ja coletados.³
	//³pois e provavel que sera tratados novos impostos pelo padrao (PIS e COFINS).           ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	aRetImp := ExecBlock( 'AF251RIMP', .F., .F., aClone(aAF251Imp) )
	If ValType( aRetImp ) == 'A'
		For nA := 1 To Len( aRetImp )
			// Verifica se todos os tipos de dados estao corretos e se ja
			// nao existe a mesma linha retornada no array aAF251Imp
			If 	Len( aRetImp[nA] ) == 6 .and.;
				ValType(aRetImp[nA,1]) == 'C' .and.;
				ValType(aRetImp[nA,2]) == 'C' .and.;
				ValType(aRetImp[nA,3]) == 'N' .and.;
				ValType(aRetImp[nA,4]) == 'L' .and.;
				ValType(aRetImp[nA,5]) == 'N' .and.;
				ValType(aRetImp[nA,6]) == 'N' .and.;
				!('ICMS' $ Upper(aRetImp[nA,1]) )
				nPosImp :=  aScan( aAF251Imp, {|Imp| 	Imp[1] == aRetImp[nA,1] .and. Imp[2] == aRetImp[nA,2] .and.;
				Imp[3] == aRetImp[nA,3] .and. Imp[4] == aRetImp[nA,4] } )

				If nPosImp == 0
					Aadd( aAF251Imp, aClone( aRetImp[nA] ) )
				Else
					aAF251Imp[nPosImp][5] += aRetImp[nA][5]
					aAF251Imp[nPosImp][6] += aRetImp[nA][6]
				EndIF

			EndIf
		Next nA
	EndIf
EndIf
SN3->(RestArea(aAreaSx3))
Return(lRet)
/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³AF251CTIMP ³ Autor ³ Evaldo V. Batista    ³ Data ³ 14.08.08 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Monta a Grid de Totais da rotina de Rateio                 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe ³AF251CtImp(aAF251Imp,oFolder,aAF251Desc,oGetDadTot,oGetDadImp)³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Atfa251                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function AF251CtImp(aAF251Imp, oFolder, aAF251Desc, oGetDadTot, oGetDadImp, lAtuaColsT)
Local nA, nB, nPosImp := 0
Local lAF251GrImp := ExistBlock('AF251GrImp')
Local aAF251GrImp := {}
Local aCols251Imp := {}
Local aColsTotais := aClone(oGetDadTot:aCols)

Local nN1_ICMSAPR := AScan(aHeader, {|x| x[2] = "N1_ICMSAPR"})
Local nN3_PERC    := AScan(aHeader, {|x| x[2] = "N3_PERC"   })
Local nN1_CIAP    := Ascan(aHeader, {|x| x[2] = "N1_CIAP"   })
Local nAcolsDel   := Len(aHeader)+1

Default lAtuaColsT := .F.
If lAF251GrImp
	//
	aAF251GrImp := ExecBlock( 'AF251GrImp', .F., .F., aClone(aAF251Imp) )
	If ValType( aAF251GrImp ) == "A"
		For nA := 1 To Len( aAF251GrImp )
			// Verifica se todos os tipos de dados estao corretos e se ja
			// nao existe a mesma linha retornada no array aAF251Imp
			If 	Len( aAF251GrImp[nA] ) == 6 .and.;
				ValType(aAF251GrImp[nA,1]) == 'C' .and.;
				ValType(aAF251GrImp[nA,2]) == 'C' .and.;
				ValType(aAF251GrImp[nA,3]) == 'N' .and.;
				ValType(aAF251GrImp[nA,4]) == 'L' .and.;
				ValType(aAF251GrImp[nA,5]) == 'N' .and.;
				ValType(aAF251GrImp[nA,6]) == 'N' .and.;
				!('ICMS' $ Upper(aAF251GrImp[nA,1]) )
				nPosImp :=  aScan( aAF251Imp, {|Imp| 	Imp[1] == aAF251GrImp[nA,1] .and. Imp[2] == aAF251GrImp[nA,2] .and.;
				Imp[3] == aAF251GrImp[nA,3] .and. Imp[4] == aAF251GrImp[nA,4] } )
				If nPosImp == 0
					Aadd( aAF251Imp, aClone( aAF251GrImp[nA] ) )
				Else
					aAF251Imp[nPosImp][5] := aAF251GrImp[nA][5]
					aAF251Imp[nPosImp][6] := aAF251GrImp[nA][6]
				EndIF
			EndIf
		Next nA
	EndIf
EndIf

If lAtuaColsT
	If !Empty(aColsTotais)
		aColsTotais[1,1] := STR0105
		aColsTotais[1,2] := "01"
		aColsTotais[1,3] := "1"
		aColsTotais[1,4] := nValorFis
		aColsTotais[1,5] := nValRat
		aColsTotais[1,6] := .F.
	Else
		aAdd(aColsTotais, {STR0105,"01","1",nValorFis,nValRat,.F.})
	EndIf

	For nA := 1 To Len( aAF251Imp )
		nPosImp := aScan( aColsTotais, {|Totais| Totais[1] == aAF251Imp[nA,1] } )

		If nPosImp == 0
			Aadd( aColsTotais, {aAF251Imp[nA,1],"01","1",aAF251Imp[nA,5], aAF251Imp[nA,6], .F. } )
		Else
			// zero o calculo do imposto para refazer
			nFaltam := aAF251Imp[nA][5] - aAF251Imp[nA][6]
			aAF251Imp[nA][6] := 0

			// para cada linha com ciap nao deletada
			For nB := 1 To Len(aCols)
				If aCols[nB][nN1_CIAP] = "1" .And. !aCols[nB][nAcolsDel] .And. aAF251Imp[nA,4] //se na grade principal gera ciap e grade impostos tb

					// se informei ou ja calculei utilizo o calculado
					If !Empty(aCols[nB][nN1_ICMSAPR])
						aAF251Imp[nA][6] += aCols[nB][nN1_ICMSAPR]
					// senao calculo proporcional a porcentagem
					Else
						aCols[nB][nN1_ICMSAPR] := aAF251Imp[nA][5] * aCols[nB][nN3_PERC] / 100
						// se saldo a ratear menor que o proporcional, mantem o saldo
						If aCols[nB][nN1_ICMSAPR] > nFaltam
							aCols[nB][nN1_ICMSAPR] := nFaltam
						EndIf
						// atualiza soma total
						aAF251Imp[nA][6] += aCols[nB][nN1_ICMSAPR]
					EndIf
				EndIf
			Next nB

			// atualiza visualizacao dos totais
			aColsTotais[nPosImp][5] := aAF251Imp[nA][6]

			// atualiza visualizacao se tiver uma
			If ValType(oGet) == "O"
				oGet:Refresh()
			EndIf
		EndIf
	Next nA
	oGetDadTot:aCols:=aColsTotais
	oGetDadTot:GoTo(Len(aColsTotais))
	oGetDadTot:ForceRefresh()
EndIf
oFolder:aDialogs[1]:Refresh()

aEval( aAF251Imp, {|aImp| aAdd(aCols251Imp, {aImp[1], aImp[2], aImp[3], If(aImp[4],'1','2'), aImp[5], aImp[5]-aImp[6], .F.} )  } )

oGetDadImp:aCols:=aCols251Imp
oGetDadImp:Refresh()

oFolder:Refresh()

Return

/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³AF251CtDesc³ Autor ³ Evaldo V. Batista    ³ Data ³ 14.08.08 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Permite a atribuicao e edicao de descricoes estendidas de  ³±±
±±³          ³acordo com o parametro MV_PAR05 ("DESCRICAO ESTENDIDA")     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³AF251CtDesc(@aAF251Desc)                                    ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Atfa251                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function AF251CtDesc(aAF251Desc, oFolder, oMemo, oPanel, cTexto, oPanel4)
Local nA		:= 0
Local nPosDesc	:= aScan( aAF251Desc, {|aDesc| aDesc[2] == n } )

cTexto	:= ""

If nPosDesc > 0
	For nA := 1 To Len( aAF251Desc[nPosDesc][1] )
		cTexto += aAF251Desc[nPosDesc][1][nA][2]
	Next nA
EndIf

If nPosDesc > 0
	If Mv_Par05 == 1
		oMemo:lReadOnly := .F.
	Else
		oMemo:lReadOnly := !aAF251Desc[nPosDesc,3]
	EndIf
Else
	If Mv_Par05 == 1
		oMemo:lReadOnly := .F.
	Else
		oMemo:lReadOnly := .T.
	EndIF
EndIf

oMemo:Refresh()
oFolder:Refresh()

Return(.T.)

/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³AF250DescG ³ Autor ³ Evaldo V. Batista    ³ Data ³ 14.08.08 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Grava os dados do texto no array de controle AF251Desc     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³AF250DescG(aAF251Desc, cTexto)                              ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Atfa251                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function AF250DescG(aAF251Desc, cTexto)
Local nA		:= 0
Local nLinhas	:= 0
Local nTamDesc	:= TamSx3('N2_HISTOR')[1]
Local nPosDesc	:= aScan( aAF251Desc, {|aDesc| aDesc[2] == n } )

If nPosDesc == 0
	Aadd( aAF251Desc, {{}, n, Mv_Par05==1, {}} ) //Aqui
	nLinhas := MlCount(cTexto,nTamDesc)
	For nA := 1 To nLinhas
		Aadd( aAF251Desc[Len(aAF251Desc)][1], {StrZero(nA,3), MemoLine(cTexto, nTamDesc, nA)} )
	Next
Else
	aAF251Desc[nPosDesc][1] := {}
	nLinhas := MlCount(cTexto,nTamDesc)
	For nA := 1 To nLinhas
		Aadd( aAF251Desc[nPosDesc][1], {StrZero(nA,3), MemoLine(cTexto, nTamDesc, nA)} )
	Next
EndIf

Return

/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³AF251Perc  ³ Autor ³ Evaldo V. Batista    ³ Data ³ 14.08.08 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Funcao para atualizacao dos valores de controle com base no³±±
±±³          ³percentual informado na linha de rateio                     ³±±
±±³          ³ Atualiza apenas os valores originais, depreciacao acumulada³±±
±±³          ³e totalizador de total rateado                              ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³AF251Perc()                                         		  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Atfa251                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function AF251Perc(nPerc)
Local nPercent, nVorig1, nValAnt1

// *******************************
// Controle de multiplas moedas  *
// *******************************
Local cRateado		:= STR0074
Local aPosOrig
Local aPosAc
Local nValorItem	:= nValorFis
Local lContinua		:= .T.
Local nDiff			:= 0
Local nValRestante	:= 0
Local nPosRat		:= Ascan(aHeadTotais, {|x| UPPER(Alltrim(Alltrim(x[1]) )) == Upper(Alltrim(cRateado))}) //Busca pelo titulo, pois o nome do campo se repete
Local nValRatBkp	:= nValRat

Default nPerc 		:= 0

// *******************************
// Controle de multiplas moedas  *
// *******************************
If lContinua

	aPosOrig	:= AtfMultPos(aHeader,"N3_VORIG")

	aPosAc	:= AtfMultPos(aHeader,"N3_VRDACM")

	nValRat   := nValRat - Round(aCols[n][aPosOrig[1]],2)

	If nPerc == Nil .OR. nPerc == 0
		nPerc := &(ReadVar())
		nPerc := IIF(ValType(nPerc) == "U",0,nPerc)
	EndIf

	nValAnt1:= NoRound(aCols[n][aPosOrig[1]],2)

	aCols[n][aPosOrig[1]] := Round((nValorItem * nPerc)/100,4)

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ nValorFis  Valor inicial a ser rateado                  ³
	//³ O valor rateado n"o pode ser maior que o valor origem³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	nVorig1 := aCols[n][aPosOrig[1]]

	If QtdComp(nVorig1) > QtdComp(nValorFis)
		Help(" ",1,"AF250VALOR")
		aCols[n][aPosOrig[1]] := nValAnt1
		nValRat	:= nValRatBkp
		Return .F.
	Endif
	If !aCols[n][nUsado+1]
		nValRat  := nValRat+nVorig1
		If QtdComp(nValRat) > QtdComp(nValorFis)
			nDiff := ( QtdComp(nValRat) - QtdComp(nValorFis) )
			If  abs(nDiff) > 0.01
				Help(" ",1,"AF250VALOR")
				aCols[n][aPosOrig[1]] := 0
				nValRat	:= nValRatBkp
				Return .F.
			Elseif ( nDiff > 0 .and. nDiff <= 0.01 ) // DIFERENÇA POSITIVA (VALOR A MAIOR)
				nValRestante := nVorig1 - nDiff
			Elseif ( nDiff < 0 .and. ABS(nDiff) <= 0.01) //DIFERENCA NEGATIVA (VALOR A MENOR)
				nValRestante := nVorig1 + nDiff
			Endif
		Endif

		If QtdComp(nValRat) < QtdComp(nValorFis) //DIFERENCA NEGATIVA (VALOR A MENOR)
			nDiff := ( QtdComp(nValRat) - QtdComp(nValorFis) )
			If ( nDiff < 0 .and. ABS(nDiff) <= 0.01)
				nValRestante := nVorig1 + ABS(nDiff)
			Endif
		Endif

		nPercent := nPerc/100

		AtfMultMoe(,,{|x| aCols[n][aPosOrig[x]] := Round(aValorOri[x] * nPercent,aHeader[aPosOrig[x],5]) })
		AtfMultMoe(,,{|x| aCols[n][aPosAc[x]]   := Round(aValDepAc[x] * nPercent,Aheader[aPosAc[x],5]) })

		/*** AJUSTE MANUAL DE UMA POSSIVEL DIFERENCA DE 1 CENTAVO ***/
		If  abs(nDiff) > 0 .and. abs(nDiff) <= 0.01
			nValRat := NoRound(nValRat,3)
			If nDiff < 0
				nValRat += abs(nDiff)
			Else
				nValRat -= nDiff
			EndIf
			aCols[n][aPosOrig[1]] := nValRestante
		Endif
		oGetDadTot:aCols[1,nPosRat] := nValRat
		oGetDadTot:oBrowse:Refresh()
		oGetDadTot:ForceRefresh()
	Else
		Help(" ",1,"AF250VALOR")
		Return .F.
	Endif

	If len(aCols) > 0
		AF251ARRED(nPerc)
	Endif
EndIf
Return .t.

/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³AF251ARRED ³ Autor ³ Evaldo V. Batista    ³ Data ³ 14.08.08 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Ajusta diferenca de arredondamento nos campos de valores da³±±
±±³          ³grid atuzlizados com base no percentual digitado            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³AF251Perc(nPerc)                                     		  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Atfa251                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function AF251ARRED(nPerc)

// *******************************
// Controle de multiplas moedas  *
// *******************************
Local _x, _lDetalhou, _nTotPerc:=0.00
Local _aPDepAc	:= AtfMultMoe(,,{|x| 0.00})
Local aPosAc 		:= AtfMultMoe(,,{|x| 0.00})
Local nPosPerc
Local nPosIcms, nPosCof, nPosPis, nPosBCof, nPosBPis
Local _nPIcms  := 0.00

Default nPerc := 0

nPosPerc:= Ascan(aHeader, {|x| Alltrim(Alltrim(x[2]) ) == "N3_PERC"})


aPosAc	:= AtfMultPos(aHeader,"N3_VRDACM")

nPosIcms:= Ascan(aHeader, {|x| Alltrim(Alltrim(x[2]) ) == "N1_ICMSAPR"})
nPosCof := Ascan(aHeader, {|x| Alltrim(Alltrim(x[2]) ) == "N1_COFAPR"})
nPosPis := Ascan(aHeader, {|x| Alltrim(Alltrim(x[2]) ) == "N1_PISAPR"})
nPosBCof:= Ascan(aHeader, {|x| Alltrim(Alltrim(x[2]) ) == "N1_BASECOF"})
nPosBPis:= Ascan(aHeader, {|x| Alltrim(Alltrim(x[2]) ) == "N1_BASEPIS"})

_lDetalhou:=.f.
_nPercDepAc1:=0.00

// Verifico na matriz aCols se todos os percentuais ja foram digitados
For _x:=1 to len(aCols)
	If !aCols[_x][nUsado+1]

		_nTotPerc += Round(aCols[_x][nPosPerc],2) + If(n==_x .and. nPerc<>0,nPerc - Round(aCols[_x][nPosPerc],2),0)

		AtfMultMoe(,,{|x| _aPDepAc[x] += Round(aCols[_x][aPosAc[x]],2) })

		_nPIcms   += IIF(nPosIcms > 0,Round(aCols[_x][nPosIcms],2),0)

		// Se o detalhamento atingir 100% verifico a diferenca, caso exista.
		If _nTotPerc = 100
			_lDetalhou:=.t.
		Endif
	Endif
Next

If _lDetalhou
	// Caso haja diferença de centavos no detalhamento, ajusta-se a depreciação
	//acumulada no primeiro item
	If (aValDepAc[1] - _aPDepAc[1]) <> 0

		AtfMultMoe(,,{|x| aCols[1][aPosAc[x]]  += (aValDepAc[x] - _aPDepAc[x]) })

		If nPosIcms > 0
			aCols[1][nPosIcms] += (nTotIcms - _nPIcms)
		Endif
	Endif
Endif

Return .t.

/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³AF251Ciap  ³ Autor ³ Evaldo V. Batista    ³ Data ³ 14.08.08 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Verifica se o valor de ICMS e valido                       ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³AF251Ciap(nLin, nICMSApr)                          		  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Atfa251                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function AF251Ciap(nICMSApr)
Local lRet 			:= .T.
Local nA			:= 0
Local nPosICMSAPR	:= aScan( aHeader, {|x| Upper(AllTrim(Alltrim(Alltrim(x[2]) ))) == 'N1_ICMSAPR'} )
Local nTamDecImp	:= TamSx3('N1_ICMSAPR')[2]

DEFAULT nICMSApr	:= If( ReadVar()=='M->N1_ICMSAPR', M->N1_ICMSAPR, 0 )
nValRatICMS := 0

For nA := 1 To Len( aCols )
	If nA <> n
		nValRatICMS += aCols[nA,nPosICMSAPR]
	EndIf
Next nA

If Round(NoRound(nValRatICMS+nICMSApr,nTamDecImp+1),nTamDecImp) > Round(NoRound(nTotICMS,nTamDecImp+1),nTamDecImp)
	lRet := .F.
	Help(" ",1,"AF251TOTICMS",,STR0106+CRLF+STR0107,1,0)
EndIf

If lRet
	nValRatIcms += nICMSApr
EndIf
Return( lRet )

/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³AF251AtBt  ³ Autor ³ Evaldo V. Batista    ³ Data ³ 14.08.08 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Define opecacoes com os botoes                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³AF251AtBt(nBut, oLbx, aAF251DOri)                    		  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Atfa251                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function AF251AtBt(nBtn, oLbx, aAF251DOri, oGet, oMemo, aAF251Desc, oButton)
Local lRet		:= .F.
Local nPosDesc 	:= aScan( aAF251Desc, {|Desc| Desc[2] == N } )

If nBtn == 1 .or. nBtn == 2 .or. nBtn == 4
	If Mv_Par05 == 1
		oButton:lVisible := .F.
	Else
		oButton:lVisible := .T.
	EndIf
EndIf
If !Empty( aAF251DOri[oLBx:nAt, 1] )
	If nBtn == 1 .and. Mv_Par05 == 2//Atribuir
		If If(nPosDesc > 0,!aAF251Desc[nPosDesc, 3], .T.) .and. (Empty(aAF251DOri[oLbx:nAt,7])) .and. If( nPosDesc>0, aScan(aAF251Desc[nPosDesc,4], {|x| x==oLbx:nAt })==0, .T.)
			lRet := .T.
		EndIf
	ElseIf nBtn == 2  .and. Mv_Par05 == 2 //Desatribuir
		If If(nPosDesc > 0,!aAF251Desc[nPosDesc, 3], .T.) .and. (aAF251DOri[oLbx:nAt,7] == N )
			lRet := .T.
		EndIf
	ElseIf nBtn == 3 //Copiar
		If nPosDesc > 0
			If aScan( aAF251Desc[nPosDesc,4], {|x| x==oLbx:nAt } ) == 0
				lRet := .T.
			EndIf
		Else
			lRet := .T.
		EndIf
	ElseIf nBtn == 4 //Editar
		If nPosDesc == 0 .or. (nPosDesc > 0 .and. !aAF251Desc[nPosDesc, 3] )
			lRet := .T.
		EndIf
	ElseIf nBtn == 5 //Limpar
		lRet := .T.
	EndIf
EndIf
Return( lRet )

/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³AF251ExBut ³ Autor ³ Evaldo V. Batista    ³ Data ³ 14.08.08 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Verifica se o valor de ICMS e valido                       ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³AF251ExBut(nBtn, oLbx, aAF251DOri, aAF251Desc)       		  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Atfa251                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function AF251ExBut(nBtn, oLbx, aAF251DOri, aAF251Desc, oBtn, cTexto, oMemo)
Local nPosDesc 	:= aScan( aAF251Desc, {|Desc| Desc[2] == N } )
Local nA,nB,nC	:= 0
lOCAL nTamLinha := TamSx3('N2_SEQUENC')[1]
Local nPos		:= 0

If nBtn == 1 .or. nBtn == 3 //Atribuir ou Copiar
	If nBtn == 1 //Atribuir
		aAF251DOri[oLbx:nAt,7] := n
	EndIf
	If nPosDesc == 0
		aAdd( aAF251Desc, {{}, N, Mv_Par05==1, {oLbx:nAt}} ) //Aqui
		nPosDesc := Len(aAF251Desc)
	Else
		aAdd( aAF251Desc[nPosDesc,4], oLbx:nAt )
	EndIf
ElseIf nBtn == 2 //Desatribuir
	aAF251DOri[oLbx:nAt,7] := 0
	If nPosDesc > 0
		nPos := aScan( aAF251Desc[nPosDesc,4], {|x| x == oLbx:nAt } )
		If nPos > 0
			aDel( aAF251Desc[nPosDesc][4], nPos )
			aSize( aAF251Desc[nPosDesc][4], Len(aAF251Desc[nPosDesc][4])-1 )
		EndIf
	EndIf
ElseIf nBtn == 4 //Editar
	oMemo:lReadOnly := .F.
	If nPosDesc > 0
		aAF251Desc[nPosDesc, 3] := .T.
	EndIf
ElseIf nBtn == 5 //Limpar
	If nPosDesc == 0
		aAdd( aAF251Desc, {{}, N, Mv_Par05==1, {}} )
	Else
		aAF251Desc[nPosDesc][1] := {}
		aAF251Desc[nPosDesc][3] := Mv_Par05==1//.F. //Aqui
		aAF251Desc[nPosDesc][4] := {}
	EndIf
	For nA := 1 To Len( aAF251DOri )
		If aAF251DOri[nA][7] == n
			aAF251DOri[nA][7] := 0
		EndIF
	Next nA
EndIf

If nPosDesc > 0 .and. !aAF251Desc[nPosDesc,3]
	aAF251Desc[nPosDesc][1] := {}
	For nA := 1 To Len( aAF251Desc[nPosDesc][4] )
		For nB := 1 To Len( aAF251DOri[aAF251Desc[nPosDesc][4][nA]][6] )
			If nB == Len( aAF251DOri[aAF251Desc[nPosDesc][4][nA]][6] )
				aAdd( aAF251Desc[nPosDesc][1], {StrZero(++nC,nTamLinha), AllTrim(aAF251DOri[aAF251Desc[nPosDesc][4][nA]][6][nB][2])+CRLF } )
			Else
				aAdd( aAF251Desc[nPosDesc][1], {StrZero(++nC,nTamLinha), aAF251DOri[aAF251Desc[nPosDesc][4][nA]][6][nB][2]} )
			EndIf
		Next nB
	Next nA
ElseIf nPosDesc > 0 .and. aAF251Desc[nPosDesc,3] .and. nBtn == 3
	For nB := 1 To Len( aAF251DOri[oLBx:nAt][6] )
		If nB == Len( aAF251DOri[oLBx:nAt][6] )
			aAdd( aAF251Desc[nPosDesc][1], {StrZero(++nC,nTamLinha), AllTrim(aAF251DOri[oLBx:nAt][6][nB][2])+CRLF } )
		Else
			aAdd( aAF251Desc[nPosDesc][1], {StrZero(++nC,nTamLinha), aAF251DOri[oLBx:nAt][6][nB][2]} )
		EndIf
	Next nB
EndIf

If nPosDesc > 0
	cTexto := ""
	For nA := 1 To Len( aAF251Desc[nPosDesc][1] )
		cTexto += aAF251Desc[nPosDesc][1][nA][2] //+ CRLF
	Next nA
EndIf

oMemo:Refresh()

Return

/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³AF251AtBtR ³ Autor ³ Evaldo V. Batista    ³ Data ³ 14.08.08 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Atualiza os botoes de atribuicao                           ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³AF251AtBtR(aBtn)								       		  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Atfa251                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function AF251AtBtR(aBtn, oMemoExib, cTexto, aAF251DOri,oLBx) //, oLbx, aAF251DOri, oGet, oMemo, aAF251Desc )
Local nA := 0

For nA := 1 To Len( aBtn )
	aBtn[nA]:SetFocus()
	aBtn[nA]:Refresh()
Next nA

cTexto	:= ""

For nA := 1 To Len( aAF251DOri[oLBx:nAt][6] )
	cTexto += aAF251DOri[oLBx:nAt][6][nA][2]
Next nA

oMemoExib:Refresh()

Return

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³ AF251Grupo ³ Autor ³ Evaldo V. Batista     ³ Data ³ 14.08.08 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Preenche Taxa deprecia‡„o para todas das moedas.             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ ATFA251                                                      ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function AF251Grupo(lGrupo)

Local nTaxa 	:= 0
Local aEntidade := {}
Local nPosSNG 	:= 0
Local ny			:= 0
Local cSN1Grupo	:= &(ReadVar())
Local aAreaSNG	:= Eval( {|| DbSelectArea("SNG"),SNG->(GetArea()) } )
Local aAreaFNG	:= Eval( {|| DbSelectArea("FNG"),FNG->(GetArea()) } )
Local aAreaSX3	:= Eval( {|| DbSelectArea("SX3"),SX3->(GetArea()) } )
Local nTamN3His  := TamSx3("N3_HISTOR")[1]
Local nTamFNGHis := TamSx3("FNG_HISTOR")[1]


// *******************************
// Controle de multiplas moedas  *
// *******************************
Local __aNMoed
Local __lZeraDepr := GetNewPar("MV_ZRADEPR",.F.)

Default lGrupo := .F.

__aNMoed := {}
AtfMultMoe(,,{|x| aAdd(__aNMoed,Empty(GETMV("MV_MOEDA"+Alltrim(str(x))))) })


SNG->(DbSeek(xFilial("SNG") + cSN1Grupo))
FNG->(DbSeek(xFilial("FNG") + cSN1Grupo))

// Cria array com os nomes dos campos do SNG (Cadastro de grupos)
IF Len(aEntidade) == 0
	SX3->(MsSeek("SNG"))
	SX3->(DbEval( { || Aadd(aEntidade, SX3->X3_CAMPO ) },,{ || SX3->X3_ARQUIVO == "SNG" }))
ENDIF

For ny:=1 To Len(aHeader)
	If  Trim(aHeader[ny][2]) == "N3_TXDEPR1"
		aCols[n][ny] := SNG->NG_TXDEPR1
		If __lZeraDepr .and. !lGrupo
			nTaxa := &(ReadVar())
		EndIf
		// *******************************
		// Controle de multiplas moedas  *
		// *******************************
	ElseIf "N3_TXDEP" $ Trim(aHeader[ny][2])
		If "N3_TXDEPR" $ Trim(aHeader[ny][2])
			nMoed := Val(StrTran(aHeader[ny][2],"N3_TXDEPR",""))
		Else
			nMoed := Val(StrTran(aHeader[ny][2],"N3_TXDEP",""))
		EndIf
		If __aNMoed[nMoed]				/// Se não tem a moeda informada no parâmetro (Moeda em branco)
			aCols[n][ny] := 0
		Else
			aCols[n][ny] := SNG->&(If(nMoed>9,"NG_TXDEP","NG_TXDEPR")+Alltrim(Str(nMoed)))
		EndIf

	ElseIf !(Trim(aHeader[nY][2]) $ "N3_FILIAL#N1_CBASE#N1_ITEM") .and.;
		aHeader[nY][8] == "C" .and.;
		(nPosSNG := aScan(aEntidade,{|cEntidade| ALLTRIM(SUBSTR(cEntidade,4,10)) == ALLTRIM(SUBSTR(aHeader[nY][2],4,10))})) > 0
		If Empty(aCols[n][ny]) .AND. !Empty(&("SNG->"+ALLTRIM(aEntidade[nPosSNG]))) // SOMENTE SE O CAMPO NO GRID ESTIVER VAZIO PARA PRESERVAR DIGITACAO
			aCols[n][ny] := &("SNG->"+aEntidade[nPosSNG])
		EndIf
	EndIf

	If  "N3_CCONTAB" $ Trim(aHeader[ny][2])
		aCols[n][ny] := SNG->NG_CCONTAB
	EndIf
	If  "N3_CUSTBEM" $ Trim(aHeader[ny][2])
		aCols[n][ny] := SNG->NG_CUSTBEM
	EndIf
	If  "N3_CDEPREC" $ Trim(aHeader[ny][2])
		aCols[n][ny] := SNG->NG_CDEPREC
	EndIf
	If  "N3_CCUSTO" $ Trim(aHeader[ny][2])
		aCols[n][ny] := SNG->NG_CCUSTO
	EndIf
	If  "N3_CCDEPR" $ Trim(aHeader[ny][2])
		aCols[n][ny] := SNG->NG_CCDEPR
	EndIf
	If  "N3_CDESP" $ Trim(aHeader[ny][2])
		aCols[n][ny] := SNG->NG_CDESP
	EndIf
	If  "N3_CCORREC" $ Trim(aHeader[ny][2])
		aCols[n][ny] := SNG->NG_CCORREC
	EndIf
	If  "N3_CCCORR" $ Trim(aHeader[ny][2])
		aCols[n][ny] := SNG->NG_CCCORR
	EndIf
	If  "N3_CCCDEP" $ Trim(aHeader[ny][2])
		aCols[n][ny] := SNG->NG_CCCDEP
	EndIf
	If  "N3_CCDESP" $ Trim(aHeader[ny][2])
		aCols[n][ny] := SNG->NG_CCDESP
	EndIf
	If  "N3_CCCDES" $ Trim(aHeader[ny][2])
		aCols[n][ny] := SNG->NG_CCCDES
	EndIf
	If  "N3_SUBCCON" $ Trim(aHeader[ny][2])
		aCols[n][ny] := SNG->NG_SUBCCON
	EndIf
	If  "N3_SUBCCOR" $ Trim(aHeader[ny][2])
		aCols[n][ny] := SNG->NG_SUBCCOR
	EndIf
	If  "N3_SUBCDEP" $ Trim(aHeader[ny][2])
		aCols[n][ny] := SNG->NG_SUBCDEP
	EndIf
	If  "N3_SUBCDES" $ Trim(aHeader[ny][2])
		aCols[n][ny] := SNG->NG_SUBCDES
	EndIf
	If  "N3_SUBCCDE" $ Trim(aHeader[ny][2])
		aCols[n][ny] := SNG->NG_SUBCCDE
	EndIf
	If  "N3_CLVLCON" $ Trim(aHeader[ny][2])
		aCols[n][ny] := SNG->NG_CLVLCON
	EndIf
	If  "N3_CLVLCOR" $ Trim(aHeader[ny][2])
		aCols[n][ny] := SNG->NG_CLVLCOR
	EndIf
	If  "N3_CLVLDEP" $ Trim(aHeader[ny][2])
		aCols[n][ny] := SNG->NG_CLVLDEP
	EndIf
	If  "N3_CLVLDES" $ Trim(aHeader[ny][2])
		aCols[n][ny] := SNG->NG_CLVLDES
	EndIf
	If  "N3_CLVLCDE" $ Trim(aHeader[ny][2])
		aCols[n][ny] := SNG->NG_CLVLCDE
	EndIf
	If  "N3_HISTOR" $ Trim(aHeader[ny][2])
		If nTamN3His == nTamFNGHis
			aCols[n][ny] := FNG->FNG_HISTOR
		Else
			Help(" ", 1, "ATFA251HIS", NIL, STR0201, 1, 0, NIL, NIL, NIL, NIL, NIL, {STR0202}) //Problema:  O tamanho dos campos N3_HISTOR e FNG_HISTOR se diferem. Solução: Ajuste o Dicionário de Dados. 
		Endif
	EndIf
	If  "N1_CSTPIS" $ Trim(aHeader[ny][2])
		aCols[n][ny] := SNG->NG_CSTPIS
	EndIf
	If  "N1_ALIQPIS" $ Trim(aHeader[ny][2])
		aCols[n][ny] := SNG->NG_ALIQPIS
	EndIf
	If  "N1_CSTCOFI" $ Trim(aHeader[ny][2])
		aCols[n][ny] := SNG->NG_CSTCOFI
	EndIf
	If  "N1_ALIQCOF" $ Trim(aHeader[ny][2])
		aCols[n][ny] := SNG->NG_ALIQCOF
	EndIf
	If  "N1_ORIGCRD" $ Trim(aHeader[ny][2])
		aCols[n][ny] := SNG->NG_ORIGCRD
	EndIf
	If  "N1_CODBCC" $ Trim(aHeader[ny][2])
		aCols[n][ny] := SNG->NG_CODBCC
	EndIf
	If  "N1_CBCPIS" $ Trim(aHeader[ny][2])
		aCols[n][ny] := SNG->NG_CBCPIS
	EndIf
	
Next ny

If Type("oGet") == "O"
	oGet:Refresh()
EndIf


RestArea(aAreaSNG)
RestArea(aAreaFNG)
RestArea(aAreaSX3)
Return .T.

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³AF251ChkCiap ºAutor  ³Marcos Berto     º Data ³  03.02.09   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Verifica se o campo N1_CIAP existe no SX3                   º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ ATFA251                                                    º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function AF251ChkCiap()

//Verifica N1_CIAP se a mesma ainda for nula.
If lN1Ciap == Nil

	dbSelectArea("SX3")
	SX3->(DbSetOrder(2))

	// Verifica se o campo N1_CIAP existe no SX3.
	If SX3->(DbSeek('N1_CIAP')) .AND. cPaisLoc == "BRA"
		lN1Ciap	:= .T.
	Else
		lN1Ciap	:= .F.
	EndIf

	SX3->(DbSetOrder(1))

Endif

Return


/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o	 ³ AF060VldTrf³ Autor ³ Claudio Donizete      ³ Data ³ 02/08/10 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ VErifica se o bem esta bloqueado e nao permite a transf.     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ cFilDest	- Indica a filial de destino     					³±±
±±³          ³ cCodigo	- Codigo do Bem 									³±±
±±³          ³ cItem	- Item do Bem										³±±
±±³          ³ lMarc	- Indica se esta na tela de marcacao manual para	³±±
±±³          ³ poder mostrar o Help      			 						³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ ATFA060  												    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function A251VldAquis(cCodigo,cItem,lMarc)
Local aArea, cAlias := Alias()
Local lRet     		:= .T.
Local lExisFicha	:= .F.

aArea    := SN1->(GetArea())
SN1->(DbSetOrder(1))
lExisFicha := SN1->(MsSeek(xFilial("SN1")+cCodigo+cItem))
If lExisFicha .And. (!Empty(SN1->N1_DTBLOQ) .Or. SN1->N1_STATUS $ "2/3" )
	If lMarc
		Help( " ",1,"A060BLOQ" )
	EndIf
	lRet := .F.
EndIf

/*
 * Se a ficha de ativo existir, verificar se é do tipo Orçamento de Despesa de Provisão ou Provisão de Despesa para não permitir a transferência
 */
If lExisFicha
	If AllTrim(SN1->N1_PATRIM) $ "O"
		Help(" ",1,"ATFA250AO",,STR0163 ,1,0) //'Este ativo faz parte do processo de constituição de provisão. Este tipo de ativo não poderá ser transferido'
		lRet := .F.
	ElseIf AllTrim(SN1->N1_PATRIM) $ "V"
		Help(" ",1,"ATFA250AV",,STR0164 ,1,0) //'Este ativo foi gerado a partir do processo de constituição de provisão. Este tipo de ativo não poderá ser transferido'
		lRet := .F.
	EndIf
EndIf

If !IsInCallStack("ATFA430") .And. ATFXVerPrj(cCodigo,cItem, .T. )
	lRet := .F.
EndIf

SN1->(RestArea(aArea))
DbSelectArea( cAlias )
Return(lRet)



//Funcoes incluidas por Jair Ribeiro - Fonte Rev. 51 15/04/11
/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³Af251aHDDCºAutor  ³Jair Ribeiro        º Data ³  05/19/11   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Monta aHeader para aba de dados complementares	          º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºParametros³ aHeadDadoC: aHeader a dos dados complementares             º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ SIGAATF                                                    º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function Af251aHDDC(aHeadDadoC)
Local nI			:= 0
Local __nQuantas 	:= AtfMoedas()

aHeadDadoC			:= {}

For nI:= 1 To Len(aHeader)
	If !(!("N3_" $ AllTrim(aHeader[nI,2])) .or. AllTrim(aHeader[nI,2]) $ 'N3_PERC') // .and. !(AllTrim(aHeader[nI,2]) $ "N1_CBASE|N1_ITEM"))
		If ALLTRIM(aHeader[nI,2]) $ "#N3_TPSALDO"
			Loop
		EndIf
		AF251InHdr(aHeadDadoC,aHeader[nI,2],aHeader[nI,1])
		If ALLTRIM(aHeader[nI,2]) $ "#N3_HISTOR" 
			AF251InHdr(aHeadDadoC,"N3_TPSALDO") 		//Incluir campo TPSALDO apos N3_HISTOR
		EndIf
	EndIf
Next nI

AF251AltHd(aHeadDadoC,"N3_TIPO"		,06,"")
AF251AltHd(aHeadDadoC,"N3_CCONTAB"	,06,"ExistCpo('CT1')")
AF251AltHd(aHeadDadoC,"N3_CUSTBEM"	,06,"ExistCpo('CTT')")
AF251AltHd(aHeadDadoC,"N3_CDEPREC"	,06,"ExistCpo('CT1')")
AF251AltHd(aHeadDadoC,"N3_CCUSTO"	,06,"ExistCpo('CTT')")
AF251AltHd(aHeadDadoC,"N3_CCDEPR"	,06,"ExistCpo('CT1')")
AF251AltHd(aHeadDadoC,"N3_CDESP"	,06,"ExistCpo('CT1')")
AF251AltHd(aHeadDadoC,"N3_CCORREC"	,06,"ExistCpo('CT1')")
AF251AltHd(aHeadDadoC,"N3_TPSALDO"	,06,"VldTpSald(M->N3_TPSALDO) .and. AF251AtuSd(M->N3_TPSALDO)")

AF251AltHd(aHeadDadoC,"N3_VMXDEPR"	,06,"Positivo() .And. AF251G2() .And. AF010VlMax()")
AF251AltHd(aHeadDadoC,"N3_VLSALV1" ,06,"Positivo() .And. AF251G2()")
AF251AltHd(aHeadDadoC,"N3_PRODANO" ,06,"Positivo() .And. AF251G2()")
AF251AltHd(aHeadDadoC,"N3_PRODMES" ,06,"Positivo() .And. AF251G2()")
AF251AltHd(aHeadDadoC,"N3_PERDEPR" ,06,"Positivo() .And. AF251G2()")
AF251AltHd(aHeadDadoC,"N3_TPDEPR" 	,06,"Vazio() .Or. AF251G1(M->N3_TPDEPR)")
AF251AltHd(aHeadDadoC,"N3_CRIDEPR" ,06,"ExistCpo('SN0','05'+M->N3_CRIDEPR) .and. AF251G3()")
AF251AltHd(aHeadDadoC,"N3_CRIDEPR"	,13,"AF251G4('N3_CRIDEPR')")
AF251AltHd(aHeadDadoC,"N3_CALDEPR"	,06,"VldTpSald(M->N3_TPSALDO)")
AF251AltHd(aHeadDadoC,"N3_CALDEPR"	,13,"AF251G4('N3_CRIDEPR','N3_CALDEPR')")

For nI := 1 To  __nQuantas
	cMoed := Alltrim(Str(nI))
	If nI == 1
		AF251AltHd(aHeadDadoC,"N3_VORIG"+cMoed	,06,"Positivo() .And. AF251CONV() ")
	Else
		AF251AltHd(aHeadDadoC,"N3_VORIG"+cMoed	,06,"Positivo()")
	EndIf
	If nI > 9
		AF251AltHd(aHeadDadoC,"N3_TXDEP"+cMoed,06,"Positivo()")
		AF251AltHd(aHeadDadoC,"N3_VRDAC"+cMoed,06,"Positivo()")
	Else
		AF251AltHd(aHeadDadoC,"N3_TXDEPR"+cMoed,06,"Positivo()")
		AF251AltHd(aHeadDadoC,"N3_VRDACM"+cMoed,06,"Positivo()")
	EndIf
Next nI
Return
/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³AF251InHdrºAutor  ³Jair Ribeiro        º Data ³  05/19/11   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Preenche aHeader                                           º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºParametros³ aHeaderX: aHeader a ser preenchido                         º±±
±±º          ³ cCampo: Campo contido no dicionario X3_CAMPO               º±±
±±º          ³ cTitulo: Novo Titulo                                       º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ SIGAATF                                                    º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function AF251InHdr(aHeaderX,cCampo,cTitulo)
Local aArea		:= SX3->(GetArea())
Default cTitulo := ""

SX3->(DbSetOrder(2))
If SX3->(DbSeek(cCampo))
	cTitulo := Iif(Empty(cTitulo),X3Titulo(),cTitulo)
	aAdd(aHeaderX,{;
	cTitulo,; 	  				// 01 - Titulo
	SX3->X3_CAMPO,;				// 02 - Campo
	SX3->X3_PICTURE,;			// 03 - Picture
	SX3->X3_TAMANHO,;			// 04 - Tamanho
	SX3->X3_DECIMAL,;			// 05 - Decimal
	SX3->X3_VALID,;				// 06 - Valid
	SX3->X3_USADO,;				// 07 - Usado
	SX3->X3_TIPO,;				// 08 - Tipo
	SX3->X3_F3,;				// 09 - F3
	SX3->X3_CONTEXT,;	   		// 10 - Contexto
	X3CBox(),;					// 11 - ComboBox
	SX3->X3_RELACAO,;			// 12 - Relacao
	SX3->X3_WHEN,;         		// 13 - When
	SX3->X3_VISUAL,;			// 14 - Visual
	SX3->X3_VLDUSER,;			// 15 - ValidUser
	SX3->X3_PICTVAR,;			// 16 - PictVar
	X3Obrigat(SX3->X3_CAMPO)})	// 17 - Obrigat
EndIf
RestArea(aArea)
Return
/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³AF251AltHdºAutor  ³Jair Ribeiro        º Data ³  05/19/11   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Altera aHeader                                             º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºParametros³ aHeaderAlt: aHeader preenchido                             º±±
±±º          ³ cCampo: Campo a ser alterado no aHeader                    º±±
±±º          ³ nAlt: Numerico indica que conteudo do aHeader deve ser	  º±±
±±º          ³ alterado: 	01 - Titulo									  º±±
±±º          ³				02 - Campo									  º±±
±±º          ³				03 - Picture								  º±±
±±º          ³				04 - Tamanho								  º±±
±±º          ³				05 - Decimal								  º±±
±±º          ³				06 - Valid									  º±±
±±º          ³				07 - Usado									  º±±
±±º          ³				08 - Tipo									  º±±
±±º          ³				09 - F3									  	  º±±
±±º          ³				10 - Contexto								  º±±
±±º          ³				11 - ComboBox								  º±±
±±º          ³				12 - Relacao								  º±±
±±º          ³				13 - When									  º±±
±±º          ³				14 - Visual									  º±±
±±º          ³				15 - ValidUser								  º±±
±±º          ³				16 - PictVar								  º±±
±±º          ³				17 - Obrigat								  º±±
±±º          ³ xConteudo: Novo valor para conteudo do aHeader 			  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ SIGAATF                                                    º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function AF251AltHd(aHeaderAlt,cCampo,nAlt,xConteudo)
Local nPos	:= aSCan(aHeaderAlt,{|aX| AllTrim(aX[2]) == AllTrim(cCampo)})
If nPos > 0  .and. (nAlt >= 1 .and. nAlt <= 15)
	aHeaderAlt[nPos,nAlt]:= xConteudo
EndIf
Return
/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³AF251CLONEºAutor  ³Jair Ribeiro        º Data ³  05/19/11   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Copia aCols em uso pelo folder 2 para um array             º±±
±±º          ³                       	                                  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºParametros³ oGetDaDosC: Objeto MsNewGetDados para dados complementares º±±
±±º          ³ aColsDadoC: Array de acols dos dados complementares		  º±±
±±º          ³ nAt: Linha do dados do bem equivalente aos dados           º±±
±±º          ³ complementares         	                                  º±±
±±º          ³ nFolder: Numero do folder                                  º±±
±±º          ³ lLostFocus: Indica se esta sendo executada pelo metodo     º±±
±±º          ³ lostfocus				                                  º±±
±±º          ³ aColsBkp: aCols de backup	                              º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ SIGAATF        	                                          º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function AF251CLONE(oGetDadosC,aColsDadoC,nFolder,lLostFocus,aColsBkp)
Local nPos		:= 0
Local nI		:= 0
Local aColsX	:= {}
Local nAt		:= oGet:oBrowse:nAt
Local aHeaderX	:= aClone(oGetDadosC:aHeader)
Local cCodBase	:= GdFieldGet("N1_CBASE",nAt,.F.,aHeader,aCols)
Local cItem		:= GdFieldGet("N1_ITEM" ,nAt,.F.,aHeader,aCols)
Local nPosCBase	:= GdFieldPos("N1_CBASE",aHeaderX)
Local nPosItem	:= GdFieldPos("N1_ITEM" ,aHeaderX)

Default lLostFocus := .F.

If nFolder == 1 .and. !lLostFocus
	nPerRat:= (aCols[n][9]/100)
	If (nPos := aSCan(aColsDadoC,{|aX| aX[1] == nAt})) > 0 .And. Len(aColsDadoC[nPos,2]) > 0
		aColsX := aColsDadoC[nPos,2]
	Else
		aAdd(aColsX,Array(Len(aHeaderX)+1))
		aColsX[Len(aColsX),Len(aHeaderX)+1] := .F.
		For nI := 1 To Len(aHeaderX)
			aColsX[Len(aColsX)][nI] := CriaVar(aHeaderX[nI][2])
		Next nI
		aAdd(aColsDadoC,{nAt,aColsX})
	EndIf
	If nPosCBase > 0 .and. nPosItem > 0
		For nI:= 1 To Len(aColsX)
			aColsX[nI,nPosCBase]	:= cCodBase
			aColsX[nI,nPosItem]		:= cItem
		Next nI
	EndIf
	aColsBkp							:= aClone(aColsX)
	oGetDadosC:aCols 					:= If(!ExistBlock("AF251LNK"), aColsX ,oGetDadosC:aCols )
	AF251GRPC(oGetDadosC,oGet)
ElseIf nFolder == 2 .or. lLostFocus
	If (nPos := aSCan(aColsDadoC,{|aX| aX[1] == nAt})) > 0
		aColsDadoC[nPos,2] := aClone(oGetDadosC:aCols)
	EndIf
EndIf
oGetDadosC:oBrowse:Refresh()
Return
/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³AF251VLDTPºAutor  ³Jair Ribeiro        º Data ³  05/19/11   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Valida campo N3_TIPO                                       º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºParametros³ lDadosBem: Indica se N3_TIPO do dados bem ou complementaresº±±
±±º          ³ aTiposC: Tipos permitidos                                  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ SIGAATF                                                    º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function AF251VLDTP(lDadosBem,aTiposC)
Local cTipo	:= &(ReadVar())
Local lRet	:= .T.
Local aTipo	:= {}
Local lAF251TIP	:= ExistBlock('AF251TIP')
Default lDadosBem	:= .F.

If lAF251TIP
	aTiposC := ExecBlock('AF251TIP', .F., .F., { aTiposC } )
	aTipo	:=  aTiposC
Else
	aTipo	:= If(lDadosBem,{"01"},aTiposC)
EndIf



lRet:= ExistCpo("SX5","G1"+cTipo)
If lRet
	If aScan(aTipo,{|aX| aX == cTipo}) == 0
		If lDadosBem
			Help(" ", 1,"AF251TIPOC",, STR0135,1,0)
		Else
			Help(" ", 1,"AF251TIPOC",, STR0136,1,0)
		EndIf
		lRet	:= .F.
	EndIf
EndIf
Return lRet
/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³AF251FieldºAutor  ³Jair Ribeiro        º Data ³  05/19/11   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ bFieldOk para oGetDadosC - aba dados complementares        º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºParametros³ oGetDaDosC: Objeto MsNewGetDados para dados complementares º±±
±±º          ³ oGetDadTot: MsNewGetDados para rateio de valores			  º±±
±±º          ³ aColsDadoC: Array de acols dos dados complementares		  º±±
±±º          ³ nLinhaGet: Linha da MsGetDados com os dados do bem		  º±±
±±º          ³ nVOrigDb: Valor maximo para tipo 10                        º±±
±±º          ³ nValTp02: Valor maximo para tipo 02						  º±±
±±º          ³ nValTp07: Valor maximo para tipo 07                        º±±
±±º          ³ nValTp11: Valor maximo para tipo 11(implementar)           º±±
±±º          ³ aTiposC: Tipos de ativos com valores disponiveis para 	  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ SIGAATF                                                    º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function AF251Field(oGetDaDosC,aTiposC)
Local lRet 		:= .T.
Local cVar		:= ReadVar()
Local nPosVorig := Ascan(oGetDaDosC:aHeader, {|x| Alltrim(x[2])  == "N3_VORIG1"})
Local nLinha	:= oGetDaDosC:oBrowse:nAt
Local cTypes10	:= IIF(lIsRussia,AtfNValMod({1}, "|"),"") // CAZARINI - 24/03/2017 - If is Russia, add new valuations models - main models
Local aTypes10	:= {}
Local nTypes10	:= 0
Default aTiposC := {"10"}
aTypes10 := Separa(cTypes10, '|', .f.)
For nTypes10 := 1 to len(aTypes10)
	AAdd(aTiposC	, aTypes10[nTypes10])
Next nTypes10

If "N3_TIPO" $ cVar
	lRet := AF251VLDTP(.F.,aTiposC)
	If lRet
		If oGetDaDosC:aCols[nLinha,nPosVorig] == 0 //Coluna do Valor Original_1 estiver Zerado eu Calcularei os Valores Originais e Acumulados.
		   AF251CALDP(oGetDaDosC)
		Endif
		oGetDaDosC:ForceRefresh()
	EndIf
ElseIf "N3_VORIG" $ cVar
	lRet :=	 AF251CALCC(oGetDaDosC)
ElseIf "N3_TXDEP" $ cVar
	lRet := AF251TXDPC(oGetDaDosC)
EndIf

Return lRet
/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³AF251CALDPºAutor  ³Wilson.Godoi        º Data ³  26/10/12   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Calcula o Valor Original e Depreciacao Acumulada com Base  º±±
±±º          ³ No Valor Total do Tipo e Tipo de Saldo, utilizando o Perc. º±±
±±º          ³ da Linha da Primeira Aba do Rateio.                        º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ SIGAATF                                                    º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function AF251CALDP(oGetDaDosC)
Local nPercent 	:= 0
Local nVorig1  	:= 0

// *******************************
// Controle de multiplas moedas  *
// *******************************
Local aPosOrig 	:= {}
Local aPosAc   	:= {}
Local aHeaderX 		:= aClone(oGetDadosC:aHeader)
Local aColsX		:= aClone(oGetDadosC:aCols)
Local nLinha		:= oGetDadosC:oBrowse:nAt
Local nPosOrig      := Ascan(aHeaderX , {|x| Alltrim(x[2])  == "N3_VORIG1"})
Local lRet			:= .T.

If "N3_VORIG1" $ ReadVar() .OR. "N3_TIPO" $ ReadVar()    // Realiza a conversao somente a partir da moeda 1

	aPosOrig	:= AtfMultPos(aHeaderX,"N3_VORIG")
	aPosAc		:= AtfMultPos(aHeaderX,"N3_VRDACM")

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ nValorFis  Valor inicial a ser rateado                  ³
	//³ O valor rateado n„o pode ser maior que o valor origem³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If nPerRat == 0
		If nPosOrig > 0 .And. nLinha >0
			nVorig1 := aColsX[nLinha][nPosOrig]
		EndIf
		nPercent := NoRound(nVorig1/aVlrOri[1],5)
	Else
		nPercent := nPerRat
	Endif
	If !aColsX[nLinha][Len(aHeaderX)+1]
		AtfMultMoe(,,{|x| aColsX[n][aPosOrig[x]] := aVlrOri[x] * nPercent })
		AtfMultMoe(,,{|x| aColsX[n][aPosAc[x]]   := aVlrDepAc[x] * nPercent })
	Else
		Help(" ",1,"AF250VALOR")
		Return .F.
	EndIf
EndIf
oGetDadosC:aHeader 	:= aClone(aHeaderX)
oGetDadosC:aCols 	:= aClone(aColsX)
oGetDadosC:oBrowse:Refresh()
Return lRet

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³AF251VldDcºAutor  ³Jair Ribeiro        º Data ³  05/20/11   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Validacao para Linhaok e Delok do objeto oGetDadosC -      º±±
±±º          ³ Dados Complementares                                       º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºParametros³ oGetDaDosC: Objeto MsNewGetDados para dados complementares º±±
±±º          ³ lVldLin: Validacao Linha .T., Validacao Delete .F.         º±±
±±º          ³ nLin: Linha posicionada                                    º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ SIGAATF                                                    º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function AF251VldDc(oGetDaDosC,lVldLin,nLin)
Local nPosI 	:= 0
Local nPosJ 	:= 0
Local lDel		:= .F. //GDDeleted(nLin,oGetDaDosC:aHeader,oGetDaDosC:aCols)
Local aColsX	:= aClone(oGetDaDosC:aCols)
Local aHeaderX	:= aClone(oGetDaDosC:aHeader)
Local lRet		:= .T.
Local cTypes10	:= IIF(lIsRussia,"|" + AtfNValMod({1}, "|"),"") // CAZARINI - 27/03/2017 - If is Russia, add new valuations models - main models
Default lVldLin	:= .F.
Default nLin	:= oGetDaDosC:nAt
nPosI := Ascan(aHeaderX, {|x| Alltrim(x[2])  == "N3_TIPO"})
nPosJ := Ascan(aHeaderX, {|x| Alltrim(x[2])  == "N3_TPSALDO"})

If Len(aHeaderX) <= 0 .OR. Len(aColsX) <= 0
	lRet := .F.
Endif

If lRet
	//deixar GdDeleted sempre depois da clausula default por conta variavel nLin
	lDel := GDDeleted(nLin,oGetDaDosC:aHeader,oGetDaDosC:aCols)

	If (GDDeleted(nLin,aHeaderX,aColsX) .or. lVldLin) .And. (Valtype(aColsX[nLin,nPosI]) == 'C')
		If aColsX[nLin,nPosI] $ ("10|14" + cTypes10)
			If aScanX(aColsX,{|x,y| x[nPosI] == aColsX[nLin,nPosI] .and. x[nPosJ] == aColsX[nLin,nPosJ] .and. y!= nLin .and. !GDDeleted(y,aHeaderX,aColsX)})>0
				Help(" ",1,"AF251TIPOC",,STR0137,1,0)
				lRet	:= .F.
			EndIf
		ElseIf aColsX[nLin,nPosI] $ "02|07"
			If AllTrim(aColsX[nLin,nPosJ]) != "1"
				Help(" ",1,"AF251TIPOC",,STR0138,1,0) //"Tipo de saldo invalido para tipo de ativo em questao"
				lRet := .F.
			EndIf
			If lRet .and. aColsX[nLin,nPosI] == "07"
				If aScanX(aColsX,{|x,y| x[nPosI] == aColsX[nLin,nPosI] .and. y!= nLin .and. !GDDeleted(y,aHeaderX,aColsX)})>0
					Help(" ",1,"AF251TIPOC",,STR0139,1,0) //"Deve conter apenas 1 Tipo 07 - Depreciacao Acelerada"
					lRet	:= .F.
				EndIf
			EndIf
		EndIf
	EndIf
EndIf
Return lRet
/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³AF251TdokCºAutor  ³Jair Ribeiro        º Data ³  05/20/11   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Validacao TUDOOK para objeto oGetDadosC - Dados            º±±
±±º          ³ Complementares                                             º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºParametros³ oGetDaDosC: Objeto MsNewGetDados para dados complementares º±±
±±º          ³ aColsBkp: Acols de backup para verificar se ha mesmo       º±±
±±º          ³ bVorig1: Bloco para validacao do valor digitado            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ SIGAATF                                                    º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function AF251TdokC(oGetDaDosC,aColsBkp,bVorig1)
Local lRet		:= .T.
Local nI		:= 0
Local aColsX	:= aClone(oGetDaDosC:aCols)
Local aHeaderX	:= aClone(oGetDaDosC:aHeader)
Local nPosN3Aquis   := Ascan(aHeaderX, {|x| Alltrim(x[2])  == "N3_AQUISIC"} )

If !A251CAcols(aColsX,aColsBkp)
	For nI:= 1 To Len(aColsX)
		If !GDDeleted(nI,aHeaderX,aColsX)
			If !(oGetDaDosC:ChkObrigat(nI))
				lRet:= .F.
				Exit
			ElseIf !(lRet := AF251VldDc(oGetDaDosC,.T.,nI))
				Exit
			ElseIf !(lRet := Eval(bVorig1,nI))
				Exit
			EndIf
			IF EMPTY(aColsX[nI][nPosN3Aquis])  //DATA DE AQUISICAO NAO PODE ESTAR VAZIA
				HELP("",1,"DT_VAZIO_CP",,STR0179 ,1,0)  //"Data de aquisicao deve ser preenchida na aba complementos. Verifique!"
				lRet:= .F.
				Exit
			ENDIF
		EndIf
	Next nI
EndIf
Return lRet
/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³AF251CALCCºAutor  ³Jair Ribeiro        º Data ³  05/19/11   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Valid campos de valor N3_VORIGx                            º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ SIGAATF                                                    º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function AF251CALCC(oGetDaDosC)
Local nPercent 	:= 0
Local nVorig1  	:= 0

// *******************************
// Controle de multiplas moedas  *
// *******************************
Local aPosOrig 	:= {}
Local aPosAc   	:= {}
Local nX	   		:= 0
Local aHeaderX 		:= aClone(oGetDadosC:aHeader)
Local aColsX		:= aClone(oGetDadosC:aCols)

Local nLinha		:= oGetDadosC:oBrowse:nAt

Local lRet			:= .T.
Local cRateado		:= STR0074
Local nPosRat		:= Ascan(aHeadTotais, {|x| UPPER(Alltrim(Alltrim(x[1]) )) == Upper(Alltrim(cRateado))}) //Busca pelo titulo, pois o nome do campo se repete
Local nPosTpSd		:= Ascan(aHeaderX, {|x| UPPER(Alltrim(Alltrim(x[2]) )) == "N3_TPSALDO"})
Local nPosVal1		:= Ascan(aHeaderX, {|x| UPPER(Alltrim(Alltrim(x[2]) )) == "N3_VORIG1"})

If "N3_VORIG1" $ ReadVar()// Realiza a conversao somente a partir da moeda 1

	If aColsX[nLinha,nPosTpSd] == '1'
		oGetDadTot:aCols[2,nPosRat] := M->N3_VORIG1
		oGetDadTot:aCols[3,nPosRat] := 0
		oGetDadTot:oBrowse:Refresh()
		oGetDadTot:ForceRefresh()
	Elseif aColsX[nLinha,nPosTpSd] == '3'
		oGetDadTot:aCols[2,nPosRat] := 0
		oGetDadTot:aCols[3,nPosRat]	:= M->N3_VORIG1
		oGetDadTot:oBrowse:Refresh()
		oGetDadTot:ForceRefresh()
	Endif

	For nX := 1 To Len(aColsX)
		If nX <> nLinha
			If aColsX[nX,nPosTpSd] == '1' //Real
				oGetDadTot:aCols[2,nPosRat] += aColsX[nX,nPosVal1]
				oGetDadTot:oBrowse:Refresh()
				oGetDadTot:ForceRefresh()
			Elseif aColsX[nX,nPosTpSd] == '3' //Gerencial
				oGetDadTot:aCols[3,nPosRat] += aColsX[nX,nPosVal1]
				oGetDadTot:oBrowse:Refresh()
				oGetDadTot:ForceRefresh()
			Endif
		Endif
	Next nX
	aPosOrig	:= AtfMultPos(aHeaderX,"N3_VORIG")
	aPosAc		:= AtfMultPos(aHeaderX,"N3_VRDACM")

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ nValorFis  Valor inicial a ser rateado                  ³
	//³ O valor rateado n„o pode ser maior que o valor origem³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	nVorig1 := &(ReadVar())
	nPercent := NoRound(nVorig1/aValorOri[1],5)
	If !aColsX[nLinha][Len(aHeaderX)+1]
		AtfMultMoe(,,{|x| aColsX[n][aPosOrig[x]] := aValorOri[x] * nPercent })
		AtfMultMoe(,,{|x| aColsX[n][aPosAc[x]]   := aValDepAc[x] * nPercent })
	Else
		Help(" ",1,"AF250VALOR")
		Return .F.
	EndIf
EndIf
oGetDadosC:aHeader 	:= aClone(aHeaderX)
oGetDadosC:aCols 	:= aClone(aColsX)
oGetDadosC:oBrowse:Refresh()
Return lRet
/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³AF251TXDPCºAutor  ³Microsiga           º Data ³  05/19/11   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Valid campos de taxa de depreciacao N3_TXDEPx              º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ SIGAATF                                                    º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function AF251TXDPC(oGetDaDosC)
Local aArea 	:= GetArea()
Local lRet  	:= .T.
Local nTaxa 	:= &(Readvar())
Local aHeaderX 	:= aClone(oGetDadosC:aHeader)
Local aColsX	:= aClone(oGetDadosC:aCols)
Local nLinha	:= oGetDadosC:oBrowse:nAt

aPosTxDp	:= AtfMultPos(aHeaderX,"N3_TXDEPR")

AtfMultMoe(,,{|x| If(x=1,.F.,aColsX[nLinha][aPosTxDp[x]] := nTaxa)  })

aHeader 	:= aClone(aHeaderX)
aCols 		:= aClone(aColsX)
oGetDaDosC:oBrowse:Refresh()
RestArea(aArea)
Return lRet

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³Af251DCPRtºAutor  ³Jair Ribeiro        º Data ³  05/31/11   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Efetua a soma dos valores disponiveis para distribuicao    º±±
±±º          ³ para os tipos 02, 07 e 11 (implementar) de acordo com os   º±±
±±º          ³ itens selecionados										       º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºParametros³ cBaseDe: Codigo Base de: PARAMBOX 3						  º±±
±±º          ³ cBaseAte: Codigo Base ate: PARAMBOX 3					  º±±
±±º          ³ oGetDadTot: MsNewGetDados para rateio de valores			  º±±
±±º          ³ nValTp02: Valor para tipo 02								  º±±
±±º          ³ nValTp07: Valor para tipo 07 							  º±±
±±º          ³ nValTp11: Valor para tipo 11(implementar)				  º±±
±±º          ³ aTiposC: Tipos de ativos com valores disponiveis para 	  º±±
±±º          ³ distribuicao, sera preenchido pela funcao    			  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ SIGAATF                                                    º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function Af251DCPRt(cBaseDe,cBaseAte,aColsTotais,aValMTp,nValTp02,nValTp05,nValTp07,nValTp11,aTiposC,lValOk)
Local aArea 		:= SN3->(GetArea())
Local aTiposU		:= {"02","07","11","05"}
Local nPos			:= 0
Local nI			:= 0
Local nJ			:= 0
Local nPosValMt  	:= 0
Local nPosSalMt		:= 0
Local aSelec		:= {}
Local nTpSaldo2		:= ""
Local nTpSaldo5		:= ""
Local nTpSaldo7		:= ""
Local nTpSaldo11	:= ""
Local nIndex
Local lFirstMtp		:= .T.
Local cChaveSN3		:= ""

For nI := 1 To Len(aValMTp)
	If !Empty(aValMTp[nI,2])
		lFirstMtp:= .F.
		Exit
	EndIf
Next nI

If Len(aTiposC) == 0
	SN3->(DbSetOrder(1)) //N3_FILIAL+N3_CBASE+N3_ITEM+N3_TIPO+N3_BAIXA+N3_SEQ
	SN3->(DbSeek(xFilial("SN3")+cBaseDe,.T.))
	cChaveSN3 := ""
	While SN3->(!EOF())
		If cChaveSN3 != SN3->(N3_FILIAL+N3_CBASE+N3_ITEM)
			cChaveSN3 := SN3->(N3_FILIAL+N3_CBASE+N3_ITEM)
			If SN3->N3_OK == cMarca
				aAdd(aSelec,{SN3->N3_FILIAL,SN3->N3_CBASE,SN3->N3_ITEM})
			EndIf
		Endif
		SN3->(DbSkip())
	EndDo
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Limpa filtro para busca										 ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	RetIndex("SN3")
	Set Filter To
	fErase (cIndex+OrdBagExt())
	SN3->(DbSetOrder(1))//N3_FILIAL+N3_CBASE+N3_ITEM+N3_TIPO+N3_BAIXA+N3_SEQ

	nValTp02	:= 0
	nValTp05	:= 0
	nValTp07 	:= 0
	nValTp11 	:= 0

	For nI := 1 To Len(aSelec)
		SN3->(DbSeek(aSelec[nI,1]+aSelec[nI,2]+aSelec[nI,3]))
		While SN3->(!EOF()) .and. SN3->N3_FILIAL == aSelec[nI,1] .and. SN3->N3_CBASE == aSelec[nI,2] .and. SN3->N3_ITEM == aSelec[nI,3]
			// Tratamento para os tipo 13 - Adiantamento Gerencial e 15 - Margem de Lucro.
			// Esse ativos serão somados para o total de tipo de ativo 10
			cTipoATF := IIF(SN3->N3_TIPO $ '13/15','10', SN3->N3_TIPO )

			If (nPos := Ascan(aTiposU,{|aX| aX == cTipoATF })) > 0 .and. SN3->N3_BAIXA == "0"
				If nPos == 1
					nValTp02 += (SN3->N3_VORIG1 + SN3->N3_AMPLIA1 + SN3->N3_VRCACM1)
					nTpSaldo2 := SN3->N3_TPSALDO
				ElseIf nPos == 2
					nValTp07 += (SN3->N3_VORIG1 + SN3->N3_AMPLIA1 + SN3->N3_VRCACM1)
					nTpSaldo7 := SN3->N3_TPSALDO
				ElseIf nPos == 3
					nValTp11 += (SN3->N3_VORIG1 + SN3->N3_AMPLIA1 + SN3->N3_VRCACM1)
					nTpSaldo11 := SN3->N3_TPSALDO
				ElseIf nPos == 4
					nValTp05 += (SN3->N3_VORIG1 + SN3->N3_AMPLIA1 + SN3->N3_VRCACM1)
					nTpSaldo5 := SN3->N3_TPSALDO
				EndIf
			ElseIf (nPosValMt:= AsCan(aValMTp,{|aX| aX[1] == AllTrim(cTipoATF)}))> 0 .and. SN3->N3_BAIXA == "0" .and. lFirstMtp
				If (nPosSalMt := AsCan(aValMtp[nPosValMt,2],{|aX| AllTrim(aX[1]) == AllTrim(SN3->N3_TPSALDO)}))> 0
					aValMtp[nPosValMt,2,nPosSalMt,2] += SN3->N3_VORIG1 + SN3->N3_AMPLIA1 + SN3->N3_VRCACM1
				Else
					aAdd(aValMtp[nPosValMt,2],{SN3->N3_TPSALDO,SN3->N3_VORIG1 + SN3->N3_AMPLIA1 + SN3->N3_VRCACM1})
				EndIf
			EndIf
			SN3->(DbSkip())
		EndDo
	Next nI

	For nI := 1 To Len(aValMTp)
		If !Empty(aValMTp[nI,2])
			For nJ := 1 To Len(aValMTp[nI,2])
				aAdd(aColsTotais, {STR0105,aValMtp[nI,1],aValMtp[nI,2,nJ,1],aValMtp[nI,2,nJ,2], If(lValOk,aValMtp[nI,2,nJ,2],0), .F.})
				aAdd(aTiposC,aValMtp[nI,1])
			Next nJ
		EndIf
	Next nI

	If nValTp02 > 0
		aAdd(aColsTotais, {STR0105,"02",nTpSaldo2,nValTp02, If(lValOk,nValTp02,0), .F.})
		aAdd(aTiposC,"02")
	EndIf
	If nValTp05 < 0
		aAdd(aColsTotais, {STR0105,"05",nTpSaldo5,nValTp05, If(lValOk,nValTp05,0), .F.})
		aAdd(aTiposC,"05")
	EndIf	
	If nValTp07 > 0
		aAdd(aColsTotais, {STR0105,"07",nTpSaldo7,nValTp07,If(lValOk,nValTp07,0), .F.})
		aAdd(aTiposC,"07")
	EndIf
	If nValTp11 > 0
		aAdd(aColsTotais, {STR0105,"11",nTpSaldo11,nValTp11, If(lValOk,nValTp11,0), .F.})
		aAdd(aTiposC,"11")
	EndIf

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ restaura filtro                                              ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	DbSelectArea("SN3")
	DbSetOrder(1)
	cChave  := IndexKey()
	IndRegua("SN3",cIndex,cChave,,/*FA251Check(cBaseDe,cBaseAte)*/ ,STR0011) // "Selecionando Registros..."
	nIndex := RetIndex("SN3")
	DbSelectArea("SN3")
	DbSetOrder(nIndex+1)
	DbGoTop()
	For nI := 1 To Len(aSelec)
		If SN3->(DbSeek(aSelec[nI,1]+aSelec[nI,2]+aSelec[nI,3],.T.))
			RecLock("SN3",.F.)
			SN3->N3_OK := cMarca
			SN3->(MsUnlock())
			MarcouItem()
		EndIf
	Next nI
	DbGoTop()
EndIf

SN3->(RestArea(aArea))
Return
/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³A251CAcolsºAutor  ³Jair Ribeiro        º Data ³  05/31/11   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Retorna se valores dos acols foram alterados               º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºParametros³ aArrayI: aCols bakup                                       º±±
±±º          ³ aArrayJ: aCols em uso                                      º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ SIGAATF                                                    º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function A251CAcols(aArrayI,aArrayJ)
Local nJ	:= 0
Local nI	:= 0
Local lRet	:= .T.
Local nPosTx1 := Ascan(oGetDaDosC:aHeader, {|x| Alltrim(x[2])  == "N3_TXDEPR1"} )
Local nPosTx2 := Ascan(oGetDaDosC:aHeader, {|x| Alltrim(x[2])  == "N3_TXDEPR2"} )
Local nPosTx3 := Ascan(oGetDaDosC:aHeader, {|x| Alltrim(x[2])  == "N3_TXDEPR3"} )
Local nPosTx4 := Ascan(oGetDaDosC:aHeader, {|x| Alltrim(x[2])  == "N3_TXDEPR4"} )
Local nPosTx5 := Ascan(oGetDaDosC:aHeader, {|x| Alltrim(x[2])  == "N3_TXDEPR5"} )
If lRet := (Len(aArrayI) == Len(aArrayJ))
	For nI := 1 To Len(aArrayI)
		For nJ := 1 To Len(aArrayI[nI])
			If aArrayI[nI,nJ] != aArrayJ[nI,nJ] .and. nJ <> nPosTx1 .and. nJ <> nPosTx2 .and. nJ <> nPosTx3 .and. nJ <> nPosTx4 .and. nJ <> nPosTx5
				lRet := .F.
				Exit
			EndIf
			If !lRet
				Exit
			EndIf
		Next nJ
	Next nI
Else
	lRet := .F.
EndIf
Return lRet
/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³AF251VORIGºAutor  ³Jair Ribeiro        º Data ³  05/31/11   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Valida valor digitado para dados complementares            º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºParametros³ oGetDaDosC: Objeto MsNewGetDados para dados complementares º±±
±±º          ³ oGetDadTot: Objeto MsNewGetDados da aba rateio de valores  º±±
±±º          ³ aColsDadoC: Array de acols dos dados complementares        º±±
±±º          ³ nLinhaGet: Linha da MsGetDados com os dados do bem         º±±
±±º          ³ nVOrigDb: Valor maximo para tipo 10                        º±±
±±º          ³ nValTp02: Valor maximo para tipo 02						  º±±
±±º          ³ nValTp07: Valor maximo para tipo 07                        º±±
±±º          ³ nValTp11: Valor maximo para tipo 11(implementar)           º±±
±±º          ³ nLinha: Linha posicionada na MsNewGetDados dos dados       º±±
±±º          ³ complementares                                             º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ SIGAATF                                                    º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function AF251VORIG(oGetDaDosC,oGetDadTot,aColsDadoC,nLinhaGet,nVOrigDb,aValMTp,nValTp02,nValTp07,nValTp11,nLinha,oGetDadImp )
Local nI		:= 0
Local nJ		:= 0
Local aHeaderX 	:= aClone(oGetDadosC:aHeader)
Local aColsX	:= aClone(oGetDadosC:aCols)
Local aColsY   	:= aClone(oGetDadTot:aCols)
Local cTipoBem	:= ""   //GdFieldGet("N3_TIPO"		,nLinha,.F.,aHeaderX,aColsX)
Local cTipoSal	:= ""   //GdFieldGet("N3_TPSALDO"	,nLinha,.F.,aHeaderX,aColsX)
Local nVorig1	:= 0   //GdFieldGet("N3_VORIG1"	,nLinha,.F.,aHeaderX,aColsX)
Local nPosVorig := Ascan(aHeaderX, {|x| Alltrim(x[2])  == "N3_VORIG1"})
Local nPosTipo	:= Ascan(aHeaderX, {|x| Alltrim(x[2])  == "N3_TIPO"})
Local nPosTpSd	:= Ascan(aHeaderX, {|x| Alltrim(x[2])  == "N3_TPSALDO"})
Local nRateioTp	:= 0
Local nPosValMt	:= 0
Local nPosSalMt	:= 0
Local lRet		:= .T.
Local aRetAF251V:= {}  // Retorno do Ponto de entrada AF251VLORI

Default nLinha	:= oGetDadosC:oBrowse:nAt
Default nVOrigDb:= 0
Default aValMTp	:= {}
Default nValTp02:= 0
Default nValTp07:= 0
Default nValTp11:= 0

//deixar sempre depois da clausula default por conta da variavel nLinha
cTipoBem := GdFieldGet("N3_TIPO"	,nLinha,.F.,aHeaderX,aColsX)
cTipoSal := GdFieldGet("N3_TPSALDO"	,nLinha,.F.,aHeaderX,aColsX)
nVorig1	 := GdFieldGet("N3_VORIG1"	,nLinha,.F.,aHeaderX,aColsX)


If !aColsX[nLinha][Len(aHeaderX)+1]
	Do Case
		Case (nPosValMt:= AsCan(aValMTp,{|aX| aX[1] == AllTrim(cTipoBem)}))> 0
			If (nPosSalMt := AsCan(aValMtp[nPosValMt,2],{|aX| aX[1] == AllTrim(cTipoSal)}))> 0
				For nI	:= 1 To Len(aColsDadoC)
					If nI != nLinhaGet
						For nJ := 1 To Len(aColsDadoC[nI,2])
							If !aColsDadoC[nI,2,nJ,Len(aHeaderX)+1]
								If  AllTrim(aColsDadoC[nI,2,nJ,nPosTipo]) == AllTrim(cTipoBem) .and. AllTrim(aColsDadoC[nI,2,nJ,nPosTpSd]) == AllTrim(cTipoSal)
									nRateioTp += aColsDadoC[nI,2,nJ,nPosVorig]
								EndIf
							EndIf
						Next
					EndIf
				Next nI
				For nI	:= 1 To Len(aColsX)
					If nI != nLinha
						If !aColsX[nI][Len(aHeaderX)+1]
							If AllTrim(aColsX[nI,nPosTipo]) == AllTrim(cTipoBem) .and. AllTrim(aColsX[nI,nPosTpSd]) == AllTrim(cTipoSal)
								nRateioTp += aColsX[nI,nPosVorig]
							EndIf
						EndIf
					EndIf
				Next nI

				nRateioTp += nVorig1
				If QtdComp(nRateioTp) > QtdComp(Round(aValMtp[nPosValMt,2,nPosSalMt,2],X3Decimal("N3_VORIG1")))
					Help(" ", 1,"AF251VLRC",, STR0140+AllTrim(cTipoBem),1,0) // "Valor acima do disponivel para o tipo "
					lRet := .F.
				Else

					For nI := 1 To Len(aColsY)
						If aColsY[nI,2] == AllTrim(cTipoBem) .and.  aColsY[nI,3] == AllTrim(cTipoSal)
							aColsY[nI,5]	:= nRateioTp
							oGetDadTot:aCols:= aColsY
							oGetDadTot:ForceRefresh()
							Exit
						EndIf
					Next nI
				EndIf
			Else
				Help(" ", 1,"AF251VLRC",, STR0157,1,0)      //"Tipo de saldo informado nao possue valor a ser distribuido"
				lRet := .F.
			EndIf

		Case AllTrim(cTipoBem) $ "|02"
			For nI	:= 1 To Len(aColsDadoC)
				If nI != nLinhaGet
					For nJ := 1 To Len(aColsDadoC[nI,2])
						If !aColsDadoC[nI,2,nJ,Len(aHeaderX)+1]
							If  AllTrim(aColsDadoC[nI,2,nJ,nPosTipo]) $ "|02"
								nRateioTp += aColsDadoC[nI,2,nJ,nPosVorig]
							EndIf
						EndIf
					Next
				EndIf
			Next nI

			For nI	:= 1 To Len(aColsX)
				If nI != nLinha
					If !aColsX[nI][Len(aHeaderX)+1]
						If AllTrim(aColsX[nI,nPosTipo]) $ "|02"
							nRateioTp += aColsX[nI,nPosVorig]
						EndIf
					EndIf
				EndIf
			Next nI

			nRateioTp += nVorig1
			If QtdComp(nRateioTp) > QtdComp(nValTp02)
				Help(" ", 1,"AF251VLRC",, STR0140+AllTrim(cTipoBem),1,0) // "Valor acima do disponivel para o tipo "
				lRet := .F.
			ElseIf (nPos := Ascan(aColsY,{|aX| aX[2] == AllTrim(cTipoBem)})) > 0
				aColsY[nPos,5]	:= nRateioTp
				oGetDadTot:aCols:= aColsY
				oGetDadTot:ForceRefresh()
			EndIf
		Case AllTrim(cTipoBem) $ "|07"
			For nI	:= 1 To Len(aColsDadoC)
				If nI != nLinhaGet
					For nJ := 1 To Len(aColsDadoC[nI,2])
						If  AllTrim(aColsDadoC[nI,2,nJ,nPosTipo]) $ "|07"
							nRateioTp += aColsDadoC[nI,2,nJ,nPosVorig]
						EndIf
					Next
				EndIf
			Next nI

			For nI	:= 1 To Len(aColsX)
				If nI != nLinha
					If AllTrim(aColsX[nI,nPosTipo]) $ "|07"
						nRateioTp += aColsX[nI,nPosVorig]
					EndIf
				EndIf
			Next nI

			nRateioTp += nVorig1
			If QtdComp(nRateioTp) > QtdComp(nValTp07)
				Help(" ", 1,"AF251VLRC",, STR0140+AllTrim(cTipoBem),1,0)  // "Valor acima do disponivel para o tipo "
				lRet := .F.
			ElseIf (nPos := Ascan(aColsY,{|aX| aX[2] == AllTrim(cTipoBem)})) > 0
				aColsY[nPos,5]	:= nRateioTp
				oGetDadTot:aCols:= aColsY
				oGetDadTot:ForceRefresh()
			EndIf

		Case AllTrim(cTipoBem) $ "|11"
			For nI	:= 1 To Len(aColsDadoC)
				If nI != nLinhaGet
					For nJ := 1 To Len(aColsDadoC[nI,2])
						If  AllTrim(aColsDadoC[nI,2,nJ,nPosTipo]) $ "|11"
							nRateioTp += aColsDadoC[nI,2,nJ,nPosVorig]
						EndIf
					Next
				EndIf
			Next nI

			For nI	:= 1 To Len(aColsX)
				If nI != nLinha
					If AllTrim(aColsX[nI,nPosTipo]) $ "|11"
						nRateioTp += aColsX[nI,nPosVorig]
					EndIf
				EndIf
			Next nI
			nRateioTp += nVorig1
			If QtdComp(nRateioTp) > QtdComp(nValTp11)
				Help(" ", 1,"AF251VLRC",, STR0140+AllTrim(cTipoBem),1,0)  // "Valor acima do disponivel para o tipo "
				lRet := .F.
			ElseIf (nPos := Ascan(aColsY,{|aX| aX[2] == AllTrim(cTipoBem)})) > 0
				aColsY[nPos,5]	:= nRateioTp
				oGetDadTot:aCols:= aColsY
				oGetDadTot:ForceRefresh()
			EndIf
	EndCase
EndIf

/*Ponto de entrada manipulação dos objetos da aba inferior da tela */
 If Existblock("AF251VLO")
	aRetAF251V := ExecBlock("AF251VLO", .f., .f., { @oGetDadTot, @oGetDadImp } )

	oGetDadTot := aRetAF251V[1]
	oGetDadImp := aRetAF251V[2]

EndIf

Return lRet
/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³A251RATDespºAutor ³Jair Ribeiro        º Data ³  06/06/11   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Acao do botao Rateio incluido na enchoice, efetua a chamadaº±±
±±º          ³ da tela de rateio de despesas                              º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ SIGAATF                                                    º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function A251RATDesp(aRateio,oGet,oGetDadosC,nFolder)
Local bFuncPanel	:= {|oWnd| FA251GetPn(oGet,oGetDadosC,nFolder,oWnd)}


Local nLin	   		:= 0
Local nPos			:= 0

If nFolder == 2
	nLin	:= oGetDadosC:oBrowse:nAt
	If Empty(aRateio[nFolder])
		aAdd(aRateio[nFolder],{oGet:oBrowse:nAt,{}})
		AF011FRAT(aRateio[nFolder,Len(aRateio[nFolder])][2],nLin,3,bFuncPanel)
	ElseIf (nPos:= aScan(aRateio[nFolder],{|aX| aX[1] == oGet:oBrowse:nAt})) > 0
		AF011FRAT(aRateio[nFolder,nPos][2],nLin,3,bFuncPanel)
	Else
		aAdd(aRateio[nFolder],{oGet:oBrowse:nAt,{}})
		AF011FRAT(aRateio[nFolder,Len(aRateio[nFolder])][2],nLin,3,bFuncPanel)
	EndIf
ElseIf nFolder == 1
	nLin	:= oGet:oBrowse:nAt
	AF011FRAT(aRateio[nFolder],nLin,3,bFuncPanel)
EndIf

Return
/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³FA010GetPnºAutor  ³Jair Ribeiro        º Data ³  04/08/11   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Cria objeto panel com say para tela de rateio              º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ SIGAATF                                                    º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function FA251GetPn(oGet,oGetDadosC,nFolder,oWnd)
Local oTPanel	:= Nil
Local oSay1		:= Nil
Local oSay2		:= Nil
Local oSay3		:= Nil
Local oSay4		:= Nil
Local oSay5		:= Nil
Local oSay6		:= Nil
Local oAriaN	:= tFont():New("Arial",,-12,,.T.)
Local oAriaI	:= tFont():New("Arial",,-12,,.F.,,,,.T.)
Local nLin		:= 0
Local aColsX	:= {}
Local aHeaderX	:= {}

If nFolder == 1
	aColsX 	:= aClone(aCols)
	aHeaderX:= aClone(aHeader)
	nLin	:= oGet:oBrowse:nAt
ElseIf nFolder == 2
	aColsX 	:= aClone(oGetDadosC:aCols)
	aHeaderX:= aClone(oGetDadosC:aHeader)
	nLin	:= oGetDadosC:oBrowse:nAt
EndIf

oTPanel:= TPanel():New(10,10,"",oWnd,,,,,,20,20)
oTPanel:Align := CONTROL_ALIGN_TOP

oSay1 := TSay():New(05,005,{|| STR0143			}  	  		   							,oTPanel,,oAriaN,,,,.T.)    //"Código Base: "
oSay2 := TSay():New(05,050,{|| GdFieldGet('N1_CBASE'	,nLin,.F.,aHeaderX,aColsX)}  	,oTPanel,,oAriaI,,,,.T.)

oSay3 := TSay():New(05,105,{|| STR0144}			 									,oTPanel,,oAriaN,,,,.T.) //"Item: "
oSay4 := TSay():New(05,125,{|| GdFieldGet('N1_ITEM'	,nLin,.F.,aHeaderX,aColsX)}	,oTPanel,,oAriaI,,,,.T.)

oSay5 := TSay():New(05,160,{|| STR0145}				   	   							,oTPanel,,oAriaN,,,,.T.) //"Tipo: "
oSay6 := TSay():New(05,180,{|| GdFieldGet('N3_TIPO'	,nLin,.F.,aHeaderX,aColsX)}	,oTPanel,,oAriaI,,,,.T.)


Return oTPanel

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³AF251ATURATºAutor ³Jair Ribeiro        º Data ³  06/06/11   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Atualiza MsNewGetDados contida na aba Rateio de acordo com º±±
±±º          ³ item posicionado                                           º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ SIGAATF                                                    º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function AF251ATURAT(aRateio,oGetDdRat,nLin,nFolder,aColsRat,nLinOrigem)
Local nPos		:= 0
Local nPos2		:= 0
Local nI		:= 0
Local aColsX 	:= {}
Local aColsY	:= {}
Default	nLinOrigem	:= 0

If oGetDdRat != Nil
	If nFolder == 2 .and. !Empty(aRateio[nFolder])
		If (nPos:= aScan(aRateio[nFolder],{|aX| aX[1] == nLinOrigem}))>0
			If (nPos2:= aScan(aRateio[nFolder,nPos][2],{|aX| aX[4] == nLin}))>0
				aColsY := aClone(aRateio[nFolder,nPos,2,nPos2,5])
				If !Empty(aColsY)
					For nI:= 1 To Len(aColsY)
						If !aColsY[nI,Len(aColsY[nI])]
							aAdd(aColsX,aColsY[nI])
						EndIf
					Next nI
					oGetDdRat:aCols:= aColsX
				Else
					oGetDdRat:aCols:= aColsRat
				EndIf
			Else
				oGetDdRat:aCols:= aColsRat
			EndIf
		Else
			oGetDdRat:aCols:= aColsRat
		EndIf
	ElseIf (nPos:= aScan(aRateio[nFolder],{|aX| aX[4] == nLin}))>0
		aColsY := aClone(aRateio[nFolder,nPos,5])
		If !Empty(aColsY)
			For nI:= 1 To Len(aColsY)
				If !aColsY[nI,Len(aColsY[nI])]
					aAdd(aColsX,aColsY[nI])
				EndIf
			Next nI
			oGetDdRat:aCols:= aColsX
		Else
			oGetDdRat:aCols:= aColsRat
		EndIf
	Else
		oGetDdRat:aCols:= aColsRat
	EndIf
	oGetDdRat:ForceRefresh()
EndIf
Return
/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³AF251DELR ºAutor  ³Jair Ribeiro        º Data ³  04/26/11   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Prepara array de rateio para exclusao                      º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ SIGATAF                                                    º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function AF251DELR(aRateio,aColsX)
Local nI := 0

For nI := 1 to Len(aColsX)
	If aColsX[nI][Len(aColsX[nI])] .or. Empty(aColsX[nI,1])
		If (nPosnAt := IiF(!Empty(aRateio), aScan(aRateio,{|x| x[4] == nI }),0)) > 0
			aRateio[nPosnAt,6] := .T.
		EndIf
	EndIf
Next nI
Return
/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Programa  ³MenuDef   ³ Autor ³ Ana Paula N. Silva    ³ Data ³29/11/06  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Utilizacao de menu Funcional                               ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³Array com opcoes da rotina.                                 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³Parametros do array a Rotina:                               ³±±
±±³          ³1. Nome a aparecer no cabecalho                             ³±±
±±³          ³2. Nome da Rotina associada                                 ³±±
±±³          ³3. Reservado                                                ³±±
±±³          ³4. Tipo de Transa‡„o a ser efetuada:                        ³±±
±±³          ³		1 - Pesquisa e Posiciona em um Banco de Dados    	  ³±±
±±³          ³    2 - Simplesmente Mostra os Campos                       ³±±
±±³          ³    3 - Inclui registros no Bancos de Dados                 ³±±
±±³          ³    4 - Altera o registro corrente                          ³±±
±±³          ³    5 - Remove o registro corrente do Banco de Dados        ³±±
±±³          ³5. Nivel de acesso                                          ³±±
±±³          ³6. Habilita Menu Funcional                                  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³   DATA   ³ Programador   ³Manutencao efetua							  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³               ³                                            ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function MenuDef()
Local aAF251BUT := {}
Local nX      	:= 0
Local aRotina 	:= {}

aAdd(aRotina , {STR0001	,"AxPesqui"   							, 0 , 1 ,,.F.	} ) // "Pesquisar"
aAdd(aRotina , {STR0002	,'VIEWDEF.ATFA012' 						, 0 , 2			} ) // "Visualizar"
aAdd(aRotina , {STR0003	,"AF251Baix('0')"   					, 0 , 4			} ) // "Transfere"
aAdd(aRotina , {STR0004	,"Af251Canc(,,,,,,'000366','ATFA251')"  , 0 , 5			} ) // "Canc. Adiant"
aAdd(aRotina , {STR0127	,"AF251Baix('1')"  						, 0 , 6			} ) //"Detalhar"
aAdd(aRotina , {STR0146	,"AF251Baix('2')" 						, 0 , 6			} ) //"Agrupar"
aAdd(aRotina , {STR0188 ,"AF251Baix('3')" 					    , 0 , 6			} ) //"Agrupar bem em construc."
aAdd(aRotina , {STR0162	,"AtfLegenda"							, 0 , 6 ,,.F.	} ) //"Legenda"


//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ P.E. Utilizado para adicionar botoes ao Menu Principal       ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If ExistBlock("AF251BUT")
	aAF251BUT := ExecBlock("AF251BUT",.F.,.F.,aRotina)
	IF ValType(aAF251BUT) == "A" .AND. Len(aAF251BUT) > 0
		For nX := 1 to len(aAF251BUT)
			aAdd(aRotina,aAF251BUT[nX])
		Next
	ENDIF
Endif
Return(aRotina)

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³AF251DIST ºAutor  ³Jair Ribeiro        º Data ³  06/06/11   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Tela para distribuicao do valor do bem acionada pela       º±±
±±º          ³ opcao detalhar do browse                                   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºParametros³nValorFis: Valor a ser distribuido					      º±±
±±º          ³aDetalhar: Array preenchido apos confirmacao da tela com as º±±
±±º          ³ porcentagem informadas pelo usuario                        º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ SIGAATF                                                    º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function AF251DIST(nValorDist,aDetalhar)
Local oDlg			:= Nil
Local oSay1			:= Nil
Local oSay2			:= Nil
Local oSay3			:= Nil
Local oSay4			:= Nil
Local oSay11		:= Nil
Local oSay21		:= Nil
Local oSay31		:= Nil
Local oSay41		:= Nil

Local oArial12		:= tFont():New("Arial",,-12,,.T.)
Local oArial12It	:= tFont():New("Arial",,-12,,.F.,,,,.T.)
Local aHeaderD		:= {}
Local aColsD		:= {}
Local aValor		:= {}
Local nI			:= 0
Local nOpcA			:= 0
Local bAtuVal		:= {|x,y,w,z| z:= AF251AtuVal(oGetDist,nValorDist,aValor,x,y,w), Iif(z,(oSay11:Refresh(), oSay21:Refresh(), oSay31:Refresh(), oSay41:Refresh()),Nil),z}
Local aDms  		:= FWGetDialogSize(oMainWnd)

Local bLinhaOk		:= {|| Eval(bAtuVal,.T.)}
Local bDelOk		:= {|| Eval(bAtuVal)}
Local bFieldOk		:= {|| AF251FdDt(oGetDist,nValorDist,bAtuVal)}
Local bTudoOk		:= {|| AF251TdDt(oGetDist,nValorDist)}
Local bUpdate		:= {|| If ( (Eval(bAtuVal,.T.).and. Eval(bTudoOk)),(oDlg:End(),nOpcA:=1),Nil)}
Local bEndWin		:= {|| oDlg:End()}
Local nPosP			:= 0
Local nPosV			:= 0

Default nValorDist	:= 0

If nValorDist > 0
	aAdd(aValor,0)
	aAdd(aValor,nValorDist)
	aAdd(aValor,0)
	aAdd(aValor,100)

	If !lAutomato //Para robo de automação e/ou rotina automatica
		oDlg:= MSDialog():New(aDms[1],aDms[2],aDms[3]/2,aDms[4]/2,STR0147,,,,,,,,,.T.) //"Detalhar - Distribuir Valor"
		oPanel1 := TPanel():New(0,0,'',oDlg,, .T., .T.,, ,30,30,.T.,.T. )
		oPanel1:Align := CONTROL_ALIGN_TOP

		oPanel2 := TPanel():New(0,0,'',oDlg,, .T., .T.,, ,30,30,.T.,.T. )
		oPanel2:Align := CONTROL_ALIGN_ALLCLIENT

		oSay1	:= tSay():New(00,01,{|| STR0148	}	,oPanel1,								,oArial12)  // "Distribuido:"
		oSay2	:= tSay():New(00,20,{|| STR0149	}	,oPanel1,								,oArial12) //"A Distribuir:"
		oSay3	:= tSay():New(01,01,{|| STR0150	}	,oPanel1,								,oArial12)
		oSay4	:= tSay():New(01,20,{|| STR0151	}	,oPanel1,								,oArial12) //"%A Distribuir:"

		oSay11	:= tSay():New(00,07,{|| aValor[1]}	,oPanel1,PesqPict("SN3","N3_VORIG1")	,oArial12It)
		oSay21	:= tSay():New(00,26,{|| aValor[2]}	,oPanel1,PesqPict("SN3","N3_VORIG1")	,oArial12It)
		oSay31	:= tSay():New(01,07,{|| aValor[3]}	,oPanel1,PesqPict("SNV","NV_PERCEN")	,oArial12It)
		oSay41	:= tSay():New(01,26,{|| aValor[4]}	,oPanel1,PesqPict("SNV","NV_PERCEN")	,oArial12It)
	Endif

	AF251InHdr(aHeaderD,"NV_PERCEN")
	AF251InHdr(aHeaderD,"N3_VORIG1")
	AF251AltHd(aHeaderD,"NV_PERCEN"		,06,"")
	AF251AltHd(aHeaderD,"N3_VORIG1"		,06,"")

	aAdd(aColsD,Array(Len(aHeaderD)+1))
	aColsD[Len(aColsD),Len(aHeaderD)+1] := .F.

	For nI := 1 To Len(aHeaderD)
		aColsD[Len(aColsD)][nI] := CriaVar(aHeaderD[nI][2])
	Next nI
	If !lAutomato //Para robo de automação e/ou rotina automatica
		oGetDist := MsNewGetDados():New(0,0,150,200,(GD_INSERT+GD_UPDATE+GD_DELETE),"AllwaysTrue","AllwaysTrue",,,,999,"AllwaysTrue",,"AllwaysTrue",oPanel2,aHeaderD,aColsD)
	Endif

	If !lAutomato //Para robo de automação e/ou rotina automatica
		oGetDist:bLinhaOk		:= bLinhaOk
		oGetDist:bDelOk 		:= bDelOk
		oGetDist:bFieldok		:= bFieldOk
		oGetDist:oBrowse:Align	:= CONTROL_ALIGN_ALLCLIENT
		ACTIVATE MSDIALOG oDlg ON INIT EnchoiceBar(oDlg,bUpdate,bEndWin) CENTERED
	Endif
EndIf

If lAutomato // Verifica se array passado diferente de NIL e seta opç?o como 1 para continuar detalhamento
	if aAcolDet <> NIL // se array na automaç?o está passando corretamente
		nOpcA := 1
	Endif
Endif

If nOpcA == 1
	If !lAutomato
		nPosP		:= aScan(oGetDist:aHeader,{|x| alltrim(x[2]) == "NV_PERCEN"})
		nPosV		:= aScan(oGetDist:aHeader,{|x| alltrim(x[2]) == "N3_VORIG1"})
		For nI := 1 To Len(oGetDist:aCols)
			If oGetDist:aCols[nI,nPosP] > 0 .and. !GDDeleted(nI,oGetDist:aHeader,oGetDist:aCols)
				aAdd(aDetalhar,{oGetDist:aCols[nI,nPosP],oGetDist:aCols[nI,nPosV]})
			EndIf
		Next nI
	else
		//Para cenários automaticos, robo de testes, preenche o aDetalhar com  a porcentagem com base no array AcolsX(em tela), e AcolDet via robo
		For nI := 1 To Len(aAcolDet)
			If aAcolDet[nI,1] > 0 .and. !aAcolDet[nI,3]
				aAdd(aDetalhar,{aAcolDet[nI,1],aAcolDet[nI,2]})
			EndIf
		Next nI

	Endif
EndIf
Return nOpcA
/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³AF251AtuValºAutor ³Jair Ribeiro        º Data ³  06/06/11   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Funcao atualiza valores executada a partir dos metodos     º±±
±±º          ³ linhaok e delok da MsNewGetDados contida na funcao         º±±
±±º          ³ AF251DIST										          º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºParametros³ oGetDist: Objeto MsNewGetDados contido na tela detalhar    º±±
±±º          ³ - distribuir valor                                         º±±
±±º          ³ nValorDist: Valor a ser distribuido                        º±±
±±º          ³ aValor: Array para atualizacao dos says da tela de detalharº±±
±±º          ³ lVldLin: Indica se sera feita validacao de linha 		  º±±
±±º          ³ .T. - Validacao de linha - .F. - Validacao Delete          º±±
±±º          ³ nValorD: Valor digitado pelo usuario				          º±±
±±º          ³ nPorcenD: Porcentagem digitada pelo usuario		          º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ SIGAATF                                                    º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function AF251AtuVal(oGetDist,nValorDist,aValor,lVldLin,nValorD,nPorcenD)
Local aColsX	:= oGetDist:aCols
Local aHeaderX	:= oGetDist:aHeader
Local nPosV		:= aScan(aHeaderX,{|x| alltrim(x[2]) == "N3_VORIG1"})
Local nPosP		:= aScan(aHeaderX,{|x| alltrim(x[2]) == "NV_PERCEN"})
Local nI		:= 0
Local lRet 		:= .T.
Local aValorX	:= {0,0,0,0}
Local nLinha	:= oGetDist:oBrowse:nAt

Default lVldLin	:= .F.
Default nValorD	:= aColsX[nLinha,nPosV]
Default nPorcenD:= aColsX[nLinha,nPosP]

For nI:= 1 To Len(aColsX)
	If !GDDeleted(nI,aHeaderX,aColsX) .and. nI != nLinha
		aValorX[1] 	+= aColsX[nI, nPosV]
		aValorX[3] 	+= aColsX[nI, nPosP]
	EndIf
Next nI
If GDDeleted(nLinha,aHeaderX,aColsX) .or. lVldLin
	If (aValorX[1]+nValorD) > nValorDist
		If !lVldLin .or. (!GDDeleted(nLinha,aHeaderX,aColsX))
			Help(" ", 1,"AF251DIST",, STR0152,1,0)  //"Valor informado acima do valor a ser ditribuido (A Distribuir)"
			lRet := .F.
		EndIf
	Else
		aValorX[1]:= aValorX[1]+ nValorD
		aValorX[2]:= nValorDist - aValorX[1]
	EndIf

	If lRet
		If (aValorX[3]+nPorcenD) > 100
			If !lVldLin .or. (!GDDeleted(nLinha,aHeaderX,aColsX))
				Help(" ", 1,"AF251DIST",, STR0153,1,0) // "Porcentagem informada acima da porcentagem a ser ditribuida (%A Distribuir)"
				lRet := .F.
			EndIf
		Else
			aValorX[3]:= aValorX[3]+nPorcenD
			aValorX[4]:= 100 - aValorX[3]
		EndIf
	EndIf
Else
	aValorX[2]:= If( (nValorDist - aValorX[1] < 0),0, nValorDist-aValorX[1])
	aValorX[4]:= If( (100 - aValorX[3] < 0), 0, 100 - aValorX[3])
EndIf
If lRet
	aValor:= aClone(aValorX)
EndIf
Return lRet
/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³AF251FdDt ºAutor  ³Jair Ribeiro        º Data ³  06/06/11   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Validacao para fieldok da tela de detalhar - distribuir    º±±
±±º          ³ valor contido na funcao AF251DIST                          º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºParametros³ oGetDist: Objeto MsNewGetDados contido na tela detalhar    º±±
±±º          ³ - distribuir valor                                         º±±
±±º          ³ nValorDist: Valor a ser distribuido                        º±±
±±º          ³ bAtuVal: Bloco para atualizacao dos valores	              º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ SIGAATF                                                    º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function AF251FdDt(oGetDist,nValorDist,bAtuVal)
Local lRet		:= .T.
Local cVar		:= ReadVar()
Local aColsX	:= oGetDist:aCols
Local aHeaderX	:= oGetDist:aHeader
Local nPosV		:= aScan(aHeaderX,{|x| alltrim(x[2]) == "N3_VORIG1"})
Local nPosP		:= aScan(aHeaderX,{|x| alltrim(x[2]) == "NV_PERCEN"})
Local nLinha	:= oGetDist:oBrowse:nAt
Local nTamDecN3 := TamSx3("N3_VORIG1")[2]

If "NV_PERCEN" $ cVar
	If ((&(ReadVar()) <= 100) .and. (&(ReadVar()) >= 0))
		If (lRet:= Eval(bAtuVal,.T.,Nil,&(ReadVar())))
			aColsX[nLinha,nPosV] := Round(((&(ReadVar())/100)*nValorDist),nTamDecN3)
			Eval(bAtuVal,.T.,aColsX[nLinha,nPosV],&(ReadVar()))
		EndIf
	Else
		lRet := .F.
	EndIf
ElseIf "N3_VORIG1" $ cVar
	If ((&(ReadVar()) <= nValorDist) .and. (&(ReadVar()) >= 0))
		If (lRet:= Eval(bAtuVal,.T.,&(ReadVar()),Nil))
			aColsX[nLinha,nPosP] := Round(((&(ReadVar())*100)/nValorDist),nTamDecN3)
			Eval(bAtuVal,.T.,&(ReadVar()),aColsX[nLinha,nPosP])
		EndIf
	Else
		lRet := .F.
	EndIf
EndIf
Return lRet
/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³AF251TdDt ºAutor  ³Jair Ribeiro        º Data ³  06/06/11   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Validacao para tudook da tela de detalhar - distribuir     º±±
±±º          ³ valor contido na funcao AF251DIST                          º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºParametros³ oGetDist: Objeto MsNewGetDados contido na tela detalhar    º±±
±±º          ³ - distribuir valor                                         º±±
±±º          ³ nValorDist: Valor a ser distribuido                        º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ SIGAATF                                                    º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function AF251TdDt(oGetDist,nValorDist)
Local lRet	:= .T.
Local nPosV		:= aScan(oGetDist:aHeader,{|x| alltrim(x[2]) == "N3_VORIG1"})
Local nPosP		:= aScan(oGetDist:aHeader,{|x| alltrim(x[2]) == "NV_PERCEN"})
Local nI		:= 0
Local aValorX	:= {0,0}

For nI:= 1 To Len(oGetDist:aCols)
	If !GDDeleted(nI,oGetDist:aHeader,oGetDist:aCols)
		aValorX[1] 	+= oGetDist:aCols[nI, nPosV]
		aValorX[2] 	+= oGetDist:aCols[nI, nPosP]
	EndIf
Next nI
If aValorX[1] != nValorDist .or. aValorX[2] != 100
	Help(" ", 1,"AF251DIST",, STR0154,1,0) //"A soma dos valores é incoerente ao valor a ser distribuído"
	lRet := .F.
EndIf
Return lRet
/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³Af251aCDetºAutor  ³Jair Ribeiro        º Data ³  06/06/11   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Preenche acols principal para opcao detalhar               º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºParametros³aDetalhar: Array preenchido na tela de distribuicao de valorº±±
±±º          ³contendo a porcentagem de cada item a ser adicionado no 	  º±±
±±º          ³acols                                                       º±±
±±º          ³aParametro:Array contendo respostas da parambox relacionado º±±
±±º          ³a opcao detalhar                                            º±±
±±º          ³aParametro[1]: Novo codigo base                             º±±
±±º          ³          [2]: Novo item                                    º±±
±±º          ³          [3]: 1 = Dados Em branco                          º±±
±±º          ³          [3]: 2 = Preencher com os dados do bem em questao º±±
±±º          ³          [4]: 1 = Rateio em branco                         º±±
±±º          ³          [4]: 2 = Preencher com os reteio do bem em questaoº±±
±±º          ³ aRateio: Array de rateio									  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ SIGAATF                                                    º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function Af251aCDet(aDetalhar,aParametro,aRateio,nVOrigDb,aAF251Imp)
Local nI		:= 0
Local nJ		:= 0
Local cBase		:= aParametro[1]
Local cItem		:= aParametro[2]
Local lDados	:= .T. //Na opção Detalhe a aquisição transferência não pode ser feita manualmente e com campos em brancos
Local lRateio	:= .T.
Local nVlRatIcm := 0
Local cCiap     := ""
Local lTxDepr 	:= IIF(!lAutomato,.F.,lATxDepr ) //caso venha de caso automatico de teste para controlar Mensagem de atualizacao de taxas.

Default aAF251Imp := {}

//Valor total do ICMS a ser rateado
If !Empty(N1_ICMSAPR)
	nVlRatIcm := SN1->N1_ICMSAPR
EndIf

//Se considera ou não CIAP para combinação correta dos impostos
If Empty(N1_CODCIAP)
	cCiap := "2"
Else
	cCiap := "1"
EndIf
If !lAutomato
	lTxDepr := MsgYesNo(STR0184,STR0185)//###"Deseja atualizar a Taxa de Depreciação do bem selecionado?"###"Atenção"
Endif

For nJ := 1 To Len(aDetalhar)
	aAdd(aCols,Array(nUsado+1))
	nUsado  := 0
	nValRat := 0
	For nI := 1 To Len(aHeader)
		nUsado++

		If aHeader[nI][8] == "C"
			If aHeader[nI][2] == "N1_CBASE"
				aCols[nJ][nUsado] := cBase
			ElseIf aHeader[nI][2] == "N1_ITEM"
				aCols[nJ][nUsado] := cItem
			ElseIf aHeader[nI][2] == "N1_CIAP"
				aCols[nJ][nUsado] := cCiap
			ElseIf aHeader[nI][2] == "N3_TIPO"
				aCols[nJ][nUsado] := "01"
			ElseIf aHeader[nI][2] == "N1_CONSAB"
				aCols[nJ][nUsado] := Iif(Empty(&(ALLTRIM(aHeader[nI][9])+"->"+ALLTRIM(aHeader[nI][2]))),'1',&(ALLTRIM(aHeader[nI][9])+"->"+ALLTRIM(aHeader[nI][2])))//Percentual rateado do ICMS
			ElseIf (ALLTRIM(aHeader[nI][9]))->(FieldPos(ALLTRIM(aHeader[nI][2]))) > 0
				If lDados
					aCols[nJ][nUsado] := &(ALLTRIM(aHeader[nI][9])+"->"+ALLTRIM(aHeader[nI][2]))
				Else
					aCols[nJ][nUsado] := Space(aHeader[nI][4])
				EndIf
			Else
				aCols[nJ][nUsado] := Space(aHeader[nI][4])
			Endif
		ElseIf aHeader[nI][8] == "D"
			If aHeader[nI][2] == "N3_DINDEPR"
				aCols[nJ][nUsado] := RetDinDepr(dDataBase)
			Else
				aCols[nJ][nUsado] := dDataBase
			Endif
		ElseIf aHeader[nI][8] == "N"
			If aHeader[nI][2] == "N3_PERC"
				aCols[nJ][nUsado] := aDetalhar[nJ][1]
			ElseIf aHeader[nI][2] == "N3_VORIG1"
				aCols[nJ][nUsado] := aDetalhar[nJ][2]
				nValRat += aDetalhar[nJ][2] 
			ElseIf aHeader[nI][2] == "N1_QUANTD"
				aCols[nJ][nUsado] := (aDetalhar[nJ][1]/100) * (SN1->N1_QUANTD)
				nValRat += aDetalhar[nJ][2] 
			ElseIf aHeader[nI][2] == "N1_ICMSAPR"
				aCols[nJ][nUsado] := (aDetalhar[nJ][1]/100) * (nVlRatIcm) //Percentual rateado do ICMS
			ElseIf lDados .and. !("N1" $ ALLTRIM(aHeader[nI][2])) .and. !("N3_TXDEP" $ ALLTRIM(aHeader[nI][2]))
				aCols[nJ][nUsado] := (aDetalhar[nJ][1]/100) * (&(ALLTRIM(aHeader[nI][9])+"->"+ALLTRIM(aHeader[nI][2])))
			ElseIf lDados .and. (!("N3_TXDEP" $ ALLTRIM(aHeader[nI][2])) .Or. lTxDepr ) 
				aCols[nJ][nUsado] := &(ALLTRIM(aHeader[nI][9])+"->"+ALLTRIM(aHeader[nI][2]))
			Else
				aCols[nJ][nUsado] := 0
			EndIf
		EndIf
		M->&(Alltrim(aHeader[nI][2])) := aCols[nJ][nUsado]
	Next nI
	aCols[nJ][nUsado+1] := .F.
	If SN1->(FieldPos("N1_CONSAB")>0)
		aCols[1][Ascan(AHEADER, {|e| Alltrim(e[2]) == "N1_CONSAB" } ) ]:=Criavar("N1_CONSAB",.T.)
	EndIf
	cItem := Soma1(cItem)
	If AFXVerRat()
		If lRateio .and. SN3->N3_RATEIO == "1"
			AF251CRateio(aRateio[1],SN3->N3_CODRAT,nJ)
		EndIf
	EndIf
	If nJ == 1
		nVOrigDb:=nValRat
	EndIf
Next nJ
//O valor sempre será 100% pois o rateio não prossegue sem o bem total rateado
nValRat := nValorFis

Return
/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³Af251aCAgrºAutor  ³Microsiga           º Data ³  06/10/11   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³                                                            º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºParametro ³aParametro:Array contendo respostas da parambox relacionado º±±
±±º          ³a opcao agrupar                                             º±±
±±º          ³aParametro[1]: Novo codigo base                             º±±
±±º          ³          [2]: Novo item                                    º±±
±±º          ³          [3]: 1 = Dados Em branco                          º±±
±±º          ³          [3]: 2 = Preencher com os dados do bem em questao º±±
±±º          ³          [4]: 1 = Rateio em branco                         º±±
±±º          ³          [4]: 2 = Preencher com o rateio do bem em questao º±±
±±º          ³ aRateio: Array de rateio									  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ SIGAATF                                                    º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function Af251aCAgr(aParametro,aRateio,nVOrigDb)
Local nI      := 0
Local cBase   := aParametro[1]
Local cItem   := aParametro[2]
Local lDados  := .T. //Na opção Agrupa a aquisição transferência não pode ser feita manualmente e com campos em brancos
Local lRateio := .T.
Local nVorig1 := 0
Local aRecno  := {}
Local aArea   := SN3->(GetArea())
Local aColsX  := {}
Local nContAtiv // Contador de Ativos Marcados
Local nPosTpSld := aScan(aHeader,{|x| Upper(Alltrim(x[2])) = "N3_TPSALDO"})
Local nLinha
Local aAtivos   := {}
Local cTypes10	:= IIF(lIsRussia,"/" + AtfNValMod({1}, "/"),"") // CAZARINI - 27/03/2017 - If is Russia, add new valuations models - main models
Local nVlTotIcm := 0
Local cCiap     := ""
Local aDescHistBc:= {}
Local aAuxCiap := {}
Local aPosCiap := {}

SN3->(DbGoTop())
SN3->(DbSetOrder(1))
SN3->(DbSeek(xFilial("SN3")+CBASEDE))

While SN3->(!EOF()) .and. SN3->N3_CBASE >= CBASEDE .and. SN3->N3_CBASE <= CBASEATE
	If SN3->N3_OK == cMarca
		If SN3->N3_TIPO $ '01/03'
			nVorig1 += SN3->N3_VORIG1+SN3->N3_AMPLIA1+SN3->N3_VRCACM1
		EndIf
		If AFXVerRat()
			If SN3->N3_RATEIO == "1" .and. lRateio
				aAdd(aRecno,SN3->(Recno()))
			EndIf
		EndIf
		if Len(aAtivos)= 0 .or. Ascan(aAtivos, SN3->(N3_CBASE+N3_ITEM)) = 0
			aAdd(aAtivos, SN3->(N3_CBASE+N3_ITEM))
		endif
		If __lAgrupComp
			RecLock("SN3",.F.)
			SN3->N3_OK := Space(2)
			MsUnlock()
		EndIf
	EndIf
	SN3->(DbSkip())
EndDo

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Restaura os indices      ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
RetIndex("SN3")
Set Filter To

SN3->(dbSetOrder(1))
for nContAtiv := 1 to Len(aAtivos)
	SN1->(dbSeek(xFilial("SN1")+aAtivos[nContAtiv]))

	If Empty(SN1->N1_CODCIAP)
		cCiap := "2"
	Else
		cCiap := "1"
		//Primeiro ativo que tiver CIAP deve armazenar no array aAuxCiap para posteriormente regravar os dados no acols[1]
		//{cCiap ,Fornecedor,Loja, NotaFiscal, Serie NF}
		If Empty(aAuxCiap)
			aAdd(aAuxCiap, {cCiap,SN1->N1_FORNEC,SN1->N1_LOJA,SN1->N1_NFISCAL,SN1->N1_NSERIE})
			//armazena no array as posicoes dos campos acima
			aAdd(aPosCiap, Ascan(AHEADER, {|e| Alltrim(e[2]) == "N1_CIAP" } ) )
			aAdd(aPosCiap, Ascan(AHEADER, {|e| Alltrim(e[2]) == "N1_FORNEC" } ) )
			aAdd(aPosCiap, Ascan(AHEADER, {|e| Alltrim(e[2]) == "N1_LOJA" } ) )
			aAdd(aPosCiap, Ascan(AHEADER, {|e| Alltrim(e[2]) == "N1_NFISCAL" } ) )
			aAdd(aPosCiap, Ascan(AHEADER, {|e| Alltrim(e[2]) == "N1_NSERIE" } ) )
		EndIf
	EndIf

	//Valor total do ICMS agrupado
	If !Empty(SN1->N1_ICMSAPR) .AND. !Empty(SN1->N1_CODCIAP)
		nVlTotIcm += SN1->N1_ICMSAPR
	EndIf

	SN3->(dbSeek(xFilial("SN3")+aAtivos[nContAtiv]))

	While SN3->(!EOF()) .and.  SN3->(N3_CBASE+N3_ITEM) = aAtivos[nContAtiv]

		If Val(SN3->N3_BAIXA) != 0
			SN3->(dbSkip())
			Loop
		Endif

		If SN3->N3_TIPO $ '01/03' //Troca o Acols conforme o Tipo
			if Len(aCols) == 0 .AND. (nLinha := aScan( aCols, {|x| x[nPosTpSld] = SN3->N3_TPSALDO})) ==0
				aAdd(aCols ,Array(nUsado+1))
				nLinha := Len(aCols)
			endif

			For nI := 1 To Len(aHeader)

				If aHeader[nI][8] == "C"
					If aHeader[nI][2] == "N1_CBASE"
						aCols[nLinha][ni] := cBase
					ElseIf aHeader[nI][2] == "N1_ITEM"
						aCols[nLinha][ni] := cItem
					ElseIf aHeader[nI][2] == "N1_CIAP"
						aCols[nLinha][ni] := cCiap
					ElseIf aHeader[nI][2] == "N3_TIPO"
						aCols[nLinha][ni] := "01" // &(ALLTRIM(aHeader[nI][9])+"->"+ALLTRIM(aHeader[nI][2]))  //Tipo do SN3
					ElseIf (ALLTRIM(aHeader[nI][9]))->(FieldPos(ALLTRIM(aHeader[nI][2]))) > 0  // Percentual
						If lDados
							If ALLTRIM(aHeader[nI][9]) == "SN1" .And. ALLTRIM(aHeader[nI][2]) == "N1_GRUPO" // Campo grupo em branco para o usuário inserir (DSERCTR1-21771)
								aCols[nLinha][ni] := Space(TamSX3("N1_GRUPO")[1])
							ElseIf ("N1_FORNEC"  $ aHeader[nI][2] .Or. "N1_LOJA" $ aHeader[nI][2] .Or. "N1_NSERIE"  $ aHeader[nI][2] .Or. "N1_NFISCAL" $ aHeader[nI][2]) .And. __lAgrupComp
								aCols[nLinha][ni] := Space(aHeader[nI][4])
							ElseIf ("N1_DESCRIC"  $ aHeader[nI][2]) .And. __lAgrupComp
								aDescHistBc:= DescHistBc(aParametro[1], aParametro[2])
								If !Empty(aDescHistB)
									aCols[nLinha][ni] := aDescHistBc[1]
								EndIf
							ElseIf ("N1_CHAPA"  $ aHeader[nI][2]) .And. __lAgrupComp 
								aDescHistBc:= DescHistBc(aParametro[1], aParametro[2])
								If !Empty(aDescHistB)
									aCols[nLinha][ni] := aDescHistBc[2]
								EndIf
							ElseIf ("N3_HISTOR"  $ aHeader[nI][2]) .And. __lAgrupComp 
								aDescHistBc:= DescHistBc(aParametro[1], aParametro[2])
								If !Empty(aDescHistB)
									aCols[nLinha][ni] := aDescHistBc[3]
								EndIf
							ElseIf ("N1_ORIGCRD"  $ aHeader[nI][2]) //Para campos de origem de credito, permanecer em branco e é controlado pelo usuario que ira informar o que deseja no agrupamento
								aCols[nLinha][ni] := Space(TamSX3('N1_ORIGCRD')[1])
							ElseIf ("N1_CODBCC"  $ aHeader[nI][2]) //Para campos de origem de credito, permanecer em branco e é controlado pelo usuario que ira informar o que deseja no agrupamento
								aCols[nLinha][ni] := Space(TamSX3('N1_CODBCC')[1])
							ElseIf ("N1_CBCPIS"  $ aHeader[nI][2]) //Para campos de origem de credito, permanecer em branco e é controlado pelo usuario que ira informar o que deseja no agrupamento
								aCols[nLinha][ni] := Space(TamSX3('N1_CBCPIS')[1])
							Else
								aCols[nLinha][ni] := &(ALLTRIM(aHeader[nI][9])+"->"+ALLTRIM(aHeader[nI][2]))   // SN3->N3_HISTOR
							EndIf
						Else
							aCols[nLinha][ni] := Space(aHeader[nI][4])    //Tamanho
						EndIf
					Else
						aCols[nLinha][ni] := Space(aHeader[nI][4])        //Tamanho
					Endif
				ElseIf aHeader[nI][8] == "D"
					If aHeader[nI][2] == "N3_DINDEPR"
						aCols[nLinha][ni] := RetDinDepr(dDataBase)
					Else
						aCols[nLinha][ni] := dDataBase
					Endif
				ElseIf aHeader[nI][8] == "N"
					If aHeader[nI][2] == "N3_PERC"
						aCols[nLinha][ni] := 100
					ElseIf aHeader[nI][2] == "N1_ICMSAPR"
						aCols[nLinha][ni] := nVlTotIcm //Total do ICMS rateado
					ElseIf "N3_VORIG" $ aHeader[nI][2]
						aCols[nLinha][ni]:=IIf(aCols[nLinha][ni] == NIL,0,aCols[nLinha][ni])
						aCols[nLinha][ni] += &(ALLTRIM(aHeader[nI][9])+"->"+ALLTRIM(aHeader[nI][2])) + SN3->N3_AMPLIA1
					ElseIf "N3_VRDACM" $ aHeader[nI][2]
						aCols[nLinha][ni]:=IIf(aCols[nLinha][ni] == NIL,0,aCols[nLinha][ni])
						aCols[nLinha][ni] += &(ALLTRIM(aHeader[nI][9])+"->"+ALLTRIM(aHeader[nI][2]))
					ElseIf lDados .and. !("N1" $ ALLTRIM(aHeader[nI][2])) .and. !("N3_TXDEP" $ ALLTRIM(aHeader[nI][2]))
						aCols[nLinha][ni]:=IIf(aCols[nLinha][ni] == NIL,0,aCols[nLinha][ni])
						aCols[nLinha][ni] += &(ALLTRIM(aHeader[nI][9])+"->"+ALLTRIM(aHeader[nI][2]))
					ElseIf "N1_QUANTD" $ aHeader[nI][2] .And. __lAgrupComp
						aCols[nLinha][ni] := 1
					Else
						aCols[nLinha][ni] := 0
					EndIf
				EndIf
				M->&(Alltrim(aHeader[nI][2])) := aCols[nLinha][ni]
			Next nI
			aCols[nLinha][ni] := .F.
		ElseIf SN3->N3_TIPO $ ('10/13/15' + cTypes10)

			if Len(aColsX) == 0 .AND. (nLinha := aScan( aColsX, {|x| x[nPosTpSld] = SN3->N3_TPSALDO})) ==0
				aAdd(aColsX ,Array(nUsado+1))
				nLinha := Len(aColsX)
			endif

			For nI := 1 To Len(aHeader)

				If aHeader[nI][8] == "C"
					If aHeader[nI][2] == "N1_CBASE"
						aColsX[nLinha][nI] := cBase
					ElseIf aHeader[nI][2] == "N1_ITEM"
						aColsX[nLinha][nI] := cItem
					ElseIf aHeader[nI][2] == "N1_CIAP"
						aColsx[nLinha][ni] := cCiap
					ElseIf aHeader[nI][2] == "N3_TIPO"
						aColsX[nLinha][nI] := &(ALLTRIM(aHeader[nI][9])+"->"+ALLTRIM(aHeader[nI][2]))  //Tipo do SN3
					ElseIf (ALLTRIM(aHeader[nI][9]))->(FieldPos(ALLTRIM(aHeader[nI][2]))) > 0  // Percentual
						If lDados
							aColsX[nLinha][nI] := &(ALLTRIM(aHeader[nI][9])+"->"+ALLTRIM(aHeader[nI][2]))   // SN3->N3_HISTOR
						Else
							aColsX[nLinha][nI] := Space(aHeader[nI][4])    //Tamanho
						EndIf
					Else
						aColsX[nLinha][nI] := Space(aHeader[nI][4])        //Tamanho
					Endif
				ElseIf aHeader[nI][8] == "D"
					If aHeader[nI][2] == "N3_DINDEPR"
						aColsX[nLinha][nI] := RetDinDepr(dDataBase)
					Else
						aColsX[nLinha][nI] := dDataBase
					Endif
				ElseIf aHeader[nI][8] == "N"
					If aHeader[nI][2] == "N3_PERC"
						aColsX[nLinha][nI] := 100
					ElseIf "N3_VORIG" $ aHeader[nI][2]
						aColsX[nLinha][nI]:=IIf(aColsX[nLinha][nI] == NIL,0,aColsX[nLinha][nI])
						aColsX[nLinha][nI] += &(ALLTRIM(aHeader[nI][9])+"->"+ALLTRIM(aHeader[nI][2]))
					ElseIf "N3_VRDACM" $ aHeader[nI][2]
						aColsX[nLinha][nI]:=IIf(aColsX[nLinha][nI] == NIL,0,aColsX[nLinha][nI])
						aColsX[nLinha][nI] += &(ALLTRIM(aHeader[nI][9])+"->"+ALLTRIM(aHeader[nI][2]))
					ElseIf lDados .and. !("N1" $ ALLTRIM(aHeader[nI][2])) .and. !("N3_TXDEP" $ ALLTRIM(aHeader[nI][2]))
						aColsX[nLinha][nI]:=IIf(aColsX[nLinha][nI] == NIL,0,aColsX[nLinha][nI])
						aColsX[nLinha][nI] += &(ALLTRIM(aHeader[nI][9])+"->"+ALLTRIM(aHeader[nI][2]))
					Else
						aColsX[nLinha][nI] := 0
					EndIf
				EndIf
				M->&(Alltrim(aHeader[nI][2])) := aColsX[nLinha][nI]
			Next nI
			aColsX[nLinha][nI] := .F.
		Endif
		SN3->(dbSkip())
	enddo
next
nUsado     := len(aHeader)

If Len(aCols)>0
	aCols[1][Ascan(AHEADER, {|e| Alltrim(e[2]) == "N1_CONSAB" } ) ]:=Criavar("N1_CONSAB",.T.)

	//atualiza dados do CIAP armazenado no array que se refere a primeira ocorrencia do CIAP
	If Len(aAuxCiap) > 0  //Len(aAuxCiap) tem q ter mesmo tamanho aPosCIAP
		//carrega no acols[1] as informacoes contidas no array aAuxCiap
		For nI := 1 to Len(aAuxCiap[1])
			If aPosCiap[nI]>0
				aCols[1][aPosCiap[nI]] := aAuxCiap[1][nI]
			EndIf
		Next
	EndIf

EndIf

If !Empty(aRecno)
	aAdd(aRateio[1],{"","","3",1,Af040CargaRat(aRecno),.F.})
EndIf
nValRat    := nVOrig1
nValorFis  := nVOrig1
nVOrigDb   := nVOrig1

SN3->(RestArea(aArea))
Return
/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³Af251DetC ºAutor  ³Microsiga           º Data ³  06/10/11   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³                                                            º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºParametros³aDetalhar: Array preenchido na tela de distribuicao de valorº±±
±±º          ³contendo a porcentagem de cada item a ser adicionado no 	  º±±
±±º          ³acols                                                       º±±
±±º          ³aParametro:Array contendo respostas da parambox relacionado º±±
±±º          ³a opcao detalhar                                            º±±
±±º          ³aParametro[1]: Novo codigo base                             º±±
±±º          ³          [2]: Novo item                                    º±±
±±º          ³          [3]: 1 = Dados Em branco                          º±±
±±º          ³          [3]: 2 = Preencher com os dados do bem em questao º±±
±±º          ³          [4]: 1 = Rateio em branco                         º±±
±±º          ³          [4]: 2 = Preencher com os reteio do bem em questaoº±±
±±º          ³ aRateio: Array de rateio									  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ SIGAATF                                                    º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function Af251DetC(oGetDadosC,aDetalhar,aColsDadoC,aParametro,aRateio,aValMTp,nValTp02,nValTp05,nValTp07,nValTp11,aHeadDadoC)
Local cChave 		:= SN3->N3_FILIAL+SN3->N3_CBASE+SN3->N3_ITEM
Local aSaveAcols	:= {}
Local aColsX		:= {}
Local aHeaderX		:= IIF(!lAutomato,aClone(oGetDadosC:aHeader),aHeadDadoC)
Local nAux			:= 0
Local nI			:= 0
Local nJ			:= 0
Local lDados   		:= (aParametro[3] == 2)
Local lRateio  		:= (aParametro[4] == 2)
Local nUsed			:= 0
Local nPosRat		:= 0
Local nTamDecN3     := TamSx3("N3_VORIG1")[2]

For nJ := 1 To Len(aDetalhar)
	aAdd(aColsX,Array(Len(aHeaderX)+1))
	aColsX[Len(aColsX),Len(aHeaderX)+1] := .F.
	aAdd(aSaveAcols,{nJ,aColsX})
	aColsX:={}
Next nJ

_SN3->(DbSetOrder(1)) //N3_FILIAL+N3_CBASE+N3_ITEM+N3_TIPO+N3_BAIXA+N3_SEQ
_SN3->(DbSeek(cChave))
While _SN3->(!EOF()) .and. _SN3->(N3_FILIAL+N3_CBASE+N3_ITEM) == cChave

	cTipoATF := IIF(_SN3->N3_TIPO $ '13/15','10', _SN3->N3_TIPO )

	If (nPos := Ascan(aTipos,{|aX| aX == cTipoATF})) > 0 .and. SN3->N3_BAIXA == "0"
		nAux ++
		For nJ := 1 To Len(aDetalhar)
			nPos 	:= AsCan(aSaveACols,{|aX| aX[1] == nJ})
			aColsX	:= aClone(aSaveACols[nPos,2])
			If Len(aColsX) != nAux
				aAdd(aColsX,Array(Len(aHeaderX)+1))
				aColsX[Len(aColsX),Len(aHeaderX)+1] := .F.
			EndIf
			nUsed := 0

			For nI := 1 To Len(aHeaderX)
				nUsed ++

				If aHeaderX[nI][8] == "C"
					If ALLTRIM(aHeaderX[nI][2]) == "N3_TIPO"
						aColsX[nAux][nUsed] := cTipoATF
					ElseIf lDados
						aColsX[nAux][nUsed] := &("_SN3->"+ALLTRIM(aHeaderX[nI][2]))
					Else
						aColsX[nAux][nUsed] := Space(aHeaderX[nI][4])
					Endif
				ElseIf aHeaderX[nI][8] == "D"
					If ALLTRIM(aHeaderX[nI][2]) == "N3_DINDEPR"
						aColsX[nAux][nUsed] := RetDinDepr(dDataBase)
					Else
						aColsX[nAux][nUsed] := dDataBase
					Endif
				ElseIf aHeaderX[nI][8] == "N"
					If ALLTRIM(aHeaderX[nI][2]) == "N3_VORIG1"
						aColsX[nAux][nUsed] :=  Round(((aDetalhar[nJ][1]/100) * _SN3->N3_VORIG1),nTamDecN3) 
					ElseIf lDados .and. !("N1" $ ALLTRIM(aHeaderX[nI][2])) .and. !("N3_TXDEP" $ ALLTRIM(aHeaderX[nI][2]))
						aColsX[nAux][nUsed] := (aDetalhar[nJ][1]/100) *(&("_SN3->"+ALLTRIM(aHeaderX[nI][2])))
					ElseIf lDados .and. ("N3_TXDEP" $ ALLTRIM(aHeaderX[nI][2]))
						aColsX[nAux][nUsed] := &("_SN3->"+ALLTRIM(aHeaderX[nI][2]))
					Else
						aColsX[nAux][nUsed] := 0
					EndIf
				EndIf
			Next nI
			aSaveACols[nPos,2]:= aClone(aColsX)

			If AFXVerRat()
				If lRateio .and. _SN3->N3_RATEIO == "1"
					If (nPosRat	:= aScan(aRateio[2],{|aX| aX[1] == nPos}))>0
						AF251CRateio(aRateio[2,nPosRat,2],_SN3->N3_CODRAT,nAux)
					Else
						aAdd(aRateio[2],{nPos,{}})
						AF251CRateio(aRateio[2,Len(aRateio[2])][2],_SN3->N3_CODRAT,nAux)
					EndIf
				EndIf
			EndIf
		Next nJ

		If cTipoATF == "02"
			nValTp02 += (_SN3->N3_VORIG1 + _SN3->N3_AMPLIA1 + _SN3->N3_VRCACM1)
		ElseIf  cTipoATF == "05"
			nValTp05 += (_SN3->N3_VORIG1 + _SN3->N3_AMPLIA1 + _SN3->N3_VRCACM1)
		ElseIf  cTipoATF == "07"
			nValTp07 += (_SN3->N3_VORIG1 + _SN3->N3_AMPLIA1 + _SN3->N3_VRCACM1)
		ElseIf  cTipoATF == "11"
			nValTp11 += (_SN3->N3_VORIG1 + _SN3->N3_AMPLIA1 + _SN3->N3_VRCACM1)
		ElseIf (nPosValMt:= AsCan(aValMTp,{|aX| aX[1] == AllTrim(cTipoATF)}))> 0
			If (nPosSalMt := AsCan(aValMtp[nPosValMt,2],{|aX| AllTrim(aX[1]) == AllTrim(_SN3->N3_TPSALDO)}))> 0
				aValMtp[nPosValMt,2,nPosSalMt,2] += (_SN3->N3_VORIG1 + _SN3->N3_AMPLIA1 + _SN3->N3_VRCACM1)
			Else
				aAdd(aValMtp[nPosValMt,2],{_SN3->N3_TPSALDO,(_SN3->N3_VORIG1 + _SN3->N3_AMPLIA1 + _SN3->N3_VRCACM1)})
			EndIf
		EndIf
	EndIf
	_SN3->(DbSkip())
EndDo

If !lautomato
	If !Empty(aSaveACols[1,2])  .and. !aSaveACols[1,2,1,1] == nil
		oGetDadosC:aCols:=aClone(aColsX)
		oGetDadosC:ForceRefresh()
	EndIf
Endif

aColsDadoC := aClone(aSaveACols)
Return
/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³Af251AgrC ºAutor  ³Microsiga           º Data ³  06/10/11   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³                                                            º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ SIGAATF	                                                  º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function Af251AgrC(oGetDadosC,aColsDadoC,aParametro,aRateio,aValMTp,nValTp02,nValTp05,nValTp07,nValTp11,aHeadDadoC)
Local nI         := 0
Local lDados     := (aParametro[3] == 2)
Local lRateio    := (aParametro[4] == 2)
Local cChave     := ""
Local aHeaderX   := aClone(IIF(!lAutomato,oGetDadosC:aHeader,aHeadDadoC ))
Local nPos       := 0
Local nPosI      := 0
Local nPosJ      := 0
Local aSaveAcols := {}
Local aColsX     := {}

Local aRecnos    := {}
Local aRecReg	 := {} //array para salvar recnos dos registros que já passaram no laço
Local nPosRec    := 0
Local aAuxRat    := {}

Local aArea		:= SN3->(GetArea())

nPosI := Ascan(aHeaderX, {|x| Alltrim(x[2])  == "N3_TIPO"})
nPosJ := Ascan(aHeaderX, {|x| Alltrim(x[2])  == "N3_TPSALDO"})

SN3->(DbGoTop())
SN3->(DBSetFilter({|| SN3->N3_OK == cMarca}, "SN3->N3_OK == cMarca"))

While SN3->(!EOF())
	If cChave != SN3->(N3_FILIAL+N3_CBASE+N3_ITEM)
		cChave:= SN3->(N3_FILIAL+N3_CBASE+N3_ITEM)	
	Else
		SN3->(dbSkip())
		Loop
	EndIf

	If Ascan(aRecReg, {|x| x  == SN3->(RECNO())}) > 0
		SN3->(dbSkip())
		Loop	
	EndIf

	_SN3->(DbSetOrder(1)) //N3_FILIAL+N3_CBASE+N3_ITEM+N3_TIPO+N3_BAIXA+N3_SEQ
	_SN3->(DbSeek(cChave))

	While _SN3->(!EOF()) .and. Alltrim(_SN3->(N3_FILIAL+N3_CBASE+N3_ITEM)) == Alltrim(cChave)

		cTipoATF := IIF(_SN3->N3_TIPO $ '13/15','10', _SN3->N3_TIPO )
		
		aAdd(aRecReg,_SN3->(RECNO()))

		If (nPos := Ascan(aTipos,{|aX| aX == cTipoATF})) > 0 .and. _SN3->N3_BAIXA == "0"
			If Len(aColsX) == 0
				aAdd(aColsX,Array(Len(aHeaderX)+1))
				aColsX[Len(aColsX),Len(aHeaderX)+1] := .F.
				nPos:= Len(aColsX)
			ElseIf Len(aColsX) > 0
				If (nI := Ascan( aColsX, {|x| x[nPosJ] = _SN3->N3_TPSALDO .and. x[nPosI] == cTipoATF }) )> 0
						nPos := nI
				Else
					aAdd(aColsX,Array(Len(aHeaderX)+1))
					aColsX[Len(aColsX),Len(aHeaderX)+1] := .F.
					nPos := Len(aColsX)
					Endif

			EndIf

			nUsed :=0
			For nI := 1 To Len(aHeaderX)
				nUsed ++

				If aHeaderX[nI][8] == "C"
					If ALLTRIM(aHeaderX[nI][2]) == "N3_TIPO"
						aColsX[nPos][nUsed] := cTipoATF
					Elseif ALLTRIM(aHeaderX[nI][2]) == "N3_TPSALDO"
						aColsX[nPos][nUsed] := &("_SN3->"+ALLTRIM(aHeaderX[nI][2]))
					ElseIf lDados
						aColsX[nPos][nUsed] := &("_SN3->"+ALLTRIM(aHeaderX[nI][2]))
					Else
						aColsX[nPos][nUsed] := Space(aHeaderX[nI][4])
					Endif
				ElseIf aHeaderX[nI][8] == "D"
					If ALLTRIM(aHeaderX[nI][2]) == "N3_DINDEPR"
						aColsX[nPos][nUsed] := RetDinDepr(dDataBase)
					Else
						aColsX[nPos][nUsed] := dDataBase
					Endif
				ElseIf aHeaderX[nI][8] == "N"
					If ALLTRIM(aHeaderX[nI][2]) == "N3_VORIG1"
						If aColsX[nPos][nUsed] == Nil
							aColsX[nPos][nUsed] := 0
						EndIf
						aColsX[nPos][nUsed] +=  _SN3->N3_VORIG1
					ElseIf lDados .and. !("N1" $ ALLTRIM(aHeaderX[nI][2])) .and. !("N3_TXDEP" $ ALLTRIM(aHeaderX[nI][2]))
						If aColsX[nPos][nUsed] == Nil
							aColsX[nPos][nUsed] := 0
						EndIf
						aColsX[nPos][nUsed] += &("_SN3->"+ALLTRIM(aHeaderX[nI][2]))
					Else
						aColsX[nPos][nUsed] := 0
					EndIf
				EndIf
			Next nI

			If AFXVerRat()
				If SN3->N3_RATEIO == "1" .and. lRateio
					If (nPosRec := aScan(aRecnos,{|aX| aX[1] == nPos}))>0
						aAdd(aRecNos[nPosRec,2],_SN3->(Recno()))
					Else
						aAdd(aRecNos,{nPos,{_SN3->(Recno())}})
					EndIf
				EndIf
			EndIf
			If cTipoATF == "02"
				nValTp02 += (_SN3->N3_VORIG1 + _SN3->N3_AMPLIA1 + _SN3->N3_VRCACM1)
			ElseIf cTipoATF == "05"
				nValTp05 += (_SN3->N3_VORIG1 + _SN3->N3_AMPLIA1 + _SN3->N3_VRCACM1)
			ElseIf  cTipoATF == "07"
				nValTp07 += (_SN3->N3_VORIG1 + _SN3->N3_AMPLIA1 + _SN3->N3_VRCACM1)
			ElseIf  cTipoATF == "11"
				nValTp11 += (_SN3->N3_VORIG1 + _SN3->N3_AMPLIA1 + _SN3->N3_VRCACM1)
			ElseIf (nPosValMt:= AsCan(aValMTp,{|aX| aX[1] == AllTrim(cTipoATF)}))> 0
				If (nPosSalMt := AsCan(aValMtp[nPosValMt,2],{|aX| AllTrim(aX[1]) == AllTrim(_SN3->N3_TPSALDO)}))> 0
					aValMtp[nPosValMt,2,nPosSalMt,2] += (_SN3->N3_VORIG1 + _SN3->N3_AMPLIA1 + _SN3->N3_VRCACM1)
				Else
					aAdd(aValMtp[nPosValMt,2],{_SN3->N3_TPSALDO,(_SN3->N3_VORIG1 + _SN3->N3_AMPLIA1 + _SN3->N3_VRCACM1)})
				EndIf
			EndIf
		EndIf
		_SN3->(DbSkip())
	EndDo
	SN3->(DbSkip())
EndDo
aAdd(aSaveAcols,{1,aColsX})
aColsDadoC := aClone(aSaveACols)

If !lAutomato
	oGetDadosC:aCols := aClone(aColsX)
	oGetDadosC:ForceRefresh()
Endif

If !Empty(aRecnos)
	For nI := 1 To Len(aRecnos)
		aAdd(aAuxRat,{"","","3",aRecnos[nI,1],Af040CargaRat(aRecnos[nI,2]),.F.})
	Next nI
	aAdd(aRateio[2],{1,aAuxRat})
EndIf

SN3->(DBClearFilter())
SN3->(RestArea(aArea))
Return
/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³AjRetParamºAutor  ³Alvaro Camillo Neto º Data ³  17/12/08   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Ajusta as repostas do aParambox                             º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºParametros³ aRet: Array contendo as respostas do parambox (aRetPB)     º±±
±±º          ³ aParamBox: Array de perguntas do parambox (aParam)         º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ ATFA175                                                    º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function AjRetParam(aRet,aParamBox)
Local nX    := 1

If ValType(aRet) == "A" .and. Len(aRet) == Len(aParamBox)
	For nX := 1 to Len(aParamBox)
		If aParamBox[nX][1] == 1
			aRet[nX] := aRet[nX]
		ElseIf aParamBox[nX][1] == 2 .AND. ValType(aRet[nX]) == "C"
			aRet[nX] := aScan(aParamBox[nX][4],{|x| Alltrim(x) == aRet[nX]})
		ElseIf aParamBox[nX][1] == 2 .AND. ValType(aRet[nX]) == "N"
			aRet[nX] := aRet[nX]
		Endif
	Next nX
EndIf
Return aRet
/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³AF011CRateio	³ Rev.  ³Fernando Radu Muscalu  ³ Data ³18.04.2011³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Carrega aDados com aCols do rateio, encontrado em SNV.	      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³AF011CRateio(aDados)										      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³aDados	- Array: dados do rateio. 							  ³±±
±±³          ³	aDados[i,1] - Char: Codigo do Rateio						  ³±±
±±³          ³	aDados[i,2] - Char: Revisao do Rateio						  ³±±
±±³          ³	aDados[i,3] - Char: Status do Rateio						  ³±±
±±³          ³		"1"	- Disponivel										  ³±±
±±³          ³		"2"	- Pendente de classificacao							  ³±±
±±³          ³		"3"	- Ativo												  ³±±
±±³          ³		"4"	- Ativo Baixado										  ³±±
±±³          ³		"5"	- Finalizado										  ³±±
±±³          ³	aDados[i,4] - Numeric: Nro da Linha do Grid do Item da		  ³±±
±±³          ³	do Ativo (nAt da GetDados do SN3)							  ³±±
±±³          ³	aDados[i,5] - Array: Similar ao aCols, com o Rateio		      ³±±
±±³          ³		aDados[i,5,j] - Array: Linhas do aCols	  				  ³±±
±±³          ³			aDados[i,5,j,k] - Any: Colunas do aCols			  	  ³±±
±±³          ³	aDados[i,6] - Boolean: Demonstra se o item da ficha do Ativo  ³±±
±±³          ³foi apagado na GetDados do SN3. Se .T. - item apagado 		  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³nil															  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³SIGAATF - ATFA011 - Localizacao Argentina					      ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function AF251CRateio(aDados,cCodRat,nLinha)
Local aHeader	:= AF011HeadSNV()
Local aCols		:= {}
Local aAreaSNV	:= SNV->(GetArea())
Local nI		:= 0

Local cBusca	:= ""

SNV->(DbSetOrder(1))
cBusca := 	PadR(xFilial("SNV"),TamSx3("NV_FILIAL")[1]) +;
PadR(cCodRat,TamSx3("NV_CODRAT")[1]) +;
PadR(AF011GETREV(cCodRat),TamSx3("NV_REVISAO")[1])

If SNV->(DbSeek(cBusca))
	While SNV->(!Eof()) .and. cBusca == Padr(SNV->NV_FILIAL,TamSX3("NV_FILIAL")[1]) +;
		PadR(SNV->NV_CODRAT,TamSx3("NV_CODRAT")[1])+;
		PadR(SNV->NV_REVISAO,TamSx3("NV_REVISAO")[1])
		aAdd(aCols,Array(Len(aHeader)+1))

		For nI := 1 to len(aHeader)
			aCols[len(aCols),nI] := CriaVar(aHeader[nI,2])
			aCols[len(aCols),nI] := SNV->&(aHeader[nI,2])
		Next nI

		aCols[len(aCols),len(aHeader)+1] := .F.

		SNV->(DbSkip())
	EndDo
EndIf
RestArea(aAreaSNV)
aAdd(aDados, {,,"3",nLinha,aCols,.F.})
Return()

//Validacoes devido aCols e aHeader serem locais

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³AF251RetGetºAutor ³Microsiga           º Data ³  11/15/11   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Funcao retorna aHeader ou aCols da newgetdados oGetDadosC  º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ Aquisicao por tranferencia                                 º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/

Static Function AF251RetGet(oGetDadosC,nRet)
Local aRetorno	:= {}
If nRet == 1
	aRetorno := aClone(oGetDadosC:aHeader)
Else
	aRetorno := aClone(oGetDadosC:aCols)
EndIf
Return aRetorno
/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³AF251G1   ºAutor  ³Alvaro Camillo Neto º Data ³  31/01/11   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Validação do campo When do campo N3_TIPDEPR                 º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ SIGAATF                                                    º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/

Function AF251G1(cTpDepr,nLinha)
Local aHeaderX		:= Eval(bRetGet,1)
Local aColsX		:= Eval(bRetGet,2)
Local lRet 			:= .F.
Local nPosN3Tipo 	:= Ascan(aHeaderX, {|e| Alltrim(e[2]) == "N3_TIPO" } )
Local nPosN3TpDp 	:= Ascan(aHeaderX, {|e| Alltrim(e[2]) == "N3_TPDEPR" } )
Local cTipoGer   	:= ''
Local aArea			:= {}
Local aAreaSN0		:= {}
Local cTypesNM		:= IIF(lIsRussia,"/" + AtfNValMod({1,2}, "/"),"") // CAZARINI - 10/04/2017 - If is Russia, add new valuations models - main and recoverable models

DEFAULT cTpDepr := IIf(nPosN3TpDp>0, aColsX[n][nPosN3TpDp], '')
DEFAULT nLinha := n

If nPosN3Tipo>0 .And. nPosN3TpDp>0

	If aColsX[nLinha][nPosN3Tipo] $ '01,02'
		cTipoGer := '1,7,8,9'
		If cPaisLoc != "ARG"
			If nLinha == 1
				aColsX[nLinha][nPosN3TpDp] := '1'
				cTpDepr := '1'
			Endif
		EndIf
	ElseIf aColsX[nLinha][nPosN3Tipo] $ ('10/12' + cTypesNM)
		aArea := GetArea()
		aAreaSN0 := SN0->(GetArea())

		dbSelectArea("SN0")

		SN0->(dbSetOrder(1))
		SN0->( MsSeek( xFilial("SN0") + '04' ) )

		Do While !SN0->(Eof()) .And. xFilial("SN0") + '04' == SN0->N0_FILIAL + SN0->N0_TABELA
			cTipoGer += IIf(empty(cTipoGer),'',',') + SN0->N0_CHAVE
			SN0->(dbSkip())
		EndDo

		RestArea(aAreaSN0)
		RestArea(aArea)
	Else
		cTipoGer := '1'
	EndIf
	lRet := cTpDepr $ cTipoGer
	If !lRet
		Help( " ", 1, "AF010TIPDEP",, STR0024, 1, 0 ) // "Esse método de depreciação não é válido para esse tipo de ativo."
	EndIf
EndIf
Return lRet

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³AF251G2	ºAutor  ³Marcelo Akama       º Data ³  04/02/11   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Validação dos campos dos metodos de depreciacao gerencial   º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ AP                                                         º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function AF251G2(cField)
Local aHeaderX		:= Eval(bRetGet,1)
Local aColsX		:= Eval(bRetGet,2)
Local lRet 			:= .F.
Local nPosTpDepr 	:= Ascan(aHeaderX, {|x| Alltrim(x[2]) == "N3_TPDEPR" } )

DEFAULT cField := ReadVar()

If At("->",cField)>0
	cField := SubStr(cField,At("->",cField)+2,len(cField))
EndIf

If nPosTpDepr>0 .And. !Empty(&(ReadVar()))
	Do Case
		Case aColsX[n][nPosTpDepr]=='2'
			lRet := cField $ "N3_PERDEPR,N3_VLSALV1"
		Case aColsX[n][nPosTpDepr]=='3'
			lRet := cField $ "N3_PERDEPR"
		Case aColsX[n][nPosTpDepr]=='4'
			lRet := cField $ "N3_PRODMES,N3_PRODANO"
		Case aColsX[n][nPosTpDepr]=='5'
			lRet := cField $ "N3_PRODMES,N3_PRODANO"
		Case aColsX[n][nPosTpDepr]=='6'
			lRet := cField $ "N3_PERDEPR"
		Case aColsX[n][nPosTpDepr]=='7'
			lRet := cField $ "N3_VMXDEPR"
		Case aColsX[n][nPosTpDepr]=='A'
			lRet := cField $ "N3_CODIND"
		Otherwise // =='1'
			lRet := .F.
	EndCase
	If !lRet
		Help( " ", 1, "AF010FDNTUS",, STR0155, 1, 0 ) // "Esse campo não é utilizado pelo método de depreciação selecionado, o valor informado não será considerado."
	EndIf
EndIf
Return .T.


/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³AF251G3   ³ Autor ³ Jair RIbeiro          ³ Data ³ 27/04/11 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Desc.     ³ Valida criterio de depreciacao				              ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ SIGAATF                                                    ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Sintaxe  ³ VldDeprec()								                  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function AF251G3()
Local aHeaderX		:= Eval(bRetGet,1)
Local aColsX		:= Eval(bRetGet,2)
Local cVar 			:= ReadVar()
Local cConteudo		:= &(ReadVar())
Local lRet			:= .T.
Local nPosN3Tipo	:= aScan(aHeaderX,{|x| Alltrim(x[2]) == "N3_TIPO"})
Local nPosN3TpDp	:= aScan(aHeaderX,{|x| Alltrim(x[2]) == "N3_CRIDEPR"})
Local nPosN3ClDp	:= aScan(aHeaderX,{|x| Alltrim(x[2]) == "N3_CALDEPR"})
Local nPosFNGTip	:= aScan(aHeaderX,{|x| Alltrim(x[2]) == "FNG_TIPO"})
Local nPosFNGTpD	:= aScan(aHeaderX,{|x| Alltrim(x[2]) == "FNG_CRIDEP"})
Local nPosFNGClD	:= aScan(aHeaderX,{|x| Alltrim(x[2]) == "FNG_CALDEP"})
Local nLin			:= n
Local cTypesNM		:= IIF(lIsRussia,"|" + AtfNValMod({1,2}, "|"),"") // CAZARINI - 10/04/2017 - If is Russia, add new valuations models - main and recoverable models

If "TIPO" $ cVar
	If "FNG" $ cVar .and. nPosFNGTip != 0 .and. nPosFNGTpD != 0
		If Alltrim(aColsX[nLin,nPosFNGTpD]) $ "03|04"
			If !(Alltrim(cConteudo) $ ("10|12" + cTypesNM))
				Help(" ",1,"VldDeprec",,STR0156,1,0)
				lRet:= .F.
			EndIf
		EndIf
	EndIf
ElseIf "TIPDEP" $ cVar
	If "N3" $ cVar .and. nPosN3Tipo != 0 .and. nPosN3TpDp != 0 .and. nPosN3ClDp != 0
		If !(Alltrim(aColsX[nLin,nPosN3Tipo]) $ ("10|12" + cTypesNM)) .and. !Empty(aColsX[nLin,nPosN3Tipo])
			If Alltrim(cConteudo) $ "03|04"
				Help(" ",1,"VldDeprec",,STR0156,1,0)
				lRet:= .F.
			EndIf
		EndIf
		If !(Alltrim(cConteudo) $ "03|04")
			aColsX[nLin,nPosN3ClDp] := space(TamSx3("N3_CALDEPR")[1])
		EndIf
	ElseIf "FNG" $ cVar .and. nPosFNGTip != 0 .and. nPosFNGTpD != 0
		If !(Alltrim(aColsX[nLin,nPosFNGTip]) $ ("10|12"+ cTypesNM)) .and. !Empty(aColsX[nLin,nPosFNGTip])
			If Alltrim(cConteudo) $ "03|04"
				Help(" ",1,"VldDeprec",,STR0156,1,0)
				lRet:= .F.
			EndIf
		EndIf
		If !(Alltrim(cConteudo) $ "03|04")
			aColsX[nLin,nPosFNGClD] := space(TamSx3("N3_CALDEPR")[1])
		EndIf
	EndIf
EndIf
Return lRet


/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³AF251G4	³ Autor ³ Jair RIbeiro          ³ Data ³ 27/04/11 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Desc.     ³ When para campos de criterio e calendario de depreciacao   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ SIGAATF                                                    ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Sintaxe  ³ VldTipDepr(cDescCpoCr,cDescCpoCl)		                  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ cDescCpoCr: Campo criterio N3_CRIDEPR,NG_CRIDEPR,FNG_TIDEP ³±±
±±³          ³ cDescCpoCl: Campo Calendario N3_CALDEPR,NG_CALDEPR,        ³±±
±±³          ³ FNG_CALDEP		                                          ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
Premissa 01: Caso nao seja definido um conteudo para o parametro da funcao - cCampo o retorno da função sera .F.

Premissa 02: Como a função poderá ser chamada de um cadastro simples (Enchoice) ou de uma Grid (MsGetDados) o conteudo
do campo deverá ser recuperado com &(ReadVar())

Premissa 03: No tratamento do campo _CALDEPR, deverá ser avaliado se a validação está em um Grid ou em uma Enchoice para que o
conteúdo do campo _TIPDEPR seja recuperado adequadamente, pois para este campo nesta situacao nao podera ser usado o &(ReadVar()),
pois ele não é o campo posicionado no momento.

1.	Se o campo a ser validado for _TIPDEPR:
1.1.	Verificar se o conteudo do parâmetro MV_TIPDEPR é diferente de "9" - Ficha do Ativo, aonde:
1.1.1.	MV_TIPDEPR == 9 ' Retorno .T.
1.1.2.	MV_TIPDEPR != 9 ' Retorno .F.

2.	Se o campo a ser validado for _CALDEPR:
2.1.	Verificar se o conteúdo do parâmetro MV_TIPDEPR é diferente de "9" - Ficha do Ativo, aonde:
2.1.1.	MV_TIPDEPR == 9 ' Testa próxima situação
2.1.2.	MV_TIPDEPR != 9 ' Retorno .F.

2.2.	Verificar se o conteúdo do campo _TIPDEPR contém "03" - Exercício Completo ou "04" - Próximo Trimestre.
2.2.1.	_TIPDEPR $ ("03|04") ' Retorno .T.
2.2.2.	!(_TIPDEPR $ ("03|04")) ' Retorno .F.
*/
Function AF251G4(cDescCpoCr,cDescCpoCl)
Local aHeaderX		:= Eval(bRetGet,1)
Local aColsX		:= Eval(bRetGet,2)
Local lRet			:= (Alltrim(SuperGetMv("MV_TIPDEPR",.F.,"")) == "9")
Local aAreaSx3		:= SX3->(GetArea())
Local nPos			:= If(Type('aHeaderX')== "A",Ascan(aHeaderX,{|x| Alltrim(x[2]) == cDescCpoCr}),0)
Default cDescCpoCr	:= ""
Default cDescCpoCl	:= ""
SX3->(DbSetOrder(2))
If SX3->(DbSeek(cDescCpoCr))
	If Empty(cDescCpoCr)
		lRet:=.F.
	EndIf
Else
	lRet:=.F.
EndIf
If "_CALDEP" $ cDescCpoCl .and. lRet
	If SX3->(DbSeek(cDescCpoCl))
		If nPos > 0
			If Type('aColsX') == "A"
				If !(Alltrim(aColsX[n,nPos]) $ "03|04")
					lRet := .F.
				EndIf
			Else
				lRet := .F.
			EndIf
		ElseIf !(ALLTRIM(M->&(cDescCpoCr)) $ "03|04")
			lRet := .F.
			M->&(cDescCpoCr) := Space(TamSx3("NG_CRIDEPR")[1])
		EndIf
	Else
		lRet := .F.
	EndIf
EndIf
SX3->(RestArea(aAreaSx3))
Return lRet

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³AF251ExcSN1ºAutor³Microsiga           º Data ³  03/05/12   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Verifica se deve excluir o SN1 no cancelamento da operação  º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ AP                                                        º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function AF251ExcSN1(cBase,cItem)

Local aArea	 	 := GetArea()
Local cAliasSQL	 := GetNextAlias()
Local lRet	 	 := .T.
Local cQuery 	 := ""

	If __oQueryN3 == Nil
		cQuery := " SELECT N3_CBASE, N3_ITEM 
		cQuery += " FROM ?
		cQuery += " WHERE N3_FILIAL = ?
		cQuery += " 	AND N3_CBASE = ?
		cQuery += " 	AND N3_ITEM = ?
		cQuery += " 	AND D_E_L_E_T_ = ' '

		cQuery := ChangeQuery(cQuery)
		__oQueryN3 := FWPreparedStatement():New(cQuery)
	EndIf

	__oQueryN3:SetNumeric(1,RetSqlName('SN3'))
	__oQueryN3:SetString(2,xFilial('SN3'))
	__oQueryN3:SetString(3,cBase)
	__oQueryN3:SetString(4,cItem)

	cAliasSQL := MPSYSOpenQuery(__oQueryN3:GetFixQuery(),cAliasSQL)

	DbSelectArea(cAliasSQL)

	If (cAliasSQL)->(!EoF())
		lRet := .F.	
	EndIf

	(cAliasSQL)->(dbCloseArea())

RestArea(aArea)

Return lRet

//AVP
/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³AF251VAVP ºAutor  ³Jair Ribeiro        º Data ³  11/15/11   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Valida o uso de fichas com AVP                             º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ Aquisicao por tranferencia                                 º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function AF251VAVP()
Local lRet		:= .T.
Local aArea		:= {}
Local nI		:= 0
Local cChave	:= ""
Local cTpSaldo	:= ""
Local lFieldAvp	:= .T.
Local aAvpN1	:= {}
Local aAvpC		:= {}
Local aAvp		:= {}
Local lAvp		:= .F.
Local nPos		:= 0
Local cTypes10	:= IIF(lIsRussia,"*" + AtfNValMod({1}, "*"),"") // CAZARINI - 27/03/2017 - If is Russia, add new valuations models - main models

If lFieldAvp
	aAdd(aArea,GetArea())
	aAdd(aArea,SN3->(GetArea()))
	aAdd(aArea,_SN3->(GetArea()))


	SN3->(DbGoTop())
	While SN3->(!EOF())
		If SN3->N3_OK == cMarca
			cChave:=SN3->N3_FILIAL+SN3->N3_CBASE+SN3->N3_ITEM
			aAdd(aAvpN1,GetAdvFVal("SN1",{"N1_DTAVP", "N1_INDAVP","N1_TAXAVP"},cChave,1,{STOD(""),"",0}))
			_SN3->(DbSetOrder(1))
			_SN3->(DbSeek(cChave))
			While _SN3->(!EOF()) .and. _SN3->(N3_FILIAL+N3_CBASE+N3_ITEM) == cChave
				If AllTrim(_SN3->N3_TIPO) $ ("10|14" + cTypes10)	.AND. _SN3->N3_BAIXA < "1"
					If AllTrim(_SN3->N3_TIPO) $ "|14"
						cTpSaldo+= IiF(Alltrim(_SN3->N3_TPSALDO) $ cTpSaldo,"",("|"+_SN3->N3_TPSALDO))
						If (nPos:=Ascan(aAvp,{|aX|aX[1]==cChave+"|"+_SN3->N3_TPSALDO}))>0
							aAvp[nPos,4]:=	_SN3->N3_TIPO
						Else
							aAdd(aAvp,{cChave+"|"+_SN3->N3_TPSALDO,_SN3->N3_TPSALDO,"",_SN3->N3_TIPO})
						EndIf
						lAvp := .T.
					ElseIf (nPos:=Ascan(aAvp,{|aX|aX[1]==cChave+"|"+_SN3->N3_TPSALDO}))>0
						aAvp[nPos,3]:=	_SN3->N3_TIPO
					Else
						aAdd(aAvp,{cChave+"|"+_SN3->N3_TPSALDO,_SN3->N3_TPSALDO,_SN3->N3_TIPO,""})
					EndIf
				EndIf
				_SN3->(DbSkip())
			EndDo

		EndIf
		SN3->(DbSkip())
	EndDo
	If lAvp
		For nI := 1 To Len(aAvpN1)
			If !Empty(aAvpN1[nI,1])
				If Empty(aAvpC)
					aAvpC := aClone(aAvpN1[nI])
				ElseIf AdmDiffArray(aAvpC,aAvpN1[nI])
					Help(" ", 1,"AF251IAVP",, STR0159,1,0) //"Fichas de ativo selecionadas possuem AVP com data de execução e/ou índice de AVP distintos"
					lRet := .F.
					Exit
				EndIf
			EndIf
		Next nI
		If 	lRet
			For nI := 1 To Len(aAvp)
				If (Alltrim(aAvp[nI,2]) $ cTpSaldo) .and. (Empty(aAvp[nI,3]) .or. Empty(aAvp[nI,4]))
					Help(" ", 1,"AF251IAVP",, STR0160,1,0) //"Fichas de ativo selecionadas possuem AVP com divergências no uso do tipo de saldo"
					lRet := .F.
					Exit
				EndIf
			Next nI
		EndIf
	EndIf
	For nI := 1 To Len(aArea)
		RestArea(aArea[nI])
	Next nI
EndIf
Return lRet
/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³Af251CpOk ºAutor  ³Microsiga           º Data ³  11/15/11   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³                                                            º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ Aquisicao por tranferencia                                 º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function Af251CpOk(oGetDaDosC,aColsDadoC,nLinRef,aTiposC)
Local lRet		:= .T.
Local aHeaderX	:= aClone(oGetDaDosC:aHeader)
Local aColsx	:= aClone(oGetDaDosC:aCols)
Local aColsY	:= {}
Local nPosTipo	:= Ascan(aHeaderX, {|x| Alltrim(x[2])  == "N3_TIPO"})
Local nPosTpSd	:= Ascan(aHeaderX, {|x| Alltrim(x[2])  == "N3_TPSALDO"})
Local nPosVorig	:= Ascan(aHeaderX, {|x| Alltrim(x[2])  == "N3_VORIG1"})
Local nPosAx	:= 0
Local cTpSaldo	:= ""
Local nI		:= 0
Local nJ		:= 0
Local cTypes10	:= IIF(lIsRussia,"*" + AtfNValMod({1}, "*"),"") // CAZARINI - 27/03/2017 - If is Russia, add new valuations models - main models

If AsCan(aTiposC,{|aX| aX == "14"}) > 0
	For nI	:= 1 To Len(aColsX)
		If !aColsX[nI,Len(aHeaderX)+1]
			If  AllTrim(aColsX[nI,nPosTipo]) $ "|14"
				cTpSaldo += IiF(aColsX[nI,nPosTpSd] $ cTpSaldo ,"","|"+aColsX[nI,nPosTpSd])
			EndIf
		EndIf
	Next nI
	For nI	:= 1 To Len(aColsDadoC)
		If nI != nLinRef
			For nJ := 1 To Len(aColsDadoC[nI,2])
				If !aColsDadoC[nI,2,nJ,Len(aHeaderX)+1]
					If  AllTrim(aColsDadoC[nI,2,nJ,nPosTipo]) $ "|14"
						cTpSaldo += IiF(aColsDadoC[nI,2,nJ,nPosTpSd] $ cTpSaldo ,"","|"+aColsDadoC[nI,2,nJ,nPosTpSd])
					EndIf
				EndIf
			Next nJ
		EndIf
	Next nI

	If AscanX(aColsX,{|x,y| ALLTRIM(x[nPosTipo]) $ ("10" + cTypes10) .and.  ALLTRIM(x[nPosTpSd]) $ cTpSaldo .and. !GDDeleted(y,aHeaderX,aColsX)}) > 0
		If (nPosAx := AscanX(aColsX,{|x,y| ALLTRIM(x[nPosTipo]) == "14" .and.  ALLTRIM(x[nPosTpSd]) $ cTpSaldo .and. !GDDeleted(y,aHeaderX,aColsX)})) == 0
			lRet := .F.
		Else
			lRet:= aColsX[nPosAx,nPosVorig]>0
		EndIf
	EndIf

    If lRet
		For nI	:= 1 To Len(aColsDadoC)
			If nI != nLinRef
				aColsY := aClone(aColsDadoC[nI,2])
					If AscanX(aColsY,{|x,y| ALLTRIM(x[nPosTipo]) $ ("10" + cTypes10) .and.  ALLTRIM(x[nPosTpSd]) $ cTpSaldo .and. !GDDeleted(y,aHeaderX,aColsY)}) > 0
						If (nPosAx := AscanX(aColsY,{|x,y| ALLTRIM(x[nPosTipo]) == "14" .and.  ALLTRIM(x[nPosTpSd]) $ cTpSaldo .and. !GDDeleted(y,aHeaderX,aColsY)})) == 0
							lRet := .F.
						Else
					   		lRet:= aColsY[nPosAx,nPosVorig]>0
						EndIf
					EndIf
			EndIf
		Next nI
	EndIf
EndIf
If !lRet
	Help(" ", 1,"AF251IAVP",, STR0161,1,0) //"Erro na distribuição no rateio de AVP"
EndIf
Return lRet

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³AdmDiffArrayºAutor  ³Fernando Radu Muscaluº Data ³  31/10/11   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Compara dois arrays e retorna .t. se ha diferencas entre eles  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºParametros³aArray1	- Tipo: A       	                                 º±±
±±º          ³aArray2	- Tipo: A		                                     º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ Generico	                                                     º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function AdmDiffArray(aArray1,aArray2)

Local lDiff 	:= .f.

Local nQtdLin1 	:= len(aArray1)
Local nQtdLin2 	:= Len(aArray2)
Local nI		:= 0

If nQtdLin1 == nQtdLin2
	For nI := 1 to nQtdLin1
		If Valtype(aArray1[nI]) == Valtype(aArray2[nI])
			If Valtype(aArray1[nI]) <> "A"
				If aArray1[nI] <> aArray2[nI]
					lDiff := .t.
					Exit
				Endif
			Else
				lDiff := AdmDiffArray(aArray1[nI],aArray2[nI])
				If lDiff
					Exit
				Endif
			Endif
		Else
			lDiff := .t.
			Exit
		Endif
	Next nI
Else
	lDiff := .t.
Endif

Return(lDiff)


/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³ ATFA251  ºAutor  ³ Marylly A. Silva   º Data ³  29/05/12   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Função que filtra os ativos com classificação de ativo:    º±±
±±º          ³ "O" -> Orçamento de Provisão de Despesa                    º±±
±±º          ³ "V" -> Provisão de Despesa                                 º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ Controle AVP - ICPC 01                                     º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function AF251FTOV(cBase,cItem)
Local lRet		:= .T.
Local aArea		:= GetArea()
Local aAreaSN1	:= {}

DbSelectArea("SN1")
aAreaSN1 := SN1->(GetArea())

If SN1->(MsSeek(xFilial("SN1")+cBase+cItem))
	If AllTrim(SN1->N1_PATRIM) $ "O|V" .or. SN1->N1_STATUS $ '0' //ADICIONADO FILTRO PARA NÃO TRAZER PENDENTE DE CLASSIFICAÇÃO
		lRet := .F.
	EndIf
EndIf

RestArea(aAreaSN1)
RestArea(aArea)
Return lRet
/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³ AF251GRPCºAutor  ³Alvaro Camillo Neto º Data ³  20/07/12   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ Controle AVP - ICPC 01                                     º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function AF251GRPC(oGetDadosC,oGet)
Local aArea 		:= GetArea()
Local aHeaderComp	:= oGetDadosC:aHeader
Local nAtGet		:= oGet:oBrowse:nAt
Local aColsComp 	:= aClone(oGetDadosC:aCols)
Local nX			:= 0
Local nY			:= 0
Local nPosSNG 		:= 0
Local cSN1Grupo		:= ""
Local aAreaSNG		:= Eval( {|| DbSelectArea("SNG"),SNG->(GetArea()) } )
Local aAreaSX3		:= Eval( {|| DbSelectArea("SX3"),SX3->(GetArea()) } )
Local aAreaFNG		:= Eval( {|| DbSelectArea("FNG"),FNG->(GetArea()) } )
Local __aNMoed
Local aEntidade  	:= {}
Local aEdtAcols 	:= {}
Local lachFNG		:=.F.

nPosGrupo := Ascan(aHeader, {|e| Alltrim(e[2]) == "N1_GRUPO" } )

If nAtGet > 0 .And. nPosGrupo > 0
	cSN1Grupo := aCols[nAtGet][nPosGrupo]
EndIf

__aNMoed := {}
AtfMultMoe(,,{|x| aAdd(__aNMoed,Empty(GETMV("MV_MOEDA"+Alltrim(str(x))))) })
SNG->(DbSeek(xFilial("SNG") + cSN1Grupo))

SX3->(MsSeek("SNG"))
SX3->(DbEval( { || Aadd(aEntidade, SX3->X3_CAMPO ) },,{ || SX3->X3_ARQUIVO == "SNG" }))

For nX := 1 to Len(aColsComp)
	For ny:=1 To Len(aHeaderComp)
		If  Trim(aHeaderComp[ny][2]) == "N3_TIPO"
			If !(ValType(aColsComp[nX][ny]) == 'U') .Or. (aColsComp[nX][ny] <= 0)
				If FNG->(DbSeek(xFilial("SNG") + cSN1Grupo + aColsComp[nX][ny]))
					lachFNG := .T.
				EndIf
			Endif
		EndIf
		If  Trim(aHeaderComp[ny][2]) == "N3_TXDEPR1"
			If (ValType(aColsComp[nX][ny]) == 'U') .Or. (aColsComp[nX][ny] <= 0)
				aColsComp[nX][ny] := If(lachFNG, FNG->FNG_TXDEP1, SNG->NG_TXDEPR1)
			EndIf
		ElseIf "N3_TXDEP" $ Trim(aHeaderComp[ny][2])
			If ValType(aColsComp[nX][ny]) == 'U' .Or. aColsComp[nX][ny] <= 0
				If "N3_TXDEPR" $ Trim(aHeaderComp[ny][2])
					nMoed := Val(StrTran(aHeaderComp[ny][2],"N3_TXDEPR",""))
				Else
					nMoed := Val(StrTran(aHeaderComp[ny][2],"N3_TXDEP",""))
				EndIf
				If __aNMoed[nMoed]				/// Se não tem a moeda informada no parâmetro (Moeda em branco)
					aColsComp[nX][ny] := 0
				Else
					iF !lachFNG
						aColsComp[nX][ny] := SNG->&(If(nMoed>9,"NG_TXDEP","NG_TXDEPR")+Alltrim(Str(nMoed)))
					Else
						aColsComp[nX][ny] := FNG->&("FNG_TXDEP"+Alltrim(Str(nMoed)))
					EndIf

				EndIf
			EndIf
 		ElseIf !(Trim(aHeaderComp[nY][2]) $ "N3_FILIAL#N1_CBASE#N1_ITEM") .and. aHeaderComp[nY][8] == "C" .and. (nPosSNG := aScan(aEntidade,{|cEntidade| ALLTRIM(SUBSTR(cEntidade,4,10)) == ALLTRIM(SUBSTR(aHeaderComp[nY][2],4,10))})) > 0
			If Empty(aColsComp[nX][ny]) .AND. !Empty(&("SNG->"+ALLTRIM(aEntidade[nPosSNG]))) // SOMENTE SE O CAMPO NO GRID ESTIVER VAZIO PARA PRESERVAR DIGITACAO
				aColsComp[nX][ny] := &("SNG->"+aEntidade[nPosSNG])
			EndIf
		EndIf
	Next ny
Next nX

If ExistBlock("AF251EAC")
	aEdtAcols := ExecBlock ("AF251EAC",.F.,.F.,{aHeader, aCols, aHeaderComp, aColsComp})
	If ValType (aEdtAcols) =="A" .And. Len (aEdtAcols)==4
		aHeader 	:= aClone(aEdtAcols[1] )
   		aCols 		:= aClone(aEdtAcols[2] )
   		aHeaderComp := aClone(aEdtAcols[3] )
   		aColsComp 	:= aClone(aEdtAcols[4] )
	EndIf
EndIf

oGetDadosC:aCols := aClone(aColsComp)

RestArea(aAreaSNG)
RestArea(aAreaSX3)
RestArea(aAreaFNG)
RestArea(aArea)
Return

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³ AF251CONV  ³ Autor ³ TOTVS SA              ³ Data ³ 10.08.10 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Converte Valor de aquisi‡„o moeda 1 para moedas 2,3,4 e 5.   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ ATFA010                                                      ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function AF251CONV()
Local nValor			:= &(ReadVar())
Local cCampo			:=  ReadVar()
Local aHeaderComp		:= oGetDadosC:aHeader
Local nAtComp			:= oGetDadosC:nAt
Local nPosDtConv 		:= Ascan(aHeaderComp	, {|e| Alltrim(e[2]) = "N3_AQUISIC"} )
Local dDtConv 		:= cTod("")

// *******************************
// Controle de multiplas moedas  *
// *******************************
Local __nQuantas := AtfMoedas()
Local aPosVOrigX:= AtfMultPos(aHeaderComp,"N3_VORIG")
Local nX

If nPosDtConv > 0
	dDtConv := oGetDadosC:aCols[nAtComp][nPosDtConv]
EndIf

//Converte apenas com base na moeda 1, pois o valor do ativo na outra moeda não necessita ter base na cotação do dia.
If "N3_VORIG1" $ cCampo
	For nX := 2 to __nQuantas
		If aPosVOrigX[nX] > 0
			oGetDadosC:aCols[nAtComp][aPosVOrigX[nX]] := nValor / RecMoeda(dDtConv,nX)
			&("M->N3_VORIG"+AllTrim(Str(nX)))  := aCols[nAtComp][aPosVOrigX[nX]]
		Endif
	Next
EndIf

oGetDadosC:oBrowse:Refresh()

Return .T.

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³ AF251VLABA  ³ Autor ³ TOTVS SA              ³ Data ³ 10.08.10 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Valida aba de complemento   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ ATFA010                                                      ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function AF251VLABA(lAbaComp)
Local lRet     := .T.
Local aArea    := GetArea()
Local aAreaSN3 := SN3->(GetArea())
Local cTypes10 := IIF(lIsRussia,"/" + AtfNValMod({1}, "/"),"") // CAZARINI - 27/03/2017 - If is Russia, add new valuations models - main models

SN3->(dbGoTop())
While SN3->(!EOF())
	If SN3->N3_OK == cMarca
		If SN3->N3_TIPO $ ('10/13/15' + cTypes10) .And. !lAbaComp
			Help(" ",1,"ATF251ABA",,STR0170,1,0) //"Caso seja selecionado ativos com classificacao gerencial, no parâmetro - Permite adição de novos tipos? - responda - Sim"
			lRet := .F.
			Exit
		EndIf
	EndIf

	SN3->(dbSkip())
EndDo

RestArea(aAreaSN3)
RestArea(aArea)
Return lRet

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³MarcouItem ºAutor  ³Daniel Mendes      º Data ³  29/06/15   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Guarda o item marcado no array para validação na baixa     º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ ATFA251                                                    º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function MarcouItem()
Local nPosVazio := 0

If Empty( aItensMark )
	aAdd( aItensMark , { SN3->(N3_FILIAL+N3_CBASE+N3_ITEM) , SN3->(N3_FILIAL+N3_CBASE+N3_ITEM+N3_TIPO+N3_TPSALDO) } )
ElseIf ( aScan( aItensMark , { | aPesq | aPesq[ 2 ] == SN3->(N3_FILIAL+N3_CBASE+N3_ITEM+N3_TIPO+N3_TPSALDO) } ) == 0 )
	nPosVazio := aScan( aItensMark , { | aPesq | Empty( aPesq[ 1 ] ) } )

	If nPosVazio > 0
		aItensMark[ nPosVazio , 1 ] := SN3->(N3_FILIAL+N3_CBASE+N3_ITEM)
		aItensMark[ nPosVazio , 2 ] := SN3->(N3_FILIAL+N3_CBASE+N3_ITEM+N3_TIPO+N3_TPSALDO)
	Else
		aAdd( aItensMark , { SN3->(N3_FILIAL+N3_CBASE+N3_ITEM) , SN3->(N3_FILIAL+N3_CBASE+N3_ITEM+N3_TIPO+N3_TPSALDO) } )
	EndIf
EndIf

Return Nil

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³DesmrkItem ºAutor  ³Daniel Mendes      º Data ³  29/06/15   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Remove o item marcado do array de validação de baixa       º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ ATFA251                                                    º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function DesmrkItem()
Local nPosDel := 0

If !Empty( aItensMark )

	nPosDel := aScan( aItensMark , { | aPesq | aPesq[ 2 ] == SN3->(N3_FILIAL+N3_CBASE+N3_ITEM+N3_TIPO+N3_TPSALDO) } )

	If nPosDel > 0
		aItensMark[ nPosDel , 1 ] := ""
		aItensMark[ nPosDel , 2 ] := ""
	EndIf

EndIf

Return Nil

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³AF251AtuSdºAutor  ³Lucas Crevilari     º Data ³  25/07/17   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Atualiza o 'Totais do Rateio', quando alterado o Tipo Saldoº±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ ATFA251                                                    º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/

Function AF251AtuSd(cTpSaldo)
Local aHeaderX 		:= aClone(oGetDadosC:aHeader)
Local aColsX		:= aClone(oGetDadosC:aCols)
Local nLinha		:= oGetDadosC:oBrowse:nAt
Local nX			:= 0
Local nPosVal1		:= Ascan(aHeaderX, {|x| UPPER(Alltrim(Alltrim(x[2]) )) == "N3_VORIG1"})
Local nPosTpSd		:= Ascan(aHeaderX, {|x| UPPER(Alltrim(Alltrim(x[2]) )) == "N3_TPSALDO"})
Local nPosRat		:= Ascan(aHeadTotais, {|x| UPPER(Alltrim(Alltrim(x[1]) )) == "RATEADO"}) //Busca pelo titulo, pois o nome do campo se repete

oGetDadTot:aCols[2,nPosRat] := 0
oGetDadTot:aCols[3,nPosRat]	:= 0

For nX := 1 To Len(aColsX)
	If nX == nLinha
		If cTpSaldo == '1' //Real
			oGetDadTot:aCols[2,nPosRat] += aColsX[nX,nPosVal1]
		Elseif cTpSaldo == '3' //Gerencial
			oGetDadTot:aCols[3,nPosRat] += aColsX[nX,nPosVal1]
		Endif
	Else
		If aColsX[nX,nPosTpSd] == '1' //Real
			oGetDadTot:aCols[2,nPosRat] += aColsX[nX,nPosVal1]
		Elseif aColsX[nX,nPosTpSd] == '3' //Gerencial
			oGetDadTot:aCols[3,nPosRat] += aColsX[nX,nPosVal1]
		Endif
	Endif
Next nX

oGetDadTot:oBrowse:Refresh()
oGetDadTot:ForceRefresh()

Return .T.
/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³RetTipos  ºAutor  ³Fabio Cazarini     º Data ³  27/03/17   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Utilizado nas funcionalidades Detalhar e Agrupar           º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ ATFA251                                                    º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function RetTipos(aTiposIni)
Local aRet 			:= {}
Local cTypes10		:= IIF(lIsRussia,AtfNValMod({1}, "|"),"") // CAZARINI - 24/03/2017 - If is Russia, add new valuations models - main models
Local aTypes10		:= {}
Local nTypes10		:= 0
Local cTypesNM		:= IIF(lIsRussia,AtfNValMod({3,4}, "|"),"") // CAZARINI - 24/03/2017 - If is Russia, add new valuations models - 17 and 16 models
Local aTypesNM		:= {}
Local nTypesNM		:= 0

aRet := aClone( aTiposIni )

aTypes10 := Separa(cTypes10, '|', .f.)
aTypesNM := Separa(cTypesNM, '|', .f.)

For nTypes10 := 1 to len(aTypes10)
	Aadd( aRet, aTypes10[nTypes10] )
Next nTypes10

For nTypesNM := 1 to len(aTypesNM)
	Aadd( aRet, aTypesNM[nTypesNM] )
Next nTypesNM

Return aRet

/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    COMPDOBEMC ³ Autor ³ TOTVS SA              ³ Data ³ 08.11.20 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Recupera os componentes vinculados ao bem em construcao    ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ CompDoBemC(cBemCons, cItem)                                ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Atfa251                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/

Function CompDoBemC(cBemCons, cItem)
Local aArea		:= GetArea()
Local cTab		:= GetNextAlias()
Local cQry		:= ""
Local aComponent:= {}

//Busca componentes vinculados ao Bem em Construção
If Select(cTab) > 0
	(cTab)->(dbCloseArea())
EndIf
If __oQry == Nil

  cQry := " SELECT N1_CBASE, N1_ITEM  
  cQry += " FROM ?
  cQry += " 	WHERE N1_FILIAL = ?
  cQry += " 	AND N1_SLBMCON= ?
  cQry += " 	AND N1_CDCONTR= ?
  cQry += " 	AND D_E_L_E_T_  = ' ' 
  cQry += " 	ORDER BY 1,2 " 
  cQry := ChangeQuery(cQry)
__oQry := FWPreparedStatement():New(cQry)

EndIf
__oQry:SetNumeric(1,RetSqlName("SN1"))
__oQry:SetString(2,xFilial('SN1'))
__oQry:SetString(3,cBemCons)
__oQry:SetString(4,cItem)

cTab := MPSYSOpenQuery(__oQry:GetFixQuery(),cTab)

DbSelectArea(cTab)

(cTab)->(dbGoTop())

While (cTab)->(!EOF())	
	aAdd(aComponent,{(cTab)->N1_CBASE, (cTab)->N1_ITEM})
	(cTab)->(dbSkip())
EndDo

(cTab)->(dbCloseArea())

RestArea(aArea)
Return(aComponent)

/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    AdtComVinc ³ Autor ³ TOTVS SA              ³ Data ³ 10.11.20 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Verifica se o componente possui vinculo com um bem         ³±±
±±³            em construtrução                                           ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ AdtComVinc(cComponent, cItem)                              ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Atfa251                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/

Function AdtComVinc(cComponent, cItem)
LOCAL aArea		:= GetArea()
Local cQuery	:= ""
Local cTab		:= GetNextAlias()
Local lRet		:= .F.

//Busca componentes vinculados ao Bem em Construção
If Select(cTab) > 0
	(cTab)->(dbCloseArea())
EndIf

cQuery := " SELECT N1_CBASE " 
cQuery += " FROM " + RetSqlName("SN1")
cQuery += " 	WHERE N1_FILIAL = '" + xFilial("SN1") + "'"
cQuery += " 	AND N1_CBASE = '" + cComponent + "'"
cQuery += " 	AND N1_ITEM = '" + cItem + "'"
cQuery += " 	AND N1_SLBMCON <> ''"
cQuery += " 	AND D_E_L_E_T_ = '' "

cQuery := ChangeQuery(cQuery)

DbUseArea(.T., "TOPCONN", TcGenQry(,, cQuery), cTab)

If (cTab)->(!EOF())
	lRet:= .T.	
EndIf

(cTab)->(dbCloseArea())

RestArea(aArea)
Return(lRet)

/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    BemConsAgr ³ Autor ³ TOTVS SA              ³ Data ³ 10.11.20 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Verifica se o Bem em construtrução foi agrupado            ³±±
±±³                                                                       ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ BemConsAgr(cBemConstr, cItem)                               ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Atfa251                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/

Function BemConsAgr(cBemConstr, cItem)
LOCAL aArea		:= GetArea()
Local cQuery	:= ""
Local cTab		:= GetNextAlias()
Local lRet		:= .F.

//Busca componentes vinculados ao Bem em Construção
If Select(cTab) > 0
	(cTab)->(dbCloseArea())
EndIf

cQuery := " SELECT N1_CBASE " 
cQuery += " FROM " + RetSqlName("SN1")
cQuery += " 	WHERE N1_FILIAL = '" + xFilial("SN1") + "'"
cQuery += " 	AND N1_CBASE = '" + cBemConstr + "'"
cQuery += " 	AND N1_ITEM = '" + cItem + "'"
cQuery += " 	AND N1_STATUS = '1'"
cQuery += " 	AND N1_VLAQUIS > 0 "
cQuery += " 	AND N1_BMCONTR = '1' "
cQuery += " 	AND D_E_L_E_T_ = '' "

cQuery := ChangeQuery(cQuery)

DbUseArea(.T., "TOPCONN", TcGenQry(,, cQuery), cTab)

If (cTab)->(!EOF())
	lRet:= .T.	
EndIf

(cTab)->(dbCloseArea())

RestArea(aArea)
Return(lRet)


/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    DescHistBc ³ Autor ³ TOTVS SA              ³ Data ³ 08.11.20 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Recupera Descricao e histórico do bem em construção        ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ DescHistBc(cComponent, cItem)                              ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Atfa251                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/

Function DescHistBc(cComponent, cItem)
LOCAL aArea		:= GetArea()
Local cQuery	:= ""
Local cTab		:= GetNextAlias()
Local aDescHistB:= {}

//Busca componentes vinculados ao Bem em Construção
If Select(cTab) > 0
	(cTab)->(dbCloseArea())
EndIf

cQuery := " SELECT N1_DESCRIC, N1_CHAPA, N3_HISTOR " 
cQuery += " FROM " + RetSqlName("SN1") + " SN1"
cQuery += " INNER JOIN " + RetSqlName("SN3") + " SN3"
cQuery += "  ON  SN1.N1_FILIAL = SN3.N3_FILIAL AND "
cQuery += "      SN1.N1_CBASE  = SN3.N3_CBASE  AND "
cQuery += "      SN1.N1_ITEM   = SN3.N3_ITEM       "
cQuery += " 	 WHERE SN1.N1_FILIAL = '" + xFilial("SN3") + "'"
cQuery += " 	 AND SN1.N1_CBASE    = '" + cComponent + "'"
cQuery += "      AND SN1.N1_ITEM     = '" + cItem + "'"
cQuery += " 	 AND SN1.D_E_L_E_T_  = '' "

cQuery := ChangeQuery(cQuery)

DbUseArea(.T., "TOPCONN", TcGenQry(,, cQuery), cTab)

(cTab)->(dbGoTop())

While (cTab)->(!EOF())	
	aAdd(aDescHistB,AllTrim((cTab)->N1_DESCRIC))
	aAdd(aDescHistB,AllTrim((cTab)->N1_CHAPA))
	aAdd(aDescHistB,AllTrim((cTab)->N3_HISTOR))
	(cTab)->(dbSkip())
EndDo

(cTab)->(dbCloseArea())

RestArea(aArea)
Return(aDescHistB)

/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    BemConsDis ³ Autor ³ TOTVS SA              ³ Data ³ 18.03.21 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Verifica se é um Bem em construtrução disponível           ³±±
±±³                                                                       ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ BemConsDis(cBemConstr,cItem)                               ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Atfa251                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/

Function BemConsDis(cBemConstr, cItem)
LOCAL aArea		:= GetArea()
Local cQuery	:= ""
Local cTab		:= GetNextAlias()
Local lRet		:= .F.

//Busca componentes vinculados ao Bem em Construção
If Select(cTab) > 0
	(cTab)->(dbCloseArea())
EndIf

cQuery := " SELECT N1_CBASE " 
cQuery += " FROM " + RetSqlName("SN1")
cQuery += " 	WHERE N1_FILIAL = '" + xFilial("SN1") + "'"
cQuery += " 	AND N1_CBASE = '" + cBemConstr + "'"
cQuery += " 	AND N1_ITEM = '" + cItem + "'"
cQuery += " 	AND N1_STATUS = '0'"
cQuery += " 	AND N1_BMCONTR = '1' "
cQuery += " 	AND D_E_L_E_T_ = '' "

cQuery := ChangeQuery(cQuery)

DbUseArea(.T., "TOPCONN", TcGenQry(,, cQuery), cTab)

If (cTab)->(!EOF())
	lRet:= .T.	
EndIf

(cTab)->(dbCloseArea())

RestArea(aArea)
Return(lRet)

/*/{Protheus.doc} ATF251Metrics
	
	ATF251Metrics - Funcao utilizada para metricas no CTBR400

	@type  Static Function
	@author user
	@since date
	@version version
	@param param, param_type, param_descr
	@return return, return_type, return_description
	@example
	(examples)
	@see (links_or_references)
	/*/
Static Function ATF251Metrics(cEvent, nStart, cSubEvent, cSubRoutine, nQtdReg, nTotalCall)

Local cFunBkp	:= ""
Local cFunMet	:= ""

// Local nFim := 0

Local cIdMetric  := ""
Local dDateSend := CtoD("")
Local nLapTime := 0

Default cEvent := ""
Default nStart := Seconds() //Caso futuramente exista metrica de tempo medio
Default cSubEvent := ""
Default cSubRoutine := Alltrim(ProcName(1))
Default nQtdReg := 0 //Deixando variavel caso posteriormente necessite de metricas de qtd registros
Default nTotalCall := 0 // Variavel para total de chamadas de função

//Só capturar metricas se a versao da lib for superior a 20210517
If __lMetric .And. !Empty(cEvent)
	
	//grava funname atual na variavel cFunBkp
	cFunBkp := FunName()

	If cEvent == "01" //Evento 01 - 
		
		//Evento 01 - Metrica de quantidade total de chamadas da funcao - af251rateio
		If cEvent == "01" 

			If cSubEvent == '001' .And. nTotalCall > 0

				cFunMet := Iif(AllTrim(cFunBkp)=='RPC',"RPCATFA251",cFunBkp)
				SetFunName(cFunMet)

				//atribuicao das variaveis que serao utilizadas pelo FwCustomMetrics
				cSubRoutine := Alltrim(cSubRoutine)			
				cIdMetric  := "ativo-fixo-protheus_ativofixoprotheus_aquisicaoportransferencia_total_total"
				dDateSend := LastDay( Date() )
				FWCustomMetrics():SetSumMetric(cSubRoutine, cIdMetric, nTotalCall, dDateSend, nLapTime)
			EndIf
		EndIf
	EndIf

	//Restaura setfunname a partir da variavel salva cFunBkp
	SetFunName(cFunBkp)
EndIf

Return 

function  aF251Robo()
	lCT34:= .T.
Return 

function aF251Reset()
	lCT34:= .F.
Return

/*/{Protheus.doc} ATF251ValOri
	
ATF251ValOri - Funcao utilizada para verificar se adiciona os valores
dos Ativos de Adiantamento em caso de Cancelamento das Baixas parciais
Ocorrerá somente para o último registro

@type  Static Function
@author Controladoria
@version
@param 
@return lRet - Se considera valor
/*/

Static Function ATF251ValOri() 

Local cQuery := ""
Local cTab   := GetNextAlias()
Local aArea  := GetArea()
Local lRet   := .F.

If SN3->N3_TIPO == "03"
	//Verifica se já existe temporaio
	If Select(cTab) > 0
		(cTab)->(dbCloseArea())
	EndIf

	//Query para busca de ativos
	cQuery := " SELECT COUNT(N3_CBASE) CONT_CBASE" 
	cQuery += " FROM " + RetSqlName("SN3")
	cQuery += " 	WHERE N3_FILIAL = '" + SN3->N3_FILIAL + "'"
	cQuery += " 	AND N3_CBASE = '" + SN3->N3_CBASE + "'"
	cQuery += " 	AND N3_ITEM = '" + SN3->N3_ITEM + "'"
	cQuery += " 	AND N3_TIPO = '03'"
	cQuery += " 	AND N3_BAIXA = '2'"
	cQuery += " 	AND N3_DTBAIXA <> ''"
	cQuery += " 	AND D_E_L_E_T_ = ' ' "

	cQuery := ChangeQuery(cQuery)

	DbUseArea(.T., "TOPCONN", TcGenQry(,, cQuery), cTab)

	(cTab)->(dbGoTop())

	//Se nao encontrou outros registros ou somente ele mesmo, retorna .T.
	//pois nao existem mais baixas de adiantamentos em aberto
	If (cTab)->(!EOF()) .And. (cTab)->CONT_CBASE > 0	
		lRet := .T.	
	EndIf

	//Fecha temporário
	(cTab)->(dbCloseArea())
EndIf

//Restaura area
RestArea(aArea)

Return lRet

/*/{Protheus.doc} aF251vldCan
	
aF251vldCan - Funcao utilizada para verificar se algum dos itens que foram criados 
sofreu baixas , caso tenha sofrido baixas deverá retornar .F. impedindo que o cancelamento
de transferência sejá realizado
Caso esteja valido retornará .T.

@type  Static Function
@author Controladoria
@version
@param 
@return lRet 
/*/
Static Function aF251vldCan(cCodBaix)

	Local lRet 		:= .F.
	Local cQuery 	:= ''
	Local aArea 	:= GetArea()
	local cConcatN3 := ''
	local cConcatN4 := ''
	Local cAliasSQL := GetNextAlias()

	cConcatn3 := ' N3_CBASE || N3_ITEM || N3_TIPO '
	cConcatn4 := ' N4_CBASE || N4_ITEM || N4_TIPO '

	cQuery := "SELECT COUNT(DISTINCT(N3_CODBAIX)) QTD " + ;
	 			" FROM "+RetSqlName('SN3')+" SN3 " + ;
					"WHERE N3_FILIAL= '"+xFilial('SN3')+"' AND "+cConcatN3+ " IN (" + ;
						"SELECT "+ cConcatN4 + "FROM "+RetSqlName('SN4')+" SN4 " + ;
							"WHERE N4_FILIAL= '"+xFilial('SN4')+"' AND N4_CODBAIX='"+cCodBaix+"'"+;
								"AND N4_OCORR = '16' AND D_E_L_E_T_=' ') " + ;
					"AND N3_CODBAIX <> ' ' AND D_E_L_E_T_=' '"

	cQuery := ChangeQuery(cQuery)


	MPSysOpenQuery(cQuery,cAliasSQL)

    If (cAliasSQL)->(!EoF()) .and.  (cAliasSQL)->QTD < 2
		lRet := .T.
	EndIf

	(cAliasSQL)->(DbCloseArea())

	RestArea(aArea)
Return lRet

/*/{Protheus.doc} At251CTE
	
At251CTE - Funcao utilizada para verificar se algum dos itens que foram incluso na grade se trata de CTE - Conhecimento de Trasnporte
Caso esteja valido, isto é, se refere a um CTE retornará .T.

@type  Static Function
@author Controladoria
@version
@param 
@return lRet 
/*/

Static Function At251CTE(cNotaFisc,cSerieNF,cCodFor,cLojFor)
Local lRet := .F.
Local aArea := GetArea()
Local aAreaSF1 := SF1->( GetArea() )

cNotaFisc := PadR(cNotaFisc,Len(SF1->F1_DOC))
cSerieNF := PadR(cSerieNF,Len(SF1->F1_SERIE))
cCodFor := PadR(cCodFor,Len(SF1->F1_FORNECE))
cLojFor := PadR(cLojFor,Len(SF1->F1_LOJA))

If !Empty(cNotaFisc) .And. !Empty(cCodFor)
	SF1->( dbSetOrder(1) )
	lRet := SF1->( dbSeek(xFilial("SF1")+cNotaFisc+cSerieNF+cCodFor+cLojFor) ) .AND. Alltrim(SF1->F1_ESPECIE) == "CTE"
EndIf

RestArea(aAreaSF1)
RestArea(aArea)

Return(lRet)

/*/{Protheus.doc} aF251Depr

aF251Depr - Funcao utilizada para verificar se o ativo já sofreu cálculo de depreciação.
Caso tenha sofrido, retornará falso impedindo o cancelamento da transferência/baixa

@type  Static Function
@author Controladoria
@version
@param 
@return lRet 
/*/
Static Function aF251Depr(cBase,cItem,cTipo,lAtfa040)

	Local aArea 	:= GetArea()
	Local cAliasQry := ""
	Local cQuery 	:= ""
	Local lRet 		:= .T.

	cAliasQry := GetNextAlias()
	cQuery := " SELECT N4_CBASE CBASE  " + ;
				" FROM "  + RetSqlName("SN4") + " SN4 " + ;
					" WHERE SN4.N4_FILIAL  = '" + xFilial("SN4") + "' AND " + ;
						" SN4.N4_CBASE ='"+ cBase + "' AND " + ;
						" SN4.N4_ITEM ='"+ cItem + "' AND " + ;
						" SN4.N4_TIPO ='"+ cTipo + "' AND " + ;
						" SN4.N4_OCORR IN ('06','20') AND " + ;
						" SN4.N4_ORIGEM = 'ATFA050' AND " + ;
						" SN4.N4_TIPOCNT = '3' AND " + ; //valida somente conta de despesa de dep.| dep.acumulada proveniente do cadastro do ativo deverá permitir o cancelamento
						" SN4.D_E_L_E_T_ = ' ' "

	cQuery := ChangeQuery(cQuery) 

	MPSysOpenQuery(cQuery,cAliasQry)

	If (cAliasQry)->(!Eof()) 
		If lAtfa040
			Help("",,"AF040CANC",, STR0194,2,0,,,,,,{STR0195}) //"O ativo gerado a partir da baixa dos adiantamentos possui depreciação." || "Efetue o descálculo mensal (ATFA070) para estornar os movimentos de depreciação e possibilitar o cancelamento da baixa."
		Else
			Help("",,"AF251CANC",, STR0196,2,0,,,,,,{STR0197}) //"O ativo possui movimento(s) de depreciação." || "Efetue o descálculo mensal (ATFA070) para estornar os movimentos de depreciação e possibilitar o cancelamento da transferência."
		EndIf
		lRet := .F.
	Endif

	(cAliasQry)->(DbCloseArea())
	RestArea(aArea)

Return lRet
/*/{Protheus.doc} AF251VERIT
	Retornar no filtro para Bens em construção com mais de 100 componentes
	@type  Static Function
	@author wilton.santos
	@since 20220921
	@version 1.0
	@param aComponent
	@return cTrbTmp
/*/
Static Function AF251VERIT(aComponent)
Local aArea     := GetArea()
Local cTrbTmp   := ""
Local cTmpReal  := ""
Local nX		:= 0
Local aStruct   := {}
Local aTamCbase := FWSX3Util():GetFieldStruct("N1_CBASE")
Local aTamItem  := FWSX3Util():GetFieldStruct("N1_ITEM")


Aadd(aStruct, {"ATFBASE",aTamCbase[2],aTamCbase[3],aTamCbase[4]})
Aadd(aStruct, {"ATFITEM",aTamItem[2] ,aTamItem[3] ,aTamItem[4] })

cTrbTmp := GetNextAlias()

__oQryBemC := FWTemporaryTable():New( cTrbTmp )  
__oQryBemC:SetFields(aStruct) 
__oQryBemC:AddIndex("1", {"ATFBASE","ATFITEM"})

//------------------
//Criação da tabela temporaria
//------------------
__oQryBemC:Create() 
cTmpReal := __oQryBemC:GetRealName()

dbSelectArea( cTrbTmp )
dbSetOrder(1)

For nX := 1 to Len(aComponent)
	RecLock(cTrbTmp,.T.)
	(cTrbTmp)->ATFBASE := aComponent[nX,1]
	(cTrbTmp)->ATFITEM := aComponent[nX,2]
	MsUnlock()
Next

RestArea(aArea)
Return (cTrbTmp)


/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³AF251VLDAQºAutor  ³Douglas Silva       º Data ³  04/01/23   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Valida campo N3_AQUISIC                                    º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºParametros³ lDadosBem: Indica se N3_AQUISIC dados bem ou complementaresº±±
±±º          ³ Data: Não pode ser inferior a data ultimo calculo Depreci  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ SIGAATF                                                    º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function AF251VLDAQ()

	Local lRet 		:= .T.
	Local aArea 	:= { Alias(), IndexOrd() }
	Local dItem 	:= &(Readvar())
	Local nPosDtAq	:= Ascan(aHeader, {|x| UPPER(Alltrim(Alltrim(x[2]) )) == "N3_AQUISIC"})
	Local dUltDepr	:= SUPERGETMV("MV_ULTDEPR")

	If Empty(dItem)
		HELP("",,"AF251VLDAQ",,STR0199 ,2,0)  //"Data de aquisicao deve ser preenchida."
		lRet:= .F.
	ElseIf dItem <= dUltDepr //Tipo Depreciacao diferente 02-Mes Subsequente
		HELP("",,"AF251VLDAQ",,STR0200 + " " + DTOC(dUltDepr) ,2,0) //"A data de aquisicao deve ser feita no mês posterior a data do último cálculo de depreciação."		
		lRet := .F.
	EndIf

	dbSelectArea(aArea[1])
	dbSetOrder(aArea[2])

Return lRet
