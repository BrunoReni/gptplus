#include "TOTVS.CH"
#include 'tlpp-core.th'
#include 'tlpp-object.th'

namespace backoffice.fiscal.arquivos.municipal.nfsesorocaba.domain
using namespace backoffice.fiscal.arquivos.utils
using namespace backoffice.fiscal.arquivos.municipal.nfsesorocaba.data

@annotation MagneticFileField
    size as numeric default 0
    position as numeric
    fillment as character default " "
    decimalPlaces as numeric default 2
    decimalSeparator as character default ""
@end

/*/{Protheus.doc} NFSESorocabaFile
Classe que representa o arquivo para Importação de Serviços Tomados de Prestadores de Outro Município - Sorocaba/SP
@type class
@version 12.1.2210
@author allef.souza
@since 24/03/2023
/*/
Class NFSESorocabaFile

    Data oNFSESorocabaData as Object
    Data oStruct as Object
    Data xCurrentRecord as Variant
    Data nLastPositionInLevel as Numeric
    Data nLastLevel as Numeric
    Data nLines as Numeric

    Public Method new() Constructor
    Public Method getNextLine() as Character
    Public Method hasNextLine() as Logical
    Private Method _countLines()
    Public Method countLines() as Numeric

EndClass

/*/{Protheus.doc} NFSESorocabaFile::new
Fornece uma nova instância de NFSESorocabaFile
@type method
@version 12.1.2210
@author allef.souza
@since 24/03/2023
@param oNFSESorocabaData, object, Objeto do tipo NFSESorocabaData
@return object, uma nova instância de NFSESorocabaFile
/*/
Method new(oNFSESorocabaData as Object) Class NFSESorocabaFile
    
    ::oNFSESorocabaData := oNFSESorocabaData
    ::oStruct := HMNew()
    ::oStruct:Set(1, oNFSESorocabaData:getRegHeader())
    ::oStruct:Set(2, oNFSESorocabaData:getRegTrailer())
    ::_countLines()
    ::nLastLevel := 1
    ::nLastPositionInLevel := 1
    
Return Self

/*/{Protheus.doc} NFSESorocabaFile::hasNextLine() as Logical
Informa se ainda há uma linha para iterar
@type method
@version 12.1.2210
@author allef.souza
@since 24/03/2023
@return logical, retorna verdadeiro se houver uma linha e falso se o fim do arquivo foi alcançado
/*/
Method hasNextLine() as Logical Class NFSESorocabaFile
Return ::oStruct:Get(::nLastLevel, ::xCurrentRecord)

/*/{Protheus.doc} NFSESorocabaFile::getNextLine() as Character
Se houver, retorna a próxima linha do arquivo, caso contrário, retorna uma string vazia.
@type method
@version 12.1.2210
@author allef.souza
@since 24/03/2023
@return character, a próxima linha do arquivo
/*/
Method getNextLine() as Character Class NFSESorocabaFile

    Local oObj as Object
    
    If ::hasNextLine()

        If ValType(::xCurrentRecord) == "A"

            oObj := ::xCurrentRecord[::nLastPositionInLevel]

            If ::nLastPositionInLevel == Len(::xCurrentRecord)
                ::nLastPositionInLevel := 1
                ::nLastLevel++
            Else
                ::nLastPositionInLevel++
            EndIf

            Return oObj:toString()

        ElseIf ValType(::xCurrentRecord) == "O"
            ::nLastLevel++
            Return ::xCurrentRecord:toString()
        EndIf
    EndIf

Return ""

/*/{Protheus.doc} NFSESorocabaFile::_countLines
Totaliza a quantidade de linhas através a estrutura do arquivo
@type method
@version 12.1.2210
@author allef.souza
@since 24/03/2023
/*/
Method _countLines() Class NFSESorocabaFile

    Local nIndex := 1 as Numeric
    Local xReg as Variant

    Do While HMGet(::oStruct, nIndex, xReg)

		If ValType(xReg) == "A"
            ::nLines += Len(xReg)
        ElseIf ValType(xReg) == "O"
            ::nLines++
            xReg := Nil
            FreeObj(xReg)
        EndIf

        nIndex++

	EndDo    

Return

/*/{Protheus.doc} NFSESorocabaFile::countLines() as Numeric
Retorna o número de linhas do arquivo
@type method
@version 12.1.2210
@author allef.souza
@since 24/03/2023
@return numeric, número de linhas do arquivo
/*/
Method countLines() as Numeric Class NFSESorocabaFile
Return ::nLines

/*/{Protheus.doc} RecordOfNFSESorocaba
Classe genérica com métodos e propriedades comuns à todos os registros do 
arquivo para Importação de Serviços Tomados de Prestadores de Outro Município - Sorocaba/SP
@type class
@version 12.1.2210
@author allef.souza
@since 24/03/2023
/*/
Class RecordOfNFSESorocaba
    Protected Method toString() as Character
EndClass

/*/{Protheus.doc} RecordOfNFSESorocaba::toString
Retorna o registro no formato Character
@type method
@version 12.1.2210
@author allef.souza
@since 24/03/2023
@return character, o registro no formato Character
/*/
Method toString() Class RecordOfNFSESorocaba

    Local cRet as Character
    Local oAnnotationHelper := AnnotationHelper():getInstance() as Object
    Local oStruct as Object
    Local nI := 1 as Numeric
    Local xAttributeValue as Variant
    Local nFieldSize as Numeric
    Local aStruct as Array
    Local oField as Object
    Local cFillment as Character
    Local nDecimalPlaces as Numeric
    Local cDecimalSeparator as Character
    Local nLength := 0 as Numeric
    Local lIsNumeric := .F. as Logical
    Local lIsDate := .F. as Logical
    
    oStruct := oAnnotationHelper:getDataAnnotation(Self, "MagneticFileField", "position")
    oStruct:List(aStruct)
    nLength := Len(aStruct)
    aSize(aStruct, 0)

    For nI := 1 To nLength
        
        oStruct:Get(nI, oField)

        nFieldSize          := oField["size"]
        xAttributeValue     := Reflection.getDataValue(Self, oField["cAttributeName"])
        nDecimalPlaces      := oField["decimalPlaces"]
        cFillment           := oField["fillment"]
        cDecimalSeparator   := oField["decimalSeparator"]
        lIsNumeric          := oField["cAttributeType"] == "NUMERIC"
        lIsDate             := oField["cAttributeType"] == "DATE"

        If lIsNumeric
            xAttributeValue := Strtran(StrZero(xAttributeValue, nFieldSize+1, nDecimalPlaces), ".")
        ElseIf lIsDate
            xAttributeValue := Day2Str(xAttributeValue) + "/" + Month2Str(xAttributeValue) + "/" + Year2Str(xAttributeValue)
        ElseIf nFieldSize < Len(xAttributeValue)
            xAttributeValue := Left(xAttributeValue, nFieldSize)
        Else
            xAttributeValue := PadR(xAttributeValue, nFieldSize, cFillment)
        EndIf

        cRet += xAttributeValue

    Next nI

    oStruct := Nil
    FreeObj(oStruct)

Return cRet

/*/{Protheus.doc} RegHeader
Classe que representa o registro tipo H do arquivo arquivo para Importação de Serviços 
Tomados de Prestadores de Outro Município - Sorocaba/SP
@type class
@version 12.1.2210
@author allef.souza
@since 24/03/2023
/*/
Class RegHeader From RecordOfNFSESorocaba

    @MagneticFileField(size = 1, position = 1)
    Data cIdRegistro as Character

    @MagneticFileField(size = 6, position = 2)
    Data cInscricaoMunicipal as Character

    Public Method new() Constructor

EndClass

Method new(cIdRegistro as Character, cInscricaoMunicipal as Character) Class RegHeader
    Default cIdRegistro := "H"
    ::cIdRegistro := cIdRegistro
    ::cInscricaoMunicipal := cInscricaoMunicipal
Return Self

/*/{Protheus.doc} RegTrailer
Classe que representa o registro tipo T do arquivo para Importação de Serviços 
Tomados de Prestadores de Outro Município - Sorocaba/SP
@type class
@version 12.1.2210
@author allef.souza
@since 24/03/2023
/*/
Class RegTrailer From RecordOfNFSESorocaba

    @MagneticFileField(size = 1, position = 1)
    Data cIdRegistro as Character
    
    @MagneticFileField(size = 10, position = 2)
    Data dDataEmissao as Date
    
    @MagneticFileField(size = 7, position = 3)
    Data cCompetencia as Character
    
    @MagneticFileField(size = 15, position = 4)
    Data cNumDocFiscal as Character

    @MagneticFileField(size = 5, position = 5)
    Data cSerieDocFiscal as Character

    @MagneticFileField(size = 2, position = 6)
    Data cModeloDocFiscal as Character

    @MagneticFileField(size = 1, position = 7)
    Data cTipoPrestador as Character

    @MagneticFileField(size = 14, position = 8)
    Data cCGCPrestador as Character

    @MagneticFileField(size = 20, position = 9)
    Data cDocIdPrestadorEstrangeiro as Character

    @MagneticFileField(size = 150, position = 10)
    Data cRazaoSocialPrestador as Character

    @MagneticFileField(size = 7, position = 11)
    Data cCodMunicipioPrestador as Character

    @MagneticFileField(size = 1, position = 12)
    Data cPrestadorOptanteSimples as Character

    @MagneticFileField(size = 1, position = 13)
    Data cPrestadorMEI as Character

    @MagneticFileField(size = 1, position = 14)
    Data cPrestadorEstabelecidoMunicipio as Character

    @MagneticFileField(size = 8, position = 15)
    Data cCEPPrestador as Character

    @MagneticFileField(size = 25, position = 16)
    Data cTipoLogradouroPrestador as Character

    @MagneticFileField(size = 50, position = 17)
    Data cNomeLogradouroPrestador as Character

    @MagneticFileField(size = 10, position = 18)
    Data cNumeroLogradouroPrestador as Character

    @MagneticFileField(size = 60, position = 19)
    Data cComplementoEnderecoPrestador as Character

    @MagneticFileField(size = 60, position = 20)
    Data cBairroPrestador as Character

    @MagneticFileField(size = 2, position = 21)
    Data cUFPrestador as Character

    @MagneticFileField(size = 4, position = 22)
    Data cPaisPrestador as Character

    @MagneticFileField(size = 50, position = 23)
    Data cCidadePrestador as Character

    @MagneticFileField(size = 5, position = 24)
    Data cCodServicoPrestado as Character

    @MagneticFileField(size = 9, position = 25)
    Data cCNAE as Character

    @MagneticFileField(size = 15, position = 26)
    Data cCodObra as Character

    @MagneticFileField(size = 3, position = 27)
    Data cLocalPrestacaoServico as Character

    @MagneticFileField(size = 7, position = 28)
    Data cCodMunicipioLocalPrestacaoServico as Character

    @MagneticFileField(size = 2, position = 29)
    Data cUFPrestacaoServico as Character

    @MagneticFileField(size = 50, position = 30)
    Data cMunicipioExteriorPrestacaoServico as Character

    @MagneticFileField(size = 50, position = 31)
    Data cEstadoExteriorPrestacaoServico as Character

    @MagneticFileField(size = 4, position = 32)
    Data cPaisPrestacaoServico as Character

    @MagneticFileField(size = 3, position = 33)
    Data cLocalResultadoPrestacaoServico as Character

    @MagneticFileField(size = 7, position = 34)
    Data cCodMunicipioResultadoPrestacaoServico as Character

    @MagneticFileField(size = 2, position = 35)
    Data cUFResultadoPrestacaoServico as Character

    @MagneticFileField(size = 50, position = 36)
    Data cMunicipioExteriorResultadoPrestacaoServico as Character

    @MagneticFileField(size = 50, position = 37)
    Data cEstadoExteriorResultadoPrestacaoServico as Character

    @MagneticFileField(size = 4, position = 38)
    Data cPaisResultadoPrestacaoServico as Character

    @MagneticFileField(size = 1, position = 39)
    Data cMotivoNaoRetencao as Character

    @MagneticFileField(size = 1, position = 40)
    Data cExigibilidadeISS as Character

    @MagneticFileField(size = 3, position = 41)
    Data cTipoRecolhimentoImposto as Character

    @MagneticFileField(size = 5, position = 42)
    Data nAliquotaISS as Numeric

    @MagneticFileField(size = 15, position = 43)
    Data nValorServicoNF as Numeric

    @MagneticFileField(size = 15, position = 44)
    Data nValorDeducoes as Numeric

    @MagneticFileField(size = 15, position = 45)
    Data nDescontoIncondicionado as Numeric

    @MagneticFileField(size = 15, position = 46)
    Data nDescontoCondicionado as Numeric

    @MagneticFileField(size = 15, position = 47)
    Data nBaseCalculo as Numeric

    @MagneticFileField(size = 15, position = 48)
    Data nValorPIS as Numeric

    @MagneticFileField(size = 15, position = 49)
    Data nValorCOFINS as Numeric

    @MagneticFileField(size = 15, position = 50)
    Data nValorINSS as Numeric

    @MagneticFileField(size = 15, position = 51)
    Data nValorIR as Numeric

    @MagneticFileField(size = 15, position = 52)
    Data nValorCSLL as Numeric

    @MagneticFileField(size = 15, position = 53)
    Data nOutrasRetencoes as Numeric

    @MagneticFileField(size = 15, position = 54)
    Data nValorISS as Numeric

    @MagneticFileField(size = 2000, position = 55)
    Data cDiscriminacaoServicos as Character
    
    Public Method new() Constructor

EndClass

/*/{Protheus.doc} RegTrailer::new
Construtor da classe RegTrailer
@type method
@version 12.1.2210
@author allef.souza
@since 27/03/2023
@param vCampos, variadic, os paramêtros devem ser fornecidos conforme ordem dos campos no layout do arquivo para Importação de Serviços 
Tomados de Prestadores de Outro Município - Sorocaba/SP
@return object, retorna uma instância de backoffice.fiscal.arquivos.municipal.nfsesorocaba.domain.RegTrailer
/*/
Method new(vCampos as Variadic) Class RegTrailer

    ::cIdRegistro := vCampos:vArgs[1]
    ::dDataEmissao := vCampos:vArgs[2]
    ::cCompetencia := vCampos:vArgs[3]
    ::cNumDocFiscal := vCampos:vArgs[4]
    ::cSerieDocFiscal := vCampos:vArgs[5]
    ::cModeloDocFiscal := vCampos:vArgs[6]
    ::cTipoPrestador := vCampos:vArgs[7]
    ::cCGCPrestador := vCampos:vArgs[8]
    ::cDocIdPrestadorEstrangeiro := vCampos:vArgs[9]
    ::cRazaoSocialPrestador := vCampos:vArgs[10]
    ::cCodMunicipioPrestador := vCampos:vArgs[11]
    ::cPrestadorOptanteSimples := vCampos:vArgs[12]
    ::cPrestadorMEI := vCampos:vArgs[13]
    ::cPrestadorEstabelecidoMunicipio := vCampos:vArgs[14]
    ::cCEPPrestador := vCampos:vArgs[15]
    ::cTipoLogradouroPrestador := vCampos:vArgs[16]
    ::cNomeLogradouroPrestador := vCampos:vArgs[17]
    ::cNumeroLogradouroPrestador := vCampos:vArgs[18]
    ::cComplementoEnderecoPrestador := vCampos:vArgs[19]
    ::cBairroPrestador := vCampos:vArgs[20]
    ::cUFPrestador := vCampos:vArgs[21]
    ::cPaisPrestador := vCampos:vArgs[22]
    ::cCidadePrestador := vCampos:vArgs[23]
    ::cCodServicoPrestado := vCampos:vArgs[24]
    ::cCNAE := vCampos:vArgs[25]
    ::cCodObra := vCampos:vArgs[26]
    ::cLocalPrestacaoServico := vCampos:vArgs[27]
    ::cCodMunicipioLocalPrestacaoServico := vCampos:vArgs[28]
    ::cUFPrestacaoServico := vCampos:vArgs[29]
    ::cMunicipioExteriorPrestacaoServico := vCampos:vArgs[30]
    ::cEstadoExteriorPrestacaoServico := vCampos:vArgs[31]
    ::cPaisPrestacaoServico := vCampos:vArgs[32]
    ::cLocalResultadoPrestacaoServico := vCampos:vArgs[33]
    ::cCodMunicipioResultadoPrestacaoServico := vCampos:vArgs[34]
    ::cUFResultadoPrestacaoServico := vCampos:vArgs[35]
    ::cMunicipioExteriorResultadoPrestacaoServico := vCampos:vArgs[36]
    ::cEstadoExteriorResultadoPrestacaoServico := vCampos:vArgs[37]
    ::cPaisResultadoPrestacaoServico := vCampos:vArgs[38]
    ::cMotivoNaoRetencao := vCampos:vArgs[39]
    ::cExigibilidadeISS := vCampos:vArgs[40]
    ::cTipoRecolhimentoImposto := vCampos:vArgs[41]
    ::nAliquotaISS := vCampos:vArgs[42]
    ::nValorServicoNF := vCampos:vArgs[43]
    ::nValorDeducoes := vCampos:vArgs[44]
    ::nDescontoIncondicionado := vCampos:vArgs[45]
    ::nDescontoCondicionado := vCampos:vArgs[46]
    ::nBaseCalculo := vCampos:vArgs[47]
    ::nValorPIS := vCampos:vArgs[48]
    ::nValorCOFINS := vCampos:vArgs[49]
    ::nValorINSS := vCampos:vArgs[50]
    ::nValorIR := vCampos:vArgs[51]
    ::nValorCSLL := vCampos:vArgs[52]
    ::nOutrasRetencoes := vCampos:vArgs[53]
    ::nValorISS := vCampos:vArgs[54]
    ::cDiscriminacaoServicos := vCampos:vArgs[55]

Return Self

/*/{Protheus.doc} RegTrailerBuilder
Classe que utiliza o pattern Builder para construir um objeto do tipo RegTrailer consistente com as regras de negócio. 
Usando o pattern Builder podemos evitar um método construtor com muitos argumentos, centralizando as regras de criação de um objeto imutável 
no método build() e, assim garantindo que o objeto construído sempre será consistente. 
Além disso, é possível emular parâmetros nomeados ao utilizar os métodos que definem os valores do objeto em construção.
@type class
@version 12.1.2210
@author allef.souza
@since 27/03/2023
/*/
Class RegTrailerBuilder

    Data cIdRegistro as Character
    Data dDataEmissao as Date
    Data cCompetencia as Character
    Data cNumDocFiscal as Character
    Data cSerieDocFiscal as Character
    Data cModeloDocFiscal as Character
    Data cTipoPrestador as Character
    Data cCGCPrestador as Character
    Data cDocIdPrestadorEstrangeiro as Character
    Data cRazaoSocialPrestador as Character
    Data cCodMunicipioPrestador as Character
    Data cPrestadorOptanteSimples as Character
    Data cPrestadorMEI as Character
    Data cPrestadorEstabelecidoMunicipio as Character
    Data cCEPPrestador as Character
    Data cTipoLogradouroPrestador as Character
    Data cNomeLogradouroPrestador as Character
    Data cNumeroLogradouroPrestador as Character
    Data cComplementoEnderecoPrestador as Character
    Data cBairroPrestador as Character
    Data cUFPrestador as Character
    Data cPaisPrestador as Character
    Data cCidadePrestador as Character
    Data cCodServicoPrestado as Character
    Data cCNAE as Character
    Data cCodObra as Character
    Data cLocalPrestacaoServico as Character
    Data cCodMunicipioLocalPrestacaoServico as Character
    Data cUFPrestacaoServico as Character
    Data cMunicipioExteriorPrestacaoServico as Character
    Data cEstadoExteriorPrestacaoServico as Character
    Data cPaisPrestacaoServico as Character
    Data cLocalResultadoPrestacaoServico as Character
    Data cCodMunicipioResultadoPrestacaoServico as Character
    Data cUFResultadoPrestacaoServico as Character
    Data cMunicipioExteriorResultadoPrestacaoServico as Character
    Data cEstadoExteriorResultadoPrestacaoServico as Character
    Data cPaisResultadoPrestacaoServico as Character
    Data cMotivoNaoRetencao as Character
    Data cExigibilidadeISS as Character
    Data cTipoRecolhimentoImposto as Character
    Data nAliquotaISS as Numeric
    Data nValorServicoNF as Numeric
    Data nValorDeducoes as Numeric
    Data nDescontoIncondicionado as Numeric
    Data nDescontoCondicionado as Numeric
    Data nBaseCalculo as Numeric
    Data nValorPIS as Numeric
    Data nValorCOFINS as Numeric
    Data nValorINSS as Numeric
    Data nValorIR as Numeric
    Data nValorCSLL as Numeric
    Data nOutrasRetencoes as Numeric
    Data nValorISS as Numeric
    Data cDiscriminacaoServicos as Character

    Public Method new() Constructor
    Public Method setDataEmissao() as Object
    Public Method setCompetencia() as Object
    Public Method setNumDocFiscal() as Object
    Public Method setSerieDocFiscal() as Object
    Public Method setModeloDocFiscal() as Object
    Public Method setTipoPrestador() as Object
    Public Method setCGCPrestador() as Object
    Public Method setDocIdPrestadorEstrangeiro() as Object
    Public Method setRazaoSocialPrestador() as Object
    Public Method setCodMunicipioPrestador() as Object
    Public Method setPrestadorOptanteSimples() as Object
    Public Method setPrestadorMEI() as Object
    Public Method setPrestadorEstabelecidoMunicipio() as Object
    Public Method setCEPPrestador() as Object
    Public Method setTipoLogradouroPrestador() as Object
    Public Method setNomeLogradouroPrestador() as Object
    Public Method setNumeroLogradouroPrestador() as Object
    Public Method setComplementoEnderecoPrestador() as Object
    Public Method setBairroPrestador() as Object
    Public Method setUFPrestador() as Object
    Public Method setPaisPrestador() as Object
    Public Method setCidadePrestador() as Object
    Public Method setCodServicoPrestado() as Object
    Public Method setCNAE() as Object
    Public Method setCodObra() as Object
    Public Method setCodMunicipioLocalPrestacaoServico() as Object
    Public Method setUFPrestacaoServico() as Object
    Public Method setEstadoExteriorPrestacaoServico() as Object
    Public Method setEstadoExteriorResultadoPrestacaoServico() as Object
    Public Method setMotivoNaoRetencao() as Object
    Public Method setExigibilidadeISS() as Object
    Public Method setTipoRecolhimentoImposto() as Object
    Public Method setAliquotaISS() as Object
    Public Method setValorServicoNF() as Object
    Public Method setValorDeducoes() as Object
    Public Method setDescontoIncondicionado() as Object
    Public Method setDescontoCondicionado() as Object
    Public Method setBaseCalculo() as Object
    Public Method setValorPIS() as Object
    Public Method setValorCOFINS() as Object
    Public Method setValorINSS() as Object
    Public Method setValorIR() as Object
    Public Method setValorCSLL() as Object
    Public Method setOutrasRetencoes() as Object
    Public Method setValorISS() as Object
    Public Method setDiscriminacaoServicos() as Object
    Public Method build() as Object
EndClass

Method new() Class RegTrailerBuilder
    ::cIdRegistro := "T"
Return Self

Method setDataEmissao(dDataEmissao as Date) as Object Class RegTrailerBuilder
    ::dDataEmissao := dDataEmissao
Return Self
    
Method setCompetencia(cCompetencia as Character) as Object Class RegTrailerBuilder
    ::cCompetencia := cCompetencia
Return Self
    
Method setNumDocFiscal(cNumDocFiscal as Character) as Object Class RegTrailerBuilder
    ::cNumDocFiscal := cNumDocFiscal
Return Self

Method setSerieDocFiscal(cSerieDocFiscal as Character) as Object Class RegTrailerBuilder
    ::cSerieDocFiscal := cSerieDocFiscal
Return Self

Method setModeloDocFiscal(cModeloDocFiscal as Character, aMV_CRTMDNT as Array) as Object Class RegTrailerBuilder

    Local nX := 0 as Numeric    

    If ValType(aMV_CRTMDNT) == "A"
        If (nX := aScan(aMV_CRTMDNT, {|x| Alltrim(x[1]) == Alltrim(cModeloDocFiscal)})) != 0
            ::cModeloDocFiscal := aMV_CRTMDNT[nX][2]
        EndIf
    EndIf

    If Empty(::cModeloDocFiscal)
        Do Case
            Case Alltrim(cModeloDocFiscal) == 'NFS'
                ::cModeloDocFiscal := 'A'
            Case Alltrim(cModeloDocFiscal) $ 'ECF|ESAT'
                ::cModeloDocFiscal := 'F'
            Case Alltrim(cModeloDocFiscal) == 'RPS'
                ::cModeloDocFiscal := 'RP'
            Case Alltrim(cModeloDocFiscal) == 'OT'
                ::cModeloDocFiscal := 'OT'
            Case Alltrim(cModeloDocFiscal) == 'OM'
                ::cModeloDocFiscal := 'OM'
        EndCase
    EndIf
Return Self

Method setTipoPrestador(cTipoPrestador as Character) as Object Class RegTrailerBuilder
    ::cTipoPrestador := cTipoPrestador
Return Self

Method setCGCPrestador(cCGCPrestador as Character) as Object Class RegTrailerBuilder
    ::cCGCPrestador := cCGCPrestador
Return Self

Method setDocIdPrestadorEstrangeiro(cDocIdPrestadorEstrangeiro as Character) as Object Class RegTrailerBuilder
    ::cDocIdPrestadorEstrangeiro := cDocIdPrestadorEstrangeiro
Return Self

Method setRazaoSocialPrestador(cRazaoSocialPrestador as Character) as Object Class RegTrailerBuilder
    ::cRazaoSocialPrestador := cRazaoSocialPrestador
Return Self

Method setCodMunicipioPrestador(cCodMunicipioPrestador as Character) as Object Class RegTrailerBuilder
    ::cCodMunicipioPrestador := cCodMunicipioPrestador
Return Self

Method setPrestadorOptanteSimples(cPrestadorOptanteSimples as Character) as Object Class RegTrailerBuilder
    ::cPrestadorOptanteSimples := cPrestadorOptanteSimples
Return Self

Method setPrestadorMEI(cPrestadorMEI as Character) as Object Class RegTrailerBuilder
    ::cPrestadorMEI := cPrestadorMEI
Return Self

Method setPrestadorEstabelecidoMunicipio(cPrestadorEstabelecidoMunicipio as Character) as Object Class RegTrailerBuilder
    ::cPrestadorEstabelecidoMunicipio := cPrestadorEstabelecidoMunicipio
Return Self

Method setCEPPrestador(cCEPPrestador as Character) as Object Class RegTrailerBuilder
    ::cCEPPrestador := cCEPPrestador
Return Self

Method setTipoLogradouroPrestador(cTipoLogradouroPrestador as Character) as Object Class RegTrailerBuilder
    ::cTipoLogradouroPrestador := cTipoLogradouroPrestador
Return Self

Method setNomeLogradouroPrestador(cNomeLogradouroPrestador as Character) as Object Class RegTrailerBuilder
    ::cNomeLogradouroPrestador := cNomeLogradouroPrestador
Return Self

Method setNumeroLogradouroPrestador(cNumeroLogradouroPrestador as Character) as Object Class RegTrailerBuilder
    ::cNumeroLogradouroPrestador := cNumeroLogradouroPrestador
Return Self

Method setComplementoEnderecoPrestador(cComplementoEnderecoPrestador as Character) as Object Class RegTrailerBuilder
    ::cComplementoEnderecoPrestador := cComplementoEnderecoPrestador
Return Self

Method setBairroPrestador(cBairroPrestador as Character) as Object Class RegTrailerBuilder
    ::cBairroPrestador := cBairroPrestador
Return Self

Method setUFPrestador(cUFPrestador as Character) as Object Class RegTrailerBuilder
    ::cUFPrestador := cUFPrestador
Return Self

Method setPaisPrestador(cPaisPrestador as Character) as Object Class RegTrailerBuilder
    ::cPaisPrestador := cPaisPrestador
Return Self

Method setCidadePrestador(cCidadePrestador as Character) as Object Class RegTrailerBuilder
    ::cCidadePrestador := cCidadePrestador
Return Self

Method setCodServicoPrestado(cCodServicoPrestado as Character) as Object Class RegTrailerBuilder
    ::cCodServicoPrestado := cCodServicoPrestado
Return Self

Method setCNAE(cCNAE as Character) as Object Class RegTrailerBuilder
    ::cCNAE := cCNAE
Return Self

Method setCodObra(cCodObra as Character) as Object Class RegTrailerBuilder
    ::cCodObra := cCodObra
Return Self

Method setCodMunicipioLocalPrestacaoServico(cCodMunicipioLocalPrestacaoServico as Character) as Object Class RegTrailerBuilder
    ::cCodMunicipioLocalPrestacaoServico := cCodMunicipioLocalPrestacaoServico
Return Self

Method setUFPrestacaoServico(cUFPrestacaoServico as Character) as Object Class RegTrailerBuilder
    ::cUFPrestacaoServico := cUFPrestacaoServico
Return Self

Method setMotivoNaoRetencao(cMotivoNaoRetencao as Character) as Object Class RegTrailerBuilder
    ::cMotivoNaoRetencao := cMotivoNaoRetencao
Return Self

Method setExigibilidadeISS(cExigibilidadeISS as Character) as Object Class RegTrailerBuilder
    ::cExigibilidadeISS := cExigibilidadeISS
Return Self

Method setTipoRecolhimentoImposto(cTipoRecolhimentoImposto as Character) as Object Class RegTrailerBuilder
    ::cTipoRecolhimentoImposto := cTipoRecolhimentoImposto
Return Self

Method setAliquotaISS(nAliquotaISS as Numeric) as Object Class RegTrailerBuilder
    ::nAliquotaISS := nAliquotaISS
Return Self

Method setValorServicoNF(nValorServicoNF as Numeric) as Object Class RegTrailerBuilder
    ::nValorServicoNF := nValorServicoNF
Return Self

Method setValorDeducoes(nValorDeducoes as Numeric) as Object Class RegTrailerBuilder
    ::nValorDeducoes := nValorDeducoes
Return Self

Method setDescontoIncondicionado(nDescontoIncondicionado as Numeric) as Object Class RegTrailerBuilder
    ::nDescontoIncondicionado := nDescontoIncondicionado
Return Self

Method setDescontoCondicionado(nDescontoCondicionado as Numeric) as Object Class RegTrailerBuilder
    ::nDescontoCondicionado := nDescontoCondicionado
Return Self

Method setBaseCalculo(nBaseCalculo as Numeric) as Object Class RegTrailerBuilder
    ::nBaseCalculo := nBaseCalculo
Return Self

Method setValorPIS(nValorPIS as Numeric) as Object Class RegTrailerBuilder
    ::nValorPIS := nValorPIS
Return Self

Method setValorCOFINS(nValorCOFINS as Numeric) as Object Class RegTrailerBuilder
    ::nValorCOFINS := nValorCOFINS
Return Self

Method setValorINSS(nValorINSS as Numeric) as Object Class RegTrailerBuilder
    ::nValorINSS := nValorINSS
Return Self

Method setValorIR(nValorIR as Numeric) as Object Class RegTrailerBuilder
    ::nValorIR := nValorIR
Return Self

Method setValorCSLL(nValorCSLL as Numeric) as Object Class RegTrailerBuilder
    ::nValorCSLL := nValorCSLL
Return Self

Method setOutrasRetencoes(nOutrasRetencoes as Numeric) as Object Class RegTrailerBuilder
    ::nOutrasRetencoes := nOutrasRetencoes
Return Self

Method setValorISS(nValorISS as Numeric) as Object Class RegTrailerBuilder
    ::nValorISS := nValorISS
Return Self

Method setDiscriminacaoServicos(cDiscriminacaoServicos as Character) as Object Class RegTrailerBuilder
    ::cDiscriminacaoServicos := cDiscriminacaoServicos
Return Self

/*/{Protheus.doc} RegTrailerBuilder::build() as Object
Constrói e retorna um objeto do tipo RegTrailer conforme estabelecido pelas regras de negócio
@type method
@version 12.1.2210
@author allef.souza
@since 27/03/2023
@return object, retorna uma instância de backoffice.fiscal.arquivos.municipal.nfsesorocaba.domain.RegTrailer 
/*/
Method build() as Object Class RegTrailerBuilder

    Local aSX5Data as Array
    Local oRegTrailer as Object

    If ::cTipoPrestador == '2'

        If !((aSX5Data := FWGetSX5("12", ::cUFPrestador)) == Nil)
            ::cEstadoExteriorPrestacaoServico := aSX5Data[1][4]
            ::cEstadoExteriorResultadoPrestacaoServico := ::cEstadoExteriorPrestacaoServico
        EndIf

        ::cCodMunicipioPrestador := "9999999"
        ::cCodMunicipioLocalPrestacaoServico := ::cCodMunicipioPrestador 
        ::cCGCPrestador := "00000000000000"
        ::cLocalPrestacaoServico := "EXT"
        ::cUFPrestacaoServico := ""
        ::cMunicipioExteriorPrestacaoServico := ::cCidadePrestador
        ::cMunicipioExteriorResultadoPrestacaoServico := ::cMunicipioExteriorPrestacaoServico
        ::cPaisPrestacaoServico := ::cPaisPrestador
        ::cPaisResultadoPrestacaoServico := ::cPaisPrestacaoServico
        ::cLocalResultadoPrestacaoServico := ::cLocalPrestacaoServico

    Else

        ::cLocalPrestacaoServico := "LOC"
        ::cLocalResultadoPrestacaoServico := "BRA"
        ::cUFResultadoPrestacaoServico := ::cUFPrestacaoServico

    EndIf

    ::cCodMunicipioResultadoPrestacaoServico := ::cCodMunicipioLocalPrestacaoServico

    If Empty(::cTipoRecolhimentoImposto)
        If ::cExigibilidadeISS $ "3|5|6|7"
            ::cTipoRecolhimentoImposto := "NAP"
        Else
            ::cTipoRecolhimentoImposto := "RNF"
        EndIf
    EndIf

    oRegTrailer := RegTrailer():new(::cIdRegistro,;
                                    ::dDataEmissao,;
                                    ::cCompetencia,;
                                    ::cNumDocFiscal,;
                                    ::cSerieDocFiscal,;
                                    ::cModeloDocFiscal,;
                                    ::cTipoPrestador,;
                                    ::cCGCPrestador,;
                                    ::cDocIdPrestadorEstrangeiro,;
                                    ::cRazaoSocialPrestador,;
                                    ::cCodMunicipioPrestador,;
                                    ::cPrestadorOptanteSimples,;
                                    ::cPrestadorMEI,;
                                    ::cPrestadorEstabelecidoMunicipio,;
                                    ::cCEPPrestador,;
                                    ::cTipoLogradouroPrestador,;
                                    ::cNomeLogradouroPrestador,;
                                    ::cNumeroLogradouroPrestador,;
                                    ::cComplementoEnderecoPrestador,;
                                    ::cBairroPrestador,;
                                    ::cUFPrestador,;
                                    ::cPaisPrestador,;
                                    ::cCidadePrestador,;
                                    ::cCodServicoPrestado,;
                                    ::cCNAE,;
                                    ::cCodObra,;
                                    ::cLocalPrestacaoServico,;
                                    ::cCodMunicipioLocalPrestacaoServico,;
                                    ::cUFPrestacaoServico,;
                                    ::cMunicipioExteriorPrestacaoServico,;
                                    ::cEstadoExteriorPrestacaoServico,;
                                    ::cPaisPrestacaoServico,;
                                    ::cLocalResultadoPrestacaoServico,;
                                    ::cCodMunicipioResultadoPrestacaoServico,;
                                    ::cUFResultadoPrestacaoServico,;
                                    ::cMunicipioExteriorResultadoPrestacaoServico,;
                                    ::cEstadoExteriorResultadoPrestacaoServico,;
                                    ::cPaisResultadoPrestacaoServico,;
                                    ::cMotivoNaoRetencao,;
                                    ::cExigibilidadeISS,;
                                    ::cTipoRecolhimentoImposto,;
                                    ::nAliquotaISS,;
                                    ::nValorServicoNF,;
                                    ::nValorDeducoes,;
                                    ::nDescontoIncondicionado,;
                                    ::nDescontoCondicionado,;
                                    ::nBaseCalculo,;
                                    ::nValorPIS,;
                                    ::nValorCOFINS,;
                                    ::nValorINSS,;
                                    ::nValorIR,;
                                    ::nValorCSLL,;
                                    ::nOutrasRetencoes,;
                                    ::nValorISS,;
                                    ::cDiscriminacaoServicos)

Return oRegTrailer
