#include "protheus.ch"
#include "msobject.ch"

#include "totvs.framework.treports.integratedprovider.th"

namespace custom.contabilidade.rateios.integratedprovider


@totvsFrameworkTReportsIntegratedProvider(active=.T., team="SIGACTB", tables="CTJ", name="Rateioexterno", country="ALL", initialRelease="12.1.2310")

class CTJTReportsBusinessObject from totvs.framework.treports.integratedprovider.IntegratedProvider
	public method new() as object
	public method getDisplayName() as character
	public method getAreas() as array
	public method getData() as object
	public method getSchema() as object
endclass


method new()  as object class CTJTReportsBusinessObject
        _Super:new()
        self:setDescription("Rateios externos")
        //Tela de parametros do SmartView
        self:setPergunte("UNI34A72")
return self

method getDisplayName() as character class CTJTReportsBusinessObject
return "Rateios externos"

method getAreas() as array class CTJTReportsBusinessObject
return {"Contabilidade"}

//Metodo responsavel por retornar os dados do relatorio de acordo com
//o layout definido na especificacao funcional. Utiliza query customizada
//para juntar as tabelas CN9, CTJ, CNA, CNB, SA2, SB1 e SED.
method getData(nPage as numeric, oFilter as object) as object class CTJTReportsBusinessObject
    local cQuery as character
    local cAlias as character
    local jParams as json
    local cProduto  as character
    local cNatureza as character
    local cRateio   as character
    local cCentro   as character
    local cConta    as character
    local cContrato as character
    local cFilial   as character
    local cFornec   as character

    jParams  := oFilter:getParameters()
    cProduto  := jParams["MV_PAR01"][1]
    cNatureza := jParams["MV_PAR02"][1]
    cRateio   := jParams["MV_PAR03"][1]
    cCentro   := jParams["MV_PAR04"][1]
    cConta    := jParams["MV_PAR05"][1]
    cContrato := jParams["MV_PAR06"][1]
    cFilial   := jParams["MV_PAR07"][1]
    cFornec   := jParams["MV_PAR08"][1]

    cQuery := "SELECT CN9.CN9_FILIAL          FILIAL, "
    cQuery += "CN9.CN9_NUMERO         CONTRATO, "
    cQuery += "CN9.CN9_TPCTO          TPCTO, "
    cQuery += "CN9.CN9_REVISA         REVISAO, "
    cQuery += "CN9.CN9_DTREV          DTREV, "
    cQuery += "CN9.CN9_DTINIC         DTINIC, "
    cQuery += "CN9.CN9_DTFIM          DTFIM, "
    cQuery += "CTJ.CTJ_RATEIO        RATEIO, "
    cQuery += "CTJ.CTJ_DEBITO        DEBITO, "
    cQuery += "CTJ.CTJ_CCD           CCD, "
    cQuery += "CTJ.CTJ_SITCTA        SITCTA, "
    cQuery += "CTJ.CTJ_SITCC         SITCC, "
    cQuery += "CN9.CN9_SITUAC         SITUAC, "
    cQuery += "CNA.CNA_VLTOT         VLTOT, "
    cQuery += "CNA.CNA_SALDO         SALDO, "
    cQuery += "CNA.CNA_FORNEC        FORNEC, "
    cQuery += "SA2.A2_NOME           NOMEFOR, "
    cQuery += "CN9.CN9_NATURE        NATCTR, "
    cQuery += "CNA.CNA_NATURE        NATPLA, "
    cQuery += "CNB.CNB_PRODUT        PRODUTO, "
    cQuery += "SB1.B1_DESC           DESCPROD, "
    cQuery += "CNA.CNA_XCC           CCPLANI, "
    cQuery += "CNB.CNB_QUANT         QUANT, "
    cQuery += "CNB.CNB_VLUNIT        VLUNIT, "
    cQuery += "CNB.CNB_VLTOT         TOTITEM "
    cQuery += "FROM " + RetSqlName('CN9') + " CN9 "
    cQuery += "INNER JOIN " + RetSqlName('CTJ') + " CTJ ON " + FWJoinFilial('CTJ','CN9') + " AND CTJ.CTJ_NUMERO = CN9.CN9_NUMERO AND CTJ.CTJ_REVISA = CN9.CN9_REVISA AND CTJ.D_E_L_E_T_ = ' ' "
    cQuery += "INNER JOIN " + RetSqlName('CNA') + " CNA ON " + FWJoinFilial('CNA','CN9') + " AND CNA.CNA_NUMERO = CN9.CN9_NUMERO AND CNA.D_E_L_E_T_ = ' ' "
    cQuery += "INNER JOIN " + RetSqlName('CNB') + " CNB ON " + FWJoinFilial('CNB','CNA') + " AND CNB.CNB_NUMERO = CNA.CNA_NUMERO AND CNB.D_E_L_E_T_ = ' ' "
    cQuery += "LEFT JOIN " + RetSqlName('SA2') + " SA2 ON SA2.A2_COD = CNA.CNA_FORNEC AND SA2.D_E_L_E_T_ = ' ' "
    cQuery += "LEFT JOIN " + RetSqlName('SB1') + " SB1 ON SB1.B1_COD = CNB.CNB_PRODUT AND SB1.D_E_L_E_T_ = ' ' "
    cQuery += "LEFT JOIN " + RetSqlName('SED') + " SED ON SED.ED_CODIGO = CNA.CNA_NATURE AND SED.D_E_L_E_T_ = ' ' "
    cQuery += "WHERE CN9.D_E_L_E_T_ = ' '"

    if !Empty(cProduto)
        cQuery += " AND CNB.CNB_PRODUT = '" + cProduto + "'"
    endif
    if !Empty(cNatureza)
        cQuery += " AND CNA.CNA_NATURE = '" + cNatureza + "'"
    endif
    if !Empty(cRateio)
        cQuery += " AND CTJ.CTJ_RATEIO = '" + cRateio + "'"
    endif
    if !Empty(cCentro)
        cQuery += " AND CTJ.CTJ_CCD = '" + cCentro + "'"
    endif
    if !Empty(cConta)
        cQuery += " AND CTJ.CTJ_DEBITO = '" + cConta + "'"
    endif
    if !Empty(cContrato)
        cQuery += " AND CN9.CN9_NUMERO = '" + cContrato + "'"
    endif
    if !Empty(cFilial)
        cQuery += " AND CN9.CN9_FILIAL = '" + cFilial + "'"
    endif
    if !Empty(cFornec)
        cQuery += " AND CNA.CNA_FORNEC = '" + cFornec + "'"
    endif

    if oFilter:hasFilter()
        cQuery += " AND " + oFilter:getSQLExpression()
    endif

    cAlias := MPSysOpenQuery(cQuery)

    while !(cAlias)->(Eof())
        self:oData:appendData({"FILIAL":      (cAlias)->FILIAL, ;
                               "CONTRATO":   (cAlias)->CONTRATO, ;
                               "TPCTO":      (cAlias)->TPCTO, ;
                               "REVISAO":    (cAlias)->REVISAO, ;
                               "DTREV":      (cAlias)->DTREV, ;
                               "DTINIC":     (cAlias)->DTINIC, ;
                               "DTFIM":      (cAlias)->DTFIM, ;
                               "RATEIO":     (cAlias)->RATEIO, ;
                               "DEBITO":     (cAlias)->DEBITO, ;
                               "CCD":        (cAlias)->CCD, ;
                               "SITCTA":     (cAlias)->SITCTA, ;
                               "SITCC":      (cAlias)->SITCC, ;
                               "SITUAC":     (cAlias)->SITUAC, ;
                               "VLTOT":      (cAlias)->VLTOT, ;
                               "SALDO":      (cAlias)->SALDO, ;
                               "FORNEC":     (cAlias)->FORNEC, ;
                               "NOMEFOR":    (cAlias)->NOMEFOR, ;
                               "NATCTR":     (cAlias)->NATCTR, ;
                               "NATPLA":     (cAlias)->NATPLA, ;
                               "PRODUTO":    (cAlias)->PRODUTO, ;
                               "DESCPROD":   (cAlias)->DESCPROD, ;
                               "CCPLANI":    (cAlias)->CCPLANI, ;
                               "QUANT":      (cAlias)->QUANT, ;
                               "VLUNIT":     (cAlias)->VLUNIT, ;
                               "TOTITEM":    (cAlias)->TOTITEM})
        (cAlias)->(DbSkip())
    enddo

    self:setHasNext(!(cAlias)->(EoF()))
    (cAlias)->(DbCloseArea())

return self:oData


//Retorna o schema contendo todos os campos necessarios conforme especificacao
//do relatorio de rateios por contrato.
method getSchema() as object class CTJTReportsBusinessObject
    self:oSchema:aliasToSchema("CN9", {"CN9_FILIAL", "CN9_NUMERO", "CN9_TPCTO", "CN9_REVISA", "CN9_DTREV", "CN9_DTINIC", "CN9_DTFIM", "CN9_SITUAC", "CN9_NATURE"})
    self:oSchema:aliasToSchema("CTJ", {"CTJ_RATEIO", "CTJ_DEBITO", "CTJ_CCD", "CTJ_SITCTA", "CTJ_SITCC"})
    self:oSchema:aliasToSchema("CNA", {"CNA_VLTOT", "CNA_SALDO", "CNA_FORNEC", "CNA_NATURE", "CNA_XCC"})
    self:oSchema:aliasToSchema("CNB", {"CNB_PRODUT", "CNB_QUANT", "CNB_VLUNIT", "CNB_VLTOT"})
    self:oSchema:aliasToSchema("SA2", "A2_NOME")
    self:oSchema:aliasToSchema("SB1", "B1_DESC")
return self:oSchema
