#INCLUDE "TOTVS.CH"
#INCLUDE "ESTOQUEOBJ.CH"

namespace totvs.protheus.retail.rmi.api.estoqueobj

//-------------------------------------------------------------------
/*/{Protheus.doc} Classe EstoqueObj
    Classe para tratamento da API de Estoque do Varejo
/*/
//-------------------------------------------------------------------
Class EstoqueObj From LojRestObj20

	Public Method New()             as Object
    Public Method setFields()       as Variant
    Public Method getReturn()       as Character

    Protected Method Validation()   as Variant

    Private   Data aFiliais         as Array

EndClass

//-------------------------------------------------------------------
/*/{Protheus.doc} new
Método construtor da Classe

@param oWsRestObj - Objeto WSRESTFUL da API

@author  Rafael Tenorio da Costa
@since   16/07/2019
@version 1.0
/*/
//-------------------------------------------------------------------
Method New(oWsRestObj As Object, jParans as Json, cBody as Character) as Object Class EstoqueObj

    _Super:New(oWsRestObj, jParans, cBody)

    self:setSelect("SB1")
    self:cSelect    := "SELECT B1_COD FROM " + RetSqlName("SB1")
    self:cGroupBy   := "GROUP BY B1_COD"

Return self

//-------------------------------------------------------------------
/*/{Protheus.doc} setFields
Carrega os campos que serão retornados

@author  Rafael Tenorio da Costa
@since   16/07/2019
@version 1.0
/*/
//-------------------------------------------------------------------
Method setFields() as Variant Class EstoqueObj

                        //Tag - ID              Campo       Expressão que será executada para gerar o retorno   Tag que será utilizada para preencher o objeto de retorno   Tipo do Campo   Expressão de busca
    HmAdd(self:oFields, {"IDRETAGUARDAPRODUTO"	, "B1_COD"  , "B1_COD"		                                    , "idRetaguardaProduto"		                                , "C"           , ""}               , 1, 3)

Return Nil

//-------------------------------------------------------------------
/*/{Protheus.doc} Validation
Metodo para validações executado no momento do get
1
@author  Rafael Tenorio da Costa
@since   14/09/2022
@version 1.0
/*/
//-------------------------------------------------------------------
Method Validation(cOrigem as Character) as Variant Class EstoqueObj

    Local cErroProd := ""                   as Character
    Local cErroFil  := ""                   as Character
    Local nCont     := 0                    as Numeric
    Local nTamB1Cod := TamSx3("B1_COD")[1]  as Numeric
    Local cSql      := ""                   as Character

    _Super:Validation()

    If self:lSuccess

        If cOrigem == "GET"

            //Tags obrigatórias
            Do Case

                Case !self:jParans:hasProperty("idRetaguardaProduto") .Or. ValType(self:jParans["idRetaguardaProduto"]) <> "A" .Or. Len(self:jParans["idRetaguardaProduto"]) == 0
                    self:lSuccess   := .F.
                    self:cError     := I18n(STR0001, {"idRetaguardaProduto"} )  //"Ops! #1 não enviado(s) ou inválido(s)."

                Case self:jParans:hasProperty("idRetaguardaLoja") .And. ValType(self:jParans["idRetaguardaLoja"]) <> "A"
                    self:lSuccess   := .F.
                    self:cError     := I18n(STR0001, {"idRetaguardaLoja"} )     //"Ops! #1 não enviado(s) ou inválido(s)."
            End Case

            If self:lSuccess

                //Valida produtos
                For nCont:=1 to Len(self:jParans["idRetaguardaProduto"])

                    cSql := "SELECT B1_COD FROM " + RetSqlName("SB1") + " WHERE D_E_L_E_T_ = ' ' AND B1_COD = '" + PadR(self:jParans["idRetaguardaProduto"][nCont], nTamB1Cod) + "'"

                    If Empty(self:jParans["idRetaguardaProduto"][nCont]) .Or. Len( RmiXSql(cSql, "*", /*lCommit*/, /*aReplace*/) ) == 0
                        cErroProd += self:jParans["idRetaguardaProduto"][nCont] + ","
                    EndIf
                Next nCont

                If !self:jParans:hasProperty("idRetaguardaLoja") .Or. Len(self:jParans["idRetaguardaLoja"]) == 0

                    self:aFiliais := FwAllFilial(,,, .F.)
                Else

                    self:aFiliais := aClone( self:jParans["idRetaguardaLoja"] )

                    //Valida filiais
                    For nCont:=1 to Len(self:jParans["idRetaguardaLoja"])
                        If Empty(self:jParans["idRetaguardaLoja"][nCont]) .Or. !FwFilExist(/*cEmpAnt*/, self:jParans["idRetaguardaLoja"][nCont])
                            cErroFil += self:jParans["idRetaguardaLoja"][nCont] + ","
                        EndIf
                    Next nCont
                EndIf

                If !Empty(cErroProd)
                    cErroProd       := SubStr(cErroProd, 1, Len(cErroProd) - 1)
                    self:lSuccess   := .F.
                    self:cError     := I18n(STR0002, {cErroProd, "idRetaguardaProduto"} )           //"Ops! Produto(s) não localizado(s) [#1], verifique #2."
                EndIf

                If !Empty(cErroFil)
                    cErroFil        := SubStr(cErroFil, 1, Len(cErroFil) - 1)
                    self:lSuccess   := .F.
                    self:cError     += Chr(10) + I18n(STR0003, {cErroFil, "idRetaguardaLoja"} )     //"Ops! Filial(ais) não localizada(s) [#1], verifique #2."
                EndIf

                //Retira para não utilizar como filtro
                self:jParans:delName("idRetaguardaLoja")
            EndIf
        EndIf
    EndIf

Return Nil

//-------------------------------------------------------------------
/*/{Protheus.doc} GetReturn
Retorna json com resultado da consulta

@author  Rafael Tenorio da Costa
@since   16/07/2019
@version 1.0
/*/
//-------------------------------------------------------------------
Method getReturn() as Character Class EstoqueObj

    Local jRetorno  as Object 
    Local cRetorno  as Character
    Local nData     as Integer
    Local nFil      as Integer
    Local aDadosFil as Array

    jRetorno := JsonObject():New()
    jRetorno:FromJson( _Super:GetReturn() )

    If self:lSuccess

        For nData:=1 To Len(jRetorno["data"])

            jRetorno["data"][nData]["estoque"] := {}

            For nFil:=1 To Len(self:aFiliais)

                aAdd(jRetorno["data"][nData]["estoque"], JsonObject():New() )
                
                aDadosFil := FwSM0Util():GetSM0Data( /*cEmpAnt*/, self:aFiliais[nFil], {"M0_NOMECOM", "M0_CIDCOB", "M0_ENDCOB"} )

                jRetorno["data"][nData]["estoque"][nFil]["quantidade"] := RsSaldoPrd( jRetorno["data"][nData]["idRetaguardaProduto"], self:aFiliais[nFil] )

                jRetorno["data"][nData]["estoque"][nFil]["loja"] := JsonObject():New()
                jRetorno["data"][nData]["estoque"][nFil]["loja"]["idRetaguarda"]  := self:aFiliais[nFil]
                jRetorno["data"][nData]["estoque"][nFil]["loja"]["descricao"]     := AllTrim(aDadosFil[1][2])
                jRetorno["data"][nData]["estoque"][nFil]["loja"]["endereco"]      := AllTrim(aDadosFil[2][2]) + " - " + AllTrim(aDadosFil[3][2])
            Next nFil

        Next nData

    EndIf

    cRetorno := EncodeUtf8( jRetorno:toJson() )

    FwFreeArray(aDadosFil)
    FwFreeObj(jRetorno)

Return cRetorno