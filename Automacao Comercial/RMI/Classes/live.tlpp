#INCLUDE "TOTVS.CH"

namespace totvs.protheus.retail.rmi.classes.live

//-------------------------------------------------------------------
/*/{Protheus.doc} Classe Live
Classe de apoio as classe do Rmi com tratamentos para o Live

@type    class
@author  Rafael Tenorio da Costa
@since   27/04/23
@version 12.1.2310
/*/
//-------------------------------------------------------------------
Class Live

	Public Method New()             as Object
    Public Method getSatelite()     as Character    //Retorna o sistema satelite utilizado pelo processo
    Public Method getToken()        as Character    //Retorna o token utilizado pelo processo

EndClass

//-------------------------------------------------------------------
/*/{Protheus.doc} New
Metodo construtor da Classe

@type    method
@return  Objeto, Objeto da classe Live
@author  Rafael Tenorio da Costa
@since   27/04/23
@version 12.1.2310
/*/
//-------------------------------------------------------------------
Method New() as Object Class Live
Return self

//-------------------------------------------------------------------
/*/{Protheus.doc} getSatelite
Retorna o sistema satelite utilizado pelo processo

@type    method
@return  Caractere, Código do sistema satelite do processo
@author  Rafael Tenorio da Costa
@since   27/04/23
@version 12.1.2310
/*/
//-------------------------------------------------------------------
Method getSatelite(oRmi) as Character Class Live

    If oRmi:oConfProce:hasProperty("subsistemasatelite") .And. ValType(oRmi:oConfProce["subsistemasatelite"]) <> "U" .And. !Empty(oRmi:oConfProce["subsistemasatelite"])
        cSatelite := oRmi:oConfProce["subsistemasatelite"]
    Else
        cSatelite := oRmi:oConfAssin["sistemasatelite"]
    EndIf

Return cSatelite

//-------------------------------------------------------------------
/*/{Protheus.doc} getToken
Retorna o token utilizado pelo processo

@type    method
@return  Caractere, Código do token do processo
@author  Rafael Tenorio da Costa
@since   27/04/23
@version 12.1.2310
/*/
//-------------------------------------------------------------------
Method getToken(oRmi) as Character Class Live

    If oRmi:oConfProce:hasProperty("subtoken") .And. ValType(oRmi:oConfProce["subtoken"]) <> "U" .And. !Empty(oRmi:oConfProce["subtoken"])
        cToken := oRmi:oConfProce["subtoken"]
    Else
        cToken := oRmi:cToken
    EndIf

Return cToken