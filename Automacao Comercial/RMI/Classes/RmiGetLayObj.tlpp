#INCLUDE "PROTHEUS.CH"
#include "msobject.ch"


//-------------------------------------------------------------------
/*/{Protheus.doc} Classe RmiEnviaObj
Classe responsável pelo envio das distribuições

/*/
//-------------------------------------------------------------------
Class RmiGetLayObj

    Public  Data cList     As Character       //Objeto que armazena o resultado do get com a lista dos arquivos
    Public  Data lSucesso  As Logical   //controle de sucesso da operação
    Public  Data cRetorno  As Character    //Mensagem de retorno
    Public  Data oGit      As Object       //Objeto de tratamento para as consultas do GitHub
    Public  Data aArquivos as Array
    
    Private Data cURL      As Character     //URL de consulta dos arquivos do repositório
    

    Public Method New(cURLGit As Character) As Object           //Método construtor da Classe
    Public Method GetArq(cPath As Character)       //Realiza Get da lista dos arquivos no repositório GitHub
    Public Method BuscaConteudoDoArquivo()
    Public Method BuscaArquivosDisponiveis()

EndClass

//-------------------------------------------------------------------
/*/{Protheus.doc} New
Método construtor da Classe

@author  Evandro Pattaro
@version 1.0
/*/
//-------------------------------------------------------------------
Method New(cURLGit As Character) As Object Class RmiGetLayObj
    self:cURL       := strtran(Alltrim(cURLGit),Space(1),"%20")
    Self:aArquivos := {} 
Return self

//-------------------------------------------------------------------
/*/{Protheus.doc} GetArq
Realiza Get da lista dos arquivos no repositório GitHub

@author  Evandro Pattaro
@version 1.0
/*/
//-------------------------------------------------------------------
Method GetArq(cPath As Character) Class RmiGetLayObj
    Local aHeadStr := {}
    
    Default cPath := ""

    self:cList := ""

    If self:oGit == Nil
        self:oGit := FWRest():New("")
    EndIf
    
    self:oGit:SetPath( self:cURL+"/"+cPath )
    
    Aadd(aHeadStr, "Content-Type: application/json")
    Aadd(aHeadStr, "Accept: application/vnd.github+json")
    Aadd(aHeadStr, "User-Agent: protheus-smart-hub-layouts")

        If self:oGit:Get( aHeadStr )
            self:cList :=  DecodeUTF8(self:oGit:GetResult())
            self:lSucesso := .T.
        Else
            self:lSucesso := .F.
            self:cRetorno := self:oGit:GetLastError() + " - [" + self:cURL+"/"+cPath + "]"
            LjGrvLog(" RmiGetLayObj ", "self:oGit:Get() = .F. => ",{self:cRetorno})    
        EndIf

Return 

//-------------------------------------------------------------------
/*/{Protheus.doc} BuscaConteudoDoArquivo
Realiza Get do json do arquivos listados anteriormente

@author  Lucas Novais (lnovais@)
@version 1.0
/*/
//-------------------------------------------------------------------
Method BuscaConteudoDoArquivo() Class RmiGetLayObj
    Local nArquivo := 1 as Numeric
    
    For nArquivo := 1 To Len(Self:aArquivos)
        Self:aArquivos[nArquivo][3] := DecodeUTF8(HttpGet(Self:aArquivos[nArquivo][2]))
    Next

Return
//-------------------------------------------------------------------
/*/{Protheus.doc} BuscaArquivosDisponiveis
Realiza Get dos arquivos que serão baixados

@author  Lucas Novais (lnovais@)
@version 1.0
/*/
//-------------------------------------------------------------------

Method BuscaArquivosDisponiveis() Class RmiGetLayObj 
    Local jArquivos := JsonObject():New() as Json
    Local nArquivo := 1 as Numeric

    Self:GetArq() //Busca arquivos do diretorio

    If self:lSucesso

        jArquivos:FromJson(self:cList)

        For nArquivo := 1 To Len(jArquivos)
            Aadd(Self:aArquivos,{UPPER(SubStr(jArquivos[nArquivo]["name"],1,at(".",jArquivos[nArquivo]["name"])-1)),jArquivos[nArquivo]["download_url"],""})    
        Next nArquivo
        
        Self:BuscaConteudoDoArquivo()

    EndIf

Return 
