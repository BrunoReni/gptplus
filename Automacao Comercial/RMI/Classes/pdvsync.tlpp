#INCLUDE "TOTVS.CH"
#INCLUDE "PDVSYNC.CH"

namespace totvs.protheus.retail.rmi.classes.pdvsync

//-------------------------------------------------------------------
/*/{Protheus.doc} Classe PdvSync
    Classe de apoio as classe do Rmi com tratamento para o PdvSync
/*/
//-------------------------------------------------------------------
Class PdvSync

	Public Method New()         as Object
    Public Method Token()       as Array
    Public Method getHeader()   as Array

    // Private Data oRmi           as Object
    Private Data oRac           as Object
    Private Data cToken         as Character
    Private Data tenent         as Character
    Private Data user           as Character
    Private Data password       as Character
    Private Data clientId       as Character
    Private Data clientSecret   as Character
    Private Data environment    as Numeric


EndClass

//-------------------------------------------------------------------
/*/{Protheus.doc} New
Metodo construtor da Classe

@author  Rafael Tenorio da Costa
@version 12.1.2310
/*/
//-------------------------------------------------------------------
Method New(tenent as Character, user as Character, Password as Character, ClientId as Character,;
            ClientSecret as Character, Environment as Numeric) as Object Class PdvSync

    Default tenent       := ""
    Default user         := ""
    Default password     := ""
    Default clientId     := ""
    Default clientSecret := ""
    Default environment  := 1

    self:oRac         := Nil
    self:cToken       := ""
    self:tenent       := tenent      
    self:user         := user        
    self:password     := password    
    self:clientId     := clientId    
    self:clientSecret := clientSecret
    self:environment  := environment 

Return self

//-------------------------------------------------------------------
/*/{Protheus.doc} getToken
Metodo com as regras para obter um token

@author  Rafael Tenorio da Costa
@version 12.1.2310
/*/
//-------------------------------------------------------------------
Method Token() as Array Class PdvSync
    
    Local mensagem as Character
    Local retorno  as Logical

    If !Empty(self:tenent) .and. !Empty(self:user) .and. !Empty(self:password) .and. !Empty(self:clientId) .and. !Empty(self:clientSecret) .and. self:environment > 0 

        retorno := .T.

        If self:oRac == Nil
            self:oRac := LjRac():New(self:tenent, self:user, self:password, self:clientId, self:clientSecret, Str(self:environment,1,0))
        EndIf

        self:cToken := self:oRac:GetToken()

        If !self:oRac:oMessageError:GetStatus() .Or. Empty(self:cToken)
            retorno  := .F.
            mensagem := STR0001 + self:oRac:oMessageError:GetMessage()  //"Ops! Não foi possível efetuar a autenticação, verifique as configurações do assinante: "
        EndIf
    else
        retorno     := .F.
        mensagem    := STR0002                                          //"Ops! Não foram encontrados os dados para autenticação, verifique as configurações do assinante!"
    EndIf


Return {retorno,mensagem}

//-------------------------------------------------------------------
/*/{Protheus.doc} getHeader
Retorna o cabeçalho para efetuar as comunicações com o PdvSync

@author  Rafael Tenorio da Costa
@version 12.1.2310
/*/
//-------------------------------------------------------------------
Method getHeader() as Array Class PdvSync

    Local aHeader := {}   as Array

    aAdd( aHeader, "Content-Type:application/json"          )
    aAdd( aHeader, "Authorization: Bearer " + self:cToken   )

Return aHeader
