<%
// ######################################################################################
// Projeto: DATA WAREHOUSE
// Modulo : Actions
// Fonte  : dwSched() - Permite a manutenção de importação de agendamento
// ---------+-------------------+--------------------------------------------------------
// Data     | Autor             | Descricao
// ---------+-------------------+--------------------------------------------------------
// 21.08.06 | 0548-Alan Candido | Versão 3
// --------------------------------------------------------------------------------------

#include "dwincs.ch"
#include "DWDimManutConst.ch"
#include "DWCubManutConst.ch"
#include "dwSched.ch"

local nID, nID_DSN, cObj, nIDObj
local oSXM := InitTable(TAB_SXM)
local oDSN := InitTable(TAB_DSN)
local oTabObj, aFields := {}
local aButtons := {}, aOperButtons := {}
local cTitle := "", lOperSubmit := .f.
local cAgTipo, cXM_Tipo, lXM_Ativo, dXM_DtIni, cXM_HrIni, dXM_DtFim
local cXM_HrFim, cXM_Interv, cXM_SemanaExt, cXM_MensalExt, cXM_ProxExec, cXM_TaskCode

if !(dwIsEmpty(httpGet->source, "") == "")
  dwSetProp("id_dsn", dwVal(httpGet->id))
else
	nID  := dwVal(httpGet->id)
endif

if isNull(HttpGet->id_dsn)
	nID_DSN := dwGetProp("id_dsn")
else
	nID_DSN := dwVal(HttpGet->id_dsn)
	dwSetProp("id_dsn", nID_DSN)
endif
        
if oDSN:seek(1, { nID_DSN })
	cObj := oDSN:value("tipo")
 	nIDObj := oDSN:value("id_table")
	if cObj == OBJ_USER //usuário
  	cTitle := STR0019 //###"Importação de usuário do Protheus"
	elseif cObj == OBJ_DIMENSION //dimensão
		oTabObj := InitTable(TAB_DIMENSAO) 
		if oTabObj:seek(1, { nIDObj })
	  	cTitle := STR0001 + " [ " + oTabObj:value("nome") + "-" + oTabObj:value("descricao") + " ]" //###"Dimensão"
		else
			DWRaise(ERR_002, SOL_000, oTabObj:Msg(.t.))
		endif
	else
		oTabObj := InitTable(TAB_CUBESLIST) 
		if oTabObj:seek(1, { nIDObj })
	  	cTitle := STR0002 + " [ " + oTabObj:value("nome") + "-" + oTabObj:value("descricao") + " ]" //###"Cubo"
		else
			DWRaise(ERR_002, SOL_000, oTabObj:Msg(.t.))
		endif
	endif
else
	DWRaise(ERR_002, SOL_000, oDSN:Msg(.t.))
endif

if HttpGet->Action == AC_EDT_SCHED
	HttpGet->Oper := DwVal(HttpGet->Oper)
	if HttpGet->Oper == OP_SUBMIT
		lOperSubmit := .t.
		aValues := oSXM:fromPost(HttpPost->APost)                               
		if aValues[8][2] == "00:00:00" .OR. aValues[8][2] == "00:00"
			aValues[7][2] := aValues[5][2]
		endif
		if aValues[6][2] < aValues[4][2]
			aValues[6][2] := aValues[4][2]
		endif                                 
	 //	if aValues[6][2] == aValues[4][2]
	//		aValues[8][2] := "00:00"
	 //	endif
		nID := dwVal(HttpPost->edID)
		if HttpSession->subOper == OP_REC_EDIT .and. oSXM:seek(1, { nID }) 
			lOk := oSXM:update(aValues)
		elseif HttpSession->subOper == OP_REC_DEL .and. oSXM:seek(1, { nID }) 
			lOk := oSXM:delete()                     
		else
			aAdd(aValues, { "id_dsn", nID_DSN } )
			if (lOk := oSXM:append(aValues))
				nID := oSXM:value("id")
			endif
		endif
		if !lOk
			DWRaise(ERR_002, SOL_000, oSXM:Msg(.t.))
		endif
	else                           
		HttpSession->subOper := HttpGet->Oper
	endif          

	makeHidden(aFields, 'edID', nID)   

	if oSXM:seek(1, { dwVal(nID) }) 
	  cAgTipo := oSXM:value("agtipo")
		cXM_Tipo := oSXM:value("xm_tipo")
		lXM_Ativo := oSXM:value("xm_ativo")
		dXM_DtIni := oSXM:value("xm_dtIni")
		cXM_HrIni := oSXM:value("xm_hrini")
		dXM_DtFim := oSXM:value("xm_dtfim")
		cXM_HrFim := oSXM:value("xm_hrfim")
		cXM_Interv := oSXM:value("xm_interv")
    cXM_SemanaExt := oSXM:value("xm_semanaext")
    cXM_MensalExt := oSXM:value("xm_mensalext")
    cXM_ProxExec := oSXM:value("xm_proxexec")
    cXM_TaskCode := oSXM:value("xm_taskcode")
  else
	  cAgTipo := AG_IMP
		cXM_Tipo := ""
		lXM_Ativo := .t.
		dXM_DtIni := date()
		cXM_HrIni := "00:00"
		dXM_DtFim := ctod("  /  /  ")
		cXM_HrFim := "00:00"
		cXM_Interv := "00:00"
    cXM_SemanaExt := ""
    cXM_ProxExec := ""
    cXM_TaskCode := ""
	endif

  makeHidden(aFields, "edAgTipo", cAgTipo)   
  	
	makeCombo(aFields, "edXM_TIPO", STR0003, .T., dwComboOptions(PERIODICIDADE_SCHD),, cXM_Tipo) //###"Periodicidade"
	if !lOperSubmit
	  evtField(aFields, "edXM_TIPO", "onchange",,.t.)
	endif
	makeField(aFields, "edXM_ATIVO", STR0004, , "L", , , , lXM_Ativo) //###"Ativo"
	makeDateField(aFields, "edXM_DTINI", STR0005, , .t., , dXM_DtIni) //###"Data Inicio"
	makeField(aFields, "edXM_HRINI", STR0006, , "H", 5, , , cXM_HrIni) //###"Hora Inicio"
	makeDateField(aFields, "edXM_DTFIM", STR0007, , .t., , dXM_DtFim) //###"Data Término"
	makeField(aFields, "edXM_HRFIM", STR0008, , "H", 5, , , cXM_HrFim) //###"Hora Término"
	makeField(aFields, "edXM_INTERV", STR0009, , "H", 5, , , cXM_Interv) //###"Intervalo"
  makeDotField(aFields, "edXM_SEMANAEXT", STR0010, .f., "C", 32, 0,, cXM_SemanaExt) //###"Dias da Semana"
  makeDotField(aFields, "edXM_MENSALEXT", STR0011, .f., "C", 32, 0,, cXM_MensalExt) //###"Dias do Mês"
  makeShow(aFields, "edXM_PROXEXEC", STR0012, cXM_ProxExec) //###"Próx. Execução"
  makeShow(aFields, "edXM_TASKCODE", STR0013, cXM_TaskCode) //###"Cód. tarefa"
%>
	<%=tagJS()%>	
		function edXM_TIPO_onchange(oSender)
		{                                                
		  var lSemana, lMensal;

			if (oSender.value == 1) //diário
			{
				lSemana = true;
				lMensal = true;

			} else if (oSender.value == 2) //semanal
			{
				lSemana = false;
				lMensal = true;
			} else if (oSender.value == 3) //mensal
			{
				lSemana = true;
				lMensal = false;
			}
			getObject("dotedXM_SEMANAEXT").disabled = lSemana;
			getObject("dotedXM_MENSALEXT").disabled = lMensal;
		}
	  </script>
	<%=buildForm('frmSched', STR0014 + " " + "<small>" + cTitle + "</small>", HttpGet->Action, OP_SUBMIT, aButtons, aFields)%><%=/*###"Agendamento"*/%>
	<%if lOperSubmit%>
		<%=buildAutoClose()%>
	<%endif%>
	
	<%=tagJS()%>
	function edXM_SEMANAEXT_dot(oSender)
	{        
		showDaysOfWeekTable("edXM_SEMANAEXT")
	}

	function edXM_MENSALEXT_dot(oSender)
	{
		showDaysOfMonthTable("edXM_MENSALEXT")
	}    	      
      

	function frmSched_valid(oSender)
	{
		var lRet = false;
		
		if (oSender.edXM_TIPO.value == 1) //Diario
			{
				oSender.edXM_SEMANAEXT.value = '';
				oSender.edXM_MENSALEXT.value = '';
				lRet = true;
			}
		else if (oSender.edXM_TIPO.value == 2) //semanal
			{
				if (oSender.edXM_SEMANAEXT.value.length == 0)
				{
				   	alert(<%="'" + STR0020 + "'"%>);
				}
				else
				{
					oSender.edXM_MENSALEXT.value = '';
					lRet = true;
				}
			}
		else if (oSender.edXM_TIPO.value == 3) //mensal
			{
				if (oSender.edXM_MENSALEXT.value.length == 0)
				{
				  	alert(<%="'" + STR0021 + "'"%>);
				}
				else
				{
					oSender.edXM_SEMANAEXT.value = '';
					lRet = true;
				}
			} 
	            		
		return lRet;      
		
	}
		
	</script>
<%else
	makeStepsToolbar(aButtons, BT_JAVA_SCRIPT, STR0015, STR0016, "bt_ocioso.gif", "doClose()", "left") //###"fechar"###"Retorna para a lista de fontes de dados"
	aOperButtons := {}
	//makeOperAct(aOperButtons, STR0003, "ic_ds_par.gif", AC_DSN_DIM_PARAM, , TARGET_75_WINDOW) //"Parâmetros"

	// verifica privilégio para dar manutenção (somente administrador)
%>
<%=buildBrowse(STR0014 + " <small>" + cTitle + "</small>", .t., oSXM:Tablename(), , , ,{ |aaData| prepRow(aaData, oSXM)} , { "AGTIPO = " + dwStr(AG_IMP) + " and ID_DSN =" + dwStr(nID_DSN) }, aButtons, , AC_EDT_SCHED, AC_EDT_SCHED)%><%=/*###"Agendamento"*/%>
<%
endif

return __Response

static function prepRow(aaData, aoSXM)
	local aPerio := dwComboOptions(PERIODICIDADE_SCHD)
	local nPos, cAux:="", oTempDsn, oTempDF, oTempDW

	if !aoSXM:isOpen()
		aoSXM:Open()
	endif
	
	aoSXM:seek(1, { aaData[1] })
	oTempDsn := initTable(TAB_DSN)
	if oTempDsn:seek(1, {aoSXM:value("id_dsn")} )
		if oTempDsn:value("TIPO") == "D"
		     oTempDF := initTable(TAB_DIMENSAO)
		else
			oTempDF := initTable(TAB_CUBESLIST)
		endif
	    if oTempDF:seek(1, { oTempDsn:value("ID_TABLE") } )    
	    	oTempDW := initTable(TAB_DW)
	    	if oTempDW:seek(1, { oTempDF:value("ID_DW") } )
				cAux := dwStr(aoSXM:value("dsn") + " - " + oTempDW:value("nome"))		     		     
			else
				cAux := dwStr(aoSXM:value("dsn") + " - ...")		     			
			endif
		else
			cAux := dwStr(aoSXM:value("dsn") + " - ...")
		endif
	endif

	aaData[2] := "<span style='float:left'>" + substr(cAux, at(":", cAux)+1) + "</span>"
	
	if aaData[3] == AG_IMP .or. aaData[3] == AG_DSN
		aaData[3] := STR0017 + " " + substr(cAux, 1, at(":", cAux)-1) //###"Importação:"
	else
		aaData[3] := STR0018 //###"Exportação: Consulta"
	endif           

	aaData[3] := "<span style='float:left'>" + aaData[3]+"</span>"

	cAux := aoSXM:value("XM_PROXEXEC")
	if left(cAux, 2) == "**"
		cAux := ""
	else
		cAux := " <small>(" + cAux + ")</small>"
	endif
	aaData[4] := dwStr(aaData[4])		
	nPos := ascan(aPerio, { |x| x[2] == aaData[4]})
	aaData[4] := "<span style='float:left'>"+aPerio[nPos,1]	+ cAux + "</span>"
		
return .t.
%>

