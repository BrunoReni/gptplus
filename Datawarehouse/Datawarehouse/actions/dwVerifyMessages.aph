<%
// ######################################################################################
// Projeto: DATA WAREHOUSE
// Modulo : Actions
// Fonte  : dwVerifyMessages - Verfica as mensagens do usuário logado
// ---------+-------------------+--------------------------------------------------------
// Data     | Autor             | Descricao
// ---------+-------------------+--------------------------------------------------------
// 02.11.05 |2481-Paulo R Vieira| Versão 3
// --------------------------------------------------------------------------------------

#include "dwincs.ch"
#include "dwVerifyMessages.ch"

Local oMsgsUser	:= InitTable(TAB_MSG_USER)
Local aFields	:= {}
Local aDipsData := {}
Local aMsgReadIt
Local nInd, lHasNewMsgs := .F., aButtons, cTypeOper := OP_SUBMIT
Local lCheckPass
local oQuery

makeTitle(aFields, STR0001) //"Mensagem"
	
if DwVal(HttpGet->Oper) == OP_SUBMIT
	if valType(HttpPost->cbLida) == "C"
		aMsgReadIt := DwToken(HttpPost->cbLida, ",")
		for nInd := 1 to len(aMsgReadIt)
			if oMsgsUser:Seek(1, { aMsgReadIt[nInd] })	
				oMsgsUser:Update({ { "lida", .T. }, { "dt_leitura", Date() }, { "hr_leitura", Time() } } )
			endif
		next
	endif
endif
	
// itera pelos registros de relacionamento de id de usuários e id de mensagens

oQuery := initQuery(SEL_MSG_LER)
oQuery:params(1, oUserDW:UserId())
oQuery:params(2, date())
oQuery:params(3, date())
oQuery:Open()

while !oQuery:EoF()
  if !empty(oQuery:value("dt_pub_ini")) .and. oQuery:value("dt_pub_ini") == date() ;
  			.and. !empty(oQuery:value("hr_pub_ini")) .and. oQuery:value("hr_pub_ini") > Time() // Horário de Publicação Inicial no Futuro
		lCheckPass := .F.
  elseif !empty(oQuery:value("dt_pub_fin")) .and. oQuery:value("dt_pub_fin") == date() ;
  			.and. !empty(oQuery:value("hr_pub_fin")) .and. (time() > oQuery:value("hr_pub_fin")) // Horário de Publicação Final no Passado
		lCheckPass := .F.
  else
		lCheckPass := .T.
  endif
		
  if lCheckPass
    lHasNewMsgs := .T.
		aAdd(aDipsData, { oQuery:value("data_incl"), oQuery:value("mensagem"), makeHCheckField(NIL, "cbLida", "", .F., .T., , oQuery:value("id")) })
  endif
			
  oQuery:_Next()

enddo

oQuery:close()

if HttpGet->Action == AC_VERIFY_MESSAGE
	if !lHasNewMsgs
		<%=buildAutoClose(.f., STR0002, , 3500)%> 
		//"Não existem novas mensagens para serem visualizadas"
	endif
endif

if HttpGet->Action == AC_VERIFY_MESSAGE
    makeText(aFields, displayData(aDipsData, 3, { STR0003, STR0001, makeHCheckField(NIL, "cbLidaNode", STR0004, .F., .F.) },,{ 0.10, , 0.10})) //"Data"###"Mensagem"###"Lida"
%>	
<%= buildForm("#frmMessages", STR0001, AC_VERIFY_MESSAGE, cTypeOper, aButtons, aFields, .T., , , , , , 'width:100%') %> <% /*'Dimensões '*/%><%= /*"Mensagem"*/ %>
<% elseif lHasNewMsgs/* .and. !(HttpGet->Action == AC_VERIFY_MESSAGE)*/ %>
	<%=tagJS()%>
		doLoad(<%= makeAction(AC_VERIFY_MESSAGE) %>, "_window", null, "DWWindMsgs", 0.7,0.7);
	</script>
<% endif %>