<%
// ######################################################################################
// Projeto: DATA WAREHOUSE
// Modulo : Actions
// Fonte  : dwQryExport - Permite configuras as opções de exportação
// ---------+-------------------+--------------------------------------------------------
// Data     | Autor             | Descricao
// ---------+-------------------+--------------------------------------------------------
// 01.06.01 | 0548-Alan Candido |
// 09.02.06 | 0548-Alan Candido | Versão 3
// 15.12.08 | 0548-Alan Candido | FNC 09025/2008 (8.11) e 09034/2008 (10)
//          |                   | Adequação de geração de máscara em campos numéricos e datas, 
//          |                   | para respeitar o formato conforme idioma 
//          |                   | (chave RegionalLanguage na sessão do ambiente).
// --------------------------------------------------------------------------------------

#include "dwincs.ch"
#include "dwQryxport.ch"

local nTipo 		:= dwval(HTTPGET->Tipo)
local nID 			:= dwval(HTTPGET->Id)
local oExport 		:= InitTable(TAB_EXPORT)
local aFields 		:= {}, aButtons :={}, nInd
local aFormatos 	:= dwComboOptions(FILE_TYPES, , .T.)
local lExport 		:= .t., aValues
local cTitle 		:= ""
local cChartFile 	:= "chart"+dwstr(oUserDW:LoginName())+dwstr(nID)
local oConsulta
local lOrigJava 	:= upper(isNull(HttpGet->origem, isNull(HttpPost->origem, ""))) == "JAVA"
local cBase64 		:= isNull(HttpPost->cbase64, isNull(HttpGet->cbase64, ""))
local cNameSessXport := "EXPORT" + DwStr(nTipo) + DwStr(HttpSession->SesssionID)

// verifica se está vindo do java GRáfico
if nTipo == EX_GRAF
	if lOrigJava
		if !empty(cBase64)
			DwSetProp(cNameSessXport, cBase64, "h_dwQryXport.aph")
			return
		else
			%>
			<%= tagJS() %>
				doLoad(<%= strTran(makeAction(AC_QUERY_CFG_EXP, {{"id", nID}, {"type", HttpGet->type}, {"tipo", nTipo}}), "&amp;", "&") %>, "_blank", null, null, <%= TARGET_90_WINDOW %>, <%= TARGET_90_WINDOW %>);
				window.close();
			</script>
		<% endif
	elseif !(isNull(DwGetProp(cNameSessXport, "h_dwQryXport.aph"), "") == "")
		cBase64 := DwGetProp(cNameSessXport, "h_dwQryXport.aph")
		DwSetProp(cNameSessXport, nil, "h_dwQryXport.aph")
	endif
endif                                      

if nTipo == EX_CON
  cTitle := STR0012  /*"Exportação de consultas"*/
elseif nTipo == EX_DIM
  cTitle := STR0014 /*"Exportação de dimensões"*/
elseif nTipo == EX_CUBE
  cTitle := STR0015 /*"Exportação de cubos"*/
else  
  cTitle := STR0016 /*"Exportação de gráficos"*/
endif

if nTipo != EX_GRAF
	// retira a opção de exportação de jpg para tabela
	nInd := aScan(aFormatos, { |x| x[FT_EXT] == ".jpg" })
	if nInd > 0
		aFormatos[nInd] := NIL
		aFormatos := packArray(aFormatos)
	endif
endif

aEval(aFormatos, { |x,i| aFormatos[i] := { x[FT_DESC] + "(" + x[FT_EXT] + ")", x[FT_EXP_CODE] } })

if (nID == 0)
	nTipo := dwGetProp("tipo", "h_dwQryXport.aph")
	nID := dwGetProp("idtipo", "h_dwQryXport.aph")
endif         

if !oExport:Seek(2, { nTipo, nID })
	oExport:Append({{"tipo", nTipo}, {"idtipo", nID}, {"FORMATO" , dwstr(iif(nTipo == EX_GRAF,FT_GRAPH_JPEG, FT_TXT))}})
	lExport := .f.
endif

dwSetProp("tipo", nTipo, "h_dwQryXport.aph")
dwSetProp("idtipo", nID, "h_dwQryXport.aph")

if dwVal(HttpGet->Oper) == OP_SUBMIT
	aValues := oExport:FromPost(HttpPost->APost)
	for nInd := 1 to len(aValues)
		if aValues[nInd,1] == "HIDETOTALS" .or. aValues[nInd,1] == "HIDEEQUALS"
			aValues[nInd,2] := !aValues[nInd,2]
		endif
	next		
	if !oExport:Update(aValues)
		DWRaise(ERR_002, SOL_000, oExport:Msg(.t.))
	endif
endif

if nTipo != EX_GRAF  
	/*Monta os campos da tela de exportação da Consulta/Tabela*/

	makeCombo(aFields, "edFormato", STR0001, .T., aFormatos,, oExport:value("formato")) //"Formato"
	makeHidden(aFields, "edMzp", .f.)
	makeField(aFields, "edSeparator", STR0003, .F., 'C', 4, 0,, oExport:value("separator")) //"Separador de campo"
	makeCheckField(aFields, "edShowZero", STR0004,,, oExport:value("showZero")) //"Preencher valores BRANCO com 0"
	if oExport:value("tipo") == EX_CON
		makeCheckField(aFields, "edHideTotals", STR0005,,, !oExport:value("hideTotals")) //"Incluir totais"
		makeCheckField(aFields, "edHideEquals", STR0006,,, !oExport:value("hideEquals")) //"Repetir linhas"
	endif
	makeCheckField(aFields, "edShowheader", STR0007,,, oExport:value("showheader")) //"Apresentar cabeçalhos"
	If oExport:value("tipo") == EX_CON
		makeCheckField(aFields, "edShowFltrng", STR0021,,, oExport:value("showFltrng")) //"Apresentar no cabeçalho as Expressões Aplicadas"
	EndIf
	makeCheckField(aFields, "edShowFormat", STR0017,,, oExport:value("showformat")) //"Formatar Indicadores"
	makeCheckField(aFields, "edExpAlert"  , STR0018,,, oExport:value("expAlert")) //"Exportar 'Alertas'"
	makeCheckField(aFields, "edPercIsInd" , STR0022,,, oExport:value("percIsInd")) //"Percentual como indice (50%=0,5)"
else 
	/*Monta os campos da tela de exportação da Consulta/Gráfico*/

	if !empty(oExport:value("arquivo"))
		cChartFile := oExport:value("arquivo")		
	endif

	makeShow(aFields, "edFormato", STR0001, aFormatos[FT_HTM][1] ) //"Formato"
	makeTextArea(aFields, "edOcorrenc", STR0019,.f.,55, 5,,oExport:value("ocorrenc")) //###"Ocorrencia"
	makeField(aFields, "edArquivo", STR0020, .F., 'C', 67, 0,, cChartFile) //###"Arquivo"
endif

makeTextArea(aFields, "edMailList", STR0008,.f., 55, 5,,oExport:value("maillist")) //"Enviar por e-mail para"

/*Verifica se é exportação de gráfico.*/
If nTipo == EX_GRAF  
	/*Cria o checkbox para o usuário definir se o grafico seá enviado como anexo de e-mail.*/
	makeCheckField(aFields, "edAttachFile", STR0023 /*"Enviar gráfico como anexo de email"*/,,, oExport:value("AttachFile")) 
EndIf

makeShow(aFields, "edDtultima", STR0009, dtoc(oExport:value("dtultima")) + " " + oExport:value("hrultima")) //"Última execução"

if lExport
//	makeButton(aButtons, BT_JAVA_SCRIPT, STR0010, "doExport()") //"Exportar"
	if nTipo != EX_GRAF
		makeButton(aButtons, BT_JAVA_SCRIPT, STR0011, "doScheduler()") //"Agendar"
	endif
endif
makeHidden(aFields, "cbase64", cBase64)
%>
<%= BuildForm("frmExport", cTitle, HttpGet->Action, OP_SUBMIT, aButtons, aFields, .t.)%>
<%=tagJS()%>
function doExport()
{
<% if nTipo <> EX_GRAF 
  if nTipo == EX_CON
	  oConsulta := TConsulta():New(nID, TYPE_TABLE)
	  oConsulta:SaveCacheArq()
  endif
%>
  	doLoadHere(<%=makeAction(AC_EXPORT_QUERY, {{ "id", oExport:value("id") } })%>);
<% else %>
	<% if !lOrigJava .and. empty(cBase64) %>
		oChart = getObject('chart', window.opener.document);
		getElement("cbase64").value = oChart.toBase64String();
  	<% endif %>	
  	document.frmExport.action = <%=makeAction(AC_QUERY_GRAPH, {{"id", dwGetProp("idtipo", "h_dwQryXport.aph")}})%>;    
	document.frmExport.submit();	
	
<% endif  %>
}
function doScheduler()
{
	doLoadHere(<%=makeAction(AC_QUERY_SCHED, {{ "id_exp", oExport:value("id") }, {"id" , nId } })%>);
}
</script>
<%if lExport%>
<%= BuildAutoStart("doExport()")%>
<%endif%>