<%
// ######################################################################################
// Projeto: DATA WAREHOUSE
// Modulo : Actions
// Fonte  : dwApoioServer - Página de servidores de dados
// ---------+-------------------+--------------------------------------------------------
// Data     | Autor             | Descricao
// ---------+-------------------+--------------------------------------------------------
// 06.10.05 | 0548-Alan Candido | Versão 3
// --------------------------------------------------------------------------------------

#include "dwincs.ch"
#include "dwApoioServer.ch"

local oDS := oSigaDW:Connections()
local cTitle, aWhere
local lOperSubmit := .f.
local aTipoConexao, aTipoBanco 
local aFields, aButtons, aValues
local cNome, cDescricao, cServidor, cTipoConexao, cTipoBanco, cAlias, cTipo
local cAmbiente, cEmpresa, cFil, cCaminho
local nID := dwVal(HttpGet->ID), lOk
local aOperButtons := {}
local lEdit := !(HttpSession->CurrentAba[3] == "apoio_conexao_all") 
local lDel

if HttpSession->CurrentAba[3] == "apoio_conexao_top"
	cTipo := TC_TOP_CONNECT
elseif HttpSession->CurrentAba[3] == "apoio_conexao_sx"
	cTipo := TC_AP_SX
elseif HttpSession->CurrentAba[3] == "apoio_conexao_direto"
	cTipo := TC_AP_DIRETO
endif

if HttpGet->Action == AC_REC_MANUT     
	aFields := {}
	aButtons := {}
	HttpGet->Oper := DwVal(HttpGet->Oper)
	if HttpGet->Oper == OP_SUBMIT
		lOperSubmit := .t.
		aValues := oDS:fromPost(HttpPost->APost)                               
		nID := dwVal(HttpPost->edID)
		if HttpSession->subOper == OP_REC_EDIT .and. oDS:seek(1, { dwVal(nID) }) 
			lOk := oDS:update(aValues)
		elseif HttpSession->subOper == OP_REC_DEL .and. oDS:seek(1, { dwVal(nID) }) 
			lOk := oDS:delete()                     
		else
			if (lOk := oDS:append(aValues))
				nID := oDS:value("id")
			endif
		endif                              
		if !lOk
			DWRaise(ERR_002, SOL_000, oDS:Msg(.t.))
		endif
	else                           
		HttpSession->subOper := HttpGet->Oper
		oTTemp:= InitTable(TAB_DSN)
		if oTTemp:Seek(3, {nId})
			lDel := .T.
		else
			lDel := .F.
		end if
	endif          

	if oDS:seek(1, { dwVal(nID) }) 
		cNome       := oDS:value("nome")
		cDescricao  := oDS:value("descricao")
		cServidor   := oDS:value("server")
		cTipoConexao:= oDS:value("conex_srv")
		cTipoBanco  := oDS:value("banco_srv")
		cAlias      := oDS:value("alias")
		cTipo       := oDS:value("tipo")
		cAmbiente   := oDS:value("ambiente")
		cEmpresa    := oDS:value("empresa")
		cFil        := oDS:value("filial")
		cCaminho	:= oDS:value("caminho")
	endif
	
	makeHidden(aFields, 'edID'        , nID)
	makeHidden(aFields, 'edTipo'      , cTipo)
	makeField(aFields, 'edNome'       , STR0001          , .T., 'C', 15, 0,,cNome,.t.) //'Nome'
	makeField(aFields, 'edDescricao'  , STR0002     , .T., 'C', 50, 0,,cDescricao) //'Descrição'
	makeField(aFields, 'edServer'     , STR0003, .T., 'C', 50, 0,,cServidor) //'Servidor/Porta'
	if cTipo == TC_TOP_CONNECT
		aTipoConexao := dwComboOptions(TIPO_CONEXAO)
		aTipoBanco := dwComboOptions(TIPO_BANCO)

		makeCombo(aFields, 'edConex_srv'  , STR0004  , .T., aTipoConexao,,cTipoConexao) //'Tipo Conexão'
		makeCombo(aFields, 'edBanco_srv'  , STR0005    , .T., aTipoBanco,,cTipoBanco) //'Tipo banco'
		makeField(aFields, 'edAlias'      , STR0006         , .T., 'C', 20, 0,,cAlias) //'Alias'
	else
		makeField(aFields, 'edAmbiente'   , STR0007      , .T., 'C', 20, 0,,cAmbiente) //'Ambiente'
		makeField(aFields, 'edEmpresa'    , STR0008       , .T., 'C',  2, 0,,cEmpresa) //'Empresa'

#ifdef VER_P10
		makeField(aFields, 'edFilial'     , STR0009        , .T., 'C',  2, 0,,cFil) //'Filial'
#else
		makeField(aFields, 'edFilial'     , STR0009        , .T., 'C',  12, 0,,cFil) //'Filial'
#endif
		
		if cTipo == TC_AP_DIRETO
			makeField(aFields, 'edCaminho', STR0010       , .T., 'C', 255, 0,,cCaminho) //'Caminho'
		endif
	endif
	%>
	<%=buildForm('frmApoioServer', STR0011, HttpGet->Action, OP_SUBMIT, aButtons, aFields)%> <% //'Conexões' %>
	<%if lDel %>
	<%= tagJS() %>
			document.getElementById('formMsg').innerHTML = "<%= STR0032 %>"	
	</script>
	<%end if%>
	<%if lOperSubmit%>
	<%=buildAutoClose()%>
	<%endif
elseif !(HttpGet->Action == AC_VERIFY_CONECT)
	if HttpSession->CurrentAba[3] == "apoio_conexao_all"
		cTitle := STR0012   //"Todos"
		oDS:FilterSQL("")
		aWhere := nil
	elseif HttpSession->CurrentAba[3] == "apoio_conexao_top"
		cTitle := "Top-Connect"
		if SGDB() == DB_DB2400
			oDS:FilterSQL("TIPO *EQ* '"+TC_TOP_CONNECT+"'")
		else
		  oDS:FilterSQL("TIPO = '"+TC_TOP_CONNECT+"'")
		endif
		aWhere := { "TIPO = '"+TC_TOP_CONNECT+"'" }
	elseif HttpSession->CurrentAba[3] == "apoio_conexao_sx"
		cTitle := "SX"
		if SGDB() == DB_DB2400
			oDS:FilterSQL("TIPO *EQ* '"+TC_AP_SX+"'")
		else
			oDS:FilterSQL("TIPO = '"+TC_AP_SX+"'")
  	endif
		aWhere := { "TIPO = '"+TC_AP_SX+"'" }         
	else
		cTitle := STR0013 //"Direto"
		if SGDB() == DB_DB2400
			oDS:FilterSQL("TIPO *EQ* '"+TC_AP_DIRETO+"'")
		else
			oDS:FilterSQL("TIPO = '"+TC_AP_DIRETO+"'")
		endif
		aWhere := { "TIPO = '"+TC_AP_DIRETO+"'" }
	endif
	
	aOperButtons := {}
	makeOperAct(aOperButtons, STR0014, "ic_connection.gif", AC_VERIFY_CONECT, , TARGET_50_WINDOW, .f.) //"Testar Conexão"
	makeOperAct(aOperButtons, STR0030, "ic_doc.gif"       , AC_DOCUMENTATION, { { "ObjType", OBJ_CONNECTION } }, TARGET_90_WINDOW, .f.) /*"Documentação"*/
	%>
	
	<%=	buildBrowse(STR0015 + " <small>(" + cTitle + ")</small>", lEdit, oDS:Tablename(), , , , { |aaData| prepRow(aaData) },aWhere, , , , , aOperButtons)%> <%=/*"Servidores "*/%>
	
<%elseif HttpGet->Action == AC_VERIFY_CONECT%>
	<%= verifyConnection(HttpGet->ID) %>
<%endif%>

<%

/*
--------------------------------------------------------------------------------------
Função responsável verificar a conexão de datasource
Args: nID, numérico, contém o ID da conexão
Ret.: string, texto com a saída do processamento (caso não tenha sido passado o argumento aaFields)
--------------------------------------------------------------------------------------
*/
static function verifyConnection(nID)
	
	Local aParams 	:= {}
	Local oDataset 	:= oSigaDW:Connections()
	Local aRetJob 	:= {}
	Local aFields	:= {}
	Local aButtons 	:= {}
	
	if oDataset:Seek(1, { nID })
   	aAdd(aParams, 0)
		aAdd(aParams, alltrim(oDataset:value("server")))
		if oDataSet:Value("tipo") == "1"
			aAdd(aParams, alltrim(oDataset:value("conex_srv")))
			aAdd(aParams, alltrim(oDataset:value("banco_srv")))
			aAdd(aParams, alltrim(oDataset:value("alias")))
			aAdd(aParams, nil)
			aAdd(aParams, nil)
			aRetJob := DWWaitJob(JOB_BASETOP, aParams)
		elseif oDataSet:Value("tipo") == "2"
			aAdd(aParams, alltrim(oDataset:value("ambiente")))
			aAdd(aParams, alltrim(oDataset:value("empresa")))
			aAdd(aParams, alltrim(oDataset:value("filial")))
			aAdd(aParams, "SX2")
			aRetJob := DWWaitJob(JOB_BASESXS, aParams, ,.t.)
		else
			aAdd(aParams, alltrim(oDataset:value("ambiente")))  //Environment
			aAdd(aParams, alltrim(oDataset:value("caminho")))   //Path
			aAdd(aParams, "")                                   //Tabela
			aAdd(aParams, alltrim(oDataset:value("empresa")))   //Empresa 
			aAdd(aParams, alltrim(oDataset:value("filial")))    //Filial
			aRetJob := DWWaitJob(JOB_BASEDIR, aParams, ,.t.)
		endif

		if valtype(aRetJob) == "A"
			makeH1(aFields, STR0016) //"Parâmetros da conexão"
			makeText(aFields, STR0017 + oDataset:value("nome")) //"Nome: "
			makeText(aFields, STR0018 + oDataset:value("descricao")) //"Descrição: "
			makeText(aFields, STR0019 + oDataset:value("server")) //"Servidor: "
			
			if oDataset:Value("tipo") == "1"
				makeText(aFields, STR0020 + oDataset:value("conex_srv")) //"Tipo Conexão: "
				makeText(aFields, STR0021 + oDataset:value("banco_srv")) //"Tipo do Banco: "
				makeText(aFields, STR0022 + oDataset:value("alias")) //"Alias: "
			elseif oDataset:Value("tipo") == "2"	
				makeText(aFields, STR0023 + oDataset:value("ambiente")) //"Ambiente: "
				makeText(aFields, STR0024 + oDataset:value("empresa")) //"Empresa: "
				makeText(aFields, STR0025 + oDataset:value("filial")) //"Filial: "
			else
				makeText(aFields, STR0023 + oDataset:value("ambiente")) //"Ambiente: "
				makeText(aFields, STR0026 + oDataset:value("caminho")) //"Caminho: "
			endif
			
			makeSubTitle(aFields, STR0027) //"Resultado do Teste"
			makeWarning(aFields, aRetJob[1])
        else
			makeSubTitle(aFields, STR0027) //"Resultado do Teste"
			makeWarning(aFields, STR0031 ) //"Não foi possivel estabelecer a conexão. Verifique os parâmetros!!!"
		endif
	else
		HttpSession->DWErrMsg := STR0028 //"Registro não encontrado!!!"
	endif
	
	makeButton(aButtons, BT_CLOSE)
	
return buildForm("frmConections", STR0029, AC_NONE, OP_NONE, aButtons, aFields) //"Conexões"
  
static function prepRow(aaData)

	if aaData[5] == TC_TOP_CONNECT
		aaData[5] := "Top Connect"
	elseif aaData[5] == TC_AP_SX
		aaData[5] := "SX"
	else //TC_AP_DIRETO
		aaData[5] := "Direto"
	endif
	
return .t.
%>