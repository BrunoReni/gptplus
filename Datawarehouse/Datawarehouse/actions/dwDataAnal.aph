<%
// ######################################################################################
// Projeto: DATA WAREHOUSE
// Modulo : Actions
// Fonte  : dwDataAnal - Analise de fragmentação
// ---------+-------------------+--------------------------------------------------------
// Data     | Autor             | Descricao
// ---------+-------------------+--------------------------------------------------------
// 12.05.03 | 0548-Alan Candido |
// 20.06.06 | 0548-Alan Candido | Migração para o SigaDw 3
// 15.12.08 | 0548-Alan Candido | FNC 09025/2008 (8.11) e 09034/2008 (10)
//          |                   | Adequação de geração de máscara em campos numéricos e datas, 
//          |                   | para respeitar o formato conforme idioma 
//          |                   | (chave RegionalLanguage na sessão do ambiente).
// --------------------------------------------------------------------------------------

#include "dwincs.ch"
#include "dwDataAnalise.ch"
                            

local oDataset, oData
local aAux, aAux2, cTitle, nInd , cTablename
local nID := dwVal(HttpGet->ID), nFator
local aCols, aData, aKeys := {}, oQuery

cTitle := STR0001 + " - " //###"Analise de fragmentação"
aAux := { "count(*) rc" }
aAux2 := { STR0002 } //###"Total de registros"

if HttpGet->ObjType == OBJ_DIMENSION
	cTitle += STR0003 //###"Dimensão"
	oData := oSigaDW:OpenDim(nID)
	cTitle += " [ " + oData:descricao() + " ]"
	cTablename := oData:Tablename()
	aEval(oData:Fields(), { |x| iif(x[FLD_NAME]=="ID", nil, aAdd( aAux, "count(distinct " + x[FLD_NAME]+") " + x[FLD_NAME]))})
	aEval(oData:Fields(), { |x| iif(x[FLD_NAME]=="ID", nil, aAdd( aAux2, x[FLD_TITLE]))})
	aKeys := oData:Indexes()[2][4]
	oSigaDW:CloseDim(oData)
else
	cTitle += STR0004 + " - " //###"Cubo"
	oData := oSigaDW:OpenCube(nID)
	cTitle += " [ " + oData:descricao() + " ]"
	cTablename := oData:Fact():Tablename()
	aEval(oData:Fields(), { |x| iif(x[FLD_NAME]=="ID" .or. x[6]==0, nil, aAdd( aAux, "count(distinct " + DWKeyDimname(x[6]) + ") " + x[FLD_NAME]))})
	aEval(oData:Fields(), { |x| iif(x[FLD_NAME]=="ID" .or. x[6]==0, nil, aAdd( aAux2, x[FLD_NAME]))})
	oSigaDW:CloseCube(oData)
endif

aCols := {}
makeEditCol(aCols, EDT_SHOW, 'edDesc' , STR0005, .t., 'C',  25, 0) //###"Propriedade"
makeEditCol(aCols, EDT_SHOW, 'edValue', STR0006, .t., 'N',  15, 0) //###"Valor"
makeEditCol(aCols, EDT_SHOW, 'edFator', STR0007, .t., 'N',  6, 4) //###"Único(%)"

oDataset := TQuery():New("TRA")
oDataset:FromList(cTablename)
aData := {}
for nInd := 1 to len(aAux)
	oDataset:FieldList(aAux[nInd])
	oDataset:open(.t.)
	if nInd == 1
		nFator := 100 / oDataset:value(1)
		aAdd(aData, { aAux2[1], transform(oDataset:value(1), dwMask("999,999,999")), transform(100, dwMask("999.9999%")) } )
	else
		aAdd(aData, { aAux2[nInd], transform(oDataset:value(1), dwMask("999,999,999")), transform(oDataset:value(1)*nFator, dwMask("999.9999%")) } )
	endif
	oDataset:close()
next


if len(aKeys) > 0
	aAdd(aData, {STR0008, "", "" } ) //###"Chave única"
	oQuery := TQuery():New("tra")
	oDataset:Clear()
	oDataset:FromList(cTablename)
	
	for nInd := 1 to len(aKeys)
		oDataset:Makedistinct(.t.)
		oDataset:FieldList(iif(nInd == 1, "", oDataset:FieldList() + ", " ) + aKeys[nInd])
		oQuery:execute(EX_DROP_VIEW, "vTEMP")
		oQuery:ExecSQL("create view vTEMP as " + oDataset:SQL())
		oDataset:Open(.t., "select count(*) from vTEMP")
		aAdd(aData, { oDataset:FieldList(), transform(oDataset:value(1), dwMask("999,999,999")), transform(oDataset:value(1)*nFator, dwMask("999.9999%")) } )
		oDataset:close()
	next
	
	oQuery:execute(EX_DROP_VIEW, "vTEMP")
endif

%>
<%=buildFormBrowse('frmAnaliseFrag', cTitle, AC_NONE, OP_DISPLAY, , aCols, aData, .f.)%>