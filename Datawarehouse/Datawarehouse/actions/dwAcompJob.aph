<%
// ######################################################################################
// Projeto: DATA WAREHOUSE
// Modulo : Actions
// Fonte  : dwAcompJob() - Permite o acompanhamento de execução de jobs
// ---------+-------------------+--------------------------------------------------------
// Data     | Autor             | Descricao
// ---------+-------------------+--------------------------------------------------------
// 28.09.05 | 0548-Alan Candido | Versão 3
// 17.06.08 | 0548-Alan Candido | BOPS 145941
//          |                   | Ajuste no refresh do formulário de acompanhamento de
//          |                   | execução de processos
// 31.10.08 | 0548-Alan Candido | FNC 00000004062/2008 (8.11) e 00000004221/2008 (9.12)
//          |                   | Apresentação de mensagem de "fim de importação" e opção
//          |                   | para visualizar o log de importação de usuários.
// --------------------------------------------------------------------------------------

#include "dwincs.ch"
#include "dwAcompJob.ch"

local cLogFile := "", lOk := .f.
local aFields := {}, oTabProcess
local aButtons := {}, lEtapa := .t.
local aAfterProc := {}

// ATENÇÃO ******************************************************
//    Em caso de mundanças neste formulário, favor
//    verificar o impacto na função atzProgress (htmlLib.prw)
// **************************************************************
  
if httpGet->action == AC_PROCESS_VIEW
	oTabProcess := initTable(TAB_PROCESS)
	if oTabProcess:seek(1, { dwVal(httpGet->id) })
		if oTabProcess:value("tipo") == "IMP"
			lOk := DWStartImp(oTabProcess:value("id_parent"), @cLogFile, .t.)
		else
			lOk := DWStartExp(oTabProcess:value("id_parent"), @cLogFile, .t.)
		endif
	endif
elseif httpGet->action == AC_DSN_IMPORT
	lOk := DWStartImp(dwVal(httpGet->id), @cLogFile)
	aAdd(aAfterProc,"  var oDiv = oDocForUpdate.getElementById('divWarning');")
	aAdd(aAfterProc,"  var oLog = oDocForUpdate.getElementById('edLogFile');")
	aAdd(aAfterProc,"  showElement(oDiv);")
	aAdd(aAfterProc,"  oLog.value = axParams[0];")
elseif httpGet->action == AC_USER_IMPORT
	lOk := DWStartImp(oSigaDW:DsnUsrSiga(), @cLogFile)
	aAdd(aAfterProc,"  var oDiv = oDocForUpdate.getElementById('divWarning');")
	aAdd(aAfterProc,"  var oLog = oDocForUpdate.getElementById('edLogFile');")
	aAdd(aAfterProc,"  showElement(oDiv);")
	aAdd(aAfterProc,"  oLog.value = axParams[0];")
elseif httpGet->action == AC_BUILD_QUERY
	lOk := DWStartBuildTable(dwVal(httpGet->id), dwVal(httpGet->type), @cLogFile)
	aAdd(aAfterProc,"  if ((axParams.length > 0) && (axParams[0])) //erro")
	aAdd(aAfterProc,"  {")
	aAdd(aAfterProc,"    var oDiv = oDocForUpdate.getElementById('divWarning');")
	aAdd(aAfterProc,"    oDiv.innerHTML = axParams[1];")
	aAdd(aAfterProc,"    showElement(oDiv);")
	aAdd(aAfterProc,"  } else if (getParentWin(oDocForUpdate).opener)")
	aAdd(aAfterProc,"  {")
	aAdd(aAfterProc,"    doLoadHere(" + makeAction(AC_QUERY_EXEC, { {"id", httpGet->id}, {"type", HttpGet->type}, {"oper", OP_REC_NO_STEPS}, {"ipc", cLogFile} }) + ", getParentWin(oDocForUpdate).opener.window.document.location)")
	aAdd(aAfterProc,"    getParentWin(oDocForUpdate).close();")
	aAdd(aAfterProc,"  }")
	aAdd(aAfterProc,"  else")
	aAdd(aAfterProc,"  {")
	aAdd(aAfterProc,"    doLoadHere(" + makeAction(AC_QUERY_EXEC, { { "oper", OP_REC_NO_STEPS}, { "ipc", cLogFile } }) + ",oDocForUpdate.location);")
	aAdd(aAfterProc,"  }")
	lEtapa := .f.
elseif httpGet->action == AC_EXPORT_QUERY
	lOk := DWStartExp(dwVal(httpGet->id), @cLogFile)
	aAdd(aAfterProc,"  var cURL = "+makeAction(AC_DOWNLOAD)+";")
	aAdd(aAfterProc,"  cURL = prepParam(cURL, 'fileRelativePath', axParams[0]);")
	aAdd(aAfterProc,"  cURL = prepParam(cURL, 'filename', axParams[1]);")
	aAdd(aAfterProc,"  doLoadHere(cURL, oDocForUpdate.location);")
elseif httpGet->action == AC_SYNC_EMPFIL
	lOk := DWStartSyncEmpFil(@cLogFile)
	aAdd(aAfterProc,"  var oDiv = oDocForUpdate.getElementById('divWarning');")
	aAdd(aAfterProc,"  var oLog = oDocForUpdate.getElementById('edLogFile');")
	aAdd(aAfterProc,"  showElement(oDiv);")
	aAdd(aAfterProc,"  oLog.value = axParams[0];")
endif

if lOk
	HttpSession->afterProcess := nil
endif
if !empty(aAfterProc)
	httpSession->afterProcess := aAfterProc
endif

makeHidden(aFields, "edLogFile", cLogFile)
makeShow(aFields, "edProcesso", STR0001, format(oSigaDW:getActDesc(httpGet->action))) //"Processo"
if lEtapa
	makeProgressBar(aFields, "pbProcesso")
	makeShow(aFields, "edEtapa", STR0002, format(STR0003)) //"Etapa"###"Aguarde..."
	makeProgressBar(aFields, "pbEtapa")
else
	makeShow(aFields, "edEtapa", STR0004, format(STR0003)) //"Descrição"###"Aguarde..."
	makeProgressBar(aFields, "pbProcesso")
	makeHidden(aFields, "pbEtapa")
endif

makeShow(aFields, "edInicio" , STR0005, format(STR0006)) //"Inicio"###"(sincronizando)"
makeShow(aFields, "edDuracao", STR0007, STR0006+space(15)) //"Duração*"###"(sincronizando)"
makeShow(aFields, "edTermino", STR0008, format(STR0006)) //"Término*"###"(sincronizando)"
makeAttention(aFields, STR0009) //"*Previsto"

makeTextArea(aFields, "edInfo", "|"+STR0010, .F., 60,10) //"Informações"

makeButton(aButtons, BT_JAVA_SCRIPT, STR0014, "fechaAcompJob()") //###"Fechar"
%>
<%if lOk%>   
	<%= buildForm("frmProgress", STR0011, AC_NONE, , aButtons, aFields, .f., , , , , , iif(!oUserDW:UserIsAdm(),"display:none",nil)) %> <%= /*"Acompanhamento de Processos"*/ %>
	<%if !oUserDW:UserIsAdm()%> 
		<div id='divWarning' class='formWarningSrv shadow2'><%= STR0015 /*###"Favor aguardar."*/ %></div>
		<%=tagJS()%>
		 showWait();
		</script>
	<%endif%>
	<div id='divWarning' class='formWarningSrv shadow2' style='display:none'><%= STR0016 /*###"Processo finalizado."*/ %><br>
	<%=tagButton(BT_JAVA_SCRIPT, STR0012, 'doVerLog()') %></div> <%= /*'Ver log'*/ %>
	<%=tagJS()%>
 			function fechaAcompJob()
   			{
     	   		doClose();
       		}

            function doVerLog()
            {                                                                                 
                var cURL = <%=makeAction(AC_EXEC_DOWNLOAD, { { "file", "" }, {"jscript", CHKBOX_ON} })%>;
                var oLog = getElement('edLogFile');
                if (oLog.value != "") {
                    cURL = prepParam(cURL, 'file', oLog.value);
                    doLoadHere(cURL);
                } else {
                    alert("<%= STR0019 /*Atenção: Log indisponível. Para habilitar a geração de log vá até o menu 'Principal' submenu 'Configuração' e na aba 'Opções' habilite a opção de 'Log de Importação/Exportações'" */ %>");
                }
            }
                 
            var FIRST_REFRESH 	 = 5; //tempo para o 1o refresh
            var INTERVAL_REFRESH = 5; //intervalo entre refresh

            var nInterval;        
            var cBar = '||||||||||||||||||||||||||||||';
  
            function u_bodyonload()
            {
                window.CAN_REFRESH = true;
                    <%if !oUserDW:UserIsAdm()%> 
                    lHideWait = false;
                    <%endif%> 
                    setWindowSize(620, 525);
                nInterval = FIRST_REFRESH;
                window['xStopRefresh'] = 0;
                window['xInterval'] = setInterval('updForm()', 500);
            }
            function updForm()
            { 
                nInterval--;
                window.status = cBar.substr(0, nInterval);
                if (nInterval == 0)
                {
                    var dAux 	= new Date();
                    var cURL 	= <%=makeAction(AC_VERIFY_PROCESS, {{ "ipc", cLogFile }, { "jscript",CHKBOX_ON } })%>;
                    var iFrame = getElement("ifRequest");

                    clearInterval(window['xInterval']);
                    window.status = '<%= STR0017 /*###"Atualizando..."*/ %>';

                    cURL = prepParam(cURL, "_forceReload", dAux.getTime().toString(16));
             
                    if ( iFrame != undefined ) {
                        iFrame.src = prepURL(cURL);
                    } else {
                        window.status = 'Problema na atualização do monitor.';
                    }

                    nInterval = INTERVAL_REFRESH;  
    
                    if (!(window['xStopRefresh'])) {
                        window['xInterval'] = setInterval('updForm()', 500);
                    } else {
                        window.status = '<%= STR0018 /*###"Pronto."*/ %>'; 
                    }
                }     
            }
	</script>
<%else%>
	<%=buildAutoClose(.f., STR0013) %> <% /*"Não foi possivel iniciar o processo. Favor verificar o log."*/%>
<%endif
return __Response 

static function format(x)

return padr(x, 30)
%>