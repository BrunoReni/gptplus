<%
// ######################################################################################
// Projeto: DATA WAREHOUSE
// Modulo : Actions
// Fonte  : dwEdtExpr - Manutenção de expressões
// ---------+-------------------+--------------------------------------------------------
// Data     | Autor             | Descricao
// ---------+-------------------+--------------------------------------------------------
// 07.12.05 | 0548-Alan Candido | Versão 3
// --------------------------------------------------------------------------------------

#include "dwincs.ch"
#include "dwEdtExpr.ch"

local lIsSQL 	:= isNull(HttpGet->IsSQL, CHKBOX_OFF) == CHKBOX_ON
local cRetType 	:= HttpGet->ReturnType
local aSource, lClose := .f., lUsrCancel := .f., aBase, lExec := .f.
local lCanChange := HttpGet->Chg==CHKBOX_ON
local lSave := .t., lCancel := .t., lExecute := .t., lRemove := .t., lEdit := .t.
local lCopy := dwVal(httpGet->ID_Base) > 0        
local lBack := .f., oDS
local lDocto := HttpGet->Action == AC_DOCUMENTATION
local lEmbedded := isNull(HttpGet->embedded, CHKBOX_OFF) == CHKBOX_ON
local cAlias := dwStr(HttpGet->alias)
local cEmpFil:= dwStr(HttpGet->empFil)
local lSample := isNull(HttpGet->sample, CHKBOX_OFF) == CHKBOX_ON
local cOrigem := dwStr(HttpGet->origem)

//Verifica se a action está sendo chamada pelo componente JAVA. 
if ( "JAVA" $ cOrigem )
%>
  	<%= tagJS() %>
	   	doLoad(<%= strTran(makeAction( AC_DOCUMENTATION, { { "objID", dwval(HttpGet->objID) }, { "ObjType", OBJ_QUERY }  , { "edCmdTextArea", EDT_CMD_DISPLAY } }), "&amp;", "&") %>, '_blank', null , 'winDWPrint', <%= TARGET_60_WINDOW %>, <%= TARGET_60_WINDOW %>);
   	   	window.close();
   	</script>                              	
<%
endif  

if httpGet->TARGETTEXT == "edForZap" .OR. httpGet->TARGETTEXT == "edBeforeExec" .OR. httpGet->TARGETTEXT == "edValida" ;
	.OR. httpGet->TARGETTEXT == "edAfterExec" .OR. httpGet->TARGETTEXT == "edFilter" .OR. ;
	("edRoteiro"$dwstr(httpGet->TARGETTEXT)) .OR. (isNull(httpGet->TARGETTEXT) .and. !lDocto) .OR. httpGet->TARGETTEXT == "edExpressao"
		lExecute := .F.
		lDocto := .F.
endif

if isNull(Httpget->iframe,"") == ""
	if valType(httpPost->APost) == "A" .and. len(httpPost->APost) <> 0
		httpGet->id_expr := dwVal(httpGet->id_expr)
		httpGet->id_base := dwVal(httpGet->id_base)
		
		if valType(httpGet->objID) == "U"
			httpGet->objID := dwGetProp("objID")
		endif
		
		if HttpPost->edCmdTextArea == EDT_CMD_CANCEL
			HttpSession->execSQL := HttpPost->edText
			lUsrCancel := .t.
		elseif HttpPost->edCmdTextArea == EDT_CMD_SAVE
			httpGet->id_expr := DWSaveExpr(URLDecode(HttpPost->edText), httpGet->id_expr, HttpGet->isSQL==CHKBOX_ON, lDocto)
			if lDocto .OR. HttpGet->Action == AC_DOCUMENTATION
				if dwGetProp("obj") == OBJ_DIMENSION
					oSigaDW:Dimensao():Seek(1, { dwVal(httpGet->objID) } )
					oSigaDW:Dimensao():update({ { "id_docto", httpGet->id_expr}} )
				elseif dwGetProp("obj") == OBJ_CUBE
					oSigaDW:Cubes():CubeList():Seek(1, { dwVal(httpGet->objID) } )
					oSigaDW:Cubes():CubeList():update({ { "id_docto", httpGet->id_expr}} )
				elseif dwGetProp("obj") == OBJ_CONNECTION
					oSigaDW:Connections():Seek(1, { dwVal(httpGet->objID) } )
					oSigaDW:Connections():update({ { "id_docto", httpGet->id_expr}} )
				elseif dwGetProp("obj") == OBJ_QUERY
					oSigaDW:Consultas():Seek(1, { dwVal(httpGet->objID) } )
					oSigaDW:Consultas():update({ { "id_docto", httpGet->id_expr}} )
				elseif dwGetProp("obj") == OBJ_INDICADOR
					oDS := initTable(TAB_FACTFIELDS)
					oDS:Seek(1, { dwVal(httpGet->objID) } )
					oDS:update({ { "id_docto", httpGet->id_expr}} )
				elseif dwGetProp("obj") == OBJ_INDVIRT
					oDS := initTable(TAB_FACTVIRTUAL)
					oDS:Seek(1, { dwVal(httpGet->objID) } )
					oDS:update({ { "id_docto", httpGet->id_expr}} )
				endif
			endif
			lClose := .t.
		elseif HttpPost->edCmdTextArea == EDT_CMD_EXECUTE .or. HttpPost->edCmdTextArea == EDT_CMD_VIEW
			lExec := .t.
			lCanChange := .f.
			lSave := .f.
			lCancel := .t.
			lExecute := .f.
			lRemove := .f.
			lCopy := .f.
			lBack := .t.
			HttpPost->edText := urlDecode(HttpPost->edText)
			dwSetProp("edText", HttpPost->edText)
		elseif HttpPost->edCmdTextArea == EDT_CMD_REMOVE
			DWEraseExpr(dwGetProp("id_expr"))
			httpGet->id_expr := 0
			lClose := .t.
		endif
	elseif HttpGet->edCmdTextArea == EDT_CMD_DISPLAY	
		oSigaDW:Consultas():Seek(1, { dwVal(httpGet->objID) } )
		
		lExec := .t.
		lEdit := .f.  
               
	  	HttpPost->edText := DwConcatWSep(CRLF, DWLoadExpr(oSigaDW:Consultas():Value("id_docto"))[2])
		dwSetProp("edText", HttpPost->edText)		
	endif

  	if lDocto
		dwSetProp("id_expr", 0)
		if valType(httpGet->objID) == "U"
			httpGet->objID := httpGet->ID
		endif
	
		if httpGet->ObjType == OBJ_DIMENSION
			if oSigaDW:Dimensao():Seek(1, { dwVal(httpGet->objID) } )
				dwSetProp("id_expr", oSigaDW:Dimensao():value("id_docto"))
			endif
		elseif httpGet->ObjType == OBJ_CUBE
			if oSigaDW:Cubes():CubeList():Seek(1, { dwVal(httpGet->objID) } )
				dwSetProp("id_expr", oSigaDW:Cubes():CubeList():value("id_docto"))
			endif
		elseif httpGet->ObjType == OBJ_CONNECTION			
			if oSigaDW:Connections():Seek(1, { dwVal(httpGet->objID) } )
				dwSetProp("id_expr", oSigaDW:Connections():value("id_docto"))
			endif
		elseif httpGet->ObjType == OBJ_QUERY
			if oSigaDW:Consultas():Seek(1, { dwVal(httpGet->objID) } )
				dwSetProp("id_expr"	, oSigaDW:Consultas():value("id_docto"))
			endif                                                        
			
			// verifica privilégio para dar manutenção
			lSave := lRemove := oUserDW:GetQryMaintPerm(HttpSession->CurrentDW, dwVal(httpGet->objID))
		elseif httpGet->ObjType == OBJ_INDICADOR
			oDS := initTable(TAB_FACTFIELDS)
			if oDS:Seek(1, { dwVal(httpGet->objID) } )
				dwSetProp("id_expr", oDS:value("id_docto"))
			endif                                                        
		elseif httpGet->ObjType == OBJ_INDVIRT
			oDS := InitTable(TAB_FACTVIRTUAL)
			if oDS:Seek(1, { dwVal(httpGet->objID) } )
				dwSetProp("id_expr", oDS:value("id_docto"))
			endif                                                        
		else
			afazer()
		endif
  		dwSetProp("targetID", "")
  		dwSetProp("targetText", "")
		dwSetProp("objID", dwVal(httpGet->objID))
	  	dwSetProp("id_base", 0)
		dwSetProp("obj", httpGet->ObjType)
		dwSetProp("IsSQL", .f.)
	  	lExecute := .f.
	  	lCopy := .f.
  	else          
  		if httpGet->id_expr == nil       
	  		if httpGet->ObjType == OBJ_DIMENSION
				if oSigaDW:Dimensao():Seek(1, { dwVal(httpGet->ID) } )
					dwSetProp("id_expr", oSigaDW:Dimensao():value("id_docto"))
				endif 			
			elseif httpGet->ObjType == OBJ_CUBE
				if oSigaDW:Cubes():CubeList():Seek(1, { dwVal(httpGet->ID) } )
					dwSetProp("id_expr", oSigaDW:Cubes():CubeList():value("id_docto"))				
				endif
			elseif httpGet->ObjType == OBJ_CONNECTION
				if 	oSigaDW:Connections():Seek(1, { dwVal(httpGet->ID) } )
					dwSetProp("id_expr", oSigaDW:Connections():value("id_docto"))								
				endif
			elseif httpGet->ObjType == OBJ_QUERY
				if oSigaDW:Consultas():Seek(1, { dwVal(httpGet->ID) } )
					dwSetProp("id_expr", oSigaDW:Consultas():value("id_docto"))												
				endif
			elseif httpGet->ObjType == OBJ_INDICADOR
				oDS := initTable(TAB_FACTFIELDS)
				if oDS:Seek(1, { dwVal(httpGet->ID) } )
					dwSetProp("id_expr", oDS:value("id_docto"))																	
				endif
			elseif httpGet->ObjType == OBJ_INDVIRT
				oDS := initTable(TAB_FACTVIRTUAL)
				if oDS:Seek(1, { dwVal(httpGet->ID) } )
					dwSetProp("id_expr", oDS:value("id_docto"))																	
				endif
			endif
  		else
			dwSetProp("id_expr", dwVal(httpGet->id_expr))
  		endif
	  	dwSetProp("targetID", httpGet->targetID)
	  	dwSetProp("targetText", httpget->targetText)
		dwSetProp("objID", dwVal(httpGet->ID))
  		dwSetProp("id_base", dwVal(httpGet->id_base))
		dwSetProp("obj", httpGet->ObjType)
		dwSetProp("IsSQL", lIsSQL)
		dwSetProp("embedded", lEmbedded)
		dwSetProp("alias", cAlias)
		dwSetProp("empFil", cEmpFil)
		if isNull(httpGet->ObjType)
			httpGet->ObjType := httpGet->Tipo
		endif
		if httpGet->ObjType == OBJ_QUERY
	  		lExecute := .f.
	  		lCopy := .f.
		endif
	endif
  
  	if lExec
  	%>
	  	<%= buildExecExpr("frmEdtExp", httpGet->Caption,iif(lDocto,nil, HttpPost->edText),iif(lDocto,HttpPost->edText, nil), , lEdit ) %>
  	<% else %>
	  	<%= buildEdtExpr("frmEdtExp", httpGet->Caption, lIsSQL, lCanChange, lSave, lCancel, lExecute, lRemove, lCopy, lBack, .t., httpGet->Tipo, dwVal(httpGet->objID), lDocto, lEmbedded, cAlias, cEmpFil, iif(HTTPGET->TARGETTEXT != "edExpressao", .T., .F.) ) %>
  	<% endif
  	
  	if lUsrCancel %>
		<%=buildAutoClose(.f.,STR0007)%> <% /*'Procedimento cancelado pelo usuário' */%>
  	<% elseif lClose%>
		<%=buildAutoAction("js:doUpdParent()")%>
		<%=tagJS()%>
		function doUpdParent()
		{          
			<%if !(HttpPost->edCmdTextArea == EDT_CMD_REMOVE) .AND. !empty(dwGetProp("targetID"))%>
			  	getElement("<%=dwGetProp("targetID")%>", window.opener.document).value = <%=httpGet->id_expr%>;
			  	getElement("<%=dwGetProp("targetText")%>", window.opener.document).value = unescape("<%=HttpPost->edText%>");
			<% endif %>	
		 
			close();
		}
		</script>
	<%endif
elseif Httpget->iframe == "iExpressao"
	if !empty(dwGetProp("edText"))
		aSource := { dwGetProp("edText") }
		dwSetProp("edText", NIL)
	elseif dwGetProp("id_expr") > 0
		aSource := dwLoadExpr(dwGetProp("id_expr"))
		if valType(aSource) == "A"
			aSource := aClone(aSource[2])
		endif
	endif

	if dwGetProp("id_base") > 0
		aBase := dwLoadExpr(dwGetProp("id_base"))
		if valType(aBase) == "A"
			aBase := aClone(aBase[2])
		endif
	endif%>
  	<%= buildIExpressao("frmEdtExp", iif(dwGetProp("IsSQL"), "@2S", iif (empty(cRetType), "@2L", "@2" + dwStr(cRetType))), "@3", aSource, aBase)%>
<%else%>
  	<%=buildIAuxiliar("frmEdtExp")%>
<%endif%>