<%
// ######################################################################################
// Projeto: DATA WAREHOUSE
// Modulo : Actions
// Fonte  : dwQryOnlineExec - Consulta Online: definição e execução na mesma ação
// ---------+-------------------+--------------------------------------------------------
// Data     | Autor             | Descricao
// ---------+-------------------+--------------------------------------------------------
// 19.06.06 |2481-Paulo R Vieira| Versão 3
// 12.08.08 |0548-Alan Cândido  | BOPS 146580 (habilitado pelo define DWCACHE)
//          |                   | Implementação de novo sistema de leitura da consulta (uso de cache).
// 09.12.08 | 0548-Alan Candido | FNC 00000149278/811 (8.11) e 00000149278/912 (9.12)
//          |                   | Ajuste em chamadas de URL (padronização)
// 19.02.10 | 0548-Alan Candido | FNC 00000003657/2010 (9.12) e 00000001971/2010 (11)
//          |                   | Implementação de visual para P11 e adequação para o 'dashboard'
// --------------------------------------------------------------------------------------

#include "dwincs.ch"
#include "dwQryOnlineExec.ch"

#define IF_H_DEF    400   // altura do iFrame de definição
#define IF_H_EXEC   620   // altura do iFrame de execução

#define IF_W_DEF    970   // largura do iFrame de definição, qdo for FireFox, senão é 100%
#define IF_W_EXEC   970   // largura do iFrame de execução, qdo for FireFox, senão é 100%

Local nIDCons 			:= iif (!empty(HttpGet->ID), DwVal(HttpGet->ID), DwVal(HttpPost->ID))
Local nType 			:= iif (!empty(HttpGet->type), DwVal(HttpGet->type), DwVal(HttpPost->type))
Local nOper 			:= OP_EXEC_ONLINE
Local aFields			:= {}
Local cTitle			:= STR0001 //"Execução/Definição de consultas"
Local aTypeDefs			:= { { "", "" }, { STR0002, TYPE_TABLE }, { STR0003, TYPE_GRAPH } }
Local cMsgNotDefined 	:= ""
local aBuffer 			:= {}
local lShowExec 		:= .t.        
local oUser_DSK 		:= InitTable(TAB_USER_DSKTOP)    
Local lDesktop			:= .F. 
Local nUserID			:= oUserDW:UserID()
           
//Verifica se a consulta está sendo executada pelo desktop.     
If( !isNull( HTTPGet->source ) .and. HTTPGet->source == "desktop" )
   lDesktop := .T. 
EndIf
     
If ( isNull( HTTPGET->ID ) )
	nIDCons := dwVal( dwGetProp("ID_CONS") )
	nType 	:= dwVal( dwGetProp("TYPE") )
else 
	dwsetProp("ID_CONS"	, cBIStr( nIDCons ) )
	dwsetProp("TYPE"	, cBIStr( nType ) )  
EndIf

//Instancia o objeto da consulta. 
#ifdef DWCACHE
#else           
	oQuery := TConsulta():New(nIDCons, nType, .f.)
#endif
              

//Executa a consulta solicitada pelo desktop. 
if ( lDesktop .Or. isNull(Httpget->cache, CHKBOX_ON) == CHKBOX_OFF )
	#ifdef DWCACHE
		dwDelCons(nIDCons, nType)
	#else
		oQuery:clearCache(.t.)
	#endif
	%>	        
		<%= tagJS() %>
			doLoad(<%= makeAction(AC_QRY_ONLINE_EXEC, { {"id", cBIStr( nIDCons )}, {"oper", OP_REC_NO_STEPS}, {"type", cBIStr( nType ) }, { "_ow", CHKBOX_ON } }) %>, "_blank", null, null, <%= TARGET_100_WINDOW %>, <%= TARGET_100_WINDOW %>);
			window.close();
		</script>                   
	<% 	return
endif
   

// recupera a consulta que está sendo avaliada
#ifdef DWCACHE
oQuery := dwNewCons(nIDCons, nType)
cTitle += " - " + oQuery:Desc() + " (" + oQuery:Name() + ") "
#else
if !isNull(oQuery)
	cTitle += " - " + oQuery:Desc() + " (" + oQuery:Name() + ") "
else
	dwRaise(ERR_005, SOL_003, STR0004 + " (ID: " + DwStr(nIDCons) + ")") //"Consulta não encontrada"
endif
#endif					

// verifica se não foi definido o tipo de objeto (tabela ou gráfico)
if isNull(nType) .OR. empty(nType)
	makeHidden(aFields, "ID", nIDCons)
	makeCombo(aFields, "type", STR0007, .F., aTypeDefs, , nType) //"Definir/Executar: "
	evtField(aFields, "type", "onchange", , .t.)
else
	if nType = TYPE_TABLE
		cTitle += " [" + STR0002 + "]"
	else
		cTitle += " [" + STR0003 + "]"
	endif
	
	// verifica o tipo de objeto e já foi realizada a definição específica
	if (nType == TYPE_TABLE .AND. !oQuery:HaveTable()) ;
			.OR. (nType == TYPE_GRAPH .AND. !oQuery:HaveGraph())
		cMsgNotDefined := makeAttention(NIL, STR0008) //"Atenção: a definição para esta consulta ainda não foi efetuada. Por favor, realize-a antes de prosseguir com a execução."
		lShowExec := .f.
	endif
endif

// Cria variável de sessão que será a origem da página.
HttpSession->Origem := 'dwQryOnlineExec'

aAdd(aBuffer, "<div class='queryOnline'>")
aAdd(aBuffer, "  <table summary='' border='0' cellpadding='0' cellspacing='0' width='100%'>")
aAdd(aBuffer, "    <tbody>")
aAdd(aBuffer, "      <tr>")
aAdd(aBuffer, "        <td class='aba'><a href='javascript:showAbaDef();'>" + STR0009 + "</a></td>") //###"Definição"
aAdd(aBuffer, "        <td class='aba_desc'>" + STR0010 + "</td>") //###"realiza a definição para esta consulta"
aAdd(aBuffer, "      </tr>")
aAdd(aBuffer, "      <tr id='queryDefAction' style='display:none'>")
aAdd(aBuffer, "        <td colspan='2'>")
aAdd(aBuffer, 				 	buildIframe(NIL, AC_NONE, , "queryDefIframe", iif(isFireFox(), IF_W_DEF ,1), IF_H_DEF, .F.))
aAdd(aBuffer, "        </td>")
aAdd(aBuffer, "      </tr>")
aAdd(aBuffer, "      <tr id='queryMsgLabel'>")
aAdd(aBuffer, "        <td colspan='2'>")
aAdd(aBuffer, "          <div class='queryMsgLabel'>" + cMsgNotDefined + "</div>")
aAdd(aBuffer, "        </td>")
aAdd(aBuffer, "      </tr>")
aAdd(aBuffer, "      <tr>")
aAdd(aBuffer, "        <td class='aba'><a href='javascript:showAbaExec();'>" + STR0011 + "</a></td>") //###"Execução"
aAdd(aBuffer, "        <td class='aba_desc'>" + STR0012 + "</td>") //###"Realiza a execução desta consulta"
aAdd(aBuffer, "      </tr>")  
aAdd(aBuffer, "      <tr id='queryExecAction' style='display:none'>")
aAdd(aBuffer, "        <td colspan='2'>")
aAdd(aBuffer, 					buildIframe(NIL, AC_NONE, , "queryExecIframe", iif(isFireFox(), IF_W_EXEC ,1), IF_H_EXEC, .F., , .T.))
aAdd(aBuffer, "        </td>")
aAdd(aBuffer, "      </tr>")
aAdd(aBuffer, "    </tbody>")
aAdd(aBuffer, "  </table>")
aAdd(aBuffer, "</div>")

makeCustomField(aFields, "iframes", dwConcatWSep(CRLF, aBuffer))
%>
<%=buildForm("#execQueryOnline", cTitle, AC_NONE, OP_NONE, {}, aFields, , , , , , , 'width:100%; margin-left:0px; margin-right:0px;	', .F.)%>
<%= tagJS() %>
function doReload() 
{    
	var oTR = getElement('queryExecAction');
	var oIFrame = getElement('queryExecIframe');

	if (oTR)
	{
    if (!isElementVisible(oTR))
			showAbaExec()
		else
			doRefresh(oIFrame);
	} else
		doRefresh(document);
}

function showAbaDef()
{
  var cNone;
 
  if (oBw.ie8) {
    cNone = location.href + '<%=AC_NONE%>';
  } else {
    cNone = (oBw.ff ? location.href : '') + '<%=AC_NONE%>';
  }
  
	var oIFrame = getElement('queryDefIframe');
	if (oIFrame)
  	{
		var oTR = getElement('queryDefAction');       
    	if (!isElementVisible(oTR))
	  	{
		  	showElement(oTR);
	     	if (oIFrame.src == cNone)
	      		oIFrame.src = prepURL(<%= makeAction(AC_QUERY_DEF, { {"id", nIDCons}, {"type", nType}, {"oper", nOper}, { "isIFrame", CHKBOX_ON } }) %> + "&amp;_forceReload=" + new Date().getTime().toString(16));
	 	} else
		  	hideElement(oTR);
  	}
} 

function showAbaExec()
{                   
  var oIFrame = getElement('queryExecIframe');
  var cNone;
 
  if (oBw.ie8) {
    cNone = location.href + '<%=AC_NONE%>';
  } else {
    cNone = (oBw.ff ? location.href : '') + '<%=AC_NONE%>';
  }
  
  if (oIFrame) {
	  var oTR = getElement('queryExecAction');
    var oTRMsg = getElement('queryMsgLabel');
    if (!isElementVisible(oTR)) {                        
      hideElement(oTRMsg);
     	if (oIFrame.src == cNone) {
			  oIFrame.src = prepURL(<%= makeAction(AC_QUERY_EXEC, { {"id", nIDCons}, {"type", nType}, {"oper", nOper}, {"showTitle", "false"}, { "isIFrame", CHKBOX_ON } }) %> + "&amp;_forceReload=" + new Date().getTime().toString(16) );
			}  
	  	showElement(oTR);
		} else
	    hideElement(oTR);
	}
} 
           
function u_setWindowPosSize() 
{
}

function u_bodyonload()
{
	// evita o redimencionamento automático
<% if lShowExec %>
	showAbaExec()
<% else %>
	showAbaDef()
<% endif %>
}
</script>