<%
// ######################################################################################
// Projeto: DATA WAREHOUSE
// Modulo : Actions
// Fonte  : dwUsersGroups - Manutenção de Grupos de Usuários
// ---------+-------------------+--------------------------------------------------------
// Data     | Autor             | Descricao
// ---------+-------------------+--------------------------------------------------------
// 28.11.05 |2481-Paulo R Vieira| Versão 3
// --------------------------------------------------------------------------------------

#include "dwincs.ch"
#include "dwUsersGroups.ch"

Local nID := DwVal(HttpGet->ID)
Local oGroups
Local aFields := {}
Local cNome, cLogin, cPswd, lAtivo
Local lDelUsr := .F.

if HttpGet->Action == AC_REC_MANUT
	nID := DwVal(HttpGet->ID)
	
	oGroups := initTable(TAB_USER)
	HttpGet->Oper := DwVal(HttpGet->Oper)
	if HttpGet->Oper == OP_SUBMIT
		nID := DwVal(HttpPost->edID)
		
		if HttpSession->subOper == OP_REC_EDIT .and. oGroups:seek(1, { nID })
			if !empty(HttpPost->edSenha)
				HttpPost->edSenha := dwCripto(pswencript(HttpPost->edSenha), PASSWORD_SIZE, 0)
			else
				if oUser:seek(1, { nID })
					HttpPost->edSenha := oGroups:value("senha")
	         endif
			endif
			lOperOK 	:= oGroups:update(oGroups:fromPost(HttpPost->APost))
		elseif HttpSession->subOper == OP_REC_DEL .and. oGroups:seek(1, { nID })
			// Não permite a exclusão do grupo de Administradores e de usuários
			If Alltrim(HttpPost->edLogin) == "GRP_ADM" .Or. Alltrim(HttpPost->edLogin) == "GRP_USR"
				lOperOK	:= .F.
				lDelUsr := .T.
			Else
				lOperOK	:= oGroups:delete()
			Endif
		else
			HttpPost->edID := NIL
			if lOperOK := oGroups:append(oGroups:fromPost(HttpPost->APost))
				nID 		:= oGroups:value("id")
			endif
		endif
		
		if !lOperOK
			If !lDelUsr
				DwRaise(ERR_002, SOL_000, oGroups:Msg(.T.))
			Else
				DwRaise(ERR_014, SOL_008, oGroups:Msg(.T.))
			Endif
		endif
		
	else
		HttpSession->subOper := HttpGet->Oper
		
	endif
	
	if oGroups:seek(1, 	{ nID })
		cNome 	:= oGroups:value("nome")
		cLogin	:= oGroups:value("login")
		lAtivo 	:= oGroups:value("ativo")
	else
		cNome 	:= ''
		cLogin	:=	"DWL" + randByDate() + randByTime()
		cPswd		:= dwCripto(pswencript("DWADMP" + randByDate() + randByTime() + "PSDW"), PASSWORD_SIZE, 0)
		lAtivo 	:= .F.
	endif
	
	makeHidden(aFields, 	'edID', 		nID)
	makeHidden(aFields, 	'edLogin',	cLogin)
	makeHidden(aFields, 	'edSenha',  cPswd)
	makeField(aFields, 	'edNome', 	STR0001, 	.T., 'C', 30, 0, , cNome) //'Nome'
	makeHidden(aFields, 	'edTipo', 	'G')
	makeField(aFields, 	'edAtivo',	STR0002, .T., 'L',  1, 0, , lAtivo) //'Ativo'
	%>
	<%= buildForm("frmUsers", STR0003, AC_REC_MANUT, OP_SUBMIT, , aFields) %> <%= /*"Grupos"*/ %>
	
	<% if HttpGet->Oper == OP_SUBMIT %>
  		<%=buildAutoClose()%>
	<% endif %>
	
<% else %>
	
   <%= buildBrowse(STR0004, .T., TAB_USER, { { "ID", "N", 10, 0, "ID", .F. }, { "NOME", "C", 30, 0, STR0001, .T. }, { "ATIVO", "L", 1, 0, STR0002, .T. } }, , , , { "TIPO='G'" }) %> <%= /*"Manutenção de Grupos de Usuários"###"ID"###"Nome"###"Ativo"*/ %>
	
<% endif %>