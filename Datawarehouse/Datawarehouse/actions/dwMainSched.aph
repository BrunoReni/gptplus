<%
// ######################################################################################
// Projeto: DATA WAREHOUSE
// Modulo : Actions
// Fonte  : dwMainSched - Apresenta os agendamentos 
// ---------+-------------------+--------------------------------------------------------
// Data     | Autor             | Descricao
// ---------+-------------------+--------------------------------------------------------
// 19.10.05 | 0548-Alan Candido | Versão 3
// 05.08.08 | 0548-Alan Candido | BOPS 149441
//          |                   | Implementação de informações adicionais para identificação
//          |                   | do processo agendado.
// 25.11.08 | 0548-Alan Candido | FNC 00000007374/2008 (10) e 00000007385/2008 (8.11)
//          |                   | Tratamento de registro com conteúdo inválido (ID=0)   
// --------------------------------------------------------------------------------------

#include "dwincs.ch"                                           
#include "dwMainSched.ch"

local aButtons := {}
local oSXM := initTable(TAB_SXM)

if isNull(HttpGet->sinc, CHKBOX_OFF) == CHKBOX_ON
	oSXM:goTop()
	while !oSXM:eof()
		oSXM:update( { { "XM_TIPO", oSXM:value("XM_TIPO") } } ) // força uma atualização
		oSXM:_next()
	enddo
endif  

makeItemToolbar(aButtons, STR0001, STR0002, "ic_sincronizar.gif", "js:doSinc()", "right") //"Efetua a sincronização do SigaDW com serviço de agendamento do SigaAdv"###"Sincronizar"
%>
<%=buildBrowse(STR0004, .f., TAB_SXM, , , , { |aaData| prepRow(aaData, oSXM)}, , , , , , , , , , aButtons)%> <%= /*"Agendamento"*/ %>
<%= tagJS() %>
function doSinc()
{
	var cURL = location.href;
	cURL = prepParam(cURL, 'sinc', '<%=CHKBOX_ON%>');
	doLoadHere(cURL);
}
</script>
<%
return __Response

static function prepRow(aaData, aoSXM)
	local aPerio := dwComboOptions(PERIODICIDADE_SCHD)
	local nPos, cAux, cNome := "", nIDDW := -1
	local	oTempDW := initTable(TAB_DW), lRet
	
	if !aoSXM:isOpen()
		aoSXM:Open()
	endif
	
	oTempDsn := initTable(TAB_DSN)
	if aaData[1] == 0
		lRet := .f.
	else
		aoSXM:seek(1, { aaData[1] })
		
		if aaData[3] == AG_EXP
			cNome := left(aoSXM:value("info"), 30)
			nIDDW := dwVal(left(cNome,5))
			cNome := substr(cNome,6)
		elseif oTempDsn:seek(1, {aoSXM:value("id_dsn")} )
			if oTempDsn:value("TIPO") == "D"
				oTempDF := initTable(TAB_DIMENSAO)
			else
				oTempDF := initTable(TAB_CUBESLIST)
			endif
			if oTempDF:seek(1, { oTempDsn:value("ID_TABLE") } )
				cNome := left(oTempDF:value("descricao"), 25)
				nIDDW := oTempDF:value("ID_DW")
			else
				cAux := dwStr(aoSXM:value("dsn") + " - ...")
			endif
		else
			cNome := STR0005 +"*****" //###"Origem não localizada"
		endif
		
		if oTempDW:seek(1, { nIDDW } )
			cAux := dwStr(aoSXM:value("dsn") + " [" + oTempDW:value("nome") + "]")
		else
			cAux := dwStr(aoSXM:value("dsn") + " - ...")
		endif
		
		aaData[2] := "<span style='float:left'>" + substr(cAux, at(":", cAux)+1) + "</span>"
		
		if aaData[3] == AG_IMP .or. aaData[3] == AG_DSN
			aaData[3] := STR0006 + ": " + substr(cAux, 1, at(":", cAux)-1) //###"Importação"
		else
			aaData[3] := STR0007 + ": " + STR0008 //###"Exportação"###"Consulta"
		endif
		
		aaData[3] := "<span style='float:left'>" + aaData[3] + "</span><br>"
		aaData[3] += "<span style='float:left'>" + cNome + "</span>"
		
		cAux := aoSXM:value("XM_PROXEXEC")
		if left(cAux, 2) == "**"
			cAux := ""
		else
			cAux := " <small>(" + cAux + ")</small>"
		endif
		aaData[4] := dwStr(aaData[4])
		nPos := ascan(aPerio, { |x| x[2] == aaData[4]})
		aaData[4] := "<span style='float:left'>"+aPerio[nPos,1]	+ cAux + "</span>"
	endif

return lRet