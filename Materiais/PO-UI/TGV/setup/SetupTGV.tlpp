#INCLUDE "tlpp-core.th"
#INCLUDE "TOTVS.CH"
#INCLUDE "FWMVCDEF.CH"
#INCLUDE "SETUPTGV.CH"
#INCLUDE "TBICONN.CH"
#INCLUDE "FILEIO.CH"

#DEFINE COMPANY 1
#DEFINE COMPANYDESC 2
#DEFINE BRANCH  3
#DEFINE BRANCHDESC 4
#DEFINE CUSER "admin"

static cError := "" as character

//---------------------------------------------------------------------------------------------------------------------------------
/*/{Protheus.doc} makeStampPGV
	Atualiza a estrutura das tabelas, incluindo o campo S_T_A_M_P_
	@type	function
	@author Squad CRM & Faturamento
	@since  25/02/2021
	@version 12.1.27
	@param	isBlind	   , logical   , não possui interface gráfica? - Mantido por compatibilidade com chamadas pre-existentes
	@param  aTables    , array     , Lista com as tabelas a serem 
									 processadas
	@return lProcessed , logical   , indica se o campo foi criado ou 
									 nao
/*/
//--------------------------------------------------------------------------------------------------------------------------------
Function makeStampPGV(isBlind as Logical, aTables as Array)
	Local cSVAlias  	:= Alias() as character
	Local lAutoStampON	as logical
	Local lUserStampON	as logical
	Local nI        	as numeric
	Local lProcessed    as logical

	Default aTables := ListTablesPGV(isBlind)

	ResetErrorMsg()

	if Len(aTables) > 0
		TCLink()

		lAutoStampON := TCConfig("GETAUTOSTAMP") == "ON"
		lUserStampON := TCConfig("GETUSEROWSTAMP") == "ON"

		if !lAutoStampON
			TCConfig("SETAUTOSTAMP=ON")
		endIf

		if !lUserStampON
			TCConfig("SETUSEROWSTAMP=ON")
		endIf

		for nI := 1 to len(aTables)
			DbSelectArea(aTables[nI][1])
			( aTables[nI][1] )->(DbCloseArea())
			lProcessed := FWEnableStamp(aTables[nI][1])
			DbSelectArea(aTables[nI][1])
		next

		if !Empty(cSvAlias)
			DbSelectArea(cSvAlias)
		endIf

		if !lAutoStampON
			TCConfig("SETAUTOSTAMP=OFF")
		endIf

		if !lUserStampON
			TCConfig("SETUSEROWSTAMP=OFF")
		endIf

		TCUnlink()
	endIf

	aSize(aTables, 0)
return lProcessed

//--------------------------------------------------------------------------------------------------------------------------
/*/{Protheus.doc} ListTablesPGV
	Carregar a Lista de Tabelas
	@type	function
	@version 12.1.27
	@author Squad CRM & Faturamento
	@since  25/02/2021
	@param	isBlind	, logical	, não possui interface gráfica?  - Mantido por compatibilidade com chamadas pre-existentes
	@return	Array, Lista de Tabelas
/*/
//--------------------------------------------------------------------------------------------------------------------------
Function ListTablesPGV(isBlind as Logical) as ARRAY
	Local aTables := {} as Array
	Local lExistTables

	aAdd(aTables, {"AC8", RetSqlName("AC8")})
	aAdd(aTables, {"AGB", RetSqlName("AGB")})
	aAdd(aTables, {"DA0", RetSqlName("DA0")})
	aAdd(aTables, {"DA1", RetSqlName("DA1")})
	aAdd(aTables, {"SA1", RetSqlName("SA1")})
	aAdd(aTables, {"SA3", RetSqlName("SA3")})
	aAdd(aTables, {"SA4", RetSqlName("SA4")})
	aAdd(aTables, {"SB1", RetSqlName("SB1")})
	aAdd(aTables, {"SB2", RetSqlName("SB2")})
	aAdd(aTables, {"SC5", RetSqlName("SC5")})
	aAdd(aTables, {"SC6", RetSqlName("SC6")})
	aAdd(aTables, {"SC9", RetSqlName("SC9")})
	aAdd(aTables, {"SCJ", RetSqlName("SCJ")})
	aAdd(aTables, {"SCK", RetSqlName("SCK")})
	aAdd(aTables, {"SE1", RetSqlName("SE1")})
	aAdd(aTables, {"SE4", RetSqlName("SE4")})
	aAdd(aTables, {"SU5", RetSqlName("SU5")})
	aAdd(aTables, {"SUS", RetSqlName("SUS")})
	aAdd(aTables, {"SYA", RetSqlName("SYA")})

	If (lExistTables := TGVExistTables())
		aAdd(aTables, {"A1S", RetSqlName("A1S")})
		aAdd(aTables, {"A1T", RetSqlName("A1T")})
		aAdd(aTables, {"A1V", RetSqlName("A1V")})
		aAdd(aTables, {"A1W", RetSqlName("A1W")})
	Else
		aSize(aTables, 0)
	Endif

	ErrorMsgSetupTGV(STR0019, lExistTables)

	If AliasInDic("A1U") .and. cPaisLoc == "BRA"// Intermediadores
		aAdd(aTables, {"A1U", RetSqlName("A1U")})
	Endif

Return aTables

//--------------------------------------------------------------------
/*/{Protheus.doc} chargeSchemas
	Inclui todos Schemas e Campos utilizados como padrão no
	TOTVS Gestão de Vendas
	@type	function
	@author Danilo Salve / CRM & Faturamento
	@since  14/04/2021
	@version 12.1.27
	@return logical, Se conseguiu atualizar os schemas retorna verdadeiro.
/*/
//--------------------------------------------------------------------
Function chargeSchemas() as Logical
	Local aArea   := GetArea() as Array
	Local bError  := Errorblock({|e| (ErrorMsgSetupTGV(e:Description) , Break(e))}) as Codeblock
	Local lRet    := .F. as Logical
	DbSelectArea("A1V")
	A1V->(DbSetOrder(1))

	ResetErrorMsg()

	BEGIN SEQUENCE
		lRet := UploadSchemaNotification()

		If lRet
			lRet := UploadSchemaCustomer()
		Endif

		If lRet
			lRet := UploadSchemaContacts()
		Endif

		If lRet
			lRet := UploadSchemaPhoneContacts()
		Endif

		If lRet
			lRet := UploadSchemaFinancialCustomerStatus()
		Endif

		If lRet
			lRet := UploadSchemaPriceListHeader()
		Endif

		If lRet
			lRet := UploadSchemaPriceListItem()
		Endif

		If lRet
			lRet := UploadSchemaPaymentConditions()
		Endif

		If lRet
			lRet := UploadSchemaSalesOrders()
		Endif
		If lRet
			lRet := UploadSchemaSalesOrdersItems()
		Endif

		If lRet
			lRet := UploadSchemaCarriers()
		Endif

		If lRet
			lRet := UploadSchemaProducts()
		Endif

		If lRet
			lRet := UploadSchemaProductBalance()
		Endif

		If lRet
			lRet := UploadSchemaIntegrationQueue()
		Endif

		If lRet
			lRet := UploadSchemaAccessLog()
		Endif

		If lRet
			lRet := UploadSchemaProspects()
		Endif

		If lRet
			lRet := UploadSchemaSalesBudgets()
		Endif

		If lRet
			lRet := UploadSchemaSalesBudgetsItems()
		Endif

		If lRet
			lRet := UploadSchemaSchemaFields()
		Endif

		If lRet .and. AliasInDic("A1U") .and. cPaisLoc == "BRA"
			lRet := UploadIntermediaries()
		Endif

		If !lRet
			Break( STR0047 )
		Endif

		RECOVER
		lRet := .F.
	END SEQUENCE

	ErrorMsgSetupTGV(STR0047, lRet)
	ErrorBlock(bError)

	RestArea(aArea)
	aSize(aArea, 0)
Return lRet

//--------------------------------------------------------------------
/*/{Protheus.doc} UploadSchemaNotification
	Inclui o Schema/Campo de Notificações
	@type	function
	@author Danilo Salve / CRM & Faturamento
	@since  14/04/2021
	@version 12.1.27
/*/
//--------------------------------------------------------------------
Static Function UploadSchemaNotification() as Logical
	Local aSchema := {} as Array
	Local aFields := {} as Array
	Local lRet as Logical

	aSchema := AddSchema('000001', 'Notification', STR0049, 'api/tgv/notifications/sync' ,;
		'api/tgv/notifications/sync/diff', 'id', 'deleted', '2', 'api/tgv/notifications', 'api/tgv/notifications', 'api/tgv/notifications')

	AddField('01', 'A1S_FILIAL, A1S_CODIGO, A1S_CODUSR', 'internalid' , STR0050, '1' ,.F., .F., .T., @aFields)
	AddField('02', 'A1S_CODIGO' , 'id'          , FWX3Titulo('A1S_CODIGO'), '1' , .F., .F., .T., @aFields)
	AddField('03', 'A1S_TITULO' , 'title'       , FWX3Titulo('A1S_TITULO'), '1' , .F., .F., .T., @aFields)
	AddField('04', 'A1S_DESC'   , 'description' , FWX3Titulo('A1S_DESC')  , '6' , .F., .F., .T., @aFields)
	AddField('05', 'A1S_TIPO'   , 'type'        , FWX3Titulo('A1S_TIPO')  , '1' , .F., .F., .T., @aFields)
	AddField('06', 'A1S_CODUSR' , 'userid'      , FWX3Titulo('A1S_CODUSR'), '1' , .F., .F., .T., @aFields)
	AddField('07', 'A1S_DATA'   , 'notificationdate' , FWX3Titulo('A1S_DATA'), '3' , .F., .F., .T., @aFields)
	AddField('08', 'A1S_HORA'   , 'notificationtime' , FWX3Titulo('A1S_HORA'), '1' , .F., .F., .T., @aFields)
	AddField('09', 'A1S_STATUS' , 'notificationstatus', FWX3Titulo('A1S_STATUS'), '1' , .F., .F., .T., @aFields)
	AddField('10', 'A1S_MOV'    , 'movimentationstatus', FWX3Titulo('A1S_MOV'), '2' , .F., .F., .T., @aFields)
	AddField('11', 'A1S.D_E_L_E_T_', 'deleted' ,"D_E_L_E_T_", '1' ,.F., .F., .F., @aFields)

	lRet := CommitSchema(aSchema, aFields, STR0025) // Incluindo Schema de Notificações do Vendedor

	ErrorMsgSetupTGV(STR0048, lRet)	// Não foi possivel incluir o Schema de Notificações.

	aSize(aFields, 0)
	aSize(aSchema, 0)
Return lRet

//--------------------------------------------------------------------
/*/{Protheus.doc} UploadSchemaCustomer
	Inclui o Schema/Campo de Clientes
	@type	function
	@author Danilo Salve / CRM & Faturamento
	@since  14/04/2021
	@version 12.1.27
/*/
//--------------------------------------------------------------------
Static Function UploadSchemaCustomer() as Logical
	Local aSchema := {} as Array
	Local aFields := {} as Array
	Local lRet as Logical

	aSchema := AddSchema('000002', 'Customer', STR0051, 'api/tgv/customers/sync' , 'api/tgv/customers/sync/diff', 'id', 'deleted', '2')

	AddField('01', 'A1_FILIAL, A1_COD, A1_LOJA', 'id' , STR0050, '1' , .F., .F., .T., @aFields)
	AddField('02', 'A1_FILIAL'  , 'branch'  , FWX3Titulo('A1_FILIAL'), '1' , .F., .F., .T., @aFields)
	AddField('03', 'A1_COD'     , 'code'    , FWX3Titulo('A1_COD'), '1' , .F., .F., .T., @aFields)
	AddField('04', 'A1_LOJA'    , 'store'   , FWX3Titulo('A1_LOJA'), '1' , .F., .F., .T., @aFields)
	AddField('05', 'A1_NOME'    , 'name'    , FWX3Titulo('A1_NOME'), '1' , .F., .F., .T., @aFields)
	AddField('06', 'A1_NREDUZ'  , 'fantasy' , FWX3Titulo('A1_NREDUZ'), '1' , .F., .F., .T., @aFields)
	AddField('07', 'A1_INSCRM'  , 'municipalregistration' , FWX3Titulo('A1_INSCRM'), '1' , .F., .F., .T., @aFields)
	AddField('08', 'A1_INSCR'   , 'estadualregistration' , FWX3Titulo('A1_INSCR'), '1' , .F., .F., .T., @aFields)
	AddField('09', 'A1_TIPO'    , 'customertype' , FWX3Titulo('A1_TIPO'), '1' , .F., .F., .T., @aFields)
	AddField('10', 'A1_PESSOA'  , 'persontype' , FWX3Titulo('A1_PESSOA'), '1' , .F., .F., .T., @aFields)
	AddField('11', 'A1_CGC'     , 'cgc' , FWX3Titulo('A1_CGC'), '1' , .F., .F., .T., @aFields)
	AddField('12', 'A1_COND'    , 'paymentsconditions' , FWX3Titulo('A1_COND'), '1' , .F., .F., .T., @aFields)
	AddField('13', 'SE4.E4_FILIAL, SA1.A1_COND', 'paymentconditioninternalid' , STR0052, '1' , .F., .F., .T., @aFields)
	AddField('14', 'A1_TABELA'  , 'pricelist' , FWX3Titulo('A1_TABELA'), '1' ,.F., .F., .T., @aFields)
	AddField('15', 'DA0.DA0_FILIAL, SA1.A1_TABELA', 'pricelistinternalid' , STR0053, '1' , .F., .F., .T., @aFields)
	AddField('16', 'A1_VEND'    , 'vendor' , FWX3Titulo('A1_VEND'), '1' , .F., .F., .T., @aFields)
	AddField('17', 'A1_COD_MUN' , 'citycode' , FWX3Titulo('A1_COD_MUN'), '1' , .F., .F., .T., @aFields)
	AddField('18', 'A1_MUN'     , 'city' , FWX3Titulo('A1_MUN'), '1' , .F., .F., .T., @aFields)
	AddField('19', 'A1_BAIRRO'  , 'neighborhood' , FWX3Titulo('A1_BAIRRO'), '1' , .F., .F., .T., @aFields)
	AddField('20', 'A1_END'     , 'address' , FWX3Titulo('A1_END'), '1' , .F., .F., .T., @aFields)
	AddField('21', 'A1_COMPLEM' , 'addresscomplement' , FWX3Titulo('A1_COMPLEM'), '1' , .F., .F., .T., @aFields)
	AddField('22', 'A1_CEP'     , 'zipcode' , FWX3Titulo('A1_CEP'), '1' , .F., .F., .T., @aFields)
	AddField('23', 'A1_EST'     , 'uf' , FWX3Titulo('A1_EST'), '1' , .F., .F., .T., @aFields)
	AddField('24', 'X5_DESCRI'  , 'ufdescription' , FWX3Titulo('X5_DESCRI'), '1' , .F., .F., .T., @aFields)
	AddField('25', 'A1_DDI'     , 'ddi' , FWX3Titulo('A1_DDI'), '1' , .F., .F., .T., @aFields)
	AddField('26', 'A1_DDD'     , 'ddd' , FWX3Titulo('A1_DDD'), '1' , .F., .F., .T., @aFields)
	AddField('27', 'A1_TEL'     , 'phone' , FWX3Titulo('A1_TEL'), '1' , .F., .F., .T., @aFields)
	AddField('28', 'A1_EMAIL'   , 'email' , FWX3Titulo('A1_EMAIL'), '1' , .F., .F., .T., @aFields)
	AddField('29', 'A1_PAIS'    , 'country' , FWX3Titulo('A1_PAIS'), '1' , .F., .F., .T., @aFields)
	AddField('30', 'YA_DESCR'   , 'contrydescription' , FWX3Titulo('YA_DESCR'), '1' , .F., .F., .T., @aFields)
	AddField('31', 'A1_CONTATO' , 'contact' , FWX3Titulo('A1_CONTATO'), '1' , .F., .F., .T., @aFields)
	AddField('32', 'A1_RISCO'   , 'risk' , FWX3Titulo('A1_RISCO'), '1' , .F., .F., .T., @aFields)
	AddField('33', 'A1_LC'      , 'creditlimit' , FWX3Titulo('A1_LC'), '2' , .F., .F., .T., @aFields)
	AddField('34', 'A1_ULTCOM'  , 'lastpurchase' , FWX3Titulo('A1_ULTCOM'), '3' , .F., .F., .T., @aFields)
	AddField('35', 'A1_DTCAD'   , 'inclusiondate' , FWX3Titulo('A1_DTCAD'), '3' , .F., .F., .T., @aFields)
	AddField('36', 'A1_MSBLQL'  , 'status' , FWX3Titulo('A1_MSBLQL'), '1' , .F., .F., .T., @aFields)
	AddField('37', 'A1_TPFRET'  , 'freighttype' , FWX3Titulo('A1_TPFRET'), '1' , .F., .F., .T., @aFields)
	AddField('38', 'A1_TRANSP'  , 'carrier' , FWX3Titulo('A1_TRANSP'), '1' , .F., .F., .T., @aFields)
	AddField('39', 'SA4.A4_FILIAL, SA1.A1_TRANSP', 'carrierinternalid' , STR0054, '1' , .F., .F., .T., @aFields)
	AddField('40', 'SA1.D_E_L_E_T_', 'deleted' ,"D_E_L_E_T_", '1' , .F., .F., .F., @aFields)

	If cPaisLoc == "BRA"
		AddField('41', 'A1_CNAE', 'cnae' , FWX3Titulo('A1_CNAE'), '1' ,.F., .F., .T., @aFields)
	Endif

	lRet := CommitSchema(aSchema, aFields, STR0026)

	ErrorMsgSetupTGV(STR0055, lRet) // "Não foi possivel incluir o Schema de Clientes."

	aSize(aFields, 0)
	aSize(aSchema, 0)
Return lRet

//--------------------------------------------------------------------
/*/{Protheus.doc} UploadSchemaContacts
	Inclui o Schema/Campo de Contatos
	@type	function
	@author Danilo Salve / CRM & Faturamento
	@since  14/04/2021
	@version 12.1.27
/*/
//--------------------------------------------------------------------
Static Function UploadSchemaContacts() as Logical
	Local aSchema := {} as Array
	Local aFields := {} as Array
	Local lRet as Logical

	aSchema := AddSchema('000003', 'Contacts', STR0056, 'api/tgv/contacts/sync' , 'api/tgv/contacts/sync/diff', 'internalid', 'deleted', '2')

	AddField('01', 'U5_FILIAL, A1_CGC, U5_CODCONT', 'internalid' , STR0050, '1' ,.F., .F., .T., @aFields)
	AddField('02', 'U5_FILIAL, U5_CODCONT', 'contactid' , STR0057, '1' ,.F., .F., .T., @aFields)
	AddField('03', 'U5_FILIAL', 'branch' , FWX3Titulo('U5_FILIAL'), '1' ,.F., .F., .T., @aFields)
	AddField('04', 'U5_CODCONT', 'code' , FWX3Titulo('U5_CODCONT'), '1' ,.F., .F., .T., @aFields)
	AddField('05', 'A1_CGC', 'cgcentity' , FWX3Titulo('A1_CGC'), '1' ,.F., .F., .T., @aFields)
	AddField('06', 'U5_CONTAT', 'name' , FWX3Titulo('U5_CONTAT'), '1' ,.F., .F., .T., @aFields)
	AddField('07', 'U5_EMAIL', 'email' , FWX3Titulo('U5_EMAIL'), '1' ,.F., .F., .T., @aFields)
	AddField('08', 'SU5.D_E_L_E_T_', 'deleted' ,"D_E_L_E_T_", '1' ,.F., .F., .F., @aFields)

	lRet := CommitSchema(aSchema, aFields, STR0027)

	ErrorMsgSetupTGV(STR0058, lRet) // "Não foi possivel incluir o Schema de Contatos."

	aSize(aFields, 0)
	aSize(aSchema, 0)
Return lRet

//--------------------------------------------------------------------
/*/{Protheus.doc} UploadSchemaPhoneContacts
	Inclui o Schema/Campo dos Telefones do Contatos
	@type	function
	@author Danilo Salve / CRM & Faturamento
	@since  14/04/2021
	@version 12.1.27
	@return Logical, se conseguiu atualizar o schema retorna verdadeiro
/*/
//--------------------------------------------------------------------
Static Function UploadSchemaPhoneContacts() as Logical
	Local aSchema := {} as Array
	Local aFields := {} as Array
	Local lRet as Logical

	aSchema := AddSchema('000004', 'PhoneContacts', STR0059, 'api/tgv/phonecontacts/sync' ,;
		'api/tgv/phonecontacts/sync/diff', 'internalid', 'deleted', '2')

	AddField('01', 'AGB_FILIAL, AGB_CODIGO, AGB_CODENT', 'internalid' , STR0050, '1' ,.F., .F., .T., @aFields)
	AddField('02', 'AGB_FILIAL, AGB_CODENT', 'contactinternalid' , STR0060, '1' , .F., .F., .T., @aFields)
	AddField('03', 'AGB_FILIAL' , 'branch'    , FWX3Titulo('AGB_FILIAL'), '1' , .F., .F., .T., @aFields)
	AddField('04', 'AGB_CODIGO' , 'code'      , FWX3Titulo('AGB_CODIGO'), '1' , .F., .F., .T., @aFields)
	AddField('05', 'AGB_CODENT' , 'contact'   , FWX3Titulo('AGB_CODENT'), '1' , .F., .F., .T., @aFields)
	AddField('06', 'AGB_TIPO'   , 'phonetype' , FWX3Titulo('AGB_TIPO')  , '1' , .F., .F., .T., @aFields)
	AddField('07', 'AGB_DDD'    , 'ddd'       , FWX3Titulo('AGB_DDD')   , '1' , .F., .F., .T., @aFields)
	AddField('08', 'AGB_DDI'    , 'ddi'       , FWX3Titulo('AGB_DDI')   , '1' , .F., .F., .T., @aFields)
	AddField('09', 'AGB_TELEFO' , 'phone'     , FWX3Titulo('AGB_TELEFO'), '1' , .F., .F., .T., @aFields)
	AddField('10', 'AGB_COMP'   , 'complement', FWX3Titulo('AGB_COMP')  , '1' , .F., .F., .T., @aFields)
	AddField('11', 'AGB.D_E_L_E_T_', 'deleted' ,"D_E_L_E_T_", '1' ,.F., .F., .F., @aFields)


	lRet := CommitSchema(aSchema, aFields, STR0028)

	ErrorMsgSetupTGV(STR0061, lRet)	// "Não foi possivel incluir o Schema de Telefones do Contato."

	aSize(aFields, 0)
	aSize(aSchema, 0)
Return lRet

//--------------------------------------------------------------------
/*/{Protheus.doc} UploadSchemaFinancialCustomerStatus
	Inclui o Schema/Campo de Status Financeiro do Cliente
	@type	function
	@author Danilo Salve / CRM & Faturamento
	@since  14/04/2021
	@version 12.1.27
/*/
//--------------------------------------------------------------------
Static Function UploadSchemaFinancialCustomerStatus() as Logical
	Local aSchema := {} as Array
	Local aFields := {} as Array
	Local lRet as Logical

	aSchema := AddSchema('000005', 'Financialstatus', STR0062, 'api/tgv/financialstatus/sync' ,;
		'api/tgv/financialstatus/sync/diff', 'id', 'deleted', '2')

	AddField('01', 'A1_FILIAL, A1_COD, A1_LOJA'	, 'id' , STR0050, '1' , .F., .F., .T., @aFields)
	AddField('02', 'A1_FILIAL'	, 'branch'    	, FWX3Titulo('A1_FILIAL') 	, '1' , .F., .F., .T., @aFields)
	AddField('03', 'A1_COD'		, 'code'      	, FWX3Titulo('A1_COD')    	, '1' , .F., .F., .T., @aFields)
	AddField('04', 'A1_LOJA'	, 'store' 		, FWX3Titulo('A1_LOJA')		, '1' , .F., .F., .T., @aFields)
	AddField('05', 'Titulo'   	, 'oldestdue' 	, STR0063               	, '3' , .F., .F., .T., @aFields)
	AddField('06', 'SA1.D_E_L_E_T_', 'deleted'	,  "D_E_L_E_T_"        		, '1' , .F., .F., .F., @aFields)

	lRet := CommitSchema(aSchema, aFields, STR0029)
	
	ErrorMsgSetupTGV(STR0064, lRet)	//"Não foi possivel incluir o Schema de Notificações."

	aSize(aFields, 0)
	aSize(aSchema, 0)
Return lRet

//--------------------------------------------------------------------
/*/{Protheus.doc} UploadSchemaPriceListHeader
	Inclui o Schema/Campo de Cabec. Tab. de Preços
	@type	function
	@author Danilo Salve / CRM & Faturamento
	@since  14/04/2021
	@version 12.1.27
/*/
//--------------------------------------------------------------------
Static Function UploadSchemaPriceListHeader() as Logical
	Local aSchema := {} as Array
	Local aFields := {} as Array
	Local lRet as Logical

	aSchema := AddSchema('000006', 'PriceListHeader', STR0065, 'api/tgv/priceList',;
		'api/tgv/priceList/diff', 'internalid', 'deleted', '2')

	AddField('01', 'DA0_FILIAL, DA0_CODTAB', 'internalid' , STR0050, '1' ,.F., .F., .T., @aFields)
	AddField('02', 'DA0_CODTAB'     , 'code'              , FWX3Titulo('DA0_CODTAB')  , '1' ,.F., .F., .T., @aFields)
	AddField('03', 'DA0_DESCRI'     , 'description'       , FWX3Titulo('DA0_DESCRI')  , '1' ,.F., .F., .T., @aFields)
	AddField('04', 'DA0_ATIVO'      , 'status'            , FWX3Titulo('DA0_ATIVO')   , '1' ,.F., .F., .T., @aFields)
	AddField('05', 'DA0_DATDE'      , 'inicialdate'       , FWX3Titulo('DA0_DATDE')   , '3' ,.F., .F., .T., @aFields)
	AddField('06', 'DA0_DATATE'     , 'finaldate'         , FWX3Titulo('DA0_DATATE')  , '3' ,.F., .F., .T., @aFields)
	AddField('07', 'DA0_CONDPG'     , 'paymentcondition'  , FWX3Titulo('DA0_CONDPG')  , '1' ,.F., .F., .T., @aFields)
	AddField('08', 'DA0.D_E_L_E_T_' , 'deleted'           , 'D_E_L_E_T_', '1' ,.F., .F., .F., @aFields)

	lRet := CommitSchema(aSchema, aFields, STR0030)
		
	ErrorMsgSetupTGV(STR0066, lRet)	// "Não foi possivel incluir o Schema de Cabec. da Tabela de Preços."

	aSize(aFields, 0)
	aSize(aSchema, 0)
Return lRet

//--------------------------------------------------------------------
/*/{Protheus.doc} UploadSchemaPriceListItem
	Inclui o Schema/Campo de Itens da Tabela de Preço
	@type	function
	@author Danilo Salve / CRM & Faturamento
	@since  14/04/2021
	@version 12.1.27
/*/
//--------------------------------------------------------------------
Static Function UploadSchemaPriceListItem() as Logical
	Local aSchema := {} as Array
	Local aFields := {} as Array
	Local lRet as Logical

	aSchema := AddSchema('000007', 'PriceListItem', STR0067, 'api/tgv/priceList/items' ,;
		'api/tgv/priceList/items/diff', 'internalid', 'deleted', '2')

	AddField('01', 'DA1_FILIAL, DA1_CODTAB, DA1_ITEM', 'internalid' , STR0050, '1' ,.F., .F., .T., @aFields)
	AddField('02', 'DA1_FILIAL, DA1_CODTAB', 'headerid' , STR0068, '1' ,.F., .F., .T., @aFields)
	AddField('03', 'DA1_CODTAB'     , 'pricelist'   , FWX3Titulo('DA1_CODTAB')  , '1' , .F., .F., .T., @aFields)
	AddField('04', 'DA1_ITEM'       , 'item'        , FWX3Titulo('DA1_ITEM')    , '1' , .F., .F., .T., @aFields)
	AddField('05', 'DA1_CODPRO'     , 'product'     , FWX3Titulo('DA1_CODPRO')  , '1' , .F., .F., .T., @aFields)
	AddField('06', 'B1_PRV1'        , 'baseprice'   , FWX3Titulo('B1_PRV1')     , '2' , .F., .F., .T., @aFields)
	AddField('07', 'DA1_PRCVEN'     , 'salesprice'  , FWX3Titulo('DA1_PRCVEN')  , '2' , .F., .F., .T., @aFields)
	AddField('08', 'DA1_DATVIG'     , 'validity'    , FWX3Titulo('DA1_DATVIG')  , '3' , .F., .F., .T., @aFields)
	AddField('09', 'DA1_GRUPO'      , 'productgroup', FWX3Titulo('DA1_GRUPO')   , '1' , .F., .F., .T., @aFields)
	AddField('10', 'DA1_VLRDES'     , 'discountvalue' , FWX3Titulo('DA1_VLRDES'), '2' , .F., .F., .T., @aFields)
	AddField('11', 'DA1_ESTADO'     , 'state'       , FWX3Titulo('DA1_ESTADO')  , '1' , .F., .F., .T., @aFields)
	AddField('12', 'DA1.D_E_L_E_T_' , 'deleted'     , "D_E_L_E_T_", '1' ,.F., .F., .F., @aFields)

	lRet := CommitSchema(aSchema, aFields, STR0031)

	ErrorMsgSetupTGV(STR0069, lRet) // "Não foi possivel incluir o Schema de Itens da Tabela de Preços."

	aSize(aFields, 0)
	aSize(aSchema, 0)
Return lRet

//--------------------------------------------------------------------
/*/{Protheus.doc} UploadSchemaPaymentConditions
	Inclui o Schema/Campo de Condição de Pagamento
	@type	function
	@author Danilo Salve / CRM & Faturamento
	@since  14/04/2021
	@version 12.1.27
/*/
//--------------------------------------------------------------------
Static Function UploadSchemaPaymentConditions() as Logical
	Local aSchema := {} as Array
	Local aFields := {} as Array
	Local lRet as Logical

	aSchema := AddSchema('000008', 'PaymentConditions', STR0070, 'api/tgv/paymentconditions' ,;
		'api/tgv/paymentconditions/diff', 'internalid', 'deleted', '2')

	AddField('01', 'E4_FILIAL, E4_CODIGO'             , 'internalid' , STR0050  , '1' , .F., .F., .T., @aFields)
	AddField('02', 'E4_FILIAL', 'branchid'            , FWX3Titulo('E4_FILIAL') , '1' , .F., .F., .T., @aFields)
	AddField('03', 'E4_CODIGO', 'paymentcode'         , FWX3Titulo('E4_CODIGO') , '1' , .F., .F., .T., @aFields)
	AddField('04', 'E4_DESCRI', 'paymentdescription'  , FWX3Titulo('E4_DESCRI') , '1' , .F., .F., .T., @aFields)
	AddField('05', 'SE4.D_E_L_E_T_', 'deleted' ,"D_E_L_E_T_", '1' ,.F., .F., .F., @aFields)

	If cPaisLoc == "BRA"
		AddField('06', 'E4_MSBLQL', 'status' 			  , FWX3Titulo('E4_MSBLQL')	, '1' ,.F., .F., .F., @aFields)
	Endif
	lRet := CommitSchema(aSchema, aFields, STR0032)

	ErrorMsgSetupTGV(STR0071, lRet) // "Não foi possivel incluir o Schema de Condições de Pagamentos."

	aSize(aFields, 0)
	aSize(aSchema, 0)
Return lRet

//--------------------------------------------------------------------
/*/{Protheus.doc} UploadSchemaSalesOrders
	Inclui o Schema/Campo de Cabeçalhos de Pedidos de Venda
	@type	function
	@author Danilo Salve / CRM & Faturamento
	@since  14/04/2021
	@version 12.1.27
/*/
//--------------------------------------------------------------------
Static Function UploadSchemaSalesOrders() as Logical
	Local aSchema := {} as Array
	Local aFields := {} as Array
	Local lRet as Logical

	aSchema := AddSchema('000009', 'SalesOrders', STR0072, 'api/tgv/salesorders/sync',;
		'api/tgv/salesorders/sync/diff', 'externalid', 'deleted', '2', 'api/tgv/salesorders/sync',;
		'api/tgv/salesorders/sync', 'api/tgv/salesorders/sync')

	AddField('01', 'C5_FILIAL, C5_NUM', 'internalid' , STR0050, '1' ,.F., .F., .T., @aFields)
	AddField('02', 'C5_NUMEXT'  , 'externalid'  , FWX3Titulo('C5_NUMEXT') , '1' ,.F., .F., .T., @aFields)
	AddField('03', 'C5_FILIAL'  , 'branchid'    , FWX3Titulo('C5_FILIAL') , '1' ,.F., .F., .T., @aFields)
	AddField('04', 'C5_NUM'     , 'orderid'     , FWX3Titulo('C5_NUM')    , '1' ,.F., .F., .T., @aFields)
	AddField('05', 'C5_TIPO'    , 'ordertype'   , FWX3Titulo('C5_TIPO')   , '1' ,.F., .F., .T., @aFields)
	AddField('06', 'C5_TABELA'  , 'pricelistid' , FWX3Titulo('C5_TABELA') , '1' ,.F., .F., .T., @aFields)
	AddField('07', 'C5_CONDPAG' , 'paymentconditionid' , FWX3Titulo('C5_CONDPAG'), '1' ,.F., .F., .T., @aFields)
	AddField('08', 'E4_FILIAL, E4_CODIGO', 'paymentinternalid' , STR0052  , '1' ,.F., .F., .T., @aFields)
	AddField('09', 'C5_EMISSAO' , 'issuedate'   , FWX3Titulo('C5_EMISSAO'), '3' ,.F., .F., .T., @aFields)
	AddField('10', 'A1_FILIAL, A1_COD, A1_LOJA', 'customerinternalid' , STR0073, '1' ,.F., .F., .T., @aFields)
	AddField('11', 'A1_COD, A1_LOJA', 'customerid' ,"Id. Cliente"         , '1' ,.F., .F., .T., @aFields)
	AddField('12', 'A1_NOME'    , 'customername' , FWX3Titulo('A1_NOME')  , '1' ,.F., .F., .T., @aFields)
	AddField('13', 'C5_VEND1'   , 'sellerid'    , FWX3Titulo('C5_VEND1')  , '1' ,.F., .F., .T., @aFields)
	AddField('14', 'C5_TPFRETE' , 'freighttype' , FWX3Titulo('C5_TPFRETE'), '1' ,.F., .F., .T., @aFields)
	AddField('15', 'C5_FRETE'   , 'freight'     , FWX3Titulo('C5_FRETE')  , '2' ,.F., .F., .T., @aFields)
	AddField('16', 'C5_SEGURO'  , 'insurance'   , FWX3Titulo('C5_SEGURO') , '2' ,.F., .F., .T., @aFields)
	AddField('17', 'C5_DESPESA' , 'expenses'    , FWX3Titulo('C5_DESPESA'), '2' ,.F., .F., .T., @aFields)
	AddField('18', 'C5_DESC1'   , 'discount'    , FWX3Titulo('C5_DESC1')  , '2' ,.F., .F., .T., @aFields)
	AddField('19', 'C5_MOEDA'   , 'currencyid'  , FWX3Titulo('C5_MOEDA')  , '2' ,.F., .F., .T., @aFields)
	AddField('20', 'TOTAL'      , 'amount'      , 'TOTAL', '2' ,.F., .F., .T., @aFields)
	AddField('21', 'C6_OPER'    , 'typeofoperation' , FWX3Titulo('C6_OPER'), '2' ,.F., .F., .T., @aFields)
	AddField('22', 'STATUSPV'   , 'status'      , 'STATUSPV', '1' ,.F., .F., .T., @aFields)
	AddField('23', 'C5_TRANSP'  , 'carriercode' , FWX3Titulo('C5_TRANSP') , '1' ,.F., .F., .T., @aFields)
	AddField('24', 'C5_TIPLIB'  , 'releasetype' , FWX3Titulo('C5_TIPLIB') , '1' ,.F., .F., .T., @aFields)
	AddField('25', 'A4_NOME'    , 'carriername' , FWX3Titulo('A4_NOME')   , '1' ,.F., .F., .T., @aFields)
	AddField('26', 'A3_NOME'    , 'sellername'  , FWX3Titulo('A3_NOME')   , '1' ,.F., .F., .T., @aFields)
	AddField('27', 'A3_EMAIL'   , 'selleremail' , FWX3Titulo('A3_EMAIL')  , '1' ,.F., .F., .T., @aFields)
	AddField('28', 'SC5.D_E_L_E_T_', 'deleted'  ," D_E_L_E_T_"  , '1' ,.F., .F., .F., @aFields)
	AddField('29', 'GetMaxStamp()', 'STAMP' ,"STAMP", '1' ,.F., .F., .F., @aFields)
	AddField('30', '0', 'amounttaxes' , STR0074, '2' ,.F., .F., .T., @aFields)

	If cPaisLoc == "BRA"
		DbSelectArea("SC5")

		If SC5->(ColumnPos("C5_CODA1U")) > 0
			AddField('31', 'C5_CODA1U'	, 'intermediaryid'		, FWX3Titulo('C5_CODA1U')	, '1' ,.F., .F., .T., @aFields)
			AddField('32', 'C5_INDPRES'	, 'purchaserpresence'	, FWX3Titulo('C5_INDPRES')  , '1' ,.F., .F., .T., @aFields)
		Endif
		SC5->(DbCloseArea())
	Endif

	AddField('33', 'C5_MENNOTA'	, 'notemessage'		, FWX3Titulo('C5_MENNOTA')	, '1' ,.F., .F., .T., @aFields)

	If SC5->(ColumnPos("C5_COMENT")) > 0
			AddField('34', 'C5_COMENT', 'ordercomment', FWX3Titulo('C5_COMENT'), '1' ,.F., .F., .T., @aFields)
	Endif
	
	lRet := CommitSchema(aSchema, aFields, STR0033)

	ErrorMsgSetupTGV(STR0075, lRet)	// "Não foi possivel incluir o Schema de Cabeçalho do Pedido de Venda."

	aSize(aFields, 0)
	aSize(aSchema, 0)
Return lRet

//--------------------------------------------------------------------
/*/{Protheus.doc} UploadSchemaSalesOrdersItems
	Inclui o Schema/Campo de Itens de Pedidos de Venda
	@type	function
	@author Danilo Salve / CRM & Faturamento
	@since  14/04/2021
	@version 12.1.27
/*/
//--------------------------------------------------------------------
Static Function UploadSchemaSalesOrdersItems() as Logical
	Local aSchema := {} as Array
	Local aFields := {} as Array
	Local lRet as Logical

	aSchema := AddSchema('000010', 'SalesOrdersItems', STR0076, 'api/tgv/salesorders/sync/items' ,;
		'api/tgv/salesorders/sync/items/diff', 'externalitemid', 'deleted', '2', 'api/tgv/salesorders/sync/items',;
		'api/tgv/salesorders/sync/items', 'api/tgv/salesorders/sync/items')

	AddField('01', 'C6_FILIAL, C6_NUM, C6_ITEM', 'internalid' , STR0050, '1' ,.F., .F., .T., @aFields)
	AddField('02', 'C5_FILIAL, C5_NUM', 'orderinternalid' , STR0077, '1' ,.F., .F., .T., @aFields)
	AddField('03', 'C5_NUMEXT, C6_ITEM', 'externalitemid' , STR0078, '1' ,.F., .F., .T., @aFields)
	AddField('04', 'C5_NUMEXT', 'externalid' , FWX3Titulo('C5_NUMEXT'), '1' ,.F., .F., .T., @aFields)
	AddField('05', 'C5_FILIAL', 'branchid' , FWX3Titulo('C5_FILIAL'), '1' ,.F., .F., .T., @aFields)
	AddField('06', 'C5_NUM', 'orderid' , FWX3Titulo('C5_NUM'), '1' ,.F., .F., .T., @aFields)
	AddField('07', 'C6_ITEM', 'itemid' , FWX3Titulo('C6_ITEM'), '1' ,.F., .F., .T., @aFields)
	AddField('08', 'C6_PRODUTO', 'productid' , FWX3Titulo('C6_PRODUTO'), '1' ,.F., .F., .T., @aFields)
	AddField('09', 'C6_DESCRI', 'description' , FWX3Titulo('C6_DESCRI'), '1' ,.F., .F., .T., @aFields)
	AddField('10', 'C6_QTDVEN', 'quantity' , FWX3Titulo('C6_QTDVEN'), '2' ,.F., .F., .T., @aFields)
	AddField('11', 'C6_PRUNIT', 'pricelist' , FWX3Titulo('C6_PRUNIT'), '2' ,.F., .F., .T., @aFields)
	AddField('12', 'C6_PRCVEN', 'unitprice' , FWX3Titulo('C6_PRCVEN'), '2' ,.F., .F., .T., @aFields)
	AddField('13', 'C6_VALOR', 'amount' , FWX3Titulo('C6_VALOR'), '2' ,.F., .F., .T., @aFields)
	AddField('14', 'C6_DESCONT', 'discount' , FWX3Titulo('C6_DESCONT'), '2' ,.F., .F., .T., @aFields)
	AddField('15', 'C6_VALDESC', 'discountamount' , FWX3Titulo('C6_VALDESC'), '2' ,.F., .F., .T., @aFields)
	AddField('16', 'C6_QTDENT', 'quantitydelivered' , FWX3Titulo('C6_QTDENT'), '2' ,.F., .F., .T., @aFields)
	AddField('17', 'C6_BLQ', 'blockstatus' , FWX3Titulo('C6_BLQ'), '1' ,.F., .F., .T., @aFields)
	AddField('18', 'C6_TES', 'outflowtype' , FWX3Titulo('C6_TES'), '1' ,.F., .F., .T., @aFields)
	AddField('19', 'C6_CF', 'fiscalcode' , FWX3Titulo('C6_CF'), '1' ,.F., .F., .T., @aFields)
	AddField('20', 'C6_PEDCLI', 'customerorder', FWX3Titulo('C6_PEDCLI'), '1',.F., .F., .T., @aFields)
	AddField('21', 'SC6.D_E_L_E_T_', 'deleted' ,"D_E_L_E_T_", '1' ,.F., .F., .F., @aFields)

	lRet := CommitSchema(aSchema, aFields, STR0034)

	ErrorMsgSetupTGV(STR0079, lRet) // "Não foi possivel incluir o Schema de Itens de Pedidos de Venda."

	aSize(aFields, 0)
	aSize(aSchema, 0)
Return lRet

//--------------------------------------------------------------------
/*/{Protheus.doc} UploadSchemaCarriers
	Inclui o Schema/Campo de Transportadoras
	@type	function
	@author Danilo Salve / CRM & Faturamento
	@since  14/04/2021
	@version 12.1.27
/*/
//--------------------------------------------------------------------
Static Function UploadSchemaCarriers() as Logical
	Local aSchema := {} as Array
	Local aFields := {} as Array
	Local lRet as Logical

	aSchema := AddSchema('000011', 'Carriers', STR0080, 'api/tgv/carriers' , 'api/tgv/carriers/diff', 'internalid', 'deleted', '2')

	AddField('01', 'A4_FILIAL, A4_COD', 'internalid' , STR0050, '1' ,.F., .F., .T., @aFields)
	AddField('02', 'A4_FILIAL', 'branchid' , FWX3Titulo('A4_FILIAL'), '1' ,.F., .F., .T., @aFields)
	AddField('03', 'A4_COD', 'code' , FWX3Titulo('A4_COD'), '1' ,.F., .F., .T., @aFields)
	AddField('04', 'A4_NOME', 'name' , FWX3Titulo('A4_NOME'), '1' ,.F., .F., .T., @aFields)
	AddField('05', 'SA4.D_E_L_E_T_', 'deleted' ,'D_E_L_E_T_', '1' ,.F., .F., .F., @aFields)

	DbSelectArea("SA4")

	If SA4->(ColumnPos("A4_MSBLQL")) > 0
		AddField('06', 'A4_MSBLQL', 'status' ,FWX3Titulo('A4_MSBLQL'), '1' ,.F., .F., .F., @aFields)
	else
		AddField('06', 'status', 'status' ,'status', '1' , .F., .F., .F., @aFields)
	Endif

	SA4->(DbCloseArea())

	lRet := CommitSchema(aSchema, aFields, STR0035)

	ErrorMsgSetupTGV(STR0081, lRet) // "Não foi possivel incluir o Schema de Transportadoras."

	aSize(aFields, 0)
	aSize(aSchema, 0)
Return lRet

//--------------------------------------------------------------------
/*/{Protheus.doc} UploadSchemaProducts
	Inclui o Schema/Campo de Produtos
	@type	function
	@author Danilo Salve / CRM & Faturamento
	@since  14/04/2021
	@version 12.1.27
/*/
//--------------------------------------------------------------------
Static Function UploadSchemaProducts() as Logical
	Local aSchema := {} as Array
	Local aFields := {} as Array
	Local lRet as Logical

	aSchema := AddSchema('000012', 'Products', STR0082, 'api/tgv/products/sync' , 'api/tgv/products/sync/diff', 'internalid', 'deleted', '2')

	AddField('01', 'B1_FILIAL, B1_COD', 'internalid'  , STR0050, '1' ,.F., .F., .T., @aFields)
	AddField('02', 'B1_FILIAL'      , 'branchid'      , FWX3Titulo('B1_FILIAL') , '1' ,.F., .F., .T., @aFields)
	AddField('03', 'B1_COD'         , 'code'          , FWX3Titulo('B1_COD')    , '1' ,.F., .F., .T., @aFields)
	AddField('04', 'B1_DESC'        , 'description'   , FWX3Titulo('B1_DESC')   , '1' ,.F., .F., .T., @aFields)
	AddField('05', 'B1_TIPO'        , 'type'          , FWX3Titulo('B1_TIPO')   , '1' ,.F., .F., .T., @aFields)
	AddField('06', 'B1_PRV1'        , 'price'         , FWX3Titulo('B1_PRV1')   , '2' ,.F., .F., .T., @aFields)
	AddField('07', 'B1_ATIVO'       , 'active'        , FWX3Titulo('B1_ATIVO')  , '1' ,.F., .F., .T., @aFields)
	AddField('08', 'B1_TS'          , 'outflowtype'   , FWX3Titulo('B1_TS')     , '1' ,.F., .F., .T., @aFields)
	AddField('09', 'SB1.D_E_L_E_T_' , 'deleted' ,"D_E_L_E_T_", '1' ,.F., .F., .F., @aFields)
	AddField('10', 'B1_MSBLQL'		, 'status' 		  ,FWX3Titulo('B1_MSBLQL')	, '1' ,.F., .F., .F., @aFields)

	lRet := CommitSchema(aSchema, aFields, STR0036)

	ErrorMsgSetupTGV(STR0083, lRet) // "Não foi possivel incluir o Schema de Produtos."

	aSize(aFields, 0)
	aSize(aSchema, 0)
Return lRet

//--------------------------------------------------------------------
/*/{Protheus.doc} UploadSchemaProductBalance
	Inclui o Schema/Campo de Saldo dos Produtos
	@type	function
	@author Danilo Salve / CRM & Faturamento
	@since  14/04/2021
	@version 12.1.27
/*/
//--------------------------------------------------------------------
Static Function UploadSchemaProductBalance() as Logical
	Local aSchema := {} as Array
	Local aFields := {} as Array
	Local lRet as Logical

	aSchema := AddSchema('000013', 'ProductBalance', STR0084, 'api/tgv/productBalance' ,;
		'api/tgv/productBalance/diff', 'internalid', 'deleted', '1')

	AddField('01', 'B2_FILIAL, B2_COD', 'internalid' , STR0050, '1' ,.F., .F., .T., @aFields)
	AddField('02', 'B2_FILIAL'      , 'branchid'              , FWX3Titulo('B2_FILIAL') , '1' ,.F., .F., .T., @aFields)
	AddField('03', 'B2_COD'         , 'code'                  , FWX3Titulo('B2_COD')    , '1' ,.F., .F., .T., @aFields)
	AddField('04', 'B1_DESC'        , 'description'           , FWX3Titulo('B1_DESC')   , '1' ,.F., .F., .T., @aFields)
	AddField('05', 'B2_LOCAL'       , 'warehouse'             , FWX3Titulo('B2_LOCAL')  , '1' ,.F., .F., .T., @aFields)
	AddField('06', 'NNR_DESCRI'     , 'warehousedescription'  , FWX3Titulo('NNR_DESCRI'), '1' ,.F., .F., .T., @aFields)
	AddField('07', 'B2_QATU'        , 'availablequantity'     , FWX3Titulo('B2_QATU')   , '2' ,.F., .F., .T., @aFields)
	AddField('08', 'B2_QPEDVEN'     , 'orderquantity'         , FWX3Titulo('B2_QPEDVEN'), '2' ,.F., .F., .T., @aFields)
	AddField('09', 'B2_QEMP'        , 'allocatedquantity'     , FWX3Titulo('B2_QEMP')   , '2' ,.F., .F., .T., @aFields)
	AddField('10', 'B2_SALPEDI'     , 'expectedinflow'        , FWX3Titulo('B2_SALPEDI'), '2' ,.F., .F., .T., @aFields)
	AddField('11', 'SB1.D_E_L_E_T_' , 'deleted' ,"D_E_L_E_T_", '1' ,.F., .F., .F., @aFields)

	lRet := CommitSchema(aSchema, aFields, STR0037)

	ErrorMsgSetupTGV(STR0085, lRet) //"Não foi possivel incluir o Schema de Saldo dos Produtos."

	aSize(aFields, 0)
	aSize(aSchema, 0)
Return lRet

//--------------------------------------------------------------------
/*/{Protheus.doc} UploadSchemaIntegrationQueue
	Inclui o Schema/Campo de Fila de Pedidos/Orçamentos
	@type	function
	@author Danilo Salve / CRM & Faturamento
	@since  14/04/2021
	@version 12.1.27
/*/
//--------------------------------------------------------------------
Static Function UploadSchemaIntegrationQueue() as Logical
	Local aSchema := {} as Array
	Local aFields := {} as Array
	Local lRet as Logical

	aSchema := AddSchema('000014', 'IntegrationQueue', STR0086, 'api/tgv/integrationqueue' ,;
		'api/tgv/integrationqueue/diff', 'id', 'deleted', '2')

	AddField('01', 'A1T_FILIAL, A1T_NUM', 'internalid' , STR0050, '1' ,.F., .F., .T., @aFields)
	AddField('02', 'A1T_FILIAL'     , 'branchid'  , FWX3Titulo('A1T_FILIAL'), '1' ,.F., .F., .T., @aFields)
	AddField('03', 'A1T_NUM'        , 'id'        , FWX3Titulo('A1T_NUM')   , '1' ,.F., .F., .T., @aFields)
	AddField('04', 'A1T_STATUS'     , 'status'    , FWX3Titulo('A1T_STATUS'), '1' ,.F., .F., .T., @aFields)
	AddField('05', 'A1T_JRECEB'     , 'json'      , FWX3Titulo('A1T_JRECEB'), '6' ,.F., .F., .T., @aFields)
	AddField('06', 'A1T_ERROR'      , 'jsonerror' , FWX3Titulo('A1T_ERROR') , '6' ,.F., .F., .T., @aFields)
	AddField('07', 'A1T.D_E_L_E_T_' , 'deleted'   , "D_E_L_E_T_"            , '1' ,.F., .F., .F., @aFields)
	AddField('08', 'A1T_ROTINA'     , 'source'    , FWX3Titulo('A1T_ROTINA'), '1' ,.F., .F., .T., @aFields)

	lRet := CommitSchema(aSchema, aFields, STR0038)

	ErrorMsgSetupTGV(STR0087, lRet) // "Não foi possivel incluir o Schema de Fila de Pedidos/Orçamentos."

	aSize(aFields, 0)
	aSize(aSchema, 0)
Return lRet

//--------------------------------------------------------------------
/*/{Protheus.doc} UploadSchemaAccessLog
	Inclui o Schema/Campo de Logs de Auditoria
	@type	function
	@author Danilo Salve / CRM & Faturamento
	@since  14/04/2021
	@version 12.1.27
/*/
//--------------------------------------------------------------------
Static Function UploadSchemaAccessLog() as Logical
	Local aSchema := {} as Array
	Local aFields := {} as Array
	Local lRet as Logical

	aSchema := AddSchema('000015', 'AccessLog', STR0088, 'api/tgv/accesslogpd' , 'api/tgv/accesslogpd/diff', 'id', 'deleted',;
		'2', 'api/tgv/accesslogpd', 'api/tgv/accesslogpd')

	AddField('01', 'id'       , 'id'        , "Código"  , '1' , .F., .F., .F., @aFields)
	AddField('02', 'function' , 'function'  , "Função"  , '1' , .F., .F., .F., @aFields)
	AddField('03', 'operation', 'operation' , "Operação", '1' , .F., .F., .F., @aFields)

	lRet := CommitSchema(aSchema, aFields, STR0039)

	ErrorMsgSetupTGV(STR0089, lRet)	// "Não foi possivel incluir o Schema de Logs de Auditoria."

	aSize(aFields, 0)
	aSize(aSchema, 0)
Return lRet

//--------------------------------------------------------------------
/*/{Protheus.doc} UploadSchemaProspects
	Inclui o Schema/Campo de Prospects
	@type	function
	@author Danilo Salve / CRM & Faturamento
	@since  14/04/2021
	@version 12.1.27
/*/
//--------------------------------------------------------------------
Static Function UploadSchemaProspects() as Logical
	Local aSchema := {} as Array
	Local aFields := {} as Array
	Local lRet as Logical

	aSchema := AddSchema('000016', 'Prospects', STR0090, 'api/tgv/prospects/sync' , 'api/tgv/prospects/sync/diff', 'internalid', 'deleted', '2')

	AddField('01', 'US_FILIAL, US_COD, US_LOJA' , 'internalid' , STR0050,   '1' , .F., .F., .T., @aFields)
	AddField('02', 'US_FILIAL', 'branch'        , FWX3Titulo('US_FILIAL'),  '1' , .F., .F., .T., @aFields)
	AddField('03', 'US_COD'   , 'code'          , FWX3Titulo('US_COD'),     '1' , .F., .F., .T., @aFields)
	AddField('04', 'US_LOJA'  , 'store'         , FWX3Titulo('US_LOJA'),    '1' , .F., .F., .T., @aFields)
	AddField('05', 'US_NOME'  , 'name'          , FWX3Titulo('US_NOME'),    '1' , .F., .F., .T., @aFields)
	AddField('06', 'US_NREDUZ', 'fantasy'       , FWX3Titulo('US_NREDUZ'),  '1' , .F., .F., .T., @aFields)
	AddField('07', 'US_TIPO'  , 'prospecttype'  , FWX3Titulo('US_TIPO'),    '1' , .F., .F., .T., @aFields)
	AddField('08', 'US_CGC'   , 'cgc'           , FWX3Titulo('US_CGC'),     '1' , .F., .F., .T., @aFields)
	AddField('09', 'US_CNAE'  , 'cnae'          , FWX3Titulo('US_CNAE'),    '1' , .F., .F., .T., @aFields)
	AddField('10', 'US_VEND'  , 'vendor'        , FWX3Titulo('US_VEND'),    '1' , .F., .F., .T., @aFields)
	AddField('11', 'US_MUN'   , 'city'          , FWX3Titulo('US_MUN'),     '1' , .F., .F., .T., @aFields)
	AddField('12', 'US_BAIRRO', 'neighborhood'  , FWX3Titulo('US_BAIRRO'),  '1' , .F., .F., .T., @aFields)
	AddField('13', 'US_END'   , 'address'       , FWX3Titulo('US_END'),     '1' , .F., .F., .T., @aFields)
	AddField('14', 'US_CEP'   , 'zipcode'       , FWX3Titulo('US_CEP'),     '1' , .F., .F., .T., @aFields)
	AddField('15', 'US_EST'   , 'uf'            , FWX3Titulo('US_EST'),     '1' , .F., .F., .T., @aFields)
	AddField('16', 'US_DDI'   , 'ddi'           , FWX3Titulo('US_DDI'),     '1' , .F., .F., .T., @aFields)
	AddField('17', 'US_DDD'   , 'ddd'           , FWX3Titulo('US_DDD'),     '1' , .F., .F., .T., @aFields)
	AddField('18', 'US_TEL'   , 'phone'         , FWX3Titulo('US_TEL'),     '1' , .F., .F., .T., @aFields)
	AddField('19', 'US_EMAIL' , 'email'         , FWX3Titulo('US_EMAIL'),   '1' , .F., .F., .T., @aFields)
	AddField('20', 'US_PAIS'  , 'country'       , FWX3Titulo('US_PAIS'),    '1' , .F., .F., .T., @aFields)
	AddField('21', 'US_LC'    , 'creditlimit'   , FWX3Titulo('US_LC'),      '2' , .F., .F., .T., @aFields)
	AddField('22', 'US_MSBLQL', 'status'        , FWX3Titulo('US_MSBLQL'),  '1' , .F., .F., .T., @aFields)
	AddField('23', 'SUS.D_E_L_E_T_', 'deleted'  , "D_E_L_E_T_", '1' ,.F., .F., .F., @aFields)
	AddField('24', 'US_DTCAD', 'inclusiondate'  , FWX3Titulo('US_DTCAD'),   '3' , .F., .F., .T., @aFields)

	If cPaisLoc == "BRA"
		AddField('25', 'US_INSCR'   , 'estadualregistration'  , FWX3Titulo('US_INSCR')  , '1' , .F., .F., .T., @aFields)
		AddField('26', 'US_PESSOA'  , 'persontype'            , FWX3Titulo('US_PESSOA') , '1' , .F., .F., .T., @aFields)
		AddField('27', 'US_COD_MUN' , 'citycode'              , FWX3Titulo('US_COD_MUN'), '1' , .F., .F., .T., @aFields)
	Endif

	lRet := CommitSchema(aSchema, aFields, STR0040)

	ErrorMsgSetupTGV(STR0091, lRet) // "Não foi possivel incluir o Schema de Prospects."

	aSize(aFields, 0)
	aSize(aSchema, 0)
Return lRet

//--------------------------------------------------------------------
/*/{Protheus.doc} UploadSchemaSalesBudgets
	Inclui o Schema/Campo de Cabeçalho do Orçamento
	@type	function
	@author Danilo Salve / CRM & Faturamento
	@since  14/04/2021
	@version 12.1.27
/*/
//--------------------------------------------------------------------
Static Function UploadSchemaSalesBudgets() as logical
	Local aSchema := {} as array
	Local aFields := {} as array
	Local lRet as logical

	aSchema := AddSchema('000017', 'SalesBudgets', STR0092, 'api/tgv/salesbudgets/sync' ,;
		'api/tgv/salesbudgets/sync/diff', 'externalid', 'deleted', '2', 'api/tgv/salesbudgets/sync',;
		'api/tgv/salesbudgets/sync', 'api/tgv/salesbudgets/sync')

	AddField('01', 'CJ_FILIAL, CJ_NUM', 'internalid'    , STR0050, '1'            , .F., .F., .T., @aFields)
	AddField('02', 'SCJ.D_E_L_E_T_' , 'deleted'         , "D_E_L_E_T_"            , '1' ,.F., .F., .F., @aFields)
	AddField('03', 'GetMaxStamp()'  , 'STAMP'           , "STAMP"                 , '1' ,.F., .F., .T., @aFields)
	AddField('04', 'E4_FILIAL,"CJ_CONDPAG"', 'paymentinternalid' , STR0052, '1'    , .F., .F., .T., @aFields)
	AddField('05', 'CJ_FILIAL'      , 'branchid'        , FWX3Titulo('CJ_FILIAL') , '1' ,.F., .F., .T., @aFields)
	AddField('06', 'CJ_NUM'         , 'budgetid'        , FWX3Titulo('CJ_NUM')    , '1' ,.F., .F., .T., @aFields)
	AddField('07', 'CJ_NUMEXT'      , 'externalid'      , FWX3Titulo('CJ_NUMEXT') , '1' ,.F., .F., .T., @aFields)
	AddField('08', 'CJ_TABELA'      , 'pricelistid'     , FWX3Titulo('CJ_TABELA') , '1' ,.F., .F., .T., @aFields)
	AddField('09', 'CJ_CONDPAG'     , 'paymentconditionid' , FWX3Titulo('CJ_CONDPAG'), '1' ,.F., .F., .T., @aFields)
	AddField('10', 'CJ_CLIENTE'     , 'customerid'      , FWX3Titulo('CJ_CLIENTE'), '1' ,.F., .F., .T., @aFields)
	AddField('11', 'CJ_LOJA'        , 'customerstore'   , FWX3Titulo('CJ_LOJA')   , '1' ,.F., .F., .T., @aFields)
	AddField('12', 'CJ_PROSPE'		, 'prospectid' 		, STR0094, '1' , .F., .F., .T., @aFields)
	AddField('13', 'CJ_LOJPRO'		, 'prospectstore'   , FWX3Titulo('US_LOJA')   , '1' ,.F., .F., .T., @aFields)
	AddField('14', 'CJ_EMISSAO'     , 'issuedate'       , FWX3Titulo('CJ_EMISSAO')  , '3' ,.F., .F., .T., @aFields)
	AddField('15', 'CJ_TPFRETE'     , 'freighttype'     , FWX3Titulo('CJ_TPFRETE'), '1' ,.F., .F., .T., @aFields)
	AddField('16', 'CJ_FRETE'       , 'freight'         , FWX3Titulo('CJ_FRETE')  , '2' ,.F., .F., .T., @aFields)
	AddField('17', 'CJ_SEGURO'      , 'insurance'       , FWX3Titulo('CJ_SEGURO') , '2' ,.F., .F., .T., @aFields)
	AddField('18', 'CJ_DESPESA'     , 'expenses'        , FWX3Titulo('CJ_DESPESA'), '2' ,.F., .F., .T., @aFields)
	AddField('19', 'CJ_DESC1'       , 'discount'        , FWX3Titulo('CJ_DESC1')  , '2' ,.F., .F., .T., @aFields)
	AddField('20', 'CJ_MOEDA'       , 'currencyid'      , FWX3Titulo('CJ_MOEDA')  , '2' ,.F., .F., .T., @aFields)
	AddField('21', 'TOTAL'          , 'amount'          , STR0095, '2' ,.F., .F., .T., @aFields)
	AddField('22', 'CJ_TIPLIB'      , 'releasetype'     , FWX3Titulo('CJ_TIPLIB') , '1' ,.F., .F., .T., @aFields)
	AddField('23', 'CJ_TIPOCLI'     , 'customertype'    , FWX3Titulo('CJ_TIPOCLI'), '1' ,.F., .F., .T., @aFields)
	AddField('24', 'CJ_STATUS'      , 'status'          , FWX3Titulo('CJ_STATUS') , '1' ,.F., .F., .T., @aFields)
	AddField('25', 'CJ_PROPOST'     , 'businessproposal', FWX3Titulo('CJ_PROPOST'), '1' ,.F., .F., .T., @aFields)

	If cPaisLoc == "BRA"
		AddField('26', 'CJ_CODA1U'     	, 'intermediaryid'	, FWX3Titulo('CJ_CODA1U') , '1' ,.F., .F., .T., @aFields)
		AddField('27', 'CJ_INDPRES'     , 'purchaserpresence', FWX3Titulo('CJ_INDPRES'), '1' ,.F., .F., .T., @aFields)
	Endif

	lRet := CommitSchema(aSchema, aFields, STR0041)

	ErrorMsgSetupTGV(STR0096, lRet) // "Não foi possivel incluir o Schema de Notificações."

	aSize(aFields, 0)
	aSize(aSchema, 0)
Return lRet

//--------------------------------------------------------------------
/*/{Protheus.doc} UploadSchemaSalesBudgetsItems
	Inclui o Schema/Campo de Itens do Orçamentos
	@type	function
	@author Danilo Salve / CRM & Faturamento
	@since  14/04/2021
	@version 12.1.27
/*/
//--------------------------------------------------------------------
Static Function UploadSchemaSalesBudgetsItems() as Logical
	Local aSchema := {} as Array
	Local aFields := {} as Array
	Local lRet as Logical

	aSchema := AddSchema('000018', 'SalesBudgetsItems', STR0097, 'api/tgv/salesbudgets/sync/items' ,;
		'api/tgv/salesbudgets/sync/items/diff', 'externalitemid', 'deleted', '2', 'api/tgv/salesbudgets/sync/items',;
		'api/tgv/salesbudgets/sync/items', 'api/tgv/salesbudgets/sync/items')

	AddField('01', 'CK_FILIAL, CK_NUM , CK_ITEM', 'internalid'  , STR0050, '1' ,.F., .F., .T., @aFields)
	AddField('02', 'CJ_FILIAL, CJ_NUM', 'budgetinternalid'      , STR0098, '1' ,.F., .F., .T., @aFields)
	AddField('03', 'CJ_NUMEXT, CK_ITEM', 'externalitemid'       , STR0099, '1' ,.F., .F., .T., @aFields)
	AddField('04', 'CJ_NUMEXT'  , 'externalid'      , FWX3Titulo('CJ_NUMEXT') , '1' , .F., .F., .T., @aFields)
	AddField('05', 'CJ_FILIAL'  , 'branchid'        , FWX3Titulo('CJ_FILIAL') , '1' , .F., .F., .T., @aFields)
	AddField('06', 'CJ_NUM'     , 'budgetid'        , FWX3Titulo('CJ_NUM')    , '1' , .F., .F., .T., @aFields)
	AddField('07', 'CK_ITEM'    , 'itemid'          , FWX3Titulo('CK_ITEM')   , '1' , .F., .F., .T., @aFields)
	AddField('08', 'CK_PRODUTO' , 'productid'       , FWX3Titulo('CK_PRODUTO'), '1' , .F., .F., .T., @aFields)
	AddField('09', 'CK_DESCRI'  , 'description'     , FWX3Titulo('CK_DESCRI') , '1' , .F., .F., .T., @aFields)
	AddField('10', 'CK_QTDVEN'  , 'quantity'        , FWX3Titulo('CK_QTDVEN') , '2' , .F., .F., .T., @aFields)
	AddField('11', 'CK_PRUNIT'  , 'pricelist'       , FWX3Titulo('CK_PRUNIT') , '2' , .F., .F., .T., @aFields)
	AddField('12', 'CK_PRCVEN'  , 'unitprice'       , FWX3Titulo('CK_PRCVEN') , '2' , .F., .F., .T., @aFields)
	AddField('13', 'CK_VALOR'   , 'amount'          , FWX3Titulo('CK_VALOR')  , '2' , .F., .F., .T., @aFields)
	AddField('14', 'CK_DESCONT' , 'discount'        , FWX3Titulo('CK_DESCONT'), '2' , .F., .F., .T., @aFields)
	AddField('15', 'CK_VALDESC' , 'discountamount'  , FWX3Titulo('CK_VALDESC'), '2' , .F., .F., .T., @aFields)
	AddField('16', 'CK_TES'     , 'outflowtype'     , FWX3Titulo('CK_TES')    , '1' , .F., .F., .T., @aFields)
	AddField('17', 'SCK.D_E_L_E_T_', 'deleted'      , "D_E_L_E_T_", '1' ,.F., .F., .F., @aFields)

	lRet := CommitSchema(aSchema, aFields, STR0042)

	ErrorMsgSetupTGV(STR0100, lRet) // "Não foi possivel incluir o Schema de Itens do Orçamentos."

	aSize(aFields, 0)
	aSize(aSchema, 0)
Return lRet

//--------------------------------------------------------------------
/*/{Protheus.doc} UploadSchemaSchemaFields
	Inclui o Schema/Campo de Campos Customizados
	@type	function
	@author Danilo Salve / CRM & Faturamento
	@since  14/04/2021
	@version 12.1.27
/*/
//--------------------------------------------------------------------
Static Function UploadSchemaSchemaFields() as Logical
	Local aSchema := {} as Array
	Local aFields := {} as Array
	Local lRet as Logical

	aSchema := AddSchema('000019', 'SchemaFields', STR0101, 'api/tgv/schemafields/' , 'api/tgv/schemafields/diff',;
		'internalid', 'deleted', '2')

	AddField('01', 'A1W_FILIAL, A1W_SCHEMA, A1W_ITEM', 'internalid' ,STR0050, '1' , .F., .F., .T., @aFields)
	AddField('02', 'A1W_FILIAL' , 'branch'      , FWX3Titulo('A1W_FILIAL')  , '1' , .F., .F., .T., @aFields)
	AddField('03', 'A1W_SCHEMA' , 'codeschema'  , FWX3Titulo('A1W_SCHEMA')  , '1' , .F., .F., .T., @aFields)
	AddField('04', 'A1W_ITEM'   , 'itemid'      , FWX3Titulo('A1W_ITEM')    , '1' , .F., .F., .T., @aFields)
	AddField('05', 'A1V_NOME'   , 'nameschema'  , FWX3Titulo('A1V_NOME')    , '1' , .F., .F., .T., @aFields)
	AddField('06', 'A1W_LABEL'  , 'label'       , FWX3Titulo('A1W_LABEL')   , '1' , .F., .F., .T., @aFields)
	AddField('07', 'A1W_TIPO'   , 'type'        , FWX3Titulo('A1W_TIPO')    , '1' , .F., .F., .T., @aFields)
	AddField('08', 'A1W_CAMPO'  , 'field'       , FWX3Titulo('A1W_CAMPO')   , '1' , .F., .F., .T., @aFields)
	AddField('09', 'A1W_CUSTOM' , 'customized'  , FWX3Titulo('A1W_CUSTOM')  , '4' , .F., .F., .T., @aFields)
	AddField('10', 'A1W_OBRIGA' , 'required'    , FWX3Titulo('A1W_OBRIGA')  , '4' , .F., .F., .T., @aFields)
	AddField('11', 'A1W_VISIVE' , 'visible'     , FWX3Titulo('A1W_VISIVE')  , '4' , .F., .F., .T., @aFields)
	AddField('12', 'A1W_TAMMAX' , 'maxlength'   , FWX3Titulo('A1W_TAMMAX')  , '2' , .F., .F., .T., @aFields)
	AddField('13', 'A1W_GRID'   , 'grid'        , FWX3Titulo('A1W_GRID')    , '2' , .F., .F., .T., @aFields)
	AddField('14', 'A1W_AGRUP'  , 'divider'     , FWX3Titulo('A1W_AGRUP')   , '1' , .F., .F., .T., @aFields)
	AddField('15', 'A1W.D_E_L_E_T_', 'deleted'  , 'D_E_L_E_T_'              , '1' , .F., .F., .F., @aFields)

	lRet := CommitSchema(aSchema, aFields, STR0043)

	ErrorMsgSetupTGV(STR0102, lRet) //"Não foi possivel incluir o Schema de Campos Customizados."

	aSize(aFields, 0)
	aSize(aSchema, 0)
Return lRet

//--------------------------------------------------------------------
/*/{Protheus.doc} UploadIntermediaries
	Inclui o Schema/Campo de Intermediadores
	@type	function
	@author		Danilo Salve / CRM & Faturamento
	@since  	23/06/2021
	@version 	1.0
/*/
//--------------------------------------------------------------------
Static Function UploadIntermediaries() as Logical
	Local aSchema as Array
	Local aFields := {} as Array
	Local lRet as Logical

	aSchema := AddSchema('000020', 'Intermediaries', STR0107, 'api/tgv/intermediaries/' , 'api/tgv/intermediaries/diff',;
		'internalid', 'deleted', '2')

	AddField('01', 'A1U_FILIAL, A1U_CODIGO', 'internalid' , STR0050			, '1' , .F., .F., .T., @aFields)
	AddField('02', 'A1U_FILIAL'		, 'branchid', FWX3Titulo('A1U_FILIAL')	, '1' , .F., .F., .T., @aFields)
	AddField('03', 'A1U_CODIGO'		, 'code'	, FWX3Titulo('A1U_CODIGO')	, '1' , .F., .F., .T., @aFields)
	AddField('04', 'A1U_NOME'		, 'name'	, FWX3Titulo('A1U_NOME')	, '1' , .F., .F., .T., @aFields)
	AddField('05', 'A1U_CGC'		, 'document', FWX3Titulo('A1U_CGC')		, '1' , .F., .F., .T., @aFields)
	AddField('06', 'A1U.D_E_L_E_T_'	, 'deleted'	, 'D_E_L_E_T_'				, '1' , .F., .F., .F., @aFields)

	DbSelectArea("A1U")

	If A1U->(ColumnPos("A1U_MSBLQL")) > 0
		AddField('07', 'A1U_MSBLQL', 'status' ,FWX3Titulo('A1U_MSBLQL'), '1' ,.F., .F., .F., @aFields)
	else
		AddField('07', 'status', 'status' ,'status', '1' ,.F., .F., .F., @aFields)
	Endif

	A1U->(DbCloseArea())

	lRet := CommitSchema(aSchema, aFields, STR0106)

	ErrorMsgSetupTGV(STR0108, lRet)

	aSize(aFields, 0)
	aSize(aSchema, 0)
Return lRet

//--------------------------------------------------------------------
/*/{Protheus.doc} CommitSchema
	Efetua a Inclusão do Schema
	@type	function
  	@param  aSchema,  Array,  Cabeçalho do Schema
  	@param  aFields,  Array,  Campos do Schema
  	@return Logical,  Informe se conseguiu incluir o Schema.
	@author Danilo Salve / CRM & Faturamento
	@since  14/04/2021
	@version 12.1.27
/*/
//--------------------------------------------------------------------
Static Function CommitSchema(aSchema as Array, aFields as Array, cString as Character) as Logical
	Local aArea     := GetArea() as Array
	Local aAreaA1V  := A1V->(GetArea()) as Array
	Local aMsgErro  := {} as Array
	Local lRet      := .F. as Logical
	Local oModel    := FWLoadModel('TGVA003')
	Local oModelA1V as Object
	Local oModelA1W as Object
	Local nX        as Integer
	Local nItem     as Numeric

	cString := IIF(Empty(cString), STR0103, cString) // "Incluíndo Schemas"

	oModel:SetOperation(MODEL_OPERATION_INSERT)

	If oModel:Activate()
		If oModel:IsActive()

			oModelA1V:= oModel:GetModel('A1VMASTER')
			oModelA1W:= oModel:GetModel('A1WDETAIL')

			lRet := .T.

			For nX := 1 To Len(aSchema)
				If !oModelA1V:SetValue(aSchema[nX,1], aSchema[nX,2])
					lRet := .F.
					Exit
				EndIf
			Next

			ErrorMsgSetupTGV(STR0104, lRet)	// "Falha ao incluir Schema"

			If lRet
				For nX := 1 To Len(aFields)
					oModelA1W:AddLine()
					For nItem := 1 To Len(aFields[nX])
						If !oModelA1W:SetValue(aFields[nX, nItem, 1], aFields[nX, nItem, 2])
							lRet := .F.
							Exit
						EndIf
					Next

					If !lRet
						Exit
					Endif
				Next
				ErrorMsgSetupTGV(STR0105, lRet)	// "Falha ao incluir campo"
			Endif
		Endif
	Endif

	If !lRet .Or. !( oModel:VldData() .And. oModel:CommitData() )
		lRet    := .F.
		aMsgErro := oModel:GetErrorMessage()
		For nX := 1 To Len(aMsgErro)
			If ValType(aMsgErro[nX]) == "C"
				cError += StrTran( StrTran( aMsgErro[nX], "<", "" ), "-", "" ) + (" ")
			EndIf
		Next
	Endif

	ErrorMsgSetupTGV(cError, lRet)
	ErrorMsgSetupTGV(STR0047, lRet)

	oModel:DeActivate()

	RestArea(aAreaA1V)
	RestArea(aArea)

	aSize(aMsgErro, 0)
	aSize(aAreaA1V, 0)
	aSize(aArea, 0)

	FreeObj(oModelA1W)
	FreeObj(oModelA1V)
	FreeObj(oModel)
Return lRet

//--------------------------------------------------------------------
/*/{Protheus.doc} AddSchema
	Adiciona a estrutura de um Schema.
	@type	function
	@author Danilo Salve / CRM & Faturamento
	@since  14/04/2021
	@version 12.1.27
/*/
//--------------------------------------------------------------------
Static Function AddSchema(cCode as Character, cName as Character, cDescription as Character, cGet as Character, cDiff as Character, cIdField as Character,;
		cDelField as Character, cBlocked as Character, cPut as Character, cPost as Character, cDelete  as Character) as Array
	Local aSchema := {}  as Array

	aAdd( aSchema, { 'A1V_CODIGO' , cCode})
	aAdd( aSchema, { 'A1V_NOME'   , cName})
	aAdd( aSchema, { 'A1V_DESCRI' , cDescription})
	aAdd( aSchema, { 'A1V_ENDGET' , cGet})
	aAdd( aSchema, { 'A1V_ENDDIF' , cDiff})
	aAdd( aSchema, { 'A1V_IDFLD'  , cIdField})
	aAdd( aSchema, { 'A1V_DELFLD' , cDelField})
	aAdd( aSchema, { 'A1V_MSBLQL' , cBlocked})

	If !Empty(cPost)
		aAdd( aSchema, { 'A1V_POST' , cPut})
	Endif

	If !Empty(cPut)
		aAdd( aSchema, { 'A1V_PUT' , cPut})
	Endif

	If !Empty(cDelete)
		aAdd( aSchema, { 'A1V_DELETE' , cDelete})
	Endif

Return aSchema

//--------------------------------------------------------------------
/*/{Protheus.doc} AddField
	Adiciona um campo na estrutura de campos informado no parametro a Fields
	@type	function
	@author Danilo Salve / CRM & Faturamento
	@since  14/04/2021
	@version 12.1.27
/*/
//--------------------------------------------------------------------
Static Function AddField(cItem as Character, cField as Character, cProperty as Character, cLabel as Character,cType as Character, lCustom as Logical,;
		lRequired as Logical, lVisible as Logical, aFields as Array )
	Local aField := {}  as Array

	aAdd( aField, { 'A1W_ITEM'  , cItem})
	aAdd( aField, { 'A1W_CAMPO' , cField})
	aAdd( aField, { 'A1W_PROPRI', cProperty})
	aAdd( aField, { 'A1W_LABEL' , cLabel})
	aAdd( aField, { 'A1W_TIPO'  , cType})
	aAdd( aField, { 'A1W_CUSTOM', lCustom})
	aAdd( aField, { 'A1W_OBRIGA', lRequired})
	aAdd( aField, { 'A1W_VISIVE', lVisible})

	aAdd( aFields, aField )

Return Nil

//------------------------------------------------------------------------------------------------------------
/*/{Protheus.doc} ErrorMsgSetupTGV
	Escreve um erro na variável de Logs.
	@type	function
	@version 12.1.27
	@author Danilo Salve / CRM & Faturamento
	@since  14/04/2021
	@param	cMessage, character	, mensagem de erro
	@param	lProcOk, logical, indica se o processamento foi de erro para poder armazenar a mensagem de erro
	@return nil
/*/
//------------------------------------------------------------------------------------------------------------
Function ErrorMsgSetupTGV(cMessage as Character, lProcOk as logical)
	If !lProcOK .and. !Empty(cMessage)
		cError += Replicate( " ", 78 ) + CRLF
		cError += Replicate( "-", 78 ) + CRLF
		cError += STR0143 + CRLF				// "Falha ao tentar atualizar base de dados"
		cError += STR0144 + cMessage + CRLF		// "Descrição: "
		cError += Replicate( "-", 78 ) + CRLF
		cError += Replicate( " ", 78 ) + CRLF
		lSetMessage := .T.
	Endif
Return nil

//-------------------------------------------------------------------------
/*/{Protheus.doc} getErrorMsgSetupTGV
	Retorna a variável com as mensagens de logs de erro do processamento.
	@type	function
	@version 12.1.27
	@author Danilo Salve / CRM & Faturamento
	@since  14/04/2021
	@return	cError, character	, mensagem de erro
/*/
//-------------------------------------------------------------------------
Function GetErrorMsgSetupTGV()
Return cError

//-------------------------------------------------------------------------
/*/{Protheus.doc} resetErrorMsg
	Limpa o valor da variável com as mensagens de logs de erro do processamento.
	@type	function
	@version 12.1.27
	@author Danilo Salve / CRM & Faturamento
	@since  14/04/2021
	@return	cError, character	, mensagem de erro
/*/
//-------------------------------------------------------------------------
Static Function ResetErrorMsg()
	cError := ""
Return cError

//--------------------------------------------------------------------
/*/{Protheus.doc} TGVExistTables
	Verificar se as Tabelas do TOTVS GEstão de Vendas existem
	no dicionarios de dados
	@type	function
	@author Danilo Salve / CRM & Faturamento
	@since  14/04/2021
	@version 12.1.27
/*/
//--------------------------------------------------------------------
Static Function TGVExistTables() as Logical
	Local lExist as Logical

	If (AliasInDic("A1S") .And.  AliasInDic("A1T") .And.  AliasInDic("A1V") .And.  AliasInDic("A1W"))
		lExist := .T.
	Else
		lExist := .F.
	EndIf
Return lExist

//------------------------------------------------------------------------------
/*/{Protheus.doc} deleteSchema_A1V_A1W()
    Funcao que deleta os registros referentes ao nome do schema informado no parametro
    @type       method
    @version    12.1.33
    @author     Rafael Mota Previdi / Squad CRM & Faturamento
    @since      29/03/2022
    @param      schemaName, character, nome do schema a ser deletado
    @return     nil
/*/
//------------------------------------------------------------------------------
function deleteSchema_A1V_A1W(schemaName)

    local A1VFilial as character
    local A1WFilial as character
    local schemaCode as character

	schemaCode := "NotExists"

    A1VFilial := xFilial("A1V")
    DbSelectArea("A1V")
    A1V->(DbSetOrder(2))    // A1V_FILIAL, A1V_NOME
    if A1V->(DbSeek(A1VFilial + schemaName))
        schemaCode := A1V->A1V_CODIGO
    endIf

    A1V->(DbSetOrder(1))    // A1V_FILIAL, A1V_CODIGO
    While A1V->(!eof()) .and. A1V->(A1V_FILIAL + A1V_CODIGO) == A1VFilial + schemaCode
		RecLock("A1V", .F.)
		A1V->(DBDelete())
		A1V->(MsUnLock())
		A1V->(DbSkip())
	Enddo

    A1WFilial := xFilial("A1W")
    DbSelectArea("A1W")
    A1W->(DbSetOrder(1))    // A1W_FILIAL, A1W_SCHEMA, A1W_ITEM
    A1W->(DbSeek(A1WFilial + schemaCode))

    While A1W->(!eof()) .and. A1W->(A1W_FILIAL + A1W_SCHEMA) == A1WFilial + schemaCode
		RecLock("A1W", .F.)
		A1W->(DBDelete())
		A1W->(MsUnLock())
		A1W->(DbSkip())
	Enddo

return nil

//------------------------------------------------------------------------------
/*/{Protheus.doc} updateSchema_A1V_A1W()
    Funcao que inclui novamente os registros referentes ao nome do schema informado no parametro
    @type       method
    @version    12.1.33
    @author     Rafael Mota Previdi / Squad CRM & Faturamento
    @since      29/03/2022
    @param      schemaName, character, nome do schema a ser deletado
    @return     processed, logical, indica se a inclusao do schema ocorreu com sucesso ou nao
/*/
//------------------------------------------------------------------------------
function updateSchema_A1V_A1W(schemaName)

    local processed as logical

    do case
		case schemaName == "PaymentConditions"
			processed := UploadSchemaPaymentConditions()
		case schemaName == "Carriers"
			processed := UploadSchemaCarriers()
		case schemaName == "Products"
			processed := UploadSchemaProducts()
		case schemaName == "Prospects"
			processed := UploadSchemaProspects()
		case schemaName == "SalesBudgets"
			processed := UploadSchemaSalesBudgets()
		case schemaName == "SalesBudgetsItems"
			processed := UploadSchemaSalesBudgetsItems()
		case schemaName == "Intermediaries" 
			processed := iif(cPaisLoc == "BRA", UploadIntermediaries(), .T.)
		case schemaName == "SalesOrders"
			processed := UploadSchemaSalesOrders()
		case schemaName == "SalesOrdersItems"
			processed := UploadSchemaSalesOrdersItems()
		case schemaName == "IntegrationQueue"
			processed := UploadSchemaIntegrationQueue()
    end case

return processed
