#include "tlpp-core.th"
#INCLUDE "TGVA004.CH"

#define SUBMENU 'subMenu'
#define CANSEARCH 'canSearch'
#define CANVISUALIZE 'canVisualize'
#define CANINCLUDE 'canInclude'
#define CANUPDATE 'canUpdate'
#define CANDELETE 'canDelete'
#define ACTIONS 'actions'

namespace totvs.protheus.backoffice.tgvUserAccessRules

//----------------------------------------------------------------------------
/*/{Protheus.doc} tgvUserAccessRules
	API responsavel por consultar os acessos das rotinas do Portal Gestão de vendas
	@type		class
	@version	12.1.33
	@author		Danilo Salve / Squad CRM & Faturamento
	@since		28/12/2021
/*/
//----------------------------------------------------------------------------
class tgvUserAccessRules
	public method new () as object

	@Get("/api/tgv/userAccessRules/")
	public method getUserAccessRules() as logical
endClass

//----------------------------------------------------------------------------
/*/{Protheus.doc} tgvUserAccessRules::new() as object
	Obtem uma nova instancia da classe tgvUserAccessRules
	@type		method
	@version	12.1.33
	@author		Danilo Salve / Squad CRM & Faturamento
	@since		28/12/2021
/*/
//----------------------------------------------------------------------------
method new() as object class tgvUserAccessRules
return self

//----------------------------------------------------------------------------
/*/{Protheus.doc} tgvUserAccessRules::getUserAccessRules() as logical
	Obtem uma lista com os acessos do usuario logado
	@type		method
	@version	12.1.33
	@author		Danilo Salve / Squad CRM & Faturamento
	@since		28/12/2021
	@return		logical, retorna sempre verdadeiro
/*/
//----------------------------------------------------------------------------
method getUserAccessRules() as logical class tgvUserAccessRules
	local jResponse := JsonObject():New() as Json
	local aMenus		:= {} as Array

	aAdd(aMenus, notificationsAccessRules())
	aAdd(aMenus, customersAccessRules())
	aAdd(aMenus, salesAccessRules())

	jResponse['items'] := aMenus

	oRest:setKeyHeaderResponse('Content-Type','application/json; charset=utf-8')
	oRest:setStatusCode(200)
	oRest:setResponse(jResponse)

	FreeObj(jResponse)
	aSize(aMenus, 0)
return .t.

//----------------------------------------------------------------------------
/*/{Protheus.doc} notificationsAccessRules
	Obtem um objeto com todos os privilegios de acesso da rotina minhas
	notificações utilizados	no Portal gestão de vendas
	@type		function
	@version	12.1.33
	@author		Danilo Salve / Squad CRM & Faturamento
	@since		28/12/2021
	@return		json, Acessos da rotina Minhas Notificações
/*/
//----------------------------------------------------------------------------
static function notificationsAccessRules() as json
	local jMenu		:= menuAccessRule('TGVA004', 'myNotifications', 1) as json
	Local jActions	:= JsonObject():New() as Json

	jActions[CANSEARCH] := canAccessProgram('TGVA001', 1)
	jActions[CANVISUALIZE] := canAccessProgram('TGVA001', 2)

	jMenu[ACTIONS] := jActions
return jMenu

//----------------------------------------------------------------------------
/*/{Protheus.doc} customersAccessRules
	Obtem um objeto com todos os privilegios de acesso da rotina Clientes utilizados
	no Portal gestão de vendas.
	@type		function
	@version	12.1.33
	@author		Danilo Salve / Squad CRM & Faturamento
	@since		28/12/2021
	@return		json, Acessos da rotina Meus Clientes
/*/
//----------------------------------------------------------------------------
static function customersAccessRules() as json
	local lMVC		:= SuperGetMv("MV_MVCSA1",,.F.) as logical
	local jActions	:= JsonObject():New() as Json
	local jMenu		:= menuAccessRule('TGVA004', 'myCustomers', 2) as json
	local cProgram	:= IIF(lMVC, 'CRMA980', 'MATA030') as character

	jActions[CANSEARCH] := canAccessProgram(cProgram, 1)
	jActions[CANVISUALIZE] := canAccessProgram(cProgram, 2)

	jMenu[ACTIONS] := jActions
return jMenu

//----------------------------------------------------------------------------
/*/{Protheus.doc} salesAccessRules
	Obtem um objeto com todos os privilegios de acesso das rotinas de Pedidos
	de vendas e	Orçamentos de Vendas utilizados no Portal gestão de vendas.
	@type		function
	@version	12.1.33
	@author		Danilo Salve / Squad CRM & Faturamento
	@since		28/12/2021
	@return		json, Acessos da rotina Minhas Vendas
/*/
//----------------------------------------------------------------------------
static function salesAccessRules() as json
	local aSubMenu	:= {} as Array
	local jMenu		:= menuAccessRule('TGVA004', 'mySales', 3) as json

	aAdd(aSubMenu, salesAccessRulesByProgram(4))
	aAdd(aSubMenu, salesAccessRulesByProgram(5))

	jMenu[SUBMENU] := aSubMenu
return jMenu

//----------------------------------------------------------------------------
/*/{Protheus.doc} salesAccessRulesByProgram
	Obtem um objeto com todos os privilegios de acesso por rotina (4 - Pedido / 5 Orçamento)
	@type		function
	@version	12.1.33
	@param		nOperation, numeric, Informe 4 Pedidos de Vendas ou 5 p/ Orçamento
	@author		Danilo Salve / Squad CRM & Faturamento
	@since		28/12/2021
	@return		json, Acessos da rotina Minhas Vendas
/*/
//----------------------------------------------------------------------------
static function salesAccessRulesByProgram(nOperation as numeric) as json
	Local cProgram := iif(nOperation == 4, 'MATA410', 'MATA415') as character
	local jMenu := menuAccessRule('TGVA004', iif(nOperation == 4, 'mySalesOrders', 'mySalesBudgets'), nOperation) as json
	Local jActions := JsonObject():New() as json

	jActions[CANSEARCH] := canAccessProgram(cProgram, 1)
	jActions[CANVISUALIZE] := canAccessProgram(cProgram, 2)
	jActions[CANINCLUDE] := canAccessProgram(cProgram, 3)
	jActions[CANUPDATE] := canAccessProgram(cProgram, 4)
	jActions[CANDELETE] := iif(nOperation == 4, MPUserHasAccess(cProgram, 5, __cUserId, .f., .f., "A410DELETA", 5), canAccessProgram(cProgram, 5))
	jMenu[ACTIONS] := jActions
return jMenu

//----------------------------------------------------------------------------
/*/{Protheus.doc} menuAccessRule
	Obtem o privilegio de acesso de um determinado menu do Portal gestão de vendas
	@type		function
	@version	12.1.33
	@author		Danilo Salve / Squad CRM & Faturamento
	@since		28/12/2021
	@param		cProgram, character, programa/função
	@param		cLabel, character, descrição do programa
	@param		nOperation, numeric, tipo de operação
	@return 	json, json com os privilegios do menu.
/*/
//----------------------------------------------------------------------------
static function menuAccessRule(cProgram as character, cLabel as character, nOperation as numeric) as json
	local jAccess := JsonObject():new() as json

	jAccess['menu'] := cLabel
	jAccess['canAccessMenu'] := canAccessProgram(cProgram, nOperation)
return jAccess

//----------------------------------------------------------------------------
/*/{Protheus.doc} canAccessProgram
	Obtem os Privilegios de acesso de uma rotina.
	@type		function
	@version	12.1.33
	@author		Danilo Salve / Squad CRM & Faturamento
	@since		28/12/2021
	@param		cProgram, character, código do programa (Ex: MATA410)
	@param		nOperation, numeric, tipo de operação do menu.
	@return 	logical, retorna verdadeiro caso o usuario possua acesso ao programa.
/*/
//----------------------------------------------------------------------------
static function canAccessProgram(cProgram as character, nOperation as numeric) as logical
return MPUserHasAccess(cProgram, nOperation, /*cUserId*/, .f., .f., /*reservado*/, nil)
