#include "tlpp-core.th"

namespace tgv.financialstatus
using namespace tgv.util

//------------------------------------------------------------------------------
/*/{Protheus.doc} FinancialStatusSyncProtheusData
	Efetua a consulta do status financeiro dos clientes no Protheus.

	@sample		FinancialStatusSyncProtheusData:New()
	@author		Danilo Salve
	@since		18/09/2020
	@version	12.1.27
/*/
//------------------------------------------------------------------------------
CLASS FinancialStatusSyncProtheusData FROM FWAdapterBaseV2
	Public Data aCustomFields		as Array
	Public Data cCustomFields		as Character
	Public Data cSource				as Character
	Public Data isAdmin				as Logical
	Public Data lcanObfuscateField	as Logical
	Public Data oHashFieldsPD		as Object
	Public Data nFields				as Numeric

	Public Method New() as Object
	Public Method GetAllSync()
	Public Method RowToJson()
	Public Method AddCustomFields()
EndClass

//------------------------------------------------------------------------------
/*/{Protheus.doc} New
	Efetua a consulta do status financeiro dos clientes no Protheus.

	@sample		FinancialStatusSyncProtheusData:New()
	@author		Danilo Salve
	@since		18/09/2020
	@version	12.1.27
/*/
//------------------------------------------------------------------------------
Method New() as Object CLASS FinancialStatusSyncProtheusData
	_Super:New( "GET", .T. )
Return Self

//------------------------------------------------------------------------------
/*/{Protheus.doc} GetAllSync
	Retorna o status financeiro dos clientes.

	@sample		FinancialStatusSyncProtheusData:GetAllSync( 1, 10, '20200101'  )
	@param		nPage		, Numeric	, Número da página que será retornada
	@param		nPageSize	, Numeric	, Quantidade de registros por pagina
	@param		cDate		, Character	, Data de sincronismo
	@author		Squad CRM & Faturamento
	@since		24/09/2020
	@version	12.1.27
/*/
//------------------------------------------------------------------------------
Method GetAllSync(nPage as Numeric, nPageSize as Numeric, cDate as Character) CLASS FinancialStatusSyncProtheusData
	Local aArea 	AS ARRAY
	Local cWhere	AS Character

	Default nPage       := 1
	Default nPageSize   := 10

	aArea := GetArea()

	AddFields( self, .F. )

	::AddCustomFields()
	::setPage(nPage)
	::setPageSize(nPageSize)
	::SetQuery( GetQuery(.F.) )

	cWhere := " SA1.A1_FILIAL = '" + FwXFilial("SA1") + "'"

	If !Empty(cDate) .And. SubStr(cDate,1,1) != '-'
		cWhere += " AND SE1.S_T_A_M_P_ > " + ConvertTimeStamp( cDate, "value", "timestamp" )
	Else
		cWhere += " AND SA1.D_E_L_E_T_ = ' ' "
	EndIf

	::SetWhere( cWhere )
	::SetOrder( SqlOrder( SA1->( IndexKey(1) ) ) ) // A1_FILIAL, A1_COD, A1_LOJA  

	If ::Execute()
		::FillGetResponse()
	EndIf

	RestArea( aArea )
	aSize( aArea, 0 )
	aSize(::aCustomFields, 0)
Return Nil

//------------------------------------------------------------------------------
/*/{Protheus.doc} RowToJson
	Converte o retorno da consulta SQL em JSON.

	@sample		FinancialStatusSyncProtheusData:RowToJson( cAlias, aFields, .F.)
	@param		cAlias       , Character, Alias da Consulta
	@param		aFields      , Array   	, Campos (MapFields)
	@param		lEmpty       , Logical 	, Vazio.
	@author		Danilo Salve
	@since		22/12/2020
	@version	12.1.27 ou Superior
/*/
//------------------------------------------------------------------------------
METHOD RowToJson( cAlias as Character, aFields as Array, lEmpty as Logical) CLASS FinancialStatusSyncProtheusData
	Default lEmpty := .F.
	ConvertResponseValues(aFields, cAlias, lEmpty, @Self)
Return Nil

//------------------------------------------------------------------------------
/*/{Protheus.doc} AddCustomFields
	Metodo Auxiliar, deve carregar os Atributos utilizados na Conversão dos valores.

	@author		Squad CRM & Faturamento
	@since		02/06/2021
	@version	12.1.27
/*/
//------------------------------------------------------------------------------
METHOD AddCustomFields() CLASS FinancialStatusSyncProtheusData
	Self:cSource:= "TGVFINANCIALSTATUS"
	Self:isAdmin := FwIsAdmin()
	Self:aCustomFields := {}
	Self:nFields := Len(Self:oJsonObj:aMapFields)

	aAdd(Self:aCustomFields, {"id"	, {|| GetInternalIdQry((cAlias)->A1_FILIAL + (cAlias)->A1_COD + (cAlias)->A1_LOJA)}})

	Self:cCustomFields := "id"
	Self:lcanObfuscateField := CanAccessProtectedData(Self:isAdmin)
Return Nil
