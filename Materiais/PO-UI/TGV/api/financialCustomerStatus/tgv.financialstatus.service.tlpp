#include 'tlpp-core.th'

namespace tgv.financialstatus

static __instance as Object

//------------------------------------------------------------------------------
/*/{Protheus.doc} FinancialStatusService
	Disponibiliza um serviço para consultar o status financeiro dos clientes
	no Protheus.

	@sample		FinancialStatusService
	@author		Danilo Salve
	@since		18/09/2020
	@version	12.1.27
/*/
//------------------------------------------------------------------------------
Class FinancialStatusService
	Data jResponse as Json

	Public Method New() as Object
	Public Method getInstance() as Object
	Public Method getAllSync() as Json
	Public Method getAll() as Json
Endclass

//------------------------------------------------------------------------------
/*/{Protheus.doc} New
	Disponibiliza um serviço para consultar o status financeiro dos clientes
	no Protheus.

	@sample		FinancialStatusService:New()
	@author		Danilo Salve
	@since		18/09/2020
	@version	12.1.27
/*/
//------------------------------------------------------------------------------
Method New() as Object Class FinancialStatusService
	::jResponse := JsonObject():New()
Return Self

//------------------------------------------------------------------------------
/*/{Protheus.doc} getInstance
	Retorna uma instancia do serviço

	@sample		FinancialStatusService:GetInstance()
	@author		Danilo Salve
	@since		18/09/2020
	@version	12.1.27
/*/
//------------------------------------------------------------------------------
Method getInstance() as Object Class FinancialStatusService
	If (__instance == Nil)
		__instance := FinancialStatusService():new()
	EndIf
Return __instance

//------------------------------------------------------------------------------
/*/{Protheus.doc} getAllSync
	Retorna o Status Financeiro dos Clientes.

	@sample		FinancialStatusService:GetFinancialStatus(1, 10)
	@param		nPage,      Numerico, Numero da Página
	@param		nPageSize,  Numerico, Tamanho da página
	@param		cDate,      Character, Data de Sincronismo/Alteracao
	@author		Squad CRM & Faturamento
	@since		24/09/2020
	@version	12.1.27
/*/
//------------------------------------------------------------------------------
Method getAllSync(nPage as Numeric, nPageSize as Numeric, cDate as Character) as Json Class FinancialStatusService
	Local oData		:= FinancialStatusDataFactory():getDataSync()

	Default nPage		:= 1
	Default nPageSize	:= 10
	Default cDate		:= ""

	oData:GetAllSync(nPage, nPageSize, cDate)

	If oData:lOk
		::jResponse := oData:GetJSONResponse()
	Else
		::jResponse := SetRestFault(oData:GetCode(), oData:GetMessage())
	EndIf

	oData:DeActivate()
	FreeObj(oData)
Return ::jResponse

//------------------------------------------------------------------------------
/*/{Protheus.doc} getAll
	Efetua a consulta de Status financeiro de cleintes - Utilizado quando o
	TOTVS Gestão Vendas	estiver operando Online.

	@sample		oService:getAll(1, 10, {}, 'code, store', Nil)
	@param		nPage		, Numeric	, Número da página que será retornada
	@param		nPageSize	, Numeric	, Quantidade de registros por pagina
	@param		aURLFilter	, Array		, Lista de Filtros no padrão do FWAdapterBaseV2
	@param		cFields		, Character	, Lista de campos que devem ser retornados
	@param		cCustomerId	, Character	, Codigo do Cliente (Codigo e Loja)
	@param		cSort		, Character	, Ordernação do Response
	@return		Json		, Reposta da Consulta/Requisição
	@author		Squad CRM/FAT
	@since		27/07/2021
	@version	12.1.33
/*/
//------------------------------------------------------------------------------
Method getAll(nPage as Numeric, nPageSize as Numeric, aURLFilter as Array, cFields as Character, cCustomerId as Character,;
	cCustomerStore as Character, cSort as Character) as Json Class FinancialStatusService
	Local oData := FinancialStatusDataFactory():getData()

	If !Empty(cCustomerId)
		oData:oJsonObj:lList := .F.
	Endif

	oData:GetAll(nPage, nPageSize, aURLFilter, cFields, cCustomerId, cCustomerStore, cSort)

	If oData:lOk
		::jResponse := oData:GetJSONResponse()
	Else
		::jResponse := SetRestFault(oData:GetCode(), oData:GetMessage())
	EndIf

	oData:DeActivate()
	FreeObj( oData )
Return ::jResponse
