#include "tlpp-core.th"

namespace tgv.products
using namespace tgv.util

//------------------------------------------------------------------------------
/*/{Protheus.doc} ProductsProtheusDataSync
	Efetua a consulta de produtos do Protheus utilizando o padrão do PO-SYNC

	@author		Danilo Salve
	@since		03/08/2021
	@version	12.1.23
/*/
//------------------------------------------------------------------------------
Class ProductsProtheusDataSync from FWAdapterBaseV2
	Public Data aCustomFields		as Array
	Public Data cCustomFields		as Character
	Public Data cSource				as Character
	Public Data isAdmin				as Logical
	Public Data lcanObfuscateField	as Logical
	Public Data oHashFieldsPD		as Object
	Public Data nFields				as Numeric

	Public Method New() as Object
	Public Method Get()
	Public Method RowToJson()
	Public Method AddCustomFields()
EndClass

//------------------------------------------------------------------------------
/*/{Protheus.doc} ProductsProtheusDataSync
	Obtem um objeto utilizado para consultar Produtos.

	@sample		oProductsDataSync:New()
	@author		Danilo Salve
	@since		03/08/2021
	@version	12.1.33
/*/
//------------------------------------------------------------------------------
Method New() as Object Class ProductsProtheusDataSync
	_Super:New("GET",.T.)
Return Self

//------------------------------------------------------------------------------
/*/{Protheus.doc} Get
	Efetua a consulta de Produtos.

	@sample		oProductsDataSync:Get(1, 10, '2020-12-10T13:56:03Z')
	@param		nPage		, Numeric	, Número da página que será retornada
	@param		nPageSize	, Numeric	, Quantidade de registros por página
	@param 		cDateSync	, Character	, Data de Sincronismo/Alteracao
	@author		Danilo Salve
	@since		03/08/2021
	@version	12.1.33
/*/
//------------------------------------------------------------------------------
Method Get(nPage as Numeric, nPageSize as Numeric, cDateSync as Character) class ProductsProtheusDataSync
	Local aArea	:= GetArea()
	Local cInnerJoin := ""
	Local cWhere := ""
	Local cSeller := getSellerFromFilter(.F.,.T.)
	
	AddMapFieldsSB1( self, .F. )

	cInnerJoin+= ' INNER JOIN ' +RetSqlName('AQ5')+ ' AQ5 '
	cInnerJoin+= ' ON'
	cInnerJoin+= ' SB1.B1_COD = AQ5.AQ5_CODENT '
	cInnerJoin+= ' INNER JOIN ' +RetSqlName('AQ4')+ ' AQ4 '
	cInnerJoin+= ' ON'
	cInnerJoin+= ' AQ5.AQ5_UUID = AQ4.AQ4_UUID '
	cInnerJoin+= ' AND AQ5.AQ5_FILIAL = AQ4.AQ4_FILIAL '
	cInnerJoin+= ' AND AQ5.D_E_L_E_T_ = AQ4.D_E_L_E_T_ '

	::AddCustomFields()
	::setPage( nPage )
	::setPageSize( nPageSize )
	::SetQuery( GetQueryTGV( "SB1", cInnerJoin) )

	cWhere += getFilterSB1( cDateSync, /*cCustomerId*/, /*cStoreId*/, /*cPriceListId*/, .F.) 
	cWhere += " AND AQ4.AQ4_FILIAL = '" + FwXFilial('AQ4') + "'"
	cWhere += " AND AQ4.AQ4_VEND = '" + cSeller + "'"
	cWhere += " AND AQ4.AQ4_SCHEMA = '000012'"
	cWhere += " AND AQ4.AQ4_DATA = '"+DTOS(Date())+"'"
	cWhere += " AND AQ4.D_E_L_E_T_ = ' '"

	::SetWhere(cWhere)
	::SetOrder( "B1_FILIAL, B1_COD" ) 

	If ::Execute()
		::FillGetResponse()
	EndIf

	aSize(::aCustomFields, 0)
	RestArea( aArea )
	aSize( aArea, 0 )
Return Nil

//------------------------------------------------------------------------------
/*/{Protheus.doc} RowToJson
	Converte o retorno da consulta SQL em JSON
	(Utilizado para converter o campo Delete Logico)

	@sample		oProductsDataSync:RowToJson( cAlias, aFields, .F.)
	@param		cAlias	, Character	, Alias da Consulta
	@param		aFields	, Array		, Campos (MapFields)
	@param		lEmpty	, Logical	, Vazio.
	@author		Danilo Salve
	@since		03/08/2021
	@version	12.1.33
/*/
//------------------------------------------------------------------------------
METHOD RowToJson(cAlias as Character, aFields as Array , lEmpty as Logical) CLASS ProductsProtheusDataSync
	ConvertResponseValues(aFields, cAlias, lEmpty, @Self )
Return Nil

//------------------------------------------------------------------------------
/*/{Protheus.doc} AddCustomFields
	Metodo Auxiliar, deve carregar os Atributos utilizados na conversão dos valores.

	@author		Danilo Salve
	@since		03/08/2021
	@version	12.1.33
/*/
//------------------------------------------------------------------------------
METHOD AddCustomFields() CLASS ProductsProtheusDataSync
	Self:cSource:= "TGVPRODUCTS"
	Self:isAdmin := FwIsAdmin()
	Self:aCustomFields := {}
	Self:nFields := Len(Self:oJsonObj:aMapFields)

	aAdd(::aCustomFields, {"internalid", {||GetInternalIdQry((cAlias)->B1_FILIAL + (cAlias)->B1_COD )}})

	Self:cCustomFields := "internalid"
	Self:lcanObfuscateField := CanAccessProtectedData(Self:isAdmin)
Return Nil
