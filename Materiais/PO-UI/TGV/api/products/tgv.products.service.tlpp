#include "tlpp-core.th"

namespace tgv.products

static __instance as object

//------------------------------------------------------------------------------
/*/{Protheus.doc} ProductsService
	Disponibiliza um serviço de Produtos

	@sample		ProductsService
	@author		Squad CRM & Faturamento
	@since		15/10/2020
	@version	12.1.27
/*/
//------------------------------------------------------------------------------
Class ProductsService
	Public Method New() as Object
	Public Method getInstance() as Object
	Public Method getProducts() as Json
	Public Method getProductsSync() as Json
EndClass

//------------------------------------------------------------------------------
/*/{Protheus.doc} New
	Disponibiliza uma nova intancia do serviço Produtos.

	@sample		ProductsService:New()
	@author		Squad CRM & Faturamento
	@since		15/10/2020
	@version	12.1.27
/*/
//------------------------------------------------------------------------------
Method New() as Object Class ProductsService
Return Self

//------------------------------------------------------------------------------
/*/{Protheus.doc} GetInstance
	Retorna uma instancia do serviço

	@sample		ProductsService:GetInstance()
	@author		Squad CRM & Faturamento
	@since		15/10/2020
	@version	12.1.27
/*/
//------------------------------------------------------------------------------
Method getInstance() as Object Class ProductsService
	If (__instance == Nil)
		__instance := ProductsService():New()
	EndIf
Return __instance

//------------------------------------------------------------------------------
/*/{Protheus.doc} getProducts
	Efetua a consulta de Produtos
	
	@sample		oService:getProductsSync(1, 10, {}, 'code, description', '-code', Nil)
	@param		nPage		     , Numeric	, Número da página que será retornada
	@param		nPageSize	     , Numeric	, Quantidade de registros por página
	@param		aURLFilter	     , Array		, Lista de Filtros no padrão do FWAdapterBaseV2
	@param		cFields		     , Character	, Lista de campos que devem ser retornados
	@param		cSort		     , Character	, Ordernação do Response
	@param		cPriceListId     , Character	, Código da Tabela de Preço
	@param		cCustomerId	     , Character	, Código do Cliente
	@param		cStoreId	     , Character	, Loja do Cliente
	@param      lFilterPriceList , Logical      , Indica se a lista de produtos deve estar relacionada na tabela de preço informada
	@param      cQuickFilter     , Character    , Filtro rápido a ser aplicado na lista de produtos a ser retornada
	@author		Squad CRM & Faturamento
	@since		15/10/2021
	@version	12.1.27
/*/
//------------------------------------------------------------------------------
Method getProducts(nPage as Numeric, nPageSize as Numeric, aURLFilter as Array, cFields as Character,;
 cSort as Character, cPriceListId as Character, cCustomerId as Character, cStoreId as Character,;
 lFilterPriceList as Logical, cQuickFilter as Character) as Json Class ProductsService
	Local oProducts := ProductsDataFactory():getData()
	Local jResponse as Json	

	oProducts:Get(nPage, nPageSize, aURLFilter, cFields, cSort, cPriceListId, cCustomerId, cStoreId, lFilterPriceList, cQuickFilter)

	If oProducts:lOk
		jResponse := oProducts:getJSONResponse()
	Else
		jResponse := SetRestFault(oProducts:GetCode(), oProducts:GetMessage())
	EndIf

	oProducts:DeActivate()
	FreeObj(oProducts)
Return jResponse

//------------------------------------------------------------------------------
/*/{Protheus.doc} getProductsSync
	Efetua a consulta de Produtos

	@sample		oService:getProductsSync(1, 10, '2020-12-10T13:56:03Z')
	@param		nPage		, Numeric	, Número da página que será retornada
	@param		nPageSize	, Numeric	, Quantidade de registros por página
	@param 		cDateSync	, Character	, Data de Sincronismo/Alteracao
	@return		JsonObject  , Reposta da Consulta/Requisição
	@author		Danilo Salve
	@since		03/08/2021
	@version	12.1.27
/*/
//------------------------------------------------------------------------------
Method getProductsSync(nPage as Numeric, nPageSize as Numeric, cDateSync as Character) as Json Class ProductsService
	Local oProducts := ProductsDataFactory():getDataSync()
	Local jResponse as Json

	oProducts:Get(nPage, nPageSize, cDateSync)

	If oProducts:lOk
		jResponse := oProducts:getJSONResponse()
	Else
		jResponse := SetRestFault(oProducts:GetCode(), oProducts:GetMessage())
	EndIf

	oProducts:DeActivate()
	FreeObj(oProducts)
Return jResponse
