#include "tlpp-core.th"

namespace tgv.products

static __dataProvider := "protheus"
static __oActiveData  as Object
static __oActiveDataSync as Object

//------------------------------------------------------------------------------
/*/{Protheus.doc} ProductsDataFactory
	@sample		ProductsDataFactory:New()
	@author		Squad CRM/Faturamento
	@since		15/10/2020
	@version	12.1.27
/*/
//------------------------------------------------------------------------------
Class ProductsDataFactory
	Public Method new() as Object
	Static Method getData() as object
	Static Method getDataSync() as object
EndClass

//------------------------------------------------------------------------------
/*/{Protheus.doc} New
	Cria um nova instancia.

	@sample		ProductsDataFactory:New()
	@author		Squad CRM/Faturamento
	@since		15/10/2020
	@version	12.1.27
/*/
//------------------------------------------------------------------------------
Method new() as Object class ProductsDataFactory
Return Self

//------------------------------------------------------------------------------
/*/{Protheus.doc} getData
	Retorna o tipo de objeto utilizado para consulta.

	@return		__oActiveData, Objeto, Objeto data
	@author		Squad CRM/Faturamento
	@since		15/10/2020
	@version	12.1.27
/*/
//------------------------------------------------------------------------------
Method getData() as Object class ProductsDataFactory
	If __oActiveData == Nil
		If __dataProvider == "protheus"
			__oActiveData := ProductsProtheusData():new()
		Else
			UserException("Invalid Provider")
		EndIf
	EndIf
Return __oActiveData

//------------------------------------------------------------------------------
/*/{Protheus.doc} getDataSync
	Retorna o tipo de objeto utilizado para consulta.

	@return		__oActiveData, Objeto, Objeto data
	@author		Danilo Salve
	@since		03/08/2021
	@version	12.1.33
/*/
//------------------------------------------------------------------------------
Method getDataSync() as Object class ProductsDataFactory
	If __oActiveDataSync == Nil
		If __dataProvider == "protheus"
			__oActiveDataSync := ProductsProtheusDataSync():new()
		Else
			UserException("Invalid Provider")
		EndIf
	EndIf
Return __oActiveDataSync
