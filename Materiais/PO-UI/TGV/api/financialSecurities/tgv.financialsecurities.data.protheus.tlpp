#include "tlpp-core.th"

namespace tgv.financialsecurities
using namespace tgv.util

Static __lGVFINQRY := ExistBlock("GVFINQRY")

//------------------------------------------------------------------------------
/*/{Protheus.doc} FinancialSecuritiesProtheusData
	Efetua a consulta de t칤tulos a receber Protheus.
	@type		class
	@author		Danilo Salve
	@since		18/09/2020
	@version	12.1.27
/*/
//------------------------------------------------------------------------------
CLASS FinancialSecuritiesProtheusData FROM FWAdapterBaseV2
	Public Data aCustomFields		as Array
	Public Data cCustomFields		as Character
	Public Data cSource				as Character
	Public Data isAdmin				as Logical
	Public Data lcanObfuscateField	as Logical
	Public Data oHashFieldsPD		as Object
	Public Data nFields				as Numeric

	Public Method New() as Object
	Public Method Get()
	Public Method GetDefault() as Json
	Public Method RowToJson()
  	Public Method AddCustomFields()
EndClass

//------------------------------------------------------------------------------
/*/{Protheus.doc} FinancialSecuritiesProtheusData::New(cVerbo as Character, lList as Logical) as Object
	Cria uma nova instancia do Objeto CustomerProtheusData
	@type		method
	@param		cVerbo	, Character	, Verbo que ser치 utilizado na requisi칞칚o
	@param		lList	, Logical	, Se ir치 listar o Json
	@author		Squad CRM/Faturamento
	@since		18/09/2020
	@version	12.1.27
/*/
//------------------------------------------------------------------------------
Method New(cVerbo as Character, lList as Logical) as Object CLASS FinancialSecuritiesProtheusData
	Default cVerbo 	:= "GET"
	Default lList 	:= .T.

  	_Super:New(cVerbo, lList)
    
    ::oHashFieldsPD := tHashMap():New()
Return Self

//------------------------------------------------------------------------------
/*/{Protheus.doc} FinancialSecuritiesProtheusData::Get
	Obtem uma Lista de Titulos a Receber conforme parametros especificados.
	@type method
	@param		nPage		, Numeric	, N칰mero da p치gina que ser치 retornada
	@param		nPageSize	, Numeric	, Quantidade de registros por pagina
	@param		aQueryString, Array		, Filtro utilizado para filtrar os registros
	@author		Danilo Salve / Squad CRM & Faturamento
	@since		21/01/2021
	@version	12.1.27
/*/
//------------------------------------------------------------------------------
Method Get(nPage as Numeric, nPageSize as Numeric, aQueryString as Array) CLASS FinancialSecuritiesProtheusData
	Local aArea		AS ARRAY
	Local cWhere	AS Character
	Local nWhere	AS NUMERIC

	Default nPage           := 1
	Default nPageSize       := 10
	Default aQueryString    := {}

	aArea := GetArea()

	AddMapFields( self )

  	::AddCustomFields()
	::setPage( nPage )
	::setPageSize( nPageSize )
	::SetQuery( GetQuery() )

	cWhere := " SE1.E1_FILIAL = '" + FwXFilial("SE1") + "' AND SE1.E1_SALDO > 0 AND SE1.D_E_L_E_T_ = ' ' "

	If __lGVFINQRY
		cWhere += ExecBlock("GVFINQRY", .F., .F.)
	Endif
	
	For nWhere := 1 To Len(aQueryString)
		cWhere += aQueryString[nWhere]
	Next

	::SetWhere( cWhere )
	::SetOrder( "E1_FILIAL,E1_PREFIXO,E1_NUM,E1_PARCELA,E1_TIPO" )

	If ::Execute()
		::FillGetResponse()
	EndIf

  	FTPDUnload()
	::oHashFieldsPD:Clean()

	RestArea( aArea )
	aSize( aArea, 0 )
  	aSize(::aCustomFields, 0)
  	FreeObj(::oHashFieldsPD)
Return Nil

//------------------------------------------------------------------------------
/*/{Protheus.doc} FinancialSecuritiesProtheusData::RowToJson
	Converte o retorno da consulta SQL em JSON
	@type 		method
	@param		cAlias	, Character	, Alias da Consulta
	@param		aFields	, Array		, Campos (MapFields)
	@param		lEmpty	, Logical	, Vazio.
	@author		Danilo Salve / Squad CRM & Faturamento
	@since		22/12/2020
	@version	12.1.27 ou Superior
/*/
//------------------------------------------------------------------------------
METHOD RowToJson( cAlias as Character, aFields as Array, lEmpty as Logical) CLASS FinancialSecuritiesProtheusData
	Default lEmpty := .F.
	ConvertResponseValues(aFields, cAlias, lEmpty, @Self)
Return Nil

//------------------------------------------------------------------------------
/*/{Protheus.doc} AddMapFields
	Cria o Mapa de campos Protheus x API
	@type		function
	@param		oSelf	, Object	, Objeto com heran칞a da classe FWAdapterBaseV2
	@author		Danilo Salve
	@since		18/09/2020
	@version	12.1.27
/*/
//------------------------------------------------------------------------------
Static Function AddMapFields( oSelf as Object )
	Local aFields       := {"E1_FILIAL", "E1_PREFIXO", "E1_NUM", "E1_PARCELA", "E1_TIPO"}
	Local aInternalId   := GetInternalId( aFields )

  	oSelf:AddMapFields( "id"					, "id"			, .T., .F., { "id"			, 'C', aInternalId[1] , 0 }, "' '")
	oSelf:AddMapFields( "branchid"				, "E1_FILIAL"	, .T., .F., { "E1_FILIAL"	, 'C', GetFieldLength("E1_FILIAL")	, 0 } )
	oSelf:AddMapFields( "prefix"				, "E1_PREFIXO"	, .T., .F., { "E1_PREFIXO"	, 'C', GetFieldLength("E1_PREFIXO") , 0 } )
	oSelf:AddMapFields( "titlecode"				, "E1_NUM"		, .T., .F., { "E1_NUM"		, 'C', GetFieldLength("E1_NUM") 	, 0 } )
	oSelf:AddMapFields( "installment"			, "E1_PARCELA"	, .T., .F., { "E1_PARCELA"	, 'C', GetFieldLength("E1_PARCELA")	, 0 } )
	oSelf:AddMapFields( "type"					, "E1_TIPO"		, .T., .F., { "E1_TIPO"		, 'C', GetFieldLength("E1_TIPO")	, 0 } )
	oSelf:AddMapFields( "customerid"			, "E1_CLIENTE"	, .T., .F., { "E1_CLIENTE"	, 'C', GetFieldLength("E1_CLIENTE")	, 0 } )
	oSelf:AddMapFields( "customerstore"			, "E1_LOJA"		, .T., .F., { "E1_LOJA"		, 'C', GetFieldLength("E1_LOJA")	, 0 } )
	oSelf:AddMapFields( "billvalue"				, "E1_VALOR"	, .T., .F., { "E1_VALOR"	, 'N', GetFieldLength("E1_VALOR")	, GetFieldDecimal("E1_VALOR") } )
	oSelf:AddMapFields( "titlebalance"			, "E1_SALDO"	, .T., .F., { "E1_SALDO"	, 'N', GetFieldLength("E1_SALDO")	, GetFieldDecimal("E1_SALDO") } )
	oSelf:AddMapFields( "writeoffnetvalue"		, "E1_VALLIQ"	, .T., .F., { "E1_VALLIQ"	, 'N', GetFieldLength("E1_VALLIQ")	, GetFieldDecimal("E1_VALLIQ") } )
	oSelf:AddMapFields( "installmentmaturity"	, "E1_VENCREA"	, .T., .F., { "E1_VENCREA"	, 'D', GetFieldlength("E1_VENCREA")	, 0 } )
	oSelf:AddMapFields( "issuedate"				, "E1_EMISSAO"	, .T., .F., { "E1_EMISSAO"	, 'D', GetFieldlength("E1_EMISSAO")	, 0 } )
	oSelf:AddMapFields( "status"				, "e1status"	, .T., .F., { "e1status"	, 'C', 1, 0 }, GetStatus())
	oSelf:AddMapFields( "deleted"				, "deleted"		, .T., .F., { "deleted"		, 'C', 1, 0 }, "SE1.D_E_L_E_T_")

	aSize(aFields, 0)
Return Nil

//------------------------------------------------------------------------------
/*/{Protheus.doc} GetQuery
	Monta a express伋 SQL para consulta dos titulos a receber
	@type		function
	@return		Character, Expressao SQL para consulta dos titulos a receber
	@author		Danilo Salve
	@since		18/09/2020
	@version	12.1.27
/*/
//------------------------------------------------------------------------------
Static Function GetQuery() as Character
	Local cQuery AS CHARACTER

	cQuery := " SELECT #QueryFields#"
	cQuery += " FROM " + RetSqlName("SE1") + " SE1 "
	cQuery += " WHERE #QueryWhere#"

Return cQuery

//------------------------------------------------------------------------------
/*/{Protheus.doc} GetStatus
	Monta o case utilizado na consulta de titulos a receber
	@type		function
	@return		Character, Express칚o Case utilizada na consulta
	@author		Danilo Salve
	@since		18/09/2020
	@version	12.1.27
/*/
//------------------------------------------------------------------------------
Static Function GetStatus() as Character
	Local cStatus as Character

	cStatus := " CASE WHEN E1_SALDO > 0 AND E1_VALLIQ = 0 THEN 'A' ELSE "
	cStatus += " CASE WHEN E1_SALDO > 0 AND  E1_VALLIQ > 0 THEN 'P' END END"

Return cStatus

//------------------------------------------------------------------------------
/*/{Protheus.doc} FinancialSecuritiesProtheusData::GetDefault(cCode as Character, cStore as Character) as Json
	Consulta a inadimplencia de um cliente especifico
	@type		method
	@version	12.1.27
	@param		cCode	, Character	, Codigo do Cliente
	@param		cStore	, Character	, Loja do Cliente
	@author		Danilo Salve / Squad CRM & Faturamento
	@since		25/09/2020
	@return 	json, Retorna um Json contendo o atributo 'financialdefault'
/*/
//------------------------------------------------------------------------------
Method GetDefault(cCode as Character, cStore as Character) as Json CLASS FinancialSecuritiesProtheusData
	Local jResponse		:= JsonObject():New()
	Private nTotal    	:= 0
	Private nAtraso   	:= 0

	getDefaultValue(cCode, cStore)
	jResponse['financialdefault'] := IIF( nTotal > 0, CalcularInadimplencia(nTotal, nAtraso), 0)

Return jResponse

//------------------------------------------------------------------------------
/*/{Protheus.doc} getDefaultValue
	Consulta o valor de inadimplencia de um cliente.
	@type		function
	@param		cCode	, Character, Codigo do Cliente
	@param		cStore	, Character, Loja do Cliente
	@author		Danilo Salve
	@since		25/09/2020
	@version	12.1.27
/*/
//------------------------------------------------------------------------------
Static Function getDefaultValue(cCode as Character, cStore as Character)
	Local aArea     := GetArea() as Array
	Local cAliasSE1 := GetNextAlias() as Character
	Local cSepNeg	:= IIf("|" $ MV_CRNEG, "|", ",") as Character
	Local cSepProv	:= IIf("|" $ MVPROVIS, "|", ",") as Character
	Local cSepRA	:= IIf("|" $ MVRECANT, "|", ",") as Character
	Local cWhere	as Character	
	Local nDecimal 	:= GetFieldDecimal("E1_SALDO") as Numeric
	Local nLength 	:= GetFieldLength("E1_SALDO") as Numeric
	
	cWhere := '% E1_TIPO NOT IN ' + FormatIn(MVABATIM, "|") 
	
	If __lGVFINQRY
		cWhere += ExecBlock("GVFINQRY", .F., .F.)
	Endif
	
	cWhere += ' AND E1_TIPO NOT IN ' + FormatIn(MV_CRNEG, cSepNeg)
	cWhere += ' AND E1_TIPO NOT IN ' + FormatIn(MVPROVIS, cSepProv)
	cWhere += ' AND E1_TIPO NOT IN ' + FormatIn(MVRECANT, cSepRA) + '%'

	BeginSql alias cAliasSE1
        column E1_SALDO as Numeric(nLength, nDecimal)
        column E1_VENCREA as Date
        SELECT
            SE1.E1_SALDO,
            SE1.E1_VENCREA
        FROM
            %table:SE1% SE1
        WHERE
            SE1.E1_FILIAL = %xfilial:SE1% AND
            SE1.E1_CLIENTE = %Exp:cCode% AND
            SE1.E1_LOJA = %Exp:cStore% AND
			SE1.E1_STATUS = 'A' AND
            SE1.E1_SALDO > 0 AND
			%exp:cWhere% AND
            SE1.%notDel%
        ORDER BY E1_VENCREA
	EndSql
		
	While (cAliasSE1)->(!Eof())
		nTotal += (cAliasSE1)->E1_SALDO
		If (cAliasSE1)->E1_VENCREA < dDatabase
			nAtraso += (cAliasSE1)->E1_SALDO
		Endif
		(cAliasSE1)->(DbSkip())
	Enddo

	(cAliasSE1)->(DbCloseArea())

	RestArea(aArea)
	aSize(aArea, 0)
Return Nil

//------------------------------------------------------------------------------
/*/{Protheus.doc} CalcularInadimplencia
	Efetua o calculo de inadimplencia
	@type		function
	@version	12.1.27
	@author		Danilo Salve / Squad CRM & Faturamento
	@since		25/09/2020
	@param		nTotal, numeric, valor total de titulos em aberto
	@param		nAtraso, numeric, valor dos titulos atrasados
	@return		numeric, valor da inadimplencia
/*/
//------------------------------------------------------------------------------
Static Function CalcularInadimplencia(nTotal as Numeric, nAtraso as Numeric) as Numeric
Return (nAtraso / nTotal) * 100

//------------------------------------------------------------------------------
/*/{Protheus.doc} AddCustomFields
	Metodo Auxiliar, deve carregar os Atributos utilizados na convers츾춲o dos valores.
	@type		method
	@author		Squad CRM & Faturamento
	@since		07/06/2021
	@version	12.1.27
/*/
//------------------------------------------------------------------------------
METHOD AddCustomFields() CLASS FinancialSecuritiesProtheusData
	Self:cSource:= "TGVFINANCIALSECURITIES"
	Self:isAdmin := FwIsAdmin()
	Self:aCustomFields := {}
	Self:nFields := Len(Self:oJsonObj:aMapFields)

  	aAdd(Self:aCustomFields, {"id", {||GetInternalIdQry((cAlias)->E1_FILIAL + (cAlias)->E1_PREFIXO;
	   + (cAlias)->E1_NUM + (cAlias)->E1_PARCELA+ (cAlias)->E1_TIPO)}})

	Self:cCustomFields := "id"

	Self:lcanObfuscateField := CanAccessProtectedData(Self:isAdmin)
Return Nil
