#include "tlpp-core.th"
#include "tgv.accesslogpd.ch"

namespace tgv.AccessLogPD
using namespace tgv.util

//------------------------------------------------------------------------------
/*/{Protheus.doc} TGVAccessLogPD
	API para integração dos Logs de Acesso do TOTVS Gestão de Vendas

	@author		Danilo Salve
	@since		26/01/2021
	@version	12.1.27
/*/
//------------------------------------------------------------------------------
Class TGVAccessLogPD
	Public Method New() as Object

	@Get("/api/tgv/accesslogpd/")
	Public Method GetAccessLogPd() as Logical

	@Get("/api/tgv/accesslogpd/diff/:dateSync")
	public method GetAccessLogPdDiff() as Logical

	@Post("/api/tgv/accesslogpd/")
	Public Method PostAccessLogPd() as Logical

	@Put("/api/tgv/accesslogpd/:id")
	Public Method PutAccessLogPd() as Logical

	@Delete("/api/tgv/accesslogpd/:id")
	Public Method DeleteAccessLogPd() as Logical
EndClass

//------------------------------------------------------------------------------
/*/{Protheus.doc} TGVAccessLogPD
	Cria uma nova instacia do objeto

	@sample		TGVAccessLogPD:New()
	@author		Danilo Salve
	@since		26/01/2021
	@version	12.1.27
/*/
//------------------------------------------------------------------------------
Method New() as Object Class TGVAccessLogPD
Return Self

//------------------------------------------------------------------------------
/*/{Protheus.doc} GetAccessLogPd
	Retorna uma reposta Fake para o EndPoint /api/tgv/AccessLogPD/

	@sample		GET /api/tgv/AccessLogPD/
	@author		Danilo Salve
	@since		26/01/2021
	@version	12.1.27
/*/
//------------------------------------------------------------------------------
Method GetAccessLogPd() as Logical Class TGVAccessLogPD
	MockResponse("GET")
Return .T.

//------------------------------------------------------------------------------
/*/{Protheus.doc} GetAccessLogPdDiff
	Retorna uma reposta Fake para o EndPoint /api/tgv/AccessLogPD/diff/:date

	@sample		GET /api/tgv/AccessLogPD/diff/2021-01-21
	@author		Danilo Salve
	@since		26/01/2021
	@version	12.1.27
/*/
//------------------------------------------------------------------------------
Method GetAccessLogPdDiff() as Logical Class TGVAccessLogPD
	MockResponse("GET")
Return .T.

//------------------------------------------------------------------------------
/*/{Protheus.doc} PostAccessLogPd
	Inclui um Log de Acesso ref. a Inclusao de um Registro

	@sample		POST /api/tgv/AccessLogPD/
	@author		Danilo Salve
	@since		26/01/2021
	@version	12.1.27
/*/
//------------------------------------------------------------------------------
Method PostAccessLogPd() as Logical Class TGVAccessLogPD
	Local jBody := GetRequestBody()
	oRest:setKeyHeaderResponse('Content-Type','application/json; charset=utf-8')
	If jBody <> Nil
		WriteAccessLog(jBody)
		MockResponse("POST")
		FreeObj(jBody)
	Endif
Return .T.

//------------------------------------------------------------------------------
/*/{Protheus.doc} PutAccessLogPd
	Inclui um Log de Acesso ref. a alteração de um Registro

	@sample		PUT /api/tgv/AccessLogPD/:id
	@author		Danilo Salve
	@since		26/01/2021
	@version	12.1.27
/*/
//------------------------------------------------------------------------------
Method PutAccessLogPd() as Logical Class TGVAccessLogPD
	Local jBody := GetRequestBody()
	oRest:setKeyHeaderResponse('Content-Type','application/json; charset=utf-8')
	If jBody <> Nil
		WriteAccessLog(jBody)
		MockResponse("PUT")
		FreeObj(jBody)
	Endif
Return .T.

//------------------------------------------------------------------------------
/*/{Protheus.doc} DeleteAccessLogPd
	Retorna uma reposta Fake para o EndPoint /api/tgv/AccessLogPD/diff/:date

	@sample		DELETE /api/tgv/AccessLogPD/diff/2021-01-21
	@author		Danilo Salve
	@since		26/01/2021
	@version	12.1.27
/*/
//------------------------------------------------------------------------------
Method DeleteAccessLogPd() as Logical Class TGVAccessLogPD
	MockResponse("DELETE")
Return .T.

//------------------------------------------------------------------------------
/*/{Protheus.doc} MockResponse
	Monta uma Resposta Fake para requisição

	@sample		MockResponse("GET")
	@author		Danilo Salve
	@since		26/01/2021
	@version	12.1.27
/*/
//------------------------------------------------------------------------------
Static Function MockResponse(cVerb as Character)
	Local jResponse		:= JsonObject():New()
	Local nStatusCode	as Numeric

	nStatusCode := IIF(cVerb == "POST", 201, 200)

	If cVerb == "GET"
		jResponse["items"] := {}
		jResponse["po_sync_date"] := FWTimeStamp(6)
		jResponse["hasNext"] := .F.
	ElseIf cVerb == "POST" .Or. cVerb == "PUT"
		jResponse:fromJson(oRest:getBodyRequest())
	ElseIf cVerb == "DELETE"
		jResponse["success"] := STR0001 // Registro excluído com sucesso
	Endif

	oRest:setKeyHeaderResponse('Content-Type','application/json')
	oRest:setStatusCode(nStatusCode)
	oRest:setResponse(jResponse)

	FreeObj(jResponse)
Return Nil


//------------------------------------------------------------------------------
/*/{Protheus.doc} MockResponse
	Monta uma Resposta Fake para requisição

	@sample		MockResponse("GET")
	@author		Danilo Salve
	@since		26/01/2021
	@version	12.1.27
/*/
//------------------------------------------------------------------------------
Static Function WriteAccessLog(jBody as Json) as Logical
	Local cFunction     as Character
	Local lReturn       as Logical
	Local nOperation    as Numeric

	cFunction   := jBody:GetJsonText('function')
	nOperation  := Val(jBody:GetJsonText('operation'))

	If FwPDCanUse(.T.) .And. (VerSenha(192) .Or. VerSenha(193))
		lReturn := FTPDLogUser(cFunction, nOperation)
	Else
		lReturn := .T.
	Endif

Return lReturn
