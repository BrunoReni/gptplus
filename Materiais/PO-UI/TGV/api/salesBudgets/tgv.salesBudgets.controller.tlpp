#include 'tlpp-core.th'
#include 'tlpp-rest.th'
#include 'tgv.salesbudgets.controller.ch'

namespace totvs.protheus.backoffice.tgvSalesBudgets
using namespace tgv.util

Static lExistCheckDbUseArea     := IIF(lExistCheckDbUseArea == NIL, FindFunction("tgv.util.checkDbUseArea"), lExistCheckDbUseArea)
Static lExistIsSellerFilterInDB := FindFunction("tgv.util.isSellerFilterInDB")
//------------------------------------------------------------------------------
/*/{Protheus.doc} tgvSalesBudgets
	API para integração de Orçamentos de vendas - Utilizada no Portal Gestão de Vendas
	@type class
	@version 12.1.33
	@author Squad CRM & Faturamento
	@since 02/03/2021
/*/
//------------------------------------------------------------------------------
class tgvSalesBudgets
	data nPage      as numeric
	data nPageSize  as numeric
	data jResponse  as json
	data oService   as object

	public method new() as object

	@Get("/api/tgv/salesbudgets/sync/")
	public method getHeadersSync() as logical

	@Get("/api/tgv/salesbudgets/sync/diff/:dateSync/")
	public method getHeadersDiff() as logical

	@Get("/api/tgv/salesbudgets/sync/items/")
	public method getItemsSync() as logical

	@Get("/api/tgv/salesbudgets/sync/items/diff/:dateSync/")
	public method getItemsDiff() as logical

	@Get("/api/tgv/salesbudgets/")
	public method getHeaders() as logical

	@Get("/api/tgv/salesbudgets/product/:product/")
	public method getHeadersByProductId() as logical

	@Get("/api/tgv/salesbudgets/:id/")
	public method getHeadersByid() as logical

	@Get("/api/tgv/salesbudgets/:id/items/")
	public method getItems() as logical

	@Get("/api/tgv/salesbudgets/:id/items/:itemId/")
	public method getItemsByID() as logical

	@Post("/api/tgv/salesbudgets/sync/")
	public method postSyncSalesBudget() as Logical

	@Post("/api/tgv/salesbudgets/sync/items")
	public method postSyncSalesBudgetItems() as Logical

	@Put("/api/tgv/salesbudgets/sync/:id")
	public method putSyncSalesBudget() as Logical

	@Put("/api/tgv/salesbudgets/sync/items/:id")
	public method putSyncSalesBudgetItems() as Logical

	@Delete("/api/tgv/salesbudgets/sync/:id")
	public method deleteSyncSalesBudget() as Logical

	@Delete("/api/tgv/salesbudgets/sync/items/:id")
	public method deleteSyncSalesBudgetItems() as Logical

	@Post("/api/tgv/salesbudgets/")
	public method postSalesBudget() as Logical

	@Put("/api/tgv/salesbudgets/:id")
	public method putSalesBudget() as Logical

	@Delete("/api/tgv/salesbudgets/:id")
	public method deleteSalesBudget() as Logical
endclass

//------------------------------------------------------------------------------
/*/{Protheus.doc} tgvSalesBudgets::new() as object
	Obtem uma nova instancia da classe tgvSalesBudgets
	@type method
	@version 12.1.33
	@author Squad CRM & Faturamento
	@since 03/03/2021
	@return object, retorna uma nova instancia da classe
/*/
//------------------------------------------------------------------------------
method new() as object class tgvSalesBudgets
	::nPage         := 1
	::nPageSize     := 10
	::jResponse     := JsonObject():new()
	::oService      := SalesBudgetsService():GetInstance()
return self

//------------------------------------------------------------------------------
/*/{Protheus.doc} tgvSalesBudgets::getHeadersSync() as Logical
	Obtem uma Lista de Cabeçalhos de Orçamento de Venda (SCJ) retornando os dados no padrão do PO-SYNC
	@type method
	@version 12.1.33
	@author Squad CRM & Faturamento
	@since 03/03/2021
	@return logical, este metódo sempre retorna verdadeiro
/*/
//------------------------------------------------------------------------------
method getHeadersSync() as logical class tgvSalesBudgets
	If lExistIsSellerFilterInDB .And. IsSellerFilterInDB()
		getPageAndPageSize(@::nPage, @::nPageSize)
		::jResponse:fromJson(::oService:getHeadersSync(::nPage, ::nPageSize, /*cDate*/))
	Else
		::jResponse:fromJson('{"items": [], "hasNext": false}')
	EndIf
	AnswerRest(::jResponse)
return .T.

//------------------------------------------------------------------------------
/*/{Protheus.doc} tgvSalesBudgets::getHeadersDiff() as Logical
	Obtem uma Lista de Cabeçalhos de Orçamento de Venda (SCJ) alterados	retornando os dados no padrão do PO-SYNC (S_T_A_M_P)
	@type method
	@version 12.1.33
	@author Squad CRM & Faturamento
	@since 03/03/2021
	@return logical, este metódo sempre retorna verdadeiro
/*/
//------------------------------------------------------------------------------
method getHeadersDiff() as logical class tgvSalesBudgets
	If lExistIsSellerFilterInDB .And. IsSellerFilterInDB()
		getPageAndPageSize(@::nPage, @::nPageSize)
		::jResponse:FromJson(::oService:getHeadersSync(::nPage, ::nPageSize, GetSyncDate()))
	Else
		::jResponse:fromJson('{"items": [], "hasNext": false}')
	EndIf
	AnswerRest(::jResponse)
return .T.

//------------------------------------------------------------------------------
/*/{Protheus.doc} tgvSalesBudgets::getItemsSync() as Logical
	Obtem uma Lista de Itens do Orçamento de Venda (SCK) retornando os dados no padrão do PO-SYNC
	@type method
	@version 12.1.33
	@author Squad CRM & Faturamento
	@since 03/03/2021
	@return logical, este metódo sempre retorna verdadeiro
/*/
//------------------------------------------------------------------------------
method getItemsSync() as logical class tgvSalesBudgets
	If lExistIsSellerFilterInDB .And. IsSellerFilterInDB()
		getPageAndPageSize(@::nPage, @::nPageSize)
		::jResponse:FromJson(::oService:getItemsSync(::nPage, ::nPageSize, /*cDateSync*/))
	Else
		::jResponse:fromJson('{"items": [], "hasNext": false}')
	EndIf
	AnswerRest(::jResponse)
return .T.

//------------------------------------------------------------------------------
/*/{Protheus.doc} tgvSalesBudgets::getItemsDiff() as Logical
	Obtem uma Lista de Itens do Orçamento de Venda (SCK) alterados retornando os dados no padrão do PO-SYNC (S_T_A_M_P)
	@type method
	@version 12.1.33
	@author Squad CRM & Faturamento
	@since 03/03/2021
	@return logical, este metódo sempre retorna verdadeiro
/*/
//------------------------------------------------------------------------------
method getItemsDiff() as logical class tgvSalesBudgets
	If lExistIsSellerFilterInDB .And. IsSellerFilterInDB()
		getPageAndPageSize(@::nPage, @::nPageSize)
		::jResponse:FromJson(::oService:getItemsSync(::nPage, ::nPageSize, GetSyncDate()))
	Else
		::jResponse:fromJson('{"items": [], "hasNext": false}')
	EndIf
	AnswerRest(::jResponse)
return .T.

//------------------------------------------------------------------------------
/*/{Protheus.doc} tgvSalesBudgets::getHeaders() as Logical
	Obtem uma Lista de Orçamentos de Vendas (SCJ)
	@type method
	@version 12.1.33
	@author Danilo Salve / Squad CRM & Faturamento
	@since 21/01/2022
	@return logical, este metódo sempre retorna verdadeiro
/*/
//------------------------------------------------------------------------------
method getHeaders() as logical class tgvSalesBudgets
	Local aURLFilter	:= getFilterParam() as array
	Local cFields		:= getQueryParam('FIELDS') as character
	Local cSort			:= getQueryParam('SORT') as character
	
	getPageAndPageSize(@::nPage, @::nPageSize)
	::jResponse:fromJson(::oService:getHeaders(::nPage, ::nPageSize, /*cSalesBudgetId*/, /*cProduct*/, aURLFilter, cFields, cSort))
	AnswerRest(::jResponse)

	aSize(aURLFilter, 0)
return .T.

//-------------------------------------------------------------------------------------------------------------
/*/{Protheus.doc} tgvSalesBudgets::getHeadersByProductId() as Logical
	Obtem uma Lista de Orçamentos de Vendas (SCJ) possibilitando o filtro pelo código ou descrição do produto
	@type method
	@version 12.1.33
	@author Danilo Salve / Squad CRM & Faturamento
	@since 21/01/2022
	@return logical, este metódo sempre retorna verdadeiro
/*/
//-------------------------------------------------------------------------------------------------------------
method getHeadersByProductId() as logical class tgvSalesBudgets
	Local aItems		:= {} as array
	Local aURLFilter	:= getFilterParam() as array
	Local cFields		:= getQueryParam('FIELDS') as character
	Local cSort			:= getQueryParam('SORT') as character

	getPageAndPageSize(@::nPage, @::nPageSize)
	::jResponse:fromJson(::oService:getHeaders(::nPage, ::nPageSize, /*cSalesBudgetId*/, getPathParams("product"), aURLFilter, cFields, cSort))
	aItems := ::jResponse:GetJsonObject( "items" )

	If Empty( aURLFilter ) .Or. ( !Empty( aItems ) .And. Len( aItems ) > 0 )
		AnswerRest( ::jResponse )
	Else
		SetRestFault(404, FWhttpEncode(STR0001) ) // "Nenhum orçamento localizado para o Produto informado"
	Endif

	aSize(aURLFilter, 0)
	aSize(aItems, 0)
return .T.

//-------------------------------------------------------------------------------------------------------------
/*/{Protheus.doc} tgvSalesBudgets::getHeadersById() as Logical
	Obtem uma um Orçamentos de Vendas (SCJ) especifico utilizando o código do orçamento como identificador
	@type method
	@version 12.1.33
	@author Danilo Salve / Squad CRM & Faturamento
	@since 21/01/2022
	@return logical, este metódo sempre retorna verdadeiro
/*/
//-------------------------------------------------------------------------------------------------------------
method getHeadersById() as logical class tgvSalesBudgets
	Local cFields		:= getQueryParam('FIELDS') as character
	
	oRest:setKeyHeaderResponse('Content-Type','application/json')
	getPageAndPageSize(@::nPage, @::nPageSize)
	::jResponse:fromJson(::oService:getHeaders(1, 1, getPathParams("id"), /*cProduct*/, /*aURLFilter*/, cFields, /*cSort*/))

	If len(::jResponse:GetNames()) > 0
		oRest:setResponse(::jResponse)
	Else
		SetRestFault(404, FWhttpEncode(STR0002) ) // "Nenhum orçamento localizado para o código informado"
	EndIf
return .T.

//------------------------------------------------------------------------------
/*/{Protheus.doc} tgvSalesBudgets::getItems() as Logical
	Obtem os itens de um orçamento especifico (SCK)
	@type method
	@version 12.1.33
	@author Danilo Salve / Squad CRM & Faturamento
	@since 21/01/2022
	@return logical, este metódo sempre retorna verdadeiro
/*/
//------------------------------------------------------------------------------
method getItems() as logical class tgvSalesBudgets
	Local aItems		:= {} as array
	Local aURLFilter	:= getFilterParam() as array
	Local cFields		:= getQueryParam('FIELDS') as character
	Local cSort			:= getQueryParam('SORT') as character

	oRest:setKeyHeaderResponse('Content-Type','application/json')
	getPageAndPageSize(@::nPage, @::nPageSize)
	::jResponse:fromJson(::oService:getItems(::nPage, ::nPageSize, getPathParams("id"), /*cItemID*/, aURLFilter, cFields, cSort))
	aItems := ::jResponse:GetJsonObject( "items" )

	If ( !Empty( aItems ) .And. Len( aItems ) > 0 )
		oRest:setResponse(::jResponse)
	Else
		SetRestFault(404, FWhttpEncode(STR0003) ) // "Nenhum orçamento ou item localizado para o código informado"
	EndIf

	aSize(aURLFilter, 0)
	aSize(aItems, 0)
return .T.

//-------------------------------------------------------------------------------------------------------------
/*/{Protheus.doc} tgvSalesBudgets::getHeadersById() as Logical
	Obtem um item de um orçamento especifico (SCK) utilizando o campo item (CK_ITEM) como identificador
	@type method
	@version 12.1.33
	@author Danilo Salve / Squad CRM & Faturamento
	@since 21/01/2022
	@return logical, este metódo sempre retorna verdadeiro
/*/
//-------------------------------------------------------------------------------------------------------------
method getItemsByID() as logical class tgvSalesBudgets
	Local cFields		:= getQueryParam('FIELDS') as character

	oRest:setKeyHeaderResponse('Content-Type','application/json')
	getPageAndPageSize(@::nPage, @::nPageSize)
	::jResponse:fromJson(::oService:getItems(1, 1, getPathParams("id"), getPathParams("itemId"), /*aURLFilter*/, cFields, /*cSort*/))

	If len(::jResponse:GetNames()) > 0
		oRest:setResponse(::jResponse)
	Else
		SetRestFault(404, FWhttpEncode(STR0004) ) // "Nenhum item localizado para o código informado"
	EndIf
return .T.

//------------------------------------------------------------------------------
/*/{Protheus.doc} tgvSalesBudgets::postSyncSalesBudget() as Logical
	Inclui um Orçamento na Fila de Processamento
	@type		method
	@author		Gustavo Nogales
	@since		19/03/2021
	@version	12.1.27
	@return logical, este metódo sempre retorna verdadeiro
/*/
//------------------------------------------------------------------------------

method postSyncSalesBudget() as Logical class tgvSalesBudgets
	GetMockResponse(.T.)
Return .T.

//------------------------------------------------------------------------------
/*/{Protheus.doc} tgvSalesBudgets::postSyncSalesBudgetItems() as Logical
	Inclui um Orçamento na Fila de Processamento
	@type		method
	@author		Gustavo Nogales
	@since		19/03/2021
	@version	12.1.27
	@return logical, este metódo sempre retorna verdadeiro
/*/
//------------------------------------------------------------------------------
method postSyncSalesBudgetItems() as Logical class tgvSalesBudgets
	GetMockResponse(.T.)
Return .T.

//------------------------------------------------------------------------------
/*/{Protheus.doc}  tgvSalesBudgets::putSyncSalesBudget() as Logical
	Altera um orçamento na Fila de Processamento
	@type		method
	@author		Gustavo Nogales
	@since		19/03/2021
	@version	12.1.27
	@return logical, este metódo sempre retorna verdadeiro
/*/
//------------------------------------------------------------------------------
method putSyncSalesBudget() as Logical class tgvSalesBudgets
	GetMockResponse(.F.)
Return .T.

//------------------------------------------------------------------------------
/*/{Protheus.doc} tgvSalesBudgets::putSyncSalesBudgetItems() as Logical
	Altera um Orçamento na Fila de Processamento
	@type	method
	@author		Gustavo Nogales
	@since		19/03/2021
	@version	12.1.27
	@return logical, este metódo sempre retorna verdadeiro
/*/
//------------------------------------------------------------------------------
method putSyncSalesBudgetItems() as Logical class tgvSalesBudgets
	GetMockResponse(.F.)
Return .T.

//------------------------------------------------------------------------------
/*/{Protheus.doc} tgvSalesBudgets::deleteSyncSalesBudget() as Logical
	Exclui um Orçamento na Fila de Processamento
	@type	method
	@author		Gustavo Nogales
	@since		19/03/2021
	@version	12.1.27
/*/
//------------------------------------------------------------------------------
method deleteSyncSalesBudget() as Logical class tgvSalesBudgets
	GetMockResponse(.F.)
Return .T.

//------------------------------------------------------------------------------
/*/{Protheus.doc} tgvSalesBudgets::deleteSyncSalesBudgetItems() as Logical
	Exclui um Orçamento na Fila de Processamento
	@type method
	@author		Gustavo Nogales
	@since		19/03/2021
	@version	12.1.27
/*/
//------------------------------------------------------------------------------
method deleteSyncSalesBudgetItems() as Logical class tgvSalesBudgets
	GetMockResponse(.F.)
Return .T.

//------------------------------------------------------------------------------
/*/{Protheus.doc} tgvSalesBudgets:postSalesBudget() as Logical
	Efetua a inclusão de um Orçamento de venda.
	@type		method
	@version	12.1.33
	@author		Débora Constantino / Squad CRM & Faturamento
	@since		28/01/2022
	@return		logical, Verdadeiro
/*/
//------------------------------------------------------------------------------
method postSalesBudget() as Logical class tgvSalesBudgets
	Local jBody := GetRequestBody() as Json
	Local lCheckDbUseArea := IIF(lExistCheckDbUseArea, checkDbUseArea(), .T.)

	oRest:setKeyHeaderResponse('Content-Type','application/json; charset=utf-8')
	If lCheckDbUseArea
		If jBody <> Nil
			::oService:saveSalesBudgets(jBody, 3, /*cSalesBudgetId*/)
			FreeObj(jBody)
		EndIf
	EndIf
Return .T.

//------------------------------------------------------------------------------
/*/{Protheus.doc} tgvSalesBudgets:putSalesBudget() as Logical
	Efetua a alteração de um Orçamento de venda.
	@type		method
	@version	12.1.33
	@author		Débora Constantino / Squad CRM & Faturamento
	@since		28/01/2022
	@return		logical, Verdadeiro
/*/
//------------------------------------------------------------------------------
Method putSalesBudget() as Logical Class tgvSalesBudgets
	Local jBody := GetRequestBody() as Json
	Local lCheckDbUseArea := IIF(lExistCheckDbUseArea, checkDbUseArea(), .T.)

	oRest:setKeyHeaderResponse('Content-Type','application/json; charset=utf-8')
	If lCheckDbUseArea
		If jBody <> Nil
			::oService:saveSalesBudgets(jBody, 4, GetPathParams("id"))
			FreeObj(jBody)
		Endif
	EndIf
Return .T.

//------------------------------------------------------------------------------
/*/{Protheus.doc} tgvSalesBudgets:deleteSalesBudget() as Logical
	Efetua a exclusão de um Orçamento de venda.
	@type		method
	@version	12.1.33
	@author		Débora Constantino / Squad CRM & Faturamento
	@since		28/01/2022
	@return		logical, Verdadeiro
/*/
//------------------------------------------------------------------------------
Method deleteSalesBudget() as Logical Class tgvSalesBudgets
	Local lCheckDbUseArea := IIF(lExistCheckDbUseArea, checkDbUseArea(), .T.)

	oRest:setKeyHeaderResponse('Content-Type','application/json; charset=utf-8')
	If lCheckDbUseArea
		::oService:saveSalesBudgets(/*jBody*/, 5, GetPathParams("id"))
	EndIf
Return .T.
