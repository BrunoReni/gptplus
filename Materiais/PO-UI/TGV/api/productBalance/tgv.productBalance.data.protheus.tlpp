#include "tlpp-core.th"

namespace tgv.productBalance
using namespace tgv.util

//------------------------------------------------------------------------------
/*/{Protheus.doc} ProductBalanceProtheusData
    Efetua a consulta de saldo de produtos do Protheus.

    @author		Squad CRM/Faturamento
    @since		04/11/2020
    @version	12.1.27
/*/
//------------------------------------------------------------------------------
Class ProductBalanceProtheusData from FWAdapterBaseV2
	Public Method New() as Object
	Public Method Get()
	Public Method RowToJson()
EndClass

//------------------------------------------------------------------------------
/*/{Protheus.doc} ProductBalanceProtheusData
	Efetua a consulta de saldo de produtos do Protheus.

	@sample		ProductBalanceProtheusData():New("GET", .T.)
	@param		cVerbo	, Character	, Verbo que será utilizado na requisição
	@param		lList	, Logical	, Se irá listar o Json
	@author		Squad CRM/Faturamento
	@since		04/11/2020
	@version	12.1.27
/*/
//------------------------------------------------------------------------------
Method New(cVerbo as Character, lList as Logical) as Object Class ProductBalanceProtheusData	
	Default cVerbo := "GET"
	Default lList := .T.
	
	_Super:New(cVerbo, lList)
Return Self

//------------------------------------------------------------------------------
/*/{Protheus.doc} Get
	Efetua a consulta de saldo de produtos.

	@param		nPage       , Numeric	, Número da página que será retornada
	@param		nPageSize   , Numeric	, Quantidade de registros por página
	@param		cCodeProduct, Character	, Codigo do Produto
	@param		cDate - Data da Alteracao
	@author		Squad CRM/Faturamento
	@since		22/01/2020
	@version	12.1.27
/*/
//------------------------------------------------------------------------------
Method Get(nPage as Numeric, nPageSize as Numeric, cCodeProduct as Character, cDate as Character) class ProductBalanceProtheusData
	Local aArea 	as Array
	Local cWhere	as Character

	Default nPage := 1
	Default nPageSize := 10
	Default cCodeProduct := ""
	Default cDate := ""

	aArea := GetArea()
	AddMapFields( self )

	::setPage(nPage)
	::setPageSize(nPageSize)
	::SetQuery( GetQuery() )

	cWhere := " SB2.B2_FILIAL = '" + FwXFilial("SB2") + "'"

	If !Empty(cCodeProduct)
		cWhere += " AND SB2.B2_COD = '" + cCodeProduct + "'"
	Endif

	If !Empty(cDate) .And. SubStr(cDate,1,1) != '-'
		cWhere += " AND SB2.S_T_A_M_P_ > " + ConvertTimeStamp( cDate, "value", "timestamp" )
	Else
		cWhere += " AND SB2.D_E_L_E_T_ = ' ' "
	EndIf

	::SetWhere( cWhere )
	::SetOrder( SqlOrder('B2_FILIAL+B2_COD+B2_LOCAL') ) // Indice 1 da SB2

	If ::Execute()
		::FillGetResponse()
	EndIf

	RestArea( aArea )
	aSize( aArea, 0 )
Return Nil

//------------------------------------------------------------------------------
/*/{Protheus.doc} RowToJson
	Converte o retorno consulta SQL em JSON
	(Utilizado para converter o campo Delete Logico)

	@sample		CarriersProtheusData:RowToJson( cAlias, aFields, .F.)
	@param		cAlias       , Char    , Alias da Consulta
	@param		aFields      , Array   , Campos (MapFields)
	@param		lEmpty       , Logical , Vazio.
	@author		Squad CRM & Faturamento
	@since		22/12/2020
	@version	12.1.27 ou Superior
/*/
//------------------------------------------------------------------------------
METHOD RowToJson(cAlias as Character, aFields as Array, lEmpty as Logical) CLASS ProductBalanceProtheusData
	Local nX        as Numeric
	Local cContent  as Character

	DEFAULT lEmpty := .F.

	For nX := 1 to Len( aFields )
		If lEmpty
			cContent := ""
		Else
			If aFields[nX, 1] == "availablequantity"
				If SB2->(DbSeek((cAlias)->B2_FILIAL + (cAlias)->B2_COD + (cAlias)->B2_LOCAL))
					cContent := ::ValueToJson( aFields[nX][1], SaldoSB2(,,,,,"SB2")  )
				EndIf
			ElseIf aFields[nX, 1] == "deleted"
				cContent := !Empty((cAlias)->( &(aFields[nX, 2]) ))
			ElseIf aFields[nX, 1] == "internalid"
				cContent := ::ValueToJson( aFields[nX][1], (cAlias)->B2_FILIAL + (cAlias)->B2_COD )
			Else
				cContent := ::ValueToJson( aFields[nX][1], (cAlias)->( &(aFields[nX][2]) )  )
			EndIf
		EndIf
		Self:oJsonObj:setProp( aFields[nX][1], cContent, lEmpty  )
	Next
Return Nil

//------------------------------------------------------------------------------
/*/{Protheus.doc} AddMapFields
	Cria o Mapa de campos Protheus x API para os saldos de produto.

	@param		Objeto - Objeto com herança da classe FWAdapterBaseV2
	@author		Squad CRM/Faturamento
	@since		04/11/2020
	@version	12.1.27
/*/
//------------------------------------------------------------------------------
Static Function AddMapFields(oSelf)
	Local aInternalId := GetInternalId( { "B2_FILIAL", "B2_COD" } )

	oSelf:AddMapFields("internalid"				, "internalid"			, .T., .F., { "internalid"			, 'C', aInternalId[1] , 0 }, "' '")
	oSelf:AddMapFields("branchid"				, "B2_FILIAL"			, .T., .F., { "B2_FILIAL"			, 'C', GetFieldLength("B2_FILIAL")  , 0 })
	oSelf:AddMapFields("code"					, "B2_COD"				, .T., .F., { "B2_COD"				, 'C', GetFieldLength("B2_COD")     , 0 })
	oSelf:AddMapFields("description"			, "B1_DESC"				, .T., .F., { "B1_DESC"				, 'C', GetFieldLength("B1_DESC")    , 0 })
	oSelf:AddMapFields("warehouse"				, "B2_LOCAL"			, .T., .F., { "B2_LOCAL"			, 'C', GetFieldLength("B2_LOCAL")   , 0 })
	oSelf:AddMapFields("warehousedescription"	, "NNR_DESCRI"			, .T., .F., { "NNR_DESCRI"			, 'C', GetFieldLength("NNR_DESCRI") , 0 })
	oSelf:AddMapFields("availablequantity"		, "B2_QATU"				, .T., .F., { "B2_QATU"				, 'N', GetFieldLength("B2_QATU")    , 0 })
	oSelf:AddMapFields("orderquantity"			, "B2_QPEDVEN"			, .T., .F., { "B2_QPEDVEN"			, 'N', GetFieldLength("B2_QPEDVEN") , 0 })
	oSelf:AddMapFields("allocatedquantity"		, "B2_QEMP"				, .T., .F., { "B2_QEMP"				, 'N', GetFieldLength("B2_QEMP")    , 0 })
	oSelf:AddMapFields("expectedinflow"			, "B2_SALPEDI"			, .T., .F., { "B2_SALPEDI"			, 'N', GetFieldLength("B2_SALPEDI") , 0 })
	oSelf:AddMapFields("deleted"				, "deleted"				, .T., .F., { "deleted"				, 'C', 1, 0 }, "SB1.D_E_L_E_T_")
Return Nil

//------------------------------------------------------------------------------
/*/{Protheus.doc} GetQuery
	Monta a expressão SQL para consulta dos saldos de produtos.

	@author		Squad CRM/Faturamento
	@since		04/11/2020
	@version	12.1.27
/*/
//------------------------------------------------------------------------------
Static Function GetQuery() as Character
	Local cQuery AS CHARACTER

	cQuery := " SELECT #QueryFields#"
	cQuery += " FROM " + RetSqlName("SB2") + " SB2 "
	cQuery += " INNER JOIN " + RetSqlName("SB1") + " SB1 "
	cQuery += " ON SB1.B1_FILIAL = '" + FwXFilial("SB1") + "' AND SB2.B2_COD = SB1.B1_COD "
	cQuery += " INNER JOIN " + RetSqlName("NNR") + " NNR "
	cQuery += " ON NNR.NNR_FILIAL = '" + FwXFilial("NNR") + "' AND SB2.B2_LOCAL = NNR.NNR_CODIGO " 
	cQuery += " WHERE #QueryWhere#"
Return cQuery
