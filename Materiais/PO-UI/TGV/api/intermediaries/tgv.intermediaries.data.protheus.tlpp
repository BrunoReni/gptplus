#include "tlpp-core.th"

namespace tgv.intermediaries
using namespace tgv.util

//------------------------------------------------------------------------------
/*/{Protheus.doc} IntermediariesProtheusData
	Efetua a consulta de Intermediadores no Protheus.
	@type		class
	@author		Danilo Salve / Squad CRM & Faturamento
	@since		23/06/2021
	@version	12.1.33
/*/
//------------------------------------------------------------------------------
Class IntermediariesProtheusData from FWAdapterBaseV2
	Public Data aCustomFields		as Array
	Public Data cCustomFields		as Character
	Public Data cSource				as Character
	Public Data isAdmin				as Logical
	Public Data lcanObfuscateField	as Logical
	Public Data oHashFieldsPD		as Object
	Public Data nFields				as Numeric
	Public Data hasStatusField		as logical

  	Public Method new() as Object
  	Public Method getIntermediaries()
	Public Method rowToJson()
	Public Method addCustomFields()
EndClass

/*/{Protheus.doc} IntermediariesProtheusData::new(cVerbo as Character, lList as Logical) as Object
	Cria uma nova instancia do Objeto IntermediariesProtheusData
	@type		method
	@version	12.1.33
	@author 	Danilo Salve / Squad CRM & Faturamento
	@since	 	23/06/2021
	@return		object, nova instancia da classe
/*/
//------------------------------------------------------------------------------
Method new(cVerbo as Character, lList as Logical) as Object Class IntermediariesProtheusData
  	Default cVerbo 	:= "GET"
	Default lList 	:= .T.

	_Super:New(cVerbo, lList)
	::oHashFieldsPD := tHashMap():New()
	::hasStatusField := hasStatusField("A1U", "A1U_MSBLQL")
Return Self

//------------------------------------------------------------------------------
/*/{Protheus.doc} IntermediariesProtheusData::getIntermediaries
	Efetua a busca de todos os intermediadores
	@type		method
	@version	12.1.33
	@author		Danilo Salve / Squad CRM & Faturamento
	@since		23/06/2021
	@param		nPage		, Numeric	, Numero da pagina
	@param		nPageSize	, Numeric	, Tamanho da Pagina
	@param		cDateDiff	, Character	, Tamanho da Pagina
/*/
//------------------------------------------------------------------------------
Method getIntermediaries(nPage as Numeric, nPageSize as Numeric, cDateDiff as Character) CLASS IntermediariesProtheusData
	Local cWhere        as Character

	Default nPage       := 1
	Default nPageSize   := 10

	cWhere := " A1U.A1U_FILIAL = '" + FwXFilial("A1U") + "'"

	If Empty(cDateDiff)
		cWhere += " AND A1U.D_E_L_E_T_ = ' ' "
	Elseif SubStr(cDateDiff,1,1) != '-'
		cWhere += " AND A1U.S_T_A_M_P_ > " + ConvertTimeStamp( cDateDiff, "value", "timestamp" )
	Endif

	AddMapFields( Self )

	::AddCustomFields()
	::setPage( nPage )
	::setPageSize( nPageSize )
	::SetQuery( getQueryTGV("A1U") )
	::SetWhere( cWhere )
	::SetOrder( "A1U_FILIAL,A1U_CODIGO" )

	If ::Execute()
		::FillGetResponse()
	EndIf

	FTPDUnload()
	::oHashFieldsPD:Clean()
	aSize(::aCustomFields, 0)
	FreeObj(::oHashFieldsPD)
Return Nil

//------------------------------------------------------------------------------
/*/{Protheus.doc} IntermediariesProtheusData::RowToJson
	Converte o retorno da consulta SQL em JSON
	@version	12.1.33
	@type 		method
	@author		Danilo Salve / Squad CRM & Faturamento
	@since		23/06/2021
	@param		cAlias	, character	, Alias da Consulta
	@param		aFields	, Array		, Campos (MapFields)
	@param		lEmpty	, Logical	, Vazio.
	/*/
//------------------------------------------------------------------------------
Method rowToJson(cAlias as Character, aFields as Array, lEmpty as Logical) CLASS IntermediariesProtheusData
	Default lEmpty := .F.
	ConvertResponseValues(aFields, cAlias, lEmpty, @Self )

	if (cAlias)->(!Eof()) .And. (cAlias)->(!Bof())
		Self:oJsonObj:setProp( "internalid"	, ((cAlias)->A1U_FILIAL + (cAlias)->A1U_CODIGO) , .F. )

		if !Self:hasStatusField
			Self:oJsonObj:setProp( 'status'	, '2', .F.  )
		endif
	endIf
Return Nil

//------------------------------------------------------------------------------
/*/{Protheus.doc} AddCustomFields
	Metodo Auxiliar, deve carregar os Atributos utilizados na conversão dos valores.
	@type		method
	@version	12.1.33
	@author		Danilo Salve / Squad CRM & Faturamento
	@since		23/06/2021
/*/
//------------------------------------------------------------------------------

METHOD addCustomFields() CLASS IntermediariesProtheusData
	Self:cSource := "TGVINTERMEDIARIES"
	Self:isAdmin := FwIsAdmin()
	Self:aCustomFields := {}
	Self:nFields := Len(Self:oJsonObj:aMapFields)
	Self:cCustomFields := ""

	If !Self:isAdmin
		Self:oHashFieldsPD := setProtectedFields(Self:oJsonObj:aMapFields, Self:cSource)
	Endif

	Self:lcanObfuscateField := CanAccessProtectedData(Self:isAdmin)
Return Nil

//------------------------------------------------------------------------------
/*/{Protheus.doc} AddMapFields
	Cria o Mapa de campos Protheus x API
	@type		function
	@version	12.1.33
	@author		Danilo Salve / Squad CRM & Faturamento
	@since		23/06/2021
	@param		oSelf	, object	, Objeto com herança da classe FWAdapterBaseV2
/*/
//------------------------------------------------------------------------------
Static Function AddMapFields( oSelf as Object )
	oSelf:AddMapFields( "branchid"	, "A1U_FILIAL"	, .T., .F., { "A1U_FILIAL"	, 'C', GetFieldLength("A1U_FILIAL")	, 0 } )
	oSelf:AddMapFields( "code"		, "A1U_CODIGO"	, .T., .F., { "A1U_CODIGO"	, 'C', GetFieldLength("A1U_CODIGO")	, 0 } )
	oSelf:AddMapFields( "name"		, "A1U_NOME"	, .T., .F., { "A1U_NOME"	, 'C', GetFieldLength("A1U_NOME")	, 0 } )
	oSelf:AddMapFields( "document"	, "A1U_CGC"		, .T., .F., { "A1U_CGC"		, 'C', GetFieldLength("A1U_CGC")	, 0 } )
	oSelf:AddMapFields( "deleted"	, "deleted"		, .T., .F., { "deleted"		, 'C', 1, 0 }, "A1U.D_E_L_E_T_" )

	if oSelf:hasStatusField
		oSelf:AddMapFields("status"       , "A1U_MSBLQL"   , .T., .F., { "A1U_MSBLQL"	, 'C', GetFieldLength("A1U_MSBLQL"), 0 })
	endIf
Return Nil
