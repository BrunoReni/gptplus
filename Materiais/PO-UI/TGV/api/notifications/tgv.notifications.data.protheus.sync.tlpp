#include "tlpp-core.th"

namespace tgv.notifications
using namespace tgv.util

//------------------------------------------------------------------------------
/*/{Protheus.doc} NotificationsProtheusDataSync
	Classe reponsavel por efetuar a consulta das notificações na tabela A1S.
	Está classe e utilizada no TGV quando o Sincronismo das Notificações esta ativo.

	@author		Squad CRM & Faturamento
	@sinc		01/10/2020
	@version	12.1.27
/*/
//------------------------------------------------------------------------------
CLASS NotificationsProtheusDataSync FROM FWAdapterBaseV2
	Public Data aCustomFields		as Array
	Public Data cCustomFields		as Character
	Public Data cSource				as Character
	Public Data isAdmin				as Logical
	Public Data lcanObfuscateField	as Logical
	Public Data oHashFields			as Object
	Public Data oHashFieldsPD		as Object
	Public Data nFields				as Numeric

	Public method New() as Object
	Public method Get()
	Public Method RowToJson()
	Public Method AddCustomFields()
EndClass

//------------------------------------------------------------------------------
/*/{Protheus.doc} New
	Cria uma nova instancia do Objeto NotificationsProtheusDataSync

	@sample		oNotificationData():New()
	@author		Squad CRM & Faturamento
	@since		01/10/2020
	@version	12.1.27
/*/
//------------------------------------------------------------------------------
Method New() as Object CLASS NotificationsProtheusDataSync	
	_Super:New( "GET", .T. )
Return Self

//------------------------------------------------------------------------------
/*/{Protheus.doc} Get
	Efetua a consulta de Notificações.

	@sample		oNotificationData():Get()
	@param		nPage		, Numeric	, Número da página que será retornada
	@param		nPageSize	, Numeric	, Quantidade de registros por pagina
	@param		cDateSync	, Character , Data de sincronismo
	@author		Danilo Salve
	@since		21/01/2021
	@version	12.1.27
/*/
//------------------------------------------------------------------------------
Method Get(nPage as Numeric, nPageSize as Numeric, cDateSync as Character) CLASS NotificationsProtheusDataSync
	Local aArea 	as Array
	Local cWhere	as Character	

	aArea := GetArea()

	AddMapFieldsA1S( self, .F. )

	::AddCustomFields()
	::setPage(nPage)
	::setPageSize(nPageSize)
	::SetQuery( GetQueryA1S() )

	cWhere := " A1S.A1S_FILIAL = '" + FwXFilial("A1S") + "'"
	cWhere += " AND A1S.A1S_CODUSR = '" + __cUserId + "'"

	If !Empty(cDateSync) .And. SubStr(cDateSync,1,1) != '-'
		cWhere += " AND A1S.S_T_A_M_P_ > " + ConvertTimeStamp( cDateSync, "value", "timestamp" )
	Else
		cWhere += " AND A1S.D_E_L_E_T_ = ' ' "	
	EndIf

	::SetWhere( cWhere )
	::SetOrder( "A1S_FILIAL,A1S_CODIGO,A1S_CODUSR" )

	If ::Execute()
		::FillGetResponse()
	EndIf

	aSize(::aCustomFields, 0)
	RestArea( aArea )
	aSize( aArea, 0 )
Return Nil
//------------------------------------------------------------------------------
/*/{Protheus.doc} RowToJson
	Converte o retorno da consulta SQL em JSON

	@sample		oNotificationData:RowToJson( cAlias, aFields, .F.)
	@param		cAlias	, Character	, Alias da Consulta
	@param		aFields	, Array		, Campos (MapFields)
	@param		lEmpty	, Logical	, Vazio.
	@author		Danilo Salve
	@since		22/12/2020
	@version	12.1.27 ou Superior
/*/
//------------------------------------------------------------------------------
METHOD RowToJson( cAlias as Character, aFields as Array , lEmpty as Logical) CLASS NotificationsProtheusDataSync
	ConvertResponseValues(aFields, cAlias, lEmpty, @Self )
Return Nil

//------------------------------------------------------------------------------
/*/{Protheus.doc} AddCustomFields
	Metodo Auxiliar, deve carregar os Atributos utilizados na conversão dos valores.

	@sample		oNotificationData:AddCustomFields()
	@author		Squad CRM & Faturamento
	@since		04/06/2021
	@version	12.1.27
/*/
//------------------------------------------------------------------------------
METHOD AddCustomFields() CLASS NotificationsProtheusDataSync
	Local cFilA1S := FwxFilial("A1S")

	Self:cSource:= "TGVNOTIFICATIONS"
	Self:isAdmin := FwIsAdmin()
	Self:aCustomFields := {}
	Self:nFields := Len(Self:oJsonObj:aMapFields)

	aAdd(Self:aCustomFields, {"internalid"	, {|| GetInternalIdQry(cFilA1S + (cAlias)->A1S_CODIGO + (cAlias)->A1S_CODUSR)}})

	Self:cCustomFields := "internalid"

	Self:lcanObfuscateField := CanAccessProtectedData(Self:isAdmin)
Return Nil
