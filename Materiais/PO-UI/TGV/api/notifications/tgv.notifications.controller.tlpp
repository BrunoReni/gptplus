#include 'tlpp-core.th'
#include 'tgv.notifications.controller.ch'

namespace tgv.notifications
using namespace tgv.util

//------------------------------------------------------------------------------
/*/{Protheus.doc} tgvNotications
	API para Consultar, Incluir, Alterar e Excluir um Notificação, utilizada no
    TOTVS Gestão de Vendas.
	@type		class
	@version	12.1.27
	@author		Squad CRM & Faturamento
	@since 		27/08/2021
/*/
//------------------------------------------------------------------------------
Class tgvNotications
	Data jResponse  as Json
	Data nPage      as Numeric
	Data nPageSize  as Numeric
	Data oService   as Object

	Public Method new() as Object

	@Get("/api/tgv/notifications/sync")
	Public Method getAllSync() as Logical

	@Get("/api/tgv/notifications/sync/diff/:dateSync")
	Public Method getDiffSync() as Logical

	@Get("/api/tgv/notifications/")
	Public Method getAll() as Logical
	
	@Get("/api/tgv/notifications/:internalID")
	Public Method getById() as Logical

	@Post("/api/tgv/notifications/")
	Public Method postNotifications() as Logical

	@Put("/api/tgv/notifications/:internalID")
	Public Method putNotifications() as Logical

	@Delete("/api/tgv/notifications/:internalID")
	Public Method deleteNotifications() as Logical

EndClass

//------------------------------------------------------------------------------
/*/{Protheus.doc} tgvNotications::new() as Object
	Obtem uma nova instância da classe tgvNotications
	@type 		method
	@version	12.1.27
	@author		Squad CRM & Faturamento
	@since		01/10/2020
	@return		object, uma nova instancia da classe tgvNotications
/*/
//------------------------------------------------------------------------------
Method new() as Object Class tgvNotications
	::nPage     := 1
	::nPageSize := 10
	::oService  := NotificationsService():GetInstance()
	::jResponse := JsonObject():new()
Return self

//------------------------------------------------------------------------------
/*/{Protheus.doc} tgvNotications::getAllSync() as Logical
	Obtem uma lista de notificações do vendedor, retornando a estrutura do padrão po-sync.
	@type		method
	@version	12.1.27
	@author		Squad CRM & Faturamento
	@since		01/10/2020
	@return		logical, Verdadeiro
/*/
//------------------------------------------------------------------------------
Method getAllSync() as Logical Class tgvNotications
	getPageAndPageSize(@::nPage, @::nPageSize)
	::jResponse:fromJson(::oService:GetNotificationsSync(::nPage, ::nPageSize, /*cDate*/))
	AnswerRest(::jResponse)
Return .T.

//------------------------------------------------------------------------------
/*/{Protheus.doc} tgvNotications::getDiffSync() as Logical
	Obtem uma lista de notificações do vendedor que foram alteradas.
	@type		method
	@version	12.1.27
	@author		Squad CRM & Faturamento
	@since		01/10/2020
	@return		logical, Verdadeiro
/*/
//------------------------------------------------------------------------------
Method getDiffSync() as Logical Class tgvNotications
	getPageAndPageSize(@::nPage, @::nPageSize)
	::jResponse:FromJson(::oService:GetNotificationsSync(::nPage, ::nPageSize, GetSyncDate()))
	AnswerRest(::jResponse)
Return .T.

//------------------------------------------------------------------------------
/*/{Protheus.doc} tgvNotications::getAll() as Logical
	Obtem uma Lista de Notificações, possibilitando filtrar (QueryParam - FILTER) 
	as notificações e permitindo retornar todos	os campos ou somente os campos 
	especificados no QueryParam FIELDS.
    Observação: Ao utilizar o GETOnline o campo DELETED não será retornado. 
	@type		method
	@version	12.1.33
	@author		Danilo Salve / Squad CRM & Faturamento
	@since		15/07/2021
	@return		logical, Verdadeiro
/*/
//------------------------------------------------------------------------------
Method getAll() as Logical Class tgvNotications
	Local aURLFilter	:= getFilterParam() as Array
	Local cFields		:= getQueryParam('FIELDS') as Character
	Local cSort			:= getQueryParam('SORT') as Character

	getPageAndPageSize(@::nPage, @::nPageSize)
	::jResponse:FromJson(::oService:GetNotifications(::nPage, ::nPageSize, aURLFilter, cFields, /*InternalID*/, cSort))
	AnswerRest(::jResponse)
	
	aSize(aURLFilter, 0)
Return .T.

//------------------------------------------------------------------------------
/*/{Protheus.doc} tgvNotications::getById() as Logical
	Obtem uma Notificação filtrando pelo campo Filial e Codigo, considerando a 
	filial atual e o parametro InternalId da requisição, permitindo retornar todos
	os campos ou somente os campos especificados no QueryParam FIELDS.
	Observação: Ao utilizar o GETOnline o campo DELETED não será retornado.
	@type		method
	@version	12.1.33
	@author		Danilo Salve / Squad CRM & Faturamento
	@since		16/07/2021
	@return		logical, Verdadeiro
/*/
//------------------------------------------------------------------------------
Method getById() as Logical Class tgvNotications
	Local cFields	:= getQueryParam('FIELDS') as Character

	oRest:setKeyHeaderResponse('Content-Type','application/json')

	::jResponse:FromJson(::oService:GetNotifications(1, 10, {}, cFields, getPathParams('internalID')))

	If Empty(::jResponse["id"])
		SetRestFault(404, STR0002 ) //"Notificacao nao encontrada"
	Else
		oRest:setResponse(::jResponse)
	EndIf
Return .T.

//------------------------------------------------------------------------------
/*/{Protheus.doc} tgvNotications::postNotifications() as Logical
	Deve incluir uma nova notificação para o vendedor
	@type		method
	@version	12.1.27
	@author		Squad CRM & Faturamento
	@since		01/10/2020
	@return		logical, Verdadeiro
/*/
//------------------------------------------------------------------------------
Method postNotifications() as Logical Class tgvNotications
	Local jBody := GetRequestBody() as Json
	oRest:setKeyHeaderResponse('Content-Type','application/json; charset=utf-8')
	If jBody <> Nil
		::oService:RecordNotification(jBody, /*cNotification*/, 3, "POST")
		FreeObj(jBody)
	Endif
Return .T.

//------------------------------------------------------------------------------
/*/{Protheus.doc} tgvNotications::putNotifications() as Logical
	Deve alterar uma notificação.
	@type		method
	@version	12.1.27
	@author		Squad CRM & Faturamento
	@since		01/10/2020
	@return		logical, Verdadeiro
/*/
//------------------------------------------------------------------------------
Method putNotifications() as Logical Class tgvNotications
	Local jBody := GetRequestBody() as Json
	oRest:setKeyHeaderResponse('Content-Type','application/json; charset=utf-8')
	If jBody <> Nil
		::oService:RecordNotification(jBody, getPathParams('internalID'), 4, "PUT")
		FreeObj(jBody)
	Endif
Return .T.

//------------------------------------------------------------------------------
/*/{Protheus.doc} tgvNotications::deleteNotifications() as Logical
	Deve excluir uma notificação
	@type		method
	@version	12.1.27
	@author		Squad CRM & Faturamento
	@since		01/10/2020
	@return		logical, Verdadeiro
/*/
//------------------------------------------------------------------------------
Method deleteNotifications() as Logical Class tgvNotications
	oRest:setKeyHeaderResponse('Content-Type','application/json; charset=utf-8')
	::oService:RecordNotification(/*jBody*/, getPathParams('internalID'), 5, "DELETE")
Return .T.
