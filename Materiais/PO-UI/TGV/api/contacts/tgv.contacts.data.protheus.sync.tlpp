#include "tlpp-core.th"

namespace tgv.contacts
using namespace tgv.util

//------------------------------------------------------------------------------
/*/{Protheus.doc} ContactsProtheusDataSync
	Efetua a consulta de Contatos (SU5) Protheus.

	@author		Squad CRM & Faturamento
	@since		01/10/2020
	@version	12.1.27
/*/
//------------------------------------------------------------------------------
Class ContactsProtheusDataSync from FWAdapterBaseV2
	Public Data aCustomFields		as Array
	Public Data cCustomFields		as Character
	Public Data cSource				as Character
	Public Data isAdmin				as Logical
	Public Data lcanObfuscateField	as Logical
	Public Data oHashFieldsPD		as Object
	Public Data nFields				as Numeric

	Public Method New() as Object
	Public Method Get()
	Public Method RowToJson()
	Public Method AddCustomFields()
EndClass

//------------------------------------------------------------------------------
/*/{Protheus.doc} New
	Cria uma nova instancia do Objeto ContactsProtheusDataSync.

	@sample		oData:New("GET", .T.)
	@param		cVerbo	, Character	, Verbo que será utilizado na requisição
	@param		lList	, Logical	, Se irá listar o Json
	@author		Squad CRM & Faturamento
	@since		01/10/2020
	@version	12.1.27
/*/
//------------------------------------------------------------------------------
Method New() as Object Class ContactsProtheusDataSync
	_Super:New("GET", .T.)
	::oHashFieldsPD := tHashMap():New()
Return Self

//------------------------------------------------------------------------------
/*/{Protheus.doc} Get
	Efetua a consulta dos Contatos.

	@param		nPage		, Numerico	, Número da página que será retornada
	@param		nPageSize	, Numerico	, Quantidade de registros por página
	@param		cDate		, Character	, Data de Sincronismo/Alteracao
	@author		Danilo Salve
	@sinc		20/01/2021
	@version	12.1.27
/*/
//------------------------------------------------------------------------------
Method Get(nPage as Numeric, nPageSize as Numeric, cDate as Character) CLASS ContactsProtheusDataSync
	Local aArea 	:= GetArea()
	Local cWhere	as Character	
	
	AddMapFieldsContacts( self, .F. )

	::AddCustomFields()
	::setPage( nPage )
	::setPageSize( nPageSize )
	::SetQuery( GetQueryContacts( Empty(cDate) ))
	::SetWhere( cWhere )
	::SetWhere( GetFilterContacts( /*cCPFCNPJ*/, cDate ) )
	::SetOrder( SqlOrder( AC8->( IndexKey(1) ) ) ) // AC8_FILIAL, AC8_CODCON, AC8_ENTIDA, AC8_FILENT, AC8_CODENT

	If ::Execute()
		::FillGetResponse()
	EndIf

	FTPDUnload()
	::oHashFieldsPD:Clean()

	RestArea(aArea)
	aSize(aArea, 0)
	aSize(::aCustomFields, 0)
	FreeObj(::oHashFieldsPD)
Return Nil

//------------------------------------------------------------------------------
/*/{Protheus.doc} RowToJson
	Converte o retorno da consulta SQL em JSON

	@sample		ContactsProtheusDataSync:RowToJson( cAlias, aFields, .F.)
	@param		cAlias	, Character	, Alias da Consulta
	@param		aFields	, Array		, Campos (MapFields)
	@param		lEmpty	, Logical	, Vazio.
	@author		Danilo Salve
	@since		22/12/2020
	@version	12.1.27 ou Superior
/*/
//------------------------------------------------------------------------------
METHOD RowToJson(cAlias as Character, aFields as Array, lEmpty as Logical) CLASS ContactsProtheusDataSync
	ConvertResponseValues(aFields, cAlias, lEmpty, @Self )
Return Nil

//------------------------------------------------------------------------------
/*/{Protheus.doc} AddCustomFields
	Metodo Auxiliar, deve carregar os Atributos utilizados na conversão dos valores.

	@author		Squad CRM & Faturamento
	@since		01/06/2021
	@version	12.1.27
/*/
//------------------------------------------------------------------------------
METHOD AddCustomFields() CLASS ContactsProtheusDataSync
	Self:cSource:= "TGVCONTACTS"
	Self:isAdmin := FwIsAdmin()
	Self:aCustomFields := {}
	Self:nFields := Len(Self:oJsonObj:aMapFields)

	aAdd(Self:aCustomFields, {"internalid"	, {|| GetInternalIdQry((cAlias)->U5_FILIAL + (cAlias)->A1_CGC + (cAlias)->U5_CODCONT)}})
	aAdd(Self:aCustomFields, {"contactid"	, {|| GetInternalIdQry((cAlias)->U5_FILIAL + (cAlias)->U5_CODCONT)}})

	Self:cCustomFields := "internalid#contactid"

	If !Self:isAdmin
		Self:oHashFieldsPD := setProtectedFields(Self:oJsonObj:aMapFields, Self:cSource)
	Endif

	Self:lcanObfuscateField := CanAccessProtectedData(Self:isAdmin)
Return Nil
