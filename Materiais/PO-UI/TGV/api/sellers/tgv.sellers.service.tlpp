#include 'tlpp-core.th'

namespace tgv.sellers

static __instance as Object

//------------------------------------------------------------------------------
/*/{Protheus.doc} SellersService
	Disponibiliza um serviço para consultar os vendedores

	@sample		SellersService
	@author		Danilo Salve
	@since		06/10/2020
	@version	12.1.27
/*/
//------------------------------------------------------------------------------
Class SellersService
	Data jResponse  as Json

	Public Method New() as Object
	Public Method GetInstance() as Object
	Public Method GetSeller() as Json
Endclass

//------------------------------------------------------------------------------
/*/{Protheus.doc} New
	Disponibiliza um serviço para consultar  os vendedores

	@sample		SellersService:New()
	@author		Danilo Salve
	@since		06/10/2020
	@version	12.1.27
/*/
//------------------------------------------------------------------------------
Method New() as Object Class SellersService
	::jResponse := JsonObject():New()
Return Self

//------------------------------------------------------------------------------
/*/{Protheus.doc} GetInstance
	Retorna uma instancia do serviço

	@sample		SalesOrdersService:GetInstance()
	@author		Danilo Salve
	@since		29/09/2020
	@version	12.1.27
/*/
//------------------------------------------------------------------------------
Method GetInstance() as Object Class SellersService
	If (__instance == nil)
		__instance := SellersService():New()
	Endif
Return __instance

//------------------------------------------------------------------------------
/*/{Protheus.doc} SellersService
	Efetua um consulta de um Vendendor retornando um Objeto JSON (SA6)

	@sample		SellersService:GetSeller(1, 10, '000000')
	@param		nPage		, Numeric	, Numero da Página
	@param		nPageSize	, Numeric	, Tamanho da página
	@param		cUserId		, Character	, Codigo do usuario
	@author		Danilo Salve
	@since		06/10/2020
	@version	12.1.27
/*/
//------------------------------------------------------------------------------
Method GetSeller(nPage as Numeric, nPageSize as Numeric, cUserId as Character) as Json Class SellersService
	Local oData := SellersDataFactory():GetData()

	Default nPage       := 1
	Default nPageSize   := 10

	oData:GetSeller(nPage, nPageSize, cUserId)

	If oData:lOk
		::jResponse := oData:GetJSONResponse()
	Else
		::jResponse := SetRestFault(oData:GetCode(), oData:GetMessage())
	EndIf

	oData:DeActivate()
	FreeObj(oData)
Return ::jResponse
