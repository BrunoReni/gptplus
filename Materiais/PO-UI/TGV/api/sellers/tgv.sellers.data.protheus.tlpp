#include 'tlpp-core.th'

namespace tgv.sellers
using namespace tgv.util

//------------------------------------------------------------------------------
/*/{Protheus.doc} SellersProtheusData
	Efetua a consulta de Condições de Pagamentos no Protheus.
	@type		class
	@version	12.1.33
	@author		Danilo Salve / Squad CRM & Faturamento
	@since		06/10/2020
/*/
//------------------------------------------------------------------------------
CLASS SellersProtheusData FROM FWAdapterBaseV2
	Public Data aCustomFields		as Array
	Public Data cCustomFields		as Character
	Public Data cSource				as Character
	Public Data isAdmin				as Logical
	Public Data lcanObfuscateField	as Logical
	Public Data oHashFieldsPD		as Object
	Public Data nFields				as Numeric

	Public Method new() as Object
	Public Method getSeller()
	Public Method RowToJson()
	Public Method addCustomFields()
EndClass

//------------------------------------------------------------------------------
/*/{Protheus.doc} SellersProtheusData::new() as Object
	Obtem uma nova instancia da Classe SellersProtheusData
	@type		method
	@version	12.1.33
	@author		Danilo Salve / Squad CRM & Faturamento
	@since		06/10/2020
	@return		Object, nova instancia da classe SellersProtheusData
/*/
//------------------------------------------------------------------------------
Method new() as Object CLASS SellersProtheusData
	_Super:new( "GET", .T. )
	::oHashFieldsPD := tHashMap():new()
return Self

//------------------------------------------------------------------------------
/*/{Protheus.doc} SellersProtheusData::getSeller
	Obtem uma Lista de Vendedores que estão relacionados ao usuario.
	@type 		method
	@version	12.1.33
	@author		Danilo Salve / Squad CRM & Faturamento
	@since		06/10/2020
	@param		nPage		, numeric	,  Número da página que será retornada
	@param		nPageSize	, numeric	, Quantidade de registros por página
	@param		cCodeUser	, character	, Código do usuario
/*/
//------------------------------------------------------------------------------
Method getSeller(nPage as Numeric, nPageSize as Numeric, cCodeUser as Character) CLASS SellersProtheusData
	Local cWhere as character

	If !Empty( cCodeUser )
		cWhere := " SA3.A3_FILIAL = '" + FwXFilial("SA3") + "'"
		cWhere += " AND SA3.A3_CODUSR = '" + cCodeUser + "'"
		cWhere += " AND SA3.D_E_L_E_T_ = ' ' "
	Else
		cWhere := " SA3.A3_FILIAL = '" + FwXFilial("SA3") + "'"
		cWhere += " AND SA3.D_E_L_E_T_ = ' ' "
	Endif

	AddMapFields( self )

	::addCustomFields()
	::setPage( nPage )
	::setPageSize( nPageSize )
	::SetQuery( GetQueryTGV("SA3") )
	::SetWhere( cWhere )
	::SetOrder( "A3_FILIAL, A3_COD" )

	If ::Execute()
		::FillGetResponse()
	EndIf

	FTPDUnload()
	::oHashFieldsPD:Clean()
	aSize(::aCustomFields, 0)
	FreeObj(::oHashFieldsPD)
return nil

//------------------------------------------------------------------------------
/*/{Protheus.doc} SellersProtheusData::RowToJson
	Converte o retorno consulta SQL em JSON	(Utilizado para converter o campo Delete Logico)
	@type		method
	@version	12.1.33
	@author		Danilo Salve / Squad CRM & Faturamento
	@since		22/12/2020
	@param		cAlias, character, Alias da Consulta
	@param		aFields, array, Campos (MapFields)
	@param		lEmpty, logical, Campos (MapFields)
/*/
//------------------------------------------------------------------------------
METHOD RowToJson( cAlias as Character, aFields as Array, lEmpty as Logical ) CLASS SellersProtheusData
	If (cAlias)->(!Eof()) .And. (cAlias)->(!Bof())
		ConvertResponseValues(aFields, cAlias, lEmpty, @Self )
		
		Self:oJsonObj:setProp( "internalid"				, ((cAlias)->A3_FILIAL + (cAlias)->A3_COD) , .F.  )
		Self:oJsonObj:setProp( "isseller"				, .t. 						, .F.  )
		Self:oJsonObj:setProp( "canaccessprotecteddata"	, Self:lcanObfuscateField	, .F.  )
		Self:oJsonObj:setProp( "isadmin"				, Self:isAdmin				, .F.  )
		Self:oJsonObj:setProp( "userid"					, __cUserId					, .F.  )
	Else
		setSellerResponse(@Self)
	Endif
return nil

//------------------------------------------------------------------------------
/*/{Protheus.doc} SellersProtheusData::addCustomFields
	Metodo Auxiliar, deve carregar os Atributos utilizados na conversão dos valores.
	@type		method
	@version	12.1.33
	@author		Danilo Salve / Squad CRM & Faturamento
	@since		26/10/2021
/*/
//------------------------------------------------------------------------------
METHOD addCustomFields() CLASS SellersProtheusData
	Self:cSource := "TGVSELLERS"
	Self:isAdmin := FwIsAdmin()
	Self:aCustomFields := {}
	Self:nFields := Len( Self:oJsonObj:aMapFields )
	Self:lcanObfuscateField := CanAccessProtectedData( Self:isAdmin )
	Self:cCustomFields := ""

	If !Self:isAdmin
		Self:oHashFieldsPD := setProtectedFields( Self:oJsonObj:aMapFields, Self:cSource )
	Endif
return nil

//------------------------------------------------------------------------------
/*/{Protheus.doc} AddMapFields
	Cria o Mapa de campos Protheus x API
	@type		function
	@version	12.1.33
	@param		oSelf	, object	, Objeto com herança da classe FWAdapterBaseV2
	@author		Danilo Salve / Squad CRM & Faturamento
	@since		06/10/2020
/*/
//------------------------------------------------------------------------------
static function AddMapFields( oSelf as Object )	
	oSelf:AddMapFields( "branchid"		, "A3_FILIAL"	, .T., .F., { "A3_FILIAL"	, 'C', GetFieldLength("A3_FILIAL")  , 0 } )
	oSelf:AddMapFields( "code"			, "A3_COD"	    , .T., .F., { "A3_COD"	    , 'C', GetFieldLength("A3_COD")     , 0 } )
	oSelf:AddMapFields( "name"			, "A3_NOME"     , .T., .F., { "A3_NOME"	    , 'C', GetFieldLength("A3_NOME")    , 0 } )
	oSelf:AddMapFields( "shortname"		, "A3_NREDUZ"   , .T., .F., { "A3_NREDUZ"	, 'C', GetFieldLength("A3_NREDUZ")  , 0 } )
	oSelf:AddMapFields( "email"			, "A3_EMAIL"    , .T., .F., { "A3_EMAIL"	, 'C', GetFieldLength("A3_EMAIL")   , 0 } )
	oSelf:AddMapFields( "intercallcode"	, "A3_DDI"      , .T., .F., { "A3_DDI"	    , 'C', GetFieldLength("A3_DDI")     , 0 } )
	oSelf:AddMapFields( "areacode"		, "A3_DDDTEL"   , .T., .F., { "A3_DDDTEL"   , 'C', GetFieldLength("A3_DDDTEL")  , 0 } )
	oSelf:AddMapFields( "phone"			, "A3_TEL"      , .T., .F., { "A3_TEL"	    , 'C', GetFieldLength("A3_TEL")     , 0 } )
	oSelf:AddMapFields( "cellphone"		, "A3_CEL"      , .T., .F., { "A3_CEL"	    , 'C', GetFieldLength("A3_CEL")     , 0 } )	
return nil

//------------------------------------------------------------------------------
/*/{Protheus.doc} setSellerResponse
	Retorna os dados do usuario, caso o usuario não esteja vinculado a nenhum vendedor.
	@type		function
	@version	12.1.33
	@author		Danilo Salve / Squad CRM & Faturamento
	@since		02/03/2021
	@param		Self, object, Objeto responsavel por retornar os dados para o Service.
/*/
//------------------------------------------------------------------------------
static Function setSellerResponse(Self as Object)
	Local cName := AllTrim( UsrRetName( __cUserId ) ) as character

	Self:oJsonObj:setProp( "internalid"   , ""          , .F.  )
	Self:oJsonObj:setProp( "branchid"     , ""          , .F.  )
	Self:oJsonObj:setProp( "code"         , ""          , .F.  )
	Self:oJsonObj:setProp( "name"         , cName       , .F.  )
	Self:oJsonObj:setProp( "shortname"    , cName       , .F.  )
	Self:oJsonObj:setProp( "email"        , AllTrim( UsrRetMail( __cUserId ) ), .F.  )
	Self:oJsonObj:setProp( "intercallcode", ""          , .F.  )
	Self:oJsonObj:setProp( "areacode"     , ""          , .F.  )
	Self:oJsonObj:setProp( "phone"        , ""          , .F.  )
	Self:oJsonObj:setProp( "cellphone"    , ""          , .F.  )
	Self:oJsonObj:setProp( "userid"       , __cUserId   , .F.  )
	Self:oJsonObj:setProp( "isadmin"      , FWIsAdmin() , .F.  )
	Self:oJsonObj:setProp( "canaccessprotecteddata", Self:lcanObfuscateField , .F.  )
	Self:oJsonObj:setProp( "isseller", .F. , .F.  )
return nil
