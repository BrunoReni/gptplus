#include "tlpp-core.th"

namespace tgv.phoneContacts
using namespace tgv.util

//------------------------------------------------------------------------------
/*/{Protheus.doc} PhoneContactsProtheusData
  Efetua a consulta dos Telefones dos Contatos Protheus.

  @author	Squad CRM/FAT
  @since	28/07/2021
  @version	12.1.33
/*/
//------------------------------------------------------------------------------
CLASS PhoneContactsProtheusData FROM FWAdapterBaseV2
	Public Method New() as Object
	Public Method GetAll()
EndClass

//------------------------------------------------------------------------------
/*/{Protheus.doc} New
	Cria uma nova instancia do Objeto PhoneContactsProtheusData.

	@sample		PhoneContactsProtheusData():New("GET", .T.)
	@param		cVerbo	, Character	, Verbo que ser· utilizado na requisiÁ„o
	@param		lList	, Logical	, Se ir· listar o Json
	@author		Squad CRM/FAT
	@since		28/07/2021
	@version	12.1.27
/*/
//------------------------------------------------------------------------------
Method New(cVerbo as Character, lList as Logical) as Object CLASS PhoneContactsProtheusData
	Default cVerbo  := "GET"
	Default lList   := .T.

	_Super:New( cVerbo, lList )
Return Self

//------------------------------------------------------------------------------
/*/{Protheus.doc} GetAll
	Efetua a consulta de Telefones.

	@param		nPage		, Numeric	, N˙mero da p·gina que ser· retornada
	@param		nPageSize	, Numeric	, Quantidade de registros por p·gina
	@param		aURLFilter	, Array		, Lista de Filtros no padr„o do FWAdapterBaseV2
	@param		cFields		, Character	, Lista de campos que devem ser retornados
	@param		cCustomerId	, Character	, Codigo do Cliente (Codigo e Loja)
	@param		cSort		, Character	, OrdernaÁ„o do Response
	@author		Squad CRM/FAT
	@since		28/07/2021
	@version	12.1.27
/*/
//------------------------------------------------------------------------------
Method GetAll(nPage as Numeric, nPageSize as Numeric, aURLFilter as Array, cFields as Character, cContactId as Character,;
	cSort as Character) CLASS PhoneContactsProtheusData
	Local aArea 	as Array
	Local cWhere	as Character

	Default nPage   	:= 1
	Default nPageSize 	:= 10

	aArea   := GetArea()
	AddFields( self, .T. )

	::setPage(nPage)
	::setPageSize(nPageSize)
	::SetQuery( GetQueryTGV("AGB") )

	If Empty( cContactId ) .And. Len( aURLFilter ) > 0 
		::SetUrlFilter( aURLFilter )
	Endif

	If !Empty( cSort )
		::SetOrderQuery( cSort )
	EndIf
	
	If !Empty( cFields )
		::SetFields( cFields )
	Endif

	cWhere := " AGB.AGB_FILIAL = '" + FwXFilial("AGB") + "'"
	
	If !Empty( cContactId )
		cWhere += getContactFilter(cContactId)        
    Endif

    cWhere += " AND AGB.D_E_L_E_T_ = ' ' "

	::SetWhere( cWhere )
	::SetOrder( "AGB_FILIAL,AGB_ENTIDA,AGB_CODENT,AGB_TIPO,AGB_PADRAO" )

	If ::Execute()
		::FillGetResponse()
	EndIf

	RestArea( aArea )
	aSize( aArea, 0 )
Return Nil

//------------------------------------------------------------------------------
/*/{Protheus.doc} AddFields
	Cria o Mapa de campos Protheus x API para os Telefones.

	@sample		AddFields( self, .T. )
	@param		oSelf	, Object	, Objeto com heran√ßa da classe FWAdapterBaseV2
	@param		isOnline, Logical	, Adicionar campos no padr„o OnLine ou Sync
	@author		Squad CRM/FAT
	@since		28/07/2021
	@version	12.1.33
/*/
//------------------------------------------------------------------------------
Function AddFields( oSelf as Object, isOnline as Logical )
	Local aInternalId	:= GetInternalId( { "AGB_FILIAL", "AGB_CODIGO", "AGB_CODENT" } )
	Local aContactId	:= GetInternalId( { "AGB_FILIAL", "AGB_CODENT" } )

	If isOnline
		oSelf:AddMapFields( "internalid"        , "internalid" 	      	, .T., .F., { "internalid"		    , 'C', aInternalId[1], 0 }, aInternalId[2])
		oSelf:AddMapFields( "contactinternalid" , "contactinternalid"	, .T., .F., { "contactinternalid"	, 'C', aContactId[1] , 0 }, aContactId[2])
	Else
		oSelf:AddMapFields( "internalid"        , "internalid" 	      	, .T., .F., { "internalid"		    , 'C', aInternalId[1], 0 }, "' '")
		oSelf:AddMapFields( "contactinternalid" , "contactinternalid"	, .T., .F., { "contactinternalid"	, 'C', aContactId[1] , 0 }, "' '")
		oSelf:AddMapFields( "deleted"           , "deleted"           	, .T., .F., { "deleted"				, 'C', 1, 0 }, "AGB.D_E_L_E_T_" )
	EndIf

	oSelf:AddMapFields( "branch"            , "AGB_FILIAL"			, .T., .F., { "AGB_FILIAL"			, 'C', GetFieldLength("AGB_FILIAL")	, 0 } )
	oSelf:AddMapFields( "code"              , "AGB_CODIGO"			, .T., .F., { "AGB_CODIGO"			, 'C', GetFieldLength("AGB_CODIGO")	, 0 } )
	oSelf:AddMapFields( "contact"           , "AGB_CODENT" 	        , .T., .F., { "AGB_CODENT"			, 'C', GetFieldLength("AGB_CODENT")	, 0 } )
	oSelf:AddMapFields( "phonetype"	        , "AGB_TIPO"	        , .T., .F., { "AGB_TIPO"			, 'C', GetFieldLength("AGB_TIPO")	, 0 } )
	oSelf:AddMapFields( "ddd"				, "AGB_DDD"	          	, .T., .F., { "AGB_DDD"				, 'C', GetFieldLength("AGB_DDD")	, 0 } )
	oSelf:AddMapFields( "ddi"				, "AGB_DDI"	          	, .T., .F., { "AGB_DDI"				, 'C', GetFieldLength("AGB_DDI")	, 0 } )
	oSelf:AddMapFields( "phone"	            , "AGB_TELEFO"	      	, .T., .F., { "AGB_TELEFO"		    , 'C', GetFieldLength("AGB_TELEFO")	, 0 } )
	oSelf:AddMapFields( "complement"		, "AGB_COMP"	        , .T., .F., { "AGB_COMP"			, 'C', GetFieldLength("AGB_COMP")	, 0 } )

	aSize(aContactId, 0)
	aSize(aInternalId, 0)
Return Nil
//------------------------------------------------------------------------------
/*/{Protheus.doc} getContactFilter
	Obtem um Express„o SQL para filtrar um Telefone por Contato

	@type		function
	@sample		getContactFilter('TMK001')
	@param		cContactId	, Character	, CÛdigo do Contato
	@return		Character	, Filtro/Express„o SQL do Cliente
	@author		Squad CRM/FAT
	@since		28/07/2021
	@version	12.1.33
/*/
//------------------------------------------------------------------------------
Static Function getContactFilter(cContactId as Character) as Character
	Local cWhere		as Character

	cWhere := " AND AGB.AGB_CODENT = '" + cContactId + "'"
	
Return cWhere
