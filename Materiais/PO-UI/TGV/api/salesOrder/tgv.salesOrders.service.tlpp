#include 'tlpp-core.th'

namespace tgv.salesOrders

static __instance as Object

//------------------------------------------------------------------------------
/*/{Protheus.doc} SalesOrdersService
	Disponibiliza um serviço para visualizar, incluir, alterar e excluir 
	um pedido de venda ou visualizar um ou mais itens do pedido de venda
	@type		class
	@version	12.1.27
	@author		Danilo Salve / Squad CRM & Faturamento
	@since		29/09/2021
/*/
//------------------------------------------------------------------------------
Class SalesOrdersService
	Public Data jResponse as Json

	Public Method New() as Object
	Public Method GetInstance() as Object
	Public Method GetHeadersSync() as Json
	Public Method GetItemsSync() as Json
	Public Method GetTotalSalesOrder() as Json
	Public Method GetItems() as Json
	Public Method GetHeaders() as Json
	Public Method saveSalesOrders()
EndClass

//------------------------------------------------------------------------------
/*/{Protheus.doc} SalesOrdersService::New() as Object
	Disponibiliza uma nova intancia do serviço Pedidos de venda.
	@type		method
	@version	12.1.27
	@author		Danilo Salve / Squad CRM & Faturamento
	@since		29/09/2020
	@return		object, cria uma nova instancia da classe SalesOrdersService
/*/
//------------------------------------------------------------------------------
Method New() as Object Class SalesOrdersService
	::jResponse := JsonObject():New()
Return Self

//------------------------------------------------------------------------------
/*/{Protheus.doc} SalesOrdersService::GetInstance() as Object
	obtem uma instancia da classe SalesOrdersService
	@type		method
	@version	12.1.27
	@author		Danilo Salve / Squad CRM & Faturamento
	@since		29/09/2020
	@return		object, obtem uma instancia da classe SalesOrdersService
/*/
//------------------------------------------------------------------------------
Method GetInstance() as Object Class SalesOrdersService
	If (__instance == Nil)
		__instance := SalesOrdersService():New()
	Endif
Return __instance

//------------------------------------------------------------------------------
/*/{Protheus.doc} SalesOrdersService::GetHeadersSync(nPage as Numeric, nPageSize as Numeric, cData as Character) as Json
	Obtem uma lista de Cabeçalhos de Pedidos de Venda (SC5).
	to PO-SYNC.
	@type		method
	@version	12.1.27
	@param		nPage     , Numeric		, Numero da Página
	@param		nPageSize , Numeric		, Tamanho da página
	@param		cData     , Character	, Data de sincronismo
	@author		Danilo Salve / Squad CRM & Faturamento
	@since		11/08/2021
	@return		json, objeto json com uma lista de cabeçalho do pedidos de venda.
/*/
//------------------------------------------------------------------------------
Method GetHeadersSync(nPage as Numeric, nPageSize as Numeric, cData as Character) as Json Class SalesOrdersService
	Local oData := SalesOrdersDataFactory():GetDataSync()

	oData:GetHeaders(nPage, nPageSize, cData)

	If oData:lOk
		::jResponse := oData:GetJSONResponse()
	Else
		::jResponse := SetRestFault(oData:GetCode(), oData:GetMessage())
	EndIf

	oData:DeActivate()
	FreeObj(oData)
Return ::jResponse

//------------------------------------------------------------------------------
/*/{Protheus.doc} SalesOrdersService::GetItemsSync(nPage as Numeric, nPageSize as Numeric, cData as Character) as Json
	Obtem uma lista de Itens do Pedidos de Venda (SC6).
	@type		method
	@version	12.1.27
	@author		Danilo Salve / Squad CRM & Faturamento
	@since		29/09/2020
	@param		nPage		, Numeric	, Numero da Página
	@param		nPageSize	, Numeric  	, Tamanho da página
	@param		cData		, Character , Data de sincronismo
	@param		cOrderId	, Character , Código do Pedido de venda
	@return		json, objeto json com uma lista de itens do pedidos de venda.
/*/
//------------------------------------------------------------------------------
Method GetItemsSync(nPage as Numeric, nPageSize as Numeric, cData as Character) as Json Class SalesOrdersService
	Local oData := SalesOrdersDataFactory():GetDataSync()

	oData:GetItems(nPage, nPageSize, cData)

	If oData:lOk
		::jResponse := oData:GetJSONResponse()
	Else
		::jResponse := SetRestFault(oData:GetCode(), oData:GetMessage())
	EndIf

	oData:DeActivate()
	FreeObj(oData)
Return ::jResponse

//------------------------------------------------------------------------------
/*/{Protheus.doc} SalesOrdersService::GetTotalSalesOrder(cOrderId as Character) as Json
	Retorna o total do Pedido de Venda especificado na URI.
	@type		method
	@version	12.1.27
	@author		Danilo Salve / Squad CRM & Faturamento
	@since		26/01/2021
	@param		cOrderId	, Character , Código do Pedido de venda
	@return		json, obtem o total de um pedido de venda.
/*/
//------------------------------------------------------------------------------
Method GetTotalSalesOrder(cOrderId as Character) as Json Class SalesOrdersService
	Local oData := SalesOrdersDataFactory():GetData()
	oData:GetTotalSalesOrder( cOrderId )
	oData:DeActivate()
	FreeObj(oData)
Return ::jResponse

//------------------------------------------------------------------------------
/*/{Protheus.doc} SalesOrdersService::GetItems(nPage as Numeric, nPageSize as Numeric, cOrderId as Character, cItemId as Character,
 aURLFilter as Array, cFields as Character, cSort as Character) as Json
	Obtem uma lista ou um items do Pedidos de Venda especifico (SC6) , 
	respeitando os parametros informados. 
	@type		method
	@param		nPage		, Numeric	, Número da página que será retornada
	@param		nPageSize	, Numeric	, Quantidade de registros por pagina
	@param		cOrderId	, Character , Código do Pedido de venda
	@param		cItemId		, Character , Código do Item
	@param		aURLFilter	, Array		, Lista de Filtros no padrão do FWAdapterBaseV2
	@param		cFields		, Character	, Lista de campos que devem ser retornados
	@param		cSort		, Character	, Ordernação do Response
	@return		json		, retorna uma lista de itens do pedido de vendas.
	@author		Danilo Salve / Squad CRM & Faturamento
	@since		23/07/2021
	@version	12.1.33
/*/
//------------------------------------------------------------------------------
Method GetItems(nPage as Numeric, nPageSize as Numeric, cOrderId as Character, cItemId as Character, aURLFilter as Array, cFields as Character,;
 cSort as Character ) as Json Class SalesOrdersService
	Local oData := SalesOrdersDataFactory():GetData()

	If !Empty(cItemId)
		oData:oJsonObj:lList := .F.
	Endif

	oData:GetItems(nPage, nPageSize, cOrderId, cItemId, aURLFilter, cFields, cSort)

	If oData:lOk
		::jResponse := oData:GetJSONResponse()
	Else
		::jResponse := SetRestFault(oData:GetCode(), oData:GetMessage())
	EndIf

	oData:DeActivate()
	FreeObj(oData)
Return ::jResponse

//------------------------------------------------------------------------------
/*/{Protheus.doc} SalesOrdersService::GetHeaders(nPage as Numeric, nPageSize as Numeric, cOrderId as Character, ;
	aURLFilter as Array, cFields as Character, cSort as Character, cProductId as Character) as Json
	Obtem uma lista ou um Cabeçalhos de Pedidos de Venda especifico (SC5) , 
	respeitando os parametros informados. 
	@type		method
	@param		nPage		, Numeric	, Número da página que será retornada
	@param		nPageSize	, Numeric	, Quantidade de registros por pagina
	@param		cOrderId	, Character , Código do Pedido de venda
	@param		aURLFilter	, Array		, Lista de Filtros no padrão do FWAdapterBaseV2
	@param		cFields		, Character	, Lista de campos que devem ser retornados
	@param		cSort		, Character	, Ordernação do Response
	@param		cProductId	, Character	, Código do Produto
	@return		json		, retorna uma lista de cabeçalho de pedido de vendas.
	@author		Danilo Salve / Squad CRM & Faturamento
	@since		26/07/2021
	@version	12.1.33
/*/
//------------------------------------------------------------------------------
Method GetHeaders(nPage as Numeric, nPageSize as Numeric, cOrderId as Character, aURLFilter as Array, cFields as Character,;
 cSort as Character, cProductId as Character) as Json Class SalesOrdersService
	Local oData := SalesOrdersDataFactory():GetData()

	If !Empty(cOrderId)
		oData:oJsonObj:lList := .F.
	Endif

	oData:GetHeaders(nPage, nPageSize, cOrderId, aURLFilter, cFields, cSort, cProductId)

	If oData:lOk
		::jResponse := oData:GetJSONResponse()
	Else
		::jResponse := SetRestFault(oData:GetCode(), oData:GetMessage())
	EndIf

	oData:DeActivate()
	FreeObj(oData)
Return ::jResponse

//------------------------------------------------------------------------------
	/*/{Protheus.doc} SalesOrdersService::saveSalesOrders
	Efetua a gravação de um pedido de venda, considerando
	@type		method
	@version	12.1.33
	@author		Danilo Salve / Squad CRM & Faturamento
	@since		11/08/2021
	@param		jSalesOrder		, json		, json do pedido de venda
	@param		nOperation		, numeric	, operação (3, 4 ou 5)
	@param		cSalesOrdersId	, character	, Número do pedido de venda (C5_NUM)
/*/
//------------------------------------------------------------------------------
Method saveSalesOrders(jSalesOrder as Json, nOperation as Numeric, cSalesOrdersId as Character) Class SalesOrdersService
	Local oData := SalesOrdersDataFactory():GetData()
	
	oData:saveSalesOrders(jSalesOrder, nOperation, cSalesOrdersId)

	oData:DeActivate()
	FreeObj(oData)
Return Nil
