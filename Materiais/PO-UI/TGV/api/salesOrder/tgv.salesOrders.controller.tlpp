#include 'tlpp-core.th'
#include 'tgv.salesorders.controller.ch'

namespace tgv.salesOrders
using namespace tgv.util

Static lExistCheckDbUseArea     := IIF(lExistCheckDbUseArea == NIL, FindFunction("tgv.util.checkDbUseArea"), lExistCheckDbUseArea)
Static lExistIsSellerFilterInDB := FindFunction("tgv.util.isSellerFilterInDB")
//------------------------------------------------------------------------------
/*/{Protheus.doc} tgvSalesOrders
	API para integração dos Pedidos de vendas com o TOTVS Gestão de Vendas.
	@type		class
	@version	12.1.27
	@author		Danilo Salve / Squad CRM & Faturamento
	@since		30/09/2020
/*/
//------------------------------------------------------------------------------
Class tgvSalesOrders
	Public Data nPage      as Numeric
	Public Data nPageSize  as Numeric
	Public Data jResponse  as Json
	Public Data oService   as Object

	Public Method new() as Object

	@Get("/api/tgv/salesorders/")
	Public Method getHeaders() as Logical

	@Get("/api/tgv/salesorders/:orderId")
	Public Method getHeadersByOrderId() as Logical

	@Get("/api/tgv/salesorders/:orderId/items")
	public Method getItemsByOrderId() as Logical

	@Get("/api/tgv/salesorders/:orderId/items/:itemId")
	public Method getItemsByOrderItemId() as Logical

	@Get("/api/tgv/salesorders/sync/")
	Public Method getHeadersSync() as Logical

	@Get("/api/tgv/salesorders/sync/diff/:dateSync")
	public Method getHeadersSyncDiff() as Logical

	@Get("/api/tgv/salesorders/sync/items/")
	public Method getItemsSync() as Logical

	@Get("/api/tgv/salesorders/sync/items/diff/:dateSync")
	public Method getItemsSyncDiff() as Logical

	@Get("/api/tgv/salesorders/total/:orderId")
	public Method getTotalSalesOrder() as Logical

	@Get("/api/tgv/salesorders/product/:productId")
	public Method getHeadersByProductId() as Logical

	@Post("/api/tgv/salesorders/sync/")
	Public Method postSyncSalesOrder() as Logical

	@Post("/api/tgv/salesorders/sync/items")
	Public Method postSyncSalesOrderItems() as Logical

	@Put("/api/tgv/salesorders/sync/:id")
	Public Method putSyncSalesOrder() as Logical

	@Put("/api/tgv/salesorders/sync/items/:id")
	Public Method putSyncSalesOrderItems() as Logical

	@Delete("/api/tgv/salesorders/sync/:id")
	Public Method deleteSyncSalesOrder() as Logical

	@Delete("/api/tgv/salesorders/sync/items/:id")
	Public Method deleteSyncSalesOrderItems() as Logical

	@Post("/api/tgv/salesorders/")
	Public Method postSalesOrder() as Logical

	@Put("/api/tgv/salesorders/:orderId")
	Public Method putSalesOrder() as Logical

	@Delete("/api/tgv/salesorders/:orderId")
	Public Method deleteSalesOrder() as Logical

EndClass

//------------------------------------------------------------------------------
/*/{Protheus.doc} tgvSalesOrders::new() as Object
	Cria uma nova instacia do objeto tgvSalesOrders.
	@type		method
	@version	12.1.27
	@author		Danilo Salve / Squad CRM & Faturamento
	@since		29/09/2020
	@return		object , nova instacia do objeto tgvSalesOrders
/*/
//------------------------------------------------------------------------------
Method new() as Object Class tgvSalesOrders
	::nPage         := 1
	::nPageSize     := 10
	::jResponse     := JsonObject():new()
	::oService      := SalesOrdersService():GetInstance()
Return self

//------------------------------------------------------------------------------
/*/{Protheus.doc} tgvSalesOrders::getHeadersSync() as Logical
	Retorna todos os Cabeçalhos de Pedidos de Vendas (SC5).
	@type		method
	@version	12.1.27
	@author 	Danilo Salve / Squad CRM & Faturamento
	@since 		29/09/2020
	@return		logical, Verdadeiro
	/*/
//------------------------------------------------------------------------------
Method getHeadersSync() as Logical Class tgvSalesOrders
	If lExistIsSellerFilterInDB .And. IsSellerFilterInDB()
		getPageAndPageSize(@::nPage, @::nPageSize)
		::jResponse:fromJson(::oService:getHeadersSync(::nPage, ::nPageSize, /*cDate*/))
	Else
		::jResponse:fromJson('{"items": [], "hasNext": false}')
	EndIf
	AnswerRest(::jResponse)
Return .T.

//------------------------------------------------------------------------------
/*/{Protheus.doc} tgvSalesOrders::getHeadersSyncDiff() as Logical
	Retorna todos os registro de cabeçalhos alterados.
	@type		method
	@version	12.1.27
	@author		Danilo Salve / Squad CRM & Faturamento
	@since		30/09/2020
	@return		logical, Verdadeiro
/*/
//------------------------------------------------------------------------------
Method getHeadersSyncDiff() as Logical Class tgvSalesOrders
	
	If lExistIsSellerFilterInDB .And. IsSellerFilterInDB()
		getPageAndPageSize(@::nPage, @::nPageSize)
		::jResponse:FromJson(::oService:getHeadersSync(::nPage, ::nPageSize, GetSyncDate()))
	Else
		::jResponse:fromJson('{"items": [], "hasNext": false}')
	EndIf
	AnswerRest(::jResponse)
Return .T.

//------------------------------------------------------------------------------
/*/{Protheus.doc} tgvSalesOrders::getHeaders() as Logical
	Obtem todos os Pedidos de Vendas, respeitando os paramentros informados na
	Requisição.
	@type		method
	@version	12.1.27
	@author		Danilo Salve / Squad CRM & Faturamento
	@since		26/07/2021
	@return		logical, Verdadeiro
/*/
//------------------------------------------------------------------------------
Method getHeaders() as Logical Class tgvSalesOrders
	Local aItems		:= {} as Array
	Local aURLFilter	:= getFilterParam() as Array
	Local cFields		:= getQueryParam('FIELDS') as Character
	Local cSort			:= getQueryParam('SORT') as Character

	getPageAndPageSize(@::nPage, @::nPageSize)
	::jResponse:fromJson(::oService:getHeaders(::nPage, ::nPageSize, /*cOrderId*/,aURLFilter, cFields, cSort))
	aItems := ::jResponse:GetJsonObject( "items" )

	If Empty( aURLFilter ) .Or. ( !Empty( aItems ) .And. Len( aItems ) > 0 )
		AnswerRest(::jResponse)
	Else
		SetRestFault(404, FWhttpEncode(STR0002) ) //"Pedido de Venda não localizado"
	EndIf

	aSize(aURLFilter, 0)
Return .T.

//------------------------------------------------------------------------------
/*/{Protheus.doc} tgvSalesOrders::getHeadersByOrderId() as Logical
	Obtem um Pedido de Venda Especifico
	@type		method
	@version	12.1.27
	@author		Danilo Salve / Squad CRM & Faturamento
	@since		26/07/2021
	@return		logical, Verdadeiro
/*/
//------------------------------------------------------------------------------
Method getHeadersByOrderId() as Logical Class tgvSalesOrders
	Local aURLFilter	:= getFilterParam() as Array
	Local cFields		:= getQueryParam('FIELDS') as Character
	Local cSort			:= getQueryParam('SORT') as Character

	oRest:setKeyHeaderResponse('Content-Type','application/json')

	::jResponse:fromJson(::oService:getHeaders(1, 1, GetPathParams("orderId"), aURLFilter, cFields, cSort))

	If Empty(::jResponse["orderid"])
		SetRestFault(404, STR0002 ) //"Pedido de Venda não localizado"
	Else
		oRest:setResponse(::jResponse)
	Endif

	aSize(aURLFilter, 0)
Return .T.

//------------------------------------------------------------------------------
/*/{Protheus.doc} tgvSalesOrders::getItemsByOrderId() as Logical
	Retorna os items do Pedido de Venda especificado na URL.
	@type		method
	@version	12.1.27
	@author		Danilo Salve / Squad CRM & Faturamento
	@since		30/09/2020
	@return		logical, Verdadeiro
/*/
//------------------------------------------------------------------------------
Method getItemsByOrderId() as Logical Class tgvSalesOrders
	Local aItems		:= {} as Array
	Local aURLFilter	:= getFilterParam() as Array
	Local cFields		:= getQueryParam('FIELDS') as Character
	Local cSort			:= getQueryParam('SORT') as Character

	getPageAndPageSize(@::nPage, @::nPageSize)
	::jResponse:FromJson(::oService:GetItems(::nPage, ::nPageSize, GetPathParams("orderId"), /*cItemId*/, aURLFilter, cFields, cSort))
	aItems := ::jResponse:GetJsonObject( "items" )

	If Empty( aURLFilter ) .Or. ( !Empty( aItems ) .And. Len( aItems ) > 0 )
		AnswerRest(::jResponse)
	Else
		SetRestFault(404, FWhttpEncode(STR0003) ) //"Item do Pedido de Venda não localizado"
	EndIf

	aSize(aURLFilter, 0)
Return .T.

//------------------------------------------------------------------------------
/*/{Protheus.doc} tgvSalesOrders::getItemsByOrderItemId() as Logical
	Retorna os items do Pedido de Venda especificado na URL.
	@type		method
	@version	12.1.27
	@author		Danilo Salve / Squad CRM & Faturamento
	@since		23/07/2021
	@return		logical, Verdadeiro
/*/
//------------------------------------------------------------------------------
Method getItemsByOrderItemId() as Logical Class tgvSalesOrders
	Local aURLFilter	:= getFilterParam() as Array
	Local cFields		:= getQueryParam('FIELDS') as Character
	Local cSort			:= getQueryParam('SORT') as Character

	oRest:setKeyHeaderResponse('Content-Type','application/json')

	::jResponse:FromJson(::oService:GetItems(1, 1, GetPathParams("orderId"), GetPathParams("itemId"), aURLFilter, cFields, cSort))

	If Empty(::jResponse["orderid"])
		SetRestFault(404, STR0003 ) //"Item do Pedido de Venda não localizado"
	Else
		oRest:setResponse(::jResponse)
	Endif

	aSize(aURLFilter, 0)
Return .T.

//------------------------------------------------------------------------------
/*/{Protheus.doc} tgvSalesOrders::getItemsSync() as Logical
	Retorna todos os items de pedidos de vendas
	@type		method
	@version	12.1.27
	@author		Danilo Salve / Squad CRM & Faturamento
	@since		30/09/2020
	@return		logical, Verdadeiro
/*/
//------------------------------------------------------------------------------
Method getItemsSync() as Logical Class tgvSalesOrders
	If lExistIsSellerFilterInDB .And. IsSellerFilterInDB()
		getPageAndPageSize(@::nPage, @::nPageSize)
		::jResponse:FromJson(::oService:getItemsSync(::nPage, ::nPageSize, /*cDate*/))
	Else
		::jResponse:fromJson('{"items": [], "hasNext": false}')
	EndIf
	AnswerRest(::jResponse)
Return .T.

//------------------------------------------------------------------------------
/*/{Protheus.doc} tgvSalesOrders::getItemsSyncDiff() as Logical
	Retorna todos os registro de cabeçalhos alterados
	@type		method
	@version	12.1.27
	@author		Danilo Salve / Squad CRM & Faturamento
	@since		30/09/2020
	@return		logical, Verdadeiro
/*/
//------------------------------------------------------------------------------
Method getItemsSyncDiff() as Logical Class tgvSalesOrders
	If lExistIsSellerFilterInDB .And. IsSellerFilterInDB()
		getPageAndPageSize(@::nPage, @::nPageSize)
		::jResponse:FromJson(::oService:getItemsSync(::nPage, ::nPageSize, GetSyncDate()))
	Else
		::jResponse:fromJson('{"items": [], "hasNext": false}')
	EndIf
	AnswerRest(::jResponse)
Return .T.

//------------------------------------------------------------------------------
/*/{Protheus.doc} tgvSalesOrders::getTotalSalesOrder() as Logical
	Retorna o total do Pedido de Venda especificado na URI.
	@type		method
	@version	12.1.27
	@author		Squad CRM & Faturamento
	@since		26/01/2021
	@return		logical, Verdadeiro
/*/
//------------------------------------------------------------------------------
Method getTotalSalesOrder() as Logical Class tgvSalesOrders
	Local cOrderId := GetPathParams("orderId")
	Local lCheckDbUseArea := IIF(lExistCheckDbUseArea, checkDbUseArea(), .T.)

	If lCheckDbUseArea
		If Empty(cOrderId)
			SetRestFault(403, STR0001) //Código do Pedido de Venda não informado!
		Else
			::jResponse:FromJson(::oService:getTotalSalesOrder( cOrderId ))
		EndIf
	EndIf
Return .T.

//------------------------------------------------------------------------------
/*/{Protheus.doc} tgvSalesOrders::postSyncSalesOrder() as Logical
	Inclui um Pedido de venda na Fila de Processamento
	@type		method
	@version	12.1.27
	@author		Danilo Salve / Squad CRM & Faturamento
	@since		04/12/2020
	@return		logical, Verdadeiro
/*/
//------------------------------------------------------------------------------
Method postSyncSalesOrder() as Logical Class tgvSalesOrders
	GetMockResponse(.T.)
Return .T.

//------------------------------------------------------------------------------
/*/{Protheus.doc} tgvSalesOrders::postSyncSalesOrderItems() as Logical
	Inclui um Pedido de venda na Fila de Processamento
	@type		method
	@version	12.1.27
	@author		Danilo Salve / Squad CRM & Faturamento
	@since		04/12/2020
	@return		logical, Verdadeiro
/*/
//------------------------------------------------------------------------------
Method postSyncSalesOrderItems() as Logical Class tgvSalesOrders
	GetMockResponse(.T.)
Return .T.

//------------------------------------------------------------------------------
/*/{Protheus.doc} tgvSalesOrders::putSyncSalesOrder() as Logical
	Altera um Pedido de venda na Fila de Processamento
	@type		method
	@version	12.1.27
	@author		Danilo Salve / Squad CRM & Faturamento
	@since		04/12/2020
	@return		logical, Verdadeiro
/*/
//------------------------------------------------------------------------------
Method putSyncSalesOrder() as Logical Class tgvSalesOrders
	GetMockResponse(.F.)
Return .T.

//------------------------------------------------------------------------------
/*/{Protheus.doc} tgvSalesOrders::putSyncSalesOrder() as Logical
	Altera um Pedido de venda na Fila de Processamento
	@type		Method
	@version	12.1.27
	@author		Danilo Salve / Squad CRM & Faturamento
	@since		04/12/2020
	@return		logical, Verdadeiro
/*/
//------------------------------------------------------------------------------
Method putSyncSalesOrderItems() as Logical Class tgvSalesOrders
	GetMockResponse(.F.)
Return .T.

//------------------------------------------------------------------------------
/*/{Protheus.doc} tgvSalesOrders::deleteSyncSalesOrder() as Logical
	Exclui um Pedido de venda na Fila de Processamento
	@type		method
	@version	12.1.27
	@author		Danilo Salve / Squad CRM & Faturamento
	@since		04/12/2020
	@return		logical, Verdadeiro
/*/
//------------------------------------------------------------------------------
Method deleteSyncSalesOrder() as Logical Class tgvSalesOrders
	GetMockResponse(.F.)
Return .T.

//------------------------------------------------------------------------------
/*/{Protheus.doc} tgvSalesOrders::deleteSyncSalesOrder() as Logical
	Exclui um Pedido de venda na Fila de Processamento
	@type		method
	@version	12.1.27
	@author		Danilo Salve / Squad CRM & Faturamento
	@since		04/12/2020
	@return		logical, Verdadeiro
	/*/
//------------------------------------------------------------------------------
Method deleteSyncSalesOrderItems() as Logical Class tgvSalesOrders
	GetMockResponse(.F.)
Return .T.

//------------------------------------------------------------------------------
/*/{Protheus.doc} tgvSalesOrders::getHeadersByProductId() as Logical
	Obtem uma Lista de Pedidos de Vendas que contenham o Produto informando na
	no Path Params.
	@type		method
	@version	12.1.27
	@author		Danilo Salve / Squad CRM & Faturamento
	@since		29/07/2021
	@return		logical, Verdadeiro
/*/
//------------------------------------------------------------------------------
Method getHeadersByProductId() as Logical Class tgvSalesOrders
	Local aItems		:= {} as array
	Local aURLFilter	:= getFilterParam() as Array
	Local cFields		:= getQueryParam('FIELDS') as Character
	Local cSort			:= getQueryParam('SORT') as Character

	getPageAndPageSize(@::nPage, @::nPageSize)
	::jResponse:fromJson(::oService:getHeaders(::nPage, ::nPageSize, /*cOrderId*/,aURLFilter, cFields, cSort, GetPathParams("productId")))
	aItems := ::jResponse:GetJsonObject( "items" )

	If Empty( aURLFilter ) .Or. ( !Empty( aItems ) .And. Len( aItems ) > 0 )
		AnswerRest( ::jResponse )
	Else
		SetRestFault(404, FWhttpEncode(STR0002) ) // "Pedido de Venda não localizado"
	EndIf

	aSize(aURLFilter, 0)
Return .T.

//------------------------------------------------------------------------------
/*/{Protheus.doc} tgvSalesOrders::postSalesOrder() as Logical
	Efetua a inclusão de um Pedido de venda.
	@type		method
	@version	12.1.33
	@author		Danilo Salve / Squad CRM & Faturamento
	@since		11/08/2021
	@return		logical, Verdadeiro
/*/
//------------------------------------------------------------------------------
Method postSalesOrder() as Logical Class tgvSalesOrders
	Local jBody := GetRequestBody() as Json
	Local lCheckDbUseArea := IIF(lExistCheckDbUseArea, checkDbUseArea(), .T.)

	oRest:setKeyHeaderResponse('Content-Type','application/json; charset=utf-8')
	If lCheckDbUseArea
		If jBody <> Nil
			::oService:saveSalesOrders(jBody, 3, /*cSalesOrdersId*/)
			FreeObj(jBody)
		Endif
	EndIf
Return .T.

//------------------------------------------------------------------------------
/*/{Protheus.doc} tgvSalesOrders::putSalesOrder() as Logical
	Efetua a alteração de um Pedido de venda.
	@type		method
	@version	12.1.33
	@author		Danilo Salve / Squad CRM & Faturamento
	@since		11/08/2021
	@return		logical, Verdadeiro
/*/
//------------------------------------------------------------------------------
Method putSalesOrder() as Logical Class tgvSalesOrders
	Local jBody := GetRequestBody() as Json
	Local lCheckDbUseArea := IIF(lExistCheckDbUseArea, checkDbUseArea(), .T.)

	oRest:setKeyHeaderResponse('Content-Type','application/json; charset=utf-8')
	If lCheckDbUseArea
		If jBody <> Nil
			::oService:saveSalesOrders(jBody, 4, GetPathParams("orderId"))
			FreeObj(jBody)
		Endif
	EndIf
Return .T.

//------------------------------------------------------------------------------
/*/{Protheus.doc} tgvSalesOrders::deleteSalesOrder() as Logical
	Efetua a exclusão de um Pedido de venda.
	@type		method
	@version	12.1.33
	@author		Danilo Salve / Squad CRM & Faturamento
	@since		12/08/2021
	@return		logical, Verdadeiro
/*/
//------------------------------------------------------------------------------
Method deleteSalesOrder() as Logical Class tgvSalesOrders
	Local lCheckDbUseArea := IIF(lExistCheckDbUseArea, checkDbUseArea(), .T.)

	oRest:setKeyHeaderResponse('Content-Type','application/json; charset=utf-8')

	If lCheckDbUseArea
		::oService:saveSalesOrders(/*jSalesOrder*/, 5, GetPathParams("orderId"))
	EndIf
Return .T.
