#include 'tlpp-core.th'

namespace tgv.salesOrders

static __instance as object
static __dataProvider := "protheus"
static __oActiveData as object
static __oActiveDataSync as object

//------------------------------------------------------------------------------
/*/{Protheus.doc} SalesOrdersDataFactory
  @sample		SalesOrdersDataFactory:New()
  @author		Danilo Salve
  @since		29/09/2020
  @version	12.1.27
/*/
//------------------------------------------------------------------------------
Class SalesOrdersDataFactory
	Public Method New() as Object
	Static Method GetData() as object
	Static Method GetDataSync() as object
EndClass

//------------------------------------------------------------------------------
/*/{Protheus.doc} New
  Cria um nova instancia.

  @sample		SalesOrdersDataFactory:New()
  @author		Danilo Salve
  @since		29/09/2020
  @version	12.1.27
/*/
//------------------------------------------------------------------------------
Method New() as Object Class SalesOrdersDataFactory
Return Self

//------------------------------------------------------------------------------
/*/{Protheus.doc} GetData
  Retorna o tipo de objeto utilizado para consulta.

  @sample   SalesOrdersDataFactory:GetData()
  @return   __oActiveData, Objeto, Objeto data
  @author   Danilo Salve
  @since    29/09/2020
  @version  12.1.27
/*/
//------------------------------------------------------------------------------
Method GetData() as Object Class SalesOrdersDataFactory 
	If __oActiveData == Nil
		If __dataProvider == "protheus"
			__oActiveData := SalesOrdersProtheusData():New()
		Else
			UserException("Invalid Provider")
		Endif
	Endif
Return __oActiveData

//------------------------------------------------------------------------------
/*/{Protheus.doc} GetDataSync
  Retorna o tipo de objeto utilizado para consulta.

  @sample   SalesOrdersDataFactory:GetData()
  @return   __oActiveData, Objeto, Objeto data
  @author   Danilo Salve
  @since    29/09/2020
  @version  12.1.27
/*/
//------------------------------------------------------------------------------
Method GetDataSync() as Object Class SalesOrdersDataFactory
	If __oActiveDataSync == Nil
		If __dataProvider == "protheus"
			__oActiveDataSync := SalesOrdersProtheusDataSync():New()
		Else
			UserException("Invalid Provider")
		Endif
	Endif
Return __oActiveDataSync
