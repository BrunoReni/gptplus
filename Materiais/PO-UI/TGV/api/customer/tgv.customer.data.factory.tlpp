#include 'tlpp-core.th'

namespace tgv.customer

static __dataProvider := "protheus"
static __oActiveData as Object
static __oActiveDataSync as Object

//------------------------------------------------------------------------------
/*/{Protheus.doc} CustomerDataFactory
	@sample		CustomerDataFactory:New()
	@author		Danilo Salve
	@since		01/10/2020
	@version	12.1.27
/*/
//------------------------------------------------------------------------------
Class CustomerDataFactory
	Public method New() as Object
	Static method getData() as object
	Static method getDataSync() as object
Endclass

//------------------------------------------------------------------------------
/*/{Protheus.doc} New
	Cria um nova instancia.

	@sample		CustomerDataFactory:New()
	@author		Danilo Salve
	@since		01/10/2020
	@version	12.1.27
/*/
//------------------------------------------------------------------------------
Method New() as Object Class CustomerDataFactory
Return Self

//------------------------------------------------------------------------------
/*/{Protheus.doc} GetData
	Retorna o tipo de objeto utilizado na consulta.

	@sample		CustomerDataFactory:GetData()
	@return		__oActiveData, Objeto, Objeto data
	@author		Danilo Salve
	@since		01/10/2020
	@version	12.1.27
/*/
//------------------------------------------------------------------------------
Method getData() as Object Class CustomerDataFactory
	If __oActiveData == Nil
		If __dataProvider == "protheus"
			__oActiveData := CustomerProtheusData():New()
		Else
			UserException("Invalid Provider")
		Endif
	Endif
Return __oActiveData

//------------------------------------------------------------------------------
/*/{Protheus.doc} GetData
	Retorna o tipo de objeto utilizado na consulta.

	@sample		CustomerDataFactory:GetData()
	@return		__oActiveData, Objeto, Objeto data
	@author		Danilo Salve
	@since		01/10/2020
	@version	12.1.27
/*/
//------------------------------------------------------------------------------
Method getDataSync() as Object Class CustomerDataFactory
	If __oActiveDataSync == Nil
		If __dataProvider == "protheus"
			__oActiveDataSync := CustomerProtheusDataSync():New()
		Else
			UserException("Invalid Provider")
		Endif
	Endif
Return __oActiveDataSync
