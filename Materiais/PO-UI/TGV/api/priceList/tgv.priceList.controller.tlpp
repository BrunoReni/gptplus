#include "tlpp-core.th"

namespace tgv.priceList
using namespace tgv.util
Static lExistIsSellerFilterInDB := FindFunction("tgv.util.isSellerFilterInDB")
Static lExistCheckDbUseArea     := IIF(lExistCheckDbUseArea == NIL, FindFunction("tgv.util.checkDbUseArea"), lExistCheckDbUseArea)
//------------------------------------------------------------------------------
/*/{Protheus.doc} tgvPriceList
    API para consulta de tabelas de preço (cabeçalho) do TOTVS Gestão de Vendas

    @author		Squad CRM/Faturamento
    @since		29/09/2020
    @version	12.1.27
/*/
//------------------------------------------------------------------------------
Class tgvPriceList
	Data jResposta  as Json
	Data nPage      as Numeric
	Data nPageSize  as Numeric
	Data oService   as Object

	Public Method New() as Object

	@Get("/api/tgv/priceList/")
	Public Method GetPriceListHeader() as Logical

	@Get("/api/tgv/priceList/diff/:dateSync")
	Public Method GetPriceListHeaderDiff() as Logical

	@Get("/api/tgv/priceList/items")
	Public Method GetPriceListItems() as Logical

	@Get("/api/tgv/priceList/items/diff/:dateSync")
	Public Method GetPriceListItemsDiff() as Logical
endClass

//------------------------------------------------------------------------------
/*/{Protheus.doc} tgvPriceList
    Método para nova instância do objeto

    @author		Squad CRM/Faturamento
    @since		29/09/2020
    @version	12.1.27
/*/
//------------------------------------------------------------------------------
Method New() as Object Class tgvPriceList
	::nPage     := 1
	::nPageSize := 10
	::oService  := PriceListService():getInstance()
	::jResposta := JsonObject():New()
Return Self

//------------------------------------------------------------------------------
/*/{Protheus.doc} GetPriceListHeader - /api/tgv/priceList/
	Efetua o GET de todos os registros (apenas cabeçalho da tabela de preço - DA0)

	@author		Squad CRM/Faturamento
	@since		29/09/2020
	@version	12.1.27
/*/
//------------------------------------------------------------------------------
Method GetPriceListHeader() as Logical Class tgvPriceList
	getPageAndPageSize(@::nPage, @::nPageSize)
	::jResposta:fromJson(::oService:GetPriceList(::nPage, ::nPageSize, /*cDate*/, .F.))
	AnswerRest(::jResposta)
Return .T.

//------------------------------------------------------------------------------
/*/{Protheus.doc} GetPriceListHeaderDiff - /api/tgv/priceList/:data
	Efetua o GET de todos os registros alterados e não sincronizados
	(apenas cabeçalho da tabela de preço - DA0)

	@author		Squad CRM/Faturamento
	@since		29/09/2020
	@version	12.1.27
/*/
//------------------------------------------------------------------------------
Method GetPriceListHeaderDiff() as Logical Class tgvPriceList
	getPageAndPageSize(@::nPage, @::nPageSize)
		::jResposta:fromJson(::oService:GetPriceList(::nPage, ::nPageSize, GetSyncDate(), .F.))
		AnswerRest(::jResposta)
Return .T.

//------------------------------------------------------------------------------
/*/{Protheus.doc} GetPriceListItems - /api/tgv/priceList/items/
	Efetua o GET de todos os registros (apenas itens da tabela de preço - DA1)

	@author		Squad CRM/Faturamento
	@since		29/09/2020
	@version	12.1.27
/*/
//------------------------------------------------------------------------------
Method GetPriceListItems() as Logical Class tgvPriceList
	Local lCheckDbUseArea := IIF(lExistCheckDbUseArea, checkDbUseArea(), .T.)

	If lCheckDbUseArea
		getPageAndPageSize(@::nPage, @::nPageSize)
		If lExistIsSellerFilterInDB .And. isSellerFilterInDB()
			::jResposta:fromJson(::oService:GetPriceList(::nPage, ::nPageSize, /*cDate*/, .T.))
		Else
			::jResposta:fromJson('{"items": [], "hasNext": false}')
		EndIf
		AnswerRest(::jResposta)
	EndIf
Return .T.

//------------------------------------------------------------------------------
/*/{Protheus.doc} GetPriceListItemsDiff - /api/tgv/priceList/items/:data
	Efetua o GET de todos os registros alterados e não sincronizados
	(apenas itens da tabela de preço - DA1)

	@author		Squad CRM/Faturamento
	@since		29/09/2020
	@version	12.1.27
/*/
//------------------------------------------------------------------------------
Method GetPriceListItemsDiff() as Logical Class tgvPriceList
	Local lCheckDbUseArea := IIF(lExistCheckDbUseArea, checkDbUseArea(), .T.)

	If lCheckDbUseArea
		getPageAndPageSize(@::nPage, @::nPageSize)
		If lExistIsSellerFilterInDB .And. isSellerFilterInDB()
			::jResposta:fromJson(::oService:GetPriceList(::nPage, ::nPageSize, GetSyncDate(), .T.))
		Else
			::jResposta:fromJson('{"items": [], "hasNext": false}')
		EndIf
		AnswerRest(::jResposta)
	EndIf
Return .T.
