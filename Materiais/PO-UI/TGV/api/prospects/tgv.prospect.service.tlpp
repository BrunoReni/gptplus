#include 'tlpp-core.th'

namespace totvs.protheus.backoffice.tgvProspects
static __instance as object

//------------------------------------------------------------------------------
/*/{Protheus.doc} ProspectService
	disponibiliza um classe de serviços da API prospects
	@type class
	@version 12.1.33
	@author Danilo Salve / Squad CRM & Faturamento
	@since 03/03/2021
/*/
//------------------------------------------------------------------------------
class ProspectService
	data jResponse as Json

	public method new() as object
	public method getInstance() as object
	public method getProspects() as json
	public method getProspectsSync() as json
EndClass

//------------------------------------------------------------------------------
/*/{Protheus.doc} ProspectService::new() as object
	Disponibiliza uma nova intancia do serviço Prospects.
	@type method
	@version 12.1.33
	@author Danilo Salve / Squad CRM & Faturamento
	@since 03/03/2021
	@return object, nova instancia da classe ProspectService
/*/
//------------------------------------------------------------------------------
method new() as object class ProspectService
	::jResponse := jsonObject():New()
Return Self

//------------------------------------------------------------------------------
/*/{Protheus.doc} ProspectService::getInstance() as object
	obtem uma instancia da classe ProspectService
	@type method
	@version 12.1.33
	@author Danilo Salve / Squad CRM & Faturamento
	@since 03/03/2021
	@return object, instancia da classe ProspectService
/*/
//------------------------------------------------------------------------------
method getInstance() as object class ProspectService
	If (__instance == Nil)
		__instance := ProspectService():new()
	EndIf
Return __instance

//------------------------------------------------------------------------------
/*/{Protheus.doc} ProspectService::getProspects(nPage as Numeric, nPageSize as Numeric, cDate as Character) as json
	Obtem uma lista de Prospects, seguindo o padrão de campos utilizados no PO-SYNC
	@type method
	@version 12.1.33
	@author Danilo Salve / Squad CRM & Faturamento
	@since 03/03/2021
	@param nPage, numeric, Número da pagina
	@param nPageSize, numeric, Quantidade de registros por pagina
	@param aURLFilter, array , Lista de Filtros no padrão do FWAdapterBaseV2
	@param cFields, character, Lista de campos que devem ser retornados
	@param cSort, character, Ordernação do Response
	@param cCode, character, Codigo do Cliente
	@param cStore, character, Loja do Cliente
	@param cQuickFilter, Character, Filtro rápido a ser aplicado na lista de produtos a ser retornada
	@return json, resposta da requisição formatada em json
/*/
//------------------------------------------------------------------------------
method getProspects(nPage as numeric  , nPageSize as numeric, aURLFilter as array, cFields as character, ;
					cSort as character, cCode as character  , cStore as character, cQuickFilter as Character) as json class ProspectService
	local oProspect := ProspectDataFactory():getData()
	::jResponse := JsonObject():New()

	if Empty(cCode) .and. Empty(cStore)
		oProspect:oJsonObj:lList := .T.
	else
		oProspect:oJsonObj:lList := .F.
	endif

	oProspect:Get(nPage, nPageSize, aURLFilter, cFields, cSort, cCode, cStore, cQuickFilter)

	If oProspect:lOk
		::jResponse := oProspect:getJSONResponse()
	EndIf

	oProspect:DeActivate()
	FreeObj(oProspect)
Return ::jResponse

//------------------------------------------------------------------------------
/*/{Protheus.doc} ProspectService::getProspectsSync(nPage as Numeric, nPageSize as Numeric, cDate as Character) as json
	Obtem uma lista de Prospects, seguindo o padrão de campos utilizados no PO-SYNC
	@type method
	@version 12.1.33
	@author Danilo Salve / Squad CRM & Faturamento
	@since 19/01/2022
	@param nPage, numeric, Número da pagina
	@param nPageSize, numeric, Quantidade de registros por pagina
	@param cDateSync, character, Data de Sincronismo/Alteracao
	@return json, resposta da requisição formatada em json
/*/
//------------------------------------------------------------------------------
method getProspectsSync(nPage as numeric, nPageSize as numeric, cDateSync as character) as json class ProspectService
	local oProspect := ProspectDataFactory():getDataSync()
	::jResponse := JsonObject():New()

	oProspect:Get(nPage, nPageSize, cDateSync)

	If oProspect:lOk
		::jResponse := oProspect:getJSONResponse()
	EndIf

	oProspect:DeActivate()
	FreeObj(oProspect)
Return ::jResponse
