#include "tlpp-core.th"

namespace tgv.util

//------------------------------------------------------------------------------
/*/{Protheus.doc} ConvertResponseValues
    Efetua a Conversão ds valores dos campos

    @sample   ConvertResponseValues(aFields, "SA1", "TGVXXX", .F., .F., oHashFieldsPd, @Self)
    @param    aFields , Array     	, Lista de campos (MapFields)
    @param    cAlias  , Character 	, Alias utilizado no Retorno da Query
    @param    lEmpty, Logical    	, Habilita retorno vazio
    @param    oData, Objeto, Objeto responsavel pela Clase Data do Serviço
    
    @author		Danilo Salve
    @since		20/01/2021
    @version	12.1.27
/*/
//------------------------------------------------------------------------------
Function ConvertResponseValues(aFields as Array, cAlias as Character, lEmpty as Logical, oData as Object )
	Local cContent	as Character
	Local cField	as Character
	Local nField 	as Numeric
	Local nPosField	as Numeric

	For nField := 1 to oData:nFields
		If lEmpty
			cContent := ""
		Else
			cField := ""
			If aFields[nField, 1] == "deleted"
				cContent := !Empty((cAlias)->( &(aFields[nField, 2])))
			ElseIf !oData:lcanObfuscateField .And. canObfuscateField(oData:oHashFieldsPD, aFields[nField, 1], @cField,  oData:cSource, oData:isAdmin )
				cContent := Alltrim(FTPDObfuscate( (cAlias)->&(aFields[nField, 2]), cField, oData:cSource, /*lLoad*/))
			ElseIf aFields[nField, 1] $ oData:cCustomFields
				nPosField := aScan(oData:aCustomFields, { |x| x[1] == aFields[nField, 1]})
				If nPosField > 0
					cContent := Eval(oData:aCustomFields[nPosField, 2])
				Else
					cContent := oData:ValueToJson( aFields[nField, 1], (cAlias)->( &(aFields[nField, 2]) ))
				Endif
			Else
				cContent := oData:ValueToJson( aFields[nField, 1], (cAlias)->( &(aFields[nField, 2]) ))
			Endif
		Endif
		oData:oJsonObj:setProp( aFields[nField, 1], cContent, lEmpty )
	Next

Return Nil

//------------------------------------------------------------------------------
/*/{Protheus.doc} GetInternalIdQry
    Retorna o internalId do registro

    @sample   	GetInternalIdQry( (cAlias)->DA1_FILIAL + (cAlias)->DA1_CODTAB ))
    @param    	cString , Character     , InternalID
    @author		Danilo Salve
    @since		27/05/2021
    @version	12.1.27
/*/
//------------------------------------------------------------------------------
Function GetInternalIdQry(cString as Character) as Character
Return cString
