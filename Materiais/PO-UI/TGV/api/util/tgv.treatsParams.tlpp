#include 'tlpp-core.th'
#include 'tgv.treatsparams.ch'

namespace tgv.util

//----------------------------------------------------------------------------
/*/{Protheus.doc} getPageAndPageSize
	Obtem o valor dos parametros Page e PageSize
	@type		function
	@version	12.1.33
	@author		Danilo Salve / Squad CRM & Faturamento
	@since		10/12/2020
	@param		nPage		, numeric, Número da página que será retornada
	@param		nPageSize	, numeric, Quantidade de registros por pagina
	@sample		getPageAndPageSize(@nPage, @nPageSize)
/*/
//---------------------------------------------------------------------------
function getPageAndPageSize(nPage as Numeric, nPageSize as Numeric)
	If (oRest:getQueryRequest():GetJsonText('pageSize') != 'null')
		nPageSize := Val(oRest:getQueryRequest():GetJsonText('pageSize'))
	Else
		nPageSize := 10
	EndIf

	If (oRest:getQueryRequest():GetJsonText('page') != 'null')
		nPage := Val(oRest:getQueryRequest():GetJsonText('page'))
	Else
		nPage := 1
	Endif
Return Nil

//----------------------------------------------------------------------------
/*/{Protheus.doc} convertTimeStamp
	Efetua a formatação da expressão SQL para campos S_T_A_M_P_ de acordo com
	o banco de dados utilizado.
	@type		function
	@since		10/12/2020
	@version	12.1.33
	@author		Squad CRM & Faturamento
	@param		cValue		, Character, Data
	@param		cType		, Character, Tipo
	@param		cDataType	, Character, Tipo de formatação (string ou timestamp)
	@return		Character	, Expressão SQL formatada de acordo com o banco de dados utilizado.
/*/
//---------------------------------------------------------------------------
function convertTimeStamp(cValue As Character, cType As Character, cDataType As Character ) As Character
	Local cDbMs  as Character
	Local cQuery as Character
	Local nPoint as Numeric

	cDbMs := TcGetDb()

	If cType == 'value'
		cValue := "'" + cValue + "'"
	EndIf

	If cDataType == "timestamp"
		Do Case
		Case "MSSQL" $ cDbMs
			cQuery := " CONVERT(DATETIME, " + cValue + ", 127) "
		Case "ORACLE" $ cDbMs
			nPoint := AT( ".", cValue ) - 1
			If nPoint > 0
				cValue := Substring(cValue, 1, nPoint) + "'"
			Endif
			cQuery := " TO_TIMESTAMP( " + cValue + ", '" + 'YYYY-MM-DD"T"HH24:MI:SS"Z"'+ "') "
		Case "POSTGRES" $ cDbMs
			cQuery := " TO_TIMESTAMP( " + cValue + ", '" + 'YYYY-MM-DD"T"HH24:MI:SS"Z"'+ "') "
		OtherWise
			cQuery := " TO_TIMESTAMP( " + cValue + ", 'YYYY-MM-DD HH:MI:SS') "
		EndCase
	EndIf

	If cDataType == "string"
		Do Case
		Case "MSSQL" $ cDbMs
			cQuery := " CONVERT(varchar, " + cValue + ", 127) "
		Case "ORACLE" $ cDbMs
			cQuery := " TO_CHAR( " + cValue + ", '" + 'yyyy-mm-dd"T"HH24:MI:SS"Z"'+ "') "
		Case "POSTGRES" $ cDbMs
			cQuery := " TO_CHAR( " + cValue + ", '" + 'YYYY-MM-DD"T"HH24:MI:SS"Z"'+ "') "
		OtherWise
			cQuery := " TO_CHAR( " + cValue + ", 'YYYY-MM-DD HH:MI:SS') "
		EndCase
	EndIf

Return cQuery

//------------------------------------------------------------------------------
/*/{Protheus.doc} getPathParams
	Retorna um PathParams informado na requisição
	@type		function
	@sample		GetPathParams("dateSync")
	@param		cPathParam	, Character	, Nome/Identificador do PathParam
	@return		Character	, PathParamns
	@author		Danilo Salve / Squad CRM & Faturamento
	@since		30/09/2020
	@version	12.1.27
/*/
//------------------------------------------------------------------------------
Function getPathParams( cPathParam as Character ) as Character
	Local jPath		:= oRest:getPathParamsRequest()
	Local cRetorno	as Character

	If( jPath != Nil)
		cRetorno := jPath[cPathParam]
	Endif

	FreeObj(jPath)
Return cRetorno

//------------------------------------------------------------------------------
/*/{Protheus.doc} getSyncDate
	Obtem a Data de Sincronismo informanda no EndPoint.
	@type		function
	@sample		GetDataDiff()
	@return		Character	, Data de Sincronismo
	@author		Danilo Salve / Squad CRM & Faturamento
	@since		19/01/2021
	@version	12.1.27
/*/
//------------------------------------------------------------------------------
Function getSyncDate() as Character
	Local cData := FWTimeStamp(6)
	Local jPath := oRest:getPathParamsRequest()

	If( jPath != nil)
		cData := jPath["dateSync"]
	Else
		oRest:setFault( STR0002 ) // Data de Sincronismo não informada
	Endif

	FreeObj(jPath)
Return cData

//------------------------------------------------------------------------------
/*/{Protheus.doc} getRequestBody
	Retorna o Body informado na requisição
	@type		function
	@sample		GetRequestBody()
	@return		Json	, JSON contendo o Body da requisição.
	@author		Danilo Salve / Squad CRM & Faturamento
	@since		21/01/2021
	@version	12.1.27
/*/
//------------------------------------------------------------------------------
Function getRequestBody() as Json
	Local cBody			:= oRest:getBodyRequest()
	Local cErrorParser	as Character
	Local jBody			as Json
	Local lError 		as Logical

	If Empty(cBody)
		lError := .T.
	Else
		jBody := JsonObject():New()
		cErrorParser := jBody:fromJson(DecodeUtf8(cBody))
		If !Empty(cErrorParser)
			FreeObj(jBody)
			lError := .T.
		EndIf
	EndIf

	If lError
		oRest:setKeyHeaderResponse('Content-Type','application/json; charset=utf-8')
		SetRestFault(403, STR0001 ) //"Não será possivel prosseguir com a requisição, pois o Corpo está invalido."
	Endif
Return jBody

//------------------------------------------------------------------------------
/*/{Protheus.doc} getFilterParam
	Obtem todos os campos utilizados no Select
	@type		function
	@sample		getFilterParam()
	@param		aQueryString, Array, Filtro utilizado no URLFILTER da FWAdapterBaseV2
	@return		Array	, Lista de Campos
	@author		Danilo Salve / Squad CRM & Faturamento
	@since		15/07/2021
	@version	12.1.27
/*/
//------------------------------------------------------------------------------
Function getFilterParam() as Array
	Local cFilter		:= getQueryParam('FILTER')
	Local aQueryString	:= {}

	If !Empty(cFilter)
		cFilter := FWURIDecode(cFilter)
		aAdd(aQueryString, {"FILTER", DecodeUtf8(cFilter)})
	Endif
	
Return aQueryString

//------------------------------------------------------------------------------
/*/{Protheus.doc} getQueryParam
	Obtem o valor de uma parametro da requisição
	@type		function
	@version	12.1.33
	@author		Danilo Salve / Squad CRM & Faturamento
	@since		26/08/2021
	@param		cParamName	, character, Nome do Parametro
	@return		character	, Valor do parametro
/*/
//------------------------------------------------------------------------------
Function getQueryParam(cParamName as Character) as Character
	Local cParamText as character

	If oRest:getQueryRequest():GetJsonText(cParamName) != 'null'
		cParamText := oRest:getQueryRequest():GetJsonText(cParamName)
	Endif
Return cParamText
