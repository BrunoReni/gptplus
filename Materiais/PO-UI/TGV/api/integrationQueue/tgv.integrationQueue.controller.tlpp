#include 'tlpp-core.th'
#include "tgv.integrationqueue.controller.ch"

namespace tgv.integrationQueue
using namespace tgv.util

//------------------------------------------------------------------------------
/*/{Protheus.doc} tgvIntegrationQueue
  API para integração TOTVS Gestão de Vendas x Fila processamento de Registros.

  @author		Danilo Salve
  @since		08/12/2020
  @version	12.1.27
/*/
//------------------------------------------------------------------------------
Class tgvIntegrationQueue
	Data nPage      as Numeric
	Data nPageSize  as Numeric
	Data jResposta  as Json
	Data oService   as Object

	Public Method New()

	@Get("/api/tgv/integrationqueue/")
	Public Method GetAll() as Logical

	@Get("/api/tgv/integrationqueue/diff/:dateSync")
	public method GetDiff() as Logical

	@Post("/api/tgv/integrationqueue/")
	Public Method PostQueue() as Logical

	@Put("/api/tgv/integrationqueue/:externalId")
	Public Method PutQueue() as Logical

	@Delete("/api/tgv/integrationqueue/:externalId")
	Public Method DeleteQueue() as Logical

EndClass

//------------------------------------------------------------------------------
/*/{Protheus.doc} tgvIntegrationQueue
  Cria uma nova instacia do objeto tgvIntegrationQueue

  @sample   tgvIntegrationQueue:New()
  @author		Danilo Salve
  @since		08/12/2020
  @version	12.1.27
/*/
//------------------------------------------------------------------------------
Method New() class tgvIntegrationQueue
	::nPage         := 1
	::nPageSize     := 10
	::jResposta     := JsonObject():new()
	::oService      := IntegrationQueueService():GetInstance()
Return self

//------------------------------------------------------------------------------
/*/{Protheus.doc} GetAll
  Consulta todos os registros enviados para a fila de processamento.

  @sample   GET /api/tgv/integrationqueue/
  @author		Danilo Salve
  @since		08/12/2020
  @version	12.1.27
/*/
//------------------------------------------------------------------------------
Method GetAll() as Logical Class tgvIntegrationQueue
	getPageAndPageSize(@::nPage, @::nPageSize)
	::jResposta:fromJson(::oService:GetQueue(::nPage, ::nPageSize,/*cData*/))
	AnswerRest(::jResposta)
Return .T.

//------------------------------------------------------------------------------
/*/{Protheus.doc} GetDiff
  Consulta todos os registros enviados para a fila de processamento que foram alterados.

  @sample   GET /api/tgv/integrationqueue/diff/2020-09-30T09:00:00.000Z
  @author		Danilo Salve
  @since		08/12/2020
  @version	12.1.27
/*/
//------------------------------------------------------------------------------
Method GetDiff() as Logical class tgvIntegrationQueue
	getPageAndPageSize(@::nPage, @::nPageSize)
	::JResposta:FromJson(::oService:GetQueue(::nPage, ::nPageSize,  GetSyncDate()))
	AnswerRest(::jResposta)
Return .T.

//------------------------------------------------------------------------------
/*/{Protheus.doc} PostQueue
  Inclui um registro de venda na Fila de Processamento

  @sample   POST /api/tgv/integrationqueue/
  @author		Danilo Salve
  @since		08/12/2020
  @version	12.1.27
/*/
//------------------------------------------------------------------------------
Method PostQueue() as Logical class tgvIntegrationQueue
	Local jBody := GetRequestBody()

	oRest:setKeyHeaderResponse('Content-Type','application/json')

	If jBody <> Nil
		::oService:WriteOnQueue(jBody, "3", /*cExternalId*/)
		FreeObj(jBody)
	EndIf
Return .T.

//------------------------------------------------------------------------------
/*/{Protheus.doc} PutQueue
  Altera um registro na Fila de Processamento

  @sample   PUT /api/tgv/integrationqueue/items
  @author		Danilo Salve
  @since		08/12/2020
  @version	12.1.27
/*/
//------------------------------------------------------------------------------
Method PutQueue() as Logical class tgvIntegrationQueue
	Local jBody 		  := GetRequestBody()
	Local cExternalId := GetPathParams("externalId")

	oRest:setKeyHeaderResponse('Content-Type','application/json')

	If jBody <> Nil
		::oService:WriteOnQueue(jBody, "4", cExternalId)
		FreeObj(jBody)
	EndIf

Return .T.

//------------------------------------------------------------------------------
/*/{Protheus.doc} DeleteQueue
  Exclui um registro na Fila de Processamento

  @sample   Delete /api/tgv/integrationqueue/items
  @author		Danilo Salve
  @since		08/12/2020
  @version	12.1.27
/*/
//------------------------------------------------------------------------------
Method DeleteQueue() as Logical class tgvIntegrationQueue
	Local cExternalId 	:= GetPathParams("externalId")
	Local jBody 		    := JsonObject():New()
	Local jOrder		    := JsonObject():New()
	Local cSourceName   := ReturnDeleteSource(cExternalId)

	jOrder['sellerid']  := ReturnSellerCode()

	jBody['id'] := cExternalId
	jBody['json'] := jOrder
	jBody['deleted'] := .T.
	jBody['source'] := cSourceName

	If !Empty(cSourceName)
		::oService:WriteOnQueue(jBody, "5", cExternalId, cSourceName)
	Else
		SetRestFault(400, STR0003)
	EndIf

	FreeObj(jOrder)
	FreeObj(jBody)
Return .T.

//------------------------------------------------------------------------------
/*/{Protheus.doc} ReturnSellerCode()
  Retorna o codigo do Vendedor

  @sample     ReturnSellerCode()
  @return		Char, Código do Vendedor
  @author		Danilo Salve
  @since		22/12/2020
  @version	12.1.27
/*/
//------------------------------------------------------------------------------
Static Function ReturnSellerCode()
	Local aArea	      := GetArea()
	Local cSellerCode as Character

	DbSelectArea("SA3")
	SA3->(DbSetOrder(7))

	If SA3->(DbSeek(FwXFilial("SA3") + __cUserId))
		cSellerCode := SA3->A3_COD
	Else
		cSellerCode := ''
	Endif

	SA3->(DbCloseArea())
	RestArea(aArea)

	aSize(aArea, 0)
Return cSellerCode

//------------------------------------------------------------------------------
/*/{Protheus.doc} ReturnDeleteSource()
  Retorna a rotina que deve ser executado o execauto de exclusão.

  @sample     ReturnDeleteSource('order')
  @param		order, Character, rotina do execauto
  @return		Character, Nome da rotina
  @author		Squad CRM/FAT
  @since		26/03/2021
  @version	12.1.27
/*/
//------------------------------------------------------------------------------
Static Function ReturnDeleteSource(cExternalId as Character) as Character
	Local cSourceName as Character
	Local cAliasSC5   := GetNextAlias()
	Local cAliasSCJ   := GetNextAlias()
	Local aArea	      := GetArea()

	BeginSql alias cAliasSC5
		SELECT
			SC5.C5_NUMEXT,
			SC5.C5_NUM
		FROM
			%table:SC5% SC5
		WHERE
			SC5.C5_FILIAL= %xfilial:SC5% AND
			SC5.C5_NUMEXT= %exp:cExternalId% AND
			SC5.%notDel%
			ORDER BY %Order:SC5%
	EndSql

	If (cAliasSC5)->(!Eof())
		cSourceName := "MATA410"
	Else
		BeginSql alias cAliasSCJ
		SELECT
			SCJ.CJ_NUMEXT,
			SCJ.CJ_NUM
		FROM
			%table:SCJ% SCJ
		WHERE
			SCJ.CJ_FILIAL= %xfilial:SCJ% AND
			SCJ.CJ_NUMEXT= %exp:cExternalId% AND
			SCJ.%notDel%
			ORDER BY %Order:SCJ%
		EndSql

		If (cAliasSCJ)->(!Eof())
			cSourceName := "MATA415"
		EndIf

		(cAliasSCJ)->(DbCloseArea())
	EndIf

	(cAliasSC5)->(DbCloseArea())

	RestArea(aArea)
	aSize(aArea, 0)

Return cSourceName
