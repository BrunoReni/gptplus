#include 'tlpp-core.th'

namespace totvs.protheus.backoffice.pgvSellerFilters
using namespace tgv.util

static __oInstance as object
static __oActiveData as object

//---------------------------------------------------------------------------------------------
/*/{Protheus.doc} SellerFiltersService
    disponibiliza um classe de serviços da API SellerFilters (Filtros do Vendedor)
    @type class
    @version 12.1.2210
    @author Danilo Salve / Squad CRM & Faturamento
    @since 03/10/2022
/*/
//---------------------------------------------------------------------------------------------
class SellerFiltersService
	data jResponse as json

	public method new() as object
	public method getInstance() as object
	public method getSellerFilters() as json
	public method getItemsFromSellerFilter() as json
	public method saveSellerFilter()
	private method getData() as object
endclass

//---------------------------------------------------------------------------------------------
/*/{Protheus.doc} SellerFiltersService::new() as object
    Disponibiliza uma nova intancia do serviço SellerFilters.
    @type method
    @version 12.1.2210
    @author Danilo Salve / Squad CRM & Faturamento
    @since 03/10/2022
    @return object, nova instancia da classe SellerFiltersService
/*/
//---------------------------------------------------------------------------------------------
method new() as object class SellerFiltersService
	::jResponse := JsonObject():new()
return self

//---------------------------------------------------------------------------------------------
/*/{Protheus.doc} SellerFiltersService::getInstance() as object
    Disponibiliza a instancia da classe SellerFiltersService
    @type method
    @version 12.1.2210
    @author Danilo Salve / Squad CRM & Faturamento
    @since 03/10/2022
    @return object, instancia atual da classe SellerFiltersService
/*/
//---------------------------------------------------------------------------------------------
method getInstance() as object class SellerFiltersService
	If __oInstance == nil
		__oInstance := SellerFiltersService():new()
	Endif
return __oInstance

//---------------------------------------------------------------------------------------------
/*/{Protheus.doc} SellerFiltersService::getData
    Disponibiliza a instancia atual da classe SellerFilterData
    @type method
    @version 12.1.2210
    @author Danilo Salve / Squad CRM & Faturamento
    @since 03/10/2022
    @return object, Instancia atual da classe SellerFilterData
/*/
//---------------------------------------------------------------------------------------------
method getData() class SellerFiltersService as object
	If __oActiveData == nil
		__oActiveData := SellerFiltersData():new()
	Endif
return __oActiveData

//--------------------------------------------------------------------------------------------------------------------------
/*/{Protheus.doc} SellerFiltersService::getSellerFilters(nPage as numeric, nPageSize as numeric, cUUID as character,;
    aURLFilter as array, cFields as character, cSort as character) as json
	Obtem os Filtros do Vendedor Logado, podendo retornar uma Lista ou um único registro.
	@type method
	@version 12.1.2210
	@author Danilo Salve / Squad CRM & Faturamento
    @since 03/10/2022
	@param nPage, numeric, Número da pagina
	@param nPageSize, numeric, Quantidade de registros por pagina
	@param cUUID, character, Código identificador UUID (AQ4_UUID) do filtro
	@param aURLFilter, array, Lista de Filtros no padrão do FWAdapterBaseV2
	@param cFields, character, Lista de campos que devem ser retornados
	@param cSort, character, Ordernação do Response
	@return json, resposta da requisição formatada em json
/*/
//--------------------------------------------------------------------------------------------------------------------------
method getSellerFilters(nPage as numeric, nPageSize as numeric, cUUID as character, aURLFilter as array, cFields as character,;
		cSort as character) as json class SellerFiltersService
	Local oData := ::getData()
	::jResponse := JsonObject():new()

	if Empty(cUUID)
		oData:oJsonObj:lList := .T.
	else
		oData:oJsonObj:lList := .F.
	endif

	oData:getSellerFilters(nPage, nPageSize, cUUID, aURLFilter, cFields, cSort)

	If oData:lOk
		::jResponse := oData:GetJSONResponse()
	EndIf

	oData:DeActivate()
	FwFreeObj(oData)
return ::jResponse

//--------------------------------------------------------------------------------------------------------------------------
/*/{Protheus.doc} SellerFiltersService::getItemsFromSellerFilter(nPage as numeric, nPageSize as numeric,;
    cUUID as character, cItemId as character, aURLFilter as array, cFields as character, cSort as character) as json
    Obtem os Itens de um Filtro do Vendedor Logado, podendo retornar uma Lista ou um único registro.
    @type method
    @version 12.1.2210
    @author Danilo Salve / Squad CRM & Faturamento
    @since 03/10/2022
    @param nPage, numeric, número da página
	@param nPageSize, numeric, Quantidade de registros por página
	@param cUUID, character, Código identificador UUID (AQ4_UUID) do filtro
	@param cItemId, character, Código do item do orçamento(AQ5_ITEM)
	@param aURLFilter , array, Lista de Filtros no padrão do FWAdapterBaseV2
	@param cFields, character, Lista de campos que devem ser retornados
	@param cSort, character, Ordernação do Response	
    @return json, resposta da requisição formatada em json
/*/
//--------------------------------------------------------------------------------------------------------------------------
method getItemsFromSellerFilter(nPage as numeric, nPageSize as numeric, cUUID as character, cItemId as character, aURLFilter as array,;
        cFields as character, cSort as character) as json class SellerFiltersService
	Local oData := ::getData()
	::jResponse := JsonObject():New()

	if Empty(cItemId)
		oData:oJsonObj:lList := .T.
	else
		oData:oJsonObj:lList := .F.
	endif

	oData:getItemsFromSellerFilter(nPage, nPageSize, cUUID, cItemId, aURLFilter, cFields, cSort)

	If oData:lOk
		::jResponse := oData:GetJSONResponse()
	EndIf

	oData:DeActivate()
	FwFreeObj(oData)
return ::jResponse

//--------------------------------------------------------------------------------------------------------------------------
/*/{Protheus.doc} SellerFiltersService::saveSellerFilter
	Efetua a gravação do Filtro do Vendedor
	@type method
	@version 12.1.2210
	@author Danilo Salve / Squad CRM & Faturamento
	@since 05/10/2022
	@param jBody, json, Filtro do Vendedor - corpo.
	@param nOperation, numeric, operação (3, 4 ou 5)
	@param cUUID, character, Código identificador UUID (AQ4_UUID) do filtro
/*/
//--------------------------------------------------------------------------------------------------------------------------
method saveSellerFilter(jBody as json, nOperation as integer, cUUID as character) class SellerFiltersService
	Local oData := ::getData()	
	oData:saveSellerFilter(jBody, nOperation, cUUID)
return nil
