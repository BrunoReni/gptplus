#include "tlpp-core.th"
#include "tlpp-object.th"
#include "tgv.baseresources.salesmanagement.ch"
#include 'fwlibversion.ch'

using namespace tgv.util

#DEFINE INCLUI 3
#DEFINE ALTERA 4
#DEFINE DELETE 5
#DEFINE PROPERTY 1 
#DEFINE FIELD 2

//------------------------------------------------------------------------------
/*/{Protheus.doc} tgvbaseResourcesSalesManagement
	Disponibiliza uma classe base utilizada para auxiliar outras classes que 
	efetuem	as operações de Inclusão, Alteração ou Exclusão atravez do JOB TGVA002B
	ou APIs	do TOTVS Gestão de Vendas.
	@type class
	@version 12.1.33
	@author Danilo Salve / Squad CRM & Faturamento
	@since 09/08/2021
	@see tgvSalesOrders
/*/
//------------------------------------------------------------------------------
Class tgvbaseResourcesSalesManagement
	public data aHeader				as array
	public data aItems				as array
    public data cBranch				as character
	public data cExternalId			as character
	public data cSellerId			as character
    public data nOperation			as numeric
    public data oHashFieldsHeader	as object
    public data oHashFieldsItem		as object
    public data oStatement			as object

    protected data cError as character

    public method new() as object
	public method destroy()
	public method clean()
	public method getErrorMessage() as character
    public method setErrorMessage()
    public method setOperation() as logical

	protected method addMapFields()
	protected method addMapFieldsHeader()
	protected method addMapFieldsItem()
	protected method getSalesId() as Character
	protected method setCustomFields()
EndClass

//------------------------------------------------------------------------------
/*/{Protheus.doc} tgvbaseResourcesSalesManagement::new(cTable as Character, nOperation as Numeric) as Object
	Obtem uma nova instancia da clase tgvbaseResourcesSalesManagement.
	@type method
	@version 12.1.33
	@author Danilo Salve / Squad CRM & Faturamento
	@since 09/08/2021
	@param cTable, character, Alias principal
	@param nOperation, numeric, Informe o número de operação (3 - Inclui, 4 - Altera ou 5 - Exclui)
	@return Object, tgvbaseResourcesSalesManagement
/*/
//------------------------------------------------------------------------------
method new(cTable as Character, nOperation as Numeric) as Object Class tgvbaseResourcesSalesManagement
	::cBranch := FwXFilial( cTable )
    ::nOperation := nOperation
return Self

//------------------------------------------------------------------------------
/*/{Protheus.doc} tgvbaseResourcesSalesManagement::destroy
	Elimina os dados da memoria do objeto tgvbaseResourcesSalesManagement
	@type method
	@version 12.1.33
	@author Danilo Salve / Squad CRM & Faturamento
	@since 09/08/2021
/*/
//------------------------------------------------------------------------------
method destroy() Class tgvbaseResourcesSalesManagement
	::cError := ""
	
	If ::oHashFieldsHeader <> Nil 
		::oHashFieldsHeader:Clean()
		FreeObj(::oHashFieldsHeader)
	Endif

	If ::oHashFieldsItem <> Nil 
		::oHashFieldsItem:Clean()
		FreeObj(::oHashFieldsItem)
	Endif
	
	If !Empty(::aHeader)
		aSize(::aHeader, 0)
		::aHeader := Nil
	Endif

	If !Empty(::aItems)
		aSize(::aItems, 0)
		::aItems := Nil
	Endif

	If ::oStatement <> Nil 
		::oStatement:Destroy()
		FreeObj(::oStatement)
	Endif
return Nil

//------------------------------------------------------------------------------
/*/{Protheus.doc} tgvbaseResourcesSalesManagement::clean
	Efetua a Limpeza dos dados utilizados pelo ExecAuto da rotina.
	@type method
	@version 12.1.33
	@author Danilo Salve / Squad CRM & Faturamento
	@since 09/08/2021
/*/
//------------------------------------------------------------------------------
method clean() Class tgvbaseResourcesSalesManagement
	::aHeader := {}
	::aItems := {}
	::cError := ""
return nil

//------------------------------------------------------------------------------
/*/{Protheus.doc} tgvbaseResourcesSalesManagement::setErrorMessage
	Define uma mensagem de erro.
	@type method
	@version 12.1.33
	@author Danilo Salve / Squad CRM & Faturamento
	@since 09/08/2021
	@param cError, character, Mensagem de erro
	@param lIsForce, logical, Força a atualização do erro
/*/
//------------------------------------------------------------------------------
method setErrorMessage(cError as Character, lIsForce as Logical) Class tgvbaseResourcesSalesManagement
	If Empty(::cError) .or. lIsForce
		::cError := cError
	Else
		::cError += cError
	Endif
return Nil

//------------------------------------------------------------------------------
/*/{Protheus.doc} tgvbaseResourcesSalesManagement::getErrorMessage() as Character
	Obtem a mensagem de erro definada no objeto.
	@type method
	@version 12.1.33
	@author Danilo Salve / Squad CRM & Faturamento
	@since 09/08/2021
	@return character, Mensagem de error
/*/
//------------------------------------------------------------------------------
method getErrorMessage() as Character Class tgvbaseResourcesSalesManagement
return ::cError

//------------------------------------------------------------------------------
/*/{Protheus.doc} tgvbaseResourcesSalesManagement::setOperation(nOperation as Numeric) as Logical
	Define a operação que sera utilizada no commit dos dados.
	@type method
	@version 12.1.33
	@author Danilo Salve / Squad CRM & Faturamento
	@since 09/08/2021
	@param nOperation, numeric, Informe o número de operação (3 - Inclui, 4 - Altera ou 5 - Exclui)
	@return logical, Caso o tipo informado estiver correto retorna verdadeiro.
/*/
//------------------------------------------------------------------------------
method setOperation(nOperation as Numeric) as Logical Class tgvbaseResourcesSalesManagement
	Local lreturn := .T. as Logical

	If nOperation >= INCLUI .And. nOperation <= DELETE
		::nOperation := nOperation
	Else
		::setErrorMessage( STR0001, .T. ) // 'Tipo de operação invalido'
		lreturn := .F.
	Endif
return lreturn

//------------------------------------------------------------------------------
/*/{Protheus.doc} tgvbaseResourcesSalesManagement::addMapFields
	Adiciona no objeto os HashMaps utilizado para convertar os dados do json.	
	@type method
	@version 12.1.33
	@author Danilo Salve / Squad CRM & Faturamento
	@since 09/08/2021
/*/
//------------------------------------------------------------------------------
method addMapFields() Class tgvbaseResourcesSalesManagement
	If (::oHashFieldsHeader == Nil)
		::addMapFieldsHeader()
	Endif

	If (::oHashFieldsItem == Nil)
		::addMapFieldsItem()
	Endif
return Nil

//------------------------------------------------------------------------------
/*/{Protheus.doc} tgvbaseResourcesSalesManagement::addMapFieldsHeader
	Adiciona no Hashmap de Cabeçalho todos os campos utilizados pelo TOTVS Gestão
	de Vendas.
	@type method
	@version 12.1.33
	@author Danilo Salve / Squad CRM & Faturamento
	@since 09/08/2021
	@see protected
/*/
//------------------------------------------------------------------------------
method addMapFieldsHeader() Class tgvbaseResourcesSalesManagement	
return Nil

//------------------------------------------------------------------------------
/*/{Protheus.doc} tgvbaseResourcesSalesManagement::addMapFieldsItem
	Adiciona no Hashmap de items todos os campos utilizados pelo TOTVS Gestão
	de Vendas.
	@type method
	@version 12.1.33
	@author Danilo Salve / Squad CRM & Faturamento
	@since 09/08/2021
	@see protected
/*/
//------------------------------------------------------------------------------
method addMapFieldsItem() Class tgvbaseResourcesSalesManagement
return Nil

//------------------------------------------------------------------------------
/*/{Protheus.doc} tgvbaseResourcesSalesManagement::getSalesId() as Character
	Obtem o código do vendedor, utilizando o Número Externo do Pedido/Orçamento
	como parametro.
	@type method
	@version 12.1.33
	@author Danilo Salve / Squad CRM & Faturamento
	@since 09/08/2021
	@return character, Código do Vendedor
	@obs O Número externo deve ser informado anteriormente no atributo cExternalId
	do objeto.
	@see protected
/*/
//------------------------------------------------------------------------------
method getSalesId() as Character Class tgvbaseResourcesSalesManagement
	Local aArea		:= FwGetArea() as Array
	Local cAliasQry	:= GetNextAlias() as Character
	Local cSalesId	as Character

	::oStatement:SetString(1, ::cExternalId)
	
	If checkFWExecStat()
		::oStatement:OpenAlias(cAliasQry)
	Else
		MPSysOpenQuery(::oStatement:GetFixQuery(), cAliasQry)
	EndIf

	While (cAliasQry)->(!(EoF()))
		cSalesId := (cAliasQry)->SALESID
		(cAliasQry)->(DbSkip())
	EndDo

	(cAliasQry)->(DbCloseArea())

	FwrestArea( aArea )
	aSize(aArea, 0)
return cSalesId

//------------------------------------------------------------------------------
/*/{Protheus.doc} tgvbaseResourcesSalesManagement::setCustomFields
	Adiciona os campos customizados no Hashmap informado.	
	@type method
	@version 12.1.33
	@author Danilo Salve / Squad CRM & Faturamento
	@since 09/08/2021
	@param cSchema, character, Código do schema
	@param oHashFields, object, Lista de campos (HashMap)
	@see protected
/*/
//------------------------------------------------------------------------------
method setCustomFields(cSchema as Character, oHashFields as Object) Class tgvbaseResourcesSalesManagement
	Local nField		as Integer
	Local aCustomFields as Array

	aCustomFields := loadCustomFieldsBySchema( cSchema )	
	
	For nField := 1 To Len( aCustomFields )
		oHashFields:Set(aCustomFields[nField][PROPERTY], aCustomFields[nField][FIELD])
	Next 

	aSize(aCustomFields, 0)
return Nil

//-------------------------------------------------------------------------------------
/*/{Protheus.doc} checkFWExecStat
	Função utilizada para validar a data da LIB para utilização da classe FWExecStatement
	@type       Function
	@return     lCheckVerLib, lógico, se pode ser utilizado a classe FWExecStatement
	@author     Squad CRM/Faturamento
	@since      13/04/2022
	@version    12.1.33	
/*/
//-------------------------------------------------------------------------------------
Static Function checkFWExecStat()
	Static lCheckVerLib := Nil

	If lCheckVerLib == Nil
		lCheckVerLib := FWLibVersion() >= "20211116"
	EndIf
Return lCheckVerLib
