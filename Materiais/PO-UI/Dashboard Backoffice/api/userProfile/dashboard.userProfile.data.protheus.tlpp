#include 'tlpp-core.th'
#INCLUDE 'FWMVCDEF.CH'
#include 'tlpp-rest.th'

namespace dashboard.userProfile

//------------------------------------------------------------------------------
/*/{Protheus.doc} userProfileData
	classe responsavel por consultar, incluir, alterar ou excluir um perfil de
    usuário
	@type 		class
	@version	12.1.33
	@author		Rafael Mota Previdi / Squad CRM & Faturamento
	@since		23/12/2021
/*/
//------------------------------------------------------------------------------
class userProfileData
    public method new()    as object
    public method get()    as character
	public method input()  as logical
	public method upsert() as logical
endClass

//------------------------------------------------------------------------------
/*/{Protheus.doc} userProfileData::new() as Object
	disponibiliza uma nova intancia da classe de dados Perfil de Usuários.
	@type		method
	@version	12.1.33
	@author		Rafael Mota Previdi / Squad CRM & Faturamento
	@since		22/12/2021
	@return		object, cria uma nova instancia da classe userProfileData
/*/
//------------------------------------------------------------------------------
method new() as Object class userProfileData
Return Self

//------------------------------------------------------------------------------
/*/{Protheus.doc} userProfileData::get() as character
	busca de um perfil de usuário.
	@type		method
	@version	12.1.33
	@author		Rafael Mota Previdi / Squad CRM & Faturamento
	@since		27/12/2021
	@return		character, retorna o conteúdo em string do perfil de usuario 
/*/
//------------------------------------------------------------------------------
method get(	id      as character, ;
			company as character, ;
			branch  as character, ;
			program as character, ; 
			task    as character, ;
			type) as character class userProfileData
	local content as character

	if FindProfDef(id, program, task, type , , ,company, branch)
    	content := RetProfDef(id, program, task, type , ' ', .F., company, branch)
	endIf
return content

/*/{Protheus.doc} userProfileData:input()
    Registra um novo perfil de usuario 
	@type		method
	@version	12.1.33
	@author		Rafael Mota Previdi / Squad CRM & Faturamento
	@since		22/12/2021
	@return		object, cria uma nova instancia da classe userProfileData
/*/
method input(   company      as character, ;
                branch       as character, ;
                id           as character, ;
                program      as character, ;
                task         as character, ;
                type         as character, ;
                userProfile  as character) as logical class userProfileData

    local lWrite as logical
    lWrite := WriteNewProf(id, program, task, type, userProfile, , company, branch)
Return lWrite

/*/{Protheus.doc} userProfileData:upsert()
    Altera um perfil de usuario ja existente
	@type		method
	@version	12.1.33
	@author		Rafael Mota Previdi / Squad CRM & Faturamento
	@since		22/12/2021
	@return		object, cria uma nova instancia da classe userProfileData
/*/
method upsert(	company      as character, ;
                branch       as character, ;
                id           as character, ;
                program      as character, ;
                task         as character, ;
                type         as character, ;
                userProfile  as character) as logical class userProfileData

    Local lWrite as logical
    lWrite := WriteProfDef(id, program, task, type, id, program, task, type, userProfile, , company, branch )
Return lWrite
