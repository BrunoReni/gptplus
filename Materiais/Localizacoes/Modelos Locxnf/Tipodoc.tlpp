#include "tlpp-object.th"

/*/{Protheus.doc} TipoDoc
Clase responsable por la definición de la ejecución de validaciones y procesos x documento.
Los metodos deben de regresar un .T. cuando se cumpla la condición para realizar una validación.
La definición debe realizarse por medio del documento o recibiendo algún valor en los metodos, usar lo menos posible cFunname.

@type 		Class
@author 	raul.medina
@version	12.1.2210 / Superior
@since		04/2023
/*/
Class TipoDoc
    public data cTipoDoc    As character

    public Method New() constructor
    public Method setTipoDoc()
    public Method IsImportacion()
    public Method ValidConditionPayment()
    public Method ValidNature()
    public Method ValidFinancialTitle()
    public Method ValidMultiNatureSE1()
    public Method ValidMultiNatureSE2()
    public Method ValidDecimals()
    public Method ValidArred()
    Public Method NoValidTotalZero()
    Public Method ValidItemNumberDoc()
    Public Method UpdateNumberDoc()
    Public Method ValidCustomerExist()
    Public Method ValidNFRequired()
    Public Method ValidStockReturns()
    Public Method Valid3rdPartyShipment()
    Public Method ValidLiquidProdStock()
    Public Method ValidReturns()
    Public Method ValidRemReturn()
    Public Method ReturnSupplier()
    Public Method ValidBalanceStock()
    Public Method ValidVerLoca()
    Public Method ValidSymbolicReturn()
    Public Method ValidStockRemIn()
    Public Method ValidQuantRemIn()
    Public Method ValidTESPcNf()
    Public Method NfVsRemPC()
    Public Method ValidTolerance()
    Public Method ValidDepositGruop()

EndClass

/*/{Protheus.doc} New
Metodo responsable de la contrucción de la clase.

@type 		Method
@author 	raul.medina
@version	12.1.2210 / Superior
@since		04/2023
/*/
Method New() Class TipoDoc
    
    self:cTipoDoc := ""

Return Self

/*/{Protheus.doc} SetTipoDoc
Metodo responsable de la asignación del número de documento a la propiedad cTipoDoc, 
la cual será utilizada para realizar las comparaciones necesarias.

@type 		Method
@author 	raul.medina
@version	12.1.2210 / Superior
@since		04/2023
@params     cTipoDoc - caracter -  numero de documento
/*/
Method SetTipoDoc(cTipoDoc As character) Class TipoDoc

Default cTipoDoc := ""

    self:cTipoDoc := cTipoDoc

Return

/*/{Protheus.doc} IsImportacion
Metodo responsable identificar cuando un documento es de importación.
De momento la forma de saber que es una importación es por medio del funname de la rutina MATA143.

@type 		Method
@Return     lRet     ,logico    ,Retorno de las validaciones.
@author 	raul.medina
@version	12.1.2210 / Superior
@since		04/2023
/*/
Method IsImportacion() Class TipoDoc
Local lRet := .F.
Local aImport   := {"MATA143"}
Local cFunname  := FunName()

    lRet := FindString(cFunname, aImport)

Return lRet

/*/{Protheus.doc} ValidConditionPayment
Metodo responsable identificar cuando un documento debe de tener informada
una condición de pago.

@type 		Method
@Return     lRet     ,logico    ,Retorno de las validaciones.
@author 	raul.medina
@version	12.1.2210 / Superior
@since		04/2023
/*/
Method ValidConditionPayment() Class TipoDoc
Local lRet      := .F.
Local aDocuments:= {"01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "17", "19", "20", "21", "22", "23"}

    lRet := FindString(self:cTipoDoc, aDocuments)

Return lRet

/*/{Protheus.doc} ValidNature
Metodo responsable identificar cuando un documento debe de tener informada
una naturaleza 

@type 		Method
@Return     lRet     ,logico    ,Retorno de las validaciones.
@author 	raul.medina
@version	12.1.2210 / Superior
@since		04/2023
/*/
Method ValidNature() Class TipoDoc
Local lRet          := .F.
Local lNfeNat       := SuperGetMv("MV_NFENAT", .F., .F.)
Local aDocuments    := {"08", "09", "10", "12", "20", "23", "60", "62", "63", "64"}

    lRet := lNfeNat .and. FindString(self:cTipoDoc, aDocuments)

Return lRet

/*/{Protheus.doc} ValidFinancialTitle
Metodo responsable identificar cuando un documento de validar un titulo financiero
una condición de pago.

@type 		Method
@Return     lRet     ,logico    ,Retorno de las validaciones.
@author 	raul.medina
@version	12.1.2210 / Superior
@since		04/2023
/*/
Method ValidFinancialTitle(cPais as character) Class TipoDoc
Local lRet      := .F.
Local aDocuments:= {"01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "17", "19", "20", "21", "22", "23"}

Default cPais := ""

    lRet := !FindString(cPais, {"BOL","CHI","URU","PAR"})  .and. FindString(self:cTipoDoc, aDocuments)

Return lRet

/*/{Protheus.doc} ValidMultiNatureSE1
Metodo responsable de validar la multinaturaleza para documentos financieros de SE1

@type 		Method
@Return     lRet     ,logico    ,Retorno de las validaciones.
@author 	raul.medina
@version	12.1.2210 / Superior
@since		04/2023
/*/
Method ValidMultiNatureSE1() Class TipoDoc
Local lRet          := .F.
Local lMulNatr      := SuperGetMv("MV_MULNATR", .F., .F.)
Local aDocuments    := {"01", "02", "03", "04", "05", "17", "19", "21"}

    lRet := lMulNatr .and. FindString(self:cTipoDoc, aDocuments)

Return lRet

/*/{Protheus.doc} ValidNature
Metodo responsable de validar la multinaturaleza para documentos financieros de SE2

@type 		Method
@Return     lRet     ,logico    ,Retorno de las validaciones.
@author 	raul.medina
@version	12.1.2210 / Superior
@since		04/2023
/*/
Method ValidMultiNatureSE2() Class TipoDoc
Local lRet          := .F.
Local lMulNatP      := SuperGetMv("MV_MULNATP", .F., .F.)
Local aDocuments    := {"06", "07", "08", "09", "10", "20", "22", "23"}

    lRet := lMulNatP .and. FindString(self:cTipoDoc, aDocuments)

Return lRet

/*/{Protheus.doc} ValidDecimals
Metodo responsable de validar la multinaturaleza para documentos financieros de SE2

@type 		Method
@Return     lRet     ,logico    ,Retorno de las validaciones.
@author 	raul.medina
@version	12.1.2210 / Superior
@since		04/2023
@parametros cPais -  caracter - indica el país para el cual se realiza el proceso,
                                una vez que se tengan los eventos localizados será retirado el uso del país.
/*/
Method ValidDecimals(cPais as character) Class TipoDoc
Local lRet          := .F.

    If !FindString(cPais, {"ARG"}) .and. !(FindString(cPais, {"PAR"}) .and. self:IsImportacion())
        lRet := .T.
    EndIf

Return lRet

/*/{Protheus.doc} ValidArred
Metodo responsable de verificar si debe realizar el redondeo de decimales por medio de la función 
@type 		Method
@Return     lRet     ,logico    ,Retorno de las validaciones.
@author 	raul.medina
@version	12.1.2210 / Superior
@since		04/2023
@parametros cPais -  caracter - indica el país para el cual se realiza el proceso,
                                una vez que se tengan los eventos localizados será retirado el uso del país.
/*/
Method ValidArred(cPais as character) Class TipoDoc
Local lRet          := .F.
Local aDocuments    := {"06", "07", "08", "09", "10", "12", "54", "60", "61", "62", "64"}

    lRet := FindString(cPais, {"CHI"}) .and. FindString(self:cTipoDoc, aDocuments)

Return lRet

/*/{Protheus.doc} ValidTotal
Metodo responsable identificar cuando un documento no 

@type 		Method
@Return     lRet     ,logico    ,Retorno de las validaciones.
@author 	raul.medina
@version	12.1.2210 / Superior
@since		04/2023
/*/
Method NoValidTotalZero() Class TipoDoc
Local lRet := .F.
Local aRutina   := {"MATA462AN"}
Local cFunname  := FunName()

    lRet := FindString(cFunname, aRutina)

Return lRet

/*/{Protheus.doc} ValidItemNumberDoc
Metodo responsable identificar cuando un documento no debe realizar la validación de la numeración del encabezado contra los items.

@type 		Method
@Return     lRet     ,logico    ,Retorno de las validaciones.
@author 	raul.medina
@version	12.1.2210 / Superior
@since		04/2023
/*/
Method ValidItemNumberDoc(cPais as character) Class TipoDoc
Local lRet      := .F.

Default cPais   := ""

    lRet := !FindString(cPais, {"PER","COL"}) 

Return lRet

/*/{Protheus.doc} UpdateNumberDoc
Metodo responsable identificar cuando un documento no debe realizar la validación de la numeración del encabezado contra los items.

@type 		Method
@Return     lRet     ,logico    ,Retorno de las validaciones.
@author 	raul.medina
@version	12.1.2210 / Superior
@since		04/2023
/*/
Method UpdateNumberDoc() Class TipoDoc
Local lRet      := .F.
Local aDocuments:= {"01", "02", "04", "06", "08", "11", "17", "19", "21", "50", "51", "52", "54", "61", "63"}

    lRet := FindString(self:cTipoDoc, aDocuments)

Return lRet

/*/{Protheus.doc} ValidCustomerExist
Metodo responsable identificar cuando un documento debe realizar la validación de la existencia del cliente.
Documentos de formulario propio que pertencen a clientes.
@type 		Method
@Return     lRet     ,logico    ,Retorno de las validaciones.
@author 	raul.medina
@version	12.1.2210 / Superior
@since		04/2023
/*/
Method ValidCustomerExist() Class TipoDoc
Local lRet      := .F.
Local aDocuments:= {"01", "02", "04", "17", "19", "21", "50", "51", "63"}

    lRet := FindString(self:cTipoDoc, aDocuments)

Return lRet

/*/{Protheus.doc} ValidNFRequired
Metodo responsable de identificar si los documentos tipo I o P es obligatorio informar una NF.
Documentos de formulario propio que pertencen a clientes.
@type 		Method
@Return     lRet     ,logico    ,Retorno de las validaciones.
@author 	raul.medina
@version	12.1.2210 / Superior
@since		04/2023
/*/
Method ValidNFRequired(cTipo as character) Class TipoDoc
Local lRet      := .F.

Default cTipo   := ""

    lRet := FindString(cTipo, {"P","I"}) 

Return lRet

/*/{Protheus.doc} ValidStockReturns
Metodo responsable de identificar si los documentos validan devolución de stock.
Documentos de formulario propio que pertencen a clientes.
@type 		Method
@Return     lRet     ,logico    ,Retorno de las validaciones.
@author 	raul.medina
@version	12.1.2210 / Superior
@since		05/2023
/*/
Method ValidStockReturns() Class TipoDoc
Local lRet      := .F.
Local aDocuments:= {"04", "05", "06", "07", "22", "51", "53", "61"}

    lRet := FindString(self:cTipoDoc, aDocuments)

Return lRet

/*/{Protheus.doc} Valid3rdPartyShipment
Metodo responsable de verificar si el documento debe validar una TES de envío de terceros.
Documentos de formulario propio que pertencen a clientes.
@type 		Method
@author 	raul.medina
@version	12.1.2210 / Superior
@since		05/2023
/*/
Method Valid3rdPartyShipment(cTipoRem as character) Class TipoDoc
Local lRet      := .F.
Local aDocuments:= {"50"}
Local aShipment := {"A"}

Default cTipoRem    := ""

    lRet := FindString(self:cTipoDoc, aDocuments) .and. FindString(cTipoRem, aShipment)

Return lRet

/*/{Protheus.doc} ValidLiquidProdStock
Verifica si el documento valida el producto neto de stock
@type 		Method
@Return     lRet     ,logico    ,Retorno de las validaciones.
@author 	raul.medina
@version	12.1.2210 / Superior
@since		05/2023
/*/
Method ValidLiquidProdStock() Class TipoDoc
Local lRet      := .F.
Local aDocuments:= {"50", "52"}

    lRet := FindString(self:cTipoDoc, aDocuments)

Return lRet

/*/{Protheus.doc} ValidReturns
Verifica si el documento valida las cantidades de las devoluciones.
@type 		Method
@Return     lRet     ,logico    ,Retorno de las validaciones.
@author 	raul.medina
@version	12.1.2210 / Superior
@since		05/2023
/*/
Method ValidReturns() Class TipoDoc
Local lRet      := .F.
Local aDocuments:= {"04", "05", "06", "07", "22", "51", "53", "61"}

    lRet := FindString(self:cTipoDoc, aDocuments)

Return lRet

/*/{Protheus.doc} ValidRemReturn
Verifica si el documento valida las cantidades de las devoluciones para remitos de devolución.
@type 		Method
@author 	raul.medina
@version	12.1.2210 / Superior
@since		05/2023
@parametros cPais -  caracter - indica el país para el cual se realiza el proceso,
                                una vez que se tengan los eventos localizados será retirado el uso del país.
@Return     lRet     ,logico    ,Retorno de las validaciones.
/*/
Method ValidRemReturn(cPais as character) Class TipoDoc
Local lRet      := .F.
Local aDocuments:= {"07"}

Default cPais   := ""

    lRet := FindString(self:cTipoDoc, aDocuments) .and. !FindString(cPais, {"EQU"}) 

Return lRet

/*/{Protheus.doc} ReturnSupplier
Verifica si el documento valida las cantidades de las devoluciones en documentos de proveedores.
@type 		Method
@Return     lRet     ,logico    ,Retorno de las validaciones.
@author 	raul.medina
@version	12.1.2210 / Superior
@since		05/2023
/*/
Method ReturnSupplier() Class TipoDoc
Local aDocuments:= {"06", "07"}

    lRet := FindString(self:cTipoDoc, aDocuments)

Return lRet

/*/{Protheus.doc} ValidBalanceStock
Verifica si el documento debe de revisar los saldo en stock.
@type 		Method
@author 	raul.medina
@version	12.1.2210 / Superior
@since		05/2023
@parametros cPais -  caracter - indica el país para el cual se realiza el proceso,
                                una vez que se tengan los eventos localizados será retirado el uso del país.
            cRemito -  caracter - codigo de remito
            cTPDCENV -  caracter - tipo de envio.
@Return     lRet     ,logico    ,Retorno de las validaciones.
/*/
Method ValidBalanceStock(cPais as character, cRemito as character, cTPDCENV as character) Class TipoDoc
Local lRet      := .F.
Local aDocRems  := {"50", "51", "52", "53", "54", "60", "61", "62", "63", "64"} //Remitos

Default cPais       := ""
Default cRemito     := ""
Default cTPDCENV    := ""

    If FindString(self:cTipoDoc, aDocRems) .Or. Empty(cRemito) .Or. FindString(cTPDCENV, {"1"}) .Or. FindString(cTPDCENV, {"A"})
        If FindString(cPais, {"ARG"}) .and. FindString(self:cTipoDoc, {"07"}) .and. Empty(cRemito) //Identifica si una NCP posee un Remito vinculado, en caso de haber el sistema no debe realizar la consulta de saldo el stock
            lRet := .T.
        ElseIf (FindString(cPais, {"ARG"}) .and. !FindString(self:cTipoDoc, {"07"})) .or. !FindString(cPais, {"ARG"})
            lRet := .T.
        EndIf
    EndIf

Return lRet

/*/{Protheus.doc} ValidVerLoca
Verifica si el debe de ser realizada la verificación de las localizaciones.
@type 		Method
@author 	raul.medina
@version	12.1.2210 / Superior
@since		05/2023
@parametros cPais -  caracter - indica el país para el cual se realiza el proceso,
                                una vez que se tengan los eventos localizados será retirado el uso del país.
            cServ -  caracter - codigo del servicio.
@Return     lRet     ,logico    ,Retorno de las validaciones.
/*/
Method ValidVerLoca(cPais as character, cServ as character) Class TipoDoc
Local lRet      := .T.
Local lMVINTDL  := SuperGetMV('MV_INTDL') == 'S'

Default cPais   := ""
Default cServ   := ""

    lRet := !(FindString(cPais, {"ARG"}) .and. lMVINTDL .and. !Empty(cServ))

Return lRet

/*/{Protheus.doc} ValidSymbolicReturn
Verifica si debe ser realizada la validación para remitos de retorno simbolico
@type 		Method
@author 	raul.medina
@version	12.1.2210 / Superior
@since		05/2023
@parametros cTipDoc -  caracter - indica el tipo de documento, sólo considera B, beneficiamiento.
@Return     lRet     ,logico    ,Retorno de las validaciones.
/*/
Method ValidSymbolicReturn(cTipDoc As Character) Class TipoDoc
Local lRet      := .T.
Local aDocuments:= {"63"}

Default cTipDoc   := ""

    lRet := FindString(self:cTipoDoc, aDocuments) .and. FindString(cTipDoc, {"B"})

Return lRet

/*/{Protheus.doc} ValidStockRemIn
Verifica si debe ser realizada la validación para facturas de entrada relacionado a remitos de entradas.
@type 		Method
@Return     lRet     ,logico    ,Retorno de las validaciones.
@author 	raul.medina
@version	12.1.2210 / Superior
@since		05/2023
/*/
Method ValidStockRemIn() Class TipoDoc 
Local lRet      := .T.
Local aDocuments:= {"10"}

Default cTipDoc   := ""

    lRet := FindString(self:cTipoDoc, aDocuments)

Return lRet

/*/{Protheus.doc} ValidQuantRemIn
Verifica si debe ser realizada la validación de cantidades disponibles en el remito.
@type 		Method
@author 	raul.medina
@version	12.1.2210 / Superior
@since		05/2023
@parametros cTipDoc -  caracter - indica el tipo de documento, sólo considera N.
@Return     lRet     ,logico    ,Retorno de las validaciones.
/*/
Method ValidQuantRemIn(cTipDoc As Character) Class TipoDoc
Local lRet      := .T.
Local aTipDoc   := {"N"}

Default cTipDoc   := ""

    lRet := FindString(cTipDoc, aTipDoc)

Return lRet

/*/{Protheus.doc} ValidTESPcNf
Verifica si debe ser realizada la validación de relacionamiento con un pedido de compra.
@type 		Method
@author 	raul.medina
@version	12.1.2210 / Superior
@since		05/2023
@parametros cPedido -  caracter - numero del pedido.
@parametros cTes -  caracter - numero de la TES.
@Return     lRet     ,logico    ,Retorno de las validaciones.
/*/
Method ValidTESPcNf(cPedido as Character, cTes as Character) Class TipoDoc
Local lRet      := .T.
Local aDocuments:= {"10", "60"}
Local lPCNFE	:= SuperGetMV( "MV_PCNFE", .F., .F. ) //-- Indica si la NF debe ser ligada a un Pedido.
Local cTesPcNf	:= SuperGetMV("MV_TESPCNF", .F., "") //Tes que no necesita pedido de compra ligado

Default cPedido   := ""
Default cTES      := ""

    lRet := FindString(self:cTipoDoc, aDocuments) .and. lPCNFE .and. Empty(cPedido)
    lRet := lRet .and. (Empty(cTesPcNf) .Or. (!Empty(cTesPcNf) .And. FindString(cTes, {cTesPcNf})))

Return lRet

/*/{Protheus.doc} NfVsRemPC
Metodo responsabe de ejecutar las validaciones de relacionamiento de una factura vs un pedido.
@type 		Method
@param 		cRemito, caracter		, numero del remito.
@param 		cSerRem, caracter		, serie del remito.
@param 		cCliFor, caracter		, codigo del proveedor.
@param 		cLoja,  caracter		, tienda del proveedor.
@param 		cCodProd, caracter		, codigo del producto.
@param 		cItRem, caracter		, item del remito.
@Return     lRet     ,logico    ,Retorno de las validaciones.	
@author 	raul.medina	
@version	12.2.2210 / Superior
@since		05/2023
/*/
Method NfVsRemPC(cRemito, cSerRem, cCliFor, cLoja, cCodProd, cItRem) Class TipoDoc
Local lRet      := .T.
Local aDocuments:= {"10"}

Default cRemito := ""
Default cSerRem := ""
Default cCliFor := ""
Default cLoja   := ""
Default cCodProd:= ""
Default cItRem  := ""

    If FindString(self:cTipoDoc, aDocuments)
        If !Empty(Posicione('SD1', 1, xFilial("SD1") + cRemito + cSerRem + cCliFor + cLoja + cCodProd + cItRem, "D1_PEDIDO") )
            lRet := .F.
        EndIf
    EndIf

Return lRet

/*/{Protheus.doc} NfVsRemPC
Metodo responsabe de ejecutar las validaciones de relacionamiento de una factura vs un pedido.
@type 		Method
@Return     lRet     ,logico    ,Retorno de las validaciones.		
@author 	raul.medina	
@version	12.2.2210 / Superior
@since		05/2023
/*/
Method ValidTolerance() Class TipoDoc 
Local lRet      := .T.
Local cRESTCLA  := SuperGetMV("MV_RESTCLA",.F.,"2") //Restringe Classificacao de NF Bloqueada 1=Sim, 2=Nao (default)

    lRet := FindString(cRESTCLA, {"1"})

Return lRet

/*/{Protheus.doc} ValidDepositGruop
Verifica si debe ser realizada la validación de grupo de depositos
@type 		Method
@Return     lRet     ,logico    ,Retorno de las validaciones.
@author 	raul.medina
@version	12.1.2210 / Superior
@since		06/2023
/*/
Method ValidDepositGruop() Class TipoDoc 
Local lRet      := .T.
Local aDocuments:= {"54"}

    lRet := FindString(self:cTipoDoc, aDocuments)

Return lRet
