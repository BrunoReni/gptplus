#include "tlpp-core.th"
#include "tlpp-rest.th"
#include "acproductcontroller.ch"

using namespace ac.acProduct.service
using namespace ac.branchesList.Serv

class acProduct

    public data jParams   as Object
    public data page      as character
    public data pageSize  as character
    public data cBranch   as Character
    public data cCode     as Character
    public data cData     as character

    public method New()

    @Get("api/acproduct/v1/products")
    public method getAcProduct()

endclass

/*/{Protheus.doc} acProduct:New()
    Metodo responsavel por instanciar e iniciar as variaveis da class acProduct
    @type  Metodo
    @author denise.nogueira
    @since  Ago  13, 2021
    @version 12.1.27
/*/
method new() class acProduct

    ::jParams   := JsonObject():New() 
    ::page      := ''
    ::pageSize  := ''
    ::cBranch   := ''
    ::cCode     := ''
    ::cData     := ''

return Self

/*/{Protheus.doc} acConfigProf:getConfigProfile()
    Metodo responsavel retornar lista de produtos
    @type  Metodo
    @author denise.nogueira
    @since  Ago  13, 2021
    @version 12.1.27
/*/
method getAcProduct() class acProduct

    Local oService              as Object
    Local JsonResponse          as Object
    Local nPage         
    Local nPageSize
    Local aBranch               as Array
    Local aCode                 as Array

    oRest:setKeyHeaderResponse("Content-Type", "application/json")
    ::jParams        := oRest:getQueryRequest()

    ::page          := ::jParams['page']
    ::pageSize      := ::jParams['pageSize']
    ::cBranch       := ::jParams['branch']
    ::cCode         := ::jParams['code']

    if empty(::page)
        nPage := 1
    else
        nPage := val(::page)
    endif

    if empty(::pageSize)
        nPageSize := 12
    else 
        nPageSize := Val(::pageSize) 
    endif

    if Empty(::cBranch) .or. (::cBranch == 'null') 
        aBranch := {{"FILTER", ''}}
    else 
        aBranch := {{"FILTER", ::cBranch}}
    endif

    if Empty(::cCode) .or. (::cCode == 'null') 
        aCode := {{"FILTER", ''}}
    else 
        aCode := {{"FILTER", ::cCode}}
    endif

    oService  := ac.acProduct.service.acProductService():new()
    JsonResponse := oService:getTheQueryResponse(nPage, nPageSize, aBranch, aCode)

    If !Empty(JsonResponse)
        oRest:setResponse(JsonResponse) 
    Else
        ::jParams["message"] := STR0001 // "não foi possivel retornar a listagem de produtos devido a inconsistencia na query"
        ::cData := ::jParams:toJson()
        oRest:setStatusCode(400)
        oRest:setResponse( ::cData )
    End

return
