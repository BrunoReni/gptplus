#include "tlpp-core.th"
#include "tlpp-rest.th"
#include "actabletemporycontroller.ch"

namespace ac.acTableTempory.Controller

class acTableTempory
    
    public method New()

    @Post("api/stock/calculation/v1/dropTableTemp")
    public method dropTableTemp()
endclass


Method new() class acTableTempory

return Self

/*/{Protheus.doc} acClosingCalc:dropTableTemp()
    Metodo responsavel por excluir a tabela temporaria
    @type  Metodo
    @author samuel.macedo
    @since  Março 12, 2021
    @version 12.1.27
/*/

method dropTableTemp() class acTableTempory

    Local oService  as Object
    Local oResponse as Object 
    Local cId       as character
    Local cType     as character
    Local cData     as character
    Local jBody     as Object 
    Local jReturn   as Object 

    jBody := JsonObject():New()  
    jReturn := JsonObject():New()

    oRest:setKeyHeaderResponse("Content-Type", "application/json")
    jBody:fromJson(oRest:GetBodyRequest()) 

    cId := jBody:GetJsonText("id")
    cType := jBody:GetJsonText("type")
    
    If Empty(cId) .or. cId == 'null'
        jReturn["message"] := STR0001 //'Id is required.'
        jReturn["success"] := .F.
        cData := jReturn:toJson()
        oRest:setStatusCode(400)
        oRest:setResponse(cData) 
    ElseIf Empty(cType) .or. cType == 'null'
        jReturn["message"] := STR0002 //'Type is required.'
        jReturn["success"] := .F.
        cData := jReturn:toJson()
        oRest:setStatusCode(400)
        oRest:setResponse(cData) 
    ElseIf !(cType == 'A' .or. cType == 'D')
        jReturn["message"] := STR0003 //'Type not implemented'
        jReturn["success"] := .F.
        cData := jReturn:toJson()
        oRest:setStatusCode(400)
        oRest:setResponse(cData) 
    Else
        oService:= ac.TableTempory.service.acTableTemporyService():new()
        cReturnDrop := oService:dropTableTemp(cId, cType) 

        If Empty(cReturnDrop)
            oResponse := JsonObject():New()
            oResponse["success"] := .T.
            oRest:setResponse(oResponse)  
        Else
            jReturn["message"] := cReturnDrop
            jReturn["success"] := .F.
            cData := jReturn:toJson()
            oRest:setStatusCode(500)
            oRest:setResponse(cData) 
        EndIf
    EndIf

return .t.
