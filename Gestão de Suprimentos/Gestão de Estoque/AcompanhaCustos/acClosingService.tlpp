#include "tlpp-core.th"
#include "tlpp-rest.th"
#include "acclosingcontroller.ch"

namespace ac.acClosing.Service
using namespace  ac.acClosing.Repository
using namespace  ac.acCalc.Repository
using namespace  ac.acBalanceClosing.Repository
using namespace  ac.branchesList.Repository


Class acClosingServ
    public data  oResponse as Object
    public data  oLog      as object
    public data  cMessage  as character
    public method New()
    public method isNotProcLocked()
    public method isAllBranches()
    public method getBranches()
    public method unlockProc()

EndClass



Method new() class acClosingServ    

return Self

/*/{Protheus.doc} preparParamsfil
    Metodo responsavel por adicionar no array as filiais que serão processadas no recalculo
    @type  Metodo
    @author André Maximo 
    @since  Novembro 26,2020
    @version 12.1.27
/*/

Method isNotProcLocked(aFilList) class acClosingServ

return M330331Lk(aFilList, .T.)

/*/{Protheus.doc} preparParamsfil
    Metodo responsavel por adicionar no array as filiais que serão processadas no recalculo
    @type  Metodo
    @author André Maximo 
    @since  Novembro 26,2020
    @version 12.1.27
/*/

Method unlockProc(aFilList) class acClosingServ

return M330331ULk(aFilList, .T.)

/*/{Protheus.doc} preparParamsfil
    Metodo responsavel por adicionar no array as filiais que serão processadas no recalculo
    @type  Metodo
    @author André Maximo 
    @since  Novembro 26,2020
    @version 12.1.27
/*/
Method isAllBranches(aParams) class acClosingServ

Local lRet := .F.

if aParams[20] == 1
   lRet := .T.
endif

return lRet


Method getBranches() class acClosingServ

Local oRepository   as Object
oRepository :=  ac.branchesList.Repository.acBranchesListRep():new()

return oRepository:listBranches330()

