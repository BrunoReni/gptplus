#include "tlpp-core.th"
#include "tlpp-rest.th"
#include 'protheus.ch'
#INCLUDE "TOPCONN.ch"
#INCLUDE "TBICONN.CH"
#INCLUDE "FWEVENTVIEWCONSTS.CH"

namespace ac.acCalc.Repository

Class acCalcRep
    public Method New()
    public Method eventRec330()
    public Method listBranches330()
    public Method logErrorProc()
    public Method version()
EndClass

Method new() class acCalcRep
   
return Self

/*/{Protheus.doc} eventRec330
    Metodo responsavel por iniciar processamento do MATA330 por job
    @type  Metodo
    @author André Maximo 
    @since  Novembro 26,2020
    @version 12.1.27
/*/
Method eventRec330(aListaFil,lCPParte,aParAuto,cId, cIdChild,cCompany,cBranch, cUserNamej, cAcUserId, lExecAuto,cDataBase) Class acCalcRep

local objJourneycEmp :=  acJourneyLog():New()
Local cProcess       := 'MATA330'
Local oError := ErrorBlock({|e| ::logErrorProc(e:Description, e:ErrorStack, objJourneycEmp, aParAuto)})

Private lMsErroAuto     := .F.
Private lAutoErrNoFile  := .T.

IniEnviron(cCompany,cBranch, cProcess,cDataBase)
IniVarEnAc(cAcUserId, cUserNameJ)

objJourneycEmp:cIdParent:= cId 
objJourneycEmp:cIdChild:= cIdChild 

objJourneycEmp:envValid(.T.)
objJourneycEmp:idMovD3X()
objJourneycEmp:setThreadId( Strzero(ThreadID(),15))

LockByName(cProcess + '_' +  cIdChild, .F. , .F.)

objJourneycEmp:insertTable(cId, cIdChild, cProcess, 'SETUP', cUserNamej)
Begin Sequence
    MATA330(.T.,aListaFil,!lCPParte, aParAuto,objJourneycEmp,.T., cUserNamej, lExecAuto)
End Sequence

UnLockByName(cProcess + '_' +  cIdChild, .F., .F.)
ErrorBlock(oError)

return

/*/{Protheus.doc} logErrorProc
    Metodo responsavel por gravar status de erro
    @type  Metodo
    @author pedro.missaglia 
    @since  Marco 01, 2023
    @version 12.1.22.10
/*/
method logErrorProc(errorMessage, errorStack,JourneyLog, aParAuto) class acCalcRep

Local cProcess := 'MATA330'
Default a330ParamZX := aClone(aParAuto)

If Empty(JourneyLog:cProcess)
    JourneyLog:cProcess := cProcess
Endif

JourneyLog:LogProAtu('ERRO', errorMessage, errorMessage + errorStack, cFilAnt, 'ER', a330ParamZX[1], cFilAnt, .T.)
UnLockByName(cProcess + '_' +  JourneyLog:cIdChild, .F., .F.)
userException(errorMessage)

return 

/*/{Protheus.doc} version
    Metodo responsavel por indicar a versao da classe
    @type  Metodo
    @author pedro.missaglia 
    @since  Marco 01, 2023
    @version 12.1.22.10
/*/
method version() class acCalcRep

return 100
