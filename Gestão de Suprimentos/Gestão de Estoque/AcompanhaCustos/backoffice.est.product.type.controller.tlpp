#include "tlpp-core.th"
#include "tlpp-rest.th"

namespace totvs.protheus.backoffice.est.product.type.controller
using namespace totvs.protheus.backoffice.est.product.type.service

/*/{Protheus.doc} ProductTypeController
    Classe responsavel pela consulta de Tipos de Produto
    @type Class
    @author Squad.Entradas
    @since 15/02/2023
    @version 1.0
    /*/
Class ProductTypeController

    public method new()

    @Get("api/stock/process/v1/producttypes")
    public method getProductType()

EndClass

/*/{Protheus.doc} new
    Metodo responsavel por instanciar a classe
    @type Method
    @author Squad.Entradas
    @since 15/02/2023
    @version 1.0
    @return Self, Object, Object Instance
    /*/
Method new() Class ProductTypeController

Return Self

/*/{Protheus.doc} getProductType
    Metodo responsavel pela consulta de Tipos de Produto
    @type Method
    @author Squad.Entradas
    @since 15/02/2023
    @version 1.0
    /*/
Method getProductType() Class ProductTypeController
    local oPrdTypeService := Nil                as object
    local jBodyResponse   := JsonObject():New() as json
    local jParams         := JsonObject():New() as json
    local aUrlFilter      := {}                 as array

    oPrdTypeService := totvs.protheus.backoffice.est.product.type.service.ProductTypeService():new()
    oRest:setKeyHeaderResponse('Content-type','application/json')
    jParams := oRest:getQueryRequest()
    // Filtro query string recebido no padrao oData
    if !empty(jParams["filter"])
        aUrlFilter:= {{"FILTER", jParams["filter"]}}
    else
        aUrlFilter:= {{"FILTER", ""}}
    endif
    jBodyResponse := oPrdTypeService:listProductType(aUrlFilter)
    oRest:setStatusCode(jBodyResponse["statusCode"])
    oRest:setResponse(jBodyResponse["response"])

Return
