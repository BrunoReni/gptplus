#include "tlpp-core.th"
#include "tlpp-rest.th"

namespace ac.acParameters.Controller

using namespace ac.acParameters.service

class acParameters

    public data oResponse as Object
    public data jBody     as Object
    
    public method New()

    @Post("api/stock/proccess/v1/parameters")
    public method getParametersSx6()
endclass

Method new() class acParameters
    ::jBody := JsonObject():New() 
return Self


/*/{Protheus.doc} acParameter:New()
    Metodo responsavel por retornar os parametros de cada filial informada no body
    @type  Metodo
    @author Samuel Macedo 
    @since  Maio 2021
    @version 12.1.27
/*/
Method getParametersSx6() Class acParameters
Local oService  as Object
Local cResponse as character
Local aBranches as Array
Local cMsgValidateParams as character
Local oResponse := JsonObject():New()  

oRest:setKeyHeaderResponse("Content-Type", "application/json")
::jBody:fromJson(oRest:GetBodyRequest()) 
aBranches := ::jBody:GetJSonObject("branches")

oService := ac.acParameters.service.acParametersService():new()

cMsgValidateParams := oService:validateParams(aBranches)

If !Empty(cMsgValidateParams)
    oResponse["message"] := cMsgValidateParams
    cResponse := oResponse:toJson()
    oRest:setStatusCode(400)
    oRest:setResponse(cResponse)
Else 
    oResponse["branches"] := oService:getParameters(aBranches) 
    cResponse := oResponse:toJson()
    oRest:SetResponse(cResponse)
EndIf

return .t.
