#include "tlpp-core.th"
#include "tlpp-rest.th"

namespace totvs.protheus.backoffice.est.product.group.controller
using namespace totvs.protheus.backoffice.est.product.group.service

/*/{Protheus.doc} GroupProductController()
    Classe responsavel por receber as requisicoes de Grupo de Produto
    @type Class
    @author Adriano Vieira
    @since 24/02/2023
    @version 1.0
/*/
Class GroupProductController

    public data oGroupProductService as object
    public data  jBody               as object
    public data  jParams             as object
    public data  cPage               as Character
    public data  cPageSize           as Character
    public data  cFilter             as Character

    public method New()

    @Get("api/stock/proccess/v1/GroupProduct")
    public method getGroupProduct()

EndClass

/*/{Protheus.doc} New()
    Metodo responsavel por instanciar a classe e iniciar variaveis
    @type Method
    @author Adriano Vieira
    @since 24/02/2023
    @version 1.0
/*/
Method New() class GroupProductController

Return Self

/*/{Protheus.doc} getGroupProduct()
    Recebe os dados da requisicao de GET para Efetua a consulta de Grupo de Produtos
    @type  Method
    @author Adriano Vieira
    @since 24/02/2023
    @version 1.0
    //Exemplo POSTMAN - GET:
    http://localhost:1243/rest/api/stock/proccess/v1/GroupProduct?page=1&pageSize=10&filter=codigo eq '0001' and (contains(filial, 'D MG 01') or contains(filial, 'M PR 02 '))
/*/
Method getGroupProduct() Class GroupProductController

    Local jBodyResponse as Object
    Local aFilter       as Array
    Local nPage         as Numeric     
    Local nPageSize     as Numeric
    Local oGroupProductService := totvs.protheus.backoffice.est.product.group.service.GroupProductService():new()

    oRest:setKeyHeaderResponse("Content-Type", "application/json")
    ::jParams        := oRest:getQueryRequest()
    jBodyResponse    := JsonObject():New()

    ::cPage          := ::jParams['page']
    ::cPageSize      := ::jParams['pageSize']
    ::cFilter        := ::jParams['filter']

    if empty(::cPage)
        nPage := 1
    else
        nPage := VAL(::cPage) 
    endif

    if empty(::cPageSize)
        nPageSize := 10
    else 
        nPageSize := Val(::cPageSize) 
    endif

    if Empty(::cFilter) .or. (::cFilter == 'null') 
        aFilter := {{"FILTER", ''}}
    else 
        aFilter := {{"FILTER", ::cFilter}}
    endif

    oRest:setResponse( oGroupProductService:getGroupProduct(nPage, nPageSize, aFilter))

Return
