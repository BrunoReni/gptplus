/* ------------------------------------------------------------------------------------
    Procedure       -     Soma1
    Descricao       - <d> Soma 1 numa string qualquer </d>
    Entrada         - <ri> IN_SOMAR      - String a qual será somado 1
                           IN_SOMALOW    - Considera letras minúsculas </ri>
    Saida           - <ro> OUT_RESULTADO - String somada de 1 </ro>
    Responsavel :     <r> Emerson Rony de Oliveira	</r>
    Data        :     06/05/2013
-------------------------------------------------------------------------------------- */
CREATE PROCEDURE MSSOMA1(
     IN IN_SOMAR VARCHAR(100) , 
     IN IN_SOMALOW CHAR(1) , 
     OUT OUT_RESULTADO VARCHAR(100)) 
BEGIN 
	int len = IN_SOMAR.length();
    String star = "";
    String max = "";
	boolean space = false;
	StringBuilder retval = new StringBuilder("");
    
    while( star.length() < len )
        star = star + "*";    
    while( max.length() < len )
        max = max + "z";

    if( IN_SOMAR.trim().isEmpty() ) {
        while( retval.length() < len-1 )
            retval.append("0");
        retval.append("1");
    }
    else if( IN_SOMAR.equals( star ) )
        retval.replace(0, retval.length(), IN_SOMAR);
    else if( IN_SOMAR.equals( max ) )
        retval.replace(0, retval.length(), star);
    else {
        int pos = IN_SOMAR.length()-1;
        boolean next = true;
        
        retval.replace(0, retval.length(), star);
        
        while( next && pos >= 0 ) {
		
			char currChar = IN_SOMAR.charAt(pos);
            
            if( currChar == ' ' ) {
				retval.setCharAt(pos, ' ');
				space = true;
                next = true;
            }
            else if( currChar < '9' ) {
				retval.setCharAt(pos, (char)(((int)currChar)+1));
                next = false;
            }
            else if( currChar == '9' && pos > 0 ) {
                if( pos > 0 && IN_SOMAR.charAt(pos-1) <= '9' && IN_SOMAR.charAt(pos-1) != ' ' ) {
					retval.setCharAt(pos, '0');
                    next = true;
                }
                else if( IN_SOMAR.charAt(pos-1) == ' ' ) {
					retval.setCharAt(pos, '0');
					retval.setCharAt(pos-1, '1');
					pos = pos - 1;
                    next = false;
                }
                else {
					retval.setCharAt(pos, 'A');
                    next = false;
                }
            }
            else if( currChar == '9' && pos == 0 && space ) {
				retval.replace(0, 1, "10");
				next = false;
            }
            else if( currChar == '9' && pos == 0 && !space ) {
				retval.replace(0, 1, "A");
				next = false;
            }
            else if( currChar > '9' && currChar < 'Z' ) {
				retval.setCharAt(pos, (char)(((int)currChar)+1));
                next = false;
            }
            else if( currChar > 'Z' && currChar < 'z' ) {
				retval.setCharAt(pos, (char)(((int)currChar)+1));
                next = false;
            }
            else if( currChar == 'Z' && IN_SOMALOW.equals("1") ) {
				retval.setCharAt(pos, 'a');
                next = false;
            }
            else if( (currChar == 'Z' || currChar == 'z' ) && space ) {
				retval.setCharAt(pos, '0');
                next = false;                
            }
            else if( currChar == 'Z' || currChar == 'z' ) {
				retval.setCharAt(pos, '0');
                next = true;                
            }
            
            pos = pos - 1;
        }
        
        while( pos >= 0 ) {
			retval.setCharAt(pos, IN_SOMAR.charAt(pos));
            pos = pos - 1;
        }
    }
	OUT_RESULTADO = retval.toString();
END
