----------------------------------------------------------------------------
--    Procedure   -  Soma 1 em uma sequencia caractere qualquer
--    Entrada     -  IN_SOMAR       - String a qual será somado 1
--                   IN_SOMALOW     - Considera letras minúsculas ()
--                   OUT_RESULTADO  - String acrescida em 1
--    Responsavel :  Emerson Rony de Oliveira
--    Data        :  30/11/2016
---------------------------------------------------------------------------- 
CREATE OR REPLACE FUNCTION MSSOMA1
(
 IN_SOMAR VARCHAR( 100 ) , 
 IN_SOMALOW CHAR( 01 ) , 
 OUT OUT_RESULTADO VARCHAR( 254 ) 
) AS $$

DECLARE
  vIAUX INTEGER ;
  vITAMORI INTEGER ;
  vINX INTEGER ;
  vCNEXT CHAR( 01 ) ;
  vCSPACE CHAR( 01 ) ;
  vCREF VARCHAR( 1 ) ;
  vCRESULT VARCHAR( 100 ) ;
  vITAMSTR INTEGER ;

BEGIN
 
vITAMSTR  :=  (LENGTH ( CONCAT ( IN_SOMAR, '#' ) ) - 1 ) ;
vITAMORI  :=  (LENGTH ( CONCAT ( IN_SOMAR, '#' ) ) - 1 ) ;
vIAUX     := 1 ;
vINX      := 1 ;
vCREF     := ' ' ;
vCNEXT    := '0' ;
vCSPACE   := '0' ;
vCRESULT  := ' ' ;

IF LENGTH ( RTRIM ( IN_SOMAR )) = 0  THEN 
   
   SELECT MSSTRZERO (vIAUX , vITAMSTR , OUT_RESULTADO );

ELSE 

   IF IN_SOMAR = REPEAT( '*' , vITAMORI) THEN 
      
      OUT_RESULTADO := IN_SOMAR ;

   ELSE 
   
      WHILE (vITAMSTR  >= vINX ) LOOP
         
         vCREF := SUBSTR ( CONCAT ( IN_SOMAR, '#'), vITAMSTR , 1 );

         IF vCREF = ' '  THEN 
            
            vCRESULT := CONCAT ( ' ', vCRESULT ) ;
            vCNEXT   := '1' ;
            vCSPACE  := '1' ;

         ELSE
     
            IF IN_SOMAR  =  REPEAT( 'Z' , vITAMORI)  THEN 

               vCRESULT := REPEAT( '*' , vITAMORI) ;
               Exit;

            ELSE 

               IF vCREF  < '9'  THEN 
        
                  vCRESULT := CONCAT ( SUBSTR ( IN_SOMAR , 1 ,  (vITAMSTR  - 1 ) ), CHR ( ASCII ( vCREF ) + 1 ), vCRESULT ) ;
                  vCNEXT := '0' ;

               ELSE 

                  IF  (vCREF  = '9'  AND vITAMSTR  > 1 )  THEN 

                     IF  (SUBSTR ( IN_SOMAR , vITAMSTR  - 1 , 1 ) <= '9'  AND SUBSTR ( IN_SOMAR , vITAMSTR  - 1 , 1 ) <> ' ' )  THEN 
                        
                        vCRESULT := CONCAT ( '0', vCRESULT ) ;
                        vCNEXT  := '1' ;

                     ELSE 

                        IF  (SUBSTR ( IN_SOMAR ,  ( vITAMSTR ) , 1 ) = ' ' )  THEN 

                           vCRESULT := CONCAT ( SUBSTR ( IN_SOMAR , 1 ,  (vITAMSTR  - 2 ) ), '10', vCRESULT ) ;
                           vCNEXT := '0' ;

                        ELSE 

                           vCRESULT := CONCAT ( SUBSTR ( IN_SOMAR , 1 ,  (vITAMSTR  - 1 ) ), 'A', vCRESULT ) ;
                           vCNEXT := '0' ;

                        END IF;

                     END IF;

                  ELSE 

                     IF vCREF  = '9'  AND  (vITAMSTR  = 1 )  AND  (vCSPACE  = '1' )  THEN 

                        vCRESULT := CONCAT ( '10', SUBSTR ( vCRESULT , 1 ,  (LENGTH ( CONCAT ( vCRESULT, '#' ) ) - 1 ) ) ) ;
                        vCNEXT := '0' ;

                     ELSE 

                        IF vCREF  = '9'  AND vITAMSTR  = 1  AND vCSPACE  = '0'  THEN 

                           vCRESULT := CONCAT ( 'A', vCRESULT ) ;
                           vCNEXT := '0' ;

                        ELSE 

                           IF vCREF  > '9'  AND vCREF  < 'Z'  THEN 

                              vCRESULT := CONCAT ( SUBSTR ( IN_SOMAR , 1 ,  (vITAMSTR  - 1 ) ), CHR ( (ASCII ( vCREF ) + 1 ) ), vCRESULT ) ;
                              vCNEXT := '0' ;

                           ELSE

                              IF vCREF  > 'Z'  AND vCREF  < 'Z'  THEN 

                                 vCRESULT := CONCAT ( SUBSTR ( IN_SOMAR , 1 ,  (vITAMSTR  - 1 ) ), CHR (  (ASCII ( vCREF ) + 1 ) ), vCRESULT ) ;
                                 vCNEXT := '0' ;

                              ELSE 

                                 IF vCREF  = 'Z'  AND IN_SOMALOW  = '1'  THEN 

                                    vCRESULT := CONCAT ( SUBSTR ( IN_SOMAR , 1 ,  (vITAMSTR  - 1 ) ), 'A', vCRESULT ) ;
                                    vCNEXT := '0' ;

                                 ELSE 

                                    IF  (vCREF  = 'Z'  OR vCREF  = 'Z' )  AND vCSPACE  = '1'  THEN 

                                       vCRESULT := CONCAT ( SUBSTR ( IN_SOMAR , 1 , vITAMSTR ), '0', SUBSTR ( vCRESULT , 1 ,  (LENGTH ( CONCAT ( vCRESULT, '#' ) ) - 2 ) ) ) ;
                                       vCNEXT := '0' ;

                                    ELSE 

                                       IF vCREF  = 'Z'  OR vCREF  = 'Z'  THEN 

                                          vCRESULT := CONCAT ( '0', vCRESULT ) ;
                                          vCNEXT := '1' ;

                                       END IF;

                                    END IF;

                                 END IF;

                              END IF;

                           END IF;

                        END IF;

                     END IF;

                  END IF;

               END IF;

            END IF;

         END IF;
    
         IF vCNEXT  = '0'  THEN 
            Exit;
         END IF;

         vITAMSTR := vITAMSTR  - 1 ;

      END LOOP;

      OUT_RESULTADO := vCRESULT ;

   END IF;

END IF;

END $$ LANGUAGE 'plpgsql'
