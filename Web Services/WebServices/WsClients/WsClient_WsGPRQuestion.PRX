#INCLUDE "PROTHEUS.CH"
#INCLUDE "APWEBSRV.CH"

/* ===============================================================================
WSDL Location    http://localhost/ws/GPRQUESTION.apw?WSDL
Gerado em        03/14/05 20:22:56
Observações      Código-Fonte gerado por ADVPL WSDL Client 1.041104
                 Alterações neste arquivo podem causar funcionamento incorreto
                 e serão perdidas caso o código-fonte seja gerado novamente.
=============================================================================== */

/* -------------------------------------------------------------------------------
WSDL Service WSGPRQUESTION
------------------------------------------------------------------------------- */

WSCLIENT WSGPRQUESTION

	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD RESET
	WSMETHOD CLONE
	WSMETHOD BRWQUESTION
	WSMETHOD GETQUESTION

	WSDATA   _URL                      AS String
	WSDATA   cUSERCODE                 AS string
	WSDATA   cQUERYADDWHERE            AS string
	WSDATA   nPAGELEN                  AS integer
	WSDATA   nPAGEFIRST                AS integer
	WSDATA   cINDEXKEY                 AS string
	WSDATA   oWSBRWQUESTIONRESULT      AS GPRQUESTION_ARRAYOFQUESTIONVIEW
	WSDATA   cQUESTIONCODE             AS string
	WSDATA   oWSGETQUESTIONRESULT      AS GPRQUESTION_QUESTIONVIEW

ENDWSCLIENT

WSMETHOD NEW WSCLIENT WSGPRQUESTION
::Init()
If !FindFunction("XMLCHILDEX")
	UserException("O Código-Fonte Client atual requer os executáveis do Protheus Build [7.00.050131A] ou superior. Atualize o Protheus ou gere o Código-Fonte novamente utilizando o Build atual.")
EndIf
Return Self

WSMETHOD INIT WSCLIENT WSGPRQUESTION
	::oWSBRWQUESTIONRESULT := GPRQUESTION_ARRAYOFQUESTIONVIEW():New()
	::oWSGETQUESTIONRESULT := GPRQUESTION_QUESTIONVIEW():New()
Return

WSMETHOD RESET WSCLIENT WSGPRQUESTION
	::cUSERCODE          := NIL 
	::cQUERYADDWHERE     := NIL 
	::nPAGELEN           := NIL 
	::nPAGEFIRST         := NIL 
	::cINDEXKEY          := NIL 
	::oWSBRWQUESTIONRESULT := NIL 
	::cQUESTIONCODE      := NIL 
	::oWSGETQUESTIONRESULT := NIL 
	::Init()
Return

WSMETHOD CLONE WSCLIENT WSGPRQUESTION
Local oClone := WSGPRQUESTION():New()
	oClone:_URL          := ::_URL 
	oClone:cUSERCODE     := ::cUSERCODE
	oClone:cQUERYADDWHERE := ::cQUERYADDWHERE
	oClone:nPAGELEN      := ::nPAGELEN
	oClone:nPAGEFIRST    := ::nPAGEFIRST
	oClone:cINDEXKEY     := ::cINDEXKEY
	oClone:oWSBRWQUESTIONRESULT :=  IIF(::oWSBRWQUESTIONRESULT = NIL , NIL ,::oWSBRWQUESTIONRESULT:Clone() )
	oClone:cQUESTIONCODE := ::cQUESTIONCODE
	oClone:oWSGETQUESTIONRESULT :=  IIF(::oWSGETQUESTIONRESULT = NIL , NIL ,::oWSGETQUESTIONRESULT:Clone() )
Return oClone

/* -------------------------------------------------------------------------------
WSDL Method BRWQUESTION of Service WSGPRQUESTION
------------------------------------------------------------------------------- */

WSMETHOD BRWQUESTION WSSEND cUSERCODE,cQUERYADDWHERE,nPAGELEN,nPAGEFIRST,cINDEXKEY WSRECEIVE oWSBRWQUESTIONRESULT WSCLIENT WSGPRQUESTION
Local cSoap := "" , oXmlRet

BEGIN WSMETHOD

cSoap += '<BRWQUESTION xmlns="http://localhost/ws/">'
cSoap += WSSoapValue("USERCODE", ::cUSERCODE, cUSERCODE , "string", .T. , .F., 0 ) 
cSoap += WSSoapValue("QUERYADDWHERE", ::cQUERYADDWHERE, cQUERYADDWHERE , "string", .F. , .F., 0 ) 
cSoap += WSSoapValue("PAGELEN", ::nPAGELEN, nPAGELEN , "integer", .F. , .F., 0 ) 
cSoap += WSSoapValue("PAGEFIRST", ::nPAGEFIRST, nPAGEFIRST , "integer", .F. , .F., 0 ) 
cSoap += WSSoapValue("INDEXKEY", ::cINDEXKEY, cINDEXKEY , "string", .F. , .F., 0 ) 
cSoap += "</BRWQUESTION>"

oXmlRet := SvcSoapCall(	Self,cSoap,; 
	"http://localhost/ws/BRWQUESTION",; 
	"DOCUMENT","http://localhost/ws/",,"1.031217",; 
	"http://localhost/ws/GPRQUESTION.apw")

::Init()
::oWSBRWQUESTIONRESULT:SoapRecv( WSAdvValue( oXmlRet,"_BRWQUESTIONRESPONSE:_BRWQUESTIONRESULT","ARRAYOFQUESTIONVIEW",NIL,NIL,NIL,NIL,NIL) )

END WSMETHOD

oXmlRet := NIL
Return .T.

/* -------------------------------------------------------------------------------
WSDL Method GETQUESTION of Service WSGPRQUESTION
------------------------------------------------------------------------------- */

WSMETHOD GETQUESTION WSSEND cUSERCODE,cQUESTIONCODE,cQUERYADDWHERE WSRECEIVE oWSGETQUESTIONRESULT WSCLIENT WSGPRQUESTION
Local cSoap := "" , oXmlRet

BEGIN WSMETHOD

cSoap += '<GETQUESTION xmlns="http://localhost/ws/">'
cSoap += WSSoapValue("USERCODE", ::cUSERCODE, cUSERCODE , "string", .T. , .F., 0 ) 
cSoap += WSSoapValue("QUESTIONCODE", ::cQUESTIONCODE, cQUESTIONCODE , "string", .T. , .F., 0 ) 
cSoap += WSSoapValue("QUERYADDWHERE", ::cQUERYADDWHERE, cQUERYADDWHERE , "string", .F. , .F., 0 ) 
cSoap += "</GETQUESTION>"

oXmlRet := SvcSoapCall(	Self,cSoap,; 
	"http://localhost/ws/GETQUESTION",; 
	"DOCUMENT","http://localhost/ws/",,"1.031217",; 
	"http://localhost/ws/GPRQUESTION.apw")

::Init()
::oWSGETQUESTIONRESULT:SoapRecv( WSAdvValue( oXmlRet,"_GETQUESTIONRESPONSE:_GETQUESTIONRESULT","QUESTIONVIEW",NIL,NIL,NIL,NIL,NIL) )

END WSMETHOD

oXmlRet := NIL
Return .T.


/* -------------------------------------------------------------------------------
WSDL Data Structure ARRAYOFQUESTIONVIEW
------------------------------------------------------------------------------- */

WSSTRUCT GPRQUESTION_ARRAYOFQUESTIONVIEW
	WSDATA   oWSQUESTIONVIEW           AS GPRQUESTION_QUESTIONVIEW OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT GPRQUESTION_ARRAYOFQUESTIONVIEW
	::Init()
Return Self

WSMETHOD INIT WSCLIENT GPRQUESTION_ARRAYOFQUESTIONVIEW
	::oWSQUESTIONVIEW      := {} // Array Of  GPRQUESTION_QUESTIONVIEW():New()
Return

WSMETHOD CLONE WSCLIENT GPRQUESTION_ARRAYOFQUESTIONVIEW
	Local oClone := GPRQUESTION_ARRAYOFQUESTIONVIEW():NEW()
	oClone:oWSQUESTIONVIEW := NIL
	If ::oWSQUESTIONVIEW <> NIL 
		oClone:oWSQUESTIONVIEW := {}
		aEval( ::oWSQUESTIONVIEW , { |x| aadd( oClone:oWSQUESTIONVIEW , x:Clone() ) } )
	Endif 
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT GPRQUESTION_ARRAYOFQUESTIONVIEW
	Local nRElem1, oNodes1, nTElem1
	::Init()
	If oResponse = NIL ; Return ; Endif 
	oNodes1 :=  WSAdvValue( oResponse,"_QUESTIONVIEW","QUESTIONVIEW",{},NIL,.T.,"O",NIL) 
	nTElem1 := len(oNodes1)
	For nRElem1 := 1 to nTElem1 
		If !WSIsNilNode( oNodes1[nRElem1] )
			aadd(::oWSQUESTIONVIEW , GPRQUESTION_QUESTIONVIEW():New() )
			::oWSQUESTIONVIEW[len(::oWSQUESTIONVIEW)]:SoapRecv(oNodes1[nRElem1])
		Endif
	Next
Return

/* -------------------------------------------------------------------------------
WSDL Data Structure QUESTIONVIEW
------------------------------------------------------------------------------- */

WSSTRUCT GPRQUESTION_QUESTIONVIEW
	WSDATA   cCODE                     AS string
	WSDATA   nCOMPLEMENTMAXLENGTH      AS integer OPTIONAL
	WSDATA   cDESCRIPTION              AS string OPTIONAL
	WSDATA   cDESCRIPTIONCODE          AS string OPTIONAL
	WSDATA   cEXHIBITIONTYPE           AS string
	WSDATA   nGRADE                    AS float OPTIONAL
	WSDATA   cGROUPCODE                AS string OPTIONAL
	WSDATA   cGROUPDESCRIPTION         AS string OPTIONAL
	WSDATA   cITEM                     AS string OPTIONAL
	WSDATA   oWSLISTOFALTERNATIVE      AS GPRQUESTION_ARRAYOFALTERNATIVEVIEW OPTIONAL
	WSDATA   oWSLISTOFOPTION           AS GPRQUESTION_ARRAYOFOPTIONVIEW OPTIONAL
	WSDATA   nMAXLENGTH                AS integer OPTIONAL
	WSDATA   cNOTE                     AS string OPTIONAL
	WSDATA   cNUMBER                   AS string OPTIONAL
	WSDATA   cOBJECTIVECODE            AS string OPTIONAL
	WSDATA   cOBJECTIVEDESCRIPTION     AS string OPTIONAL
	WSDATA   cOBLIGATION               AS string OPTIONAL
	WSDATA   cREPEAT                   AS string OPTIONAL
	WSDATA   cRESUME                   AS string OPTIONAL
	WSDATA   cRULE                     AS string OPTIONAL
	WSDATA   nSELECTIONLIMIT           AS integer OPTIONAL
	WSDATA   cSUBGROUPCODE             AS string OPTIONAL
	WSDATA   cSUBGROUPDESCRIPTION      AS string OPTIONAL
	WSDATA   cTYPE                     AS string
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT GPRQUESTION_QUESTIONVIEW
	::Init()
Return Self

WSMETHOD INIT WSCLIENT GPRQUESTION_QUESTIONVIEW
Return

WSMETHOD CLONE WSCLIENT GPRQUESTION_QUESTIONVIEW
	Local oClone := GPRQUESTION_QUESTIONVIEW():NEW()
	oClone:cCODE                := ::cCODE
	oClone:nCOMPLEMENTMAXLENGTH := ::nCOMPLEMENTMAXLENGTH
	oClone:cDESCRIPTION         := ::cDESCRIPTION
	oClone:cDESCRIPTIONCODE     := ::cDESCRIPTIONCODE
	oClone:cEXHIBITIONTYPE      := ::cEXHIBITIONTYPE
	oClone:nGRADE               := ::nGRADE
	oClone:cGROUPCODE           := ::cGROUPCODE
	oClone:cGROUPDESCRIPTION    := ::cGROUPDESCRIPTION
	oClone:cITEM                := ::cITEM
	oClone:oWSLISTOFALTERNATIVE := IIF(::oWSLISTOFALTERNATIVE = NIL , NIL , ::oWSLISTOFALTERNATIVE:Clone() )
	oClone:oWSLISTOFOPTION      := IIF(::oWSLISTOFOPTION = NIL , NIL , ::oWSLISTOFOPTION:Clone() )
	oClone:nMAXLENGTH           := ::nMAXLENGTH
	oClone:cNOTE                := ::cNOTE
	oClone:cNUMBER              := ::cNUMBER
	oClone:cOBJECTIVECODE       := ::cOBJECTIVECODE
	oClone:cOBJECTIVEDESCRIPTION := ::cOBJECTIVEDESCRIPTION
	oClone:cOBLIGATION          := ::cOBLIGATION
	oClone:cREPEAT              := ::cREPEAT
	oClone:cRESUME              := ::cRESUME
	oClone:cRULE                := ::cRULE
	oClone:nSELECTIONLIMIT      := ::nSELECTIONLIMIT
	oClone:cSUBGROUPCODE        := ::cSUBGROUPCODE
	oClone:cSUBGROUPDESCRIPTION := ::cSUBGROUPDESCRIPTION
	oClone:cTYPE                := ::cTYPE
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT GPRQUESTION_QUESTIONVIEW
	Local oNode10
	Local oNode11
	::Init()
	If oResponse = NIL ; Return ; Endif 
	::cCODE              :=  WSAdvValue( oResponse,"_CODE","string",NIL,"Property cCODE as s:string on SOAP Response not found.",NIL,"S",NIL) 
	::nCOMPLEMENTMAXLENGTH :=  WSAdvValue( oResponse,"_COMPLEMENTMAXLENGTH","integer",NIL,NIL,NIL,"N",NIL) 
	::cDESCRIPTION       :=  WSAdvValue( oResponse,"_DESCRIPTION","string",NIL,NIL,NIL,"S",NIL) 
	::cDESCRIPTIONCODE   :=  WSAdvValue( oResponse,"_DESCRIPTIONCODE","string",NIL,NIL,NIL,"S",NIL) 
	::cEXHIBITIONTYPE    :=  WSAdvValue( oResponse,"_EXHIBITIONTYPE","string",NIL,"Property cEXHIBITIONTYPE as s:string on SOAP Response not found.",NIL,"S",NIL) 
	::nGRADE             :=  WSAdvValue( oResponse,"_GRADE","float",NIL,NIL,NIL,"N",NIL) 
	::cGROUPCODE         :=  WSAdvValue( oResponse,"_GROUPCODE","string",NIL,NIL,NIL,"S",NIL) 
	::cGROUPDESCRIPTION  :=  WSAdvValue( oResponse,"_GROUPDESCRIPTION","string",NIL,NIL,NIL,"S",NIL) 
	::cITEM              :=  WSAdvValue( oResponse,"_ITEM","string",NIL,NIL,NIL,"S",NIL) 
	oNode10 :=  WSAdvValue( oResponse,"_LISTOFALTERNATIVE","ARRAYOFALTERNATIVEVIEW",NIL,NIL,NIL,"O",NIL) 
	If oNode10 != NIL
		::oWSLISTOFALTERNATIVE := GPRQUESTION_ARRAYOFALTERNATIVEVIEW():New()
		::oWSLISTOFALTERNATIVE:SoapRecv(oNode10)
	EndIf
	oNode11 :=  WSAdvValue( oResponse,"_LISTOFOPTION","ARRAYOFOPTIONVIEW",NIL,NIL,NIL,"O",NIL) 
	If oNode11 != NIL
		::oWSLISTOFOPTION := GPRQUESTION_ARRAYOFOPTIONVIEW():New()
		::oWSLISTOFOPTION:SoapRecv(oNode11)
	EndIf
	::nMAXLENGTH         :=  WSAdvValue( oResponse,"_MAXLENGTH","integer",NIL,NIL,NIL,"N",NIL) 
	::cNOTE              :=  WSAdvValue( oResponse,"_NOTE","string",NIL,NIL,NIL,"S",NIL) 
	::cNUMBER            :=  WSAdvValue( oResponse,"_NUMBER","string",NIL,NIL,NIL,"S",NIL) 
	::cOBJECTIVECODE     :=  WSAdvValue( oResponse,"_OBJECTIVECODE","string",NIL,NIL,NIL,"S",NIL) 
	::cOBJECTIVEDESCRIPTION :=  WSAdvValue( oResponse,"_OBJECTIVEDESCRIPTION","string",NIL,NIL,NIL,"S",NIL) 
	::cOBLIGATION        :=  WSAdvValue( oResponse,"_OBLIGATION","string",NIL,NIL,NIL,"S",NIL) 
	::cREPEAT            :=  WSAdvValue( oResponse,"_REPEAT","string",NIL,NIL,NIL,"S",NIL) 
	::cRESUME            :=  WSAdvValue( oResponse,"_RESUME","string",NIL,NIL,NIL,"S",NIL) 
	::cRULE              :=  WSAdvValue( oResponse,"_RULE","string",NIL,NIL,NIL,"S",NIL) 
	::nSELECTIONLIMIT    :=  WSAdvValue( oResponse,"_SELECTIONLIMIT","integer",NIL,NIL,NIL,"N",NIL) 
	::cSUBGROUPCODE      :=  WSAdvValue( oResponse,"_SUBGROUPCODE","string",NIL,NIL,NIL,"S",NIL) 
	::cSUBGROUPDESCRIPTION :=  WSAdvValue( oResponse,"_SUBGROUPDESCRIPTION","string",NIL,NIL,NIL,"S",NIL) 
	::cTYPE              :=  WSAdvValue( oResponse,"_TYPE","string",NIL,"Property cTYPE as s:string on SOAP Response not found.",NIL,"S",NIL) 
Return

/* -------------------------------------------------------------------------------
WSDL Data Structure ARRAYOFALTERNATIVEVIEW
------------------------------------------------------------------------------- */

WSSTRUCT GPRQUESTION_ARRAYOFALTERNATIVEVIEW
	WSDATA   oWSALTERNATIVEVIEW        AS GPRQUESTION_ALTERNATIVEVIEW OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT GPRQUESTION_ARRAYOFALTERNATIVEVIEW
	::Init()
Return Self

WSMETHOD INIT WSCLIENT GPRQUESTION_ARRAYOFALTERNATIVEVIEW
	::oWSALTERNATIVEVIEW   := {} // Array Of  GPRQUESTION_ALTERNATIVEVIEW():New()
Return

WSMETHOD CLONE WSCLIENT GPRQUESTION_ARRAYOFALTERNATIVEVIEW
	Local oClone := GPRQUESTION_ARRAYOFALTERNATIVEVIEW():NEW()
	oClone:oWSALTERNATIVEVIEW := NIL
	If ::oWSALTERNATIVEVIEW <> NIL 
		oClone:oWSALTERNATIVEVIEW := {}
		aEval( ::oWSALTERNATIVEVIEW , { |x| aadd( oClone:oWSALTERNATIVEVIEW , x:Clone() ) } )
	Endif 
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT GPRQUESTION_ARRAYOFALTERNATIVEVIEW
	Local nRElem1, oNodes1, nTElem1
	::Init()
	If oResponse = NIL ; Return ; Endif 
	oNodes1 :=  WSAdvValue( oResponse,"_ALTERNATIVEVIEW","ALTERNATIVEVIEW",{},NIL,.T.,"O",NIL) 
	nTElem1 := len(oNodes1)
	For nRElem1 := 1 to nTElem1 
		If !WSIsNilNode( oNodes1[nRElem1] )
			aadd(::oWSALTERNATIVEVIEW , GPRQUESTION_ALTERNATIVEVIEW():New() )
			::oWSALTERNATIVEVIEW[len(::oWSALTERNATIVEVIEW)]:SoapRecv(oNodes1[nRElem1])
		Endif
	Next
Return

/* -------------------------------------------------------------------------------
WSDL Data Structure ARRAYOFOPTIONVIEW
------------------------------------------------------------------------------- */

WSSTRUCT GPRQUESTION_ARRAYOFOPTIONVIEW
	WSDATA   oWSOPTIONVIEW             AS GPRQUESTION_OPTIONVIEW OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT GPRQUESTION_ARRAYOFOPTIONVIEW
	::Init()
Return Self

WSMETHOD INIT WSCLIENT GPRQUESTION_ARRAYOFOPTIONVIEW
	::oWSOPTIONVIEW        := {} // Array Of  GPRQUESTION_OPTIONVIEW():New()
Return

WSMETHOD CLONE WSCLIENT GPRQUESTION_ARRAYOFOPTIONVIEW
	Local oClone := GPRQUESTION_ARRAYOFOPTIONVIEW():NEW()
	oClone:oWSOPTIONVIEW := NIL
	If ::oWSOPTIONVIEW <> NIL 
		oClone:oWSOPTIONVIEW := {}
		aEval( ::oWSOPTIONVIEW , { |x| aadd( oClone:oWSOPTIONVIEW , x:Clone() ) } )
	Endif 
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT GPRQUESTION_ARRAYOFOPTIONVIEW
	Local nRElem1, oNodes1, nTElem1
	::Init()
	If oResponse = NIL ; Return ; Endif 
	oNodes1 :=  WSAdvValue( oResponse,"_OPTIONVIEW","OPTIONVIEW",{},NIL,.T.,"O",NIL) 
	nTElem1 := len(oNodes1)
	For nRElem1 := 1 to nTElem1 
		If !WSIsNilNode( oNodes1[nRElem1] )
			aadd(::oWSOPTIONVIEW , GPRQUESTION_OPTIONVIEW():New() )
			::oWSOPTIONVIEW[len(::oWSOPTIONVIEW)]:SoapRecv(oNodes1[nRElem1])
		Endif
	Next
Return

/* -------------------------------------------------------------------------------
WSDL Data Structure ALTERNATIVEVIEW
------------------------------------------------------------------------------- */

WSSTRUCT GPRQUESTION_ALTERNATIVEVIEW
	WSDATA   cCODE                     AS string
	WSDATA   cCOMPLEMENT               AS string OPTIONAL
	WSDATA   cDESCRIPTION              AS string OPTIONAL
	WSDATA   nGRADE                    AS float OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT GPRQUESTION_ALTERNATIVEVIEW
	::Init()
Return Self

WSMETHOD INIT WSCLIENT GPRQUESTION_ALTERNATIVEVIEW
Return

WSMETHOD CLONE WSCLIENT GPRQUESTION_ALTERNATIVEVIEW
	Local oClone := GPRQUESTION_ALTERNATIVEVIEW():NEW()
	oClone:cCODE                := ::cCODE
	oClone:cCOMPLEMENT          := ::cCOMPLEMENT
	oClone:cDESCRIPTION         := ::cDESCRIPTION
	oClone:nGRADE               := ::nGRADE
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT GPRQUESTION_ALTERNATIVEVIEW
	::Init()
	If oResponse = NIL ; Return ; Endif 
	::cCODE              :=  WSAdvValue( oResponse,"_CODE","string",NIL,"Property cCODE as s:string on SOAP Response not found.",NIL,"S",NIL) 
	::cCOMPLEMENT        :=  WSAdvValue( oResponse,"_COMPLEMENT","string",NIL,NIL,NIL,"S",NIL) 
	::cDESCRIPTION       :=  WSAdvValue( oResponse,"_DESCRIPTION","string",NIL,NIL,NIL,"S",NIL) 
	::nGRADE             :=  WSAdvValue( oResponse,"_GRADE","float",NIL,NIL,NIL,"N",NIL) 
Return

/* -------------------------------------------------------------------------------
WSDL Data Structure OPTIONVIEW
------------------------------------------------------------------------------- */

WSSTRUCT GPRQUESTION_OPTIONVIEW
	WSDATA   cCODE                     AS string
	WSDATA   cDESCRIPTION              AS string OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT GPRQUESTION_OPTIONVIEW
	::Init()
Return Self

WSMETHOD INIT WSCLIENT GPRQUESTION_OPTIONVIEW
Return

WSMETHOD CLONE WSCLIENT GPRQUESTION_OPTIONVIEW
	Local oClone := GPRQUESTION_OPTIONVIEW():NEW()
	oClone:cCODE                := ::cCODE
	oClone:cDESCRIPTION         := ::cDESCRIPTION
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT GPRQUESTION_OPTIONVIEW
	::Init()
	If oResponse = NIL ; Return ; Endif 
	::cCODE              :=  WSAdvValue( oResponse,"_CODE","string",NIL,"Property cCODE as s:string on SOAP Response not found.",NIL,"S",NIL) 
	::cDESCRIPTION       :=  WSAdvValue( oResponse,"_DESCRIPTION","string",NIL,NIL,NIL,"S",NIL) 
Return


