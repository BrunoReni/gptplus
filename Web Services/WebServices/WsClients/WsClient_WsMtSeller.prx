#INCLUDE "protheus.ch"
#INCLUDE "apwebsrv.ch"

/* ===============================================================================
WSDL Location    http://localhost:8059/ws/MTSELLER.apw?WSDL
Gerado em        12/14/20 11:11:13
Observações      Código-Fonte gerado por ADVPL WSDL Client 1.120703
                 Alterações neste arquivo podem causar funcionamento incorreto
                 e serão perdidas caso o código-fonte seja gerado novamente.
=============================================================================== */

User Function _PTZUJZA ; Return  // "dummy" function - Internal Use 

/* -------------------------------------------------------------------------------
WSDL Service WSMTSELLER
------------------------------------------------------------------------------- */

WSCLIENT WSMTSELLER

	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD RESET
	WSMETHOD CLONE
	WSMETHOD GETCOMMISSION
	WSMETHOD GETHEADER
	WSMETHOD GETLOGIN
	WSMETHOD GETSELLER
	WSMETHOD GETTYPEOFPHONE
	WSMETHOD PUTSELLER

	WSDATA   _URL                      AS String
	WSDATA   _HEADOUT                  AS Array of String
	WSDATA   _COOKIES                  AS Array of String
	WSDATA   cUSERCODE                 AS string
	WSDATA   cSELLERCODE               AS string
	WSDATA   dREGISTERDATEFROM         AS date
	WSDATA   dREGISTERDATETO           AS date
	WSDATA   dRECEIVABLEDATEFROM       AS date
	WSDATA   dRECEIVABLEDATETO         AS date
	WSDATA   cQUERYADDWHERE            AS string
	WSDATA   oWSGETCOMMISSIONRESULT    AS MTSELLER_ARRAYOFCOMMISSIONVIEW
	WSDATA   cHEADERTYPE               AS string
	WSDATA   oWSGETHEADERRESULT        AS MTSELLER_ARRAYOFBRWHEADER
	WSDATA   cSELLERPASSWORD           AS string
	WSDATA   oWSGETLOGINRESULT         AS MTSELLER_ARRAYOFGENERICSTRUCT
	WSDATA   oWSGETSELLERRESULT        AS MTSELLER_SELLERVIEW
	WSDATA   oWSGETTYPEOFPHONERESULT   AS MTSELLER_ARRAYOFGENERICSTRUCT
	WSDATA   oWSSELLER                 AS MTSELLER_SELLERVIEW
	WSDATA   cPUTSELLERRESULT          AS string

	// Estruturas mantidas por compatibilidade - NÃO USAR
	WSDATA   oWSSELLERVIEW             AS MTSELLER_SELLERVIEW

ENDWSCLIENT

WSMETHOD NEW WSCLIENT WSMTSELLER
::Init()
If !FindFunction("XMLCHILDEX")
	UserException("O Código-Fonte Client atual requer os executáveis do Protheus Build [7.00.191205P-20201009] ou superior. Atualize o Protheus ou gere o Código-Fonte novamente utilizando o Build atual.")
EndIf
Return Self

WSMETHOD INIT WSCLIENT WSMTSELLER
	::oWSGETCOMMISSIONRESULT := MTSELLER_ARRAYOFCOMMISSIONVIEW():New()
	::oWSGETHEADERRESULT := MTSELLER_ARRAYOFBRWHEADER():New()
	::oWSGETLOGINRESULT  := MTSELLER_ARRAYOFGENERICSTRUCT():New()
	::oWSGETSELLERRESULT := MTSELLER_SELLERVIEW():New()
	::oWSGETTYPEOFPHONERESULT := MTSELLER_ARRAYOFGENERICSTRUCT():New()
	::oWSSELLER          := MTSELLER_SELLERVIEW():New()

	// Estruturas mantidas por compatibilidade - NÃO USAR
	::oWSSELLERVIEW      := ::oWSSELLER
Return

WSMETHOD RESET WSCLIENT WSMTSELLER
	::cUSERCODE          := NIL 
	::cSELLERCODE        := NIL 
	::dREGISTERDATEFROM  := NIL 
	::dREGISTERDATETO    := NIL 
	::dRECEIVABLEDATEFROM := NIL 
	::dRECEIVABLEDATETO  := NIL 
	::cQUERYADDWHERE     := NIL 
	::oWSGETCOMMISSIONRESULT := NIL 
	::cHEADERTYPE        := NIL 
	::oWSGETHEADERRESULT := NIL 
	::cSELLERPASSWORD    := NIL 
	::oWSGETLOGINRESULT  := NIL 
	::oWSGETSELLERRESULT := NIL 
	::oWSGETTYPEOFPHONERESULT := NIL 
	::oWSSELLER          := NIL 
	::cPUTSELLERRESULT   := NIL 

	// Estruturas mantidas por compatibilidade - NÃO USAR
	::oWSSELLERVIEW      := NIL
	::Init()
Return

WSMETHOD CLONE WSCLIENT WSMTSELLER
Local oClone := WSMTSELLER():New()
	oClone:_URL          := ::_URL 
	oClone:cUSERCODE     := ::cUSERCODE
	oClone:cSELLERCODE   := ::cSELLERCODE
	oClone:dREGISTERDATEFROM := ::dREGISTERDATEFROM
	oClone:dREGISTERDATETO := ::dREGISTERDATETO
	oClone:dRECEIVABLEDATEFROM := ::dRECEIVABLEDATEFROM
	oClone:dRECEIVABLEDATETO := ::dRECEIVABLEDATETO
	oClone:cQUERYADDWHERE := ::cQUERYADDWHERE
	oClone:oWSGETCOMMISSIONRESULT :=  IIF(::oWSGETCOMMISSIONRESULT = NIL , NIL ,::oWSGETCOMMISSIONRESULT:Clone() )
	oClone:cHEADERTYPE   := ::cHEADERTYPE
	oClone:oWSGETHEADERRESULT :=  IIF(::oWSGETHEADERRESULT = NIL , NIL ,::oWSGETHEADERRESULT:Clone() )
	oClone:cSELLERPASSWORD := ::cSELLERPASSWORD
	oClone:oWSGETLOGINRESULT :=  IIF(::oWSGETLOGINRESULT = NIL , NIL ,::oWSGETLOGINRESULT:Clone() )
	oClone:oWSGETSELLERRESULT :=  IIF(::oWSGETSELLERRESULT = NIL , NIL ,::oWSGETSELLERRESULT:Clone() )
	oClone:oWSGETTYPEOFPHONERESULT :=  IIF(::oWSGETTYPEOFPHONERESULT = NIL , NIL ,::oWSGETTYPEOFPHONERESULT:Clone() )
	oClone:oWSSELLER     :=  IIF(::oWSSELLER = NIL , NIL ,::oWSSELLER:Clone() )
	oClone:cPUTSELLERRESULT := ::cPUTSELLERRESULT

	// Estruturas mantidas por compatibilidade - NÃO USAR
	oClone:oWSSELLERVIEW := oClone:oWSSELLER
Return oClone

// WSDL Method GETCOMMISSION of Service WSMTSELLER

WSMETHOD GETCOMMISSION WSSEND cUSERCODE,cSELLERCODE,dREGISTERDATEFROM,dREGISTERDATETO,dRECEIVABLEDATEFROM,dRECEIVABLEDATETO,cQUERYADDWHERE WSRECEIVE oWSGETCOMMISSIONRESULT WSCLIENT WSMTSELLER
Local cSoap := "" , oXmlRet

BEGIN WSMETHOD

cSoap += '<GETCOMMISSION xmlns="http://webservices.microsiga.com.br/mtseller.apw">'
cSoap += WSSoapValue("USERCODE", ::cUSERCODE, cUSERCODE , "string", .T. , .F., 0 , NIL, .F.,.F.) 
cSoap += WSSoapValue("SELLERCODE", ::cSELLERCODE, cSELLERCODE , "string", .T. , .F., 0 , NIL, .F.,.F.) 
cSoap += WSSoapValue("REGISTERDATEFROM", ::dREGISTERDATEFROM, dREGISTERDATEFROM , "date", .F. , .F., 0 , NIL, .F.,.F.) 
cSoap += WSSoapValue("REGISTERDATETO", ::dREGISTERDATETO, dREGISTERDATETO , "date", .F. , .F., 0 , NIL, .F.,.F.) 
cSoap += WSSoapValue("RECEIVABLEDATEFROM", ::dRECEIVABLEDATEFROM, dRECEIVABLEDATEFROM , "date", .F. , .F., 0 , NIL, .F.,.F.) 
cSoap += WSSoapValue("RECEIVABLEDATETO", ::dRECEIVABLEDATETO, dRECEIVABLEDATETO , "date", .F. , .F., 0 , NIL, .F.,.F.) 
cSoap += WSSoapValue("QUERYADDWHERE", ::cQUERYADDWHERE, cQUERYADDWHERE , "string", .F. , .F., 0 , NIL, .F.,.F.) 
cSoap += "</GETCOMMISSION>"

oXmlRet := SvcSoapCall(Self,cSoap,; 
	"http://webservices.microsiga.com.br/mtseller.apw/GETCOMMISSION",; 
	"DOCUMENT","http://webservices.microsiga.com.br/mtseller.apw",,"1.031217",; 
	"http://localhost:8059/ws/MTSELLER.apw")

::Init()
::oWSGETCOMMISSIONRESULT:SoapRecv( WSAdvValue( oXmlRet,"_GETCOMMISSIONRESPONSE:_GETCOMMISSIONRESULT","ARRAYOFCOMMISSIONVIEW",NIL,NIL,NIL,NIL,NIL,NIL) )

END WSMETHOD

oXmlRet := NIL
Return .T.

// WSDL Method GETHEADER of Service WSMTSELLER

WSMETHOD GETHEADER WSSEND cHEADERTYPE WSRECEIVE oWSGETHEADERRESULT WSCLIENT WSMTSELLER
Local cSoap := "" , oXmlRet

BEGIN WSMETHOD

cSoap += '<GETHEADER xmlns="http://webservices.microsiga.com.br/mtseller.apw">'
cSoap += WSSoapValue("HEADERTYPE", ::cHEADERTYPE, cHEADERTYPE , "string", .T. , .F., 0 , NIL, .F.,.F.) 
cSoap += "</GETHEADER>"

oXmlRet := SvcSoapCall(Self,cSoap,; 
	"http://webservices.microsiga.com.br/mtseller.apw/GETHEADER",; 
	"DOCUMENT","http://webservices.microsiga.com.br/mtseller.apw",,"1.031217",; 
	"http://localhost:8059/ws/MTSELLER.apw")

::Init()
::oWSGETHEADERRESULT:SoapRecv( WSAdvValue( oXmlRet,"_GETHEADERRESPONSE:_GETHEADERRESULT","ARRAYOFBRWHEADER",NIL,NIL,NIL,NIL,NIL,NIL) )

END WSMETHOD

oXmlRet := NIL
Return .T.

// WSDL Method GETLOGIN of Service WSMTSELLER

WSMETHOD GETLOGIN WSSEND cSELLERCODE,cSELLERPASSWORD WSRECEIVE oWSGETLOGINRESULT WSCLIENT WSMTSELLER
Local cSoap := "" , oXmlRet

BEGIN WSMETHOD

cSoap += '<GETLOGIN xmlns="http://webservices.microsiga.com.br/mtseller.apw">'
cSoap += WSSoapValue("SELLERCODE", ::cSELLERCODE, cSELLERCODE , "string", .T. , .F., 0 , NIL, .F.,.F.) 
cSoap += WSSoapValue("SELLERPASSWORD", ::cSELLERPASSWORD, cSELLERPASSWORD , "string", .T. , .F., 0 , NIL, .F.,.F.) 
cSoap += "</GETLOGIN>"

oXmlRet := SvcSoapCall(Self,cSoap,; 
	"http://webservices.microsiga.com.br/mtseller.apw/GETLOGIN",; 
	"DOCUMENT","http://webservices.microsiga.com.br/mtseller.apw",,"1.031217",; 
	"http://localhost:8059/ws/MTSELLER.apw")

::Init()
::oWSGETLOGINRESULT:SoapRecv( WSAdvValue( oXmlRet,"_GETLOGINRESPONSE:_GETLOGINRESULT","ARRAYOFGENERICSTRUCT",NIL,NIL,NIL,NIL,NIL,NIL) )

END WSMETHOD

oXmlRet := NIL
Return .T.

// WSDL Method GETSELLER of Service WSMTSELLER

WSMETHOD GETSELLER WSSEND cUSERCODE,cSELLERCODE WSRECEIVE oWSGETSELLERRESULT WSCLIENT WSMTSELLER
Local cSoap := "" , oXmlRet

BEGIN WSMETHOD

cSoap += '<GETSELLER xmlns="http://webservices.microsiga.com.br/mtseller.apw">'
cSoap += WSSoapValue("USERCODE", ::cUSERCODE, cUSERCODE , "string", .T. , .F., 0 , NIL, .F.,.F.) 
cSoap += WSSoapValue("SELLERCODE", ::cSELLERCODE, cSELLERCODE , "string", .T. , .F., 0 , NIL, .F.,.F.) 
cSoap += "</GETSELLER>"

oXmlRet := SvcSoapCall(Self,cSoap,; 
	"http://webservices.microsiga.com.br/mtseller.apw/GETSELLER",; 
	"DOCUMENT","http://webservices.microsiga.com.br/mtseller.apw",,"1.031217",; 
	"http://localhost:8059/ws/MTSELLER.apw")

::Init()
::oWSGETSELLERRESULT:SoapRecv( WSAdvValue( oXmlRet,"_GETSELLERRESPONSE:_GETSELLERRESULT","SELLERVIEW",NIL,NIL,NIL,NIL,NIL,NIL) )

END WSMETHOD

oXmlRet := NIL
Return .T.

// WSDL Method GETTYPEOFPHONE of Service WSMTSELLER

WSMETHOD GETTYPEOFPHONE WSSEND NULLPARAM WSRECEIVE oWSGETTYPEOFPHONERESULT WSCLIENT WSMTSELLER
Local cSoap := "" , oXmlRet

BEGIN WSMETHOD

cSoap += '<GETTYPEOFPHONE xmlns="http://webservices.microsiga.com.br/mtseller.apw">'
cSoap += "</GETTYPEOFPHONE>"

oXmlRet := SvcSoapCall(Self,cSoap,; 
	"http://webservices.microsiga.com.br/mtseller.apw/GETTYPEOFPHONE",; 
	"DOCUMENT","http://webservices.microsiga.com.br/mtseller.apw",,"1.031217",; 
	"http://localhost:8059/ws/MTSELLER.apw")

::Init()
::oWSGETTYPEOFPHONERESULT:SoapRecv( WSAdvValue( oXmlRet,"_GETTYPEOFPHONERESPONSE:_GETTYPEOFPHONERESULT","ARRAYOFGENERICSTRUCT",NIL,NIL,NIL,NIL,NIL,NIL) )

END WSMETHOD

oXmlRet := NIL
Return .T.

// WSDL Method PUTSELLER of Service WSMTSELLER

WSMETHOD PUTSELLER WSSEND cUSERCODE,cSELLERCODE,oWSSELLER WSRECEIVE cPUTSELLERRESULT WSCLIENT WSMTSELLER
Local cSoap := "" , oXmlRet

BEGIN WSMETHOD

cSoap += '<PUTSELLER xmlns="http://webservices.microsiga.com.br/mtseller.apw">'
cSoap += WSSoapValue("USERCODE", ::cUSERCODE, cUSERCODE , "string", .T. , .F., 0 , NIL, .F.,.F.) 
cSoap += WSSoapValue("SELLERCODE", ::cSELLERCODE, cSELLERCODE , "string", .T. , .F., 0 , NIL, .F.,.F.) 
cSoap += WSSoapValue("SELLER", ::oWSSELLER, oWSSELLER , "SELLERVIEW", .T. , .F., 0 , NIL, .F.,.F.) 
cSoap += "</PUTSELLER>"

oXmlRet := SvcSoapCall(Self,cSoap,; 
	"http://webservices.microsiga.com.br/mtseller.apw/PUTSELLER",; 
	"DOCUMENT","http://webservices.microsiga.com.br/mtseller.apw",,"1.031217",; 
	"http://localhost:8059/ws/MTSELLER.apw")

::Init()
::cPUTSELLERRESULT   :=  WSAdvValue( oXmlRet,"_PUTSELLERRESPONSE:_PUTSELLERRESULT:TEXT","string",NIL,NIL,NIL,NIL,NIL,NIL) 

END WSMETHOD

oXmlRet := NIL
Return .T.


// WSDL Data Structure ARRAYOFCOMMISSIONVIEW

WSSTRUCT MTSELLER_ARRAYOFCOMMISSIONVIEW
	WSDATA   oWSCOMMISSIONVIEW         AS MTSELLER_COMMISSIONVIEW OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT MTSELLER_ARRAYOFCOMMISSIONVIEW
	::Init()
Return Self

WSMETHOD INIT WSCLIENT MTSELLER_ARRAYOFCOMMISSIONVIEW
	::oWSCOMMISSIONVIEW    := {} // Array Of  MTSELLER_COMMISSIONVIEW():New()
Return

WSMETHOD CLONE WSCLIENT MTSELLER_ARRAYOFCOMMISSIONVIEW
	Local oClone := MTSELLER_ARRAYOFCOMMISSIONVIEW():NEW()
	oClone:oWSCOMMISSIONVIEW := NIL
	If ::oWSCOMMISSIONVIEW <> NIL 
		oClone:oWSCOMMISSIONVIEW := {}
		aEval( ::oWSCOMMISSIONVIEW , { |x| aadd( oClone:oWSCOMMISSIONVIEW , x:Clone() ) } )
	Endif 
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT MTSELLER_ARRAYOFCOMMISSIONVIEW
	Local nRElem1, oNodes1, nTElem1
	::Init()
	If oResponse = NIL ; Return ; Endif 
	oNodes1 :=  WSAdvValue( oResponse,"_COMMISSIONVIEW","COMMISSIONVIEW",{},NIL,.T.,"O",NIL,NIL) 
	nTElem1 := len(oNodes1)
	For nRElem1 := 1 to nTElem1 
		If !WSIsNilNode( oNodes1[nRElem1] )
			aadd(::oWSCOMMISSIONVIEW , MTSELLER_COMMISSIONVIEW():New() )
			::oWSCOMMISSIONVIEW[len(::oWSCOMMISSIONVIEW)]:SoapRecv(oNodes1[nRElem1])
		Endif
	Next
Return

// WSDL Data Structure ARRAYOFBRWHEADER

WSSTRUCT MTSELLER_ARRAYOFBRWHEADER
	WSDATA   oWSBRWHEADER              AS MTSELLER_BRWHEADER OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT MTSELLER_ARRAYOFBRWHEADER
	::Init()
Return Self

WSMETHOD INIT WSCLIENT MTSELLER_ARRAYOFBRWHEADER
	::oWSBRWHEADER         := {} // Array Of  MTSELLER_BRWHEADER():New()
Return

WSMETHOD CLONE WSCLIENT MTSELLER_ARRAYOFBRWHEADER
	Local oClone := MTSELLER_ARRAYOFBRWHEADER():NEW()
	oClone:oWSBRWHEADER := NIL
	If ::oWSBRWHEADER <> NIL 
		oClone:oWSBRWHEADER := {}
		aEval( ::oWSBRWHEADER , { |x| aadd( oClone:oWSBRWHEADER , x:Clone() ) } )
	Endif 
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT MTSELLER_ARRAYOFBRWHEADER
	Local nRElem1, oNodes1, nTElem1
	::Init()
	If oResponse = NIL ; Return ; Endif 
	oNodes1 :=  WSAdvValue( oResponse,"_BRWHEADER","BRWHEADER",{},NIL,.T.,"O",NIL,NIL) 
	nTElem1 := len(oNodes1)
	For nRElem1 := 1 to nTElem1 
		If !WSIsNilNode( oNodes1[nRElem1] )
			aadd(::oWSBRWHEADER , MTSELLER_BRWHEADER():New() )
			::oWSBRWHEADER[len(::oWSBRWHEADER)]:SoapRecv(oNodes1[nRElem1])
		Endif
	Next
Return

// WSDL Data Structure ARRAYOFGENERICSTRUCT

WSSTRUCT MTSELLER_ARRAYOFGENERICSTRUCT
	WSDATA   oWSGENERICSTRUCT          AS MTSELLER_GENERICSTRUCT OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT MTSELLER_ARRAYOFGENERICSTRUCT
	::Init()
Return Self

WSMETHOD INIT WSCLIENT MTSELLER_ARRAYOFGENERICSTRUCT
	::oWSGENERICSTRUCT     := {} // Array Of  MTSELLER_GENERICSTRUCT():New()
Return

WSMETHOD CLONE WSCLIENT MTSELLER_ARRAYOFGENERICSTRUCT
	Local oClone := MTSELLER_ARRAYOFGENERICSTRUCT():NEW()
	oClone:oWSGENERICSTRUCT := NIL
	If ::oWSGENERICSTRUCT <> NIL 
		oClone:oWSGENERICSTRUCT := {}
		aEval( ::oWSGENERICSTRUCT , { |x| aadd( oClone:oWSGENERICSTRUCT , x:Clone() ) } )
	Endif 
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT MTSELLER_ARRAYOFGENERICSTRUCT
	Local nRElem1, oNodes1, nTElem1
	::Init()
	If oResponse = NIL ; Return ; Endif 
	oNodes1 :=  WSAdvValue( oResponse,"_GENERICSTRUCT","GENERICSTRUCT",{},NIL,.T.,"O",NIL,NIL) 
	nTElem1 := len(oNodes1)
	For nRElem1 := 1 to nTElem1 
		If !WSIsNilNode( oNodes1[nRElem1] )
			aadd(::oWSGENERICSTRUCT , MTSELLER_GENERICSTRUCT():New() )
			::oWSGENERICSTRUCT[len(::oWSGENERICSTRUCT)]:SoapRecv(oNodes1[nRElem1])
		Endif
	Next
Return

// WSDL Data Structure SELLERVIEW

WSSTRUCT MTSELLER_SELLERVIEW
	WSDATA   oWSADDRESSES              AS MTSELLER_ADDRESSVIEW
	WSDATA   cDISTRICTID               AS string
	WSDATA   cEMAIL                    AS string
	WSDATA   cFEDERALID                AS string
	WSDATA   cHOMEPAGE                 AS string
	WSDATA   cNAME                     AS string
	WSDATA   cNICKNAME                 AS string
	WSDATA   oWSPHONES                 AS MTSELLER_ARRAYOFPHONEVIEW OPTIONAL
	WSDATA   cSALESMANAGERCODE         AS string OPTIONAL
	WSDATA   cSALESSUPERVISORCODE      AS string OPTIONAL
	WSDATA   cSELLERCODE               AS string
	WSDATA   cSTATEID                  AS string
	WSDATA   oWSUSERFIELDS             AS MTSELLER_ARRAYOFUSERFIELD OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPSEND
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT MTSELLER_SELLERVIEW
	::Init()
Return Self

WSMETHOD INIT WSCLIENT MTSELLER_SELLERVIEW
Return

WSMETHOD CLONE WSCLIENT MTSELLER_SELLERVIEW
	Local oClone := MTSELLER_SELLERVIEW():NEW()
	oClone:oWSADDRESSES         := IIF(::oWSADDRESSES = NIL , NIL , ::oWSADDRESSES:Clone() )
	oClone:cDISTRICTID          := ::cDISTRICTID
	oClone:cEMAIL               := ::cEMAIL
	oClone:cFEDERALID           := ::cFEDERALID
	oClone:cHOMEPAGE            := ::cHOMEPAGE
	oClone:cNAME                := ::cNAME
	oClone:cNICKNAME            := ::cNICKNAME
	oClone:oWSPHONES            := IIF(::oWSPHONES = NIL , NIL , ::oWSPHONES:Clone() )
	oClone:cSALESMANAGERCODE    := ::cSALESMANAGERCODE
	oClone:cSALESSUPERVISORCODE := ::cSALESSUPERVISORCODE
	oClone:cSELLERCODE          := ::cSELLERCODE
	oClone:cSTATEID             := ::cSTATEID
	oClone:oWSUSERFIELDS        := IIF(::oWSUSERFIELDS = NIL , NIL , ::oWSUSERFIELDS:Clone() )
Return oClone

WSMETHOD SOAPSEND WSCLIENT MTSELLER_SELLERVIEW
	Local cSoap := ""
	cSoap += WSSoapValue("ADDRESSES", ::oWSADDRESSES, ::oWSADDRESSES , "ADDRESSVIEW", .T. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("DISTRICTID", ::cDISTRICTID, ::cDISTRICTID , "string", .T. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("EMAIL", ::cEMAIL, ::cEMAIL , "string", .T. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("FEDERALID", ::cFEDERALID, ::cFEDERALID , "string", .T. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("HOMEPAGE", ::cHOMEPAGE, ::cHOMEPAGE , "string", .T. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("NAME", ::cNAME, ::cNAME , "string", .T. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("NICKNAME", ::cNICKNAME, ::cNICKNAME , "string", .T. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("PHONES", ::oWSPHONES, ::oWSPHONES , "ARRAYOFPHONEVIEW", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("SALESMANAGERCODE", ::cSALESMANAGERCODE, ::cSALESMANAGERCODE , "string", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("SALESSUPERVISORCODE", ::cSALESSUPERVISORCODE, ::cSALESSUPERVISORCODE , "string", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("SELLERCODE", ::cSELLERCODE, ::cSELLERCODE , "string", .T. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("STATEID", ::cSTATEID, ::cSTATEID , "string", .T. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("USERFIELDS", ::oWSUSERFIELDS, ::oWSUSERFIELDS , "ARRAYOFUSERFIELD", .F. , .F., 0 , NIL, .F.,.F.) 
Return cSoap

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT MTSELLER_SELLERVIEW
	Local oNode1
	Local oNode8
	Local oNode13
	::Init()
	If oResponse = NIL ; Return ; Endif 
	oNode1 :=  WSAdvValue( oResponse,"_ADDRESSES","ADDRESSVIEW",NIL,"Property oWSADDRESSES as s0:ADDRESSVIEW on SOAP Response not found.",NIL,"O",NIL,NIL) 
	If oNode1 != NIL
		::oWSADDRESSES := MTSELLER_ADDRESSVIEW():New()
		::oWSADDRESSES:SoapRecv(oNode1)
	EndIf
	::cDISTRICTID        :=  WSAdvValue( oResponse,"_DISTRICTID","string",NIL,"Property cDISTRICTID as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::cEMAIL             :=  WSAdvValue( oResponse,"_EMAIL","string",NIL,"Property cEMAIL as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::cFEDERALID         :=  WSAdvValue( oResponse,"_FEDERALID","string",NIL,"Property cFEDERALID as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::cHOMEPAGE          :=  WSAdvValue( oResponse,"_HOMEPAGE","string",NIL,"Property cHOMEPAGE as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::cNAME              :=  WSAdvValue( oResponse,"_NAME","string",NIL,"Property cNAME as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::cNICKNAME          :=  WSAdvValue( oResponse,"_NICKNAME","string",NIL,"Property cNICKNAME as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	oNode8 :=  WSAdvValue( oResponse,"_PHONES","ARRAYOFPHONEVIEW",NIL,NIL,NIL,"O",NIL,NIL) 
	If oNode8 != NIL
		::oWSPHONES := MTSELLER_ARRAYOFPHONEVIEW():New()
		::oWSPHONES:SoapRecv(oNode8)
	EndIf
	::cSALESMANAGERCODE  :=  WSAdvValue( oResponse,"_SALESMANAGERCODE","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cSALESSUPERVISORCODE :=  WSAdvValue( oResponse,"_SALESSUPERVISORCODE","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cSELLERCODE        :=  WSAdvValue( oResponse,"_SELLERCODE","string",NIL,"Property cSELLERCODE as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::cSTATEID           :=  WSAdvValue( oResponse,"_STATEID","string",NIL,"Property cSTATEID as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	oNode13 :=  WSAdvValue( oResponse,"_USERFIELDS","ARRAYOFUSERFIELD",NIL,NIL,NIL,"O",NIL,NIL) 
	If oNode13 != NIL
		::oWSUSERFIELDS := MTSELLER_ARRAYOFUSERFIELD():New()
		::oWSUSERFIELDS:SoapRecv(oNode13)
	EndIf
Return

// WSDL Data Structure COMMISSIONVIEW

WSSTRUCT MTSELLER_COMMISSIONVIEW
	WSDATA   dBILLPAIDDATE             AS date OPTIONAL
	WSDATA   dBILLREALDUEDATE          AS date OPTIONAL
	WSDATA   nCOMMISSIONBASE           AS float
	WSDATA   nCOMMISSIONPERCENTAGE     AS float OPTIONAL
	WSDATA   nCOMMISSIONVALUE          AS float
	WSDATA   cCUSTOMERCODE             AS string
	WSDATA   cDOCUMENT                 AS string
	WSDATA   cGENERATEDBY              AS string OPTIONAL
	WSDATA   cNAME                     AS string
	WSDATA   cNICKNAME                 AS string
	WSDATA   dPAYMENTDATE              AS date OPTIONAL
	WSDATA   dRECEIVABLEDATE           AS date OPTIONAL
	WSDATA   dREGISTERDATE             AS date
	WSDATA   cSALESORDER               AS string OPTIONAL
	WSDATA   cSELLERCODE               AS string
	WSDATA   oWSUSERFIELDS             AS MTSELLER_ARRAYOFUSERFIELD OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT MTSELLER_COMMISSIONVIEW
	::Init()
Return Self

WSMETHOD INIT WSCLIENT MTSELLER_COMMISSIONVIEW
Return

WSMETHOD CLONE WSCLIENT MTSELLER_COMMISSIONVIEW
	Local oClone := MTSELLER_COMMISSIONVIEW():NEW()
	oClone:dBILLPAIDDATE        := ::dBILLPAIDDATE
	oClone:dBILLREALDUEDATE     := ::dBILLREALDUEDATE
	oClone:nCOMMISSIONBASE      := ::nCOMMISSIONBASE
	oClone:nCOMMISSIONPERCENTAGE := ::nCOMMISSIONPERCENTAGE
	oClone:nCOMMISSIONVALUE     := ::nCOMMISSIONVALUE
	oClone:cCUSTOMERCODE        := ::cCUSTOMERCODE
	oClone:cDOCUMENT            := ::cDOCUMENT
	oClone:cGENERATEDBY         := ::cGENERATEDBY
	oClone:cNAME                := ::cNAME
	oClone:cNICKNAME            := ::cNICKNAME
	oClone:dPAYMENTDATE         := ::dPAYMENTDATE
	oClone:dRECEIVABLEDATE      := ::dRECEIVABLEDATE
	oClone:dREGISTERDATE        := ::dREGISTERDATE
	oClone:cSALESORDER          := ::cSALESORDER
	oClone:cSELLERCODE          := ::cSELLERCODE
	oClone:oWSUSERFIELDS        := IIF(::oWSUSERFIELDS = NIL , NIL , ::oWSUSERFIELDS:Clone() )
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT MTSELLER_COMMISSIONVIEW
	Local oNode16
	::Init()
	If oResponse = NIL ; Return ; Endif 
	::dBILLPAIDDATE      :=  WSAdvValue( oResponse,"_BILLPAIDDATE","date",NIL,NIL,NIL,"D",NIL,NIL) 
	::dBILLREALDUEDATE   :=  WSAdvValue( oResponse,"_BILLREALDUEDATE","date",NIL,NIL,NIL,"D",NIL,NIL) 
	::nCOMMISSIONBASE    :=  WSAdvValue( oResponse,"_COMMISSIONBASE","float",NIL,"Property nCOMMISSIONBASE as s:float on SOAP Response not found.",NIL,"N",NIL,NIL) 
	::nCOMMISSIONPERCENTAGE :=  WSAdvValue( oResponse,"_COMMISSIONPERCENTAGE","float",NIL,NIL,NIL,"N",NIL,NIL) 
	::nCOMMISSIONVALUE   :=  WSAdvValue( oResponse,"_COMMISSIONVALUE","float",NIL,"Property nCOMMISSIONVALUE as s:float on SOAP Response not found.",NIL,"N",NIL,NIL) 
	::cCUSTOMERCODE      :=  WSAdvValue( oResponse,"_CUSTOMERCODE","string",NIL,"Property cCUSTOMERCODE as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::cDOCUMENT          :=  WSAdvValue( oResponse,"_DOCUMENT","string",NIL,"Property cDOCUMENT as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::cGENERATEDBY       :=  WSAdvValue( oResponse,"_GENERATEDBY","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cNAME              :=  WSAdvValue( oResponse,"_NAME","string",NIL,"Property cNAME as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::cNICKNAME          :=  WSAdvValue( oResponse,"_NICKNAME","string",NIL,"Property cNICKNAME as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::dPAYMENTDATE       :=  WSAdvValue( oResponse,"_PAYMENTDATE","date",NIL,NIL,NIL,"D",NIL,NIL) 
	::dRECEIVABLEDATE    :=  WSAdvValue( oResponse,"_RECEIVABLEDATE","date",NIL,NIL,NIL,"D",NIL,NIL) 
	::dREGISTERDATE      :=  WSAdvValue( oResponse,"_REGISTERDATE","date",NIL,"Property dREGISTERDATE as s:date on SOAP Response not found.",NIL,"D",NIL,NIL) 
	::cSALESORDER        :=  WSAdvValue( oResponse,"_SALESORDER","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cSELLERCODE        :=  WSAdvValue( oResponse,"_SELLERCODE","string",NIL,"Property cSELLERCODE as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	oNode16 :=  WSAdvValue( oResponse,"_USERFIELDS","ARRAYOFUSERFIELD",NIL,NIL,NIL,"O",NIL,NIL) 
	If oNode16 != NIL
		::oWSUSERFIELDS := MTSELLER_ARRAYOFUSERFIELD():New()
		::oWSUSERFIELDS:SoapRecv(oNode16)
	EndIf
Return

// WSDL Data Structure BRWHEADER

WSSTRUCT MTSELLER_BRWHEADER
	WSDATA   cHEADERCOMBOBOX           AS string OPTIONAL
	WSDATA   nHEADERDEC                AS integer
	WSDATA   cHEADERF3                 AS string OPTIONAL
	WSDATA   cHEADERFIELD              AS string
	WSDATA   lHEADEROBLIG              AS boolean OPTIONAL
	WSDATA   cHEADERPICTURE            AS string
	WSDATA   nHEADERSIZE               AS integer
	WSDATA   cHEADERTITLE              AS string
	WSDATA   cHEADERTYPE               AS string
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT MTSELLER_BRWHEADER
	::Init()
Return Self

WSMETHOD INIT WSCLIENT MTSELLER_BRWHEADER
Return

WSMETHOD CLONE WSCLIENT MTSELLER_BRWHEADER
	Local oClone := MTSELLER_BRWHEADER():NEW()
	oClone:cHEADERCOMBOBOX      := ::cHEADERCOMBOBOX
	oClone:nHEADERDEC           := ::nHEADERDEC
	oClone:cHEADERF3            := ::cHEADERF3
	oClone:cHEADERFIELD         := ::cHEADERFIELD
	oClone:lHEADEROBLIG         := ::lHEADEROBLIG
	oClone:cHEADERPICTURE       := ::cHEADERPICTURE
	oClone:nHEADERSIZE          := ::nHEADERSIZE
	oClone:cHEADERTITLE         := ::cHEADERTITLE
	oClone:cHEADERTYPE          := ::cHEADERTYPE
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT MTSELLER_BRWHEADER
	::Init()
	If oResponse = NIL ; Return ; Endif 
	::cHEADERCOMBOBOX    :=  WSAdvValue( oResponse,"_HEADERCOMBOBOX","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::nHEADERDEC         :=  WSAdvValue( oResponse,"_HEADERDEC","integer",NIL,"Property nHEADERDEC as s:integer on SOAP Response not found.",NIL,"N",NIL,NIL) 
	::cHEADERF3          :=  WSAdvValue( oResponse,"_HEADERF3","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cHEADERFIELD       :=  WSAdvValue( oResponse,"_HEADERFIELD","string",NIL,"Property cHEADERFIELD as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::lHEADEROBLIG       :=  WSAdvValue( oResponse,"_HEADEROBLIG","boolean",NIL,NIL,NIL,"L",NIL,NIL) 
	::cHEADERPICTURE     :=  WSAdvValue( oResponse,"_HEADERPICTURE","string",NIL,"Property cHEADERPICTURE as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::nHEADERSIZE        :=  WSAdvValue( oResponse,"_HEADERSIZE","integer",NIL,"Property nHEADERSIZE as s:integer on SOAP Response not found.",NIL,"N",NIL,NIL) 
	::cHEADERTITLE       :=  WSAdvValue( oResponse,"_HEADERTITLE","string",NIL,"Property cHEADERTITLE as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::cHEADERTYPE        :=  WSAdvValue( oResponse,"_HEADERTYPE","string",NIL,"Property cHEADERTYPE as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
Return

// WSDL Data Structure GENERICSTRUCT

WSSTRUCT MTSELLER_GENERICSTRUCT
	WSDATA   cCODE                     AS string
	WSDATA   cDESCRIPTION              AS string
	WSDATA   nVALUE                    AS float OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT MTSELLER_GENERICSTRUCT
	::Init()
Return Self

WSMETHOD INIT WSCLIENT MTSELLER_GENERICSTRUCT
Return

WSMETHOD CLONE WSCLIENT MTSELLER_GENERICSTRUCT
	Local oClone := MTSELLER_GENERICSTRUCT():NEW()
	oClone:cCODE                := ::cCODE
	oClone:cDESCRIPTION         := ::cDESCRIPTION
	oClone:nVALUE               := ::nVALUE
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT MTSELLER_GENERICSTRUCT
	::Init()
	If oResponse = NIL ; Return ; Endif 
	::cCODE              :=  WSAdvValue( oResponse,"_CODE","string",NIL,"Property cCODE as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::cDESCRIPTION       :=  WSAdvValue( oResponse,"_DESCRIPTION","string",NIL,"Property cDESCRIPTION as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::nVALUE             :=  WSAdvValue( oResponse,"_VALUE","float",NIL,NIL,NIL,"N",NIL,NIL) 
Return

// WSDL Data Structure ADDRESSVIEW

WSSTRUCT MTSELLER_ADDRESSVIEW
	WSDATA   cADDRESS                  AS string
	WSDATA   cADDRESSNUMBER            AS string
	WSDATA   cCOUNTRY                  AS string OPTIONAL
	WSDATA   cDISTRICT                 AS string
	WSDATA   cSTATE                    AS string
	WSDATA   cTYPEOFADDRESS            AS string
	WSDATA   cZIPCODE                  AS string OPTIONAL
	WSDATA   cZONE                     AS string OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPSEND
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT MTSELLER_ADDRESSVIEW
	::Init()
Return Self

WSMETHOD INIT WSCLIENT MTSELLER_ADDRESSVIEW
Return

WSMETHOD CLONE WSCLIENT MTSELLER_ADDRESSVIEW
	Local oClone := MTSELLER_ADDRESSVIEW():NEW()
	oClone:cADDRESS             := ::cADDRESS
	oClone:cADDRESSNUMBER       := ::cADDRESSNUMBER
	oClone:cCOUNTRY             := ::cCOUNTRY
	oClone:cDISTRICT            := ::cDISTRICT
	oClone:cSTATE               := ::cSTATE
	oClone:cTYPEOFADDRESS       := ::cTYPEOFADDRESS
	oClone:cZIPCODE             := ::cZIPCODE
	oClone:cZONE                := ::cZONE
Return oClone

WSMETHOD SOAPSEND WSCLIENT MTSELLER_ADDRESSVIEW
	Local cSoap := ""
	cSoap += WSSoapValue("ADDRESS", ::cADDRESS, ::cADDRESS , "string", .T. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("ADDRESSNUMBER", ::cADDRESSNUMBER, ::cADDRESSNUMBER , "string", .T. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("COUNTRY", ::cCOUNTRY, ::cCOUNTRY , "string", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("DISTRICT", ::cDISTRICT, ::cDISTRICT , "string", .T. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("STATE", ::cSTATE, ::cSTATE , "string", .T. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("TYPEOFADDRESS", ::cTYPEOFADDRESS, ::cTYPEOFADDRESS , "string", .T. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("ZIPCODE", ::cZIPCODE, ::cZIPCODE , "string", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("ZONE", ::cZONE, ::cZONE , "string", .F. , .F., 0 , NIL, .F.,.F.) 
Return cSoap

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT MTSELLER_ADDRESSVIEW
	::Init()
	If oResponse = NIL ; Return ; Endif 
	::cADDRESS           :=  WSAdvValue( oResponse,"_ADDRESS","string",NIL,"Property cADDRESS as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::cADDRESSNUMBER     :=  WSAdvValue( oResponse,"_ADDRESSNUMBER","string",NIL,"Property cADDRESSNUMBER as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::cCOUNTRY           :=  WSAdvValue( oResponse,"_COUNTRY","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cDISTRICT          :=  WSAdvValue( oResponse,"_DISTRICT","string",NIL,"Property cDISTRICT as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::cSTATE             :=  WSAdvValue( oResponse,"_STATE","string",NIL,"Property cSTATE as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::cTYPEOFADDRESS     :=  WSAdvValue( oResponse,"_TYPEOFADDRESS","string",NIL,"Property cTYPEOFADDRESS as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::cZIPCODE           :=  WSAdvValue( oResponse,"_ZIPCODE","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cZONE              :=  WSAdvValue( oResponse,"_ZONE","string",NIL,NIL,NIL,"S",NIL,NIL) 
Return

// WSDL Data Structure ARRAYOFPHONEVIEW

WSSTRUCT MTSELLER_ARRAYOFPHONEVIEW
	WSDATA   oWSPHONEVIEW              AS MTSELLER_PHONEVIEW OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPSEND
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT MTSELLER_ARRAYOFPHONEVIEW
	::Init()
Return Self

WSMETHOD INIT WSCLIENT MTSELLER_ARRAYOFPHONEVIEW
	::oWSPHONEVIEW         := {} // Array Of  MTSELLER_PHONEVIEW():New()
Return

WSMETHOD CLONE WSCLIENT MTSELLER_ARRAYOFPHONEVIEW
	Local oClone := MTSELLER_ARRAYOFPHONEVIEW():NEW()
	oClone:oWSPHONEVIEW := NIL
	If ::oWSPHONEVIEW <> NIL 
		oClone:oWSPHONEVIEW := {}
		aEval( ::oWSPHONEVIEW , { |x| aadd( oClone:oWSPHONEVIEW , x:Clone() ) } )
	Endif 
Return oClone

WSMETHOD SOAPSEND WSCLIENT MTSELLER_ARRAYOFPHONEVIEW
	Local cSoap := ""
	aEval( ::oWSPHONEVIEW , {|x| cSoap := cSoap  +  WSSoapValue("PHONEVIEW", x , x , "PHONEVIEW", .F. , .F., 0 , NIL, .F.,.F.)  } ) 
Return cSoap

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT MTSELLER_ARRAYOFPHONEVIEW
	Local nRElem1, oNodes1, nTElem1
	::Init()
	If oResponse = NIL ; Return ; Endif 
	oNodes1 :=  WSAdvValue( oResponse,"_PHONEVIEW","PHONEVIEW",{},NIL,.T.,"O",NIL,NIL) 
	nTElem1 := len(oNodes1)
	For nRElem1 := 1 to nTElem1 
		If !WSIsNilNode( oNodes1[nRElem1] )
			aadd(::oWSPHONEVIEW , MTSELLER_PHONEVIEW():New() )
			::oWSPHONEVIEW[len(::oWSPHONEVIEW)]:SoapRecv(oNodes1[nRElem1])
		Endif
	Next
Return

// WSDL Data Structure ARRAYOFUSERFIELD

WSSTRUCT MTSELLER_ARRAYOFUSERFIELD
	WSDATA   oWSUSERFIELD              AS MTSELLER_USERFIELD OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPSEND
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT MTSELLER_ARRAYOFUSERFIELD
	::Init()
Return Self

WSMETHOD INIT WSCLIENT MTSELLER_ARRAYOFUSERFIELD
	::oWSUSERFIELD         := {} // Array Of  MTSELLER_USERFIELD():New()
Return

WSMETHOD CLONE WSCLIENT MTSELLER_ARRAYOFUSERFIELD
	Local oClone := MTSELLER_ARRAYOFUSERFIELD():NEW()
	oClone:oWSUSERFIELD := NIL
	If ::oWSUSERFIELD <> NIL 
		oClone:oWSUSERFIELD := {}
		aEval( ::oWSUSERFIELD , { |x| aadd( oClone:oWSUSERFIELD , x:Clone() ) } )
	Endif 
Return oClone

WSMETHOD SOAPSEND WSCLIENT MTSELLER_ARRAYOFUSERFIELD
	Local cSoap := ""
	aEval( ::oWSUSERFIELD , {|x| cSoap := cSoap  +  WSSoapValue("USERFIELD", x , x , "USERFIELD", .F. , .F., 0 , NIL, .F.,.F.)  } ) 
Return cSoap

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT MTSELLER_ARRAYOFUSERFIELD
	Local nRElem1, oNodes1, nTElem1
	::Init()
	If oResponse = NIL ; Return ; Endif 
	oNodes1 :=  WSAdvValue( oResponse,"_USERFIELD","USERFIELD",{},NIL,.T.,"O",NIL,NIL) 
	nTElem1 := len(oNodes1)
	For nRElem1 := 1 to nTElem1 
		If !WSIsNilNode( oNodes1[nRElem1] )
			aadd(::oWSUSERFIELD , MTSELLER_USERFIELD():New() )
			::oWSUSERFIELD[len(::oWSUSERFIELD)]:SoapRecv(oNodes1[nRElem1])
		Endif
	Next
Return

// WSDL Data Structure PHONEVIEW

WSSTRUCT MTSELLER_PHONEVIEW
	WSDATA   cCOUNTRYAREACODE          AS string OPTIONAL
	WSDATA   cLOCALAREACODE            AS string OPTIONAL
	WSDATA   cPHONENUMBER              AS string OPTIONAL
	WSDATA   cTYPEOFPHONE              AS string
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPSEND
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT MTSELLER_PHONEVIEW
	::Init()
Return Self

WSMETHOD INIT WSCLIENT MTSELLER_PHONEVIEW
Return

WSMETHOD CLONE WSCLIENT MTSELLER_PHONEVIEW
	Local oClone := MTSELLER_PHONEVIEW():NEW()
	oClone:cCOUNTRYAREACODE     := ::cCOUNTRYAREACODE
	oClone:cLOCALAREACODE       := ::cLOCALAREACODE
	oClone:cPHONENUMBER         := ::cPHONENUMBER
	oClone:cTYPEOFPHONE         := ::cTYPEOFPHONE
Return oClone

WSMETHOD SOAPSEND WSCLIENT MTSELLER_PHONEVIEW
	Local cSoap := ""
	cSoap += WSSoapValue("COUNTRYAREACODE", ::cCOUNTRYAREACODE, ::cCOUNTRYAREACODE , "string", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("LOCALAREACODE", ::cLOCALAREACODE, ::cLOCALAREACODE , "string", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("PHONENUMBER", ::cPHONENUMBER, ::cPHONENUMBER , "string", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("TYPEOFPHONE", ::cTYPEOFPHONE, ::cTYPEOFPHONE , "string", .T. , .F., 0 , NIL, .F.,.F.) 
Return cSoap

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT MTSELLER_PHONEVIEW
	::Init()
	If oResponse = NIL ; Return ; Endif 
	::cCOUNTRYAREACODE   :=  WSAdvValue( oResponse,"_COUNTRYAREACODE","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cLOCALAREACODE     :=  WSAdvValue( oResponse,"_LOCALAREACODE","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cPHONENUMBER       :=  WSAdvValue( oResponse,"_PHONENUMBER","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cTYPEOFPHONE       :=  WSAdvValue( oResponse,"_TYPEOFPHONE","string",NIL,"Property cTYPEOFPHONE as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
Return

// WSDL Data Structure USERFIELD

WSSTRUCT MTSELLER_USERFIELD
	WSDATA   cUSERCOMBOBOX             AS string OPTIONAL
	WSDATA   nUSERDEC                  AS integer OPTIONAL
	WSDATA   cUSERF3                   AS string OPTIONAL
	WSDATA   cUSERNAME                 AS string
	WSDATA   lUSEROBLIG                AS boolean OPTIONAL
	WSDATA   cUSERPICTURE              AS string OPTIONAL
	WSDATA   nUSERSIZE                 AS integer OPTIONAL
	WSDATA   cUSERTAG                  AS string OPTIONAL
	WSDATA   cUSERTITLE                AS string OPTIONAL
	WSDATA   cUSERTYPE                 AS string
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPSEND
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT MTSELLER_USERFIELD
	::Init()
Return Self

WSMETHOD INIT WSCLIENT MTSELLER_USERFIELD
Return

WSMETHOD CLONE WSCLIENT MTSELLER_USERFIELD
	Local oClone := MTSELLER_USERFIELD():NEW()
	oClone:cUSERCOMBOBOX        := ::cUSERCOMBOBOX
	oClone:nUSERDEC             := ::nUSERDEC
	oClone:cUSERF3              := ::cUSERF3
	oClone:cUSERNAME            := ::cUSERNAME
	oClone:lUSEROBLIG           := ::lUSEROBLIG
	oClone:cUSERPICTURE         := ::cUSERPICTURE
	oClone:nUSERSIZE            := ::nUSERSIZE
	oClone:cUSERTAG             := ::cUSERTAG
	oClone:cUSERTITLE           := ::cUSERTITLE
	oClone:cUSERTYPE            := ::cUSERTYPE
Return oClone

WSMETHOD SOAPSEND WSCLIENT MTSELLER_USERFIELD
	Local cSoap := ""
	cSoap += WSSoapValue("USERCOMBOBOX", ::cUSERCOMBOBOX, ::cUSERCOMBOBOX , "string", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("USERDEC", ::nUSERDEC, ::nUSERDEC , "integer", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("USERF3", ::cUSERF3, ::cUSERF3 , "string", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("USERNAME", ::cUSERNAME, ::cUSERNAME , "string", .T. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("USEROBLIG", ::lUSEROBLIG, ::lUSEROBLIG , "boolean", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("USERPICTURE", ::cUSERPICTURE, ::cUSERPICTURE , "string", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("USERSIZE", ::nUSERSIZE, ::nUSERSIZE , "integer", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("USERTAG", ::cUSERTAG, ::cUSERTAG , "string", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("USERTITLE", ::cUSERTITLE, ::cUSERTITLE , "string", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("USERTYPE", ::cUSERTYPE, ::cUSERTYPE , "string", .T. , .F., 0 , NIL, .F.,.F.) 
Return cSoap

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT MTSELLER_USERFIELD
	::Init()
	If oResponse = NIL ; Return ; Endif 
	::cUSERCOMBOBOX      :=  WSAdvValue( oResponse,"_USERCOMBOBOX","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::nUSERDEC           :=  WSAdvValue( oResponse,"_USERDEC","integer",NIL,NIL,NIL,"N",NIL,NIL) 
	::cUSERF3            :=  WSAdvValue( oResponse,"_USERF3","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cUSERNAME          :=  WSAdvValue( oResponse,"_USERNAME","string",NIL,"Property cUSERNAME as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::lUSEROBLIG         :=  WSAdvValue( oResponse,"_USEROBLIG","boolean",NIL,NIL,NIL,"L",NIL,NIL) 
	::cUSERPICTURE       :=  WSAdvValue( oResponse,"_USERPICTURE","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::nUSERSIZE          :=  WSAdvValue( oResponse,"_USERSIZE","integer",NIL,NIL,NIL,"N",NIL,NIL) 
	::cUSERTAG           :=  WSAdvValue( oResponse,"_USERTAG","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cUSERTITLE         :=  WSAdvValue( oResponse,"_USERTITLE","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cUSERTYPE          :=  WSAdvValue( oResponse,"_USERTYPE","string",NIL,"Property cUSERTYPE as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
Return


