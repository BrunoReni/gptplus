#INCLUDE "protheus.ch"
#INCLUDE "apwebsrv.ch"

/* ===============================================================================
WSDL Location    http://localhost:8059/ws/FTSELLERCALENDAR.APW?WSDL
Gerado em        12/14/20 10:01:45
Observações      Código-Fonte gerado por ADVPL WSDL Client 1.120703
                 Alterações neste arquivo podem causar funcionamento incorreto
                 e serão perdidas caso o código-fonte seja gerado novamente.
=============================================================================== */

User Function _QQOHSTL ; Return  // "dummy" function - Internal Use 

/* -------------------------------------------------------------------------------
WSDL Service WSFTSELLERCALENDAR
------------------------------------------------------------------------------- */

WSCLIENT WSFTSELLERCALENDAR

	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD RESET
	WSMETHOD CLONE
	WSMETHOD BRWCALENDAR
	WSMETHOD DELCALENDAR
	WSMETHOD GETCALENDAR
	WSMETHOD GETHEADER
	WSMETHOD PUTCALENDAR

	WSDATA   _URL                      AS String
	WSDATA   _HEADOUT                  AS Array of String
	WSDATA   _COOKIES                  AS Array of String
	WSDATA   cUSERCODE                 AS string
	WSDATA   cSELLERCODE               AS string
	WSDATA   dDATEFROM                 AS date
	WSDATA   dDATETO                   AS date
	WSDATA   cQUERYADDWHERE            AS string
	WSDATA   cINDEXKEY                 AS string
	WSDATA   oWSBRWCALENDARRESULT      AS FTSELLERCALENDAR_ARRAYOFCALENDARVIEW
	WSDATA   oWSCALENDAR               AS FTSELLERCALENDAR_CALENDARVIEW
	WSDATA   cDELCALENDARRESULT        AS string
	WSDATA   cCALENDARID               AS string
	WSDATA   oWSGETCALENDARRESULT      AS FTSELLERCALENDAR_CALENDARVIEW
	WSDATA   oWSGETHEADERRESULT        AS FTSELLERCALENDAR_ARRAYOFBRWHEADER
	WSDATA   cPUTCALENDARRESULT        AS string

	// Estruturas mantidas por compatibilidade - NÃO USAR
	WSDATA   oWSCALENDARVIEW           AS FTSELLERCALENDAR_CALENDARVIEW

ENDWSCLIENT

WSMETHOD NEW WSCLIENT WSFTSELLERCALENDAR
::Init()
If !FindFunction("XMLCHILDEX")
	UserException("O Código-Fonte Client atual requer os executáveis do Protheus Build [7.00.191205P-20201009] ou superior. Atualize o Protheus ou gere o Código-Fonte novamente utilizando o Build atual.")
EndIf
Return Self

WSMETHOD INIT WSCLIENT WSFTSELLERCALENDAR
	::oWSBRWCALENDARRESULT := FTSELLERCALENDAR_ARRAYOFCALENDARVIEW():New()
	::oWSCALENDAR        := FTSELLERCALENDAR_CALENDARVIEW():New()
	::oWSGETCALENDARRESULT := FTSELLERCALENDAR_CALENDARVIEW():New()
	::oWSGETHEADERRESULT := FTSELLERCALENDAR_ARRAYOFBRWHEADER():New()

	// Estruturas mantidas por compatibilidade - NÃO USAR
	::oWSCALENDARVIEW    := ::oWSCALENDAR
Return

WSMETHOD RESET WSCLIENT WSFTSELLERCALENDAR
	::cUSERCODE          := NIL 
	::cSELLERCODE        := NIL 
	::dDATEFROM          := NIL 
	::dDATETO            := NIL 
	::cQUERYADDWHERE     := NIL 
	::cINDEXKEY          := NIL 
	::oWSBRWCALENDARRESULT := NIL 
	::oWSCALENDAR        := NIL 
	::cDELCALENDARRESULT := NIL 
	::cCALENDARID        := NIL 
	::oWSGETCALENDARRESULT := NIL 
	::oWSGETHEADERRESULT := NIL 
	::cPUTCALENDARRESULT := NIL 

	// Estruturas mantidas por compatibilidade - NÃO USAR
	::oWSCALENDARVIEW    := NIL
	::Init()
Return

WSMETHOD CLONE WSCLIENT WSFTSELLERCALENDAR
Local oClone := WSFTSELLERCALENDAR():New()
	oClone:_URL          := ::_URL 
	oClone:cUSERCODE     := ::cUSERCODE
	oClone:cSELLERCODE   := ::cSELLERCODE
	oClone:dDATEFROM     := ::dDATEFROM
	oClone:dDATETO       := ::dDATETO
	oClone:cQUERYADDWHERE := ::cQUERYADDWHERE
	oClone:cINDEXKEY     := ::cINDEXKEY
	oClone:oWSBRWCALENDARRESULT :=  IIF(::oWSBRWCALENDARRESULT = NIL , NIL ,::oWSBRWCALENDARRESULT:Clone() )
	oClone:oWSCALENDAR   :=  IIF(::oWSCALENDAR = NIL , NIL ,::oWSCALENDAR:Clone() )
	oClone:cDELCALENDARRESULT := ::cDELCALENDARRESULT
	oClone:cCALENDARID   := ::cCALENDARID
	oClone:oWSGETCALENDARRESULT :=  IIF(::oWSGETCALENDARRESULT = NIL , NIL ,::oWSGETCALENDARRESULT:Clone() )
	oClone:oWSGETHEADERRESULT :=  IIF(::oWSGETHEADERRESULT = NIL , NIL ,::oWSGETHEADERRESULT:Clone() )
	oClone:cPUTCALENDARRESULT := ::cPUTCALENDARRESULT

	// Estruturas mantidas por compatibilidade - NÃO USAR
	oClone:oWSCALENDARVIEW := oClone:oWSCALENDAR
Return oClone

// WSDL Method BRWCALENDAR of Service WSFTSELLERCALENDAR

WSMETHOD BRWCALENDAR WSSEND cUSERCODE,cSELLERCODE,dDATEFROM,dDATETO,cQUERYADDWHERE,cINDEXKEY WSRECEIVE oWSBRWCALENDARRESULT WSCLIENT WSFTSELLERCALENDAR
Local cSoap := "" , oXmlRet

BEGIN WSMETHOD

cSoap += '<BRWCALENDAR xmlns="http://webservices.microsiga.com.br/ftsellercalendar.apw">'
cSoap += WSSoapValue("USERCODE", ::cUSERCODE, cUSERCODE , "string", .T. , .F., 0 , NIL, .F.,.F.) 
cSoap += WSSoapValue("SELLERCODE", ::cSELLERCODE, cSELLERCODE , "string", .T. , .F., 0 , NIL, .F.,.F.) 
cSoap += WSSoapValue("DATEFROM", ::dDATEFROM, dDATEFROM , "date", .F. , .F., 0 , NIL, .F.,.F.) 
cSoap += WSSoapValue("DATETO", ::dDATETO, dDATETO , "date", .F. , .F., 0 , NIL, .F.,.F.) 
cSoap += WSSoapValue("QUERYADDWHERE", ::cQUERYADDWHERE, cQUERYADDWHERE , "string", .F. , .F., 0 , NIL, .F.,.F.) 
cSoap += WSSoapValue("INDEXKEY", ::cINDEXKEY, cINDEXKEY , "string", .T. , .F., 0 , NIL, .F.,.F.) 
cSoap += "</BRWCALENDAR>"

oXmlRet := SvcSoapCall(Self,cSoap,; 
	"http://webservices.microsiga.com.br/ftsellercalendar.apw/BRWCALENDAR",; 
	"DOCUMENT","http://webservices.microsiga.com.br/ftsellercalendar.apw",,"1.031217",; 
	"http://localhost:8059/ws/FTSELLERCALENDAR.apw")

::Init()
::oWSBRWCALENDARRESULT:SoapRecv( WSAdvValue( oXmlRet,"_BRWCALENDARRESPONSE:_BRWCALENDARRESULT","ARRAYOFCALENDARVIEW",NIL,NIL,NIL,NIL,NIL,NIL) )

END WSMETHOD

oXmlRet := NIL
Return .T.

// WSDL Method DELCALENDAR of Service WSFTSELLERCALENDAR

WSMETHOD DELCALENDAR WSSEND cUSERCODE,cSELLERCODE,oWSCALENDAR WSRECEIVE cDELCALENDARRESULT WSCLIENT WSFTSELLERCALENDAR
Local cSoap := "" , oXmlRet

BEGIN WSMETHOD

cSoap += '<DELCALENDAR xmlns="http://webservices.microsiga.com.br/ftsellercalendar.apw">'
cSoap += WSSoapValue("USERCODE", ::cUSERCODE, cUSERCODE , "string", .T. , .F., 0 , NIL, .F.,.F.) 
cSoap += WSSoapValue("SELLERCODE", ::cSELLERCODE, cSELLERCODE , "string", .T. , .F., 0 , NIL, .F.,.F.) 
cSoap += WSSoapValue("CALENDAR", ::oWSCALENDAR, oWSCALENDAR , "CALENDARVIEW", .T. , .F., 0 , NIL, .F.,.F.) 
cSoap += "</DELCALENDAR>"

oXmlRet := SvcSoapCall(Self,cSoap,; 
	"http://webservices.microsiga.com.br/ftsellercalendar.apw/DELCALENDAR",; 
	"DOCUMENT","http://webservices.microsiga.com.br/ftsellercalendar.apw",,"1.031217",; 
	"http://localhost:8059/ws/FTSELLERCALENDAR.apw")

::Init()
::cDELCALENDARRESULT :=  WSAdvValue( oXmlRet,"_DELCALENDARRESPONSE:_DELCALENDARRESULT:TEXT","string",NIL,NIL,NIL,NIL,NIL,NIL) 

END WSMETHOD

oXmlRet := NIL
Return .T.

// WSDL Method GETCALENDAR of Service WSFTSELLERCALENDAR

WSMETHOD GETCALENDAR WSSEND cUSERCODE,cSELLERCODE,cCALENDARID WSRECEIVE oWSGETCALENDARRESULT WSCLIENT WSFTSELLERCALENDAR
Local cSoap := "" , oXmlRet

BEGIN WSMETHOD

cSoap += '<GETCALENDAR xmlns="http://webservices.microsiga.com.br/ftsellercalendar.apw">'
cSoap += WSSoapValue("USERCODE", ::cUSERCODE, cUSERCODE , "string", .T. , .F., 0 , NIL, .F.,.F.) 
cSoap += WSSoapValue("SELLERCODE", ::cSELLERCODE, cSELLERCODE , "string", .T. , .F., 0 , NIL, .F.,.F.) 
cSoap += WSSoapValue("CALENDARID", ::cCALENDARID, cCALENDARID , "string", .T. , .F., 0 , NIL, .F.,.F.) 
cSoap += "</GETCALENDAR>"

oXmlRet := SvcSoapCall(Self,cSoap,; 
	"http://webservices.microsiga.com.br/ftsellercalendar.apw/GETCALENDAR",; 
	"DOCUMENT","http://webservices.microsiga.com.br/ftsellercalendar.apw",,"1.031217",; 
	"http://localhost:8059/ws/FTSELLERCALENDAR.apw")

::Init()
::oWSGETCALENDARRESULT:SoapRecv( WSAdvValue( oXmlRet,"_GETCALENDARRESPONSE:_GETCALENDARRESULT","CALENDARVIEW",NIL,NIL,NIL,NIL,NIL,NIL) )

END WSMETHOD

oXmlRet := NIL
Return .T.

// WSDL Method GETHEADER of Service WSFTSELLERCALENDAR

WSMETHOD GETHEADER WSSEND NULLPARAM WSRECEIVE oWSGETHEADERRESULT WSCLIENT WSFTSELLERCALENDAR
Local cSoap := "" , oXmlRet

BEGIN WSMETHOD

cSoap += '<GETHEADER xmlns="http://webservices.microsiga.com.br/ftsellercalendar.apw">'
cSoap += "</GETHEADER>"

oXmlRet := SvcSoapCall(Self,cSoap,; 
	"http://webservices.microsiga.com.br/ftsellercalendar.apw/GETHEADER",; 
	"DOCUMENT","http://webservices.microsiga.com.br/ftsellercalendar.apw",,"1.031217",; 
	"http://localhost:8059/ws/FTSELLERCALENDAR.apw")

::Init()
::oWSGETHEADERRESULT:SoapRecv( WSAdvValue( oXmlRet,"_GETHEADERRESPONSE:_GETHEADERRESULT","ARRAYOFBRWHEADER",NIL,NIL,NIL,NIL,NIL,NIL) )

END WSMETHOD

oXmlRet := NIL
Return .T.

// WSDL Method PUTCALENDAR of Service WSFTSELLERCALENDAR

WSMETHOD PUTCALENDAR WSSEND cUSERCODE,cSELLERCODE,oWSCALENDAR WSRECEIVE cPUTCALENDARRESULT WSCLIENT WSFTSELLERCALENDAR
Local cSoap := "" , oXmlRet

BEGIN WSMETHOD

cSoap += '<PUTCALENDAR xmlns="http://webservices.microsiga.com.br/ftsellercalendar.apw">'
cSoap += WSSoapValue("USERCODE", ::cUSERCODE, cUSERCODE , "string", .T. , .F., 0 , NIL, .F.,.F.) 
cSoap += WSSoapValue("SELLERCODE", ::cSELLERCODE, cSELLERCODE , "string", .T. , .F., 0 , NIL, .F.,.F.) 
cSoap += WSSoapValue("CALENDAR", ::oWSCALENDAR, oWSCALENDAR , "CALENDARVIEW", .T. , .F., 0 , NIL, .F.,.F.) 
cSoap += "</PUTCALENDAR>"

oXmlRet := SvcSoapCall(Self,cSoap,; 
	"http://webservices.microsiga.com.br/ftsellercalendar.apw/PUTCALENDAR",; 
	"DOCUMENT","http://webservices.microsiga.com.br/ftsellercalendar.apw",,"1.031217",; 
	"http://localhost:8059/ws/FTSELLERCALENDAR.apw")

::Init()
::cPUTCALENDARRESULT :=  WSAdvValue( oXmlRet,"_PUTCALENDARRESPONSE:_PUTCALENDARRESULT:TEXT","string",NIL,NIL,NIL,NIL,NIL,NIL) 

END WSMETHOD

oXmlRet := NIL
Return .T.


// WSDL Data Structure ARRAYOFCALENDARVIEW

WSSTRUCT FTSELLERCALENDAR_ARRAYOFCALENDARVIEW
	WSDATA   oWSCALENDARVIEW           AS FTSELLERCALENDAR_CALENDARVIEW OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT FTSELLERCALENDAR_ARRAYOFCALENDARVIEW
	::Init()
Return Self

WSMETHOD INIT WSCLIENT FTSELLERCALENDAR_ARRAYOFCALENDARVIEW
	::oWSCALENDARVIEW      := {} // Array Of  FTSELLERCALENDAR_CALENDARVIEW():New()
Return

WSMETHOD CLONE WSCLIENT FTSELLERCALENDAR_ARRAYOFCALENDARVIEW
	Local oClone := FTSELLERCALENDAR_ARRAYOFCALENDARVIEW():NEW()
	oClone:oWSCALENDARVIEW := NIL
	If ::oWSCALENDARVIEW <> NIL 
		oClone:oWSCALENDARVIEW := {}
		aEval( ::oWSCALENDARVIEW , { |x| aadd( oClone:oWSCALENDARVIEW , x:Clone() ) } )
	Endif 
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT FTSELLERCALENDAR_ARRAYOFCALENDARVIEW
	Local nRElem1, oNodes1, nTElem1
	::Init()
	If oResponse = NIL ; Return ; Endif 
	oNodes1 :=  WSAdvValue( oResponse,"_CALENDARVIEW","CALENDARVIEW",{},NIL,.T.,"O",NIL,NIL) 
	nTElem1 := len(oNodes1)
	For nRElem1 := 1 to nTElem1 
		If !WSIsNilNode( oNodes1[nRElem1] )
			aadd(::oWSCALENDARVIEW , FTSELLERCALENDAR_CALENDARVIEW():New() )
			::oWSCALENDARVIEW[len(::oWSCALENDARVIEW)]:SoapRecv(oNodes1[nRElem1])
		Endif
	Next
Return

// WSDL Data Structure CALENDARVIEW

WSSTRUCT FTSELLERCALENDAR_CALENDARVIEW
	WSDATA   cCONTACT                  AS string OPTIONAL
	WSDATA   cCUSTOMERCODE             AS string OPTIONAL
	WSDATA   cENDTIME                  AS string
	WSDATA   dEVENTDATE                AS date
	WSDATA   cNOTE                     AS string OPTIONAL
	WSDATA   cOPORTUNITY               AS string OPTIONAL
	WSDATA   cPROSPECTCODE             AS string OPTIONAL
	WSDATA   cSTARTTIME                AS string
	WSDATA   cSUBJECT                  AS string
	WSDATA   cUNITCUSTOMERCODE         AS string OPTIONAL
	WSDATA   cUNITPROSPECTCODE         AS string OPTIONAL
	WSDATA   oWSUSERFIELDS             AS FTSELLERCALENDAR_ARRAYOFUSERFIELD OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPSEND
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT FTSELLERCALENDAR_CALENDARVIEW
	::Init()
Return Self

WSMETHOD INIT WSCLIENT FTSELLERCALENDAR_CALENDARVIEW
Return

WSMETHOD CLONE WSCLIENT FTSELLERCALENDAR_CALENDARVIEW
	Local oClone := FTSELLERCALENDAR_CALENDARVIEW():NEW()
	oClone:cCONTACT             := ::cCONTACT
	oClone:cCUSTOMERCODE        := ::cCUSTOMERCODE
	oClone:cENDTIME             := ::cENDTIME
	oClone:dEVENTDATE           := ::dEVENTDATE
	oClone:cNOTE                := ::cNOTE
	oClone:cOPORTUNITY          := ::cOPORTUNITY
	oClone:cPROSPECTCODE        := ::cPROSPECTCODE
	oClone:cSTARTTIME           := ::cSTARTTIME
	oClone:cSUBJECT             := ::cSUBJECT
	oClone:cUNITCUSTOMERCODE    := ::cUNITCUSTOMERCODE
	oClone:cUNITPROSPECTCODE    := ::cUNITPROSPECTCODE
	oClone:oWSUSERFIELDS        := IIF(::oWSUSERFIELDS = NIL , NIL , ::oWSUSERFIELDS:Clone() )
Return oClone

WSMETHOD SOAPSEND WSCLIENT FTSELLERCALENDAR_CALENDARVIEW
	Local cSoap := ""
	cSoap += WSSoapValue("CONTACT", ::cCONTACT, ::cCONTACT , "string", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("CUSTOMERCODE", ::cCUSTOMERCODE, ::cCUSTOMERCODE , "string", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("ENDTIME", ::cENDTIME, ::cENDTIME , "string", .T. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("EVENTDATE", ::dEVENTDATE, ::dEVENTDATE , "date", .T. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("NOTE", ::cNOTE, ::cNOTE , "string", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("OPORTUNITY", ::cOPORTUNITY, ::cOPORTUNITY , "string", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("PROSPECTCODE", ::cPROSPECTCODE, ::cPROSPECTCODE , "string", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("STARTTIME", ::cSTARTTIME, ::cSTARTTIME , "string", .T. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("SUBJECT", ::cSUBJECT, ::cSUBJECT , "string", .T. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("UNITCUSTOMERCODE", ::cUNITCUSTOMERCODE, ::cUNITCUSTOMERCODE , "string", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("UNITPROSPECTCODE", ::cUNITPROSPECTCODE, ::cUNITPROSPECTCODE , "string", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("USERFIELDS", ::oWSUSERFIELDS, ::oWSUSERFIELDS , "ARRAYOFUSERFIELD", .F. , .F., 0 , NIL, .F.,.F.) 
Return cSoap

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT FTSELLERCALENDAR_CALENDARVIEW
	Local oNode12
	::Init()
	If oResponse = NIL ; Return ; Endif 
	::cCONTACT           :=  WSAdvValue( oResponse,"_CONTACT","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cCUSTOMERCODE      :=  WSAdvValue( oResponse,"_CUSTOMERCODE","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cENDTIME           :=  WSAdvValue( oResponse,"_ENDTIME","string",NIL,"Property cENDTIME as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::dEVENTDATE         :=  WSAdvValue( oResponse,"_EVENTDATE","date",NIL,"Property dEVENTDATE as s:date on SOAP Response not found.",NIL,"D",NIL,NIL) 
	::cNOTE              :=  WSAdvValue( oResponse,"_NOTE","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cOPORTUNITY        :=  WSAdvValue( oResponse,"_OPORTUNITY","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cPROSPECTCODE      :=  WSAdvValue( oResponse,"_PROSPECTCODE","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cSTARTTIME         :=  WSAdvValue( oResponse,"_STARTTIME","string",NIL,"Property cSTARTTIME as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::cSUBJECT           :=  WSAdvValue( oResponse,"_SUBJECT","string",NIL,"Property cSUBJECT as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::cUNITCUSTOMERCODE  :=  WSAdvValue( oResponse,"_UNITCUSTOMERCODE","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cUNITPROSPECTCODE  :=  WSAdvValue( oResponse,"_UNITPROSPECTCODE","string",NIL,NIL,NIL,"S",NIL,NIL) 
	oNode12 :=  WSAdvValue( oResponse,"_USERFIELDS","ARRAYOFUSERFIELD",NIL,NIL,NIL,"O",NIL,NIL) 
	If oNode12 != NIL
		::oWSUSERFIELDS := FTSELLERCALENDAR_ARRAYOFUSERFIELD():New()
		::oWSUSERFIELDS:SoapRecv(oNode12)
	EndIf
Return

// WSDL Data Structure ARRAYOFBRWHEADER

WSSTRUCT FTSELLERCALENDAR_ARRAYOFBRWHEADER
	WSDATA   oWSBRWHEADER              AS FTSELLERCALENDAR_BRWHEADER OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT FTSELLERCALENDAR_ARRAYOFBRWHEADER
	::Init()
Return Self

WSMETHOD INIT WSCLIENT FTSELLERCALENDAR_ARRAYOFBRWHEADER
	::oWSBRWHEADER         := {} // Array Of  FTSELLERCALENDAR_BRWHEADER():New()
Return

WSMETHOD CLONE WSCLIENT FTSELLERCALENDAR_ARRAYOFBRWHEADER
	Local oClone := FTSELLERCALENDAR_ARRAYOFBRWHEADER():NEW()
	oClone:oWSBRWHEADER := NIL
	If ::oWSBRWHEADER <> NIL 
		oClone:oWSBRWHEADER := {}
		aEval( ::oWSBRWHEADER , { |x| aadd( oClone:oWSBRWHEADER , x:Clone() ) } )
	Endif 
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT FTSELLERCALENDAR_ARRAYOFBRWHEADER
	Local nRElem1, oNodes1, nTElem1
	::Init()
	If oResponse = NIL ; Return ; Endif 
	oNodes1 :=  WSAdvValue( oResponse,"_BRWHEADER","BRWHEADER",{},NIL,.T.,"O",NIL,NIL) 
	nTElem1 := len(oNodes1)
	For nRElem1 := 1 to nTElem1 
		If !WSIsNilNode( oNodes1[nRElem1] )
			aadd(::oWSBRWHEADER , FTSELLERCALENDAR_BRWHEADER():New() )
			::oWSBRWHEADER[len(::oWSBRWHEADER)]:SoapRecv(oNodes1[nRElem1])
		Endif
	Next
Return

// WSDL Data Structure ARRAYOFUSERFIELD

WSSTRUCT FTSELLERCALENDAR_ARRAYOFUSERFIELD
	WSDATA   oWSUSERFIELD              AS FTSELLERCALENDAR_USERFIELD OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPSEND
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT FTSELLERCALENDAR_ARRAYOFUSERFIELD
	::Init()
Return Self

WSMETHOD INIT WSCLIENT FTSELLERCALENDAR_ARRAYOFUSERFIELD
	::oWSUSERFIELD         := {} // Array Of  FTSELLERCALENDAR_USERFIELD():New()
Return

WSMETHOD CLONE WSCLIENT FTSELLERCALENDAR_ARRAYOFUSERFIELD
	Local oClone := FTSELLERCALENDAR_ARRAYOFUSERFIELD():NEW()
	oClone:oWSUSERFIELD := NIL
	If ::oWSUSERFIELD <> NIL 
		oClone:oWSUSERFIELD := {}
		aEval( ::oWSUSERFIELD , { |x| aadd( oClone:oWSUSERFIELD , x:Clone() ) } )
	Endif 
Return oClone

WSMETHOD SOAPSEND WSCLIENT FTSELLERCALENDAR_ARRAYOFUSERFIELD
	Local cSoap := ""
	aEval( ::oWSUSERFIELD , {|x| cSoap := cSoap  +  WSSoapValue("USERFIELD", x , x , "USERFIELD", .F. , .F., 0 , NIL, .F.,.F.)  } ) 
Return cSoap

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT FTSELLERCALENDAR_ARRAYOFUSERFIELD
	Local nRElem1, oNodes1, nTElem1
	::Init()
	If oResponse = NIL ; Return ; Endif 
	oNodes1 :=  WSAdvValue( oResponse,"_USERFIELD","USERFIELD",{},NIL,.T.,"O",NIL,NIL) 
	nTElem1 := len(oNodes1)
	For nRElem1 := 1 to nTElem1 
		If !WSIsNilNode( oNodes1[nRElem1] )
			aadd(::oWSUSERFIELD , FTSELLERCALENDAR_USERFIELD():New() )
			::oWSUSERFIELD[len(::oWSUSERFIELD)]:SoapRecv(oNodes1[nRElem1])
		Endif
	Next
Return

// WSDL Data Structure BRWHEADER

WSSTRUCT FTSELLERCALENDAR_BRWHEADER
	WSDATA   cHEADERCOMBOBOX           AS string OPTIONAL
	WSDATA   nHEADERDEC                AS integer
	WSDATA   cHEADERF3                 AS string OPTIONAL
	WSDATA   cHEADERFIELD              AS string
	WSDATA   lHEADEROBLIG              AS boolean OPTIONAL
	WSDATA   cHEADERPICTURE            AS string
	WSDATA   nHEADERSIZE               AS integer
	WSDATA   cHEADERTITLE              AS string
	WSDATA   cHEADERTYPE               AS string
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT FTSELLERCALENDAR_BRWHEADER
	::Init()
Return Self

WSMETHOD INIT WSCLIENT FTSELLERCALENDAR_BRWHEADER
Return

WSMETHOD CLONE WSCLIENT FTSELLERCALENDAR_BRWHEADER
	Local oClone := FTSELLERCALENDAR_BRWHEADER():NEW()
	oClone:cHEADERCOMBOBOX      := ::cHEADERCOMBOBOX
	oClone:nHEADERDEC           := ::nHEADERDEC
	oClone:cHEADERF3            := ::cHEADERF3
	oClone:cHEADERFIELD         := ::cHEADERFIELD
	oClone:lHEADEROBLIG         := ::lHEADEROBLIG
	oClone:cHEADERPICTURE       := ::cHEADERPICTURE
	oClone:nHEADERSIZE          := ::nHEADERSIZE
	oClone:cHEADERTITLE         := ::cHEADERTITLE
	oClone:cHEADERTYPE          := ::cHEADERTYPE
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT FTSELLERCALENDAR_BRWHEADER
	::Init()
	If oResponse = NIL ; Return ; Endif 
	::cHEADERCOMBOBOX    :=  WSAdvValue( oResponse,"_HEADERCOMBOBOX","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::nHEADERDEC         :=  WSAdvValue( oResponse,"_HEADERDEC","integer",NIL,"Property nHEADERDEC as s:integer on SOAP Response not found.",NIL,"N",NIL,NIL) 
	::cHEADERF3          :=  WSAdvValue( oResponse,"_HEADERF3","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cHEADERFIELD       :=  WSAdvValue( oResponse,"_HEADERFIELD","string",NIL,"Property cHEADERFIELD as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::lHEADEROBLIG       :=  WSAdvValue( oResponse,"_HEADEROBLIG","boolean",NIL,NIL,NIL,"L",NIL,NIL) 
	::cHEADERPICTURE     :=  WSAdvValue( oResponse,"_HEADERPICTURE","string",NIL,"Property cHEADERPICTURE as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::nHEADERSIZE        :=  WSAdvValue( oResponse,"_HEADERSIZE","integer",NIL,"Property nHEADERSIZE as s:integer on SOAP Response not found.",NIL,"N",NIL,NIL) 
	::cHEADERTITLE       :=  WSAdvValue( oResponse,"_HEADERTITLE","string",NIL,"Property cHEADERTITLE as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::cHEADERTYPE        :=  WSAdvValue( oResponse,"_HEADERTYPE","string",NIL,"Property cHEADERTYPE as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
Return

// WSDL Data Structure USERFIELD

WSSTRUCT FTSELLERCALENDAR_USERFIELD
	WSDATA   cUSERCOMBOBOX             AS string OPTIONAL
	WSDATA   nUSERDEC                  AS integer OPTIONAL
	WSDATA   cUSERF3                   AS string OPTIONAL
	WSDATA   cUSERNAME                 AS string
	WSDATA   lUSEROBLIG                AS boolean OPTIONAL
	WSDATA   cUSERPICTURE              AS string OPTIONAL
	WSDATA   nUSERSIZE                 AS integer OPTIONAL
	WSDATA   cUSERTAG                  AS string OPTIONAL
	WSDATA   cUSERTITLE                AS string OPTIONAL
	WSDATA   cUSERTYPE                 AS string
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPSEND
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT FTSELLERCALENDAR_USERFIELD
	::Init()
Return Self

WSMETHOD INIT WSCLIENT FTSELLERCALENDAR_USERFIELD
Return

WSMETHOD CLONE WSCLIENT FTSELLERCALENDAR_USERFIELD
	Local oClone := FTSELLERCALENDAR_USERFIELD():NEW()
	oClone:cUSERCOMBOBOX        := ::cUSERCOMBOBOX
	oClone:nUSERDEC             := ::nUSERDEC
	oClone:cUSERF3              := ::cUSERF3
	oClone:cUSERNAME            := ::cUSERNAME
	oClone:lUSEROBLIG           := ::lUSEROBLIG
	oClone:cUSERPICTURE         := ::cUSERPICTURE
	oClone:nUSERSIZE            := ::nUSERSIZE
	oClone:cUSERTAG             := ::cUSERTAG
	oClone:cUSERTITLE           := ::cUSERTITLE
	oClone:cUSERTYPE            := ::cUSERTYPE
Return oClone

WSMETHOD SOAPSEND WSCLIENT FTSELLERCALENDAR_USERFIELD
	Local cSoap := ""
	cSoap += WSSoapValue("USERCOMBOBOX", ::cUSERCOMBOBOX, ::cUSERCOMBOBOX , "string", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("USERDEC", ::nUSERDEC, ::nUSERDEC , "integer", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("USERF3", ::cUSERF3, ::cUSERF3 , "string", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("USERNAME", ::cUSERNAME, ::cUSERNAME , "string", .T. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("USEROBLIG", ::lUSEROBLIG, ::lUSEROBLIG , "boolean", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("USERPICTURE", ::cUSERPICTURE, ::cUSERPICTURE , "string", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("USERSIZE", ::nUSERSIZE, ::nUSERSIZE , "integer", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("USERTAG", ::cUSERTAG, ::cUSERTAG , "string", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("USERTITLE", ::cUSERTITLE, ::cUSERTITLE , "string", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("USERTYPE", ::cUSERTYPE, ::cUSERTYPE , "string", .T. , .F., 0 , NIL, .F.,.F.) 
Return cSoap

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT FTSELLERCALENDAR_USERFIELD
	::Init()
	If oResponse = NIL ; Return ; Endif 
	::cUSERCOMBOBOX      :=  WSAdvValue( oResponse,"_USERCOMBOBOX","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::nUSERDEC           :=  WSAdvValue( oResponse,"_USERDEC","integer",NIL,NIL,NIL,"N",NIL,NIL) 
	::cUSERF3            :=  WSAdvValue( oResponse,"_USERF3","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cUSERNAME          :=  WSAdvValue( oResponse,"_USERNAME","string",NIL,"Property cUSERNAME as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::lUSEROBLIG         :=  WSAdvValue( oResponse,"_USEROBLIG","boolean",NIL,NIL,NIL,"L",NIL,NIL) 
	::cUSERPICTURE       :=  WSAdvValue( oResponse,"_USERPICTURE","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::nUSERSIZE          :=  WSAdvValue( oResponse,"_USERSIZE","integer",NIL,NIL,NIL,"N",NIL,NIL) 
	::cUSERTAG           :=  WSAdvValue( oResponse,"_USERTAG","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cUSERTITLE         :=  WSAdvValue( oResponse,"_USERTITLE","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cUSERTYPE          :=  WSAdvValue( oResponse,"_USERTYPE","string",NIL,"Property cUSERTYPE as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
Return


