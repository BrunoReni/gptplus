#INCLUDE "PROTHEUS.CH"
#INCLUDE "APWEBSRV.CH"

/* ===============================================================================
WSDL Location    http://172.16.75.75:8080/ws/RHABILITIES.apw?WSDL
Gerado em        02/18/10 17:12:45
Observações      Código-Fonte gerado por ADVPL WSDL Client 1.090116
                 Alterações neste arquivo podem causar funcionamento incorreto
                 e serão perdidas caso o código-fonte seja gerado novamente.
=============================================================================== */

User Function _QPWRCAJ ; Return  // "dummy" function - Internal Use 

/* -------------------------------------------------------------------------------
WSDL Service WSRHABILITIES
------------------------------------------------------------------------------- */

WSCLIENT WSRHABILITIES

	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD RESET
	WSMETHOD CLONE
	WSMETHOD GETABILITIESGAP

	WSDATA   _URL                      AS String
	WSDATA   _HEADOUT                  AS Array of String
	WSDATA   cBRANCH                   AS string
	WSDATA   cREGISTRATION             AS string
	WSDATA   oWSGETABILITIESGAPRESULT  AS RHABILITIES_TABILITIESDATA

ENDWSCLIENT

WSMETHOD NEW WSCLIENT WSRHABILITIES
::Init()
If !FindFunction("XMLCHILDEX")
	UserException("O Código-Fonte Client atual requer os executáveis do Protheus Build [7.00.090818P-20100111] ou superior. Atualize o Protheus ou gere o Código-Fonte novamente utilizando o Build atual.")
EndIf
Return Self

WSMETHOD INIT WSCLIENT WSRHABILITIES
	::oWSGETABILITIESGAPRESULT := RHABILITIES_TABILITIESDATA():New()
Return

WSMETHOD RESET WSCLIENT WSRHABILITIES
	::cBRANCH            := NIL 
	::cREGISTRATION      := NIL 
	::oWSGETABILITIESGAPRESULT := NIL 
	::Init()
Return

WSMETHOD CLONE WSCLIENT WSRHABILITIES
Local oClone := WSRHABILITIES():New()
	oClone:_URL          := ::_URL 
	oClone:cBRANCH       := ::cBRANCH
	oClone:cREGISTRATION := ::cREGISTRATION
	oClone:oWSGETABILITIESGAPRESULT :=  IIF(::oWSGETABILITIESGAPRESULT = NIL , NIL ,::oWSGETABILITIESGAPRESULT:Clone() )
Return oClone

// WSDL Method GETABILITIESGAP of Service WSRHABILITIES

WSMETHOD GETABILITIESGAP WSSEND cBRANCH,cREGISTRATION WSRECEIVE oWSGETABILITIESGAPRESULT WSCLIENT WSRHABILITIES
Local cSoap := "" , oXmlRet

BEGIN WSMETHOD

cSoap += '<GETABILITIESGAP xmlns="http://172.16.75.75:8080/">'
cSoap += WSSoapValue("BRANCH", ::cBRANCH, cBRANCH , "string", .T. , .F., 0 , NIL, .F.) 
cSoap += WSSoapValue("REGISTRATION", ::cREGISTRATION, cREGISTRATION , "string", .T. , .F., 0 , NIL, .F.) 
cSoap += "</GETABILITIESGAP>"

oXmlRet := SvcSoapCall(	Self,cSoap,; 
	"http://172.16.75.75:8080/GETABILITIESGAP",; 
	"DOCUMENT","http://172.16.75.75:8080/",,"1.031217",; 
	"http://172.16.75.75:8080/ws/RHABILITIES.apw")

::Init()
::oWSGETABILITIESGAPRESULT:SoapRecv( WSAdvValue( oXmlRet,"_GETABILITIESGAPRESPONSE:_GETABILITIESGAPRESULT","TABILITIESDATA",NIL,NIL,NIL,NIL,NIL,NIL) )

END WSMETHOD

oXmlRet := NIL
Return .T.


// WSDL Data Structure TABILITIESDATA

WSSTRUCT RHABILITIES_TABILITIESDATA
	WSDATA   oWSEMPLOYEE               AS RHABILITIES_TABILITIESEMPLOYEE
	WSDATA   oWSGAPS                   AS RHABILITIES_ARRAYOFTABILITIESGAP OPTIONAL
	WSDATA   _HEADOUT                  AS Array of String
	
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT RHABILITIES_TABILITIESDATA
	::Init()
Return Self

WSMETHOD INIT WSCLIENT RHABILITIES_TABILITIESDATA
Return

WSMETHOD CLONE WSCLIENT RHABILITIES_TABILITIESDATA
	Local oClone := RHABILITIES_TABILITIESDATA():NEW()
	oClone:oWSEMPLOYEE          := IIF(::oWSEMPLOYEE = NIL , NIL , ::oWSEMPLOYEE:Clone() )
	oClone:oWSGAPS              := IIF(::oWSGAPS = NIL , NIL , ::oWSGAPS:Clone() )
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT RHABILITIES_TABILITIESDATA
	Local oNode1
	Local oNode2
	::Init()
	If oResponse = NIL ; Return ; Endif 
	oNode1 :=  WSAdvValue( oResponse,"_EMPLOYEE","TABILITIESEMPLOYEE",NIL,"Property oWSEMPLOYEE as s0:TABILITIESEMPLOYEE on SOAP Response not found.",NIL,"O",NIL,NIL) 
	If oNode1 != NIL
		::oWSEMPLOYEE := RHABILITIES_TABILITIESEMPLOYEE():New()
		::oWSEMPLOYEE:SoapRecv(oNode1)
	EndIf
	oNode2 :=  WSAdvValue( oResponse,"_GAPS","ARRAYOFTABILITIESGAP",NIL,NIL,NIL,"O",NIL,NIL) 
	If oNode2 != NIL
		::oWSGAPS := RHABILITIES_ARRAYOFTABILITIESGAP():New()
		::oWSGAPS:SoapRecv(oNode2)
	EndIf
Return

// WSDL Data Structure TABILITIESEMPLOYEE

WSSTRUCT RHABILITIES_TABILITIESEMPLOYEE
	WSDATA   dADMISSIONDATE            AS date
	WSDATA   dBIRTHDATE                AS date
	WSDATA   cBRANCH                   AS string
	WSDATA   cCOSTCENTERCODE           AS string
	WSDATA   cCOSTCENTERDESCRIPTION    AS string
	WSDATA   cGROUPCODE                AS string
	WSDATA   cGROUPDESCRIPTION         AS string
	WSDATA   cNAME                     AS string
	WSDATA   cPOSITIONCODE             AS string
	WSDATA   cPOSITIONDESCRIPTION      AS string
	WSDATA   cREGISTRATION             AS string
	WSDATA   _HEADOUT                  AS Array of String
	
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT RHABILITIES_TABILITIESEMPLOYEE
	::Init()
Return Self

WSMETHOD INIT WSCLIENT RHABILITIES_TABILITIESEMPLOYEE
Return

WSMETHOD CLONE WSCLIENT RHABILITIES_TABILITIESEMPLOYEE
	Local oClone := RHABILITIES_TABILITIESEMPLOYEE():NEW()
	oClone:dADMISSIONDATE       := ::dADMISSIONDATE
	oClone:dBIRTHDATE           := ::dBIRTHDATE
	oClone:cBRANCH              := ::cBRANCH
	oClone:cCOSTCENTERCODE      := ::cCOSTCENTERCODE
	oClone:cCOSTCENTERDESCRIPTION := ::cCOSTCENTERDESCRIPTION
	oClone:cGROUPCODE           := ::cGROUPCODE
	oClone:cGROUPDESCRIPTION    := ::cGROUPDESCRIPTION
	oClone:cNAME                := ::cNAME
	oClone:cPOSITIONCODE        := ::cPOSITIONCODE
	oClone:cPOSITIONDESCRIPTION := ::cPOSITIONDESCRIPTION
	oClone:cREGISTRATION        := ::cREGISTRATION
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT RHABILITIES_TABILITIESEMPLOYEE
	::Init()
	If oResponse = NIL ; Return ; Endif 
	::dADMISSIONDATE     :=  WSAdvValue( oResponse,"_ADMISSIONDATE","date",NIL,"Property dADMISSIONDATE as s:date on SOAP Response not found.",NIL,"D",NIL,NIL) 
	::dBIRTHDATE         :=  WSAdvValue( oResponse,"_BIRTHDATE","date",NIL,"Property dBIRTHDATE as s:date on SOAP Response not found.",NIL,"D",NIL,NIL) 
	::cBRANCH            :=  WSAdvValue( oResponse,"_BRANCH","string",NIL,"Property cBRANCH as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::cCOSTCENTERCODE    :=  WSAdvValue( oResponse,"_COSTCENTERCODE","string",NIL,"Property cCOSTCENTERCODE as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::cCOSTCENTERDESCRIPTION :=  WSAdvValue( oResponse,"_COSTCENTERDESCRIPTION","string",NIL,"Property cCOSTCENTERDESCRIPTION as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::cGROUPCODE         :=  WSAdvValue( oResponse,"_GROUPCODE","string",NIL,"Property cGROUPCODE as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::cGROUPDESCRIPTION  :=  WSAdvValue( oResponse,"_GROUPDESCRIPTION","string",NIL,"Property cGROUPDESCRIPTION as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::cNAME              :=  WSAdvValue( oResponse,"_NAME","string",NIL,"Property cNAME as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::cPOSITIONCODE      :=  WSAdvValue( oResponse,"_POSITIONCODE","string",NIL,"Property cPOSITIONCODE as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::cPOSITIONDESCRIPTION :=  WSAdvValue( oResponse,"_POSITIONDESCRIPTION","string",NIL,"Property cPOSITIONDESCRIPTION as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::cREGISTRATION      :=  WSAdvValue( oResponse,"_REGISTRATION","string",NIL,"Property cREGISTRATION as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
Return

// WSDL Data Structure ARRAYOFTABILITIESGAP

WSSTRUCT RHABILITIES_ARRAYOFTABILITIESGAP
	WSDATA   oWSTABILITIESGAP          AS RHABILITIES_TABILITIESGAP OPTIONAL
	WSDATA   _HEADOUT                  AS Array of String
	
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT RHABILITIES_ARRAYOFTABILITIESGAP
	::Init()
Return Self

WSMETHOD INIT WSCLIENT RHABILITIES_ARRAYOFTABILITIESGAP
	::oWSTABILITIESGAP     := {} // Array Of  RHABILITIES_TABILITIESGAP():New()
Return

WSMETHOD CLONE WSCLIENT RHABILITIES_ARRAYOFTABILITIESGAP
	Local oClone := RHABILITIES_ARRAYOFTABILITIESGAP():NEW()
	oClone:oWSTABILITIESGAP := NIL
	If ::oWSTABILITIESGAP <> NIL 
		oClone:oWSTABILITIESGAP := {}
		aEval( ::oWSTABILITIESGAP , { |x| aadd( oClone:oWSTABILITIESGAP , x:Clone() ) } )
	Endif 
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT RHABILITIES_ARRAYOFTABILITIESGAP
	Local nRElem1, oNodes1, nTElem1
	::Init()
	If oResponse = NIL ; Return ; Endif 
	oNodes1 :=  WSAdvValue( oResponse,"_TABILITIESGAP","TABILITIESGAP",{},NIL,.T.,"O",NIL,NIL) 
	nTElem1 := len(oNodes1)
	For nRElem1 := 1 to nTElem1 
		If !WSIsNilNode( oNodes1[nRElem1] )
			aadd(::oWSTABILITIESGAP , RHABILITIES_TABILITIESGAP():New() )
			::oWSTABILITIESGAP[len(::oWSTABILITIESGAP)]:SoapRecv(oNodes1[nRElem1])
		Endif
	Next
Return

// WSDL Data Structure TABILITIESGAP

WSSTRUCT RHABILITIES_TABILITIESGAP
	WSDATA   cABILITYCODE              AS string
	WSDATA   cABILITYDESCRIPTION       AS string
	WSDATA   cEMPLOYEELEVELCODE        AS string
	WSDATA   cEMPLOYEELEVELDESCRIPTION AS string
	WSDATA   nEMPLOYEESCORE            AS float
	WSDATA   cPOSITIONLEVELCODE        AS string
	WSDATA   cPOSITIONLEVELDESCRIPTION AS string
	WSDATA   nPOSITIONSCORE            AS float
	WSDATA   _HEADOUT                  AS Array of String
	
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT RHABILITIES_TABILITIESGAP
	::Init()
Return Self

WSMETHOD INIT WSCLIENT RHABILITIES_TABILITIESGAP
Return

WSMETHOD CLONE WSCLIENT RHABILITIES_TABILITIESGAP
	Local oClone := RHABILITIES_TABILITIESGAP():NEW()
	oClone:cABILITYCODE         := ::cABILITYCODE
	oClone:cABILITYDESCRIPTION  := ::cABILITYDESCRIPTION
	oClone:cEMPLOYEELEVELCODE   := ::cEMPLOYEELEVELCODE
	oClone:cEMPLOYEELEVELDESCRIPTION := ::cEMPLOYEELEVELDESCRIPTION
	oClone:nEMPLOYEESCORE       := ::nEMPLOYEESCORE
	oClone:cPOSITIONLEVELCODE   := ::cPOSITIONLEVELCODE
	oClone:cPOSITIONLEVELDESCRIPTION := ::cPOSITIONLEVELDESCRIPTION
	oClone:nPOSITIONSCORE       := ::nPOSITIONSCORE
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT RHABILITIES_TABILITIESGAP
	::Init()
	If oResponse = NIL ; Return ; Endif 
	::cABILITYCODE       :=  WSAdvValue( oResponse,"_ABILITYCODE","string",NIL,"Property cABILITYCODE as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::cABILITYDESCRIPTION :=  WSAdvValue( oResponse,"_ABILITYDESCRIPTION","string",NIL,"Property cABILITYDESCRIPTION as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::cEMPLOYEELEVELCODE :=  WSAdvValue( oResponse,"_EMPLOYEELEVELCODE","string",NIL,"Property cEMPLOYEELEVELCODE as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::cEMPLOYEELEVELDESCRIPTION :=  WSAdvValue( oResponse,"_EMPLOYEELEVELDESCRIPTION","string",NIL,"Property cEMPLOYEELEVELDESCRIPTION as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::nEMPLOYEESCORE     :=  WSAdvValue( oResponse,"_EMPLOYEESCORE","float",NIL,"Property nEMPLOYEESCORE as s:float on SOAP Response not found.",NIL,"N",NIL,NIL) 
	::cPOSITIONLEVELCODE :=  WSAdvValue( oResponse,"_POSITIONLEVELCODE","string",NIL,"Property cPOSITIONLEVELCODE as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::cPOSITIONLEVELDESCRIPTION :=  WSAdvValue( oResponse,"_POSITIONLEVELDESCRIPTION","string",NIL,"Property cPOSITIONLEVELDESCRIPTION as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::nPOSITIONSCORE     :=  WSAdvValue( oResponse,"_POSITIONSCORE","float",NIL,"Property nPOSITIONSCORE as s:float on SOAP Response not found.",NIL,"N",NIL,NIL) 
Return


