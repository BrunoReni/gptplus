#INCLUDE "protheus.ch"
#INCLUDE "apwebsrv.ch"

/* ===============================================================================
WSDL Location    http://localhost:8059/ws/MTCUSTOMERPRODUCT.apw?WSDL
Gerado em        12/14/20 10:26:26
Observações      Código-Fonte gerado por ADVPL WSDL Client 1.120703
                 Alterações neste arquivo podem causar funcionamento incorreto
                 e serão perdidas caso o código-fonte seja gerado novamente.
=============================================================================== */

User Function _SKNEINX ; Return  // "dummy" function - Internal Use 

/* -------------------------------------------------------------------------------
WSDL Service WSMTCUSTOMERPRODUCT
------------------------------------------------------------------------------- */

WSCLIENT WSMTCUSTOMERPRODUCT

	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD RESET
	WSMETHOD CLONE
	WSMETHOD BRWEXTERNALINVOICE
	WSMETHOD GETCATALOG
	WSMETHOD GETDISCOUNT
	WSMETHOD GETEXTERNALINVENTORY
	WSMETHOD GETHEADER
	WSMETHOD GETIMAGE
	WSMETHOD GETINVENTORY
	WSMETHOD GETPRICE
	WSMETHOD GETSTOCK
	WSMETHOD GETTYPEOFPRODUCT

	WSDATA   _URL                      AS String
	WSDATA   _HEADOUT                  AS Array of String
	WSDATA   _COOKIES                  AS Array of String
	WSDATA   cUSERCODE                 AS string
	WSDATA   cCUSTOMERID               AS string
	WSDATA   cPRODUCTCODE              AS string
	WSDATA   dREGISTERDATEFROM         AS date
	WSDATA   dREGISTERDATETO           AS date
	WSDATA   cTYPEOFMOVEMENT           AS string
	WSDATA   nPAGELEN                  AS integer
	WSDATA   nPAGEFIRST                AS integer
	WSDATA   cQUERYADDWHERE            AS string
	WSDATA   oWSBRWEXTERNALINVOICERESULT AS MTCUSTOMERPRODUCT_ARRAYOFEXTERNALINVOICEVIEW
	WSDATA   cTYPEOFPRODUCTIN          AS string
	WSDATA   cGROUPOFPRODUCTIN         AS string
	WSDATA   cPRODUCTCODELIKE          AS string
	WSDATA   cDESCRIPTIONLIKE          AS string
	WSDATA   cINDEXKEY                 AS string
	WSDATA   oWSGETCATALOGRESULT       AS MTCUSTOMERPRODUCT_ARRAYOFPRODUCTVIEW
	WSDATA   cPRICETABLECODE           AS string
	WSDATA   nQUANTITY                 AS float
	WSDATA   cPAYMENTPLANCODE          AS string
	WSDATA   nDISCOUNTTYPE             AS integer
	WSDATA   nBASEPRICE                AS float
	WSDATA   nGETDISCOUNTRESULT        AS float
	WSDATA   oWSGETEXTERNALINVENTORYRESULT AS MTCUSTOMERPRODUCT_ARRAYOFINVENTORYCUSTOMERVIEW
	WSDATA   cHEADERTYPE               AS string
	WSDATA   oWSGETHEADERRESULT        AS MTCUSTOMERPRODUCT_ARRAYOFBRWHEADER
	WSDATA   cGETIMAGERESULT           AS base64Binary
	WSDATA   dINVENTORYDATE            AS date
	WSDATA   nTYPEOFINVENTORY          AS integer
	WSDATA   oWSGETINVENTORYRESULT     AS MTCUSTOMERPRODUCT_ARRAYOFINVENTORYVIEW
	WSDATA   oWSGETPRICERESULT         AS MTCUSTOMERPRODUCT_ARRAYOFPRICEVIEW
	WSDATA   cWAREHOUSE                AS string
	WSDATA   oWSGETSTOCKRESULT         AS MTCUSTOMERPRODUCT_ARRAYOFINVENTORYVIEW
	WSDATA   oWSGETTYPEOFPRODUCTRESULT AS MTCUSTOMERPRODUCT_ARRAYOFGENERICSTRUCT

ENDWSCLIENT

WSMETHOD NEW WSCLIENT WSMTCUSTOMERPRODUCT
::Init()
If !FindFunction("XMLCHILDEX")
	UserException("O Código-Fonte Client atual requer os executáveis do Protheus Build [7.00.191205P-20201009] ou superior. Atualize o Protheus ou gere o Código-Fonte novamente utilizando o Build atual.")
EndIf
Return Self

WSMETHOD INIT WSCLIENT WSMTCUSTOMERPRODUCT
	::oWSBRWEXTERNALINVOICERESULT := MTCUSTOMERPRODUCT_ARRAYOFEXTERNALINVOICEVIEW():New()
	::oWSGETCATALOGRESULT := MTCUSTOMERPRODUCT_ARRAYOFPRODUCTVIEW():New()
	::oWSGETEXTERNALINVENTORYRESULT := MTCUSTOMERPRODUCT_ARRAYOFINVENTORYCUSTOMERVIEW():New()
	::oWSGETHEADERRESULT := MTCUSTOMERPRODUCT_ARRAYOFBRWHEADER():New()
	::oWSGETINVENTORYRESULT := MTCUSTOMERPRODUCT_ARRAYOFINVENTORYVIEW():New()
	::oWSGETPRICERESULT  := MTCUSTOMERPRODUCT_ARRAYOFPRICEVIEW():New()
	::oWSGETSTOCKRESULT  := MTCUSTOMERPRODUCT_ARRAYOFINVENTORYVIEW():New()
	::oWSGETTYPEOFPRODUCTRESULT := MTCUSTOMERPRODUCT_ARRAYOFGENERICSTRUCT():New()
Return

WSMETHOD RESET WSCLIENT WSMTCUSTOMERPRODUCT
	::cUSERCODE          := NIL 
	::cCUSTOMERID        := NIL 
	::cPRODUCTCODE       := NIL 
	::dREGISTERDATEFROM  := NIL 
	::dREGISTERDATETO    := NIL 
	::cTYPEOFMOVEMENT    := NIL 
	::nPAGELEN           := NIL 
	::nPAGEFIRST         := NIL 
	::cQUERYADDWHERE     := NIL 
	::oWSBRWEXTERNALINVOICERESULT := NIL 
	::cTYPEOFPRODUCTIN   := NIL 
	::cGROUPOFPRODUCTIN  := NIL 
	::cPRODUCTCODELIKE   := NIL 
	::cDESCRIPTIONLIKE   := NIL 
	::cINDEXKEY          := NIL 
	::oWSGETCATALOGRESULT := NIL 
	::cPRICETABLECODE    := NIL 
	::nQUANTITY          := NIL 
	::cPAYMENTPLANCODE   := NIL 
	::nDISCOUNTTYPE      := NIL 
	::nBASEPRICE         := NIL 
	::nGETDISCOUNTRESULT := NIL 
	::oWSGETEXTERNALINVENTORYRESULT := NIL 
	::cHEADERTYPE        := NIL 
	::oWSGETHEADERRESULT := NIL 
	::cGETIMAGERESULT    := NIL 
	::dINVENTORYDATE     := NIL 
	::nTYPEOFINVENTORY   := NIL 
	::oWSGETINVENTORYRESULT := NIL 
	::oWSGETPRICERESULT  := NIL 
	::cWAREHOUSE         := NIL 
	::oWSGETSTOCKRESULT  := NIL 
	::oWSGETTYPEOFPRODUCTRESULT := NIL 
	::Init()
Return

WSMETHOD CLONE WSCLIENT WSMTCUSTOMERPRODUCT
Local oClone := WSMTCUSTOMERPRODUCT():New()
	oClone:_URL          := ::_URL 
	oClone:cUSERCODE     := ::cUSERCODE
	oClone:cCUSTOMERID   := ::cCUSTOMERID
	oClone:cPRODUCTCODE  := ::cPRODUCTCODE
	oClone:dREGISTERDATEFROM := ::dREGISTERDATEFROM
	oClone:dREGISTERDATETO := ::dREGISTERDATETO
	oClone:cTYPEOFMOVEMENT := ::cTYPEOFMOVEMENT
	oClone:nPAGELEN      := ::nPAGELEN
	oClone:nPAGEFIRST    := ::nPAGEFIRST
	oClone:cQUERYADDWHERE := ::cQUERYADDWHERE
	oClone:oWSBRWEXTERNALINVOICERESULT :=  IIF(::oWSBRWEXTERNALINVOICERESULT = NIL , NIL ,::oWSBRWEXTERNALINVOICERESULT:Clone() )
	oClone:cTYPEOFPRODUCTIN := ::cTYPEOFPRODUCTIN
	oClone:cGROUPOFPRODUCTIN := ::cGROUPOFPRODUCTIN
	oClone:cPRODUCTCODELIKE := ::cPRODUCTCODELIKE
	oClone:cDESCRIPTIONLIKE := ::cDESCRIPTIONLIKE
	oClone:cINDEXKEY     := ::cINDEXKEY
	oClone:oWSGETCATALOGRESULT :=  IIF(::oWSGETCATALOGRESULT = NIL , NIL ,::oWSGETCATALOGRESULT:Clone() )
	oClone:cPRICETABLECODE := ::cPRICETABLECODE
	oClone:nQUANTITY     := ::nQUANTITY
	oClone:cPAYMENTPLANCODE := ::cPAYMENTPLANCODE
	oClone:nDISCOUNTTYPE := ::nDISCOUNTTYPE
	oClone:nBASEPRICE    := ::nBASEPRICE
	oClone:nGETDISCOUNTRESULT := ::nGETDISCOUNTRESULT
	oClone:oWSGETEXTERNALINVENTORYRESULT :=  IIF(::oWSGETEXTERNALINVENTORYRESULT = NIL , NIL ,::oWSGETEXTERNALINVENTORYRESULT:Clone() )
	oClone:cHEADERTYPE   := ::cHEADERTYPE
	oClone:oWSGETHEADERRESULT :=  IIF(::oWSGETHEADERRESULT = NIL , NIL ,::oWSGETHEADERRESULT:Clone() )
	oClone:cGETIMAGERESULT := ::cGETIMAGERESULT
	oClone:dINVENTORYDATE := ::dINVENTORYDATE
	oClone:nTYPEOFINVENTORY := ::nTYPEOFINVENTORY
	oClone:oWSGETINVENTORYRESULT :=  IIF(::oWSGETINVENTORYRESULT = NIL , NIL ,::oWSGETINVENTORYRESULT:Clone() )
	oClone:oWSGETPRICERESULT :=  IIF(::oWSGETPRICERESULT = NIL , NIL ,::oWSGETPRICERESULT:Clone() )
	oClone:cWAREHOUSE    := ::cWAREHOUSE
	oClone:oWSGETSTOCKRESULT :=  IIF(::oWSGETSTOCKRESULT = NIL , NIL ,::oWSGETSTOCKRESULT:Clone() )
	oClone:oWSGETTYPEOFPRODUCTRESULT :=  IIF(::oWSGETTYPEOFPRODUCTRESULT = NIL , NIL ,::oWSGETTYPEOFPRODUCTRESULT:Clone() )
Return oClone

// WSDL Method BRWEXTERNALINVOICE of Service WSMTCUSTOMERPRODUCT

WSMETHOD BRWEXTERNALINVOICE WSSEND cUSERCODE,cCUSTOMERID,cPRODUCTCODE,dREGISTERDATEFROM,dREGISTERDATETO,cTYPEOFMOVEMENT,nPAGELEN,nPAGEFIRST,cQUERYADDWHERE WSRECEIVE oWSBRWEXTERNALINVOICERESULT WSCLIENT WSMTCUSTOMERPRODUCT
Local cSoap := "" , oXmlRet

BEGIN WSMETHOD

cSoap += '<BRWEXTERNALINVOICE xmlns="http://webservices.microsiga.com.br/mtcustomerproduct.apw">'
cSoap += WSSoapValue("USERCODE", ::cUSERCODE, cUSERCODE , "string", .T. , .F., 0 , NIL, .F.,.F.) 
cSoap += WSSoapValue("CUSTOMERID", ::cCUSTOMERID, cCUSTOMERID , "string", .T. , .F., 0 , NIL, .F.,.F.) 
cSoap += WSSoapValue("PRODUCTCODE", ::cPRODUCTCODE, cPRODUCTCODE , "string", .T. , .F., 0 , NIL, .F.,.F.) 
cSoap += WSSoapValue("REGISTERDATEFROM", ::dREGISTERDATEFROM, dREGISTERDATEFROM , "date", .F. , .F., 0 , NIL, .F.,.F.) 
cSoap += WSSoapValue("REGISTERDATETO", ::dREGISTERDATETO, dREGISTERDATETO , "date", .F. , .F., 0 , NIL, .F.,.F.) 
cSoap += WSSoapValue("TYPEOFMOVEMENT", ::cTYPEOFMOVEMENT, cTYPEOFMOVEMENT , "string", .T. , .F., 0 , NIL, .F.,.F.) 
cSoap += WSSoapValue("PAGELEN", ::nPAGELEN, nPAGELEN , "integer", .F. , .F., 0 , NIL, .F.,.F.) 
cSoap += WSSoapValue("PAGEFIRST", ::nPAGEFIRST, nPAGEFIRST , "integer", .F. , .F., 0 , NIL, .F.,.F.) 
cSoap += WSSoapValue("QUERYADDWHERE", ::cQUERYADDWHERE, cQUERYADDWHERE , "string", .F. , .F., 0 , NIL, .F.,.F.) 
cSoap += "</BRWEXTERNALINVOICE>"

oXmlRet := SvcSoapCall(Self,cSoap,; 
	"http://webservices.microsiga.com.br/mtcustomerproduct.apw/BRWEXTERNALINVOICE",; 
	"DOCUMENT","http://webservices.microsiga.com.br/mtcustomerproduct.apw",,"1.031217",; 
	"http://localhost:8059/ws/MTCUSTOMERPRODUCT.apw")

::Init()
::oWSBRWEXTERNALINVOICERESULT:SoapRecv( WSAdvValue( oXmlRet,"_BRWEXTERNALINVOICERESPONSE:_BRWEXTERNALINVOICERESULT","ARRAYOFEXTERNALINVOICEVIEW",NIL,NIL,NIL,NIL,NIL,NIL) )

END WSMETHOD

oXmlRet := NIL
Return .T.

// WSDL Method GETCATALOG of Service WSMTCUSTOMERPRODUCT

WSMETHOD GETCATALOG WSSEND cUSERCODE,cCUSTOMERID,cTYPEOFPRODUCTIN,cGROUPOFPRODUCTIN,cPRODUCTCODELIKE,cDESCRIPTIONLIKE,nPAGELEN,nPAGEFIRST,cQUERYADDWHERE,cINDEXKEY WSRECEIVE oWSGETCATALOGRESULT WSCLIENT WSMTCUSTOMERPRODUCT
Local cSoap := "" , oXmlRet

BEGIN WSMETHOD

cSoap += '<GETCATALOG xmlns="http://webservices.microsiga.com.br/mtcustomerproduct.apw">'
cSoap += WSSoapValue("USERCODE", ::cUSERCODE, cUSERCODE , "string", .T. , .F., 0 , NIL, .F.,.F.) 
cSoap += WSSoapValue("CUSTOMERID", ::cCUSTOMERID, cCUSTOMERID , "string", .T. , .F., 0 , NIL, .F.,.F.) 
cSoap += WSSoapValue("TYPEOFPRODUCTIN", ::cTYPEOFPRODUCTIN, cTYPEOFPRODUCTIN , "string", .F. , .F., 0 , NIL, .F.,.F.) 
cSoap += WSSoapValue("GROUPOFPRODUCTIN", ::cGROUPOFPRODUCTIN, cGROUPOFPRODUCTIN , "string", .F. , .F., 0 , NIL, .F.,.F.) 
cSoap += WSSoapValue("PRODUCTCODELIKE", ::cPRODUCTCODELIKE, cPRODUCTCODELIKE , "string", .F. , .F., 0 , NIL, .F.,.F.) 
cSoap += WSSoapValue("DESCRIPTIONLIKE", ::cDESCRIPTIONLIKE, cDESCRIPTIONLIKE , "string", .F. , .F., 0 , NIL, .F.,.F.) 
cSoap += WSSoapValue("PAGELEN", ::nPAGELEN, nPAGELEN , "integer", .F. , .F., 0 , NIL, .F.,.F.) 
cSoap += WSSoapValue("PAGEFIRST", ::nPAGEFIRST, nPAGEFIRST , "integer", .F. , .F., 0 , NIL, .F.,.F.) 
cSoap += WSSoapValue("QUERYADDWHERE", ::cQUERYADDWHERE, cQUERYADDWHERE , "string", .F. , .F., 0 , NIL, .F.,.F.) 
cSoap += WSSoapValue("INDEXKEY", ::cINDEXKEY, cINDEXKEY , "string", .F. , .F., 0 , NIL, .F.,.F.) 
cSoap += "</GETCATALOG>"

oXmlRet := SvcSoapCall(Self,cSoap,; 
	"http://webservices.microsiga.com.br/mtcustomerproduct.apw/GETCATALOG",; 
	"DOCUMENT","http://webservices.microsiga.com.br/mtcustomerproduct.apw",,"1.031217",; 
	"http://localhost:8059/ws/MTCUSTOMERPRODUCT.apw")

::Init()
::oWSGETCATALOGRESULT:SoapRecv( WSAdvValue( oXmlRet,"_GETCATALOGRESPONSE:_GETCATALOGRESULT","ARRAYOFPRODUCTVIEW",NIL,NIL,NIL,NIL,NIL,NIL) )

END WSMETHOD

oXmlRet := NIL
Return .T.

// WSDL Method GETDISCOUNT of Service WSMTCUSTOMERPRODUCT

WSMETHOD GETDISCOUNT WSSEND cUSERCODE,cCUSTOMERID,cPRODUCTCODE,cPRICETABLECODE,nQUANTITY,cPAYMENTPLANCODE,nDISCOUNTTYPE,nBASEPRICE WSRECEIVE nGETDISCOUNTRESULT WSCLIENT WSMTCUSTOMERPRODUCT
Local cSoap := "" , oXmlRet

BEGIN WSMETHOD

cSoap += '<GETDISCOUNT xmlns="http://webservices.microsiga.com.br/mtcustomerproduct.apw">'
cSoap += WSSoapValue("USERCODE", ::cUSERCODE, cUSERCODE , "string", .T. , .F., 0 , NIL, .F.,.F.) 
cSoap += WSSoapValue("CUSTOMERID", ::cCUSTOMERID, cCUSTOMERID , "string", .T. , .F., 0 , NIL, .F.,.F.) 
cSoap += WSSoapValue("PRODUCTCODE", ::cPRODUCTCODE, cPRODUCTCODE , "string", .T. , .F., 0 , NIL, .F.,.F.) 
cSoap += WSSoapValue("PRICETABLECODE", ::cPRICETABLECODE, cPRICETABLECODE , "string", .T. , .F., 0 , NIL, .F.,.F.) 
cSoap += WSSoapValue("QUANTITY", ::nQUANTITY, nQUANTITY , "float", .T. , .F., 0 , NIL, .F.,.F.) 
cSoap += WSSoapValue("PAYMENTPLANCODE", ::cPAYMENTPLANCODE, cPAYMENTPLANCODE , "string", .T. , .F., 0 , NIL, .F.,.F.) 
cSoap += WSSoapValue("DISCOUNTTYPE", ::nDISCOUNTTYPE, nDISCOUNTTYPE , "integer", .T. , .F., 0 , NIL, .F.,.F.) 
cSoap += WSSoapValue("BASEPRICE", ::nBASEPRICE, nBASEPRICE , "float", .T. , .F., 0 , NIL, .F.,.F.) 
cSoap += "</GETDISCOUNT>"

oXmlRet := SvcSoapCall(Self,cSoap,; 
	"http://webservices.microsiga.com.br/mtcustomerproduct.apw/GETDISCOUNT",; 
	"DOCUMENT","http://webservices.microsiga.com.br/mtcustomerproduct.apw",,"1.031217",; 
	"http://localhost:8059/ws/MTCUSTOMERPRODUCT.apw")

::Init()
::nGETDISCOUNTRESULT :=  WSAdvValue( oXmlRet,"_GETDISCOUNTRESPONSE:_GETDISCOUNTRESULT:TEXT","float",NIL,NIL,NIL,NIL,NIL,NIL) 

END WSMETHOD

oXmlRet := NIL
Return .T.

// WSDL Method GETEXTERNALINVENTORY of Service WSMTCUSTOMERPRODUCT

WSMETHOD GETEXTERNALINVENTORY WSSEND cUSERCODE,cCUSTOMERID,cPRODUCTCODE WSRECEIVE oWSGETEXTERNALINVENTORYRESULT WSCLIENT WSMTCUSTOMERPRODUCT
Local cSoap := "" , oXmlRet

BEGIN WSMETHOD

cSoap += '<GETEXTERNALINVENTORY xmlns="http://webservices.microsiga.com.br/mtcustomerproduct.apw">'
cSoap += WSSoapValue("USERCODE", ::cUSERCODE, cUSERCODE , "string", .T. , .F., 0 , NIL, .F.,.F.) 
cSoap += WSSoapValue("CUSTOMERID", ::cCUSTOMERID, cCUSTOMERID , "string", .T. , .F., 0 , NIL, .F.,.F.) 
cSoap += WSSoapValue("PRODUCTCODE", ::cPRODUCTCODE, cPRODUCTCODE , "string", .T. , .F., 0 , NIL, .F.,.F.) 
cSoap += "</GETEXTERNALINVENTORY>"

oXmlRet := SvcSoapCall(Self,cSoap,; 
	"http://webservices.microsiga.com.br/mtcustomerproduct.apw/GETEXTERNALINVENTORY",; 
	"DOCUMENT","http://webservices.microsiga.com.br/mtcustomerproduct.apw",,"1.031217",; 
	"http://localhost:8059/ws/MTCUSTOMERPRODUCT.apw")

::Init()
::oWSGETEXTERNALINVENTORYRESULT:SoapRecv( WSAdvValue( oXmlRet,"_GETEXTERNALINVENTORYRESPONSE:_GETEXTERNALINVENTORYRESULT","ARRAYOFINVENTORYCUSTOMERVIEW",NIL,NIL,NIL,NIL,NIL,NIL) )

END WSMETHOD

oXmlRet := NIL
Return .T.

// WSDL Method GETHEADER of Service WSMTCUSTOMERPRODUCT

WSMETHOD GETHEADER WSSEND cHEADERTYPE WSRECEIVE oWSGETHEADERRESULT WSCLIENT WSMTCUSTOMERPRODUCT
Local cSoap := "" , oXmlRet

BEGIN WSMETHOD

cSoap += '<GETHEADER xmlns="http://webservices.microsiga.com.br/mtcustomerproduct.apw">'
cSoap += WSSoapValue("HEADERTYPE", ::cHEADERTYPE, cHEADERTYPE , "string", .T. , .F., 0 , NIL, .F.,.F.) 
cSoap += "</GETHEADER>"

oXmlRet := SvcSoapCall(Self,cSoap,; 
	"http://webservices.microsiga.com.br/mtcustomerproduct.apw/GETHEADER",; 
	"DOCUMENT","http://webservices.microsiga.com.br/mtcustomerproduct.apw",,"1.031217",; 
	"http://localhost:8059/ws/MTCUSTOMERPRODUCT.apw")

::Init()
::oWSGETHEADERRESULT:SoapRecv( WSAdvValue( oXmlRet,"_GETHEADERRESPONSE:_GETHEADERRESULT","ARRAYOFBRWHEADER",NIL,NIL,NIL,NIL,NIL,NIL) )

END WSMETHOD

oXmlRet := NIL
Return .T.

// WSDL Method GETIMAGE of Service WSMTCUSTOMERPRODUCT

WSMETHOD GETIMAGE WSSEND cUSERCODE,cCUSTOMERID,cPRODUCTCODE WSRECEIVE cGETIMAGERESULT WSCLIENT WSMTCUSTOMERPRODUCT
Local cSoap := "" , oXmlRet

BEGIN WSMETHOD

cSoap += '<GETIMAGE xmlns="http://webservices.microsiga.com.br/mtcustomerproduct.apw">'
cSoap += WSSoapValue("USERCODE", ::cUSERCODE, cUSERCODE , "string", .T. , .F., 0 , NIL, .F.,.F.) 
cSoap += WSSoapValue("CUSTOMERID", ::cCUSTOMERID, cCUSTOMERID , "string", .T. , .F., 0 , NIL, .F.,.F.) 
cSoap += WSSoapValue("PRODUCTCODE", ::cPRODUCTCODE, cPRODUCTCODE , "string", .T. , .F., 0 , NIL, .F.,.F.) 
cSoap += "</GETIMAGE>"

oXmlRet := SvcSoapCall(Self,cSoap,; 
	"http://webservices.microsiga.com.br/mtcustomerproduct.apw/GETIMAGE",; 
	"DOCUMENT","http://webservices.microsiga.com.br/mtcustomerproduct.apw",,"1.031217",; 
	"http://localhost:8059/ws/MTCUSTOMERPRODUCT.apw")

::Init()
::cGETIMAGERESULT    :=  WSAdvValue( oXmlRet,"_GETIMAGERESPONSE:_GETIMAGERESULT:TEXT","base64Binary",NIL,NIL,NIL,NIL,NIL,NIL) 

END WSMETHOD

oXmlRet := NIL
Return .T.

// WSDL Method GETINVENTORY of Service WSMTCUSTOMERPRODUCT

WSMETHOD GETINVENTORY WSSEND cUSERCODE,cCUSTOMERID,cPRODUCTCODE,dINVENTORYDATE,nTYPEOFINVENTORY,cQUERYADDWHERE WSRECEIVE oWSGETINVENTORYRESULT WSCLIENT WSMTCUSTOMERPRODUCT
Local cSoap := "" , oXmlRet

BEGIN WSMETHOD

cSoap += '<GETINVENTORY xmlns="http://webservices.microsiga.com.br/mtcustomerproduct.apw">'
cSoap += WSSoapValue("USERCODE", ::cUSERCODE, cUSERCODE , "string", .T. , .F., 0 , NIL, .F.,.F.) 
cSoap += WSSoapValue("CUSTOMERID", ::cCUSTOMERID, cCUSTOMERID , "string", .T. , .F., 0 , NIL, .F.,.F.) 
cSoap += WSSoapValue("PRODUCTCODE", ::cPRODUCTCODE, cPRODUCTCODE , "string", .T. , .F., 0 , NIL, .F.,.F.) 
cSoap += WSSoapValue("INVENTORYDATE", ::dINVENTORYDATE, dINVENTORYDATE , "date", .F. , .F., 0 , NIL, .F.,.F.) 
cSoap += WSSoapValue("TYPEOFINVENTORY", ::nTYPEOFINVENTORY, nTYPEOFINVENTORY , "integer", .F. , .F., 0 , NIL, .F.,.F.) 
cSoap += WSSoapValue("QUERYADDWHERE", ::cQUERYADDWHERE, cQUERYADDWHERE , "string", .F. , .F., 0 , NIL, .F.,.F.) 
cSoap += "</GETINVENTORY>"

oXmlRet := SvcSoapCall(Self,cSoap,; 
	"http://webservices.microsiga.com.br/mtcustomerproduct.apw/GETINVENTORY",; 
	"DOCUMENT","http://webservices.microsiga.com.br/mtcustomerproduct.apw",,"1.031217",; 
	"http://localhost:8059/ws/MTCUSTOMERPRODUCT.apw")

::Init()
::oWSGETINVENTORYRESULT:SoapRecv( WSAdvValue( oXmlRet,"_GETINVENTORYRESPONSE:_GETINVENTORYRESULT","ARRAYOFINVENTORYVIEW",NIL,NIL,NIL,NIL,NIL,NIL) )

END WSMETHOD

oXmlRet := NIL
Return .T.

// WSDL Method GETPRICE of Service WSMTCUSTOMERPRODUCT

WSMETHOD GETPRICE WSSEND cUSERCODE,cCUSTOMERID,cPRODUCTCODE,cQUERYADDWHERE WSRECEIVE oWSGETPRICERESULT WSCLIENT WSMTCUSTOMERPRODUCT
Local cSoap := "" , oXmlRet

BEGIN WSMETHOD

cSoap += '<GETPRICE xmlns="http://webservices.microsiga.com.br/mtcustomerproduct.apw">'
cSoap += WSSoapValue("USERCODE", ::cUSERCODE, cUSERCODE , "string", .T. , .F., 0 , NIL, .F.,.F.) 
cSoap += WSSoapValue("CUSTOMERID", ::cCUSTOMERID, cCUSTOMERID , "string", .T. , .F., 0 , NIL, .F.,.F.) 
cSoap += WSSoapValue("PRODUCTCODE", ::cPRODUCTCODE, cPRODUCTCODE , "string", .T. , .F., 0 , NIL, .F.,.F.) 
cSoap += WSSoapValue("QUERYADDWHERE", ::cQUERYADDWHERE, cQUERYADDWHERE , "string", .F. , .F., 0 , NIL, .F.,.F.) 
cSoap += "</GETPRICE>"

oXmlRet := SvcSoapCall(Self,cSoap,; 
	"http://webservices.microsiga.com.br/mtcustomerproduct.apw/GETPRICE",; 
	"DOCUMENT","http://webservices.microsiga.com.br/mtcustomerproduct.apw",,"1.031217",; 
	"http://localhost:8059/ws/MTCUSTOMERPRODUCT.apw")

::Init()
::oWSGETPRICERESULT:SoapRecv( WSAdvValue( oXmlRet,"_GETPRICERESPONSE:_GETPRICERESULT","ARRAYOFPRICEVIEW",NIL,NIL,NIL,NIL,NIL,NIL) )

END WSMETHOD

oXmlRet := NIL
Return .T.

// WSDL Method GETSTOCK of Service WSMTCUSTOMERPRODUCT

WSMETHOD GETSTOCK WSSEND cUSERCODE,cCUSTOMERID,cPRODUCTCODE,cWAREHOUSE WSRECEIVE oWSGETSTOCKRESULT WSCLIENT WSMTCUSTOMERPRODUCT
Local cSoap := "" , oXmlRet

BEGIN WSMETHOD

cSoap += '<GETSTOCK xmlns="http://webservices.microsiga.com.br/mtcustomerproduct.apw">'
cSoap += WSSoapValue("USERCODE", ::cUSERCODE, cUSERCODE , "string", .T. , .F., 0 , NIL, .F.,.F.) 
cSoap += WSSoapValue("CUSTOMERID", ::cCUSTOMERID, cCUSTOMERID , "string", .T. , .F., 0 , NIL, .F.,.F.) 
cSoap += WSSoapValue("PRODUCTCODE", ::cPRODUCTCODE, cPRODUCTCODE , "string", .T. , .F., 0 , NIL, .F.,.F.) 
cSoap += WSSoapValue("WAREHOUSE", ::cWAREHOUSE, cWAREHOUSE , "string", .T. , .F., 0 , NIL, .F.,.F.) 
cSoap += "</GETSTOCK>"

oXmlRet := SvcSoapCall(Self,cSoap,; 
	"http://webservices.microsiga.com.br/mtcustomerproduct.apw/GETSTOCK",; 
	"DOCUMENT","http://webservices.microsiga.com.br/mtcustomerproduct.apw",,"1.031217",; 
	"http://localhost:8059/ws/MTCUSTOMERPRODUCT.apw")

::Init()
::oWSGETSTOCKRESULT:SoapRecv( WSAdvValue( oXmlRet,"_GETSTOCKRESPONSE:_GETSTOCKRESULT","ARRAYOFINVENTORYVIEW",NIL,NIL,NIL,NIL,NIL,NIL) )

END WSMETHOD

oXmlRet := NIL
Return .T.

// WSDL Method GETTYPEOFPRODUCT of Service WSMTCUSTOMERPRODUCT

WSMETHOD GETTYPEOFPRODUCT WSSEND cUSERCODE WSRECEIVE oWSGETTYPEOFPRODUCTRESULT WSCLIENT WSMTCUSTOMERPRODUCT
Local cSoap := "" , oXmlRet

BEGIN WSMETHOD

cSoap += '<GETTYPEOFPRODUCT xmlns="http://webservices.microsiga.com.br/mtcustomerproduct.apw">'
cSoap += WSSoapValue("USERCODE", ::cUSERCODE, cUSERCODE , "string", .T. , .F., 0 , NIL, .F.,.F.) 
cSoap += "</GETTYPEOFPRODUCT>"

oXmlRet := SvcSoapCall(Self,cSoap,; 
	"http://webservices.microsiga.com.br/mtcustomerproduct.apw/GETTYPEOFPRODUCT",; 
	"DOCUMENT","http://webservices.microsiga.com.br/mtcustomerproduct.apw",,"1.031217",; 
	"http://localhost:8059/ws/MTCUSTOMERPRODUCT.apw")

::Init()
::oWSGETTYPEOFPRODUCTRESULT:SoapRecv( WSAdvValue( oXmlRet,"_GETTYPEOFPRODUCTRESPONSE:_GETTYPEOFPRODUCTRESULT","ARRAYOFGENERICSTRUCT",NIL,NIL,NIL,NIL,NIL,NIL) )

END WSMETHOD

oXmlRet := NIL
Return .T.


// WSDL Data Structure ARRAYOFEXTERNALINVOICEVIEW

WSSTRUCT MTCUSTOMERPRODUCT_ARRAYOFEXTERNALINVOICEVIEW
	WSDATA   oWSEXTERNALINVOICEVIEW    AS MTCUSTOMERPRODUCT_EXTERNALINVOICEVIEW OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT MTCUSTOMERPRODUCT_ARRAYOFEXTERNALINVOICEVIEW
	::Init()
Return Self

WSMETHOD INIT WSCLIENT MTCUSTOMERPRODUCT_ARRAYOFEXTERNALINVOICEVIEW
	::oWSEXTERNALINVOICEVIEW := {} // Array Of  MTCUSTOMERPRODUCT_EXTERNALINVOICEVIEW():New()
Return

WSMETHOD CLONE WSCLIENT MTCUSTOMERPRODUCT_ARRAYOFEXTERNALINVOICEVIEW
	Local oClone := MTCUSTOMERPRODUCT_ARRAYOFEXTERNALINVOICEVIEW():NEW()
	oClone:oWSEXTERNALINVOICEVIEW := NIL
	If ::oWSEXTERNALINVOICEVIEW <> NIL 
		oClone:oWSEXTERNALINVOICEVIEW := {}
		aEval( ::oWSEXTERNALINVOICEVIEW , { |x| aadd( oClone:oWSEXTERNALINVOICEVIEW , x:Clone() ) } )
	Endif 
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT MTCUSTOMERPRODUCT_ARRAYOFEXTERNALINVOICEVIEW
	Local nRElem1, oNodes1, nTElem1
	::Init()
	If oResponse = NIL ; Return ; Endif 
	oNodes1 :=  WSAdvValue( oResponse,"_EXTERNALINVOICEVIEW","EXTERNALINVOICEVIEW",{},NIL,.T.,"O",NIL,NIL) 
	nTElem1 := len(oNodes1)
	For nRElem1 := 1 to nTElem1 
		If !WSIsNilNode( oNodes1[nRElem1] )
			aadd(::oWSEXTERNALINVOICEVIEW , MTCUSTOMERPRODUCT_EXTERNALINVOICEVIEW():New() )
			::oWSEXTERNALINVOICEVIEW[len(::oWSEXTERNALINVOICEVIEW)]:SoapRecv(oNodes1[nRElem1])
		Endif
	Next
Return

// WSDL Data Structure ARRAYOFPRODUCTVIEW

WSSTRUCT MTCUSTOMERPRODUCT_ARRAYOFPRODUCTVIEW
	WSDATA   oWSPRODUCTVIEW            AS MTCUSTOMERPRODUCT_PRODUCTVIEW OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT MTCUSTOMERPRODUCT_ARRAYOFPRODUCTVIEW
	::Init()
Return Self

WSMETHOD INIT WSCLIENT MTCUSTOMERPRODUCT_ARRAYOFPRODUCTVIEW
	::oWSPRODUCTVIEW       := {} // Array Of  MTCUSTOMERPRODUCT_PRODUCTVIEW():New()
Return

WSMETHOD CLONE WSCLIENT MTCUSTOMERPRODUCT_ARRAYOFPRODUCTVIEW
	Local oClone := MTCUSTOMERPRODUCT_ARRAYOFPRODUCTVIEW():NEW()
	oClone:oWSPRODUCTVIEW := NIL
	If ::oWSPRODUCTVIEW <> NIL 
		oClone:oWSPRODUCTVIEW := {}
		aEval( ::oWSPRODUCTVIEW , { |x| aadd( oClone:oWSPRODUCTVIEW , x:Clone() ) } )
	Endif 
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT MTCUSTOMERPRODUCT_ARRAYOFPRODUCTVIEW
	Local nRElem1, oNodes1, nTElem1
	::Init()
	If oResponse = NIL ; Return ; Endif 
	oNodes1 :=  WSAdvValue( oResponse,"_PRODUCTVIEW","PRODUCTVIEW",{},NIL,.T.,"O",NIL,NIL) 
	nTElem1 := len(oNodes1)
	For nRElem1 := 1 to nTElem1 
		If !WSIsNilNode( oNodes1[nRElem1] )
			aadd(::oWSPRODUCTVIEW , MTCUSTOMERPRODUCT_PRODUCTVIEW():New() )
			::oWSPRODUCTVIEW[len(::oWSPRODUCTVIEW)]:SoapRecv(oNodes1[nRElem1])
		Endif
	Next
Return

// WSDL Data Structure ARRAYOFINVENTORYCUSTOMERVIEW

WSSTRUCT MTCUSTOMERPRODUCT_ARRAYOFINVENTORYCUSTOMERVIEW
	WSDATA   oWSINVENTORYCUSTOMERVIEW  AS MTCUSTOMERPRODUCT_INVENTORYCUSTOMERVIEW OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT MTCUSTOMERPRODUCT_ARRAYOFINVENTORYCUSTOMERVIEW
	::Init()
Return Self

WSMETHOD INIT WSCLIENT MTCUSTOMERPRODUCT_ARRAYOFINVENTORYCUSTOMERVIEW
	::oWSINVENTORYCUSTOMERVIEW := {} // Array Of  MTCUSTOMERPRODUCT_INVENTORYCUSTOMERVIEW():New()
Return

WSMETHOD CLONE WSCLIENT MTCUSTOMERPRODUCT_ARRAYOFINVENTORYCUSTOMERVIEW
	Local oClone := MTCUSTOMERPRODUCT_ARRAYOFINVENTORYCUSTOMERVIEW():NEW()
	oClone:oWSINVENTORYCUSTOMERVIEW := NIL
	If ::oWSINVENTORYCUSTOMERVIEW <> NIL 
		oClone:oWSINVENTORYCUSTOMERVIEW := {}
		aEval( ::oWSINVENTORYCUSTOMERVIEW , { |x| aadd( oClone:oWSINVENTORYCUSTOMERVIEW , x:Clone() ) } )
	Endif 
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT MTCUSTOMERPRODUCT_ARRAYOFINVENTORYCUSTOMERVIEW
	Local nRElem1, oNodes1, nTElem1
	::Init()
	If oResponse = NIL ; Return ; Endif 
	oNodes1 :=  WSAdvValue( oResponse,"_INVENTORYCUSTOMERVIEW","INVENTORYCUSTOMERVIEW",{},NIL,.T.,"O",NIL,NIL) 
	nTElem1 := len(oNodes1)
	For nRElem1 := 1 to nTElem1 
		If !WSIsNilNode( oNodes1[nRElem1] )
			aadd(::oWSINVENTORYCUSTOMERVIEW , MTCUSTOMERPRODUCT_INVENTORYCUSTOMERVIEW():New() )
			::oWSINVENTORYCUSTOMERVIEW[len(::oWSINVENTORYCUSTOMERVIEW)]:SoapRecv(oNodes1[nRElem1])
		Endif
	Next
Return

// WSDL Data Structure ARRAYOFBRWHEADER

WSSTRUCT MTCUSTOMERPRODUCT_ARRAYOFBRWHEADER
	WSDATA   oWSBRWHEADER              AS MTCUSTOMERPRODUCT_BRWHEADER OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT MTCUSTOMERPRODUCT_ARRAYOFBRWHEADER
	::Init()
Return Self

WSMETHOD INIT WSCLIENT MTCUSTOMERPRODUCT_ARRAYOFBRWHEADER
	::oWSBRWHEADER         := {} // Array Of  MTCUSTOMERPRODUCT_BRWHEADER():New()
Return

WSMETHOD CLONE WSCLIENT MTCUSTOMERPRODUCT_ARRAYOFBRWHEADER
	Local oClone := MTCUSTOMERPRODUCT_ARRAYOFBRWHEADER():NEW()
	oClone:oWSBRWHEADER := NIL
	If ::oWSBRWHEADER <> NIL 
		oClone:oWSBRWHEADER := {}
		aEval( ::oWSBRWHEADER , { |x| aadd( oClone:oWSBRWHEADER , x:Clone() ) } )
	Endif 
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT MTCUSTOMERPRODUCT_ARRAYOFBRWHEADER
	Local nRElem1, oNodes1, nTElem1
	::Init()
	If oResponse = NIL ; Return ; Endif 
	oNodes1 :=  WSAdvValue( oResponse,"_BRWHEADER","BRWHEADER",{},NIL,.T.,"O",NIL,NIL) 
	nTElem1 := len(oNodes1)
	For nRElem1 := 1 to nTElem1 
		If !WSIsNilNode( oNodes1[nRElem1] )
			aadd(::oWSBRWHEADER , MTCUSTOMERPRODUCT_BRWHEADER():New() )
			::oWSBRWHEADER[len(::oWSBRWHEADER)]:SoapRecv(oNodes1[nRElem1])
		Endif
	Next
Return

// WSDL Data Structure ARRAYOFINVENTORYVIEW

WSSTRUCT MTCUSTOMERPRODUCT_ARRAYOFINVENTORYVIEW
	WSDATA   oWSINVENTORYVIEW          AS MTCUSTOMERPRODUCT_INVENTORYVIEW OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT MTCUSTOMERPRODUCT_ARRAYOFINVENTORYVIEW
	::Init()
Return Self

WSMETHOD INIT WSCLIENT MTCUSTOMERPRODUCT_ARRAYOFINVENTORYVIEW
	::oWSINVENTORYVIEW     := {} // Array Of  MTCUSTOMERPRODUCT_INVENTORYVIEW():New()
Return

WSMETHOD CLONE WSCLIENT MTCUSTOMERPRODUCT_ARRAYOFINVENTORYVIEW
	Local oClone := MTCUSTOMERPRODUCT_ARRAYOFINVENTORYVIEW():NEW()
	oClone:oWSINVENTORYVIEW := NIL
	If ::oWSINVENTORYVIEW <> NIL 
		oClone:oWSINVENTORYVIEW := {}
		aEval( ::oWSINVENTORYVIEW , { |x| aadd( oClone:oWSINVENTORYVIEW , x:Clone() ) } )
	Endif 
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT MTCUSTOMERPRODUCT_ARRAYOFINVENTORYVIEW
	Local nRElem1, oNodes1, nTElem1
	::Init()
	If oResponse = NIL ; Return ; Endif 
	oNodes1 :=  WSAdvValue( oResponse,"_INVENTORYVIEW","INVENTORYVIEW",{},NIL,.T.,"O",NIL,NIL) 
	nTElem1 := len(oNodes1)
	For nRElem1 := 1 to nTElem1 
		If !WSIsNilNode( oNodes1[nRElem1] )
			aadd(::oWSINVENTORYVIEW , MTCUSTOMERPRODUCT_INVENTORYVIEW():New() )
			::oWSINVENTORYVIEW[len(::oWSINVENTORYVIEW)]:SoapRecv(oNodes1[nRElem1])
		Endif
	Next
Return

// WSDL Data Structure ARRAYOFPRICEVIEW

WSSTRUCT MTCUSTOMERPRODUCT_ARRAYOFPRICEVIEW
	WSDATA   oWSPRICEVIEW              AS MTCUSTOMERPRODUCT_PRICEVIEW OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT MTCUSTOMERPRODUCT_ARRAYOFPRICEVIEW
	::Init()
Return Self

WSMETHOD INIT WSCLIENT MTCUSTOMERPRODUCT_ARRAYOFPRICEVIEW
	::oWSPRICEVIEW         := {} // Array Of  MTCUSTOMERPRODUCT_PRICEVIEW():New()
Return

WSMETHOD CLONE WSCLIENT MTCUSTOMERPRODUCT_ARRAYOFPRICEVIEW
	Local oClone := MTCUSTOMERPRODUCT_ARRAYOFPRICEVIEW():NEW()
	oClone:oWSPRICEVIEW := NIL
	If ::oWSPRICEVIEW <> NIL 
		oClone:oWSPRICEVIEW := {}
		aEval( ::oWSPRICEVIEW , { |x| aadd( oClone:oWSPRICEVIEW , x:Clone() ) } )
	Endif 
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT MTCUSTOMERPRODUCT_ARRAYOFPRICEVIEW
	Local nRElem1, oNodes1, nTElem1
	::Init()
	If oResponse = NIL ; Return ; Endif 
	oNodes1 :=  WSAdvValue( oResponse,"_PRICEVIEW","PRICEVIEW",{},NIL,.T.,"O",NIL,NIL) 
	nTElem1 := len(oNodes1)
	For nRElem1 := 1 to nTElem1 
		If !WSIsNilNode( oNodes1[nRElem1] )
			aadd(::oWSPRICEVIEW , MTCUSTOMERPRODUCT_PRICEVIEW():New() )
			::oWSPRICEVIEW[len(::oWSPRICEVIEW)]:SoapRecv(oNodes1[nRElem1])
		Endif
	Next
Return

// WSDL Data Structure ARRAYOFGENERICSTRUCT

WSSTRUCT MTCUSTOMERPRODUCT_ARRAYOFGENERICSTRUCT
	WSDATA   oWSGENERICSTRUCT          AS MTCUSTOMERPRODUCT_GENERICSTRUCT OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT MTCUSTOMERPRODUCT_ARRAYOFGENERICSTRUCT
	::Init()
Return Self

WSMETHOD INIT WSCLIENT MTCUSTOMERPRODUCT_ARRAYOFGENERICSTRUCT
	::oWSGENERICSTRUCT     := {} // Array Of  MTCUSTOMERPRODUCT_GENERICSTRUCT():New()
Return

WSMETHOD CLONE WSCLIENT MTCUSTOMERPRODUCT_ARRAYOFGENERICSTRUCT
	Local oClone := MTCUSTOMERPRODUCT_ARRAYOFGENERICSTRUCT():NEW()
	oClone:oWSGENERICSTRUCT := NIL
	If ::oWSGENERICSTRUCT <> NIL 
		oClone:oWSGENERICSTRUCT := {}
		aEval( ::oWSGENERICSTRUCT , { |x| aadd( oClone:oWSGENERICSTRUCT , x:Clone() ) } )
	Endif 
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT MTCUSTOMERPRODUCT_ARRAYOFGENERICSTRUCT
	Local nRElem1, oNodes1, nTElem1
	::Init()
	If oResponse = NIL ; Return ; Endif 
	oNodes1 :=  WSAdvValue( oResponse,"_GENERICSTRUCT","GENERICSTRUCT",{},NIL,.T.,"O",NIL,NIL) 
	nTElem1 := len(oNodes1)
	For nRElem1 := 1 to nTElem1 
		If !WSIsNilNode( oNodes1[nRElem1] )
			aadd(::oWSGENERICSTRUCT , MTCUSTOMERPRODUCT_GENERICSTRUCT():New() )
			::oWSGENERICSTRUCT[len(::oWSGENERICSTRUCT)]:SoapRecv(oNodes1[nRElem1])
		Endif
	Next
Return

// WSDL Data Structure EXTERNALINVOICEVIEW

WSSTRUCT MTCUSTOMERPRODUCT_EXTERNALINVOICEVIEW
	WSDATA   oWSINVOICERETURN          AS MTCUSTOMERPRODUCT_ARRAYOFINVOICEHEADERVIEW OPTIONAL
	WSDATA   oWSINVOICESHIPMENT        AS MTCUSTOMERPRODUCT_INVOICEHEADERVIEW
	WSDATA   cSTATUS                   AS string
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT MTCUSTOMERPRODUCT_EXTERNALINVOICEVIEW
	::Init()
Return Self

WSMETHOD INIT WSCLIENT MTCUSTOMERPRODUCT_EXTERNALINVOICEVIEW
Return

WSMETHOD CLONE WSCLIENT MTCUSTOMERPRODUCT_EXTERNALINVOICEVIEW
	Local oClone := MTCUSTOMERPRODUCT_EXTERNALINVOICEVIEW():NEW()
	oClone:oWSINVOICERETURN     := IIF(::oWSINVOICERETURN = NIL , NIL , ::oWSINVOICERETURN:Clone() )
	oClone:oWSINVOICESHIPMENT   := IIF(::oWSINVOICESHIPMENT = NIL , NIL , ::oWSINVOICESHIPMENT:Clone() )
	oClone:cSTATUS              := ::cSTATUS
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT MTCUSTOMERPRODUCT_EXTERNALINVOICEVIEW
	Local oNode1
	Local oNode2
	::Init()
	If oResponse = NIL ; Return ; Endif 
	oNode1 :=  WSAdvValue( oResponse,"_INVOICERETURN","ARRAYOFINVOICEHEADERVIEW",NIL,NIL,NIL,"O",NIL,NIL) 
	If oNode1 != NIL
		::oWSINVOICERETURN := MTCUSTOMERPRODUCT_ARRAYOFINVOICEHEADERVIEW():New()
		::oWSINVOICERETURN:SoapRecv(oNode1)
	EndIf
	oNode2 :=  WSAdvValue( oResponse,"_INVOICESHIPMENT","INVOICEHEADERVIEW",NIL,"Property oWSINVOICESHIPMENT as s0:INVOICEHEADERVIEW on SOAP Response not found.",NIL,"O",NIL,NIL) 
	If oNode2 != NIL
		::oWSINVOICESHIPMENT := MTCUSTOMERPRODUCT_INVOICEHEADERVIEW():New()
		::oWSINVOICESHIPMENT:SoapRecv(oNode2)
	EndIf
	::cSTATUS            :=  WSAdvValue( oResponse,"_STATUS","string",NIL,"Property cSTATUS as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
Return

// WSDL Data Structure PRODUCTVIEW

WSSTRUCT MTCUSTOMERPRODUCT_PRODUCTVIEW
	WSDATA   cBARCODE                  AS string
	WSDATA   cDESCRIPTION              AS string
	WSDATA   cDESCRIPTIONGROUPOFPRODUCT AS string
	WSDATA   cDESCRIPTIONMEASUREUNIT   AS string
	WSDATA   cDESCRIPTIONSECONDMEASUREUNIT AS string
	WSDATA   cDESCRIPTIONTYPEOFPRODUCT AS string
	WSDATA   nECONOMICLOT              AS float
	WSDATA   nGROSSWEIGHT              AS float
	WSDATA   cGROUPOFPRODUCT           AS string
	WSDATA   nLEADTIME                 AS float
	WSDATA   cMEASUREUNIT              AS string
	WSDATA   nMINIMUMGRADE             AS integer
	WSDATA   nMINIMUMLOT               AS float
	WSDATA   cNCM                      AS string
	WSDATA   nNETWEIGHT                AS float
	WSDATA   nORDERPOINT               AS float
	WSDATA   cPRODUCTCODE              AS string
	WSDATA   nQUANTITYPERPACKAGE       AS float
	WSDATA   cSCIENCEDESCRIPTION       AS string OPTIONAL
	WSDATA   cSECONDMEASUREUNIT        AS string
	WSDATA   cSTANDARDWAREHOUSE        AS string OPTIONAL
	WSDATA   nSTORAGEHEIGHT            AS float
	WSDATA   nSTORAGELENGHT            AS float
	WSDATA   nSTORAGEMAXIMUMPILING     AS float
	WSDATA   nSTORAGEWIDTH             AS float
	WSDATA   nTERMOFVALIDATY           AS integer
	WSDATA   cTYPEOFLEADTIME           AS string
	WSDATA   cTYPEOFPRODUCT            AS string
	WSDATA   oWSUSERFIELDS             AS MTCUSTOMERPRODUCT_ARRAYOFUSERFIELD OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT MTCUSTOMERPRODUCT_PRODUCTVIEW
	::Init()
Return Self

WSMETHOD INIT WSCLIENT MTCUSTOMERPRODUCT_PRODUCTVIEW
Return

WSMETHOD CLONE WSCLIENT MTCUSTOMERPRODUCT_PRODUCTVIEW
	Local oClone := MTCUSTOMERPRODUCT_PRODUCTVIEW():NEW()
	oClone:cBARCODE             := ::cBARCODE
	oClone:cDESCRIPTION         := ::cDESCRIPTION
	oClone:cDESCRIPTIONGROUPOFPRODUCT := ::cDESCRIPTIONGROUPOFPRODUCT
	oClone:cDESCRIPTIONMEASUREUNIT := ::cDESCRIPTIONMEASUREUNIT
	oClone:cDESCRIPTIONSECONDMEASUREUNIT := ::cDESCRIPTIONSECONDMEASUREUNIT
	oClone:cDESCRIPTIONTYPEOFPRODUCT := ::cDESCRIPTIONTYPEOFPRODUCT
	oClone:nECONOMICLOT         := ::nECONOMICLOT
	oClone:nGROSSWEIGHT         := ::nGROSSWEIGHT
	oClone:cGROUPOFPRODUCT      := ::cGROUPOFPRODUCT
	oClone:nLEADTIME            := ::nLEADTIME
	oClone:cMEASUREUNIT         := ::cMEASUREUNIT
	oClone:nMINIMUMGRADE        := ::nMINIMUMGRADE
	oClone:nMINIMUMLOT          := ::nMINIMUMLOT
	oClone:cNCM                 := ::cNCM
	oClone:nNETWEIGHT           := ::nNETWEIGHT
	oClone:nORDERPOINT          := ::nORDERPOINT
	oClone:cPRODUCTCODE         := ::cPRODUCTCODE
	oClone:nQUANTITYPERPACKAGE  := ::nQUANTITYPERPACKAGE
	oClone:cSCIENCEDESCRIPTION  := ::cSCIENCEDESCRIPTION
	oClone:cSECONDMEASUREUNIT   := ::cSECONDMEASUREUNIT
	oClone:cSTANDARDWAREHOUSE   := ::cSTANDARDWAREHOUSE
	oClone:nSTORAGEHEIGHT       := ::nSTORAGEHEIGHT
	oClone:nSTORAGELENGHT       := ::nSTORAGELENGHT
	oClone:nSTORAGEMAXIMUMPILING := ::nSTORAGEMAXIMUMPILING
	oClone:nSTORAGEWIDTH        := ::nSTORAGEWIDTH
	oClone:nTERMOFVALIDATY      := ::nTERMOFVALIDATY
	oClone:cTYPEOFLEADTIME      := ::cTYPEOFLEADTIME
	oClone:cTYPEOFPRODUCT       := ::cTYPEOFPRODUCT
	oClone:oWSUSERFIELDS        := IIF(::oWSUSERFIELDS = NIL , NIL , ::oWSUSERFIELDS:Clone() )
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT MTCUSTOMERPRODUCT_PRODUCTVIEW
	Local oNode29
	::Init()
	If oResponse = NIL ; Return ; Endif 
	::cBARCODE           :=  WSAdvValue( oResponse,"_BARCODE","string",NIL,"Property cBARCODE as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::cDESCRIPTION       :=  WSAdvValue( oResponse,"_DESCRIPTION","string",NIL,"Property cDESCRIPTION as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::cDESCRIPTIONGROUPOFPRODUCT :=  WSAdvValue( oResponse,"_DESCRIPTIONGROUPOFPRODUCT","string",NIL,"Property cDESCRIPTIONGROUPOFPRODUCT as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::cDESCRIPTIONMEASUREUNIT :=  WSAdvValue( oResponse,"_DESCRIPTIONMEASUREUNIT","string",NIL,"Property cDESCRIPTIONMEASUREUNIT as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::cDESCRIPTIONSECONDMEASUREUNIT :=  WSAdvValue( oResponse,"_DESCRIPTIONSECONDMEASUREUNIT","string",NIL,"Property cDESCRIPTIONSECONDMEASUREUNIT as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::cDESCRIPTIONTYPEOFPRODUCT :=  WSAdvValue( oResponse,"_DESCRIPTIONTYPEOFPRODUCT","string",NIL,"Property cDESCRIPTIONTYPEOFPRODUCT as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::nECONOMICLOT       :=  WSAdvValue( oResponse,"_ECONOMICLOT","float",NIL,"Property nECONOMICLOT as s:float on SOAP Response not found.",NIL,"N",NIL,NIL) 
	::nGROSSWEIGHT       :=  WSAdvValue( oResponse,"_GROSSWEIGHT","float",NIL,"Property nGROSSWEIGHT as s:float on SOAP Response not found.",NIL,"N",NIL,NIL) 
	::cGROUPOFPRODUCT    :=  WSAdvValue( oResponse,"_GROUPOFPRODUCT","string",NIL,"Property cGROUPOFPRODUCT as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::nLEADTIME          :=  WSAdvValue( oResponse,"_LEADTIME","float",NIL,"Property nLEADTIME as s:float on SOAP Response not found.",NIL,"N",NIL,NIL) 
	::cMEASUREUNIT       :=  WSAdvValue( oResponse,"_MEASUREUNIT","string",NIL,"Property cMEASUREUNIT as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::nMINIMUMGRADE      :=  WSAdvValue( oResponse,"_MINIMUMGRADE","integer",NIL,"Property nMINIMUMGRADE as s:integer on SOAP Response not found.",NIL,"N",NIL,NIL) 
	::nMINIMUMLOT        :=  WSAdvValue( oResponse,"_MINIMUMLOT","float",NIL,"Property nMINIMUMLOT as s:float on SOAP Response not found.",NIL,"N",NIL,NIL) 
	::cNCM               :=  WSAdvValue( oResponse,"_NCM","string",NIL,"Property cNCM as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::nNETWEIGHT         :=  WSAdvValue( oResponse,"_NETWEIGHT","float",NIL,"Property nNETWEIGHT as s:float on SOAP Response not found.",NIL,"N",NIL,NIL) 
	::nORDERPOINT        :=  WSAdvValue( oResponse,"_ORDERPOINT","float",NIL,"Property nORDERPOINT as s:float on SOAP Response not found.",NIL,"N",NIL,NIL) 
	::cPRODUCTCODE       :=  WSAdvValue( oResponse,"_PRODUCTCODE","string",NIL,"Property cPRODUCTCODE as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::nQUANTITYPERPACKAGE :=  WSAdvValue( oResponse,"_QUANTITYPERPACKAGE","float",NIL,"Property nQUANTITYPERPACKAGE as s:float on SOAP Response not found.",NIL,"N",NIL,NIL) 
	::cSCIENCEDESCRIPTION :=  WSAdvValue( oResponse,"_SCIENCEDESCRIPTION","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cSECONDMEASUREUNIT :=  WSAdvValue( oResponse,"_SECONDMEASUREUNIT","string",NIL,"Property cSECONDMEASUREUNIT as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::cSTANDARDWAREHOUSE :=  WSAdvValue( oResponse,"_STANDARDWAREHOUSE","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::nSTORAGEHEIGHT     :=  WSAdvValue( oResponse,"_STORAGEHEIGHT","float",NIL,"Property nSTORAGEHEIGHT as s:float on SOAP Response not found.",NIL,"N",NIL,NIL) 
	::nSTORAGELENGHT     :=  WSAdvValue( oResponse,"_STORAGELENGHT","float",NIL,"Property nSTORAGELENGHT as s:float on SOAP Response not found.",NIL,"N",NIL,NIL) 
	::nSTORAGEMAXIMUMPILING :=  WSAdvValue( oResponse,"_STORAGEMAXIMUMPILING","float",NIL,"Property nSTORAGEMAXIMUMPILING as s:float on SOAP Response not found.",NIL,"N",NIL,NIL) 
	::nSTORAGEWIDTH      :=  WSAdvValue( oResponse,"_STORAGEWIDTH","float",NIL,"Property nSTORAGEWIDTH as s:float on SOAP Response not found.",NIL,"N",NIL,NIL) 
	::nTERMOFVALIDATY    :=  WSAdvValue( oResponse,"_TERMOFVALIDATY","integer",NIL,"Property nTERMOFVALIDATY as s:integer on SOAP Response not found.",NIL,"N",NIL,NIL) 
	::cTYPEOFLEADTIME    :=  WSAdvValue( oResponse,"_TYPEOFLEADTIME","string",NIL,"Property cTYPEOFLEADTIME as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::cTYPEOFPRODUCT     :=  WSAdvValue( oResponse,"_TYPEOFPRODUCT","string",NIL,"Property cTYPEOFPRODUCT as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	oNode29 :=  WSAdvValue( oResponse,"_USERFIELDS","ARRAYOFUSERFIELD",NIL,NIL,NIL,"O",NIL,NIL) 
	If oNode29 != NIL
		::oWSUSERFIELDS := MTCUSTOMERPRODUCT_ARRAYOFUSERFIELD():New()
		::oWSUSERFIELDS:SoapRecv(oNode29)
	EndIf
Return

// WSDL Data Structure INVENTORYCUSTOMERVIEW

WSSTRUCT MTCUSTOMERPRODUCT_INVENTORYCUSTOMERVIEW
	WSDATA   nCOST                     AS float
	WSDATA   nCURRENCY                 AS integer
	WSDATA   cCURRENCYSIMBOL           AS string
	WSDATA   oWSINVOICEFROM            AS MTCUSTOMERPRODUCT_ARRAYOFINVOICEHEADERVIEW OPTIONAL
	WSDATA   oWSINVOICETO              AS MTCUSTOMERPRODUCT_ARRAYOFINVOICEHEADERVIEW OPTIONAL
	WSDATA   cPRODUCTCODE              AS string
	WSDATA   nQUANTITY                 AS float
	WSDATA   oWSUSERFIELDS             AS MTCUSTOMERPRODUCT_ARRAYOFUSERFIELD OPTIONAL
	WSDATA   cWAREHOUSE                AS string OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT MTCUSTOMERPRODUCT_INVENTORYCUSTOMERVIEW
	::Init()
Return Self

WSMETHOD INIT WSCLIENT MTCUSTOMERPRODUCT_INVENTORYCUSTOMERVIEW
Return

WSMETHOD CLONE WSCLIENT MTCUSTOMERPRODUCT_INVENTORYCUSTOMERVIEW
	Local oClone := MTCUSTOMERPRODUCT_INVENTORYCUSTOMERVIEW():NEW()
	oClone:nCOST                := ::nCOST
	oClone:nCURRENCY            := ::nCURRENCY
	oClone:cCURRENCYSIMBOL      := ::cCURRENCYSIMBOL
	oClone:oWSINVOICEFROM       := IIF(::oWSINVOICEFROM = NIL , NIL , ::oWSINVOICEFROM:Clone() )
	oClone:oWSINVOICETO         := IIF(::oWSINVOICETO = NIL , NIL , ::oWSINVOICETO:Clone() )
	oClone:cPRODUCTCODE         := ::cPRODUCTCODE
	oClone:nQUANTITY            := ::nQUANTITY
	oClone:oWSUSERFIELDS        := IIF(::oWSUSERFIELDS = NIL , NIL , ::oWSUSERFIELDS:Clone() )
	oClone:cWAREHOUSE           := ::cWAREHOUSE
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT MTCUSTOMERPRODUCT_INVENTORYCUSTOMERVIEW
	Local oNode4
	Local oNode5
	Local oNode8
	::Init()
	If oResponse = NIL ; Return ; Endif 
	::nCOST              :=  WSAdvValue( oResponse,"_COST","float",NIL,"Property nCOST as s:float on SOAP Response not found.",NIL,"N",NIL,NIL) 
	::nCURRENCY          :=  WSAdvValue( oResponse,"_CURRENCY","integer",NIL,"Property nCURRENCY as s:integer on SOAP Response not found.",NIL,"N",NIL,NIL) 
	::cCURRENCYSIMBOL    :=  WSAdvValue( oResponse,"_CURRENCYSIMBOL","string",NIL,"Property cCURRENCYSIMBOL as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	oNode4 :=  WSAdvValue( oResponse,"_INVOICEFROM","ARRAYOFINVOICEHEADERVIEW",NIL,NIL,NIL,"O",NIL,NIL) 
	If oNode4 != NIL
		::oWSINVOICEFROM := MTCUSTOMERPRODUCT_ARRAYOFINVOICEHEADERVIEW():New()
		::oWSINVOICEFROM:SoapRecv(oNode4)
	EndIf
	oNode5 :=  WSAdvValue( oResponse,"_INVOICETO","ARRAYOFINVOICEHEADERVIEW",NIL,NIL,NIL,"O",NIL,NIL) 
	If oNode5 != NIL
		::oWSINVOICETO := MTCUSTOMERPRODUCT_ARRAYOFINVOICEHEADERVIEW():New()
		::oWSINVOICETO:SoapRecv(oNode5)
	EndIf
	::cPRODUCTCODE       :=  WSAdvValue( oResponse,"_PRODUCTCODE","string",NIL,"Property cPRODUCTCODE as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::nQUANTITY          :=  WSAdvValue( oResponse,"_QUANTITY","float",NIL,"Property nQUANTITY as s:float on SOAP Response not found.",NIL,"N",NIL,NIL) 
	oNode8 :=  WSAdvValue( oResponse,"_USERFIELDS","ARRAYOFUSERFIELD",NIL,NIL,NIL,"O",NIL,NIL) 
	If oNode8 != NIL
		::oWSUSERFIELDS := MTCUSTOMERPRODUCT_ARRAYOFUSERFIELD():New()
		::oWSUSERFIELDS:SoapRecv(oNode8)
	EndIf
	::cWAREHOUSE         :=  WSAdvValue( oResponse,"_WAREHOUSE","string",NIL,NIL,NIL,"S",NIL,NIL) 
Return

// WSDL Data Structure BRWHEADER

WSSTRUCT MTCUSTOMERPRODUCT_BRWHEADER
	WSDATA   cHEADERCOMBOBOX           AS string OPTIONAL
	WSDATA   nHEADERDEC                AS integer
	WSDATA   cHEADERF3                 AS string OPTIONAL
	WSDATA   cHEADERFIELD              AS string
	WSDATA   lHEADEROBLIG              AS boolean OPTIONAL
	WSDATA   cHEADERPICTURE            AS string
	WSDATA   nHEADERSIZE               AS integer
	WSDATA   cHEADERTITLE              AS string
	WSDATA   cHEADERTYPE               AS string
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT MTCUSTOMERPRODUCT_BRWHEADER
	::Init()
Return Self

WSMETHOD INIT WSCLIENT MTCUSTOMERPRODUCT_BRWHEADER
Return

WSMETHOD CLONE WSCLIENT MTCUSTOMERPRODUCT_BRWHEADER
	Local oClone := MTCUSTOMERPRODUCT_BRWHEADER():NEW()
	oClone:cHEADERCOMBOBOX      := ::cHEADERCOMBOBOX
	oClone:nHEADERDEC           := ::nHEADERDEC
	oClone:cHEADERF3            := ::cHEADERF3
	oClone:cHEADERFIELD         := ::cHEADERFIELD
	oClone:lHEADEROBLIG         := ::lHEADEROBLIG
	oClone:cHEADERPICTURE       := ::cHEADERPICTURE
	oClone:nHEADERSIZE          := ::nHEADERSIZE
	oClone:cHEADERTITLE         := ::cHEADERTITLE
	oClone:cHEADERTYPE          := ::cHEADERTYPE
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT MTCUSTOMERPRODUCT_BRWHEADER
	::Init()
	If oResponse = NIL ; Return ; Endif 
	::cHEADERCOMBOBOX    :=  WSAdvValue( oResponse,"_HEADERCOMBOBOX","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::nHEADERDEC         :=  WSAdvValue( oResponse,"_HEADERDEC","integer",NIL,"Property nHEADERDEC as s:integer on SOAP Response not found.",NIL,"N",NIL,NIL) 
	::cHEADERF3          :=  WSAdvValue( oResponse,"_HEADERF3","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cHEADERFIELD       :=  WSAdvValue( oResponse,"_HEADERFIELD","string",NIL,"Property cHEADERFIELD as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::lHEADEROBLIG       :=  WSAdvValue( oResponse,"_HEADEROBLIG","boolean",NIL,NIL,NIL,"L",NIL,NIL) 
	::cHEADERPICTURE     :=  WSAdvValue( oResponse,"_HEADERPICTURE","string",NIL,"Property cHEADERPICTURE as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::nHEADERSIZE        :=  WSAdvValue( oResponse,"_HEADERSIZE","integer",NIL,"Property nHEADERSIZE as s:integer on SOAP Response not found.",NIL,"N",NIL,NIL) 
	::cHEADERTITLE       :=  WSAdvValue( oResponse,"_HEADERTITLE","string",NIL,"Property cHEADERTITLE as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::cHEADERTYPE        :=  WSAdvValue( oResponse,"_HEADERTYPE","string",NIL,"Property cHEADERTYPE as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
Return

// WSDL Data Structure INVENTORYVIEW

WSSTRUCT MTCUSTOMERPRODUCT_INVENTORYVIEW
	WSDATA   nCOST                     AS float
	WSDATA   nCURRENCY                 AS integer
	WSDATA   cCURRENCYSIMBOL           AS string
	WSDATA   cDESCRIPTIONTYPEOFBALANCE AS string
	WSDATA   cPRODUCTCODE              AS string
	WSDATA   nQUANTITY                 AS float
	WSDATA   nTYPEOFBALANCE            AS integer
	WSDATA   oWSUSERFIELDS             AS MTCUSTOMERPRODUCT_ARRAYOFUSERFIELD OPTIONAL
	WSDATA   cWAREHOUSE                AS string OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT MTCUSTOMERPRODUCT_INVENTORYVIEW
	::Init()
Return Self

WSMETHOD INIT WSCLIENT MTCUSTOMERPRODUCT_INVENTORYVIEW
Return

WSMETHOD CLONE WSCLIENT MTCUSTOMERPRODUCT_INVENTORYVIEW
	Local oClone := MTCUSTOMERPRODUCT_INVENTORYVIEW():NEW()
	oClone:nCOST                := ::nCOST
	oClone:nCURRENCY            := ::nCURRENCY
	oClone:cCURRENCYSIMBOL      := ::cCURRENCYSIMBOL
	oClone:cDESCRIPTIONTYPEOFBALANCE := ::cDESCRIPTIONTYPEOFBALANCE
	oClone:cPRODUCTCODE         := ::cPRODUCTCODE
	oClone:nQUANTITY            := ::nQUANTITY
	oClone:nTYPEOFBALANCE       := ::nTYPEOFBALANCE
	oClone:oWSUSERFIELDS        := IIF(::oWSUSERFIELDS = NIL , NIL , ::oWSUSERFIELDS:Clone() )
	oClone:cWAREHOUSE           := ::cWAREHOUSE
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT MTCUSTOMERPRODUCT_INVENTORYVIEW
	Local oNode8
	::Init()
	If oResponse = NIL ; Return ; Endif 
	::nCOST              :=  WSAdvValue( oResponse,"_COST","float",NIL,"Property nCOST as s:float on SOAP Response not found.",NIL,"N",NIL,NIL) 
	::nCURRENCY          :=  WSAdvValue( oResponse,"_CURRENCY","integer",NIL,"Property nCURRENCY as s:integer on SOAP Response not found.",NIL,"N",NIL,NIL) 
	::cCURRENCYSIMBOL    :=  WSAdvValue( oResponse,"_CURRENCYSIMBOL","string",NIL,"Property cCURRENCYSIMBOL as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::cDESCRIPTIONTYPEOFBALANCE :=  WSAdvValue( oResponse,"_DESCRIPTIONTYPEOFBALANCE","string",NIL,"Property cDESCRIPTIONTYPEOFBALANCE as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::cPRODUCTCODE       :=  WSAdvValue( oResponse,"_PRODUCTCODE","string",NIL,"Property cPRODUCTCODE as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::nQUANTITY          :=  WSAdvValue( oResponse,"_QUANTITY","float",NIL,"Property nQUANTITY as s:float on SOAP Response not found.",NIL,"N",NIL,NIL) 
	::nTYPEOFBALANCE     :=  WSAdvValue( oResponse,"_TYPEOFBALANCE","integer",NIL,"Property nTYPEOFBALANCE as s:integer on SOAP Response not found.",NIL,"N",NIL,NIL) 
	oNode8 :=  WSAdvValue( oResponse,"_USERFIELDS","ARRAYOFUSERFIELD",NIL,NIL,NIL,"O",NIL,NIL) 
	If oNode8 != NIL
		::oWSUSERFIELDS := MTCUSTOMERPRODUCT_ARRAYOFUSERFIELD():New()
		::oWSUSERFIELDS:SoapRecv(oNode8)
	EndIf
	::cWAREHOUSE         :=  WSAdvValue( oResponse,"_WAREHOUSE","string",NIL,NIL,NIL,"S",NIL,NIL) 
Return

// WSDL Data Structure PRICEVIEW

WSSTRUCT MTCUSTOMERPRODUCT_PRICEVIEW
	WSDATA   nCURRENCY                 AS integer
	WSDATA   cCURRENCYSIMBOL           AS string
	WSDATA   nDISCOUNTVALUE            AS float OPTIONAL
	WSDATA   cPAYMENTPLANCODE          AS string OPTIONAL
	WSDATA   nPRICE                    AS float
	WSDATA   cPRICETABLECODE           AS string
	WSDATA   cPRODUCTCODE              AS string
	WSDATA   nQUANTITYLIMIT            AS float OPTIONAL
	WSDATA   oWSUSERFIELDS             AS MTCUSTOMERPRODUCT_ARRAYOFUSERFIELD OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT MTCUSTOMERPRODUCT_PRICEVIEW
	::Init()
Return Self

WSMETHOD INIT WSCLIENT MTCUSTOMERPRODUCT_PRICEVIEW
Return

WSMETHOD CLONE WSCLIENT MTCUSTOMERPRODUCT_PRICEVIEW
	Local oClone := MTCUSTOMERPRODUCT_PRICEVIEW():NEW()
	oClone:nCURRENCY            := ::nCURRENCY
	oClone:cCURRENCYSIMBOL      := ::cCURRENCYSIMBOL
	oClone:nDISCOUNTVALUE       := ::nDISCOUNTVALUE
	oClone:cPAYMENTPLANCODE     := ::cPAYMENTPLANCODE
	oClone:nPRICE               := ::nPRICE
	oClone:cPRICETABLECODE      := ::cPRICETABLECODE
	oClone:cPRODUCTCODE         := ::cPRODUCTCODE
	oClone:nQUANTITYLIMIT       := ::nQUANTITYLIMIT
	oClone:oWSUSERFIELDS        := IIF(::oWSUSERFIELDS = NIL , NIL , ::oWSUSERFIELDS:Clone() )
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT MTCUSTOMERPRODUCT_PRICEVIEW
	Local oNode9
	::Init()
	If oResponse = NIL ; Return ; Endif 
	::nCURRENCY          :=  WSAdvValue( oResponse,"_CURRENCY","integer",NIL,"Property nCURRENCY as s:integer on SOAP Response not found.",NIL,"N",NIL,NIL) 
	::cCURRENCYSIMBOL    :=  WSAdvValue( oResponse,"_CURRENCYSIMBOL","string",NIL,"Property cCURRENCYSIMBOL as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::nDISCOUNTVALUE     :=  WSAdvValue( oResponse,"_DISCOUNTVALUE","float",NIL,NIL,NIL,"N",NIL,NIL) 
	::cPAYMENTPLANCODE   :=  WSAdvValue( oResponse,"_PAYMENTPLANCODE","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::nPRICE             :=  WSAdvValue( oResponse,"_PRICE","float",NIL,"Property nPRICE as s:float on SOAP Response not found.",NIL,"N",NIL,NIL) 
	::cPRICETABLECODE    :=  WSAdvValue( oResponse,"_PRICETABLECODE","string",NIL,"Property cPRICETABLECODE as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::cPRODUCTCODE       :=  WSAdvValue( oResponse,"_PRODUCTCODE","string",NIL,"Property cPRODUCTCODE as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::nQUANTITYLIMIT     :=  WSAdvValue( oResponse,"_QUANTITYLIMIT","float",NIL,NIL,NIL,"N",NIL,NIL) 
	oNode9 :=  WSAdvValue( oResponse,"_USERFIELDS","ARRAYOFUSERFIELD",NIL,NIL,NIL,"O",NIL,NIL) 
	If oNode9 != NIL
		::oWSUSERFIELDS := MTCUSTOMERPRODUCT_ARRAYOFUSERFIELD():New()
		::oWSUSERFIELDS:SoapRecv(oNode9)
	EndIf
Return

// WSDL Data Structure GENERICSTRUCT

WSSTRUCT MTCUSTOMERPRODUCT_GENERICSTRUCT
	WSDATA   cCODE                     AS string
	WSDATA   cDESCRIPTION              AS string
	WSDATA   nVALUE                    AS float OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT MTCUSTOMERPRODUCT_GENERICSTRUCT
	::Init()
Return Self

WSMETHOD INIT WSCLIENT MTCUSTOMERPRODUCT_GENERICSTRUCT
Return

WSMETHOD CLONE WSCLIENT MTCUSTOMERPRODUCT_GENERICSTRUCT
	Local oClone := MTCUSTOMERPRODUCT_GENERICSTRUCT():NEW()
	oClone:cCODE                := ::cCODE
	oClone:cDESCRIPTION         := ::cDESCRIPTION
	oClone:nVALUE               := ::nVALUE
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT MTCUSTOMERPRODUCT_GENERICSTRUCT
	::Init()
	If oResponse = NIL ; Return ; Endif 
	::cCODE              :=  WSAdvValue( oResponse,"_CODE","string",NIL,"Property cCODE as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::cDESCRIPTION       :=  WSAdvValue( oResponse,"_DESCRIPTION","string",NIL,"Property cDESCRIPTION as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::nVALUE             :=  WSAdvValue( oResponse,"_VALUE","float",NIL,NIL,NIL,"N",NIL,NIL) 
Return

// WSDL Data Structure ARRAYOFINVOICEHEADERVIEW

WSSTRUCT MTCUSTOMERPRODUCT_ARRAYOFINVOICEHEADERVIEW
	WSDATA   oWSINVOICEHEADERVIEW      AS MTCUSTOMERPRODUCT_INVOICEHEADERVIEW OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT MTCUSTOMERPRODUCT_ARRAYOFINVOICEHEADERVIEW
	::Init()
Return Self

WSMETHOD INIT WSCLIENT MTCUSTOMERPRODUCT_ARRAYOFINVOICEHEADERVIEW
	::oWSINVOICEHEADERVIEW := {} // Array Of  MTCUSTOMERPRODUCT_INVOICEHEADERVIEW():New()
Return

WSMETHOD CLONE WSCLIENT MTCUSTOMERPRODUCT_ARRAYOFINVOICEHEADERVIEW
	Local oClone := MTCUSTOMERPRODUCT_ARRAYOFINVOICEHEADERVIEW():NEW()
	oClone:oWSINVOICEHEADERVIEW := NIL
	If ::oWSINVOICEHEADERVIEW <> NIL 
		oClone:oWSINVOICEHEADERVIEW := {}
		aEval( ::oWSINVOICEHEADERVIEW , { |x| aadd( oClone:oWSINVOICEHEADERVIEW , x:Clone() ) } )
	Endif 
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT MTCUSTOMERPRODUCT_ARRAYOFINVOICEHEADERVIEW
	Local nRElem1, oNodes1, nTElem1
	::Init()
	If oResponse = NIL ; Return ; Endif 
	oNodes1 :=  WSAdvValue( oResponse,"_INVOICEHEADERVIEW","INVOICEHEADERVIEW",{},NIL,.T.,"O",NIL,NIL) 
	nTElem1 := len(oNodes1)
	For nRElem1 := 1 to nTElem1 
		If !WSIsNilNode( oNodes1[nRElem1] )
			aadd(::oWSINVOICEHEADERVIEW , MTCUSTOMERPRODUCT_INVOICEHEADERVIEW():New() )
			::oWSINVOICEHEADERVIEW[len(::oWSINVOICEHEADERVIEW)]:SoapRecv(oNodes1[nRElem1])
		Endif
	Next
Return

// WSDL Data Structure INVOICEHEADERVIEW

WSSTRUCT MTCUSTOMERPRODUCT_INVOICEHEADERVIEW
	WSDATA   oWSCARRIER                AS MTCUSTOMERPRODUCT_GENERICSTRUCT OPTIONAL
	WSDATA   dDELIVERYDATE             AS date OPTIONAL
	WSDATA   cDOCUMENTTYPE             AS string OPTIONAL
	WSDATA   nEXPENSESVALUE            AS float OPTIONAL
	WSDATA   nFREIGHTVALUE             AS float OPTIONAL
	WSDATA   oWSFROMROLE               AS MTCUSTOMERPRODUCT_GENERICSTRUCT OPTIONAL
	WSDATA   nINSURANCEVALUE           AS float OPTIONAL
	WSDATA   dINVOICEDATE              AS date
	WSDATA   cINVOICENUMBER            AS string
	WSDATA   cINVOICESTATUS            AS string OPTIONAL
	WSDATA   cINVOICETYPE              AS string
	WSDATA   oWSPACKAGESVOLUMES        AS MTCUSTOMERPRODUCT_ARRAYOFGENERICSTRUCT OPTIONAL
	WSDATA   oWSPAYMENTPLAN            AS MTCUSTOMERPRODUCT_ARRAYOFBILLVIEW OPTIONAL
	WSDATA   dREGISTERDATE             AS date
	WSDATA   cSERIALNUMBER             AS string
	WSDATA   oWSTAXES                  AS MTCUSTOMERPRODUCT_ARRAYOFTAXESVIEW OPTIONAL
	WSDATA   oWSTOROLE                 AS MTCUSTOMERPRODUCT_GENERICSTRUCT OPTIONAL
	WSDATA   nTOTALVALUE               AS float OPTIONAL
	WSDATA   oWSUSERFIELDS             AS MTCUSTOMERPRODUCT_ARRAYOFUSERFIELD OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT MTCUSTOMERPRODUCT_INVOICEHEADERVIEW
	::Init()
Return Self

WSMETHOD INIT WSCLIENT MTCUSTOMERPRODUCT_INVOICEHEADERVIEW
Return

WSMETHOD CLONE WSCLIENT MTCUSTOMERPRODUCT_INVOICEHEADERVIEW
	Local oClone := MTCUSTOMERPRODUCT_INVOICEHEADERVIEW():NEW()
	oClone:oWSCARRIER           := IIF(::oWSCARRIER = NIL , NIL , ::oWSCARRIER:Clone() )
	oClone:dDELIVERYDATE        := ::dDELIVERYDATE
	oClone:cDOCUMENTTYPE        := ::cDOCUMENTTYPE
	oClone:nEXPENSESVALUE       := ::nEXPENSESVALUE
	oClone:nFREIGHTVALUE        := ::nFREIGHTVALUE
	oClone:oWSFROMROLE          := IIF(::oWSFROMROLE = NIL , NIL , ::oWSFROMROLE:Clone() )
	oClone:nINSURANCEVALUE      := ::nINSURANCEVALUE
	oClone:dINVOICEDATE         := ::dINVOICEDATE
	oClone:cINVOICENUMBER       := ::cINVOICENUMBER
	oClone:cINVOICESTATUS       := ::cINVOICESTATUS
	oClone:cINVOICETYPE         := ::cINVOICETYPE
	oClone:oWSPACKAGESVOLUMES   := IIF(::oWSPACKAGESVOLUMES = NIL , NIL , ::oWSPACKAGESVOLUMES:Clone() )
	oClone:oWSPAYMENTPLAN       := IIF(::oWSPAYMENTPLAN = NIL , NIL , ::oWSPAYMENTPLAN:Clone() )
	oClone:dREGISTERDATE        := ::dREGISTERDATE
	oClone:cSERIALNUMBER        := ::cSERIALNUMBER
	oClone:oWSTAXES             := IIF(::oWSTAXES = NIL , NIL , ::oWSTAXES:Clone() )
	oClone:oWSTOROLE            := IIF(::oWSTOROLE = NIL , NIL , ::oWSTOROLE:Clone() )
	oClone:nTOTALVALUE          := ::nTOTALVALUE
	oClone:oWSUSERFIELDS        := IIF(::oWSUSERFIELDS = NIL , NIL , ::oWSUSERFIELDS:Clone() )
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT MTCUSTOMERPRODUCT_INVOICEHEADERVIEW
	Local oNode1
	Local oNode6
	Local oNode12
	Local oNode13
	Local oNode16
	Local oNode17
	Local oNode19
	::Init()
	If oResponse = NIL ; Return ; Endif 
	oNode1 :=  WSAdvValue( oResponse,"_CARRIER","GENERICSTRUCT",NIL,NIL,NIL,"O",NIL,NIL) 
	If oNode1 != NIL
		::oWSCARRIER := MTCUSTOMERPRODUCT_GENERICSTRUCT():New()
		::oWSCARRIER:SoapRecv(oNode1)
	EndIf
	::dDELIVERYDATE      :=  WSAdvValue( oResponse,"_DELIVERYDATE","date",NIL,NIL,NIL,"D",NIL,NIL) 
	::cDOCUMENTTYPE      :=  WSAdvValue( oResponse,"_DOCUMENTTYPE","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::nEXPENSESVALUE     :=  WSAdvValue( oResponse,"_EXPENSESVALUE","float",NIL,NIL,NIL,"N",NIL,NIL) 
	::nFREIGHTVALUE      :=  WSAdvValue( oResponse,"_FREIGHTVALUE","float",NIL,NIL,NIL,"N",NIL,NIL) 
	oNode6 :=  WSAdvValue( oResponse,"_FROMROLE","GENERICSTRUCT",NIL,NIL,NIL,"O",NIL,NIL) 
	If oNode6 != NIL
		::oWSFROMROLE := MTCUSTOMERPRODUCT_GENERICSTRUCT():New()
		::oWSFROMROLE:SoapRecv(oNode6)
	EndIf
	::nINSURANCEVALUE    :=  WSAdvValue( oResponse,"_INSURANCEVALUE","float",NIL,NIL,NIL,"N",NIL,NIL) 
	::dINVOICEDATE       :=  WSAdvValue( oResponse,"_INVOICEDATE","date",NIL,"Property dINVOICEDATE as s:date on SOAP Response not found.",NIL,"D",NIL,NIL) 
	::cINVOICENUMBER     :=  WSAdvValue( oResponse,"_INVOICENUMBER","string",NIL,"Property cINVOICENUMBER as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::cINVOICESTATUS     :=  WSAdvValue( oResponse,"_INVOICESTATUS","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cINVOICETYPE       :=  WSAdvValue( oResponse,"_INVOICETYPE","string",NIL,"Property cINVOICETYPE as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	oNode12 :=  WSAdvValue( oResponse,"_PACKAGESVOLUMES","ARRAYOFGENERICSTRUCT",NIL,NIL,NIL,"O",NIL,NIL) 
	If oNode12 != NIL
		::oWSPACKAGESVOLUMES := MTCUSTOMERPRODUCT_ARRAYOFGENERICSTRUCT():New()
		::oWSPACKAGESVOLUMES:SoapRecv(oNode12)
	EndIf
	oNode13 :=  WSAdvValue( oResponse,"_PAYMENTPLAN","ARRAYOFBILLVIEW",NIL,NIL,NIL,"O",NIL,NIL) 
	If oNode13 != NIL
		::oWSPAYMENTPLAN := MTCUSTOMERPRODUCT_ARRAYOFBILLVIEW():New()
		::oWSPAYMENTPLAN:SoapRecv(oNode13)
	EndIf
	::dREGISTERDATE      :=  WSAdvValue( oResponse,"_REGISTERDATE","date",NIL,"Property dREGISTERDATE as s:date on SOAP Response not found.",NIL,"D",NIL,NIL) 
	::cSERIALNUMBER      :=  WSAdvValue( oResponse,"_SERIALNUMBER","string",NIL,"Property cSERIALNUMBER as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	oNode16 :=  WSAdvValue( oResponse,"_TAXES","ARRAYOFTAXESVIEW",NIL,NIL,NIL,"O",NIL,NIL) 
	If oNode16 != NIL
		::oWSTAXES := MTCUSTOMERPRODUCT_ARRAYOFTAXESVIEW():New()
		::oWSTAXES:SoapRecv(oNode16)
	EndIf
	oNode17 :=  WSAdvValue( oResponse,"_TOROLE","GENERICSTRUCT",NIL,NIL,NIL,"O",NIL,NIL) 
	If oNode17 != NIL
		::oWSTOROLE := MTCUSTOMERPRODUCT_GENERICSTRUCT():New()
		::oWSTOROLE:SoapRecv(oNode17)
	EndIf
	::nTOTALVALUE        :=  WSAdvValue( oResponse,"_TOTALVALUE","float",NIL,NIL,NIL,"N",NIL,NIL) 
	oNode19 :=  WSAdvValue( oResponse,"_USERFIELDS","ARRAYOFUSERFIELD",NIL,NIL,NIL,"O",NIL,NIL) 
	If oNode19 != NIL
		::oWSUSERFIELDS := MTCUSTOMERPRODUCT_ARRAYOFUSERFIELD():New()
		::oWSUSERFIELDS:SoapRecv(oNode19)
	EndIf
Return

// WSDL Data Structure ARRAYOFUSERFIELD

WSSTRUCT MTCUSTOMERPRODUCT_ARRAYOFUSERFIELD
	WSDATA   oWSUSERFIELD              AS MTCUSTOMERPRODUCT_USERFIELD OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT MTCUSTOMERPRODUCT_ARRAYOFUSERFIELD
	::Init()
Return Self

WSMETHOD INIT WSCLIENT MTCUSTOMERPRODUCT_ARRAYOFUSERFIELD
	::oWSUSERFIELD         := {} // Array Of  MTCUSTOMERPRODUCT_USERFIELD():New()
Return

WSMETHOD CLONE WSCLIENT MTCUSTOMERPRODUCT_ARRAYOFUSERFIELD
	Local oClone := MTCUSTOMERPRODUCT_ARRAYOFUSERFIELD():NEW()
	oClone:oWSUSERFIELD := NIL
	If ::oWSUSERFIELD <> NIL 
		oClone:oWSUSERFIELD := {}
		aEval( ::oWSUSERFIELD , { |x| aadd( oClone:oWSUSERFIELD , x:Clone() ) } )
	Endif 
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT MTCUSTOMERPRODUCT_ARRAYOFUSERFIELD
	Local nRElem1, oNodes1, nTElem1
	::Init()
	If oResponse = NIL ; Return ; Endif 
	oNodes1 :=  WSAdvValue( oResponse,"_USERFIELD","USERFIELD",{},NIL,.T.,"O",NIL,NIL) 
	nTElem1 := len(oNodes1)
	For nRElem1 := 1 to nTElem1 
		If !WSIsNilNode( oNodes1[nRElem1] )
			aadd(::oWSUSERFIELD , MTCUSTOMERPRODUCT_USERFIELD():New() )
			::oWSUSERFIELD[len(::oWSUSERFIELD)]:SoapRecv(oNodes1[nRElem1])
		Endif
	Next
Return

// WSDL Data Structure ARRAYOFBILLVIEW

WSSTRUCT MTCUSTOMERPRODUCT_ARRAYOFBILLVIEW
	WSDATA   oWSBILLVIEW               AS MTCUSTOMERPRODUCT_BILLVIEW OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT MTCUSTOMERPRODUCT_ARRAYOFBILLVIEW
	::Init()
Return Self

WSMETHOD INIT WSCLIENT MTCUSTOMERPRODUCT_ARRAYOFBILLVIEW
	::oWSBILLVIEW          := {} // Array Of  MTCUSTOMERPRODUCT_BILLVIEW():New()
Return

WSMETHOD CLONE WSCLIENT MTCUSTOMERPRODUCT_ARRAYOFBILLVIEW
	Local oClone := MTCUSTOMERPRODUCT_ARRAYOFBILLVIEW():NEW()
	oClone:oWSBILLVIEW := NIL
	If ::oWSBILLVIEW <> NIL 
		oClone:oWSBILLVIEW := {}
		aEval( ::oWSBILLVIEW , { |x| aadd( oClone:oWSBILLVIEW , x:Clone() ) } )
	Endif 
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT MTCUSTOMERPRODUCT_ARRAYOFBILLVIEW
	Local nRElem1, oNodes1, nTElem1
	::Init()
	If oResponse = NIL ; Return ; Endif 
	oNodes1 :=  WSAdvValue( oResponse,"_BILLVIEW","BILLVIEW",{},NIL,.T.,"O",NIL,NIL) 
	nTElem1 := len(oNodes1)
	For nRElem1 := 1 to nTElem1 
		If !WSIsNilNode( oNodes1[nRElem1] )
			aadd(::oWSBILLVIEW , MTCUSTOMERPRODUCT_BILLVIEW():New() )
			::oWSBILLVIEW[len(::oWSBILLVIEW)]:SoapRecv(oNodes1[nRElem1])
		Endif
	Next
Return

// WSDL Data Structure ARRAYOFTAXESVIEW

WSSTRUCT MTCUSTOMERPRODUCT_ARRAYOFTAXESVIEW
	WSDATA   oWSTAXESVIEW              AS MTCUSTOMERPRODUCT_TAXESVIEW OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT MTCUSTOMERPRODUCT_ARRAYOFTAXESVIEW
	::Init()
Return Self

WSMETHOD INIT WSCLIENT MTCUSTOMERPRODUCT_ARRAYOFTAXESVIEW
	::oWSTAXESVIEW         := {} // Array Of  MTCUSTOMERPRODUCT_TAXESVIEW():New()
Return

WSMETHOD CLONE WSCLIENT MTCUSTOMERPRODUCT_ARRAYOFTAXESVIEW
	Local oClone := MTCUSTOMERPRODUCT_ARRAYOFTAXESVIEW():NEW()
	oClone:oWSTAXESVIEW := NIL
	If ::oWSTAXESVIEW <> NIL 
		oClone:oWSTAXESVIEW := {}
		aEval( ::oWSTAXESVIEW , { |x| aadd( oClone:oWSTAXESVIEW , x:Clone() ) } )
	Endif 
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT MTCUSTOMERPRODUCT_ARRAYOFTAXESVIEW
	Local nRElem1, oNodes1, nTElem1
	::Init()
	If oResponse = NIL ; Return ; Endif 
	oNodes1 :=  WSAdvValue( oResponse,"_TAXESVIEW","TAXESVIEW",{},NIL,.T.,"O",NIL,NIL) 
	nTElem1 := len(oNodes1)
	For nRElem1 := 1 to nTElem1 
		If !WSIsNilNode( oNodes1[nRElem1] )
			aadd(::oWSTAXESVIEW , MTCUSTOMERPRODUCT_TAXESVIEW():New() )
			::oWSTAXESVIEW[len(::oWSTAXESVIEW)]:SoapRecv(oNodes1[nRElem1])
		Endif
	Next
Return

// WSDL Data Structure USERFIELD

WSSTRUCT MTCUSTOMERPRODUCT_USERFIELD
	WSDATA   cUSERCOMBOBOX             AS string OPTIONAL
	WSDATA   nUSERDEC                  AS integer OPTIONAL
	WSDATA   cUSERF3                   AS string OPTIONAL
	WSDATA   cUSERNAME                 AS string
	WSDATA   lUSEROBLIG                AS boolean OPTIONAL
	WSDATA   cUSERPICTURE              AS string OPTIONAL
	WSDATA   nUSERSIZE                 AS integer OPTIONAL
	WSDATA   cUSERTAG                  AS string OPTIONAL
	WSDATA   cUSERTITLE                AS string OPTIONAL
	WSDATA   cUSERTYPE                 AS string
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT MTCUSTOMERPRODUCT_USERFIELD
	::Init()
Return Self

WSMETHOD INIT WSCLIENT MTCUSTOMERPRODUCT_USERFIELD
Return

WSMETHOD CLONE WSCLIENT MTCUSTOMERPRODUCT_USERFIELD
	Local oClone := MTCUSTOMERPRODUCT_USERFIELD():NEW()
	oClone:cUSERCOMBOBOX        := ::cUSERCOMBOBOX
	oClone:nUSERDEC             := ::nUSERDEC
	oClone:cUSERF3              := ::cUSERF3
	oClone:cUSERNAME            := ::cUSERNAME
	oClone:lUSEROBLIG           := ::lUSEROBLIG
	oClone:cUSERPICTURE         := ::cUSERPICTURE
	oClone:nUSERSIZE            := ::nUSERSIZE
	oClone:cUSERTAG             := ::cUSERTAG
	oClone:cUSERTITLE           := ::cUSERTITLE
	oClone:cUSERTYPE            := ::cUSERTYPE
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT MTCUSTOMERPRODUCT_USERFIELD
	::Init()
	If oResponse = NIL ; Return ; Endif 
	::cUSERCOMBOBOX      :=  WSAdvValue( oResponse,"_USERCOMBOBOX","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::nUSERDEC           :=  WSAdvValue( oResponse,"_USERDEC","integer",NIL,NIL,NIL,"N",NIL,NIL) 
	::cUSERF3            :=  WSAdvValue( oResponse,"_USERF3","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cUSERNAME          :=  WSAdvValue( oResponse,"_USERNAME","string",NIL,"Property cUSERNAME as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::lUSEROBLIG         :=  WSAdvValue( oResponse,"_USEROBLIG","boolean",NIL,NIL,NIL,"L",NIL,NIL) 
	::cUSERPICTURE       :=  WSAdvValue( oResponse,"_USERPICTURE","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::nUSERSIZE          :=  WSAdvValue( oResponse,"_USERSIZE","integer",NIL,NIL,NIL,"N",NIL,NIL) 
	::cUSERTAG           :=  WSAdvValue( oResponse,"_USERTAG","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cUSERTITLE         :=  WSAdvValue( oResponse,"_USERTITLE","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cUSERTYPE          :=  WSAdvValue( oResponse,"_USERTYPE","string",NIL,"Property cUSERTYPE as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
Return

// WSDL Data Structure BILLVIEW

WSSTRUCT MTCUSTOMERPRODUCT_BILLVIEW
	WSDATA   nBALANCECURRENCYVALUE     AS float OPTIONAL
	WSDATA   nBALANCEVALUE             AS float OPTIONAL
	WSDATA   cBANK                     AS string
	WSDATA   cBILLNUMBER               AS string
	WSDATA   cBILLTYPE                 AS string
	WSDATA   cCLASSCODE                AS string
	WSDATA   nCURRENCY                 AS integer
	WSDATA   cCURRENCYSIMBOL           AS string
	WSDATA   cCUSTOMERCODE             AS string OPTIONAL
	WSDATA   cCUSTOMERNAME             AS string OPTIONAL
	WSDATA   nDAYLYINTERESTRATE        AS float
	WSDATA   nDAYLYINTERESTVALUE       AS float
	WSDATA   nDAYSFORDISCOUNT          AS integer OPTIONAL
	WSDATA   nDECREASEVALUE            AS float
	WSDATA   nDEDUCTIONSVALUE          AS float OPTIONAL
	WSDATA   nDELAYINDAYS              AS integer
	WSDATA   nFINANCIALDISCOUNT        AS float OPTIONAL
	WSDATA   cHISTORY                  AS string
	WSDATA   nINCREASEVALUE            AS float
	WSDATA   cINSTALLMENT              AS string
	WSDATA   dISSUEDATE                AS date
	WSDATA   nORIGINALCURRENCYVALUE    AS float
	WSDATA   dORIGINALDUEDATE          AS date
	WSDATA   nORIGINALVALUE            AS float
	WSDATA   cPREFIX                   AS string
	WSDATA   dREALDUEDATE              AS date
	WSDATA   cUNITCUSTOMERCODE         AS string OPTIONAL
	WSDATA   oWSUSERFIELDS             AS MTCUSTOMERPRODUCT_ARRAYOFUSERFIELD OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT MTCUSTOMERPRODUCT_BILLVIEW
	::Init()
Return Self

WSMETHOD INIT WSCLIENT MTCUSTOMERPRODUCT_BILLVIEW
Return

WSMETHOD CLONE WSCLIENT MTCUSTOMERPRODUCT_BILLVIEW
	Local oClone := MTCUSTOMERPRODUCT_BILLVIEW():NEW()
	oClone:nBALANCECURRENCYVALUE := ::nBALANCECURRENCYVALUE
	oClone:nBALANCEVALUE        := ::nBALANCEVALUE
	oClone:cBANK                := ::cBANK
	oClone:cBILLNUMBER          := ::cBILLNUMBER
	oClone:cBILLTYPE            := ::cBILLTYPE
	oClone:cCLASSCODE           := ::cCLASSCODE
	oClone:nCURRENCY            := ::nCURRENCY
	oClone:cCURRENCYSIMBOL      := ::cCURRENCYSIMBOL
	oClone:cCUSTOMERCODE        := ::cCUSTOMERCODE
	oClone:cCUSTOMERNAME        := ::cCUSTOMERNAME
	oClone:nDAYLYINTERESTRATE   := ::nDAYLYINTERESTRATE
	oClone:nDAYLYINTERESTVALUE  := ::nDAYLYINTERESTVALUE
	oClone:nDAYSFORDISCOUNT     := ::nDAYSFORDISCOUNT
	oClone:nDECREASEVALUE       := ::nDECREASEVALUE
	oClone:nDEDUCTIONSVALUE     := ::nDEDUCTIONSVALUE
	oClone:nDELAYINDAYS         := ::nDELAYINDAYS
	oClone:nFINANCIALDISCOUNT   := ::nFINANCIALDISCOUNT
	oClone:cHISTORY             := ::cHISTORY
	oClone:nINCREASEVALUE       := ::nINCREASEVALUE
	oClone:cINSTALLMENT         := ::cINSTALLMENT
	oClone:dISSUEDATE           := ::dISSUEDATE
	oClone:nORIGINALCURRENCYVALUE := ::nORIGINALCURRENCYVALUE
	oClone:dORIGINALDUEDATE     := ::dORIGINALDUEDATE
	oClone:nORIGINALVALUE       := ::nORIGINALVALUE
	oClone:cPREFIX              := ::cPREFIX
	oClone:dREALDUEDATE         := ::dREALDUEDATE
	oClone:cUNITCUSTOMERCODE    := ::cUNITCUSTOMERCODE
	oClone:oWSUSERFIELDS        := IIF(::oWSUSERFIELDS = NIL , NIL , ::oWSUSERFIELDS:Clone() )
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT MTCUSTOMERPRODUCT_BILLVIEW
	Local oNode28
	::Init()
	If oResponse = NIL ; Return ; Endif 
	::nBALANCECURRENCYVALUE :=  WSAdvValue( oResponse,"_BALANCECURRENCYVALUE","float",NIL,NIL,NIL,"N",NIL,NIL) 
	::nBALANCEVALUE      :=  WSAdvValue( oResponse,"_BALANCEVALUE","float",NIL,NIL,NIL,"N",NIL,NIL) 
	::cBANK              :=  WSAdvValue( oResponse,"_BANK","string",NIL,"Property cBANK as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::cBILLNUMBER        :=  WSAdvValue( oResponse,"_BILLNUMBER","string",NIL,"Property cBILLNUMBER as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::cBILLTYPE          :=  WSAdvValue( oResponse,"_BILLTYPE","string",NIL,"Property cBILLTYPE as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::cCLASSCODE         :=  WSAdvValue( oResponse,"_CLASSCODE","string",NIL,"Property cCLASSCODE as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::nCURRENCY          :=  WSAdvValue( oResponse,"_CURRENCY","integer",NIL,"Property nCURRENCY as s:integer on SOAP Response not found.",NIL,"N",NIL,NIL) 
	::cCURRENCYSIMBOL    :=  WSAdvValue( oResponse,"_CURRENCYSIMBOL","string",NIL,"Property cCURRENCYSIMBOL as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::cCUSTOMERCODE      :=  WSAdvValue( oResponse,"_CUSTOMERCODE","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cCUSTOMERNAME      :=  WSAdvValue( oResponse,"_CUSTOMERNAME","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::nDAYLYINTERESTRATE :=  WSAdvValue( oResponse,"_DAYLYINTERESTRATE","float",NIL,"Property nDAYLYINTERESTRATE as s:float on SOAP Response not found.",NIL,"N",NIL,NIL) 
	::nDAYLYINTERESTVALUE :=  WSAdvValue( oResponse,"_DAYLYINTERESTVALUE","float",NIL,"Property nDAYLYINTERESTVALUE as s:float on SOAP Response not found.",NIL,"N",NIL,NIL) 
	::nDAYSFORDISCOUNT   :=  WSAdvValue( oResponse,"_DAYSFORDISCOUNT","integer",NIL,NIL,NIL,"N",NIL,NIL) 
	::nDECREASEVALUE     :=  WSAdvValue( oResponse,"_DECREASEVALUE","float",NIL,"Property nDECREASEVALUE as s:float on SOAP Response not found.",NIL,"N",NIL,NIL) 
	::nDEDUCTIONSVALUE   :=  WSAdvValue( oResponse,"_DEDUCTIONSVALUE","float",NIL,NIL,NIL,"N",NIL,NIL) 
	::nDELAYINDAYS       :=  WSAdvValue( oResponse,"_DELAYINDAYS","integer",NIL,"Property nDELAYINDAYS as s:integer on SOAP Response not found.",NIL,"N",NIL,NIL) 
	::nFINANCIALDISCOUNT :=  WSAdvValue( oResponse,"_FINANCIALDISCOUNT","float",NIL,NIL,NIL,"N",NIL,NIL) 
	::cHISTORY           :=  WSAdvValue( oResponse,"_HISTORY","string",NIL,"Property cHISTORY as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::nINCREASEVALUE     :=  WSAdvValue( oResponse,"_INCREASEVALUE","float",NIL,"Property nINCREASEVALUE as s:float on SOAP Response not found.",NIL,"N",NIL,NIL) 
	::cINSTALLMENT       :=  WSAdvValue( oResponse,"_INSTALLMENT","string",NIL,"Property cINSTALLMENT as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::dISSUEDATE         :=  WSAdvValue( oResponse,"_ISSUEDATE","date",NIL,"Property dISSUEDATE as s:date on SOAP Response not found.",NIL,"D",NIL,NIL) 
	::nORIGINALCURRENCYVALUE :=  WSAdvValue( oResponse,"_ORIGINALCURRENCYVALUE","float",NIL,"Property nORIGINALCURRENCYVALUE as s:float on SOAP Response not found.",NIL,"N",NIL,NIL) 
	::dORIGINALDUEDATE   :=  WSAdvValue( oResponse,"_ORIGINALDUEDATE","date",NIL,"Property dORIGINALDUEDATE as s:date on SOAP Response not found.",NIL,"D",NIL,NIL) 
	::nORIGINALVALUE     :=  WSAdvValue( oResponse,"_ORIGINALVALUE","float",NIL,"Property nORIGINALVALUE as s:float on SOAP Response not found.",NIL,"N",NIL,NIL) 
	::cPREFIX            :=  WSAdvValue( oResponse,"_PREFIX","string",NIL,"Property cPREFIX as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::dREALDUEDATE       :=  WSAdvValue( oResponse,"_REALDUEDATE","date",NIL,"Property dREALDUEDATE as s:date on SOAP Response not found.",NIL,"D",NIL,NIL) 
	::cUNITCUSTOMERCODE  :=  WSAdvValue( oResponse,"_UNITCUSTOMERCODE","string",NIL,NIL,NIL,"S",NIL,NIL) 
	oNode28 :=  WSAdvValue( oResponse,"_USERFIELDS","ARRAYOFUSERFIELD",NIL,NIL,NIL,"O",NIL,NIL) 
	If oNode28 != NIL
		::oWSUSERFIELDS := MTCUSTOMERPRODUCT_ARRAYOFUSERFIELD():New()
		::oWSUSERFIELDS:SoapRecv(oNode28)
	EndIf
Return

// WSDL Data Structure TAXESVIEW

WSSTRUCT MTCUSTOMERPRODUCT_TAXESVIEW
	WSDATA   nTAXAMOUNT                AS float
	WSDATA   nTAXBASE                  AS float
	WSDATA   cTAXCODE                  AS string
	WSDATA   nTAXRATE                  AS float
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT MTCUSTOMERPRODUCT_TAXESVIEW
	::Init()
Return Self

WSMETHOD INIT WSCLIENT MTCUSTOMERPRODUCT_TAXESVIEW
Return

WSMETHOD CLONE WSCLIENT MTCUSTOMERPRODUCT_TAXESVIEW
	Local oClone := MTCUSTOMERPRODUCT_TAXESVIEW():NEW()
	oClone:nTAXAMOUNT           := ::nTAXAMOUNT
	oClone:nTAXBASE             := ::nTAXBASE
	oClone:cTAXCODE             := ::cTAXCODE
	oClone:nTAXRATE             := ::nTAXRATE
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT MTCUSTOMERPRODUCT_TAXESVIEW
	::Init()
	If oResponse = NIL ; Return ; Endif 
	::nTAXAMOUNT         :=  WSAdvValue( oResponse,"_TAXAMOUNT","float",NIL,"Property nTAXAMOUNT as s:float on SOAP Response not found.",NIL,"N",NIL,NIL) 
	::nTAXBASE           :=  WSAdvValue( oResponse,"_TAXBASE","float",NIL,"Property nTAXBASE as s:float on SOAP Response not found.",NIL,"N",NIL,NIL) 
	::cTAXCODE           :=  WSAdvValue( oResponse,"_TAXCODE","string",NIL,"Property cTAXCODE as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::nTAXRATE           :=  WSAdvValue( oResponse,"_TAXRATE","float",NIL,"Property nTAXRATE as s:float on SOAP Response not found.",NIL,"N",NIL,NIL) 
Return


