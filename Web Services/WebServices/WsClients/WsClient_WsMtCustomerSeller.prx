#INCLUDE "protheus.ch"
#INCLUDE "apwebsrv.ch"

/* ===============================================================================
WSDL Location    http://localhost:8059/ws/MTCUSTOMERSELLER.apw?WSDL
Gerado em        12/14/20 11:06:38
Observações      Código-Fonte gerado por ADVPL WSDL Client 1.120703
                 Alterações neste arquivo podem causar funcionamento incorreto
                 e serão perdidas caso o código-fonte seja gerado novamente.
=============================================================================== */

User Function _WPQLLJN ; Return  // "dummy" function - Internal Use 

/* -------------------------------------------------------------------------------
WSDL Service WSMTCUSTOMERSELLER
------------------------------------------------------------------------------- */

WSCLIENT WSMTCUSTOMERSELLER

	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD RESET
	WSMETHOD CLONE
	WSMETHOD GETHEADER
	WSMETHOD GETSELLER
	WSMETHOD GETTYPEOFPHONE

	WSDATA   _URL                      AS String
	WSDATA   _HEADOUT                  AS Array of String
	WSDATA   _COOKIES                  AS Array of String
	WSDATA   cHEADERTYPE               AS string
	WSDATA   oWSGETHEADERRESULT        AS MTCUSTOMERSELLER_ARRAYOFBRWHEADER
	WSDATA   cUSERCODE                 AS string
	WSDATA   cCUSTOMERID               AS string
	WSDATA   cSELLERCODE               AS string
	WSDATA   oWSGETSELLERRESULT        AS MTCUSTOMERSELLER_SELLERVIEW
	WSDATA   oWSGETTYPEOFPHONERESULT   AS MTCUSTOMERSELLER_ARRAYOFGENERICSTRUCT

ENDWSCLIENT

WSMETHOD NEW WSCLIENT WSMTCUSTOMERSELLER
::Init()
If !FindFunction("XMLCHILDEX")
	UserException("O Código-Fonte Client atual requer os executáveis do Protheus Build [7.00.191205P-20201009] ou superior. Atualize o Protheus ou gere o Código-Fonte novamente utilizando o Build atual.")
EndIf
Return Self

WSMETHOD INIT WSCLIENT WSMTCUSTOMERSELLER
	::oWSGETHEADERRESULT := MTCUSTOMERSELLER_ARRAYOFBRWHEADER():New()
	::oWSGETSELLERRESULT := MTCUSTOMERSELLER_SELLERVIEW():New()
	::oWSGETTYPEOFPHONERESULT := MTCUSTOMERSELLER_ARRAYOFGENERICSTRUCT():New()
Return

WSMETHOD RESET WSCLIENT WSMTCUSTOMERSELLER
	::cHEADERTYPE        := NIL 
	::oWSGETHEADERRESULT := NIL 
	::cUSERCODE          := NIL 
	::cCUSTOMERID        := NIL 
	::cSELLERCODE        := NIL 
	::oWSGETSELLERRESULT := NIL 
	::oWSGETTYPEOFPHONERESULT := NIL 
	::Init()
Return

WSMETHOD CLONE WSCLIENT WSMTCUSTOMERSELLER
Local oClone := WSMTCUSTOMERSELLER():New()
	oClone:_URL          := ::_URL 
	oClone:cHEADERTYPE   := ::cHEADERTYPE
	oClone:oWSGETHEADERRESULT :=  IIF(::oWSGETHEADERRESULT = NIL , NIL ,::oWSGETHEADERRESULT:Clone() )
	oClone:cUSERCODE     := ::cUSERCODE
	oClone:cCUSTOMERID   := ::cCUSTOMERID
	oClone:cSELLERCODE   := ::cSELLERCODE
	oClone:oWSGETSELLERRESULT :=  IIF(::oWSGETSELLERRESULT = NIL , NIL ,::oWSGETSELLERRESULT:Clone() )
	oClone:oWSGETTYPEOFPHONERESULT :=  IIF(::oWSGETTYPEOFPHONERESULT = NIL , NIL ,::oWSGETTYPEOFPHONERESULT:Clone() )
Return oClone

// WSDL Method GETHEADER of Service WSMTCUSTOMERSELLER

WSMETHOD GETHEADER WSSEND cHEADERTYPE WSRECEIVE oWSGETHEADERRESULT WSCLIENT WSMTCUSTOMERSELLER
Local cSoap := "" , oXmlRet

BEGIN WSMETHOD

cSoap += '<GETHEADER xmlns="http://webservices.microsiga.com.br/mtcustomerseller.apw">'
cSoap += WSSoapValue("HEADERTYPE", ::cHEADERTYPE, cHEADERTYPE , "string", .T. , .F., 0 , NIL, .F.,.F.) 
cSoap += "</GETHEADER>"

oXmlRet := SvcSoapCall(Self,cSoap,; 
	"http://webservices.microsiga.com.br/mtcustomerseller.apw/GETHEADER",; 
	"DOCUMENT","http://webservices.microsiga.com.br/mtcustomerseller.apw",,"1.031217",; 
	"http://localhost:8059/ws/MTCUSTOMERSELLER.apw")

::Init()
::oWSGETHEADERRESULT:SoapRecv( WSAdvValue( oXmlRet,"_GETHEADERRESPONSE:_GETHEADERRESULT","ARRAYOFBRWHEADER",NIL,NIL,NIL,NIL,NIL,NIL) )

END WSMETHOD

oXmlRet := NIL
Return .T.

// WSDL Method GETSELLER of Service WSMTCUSTOMERSELLER

WSMETHOD GETSELLER WSSEND cUSERCODE,cCUSTOMERID,cSELLERCODE WSRECEIVE oWSGETSELLERRESULT WSCLIENT WSMTCUSTOMERSELLER
Local cSoap := "" , oXmlRet

BEGIN WSMETHOD

cSoap += '<GETSELLER xmlns="http://webservices.microsiga.com.br/mtcustomerseller.apw">'
cSoap += WSSoapValue("USERCODE", ::cUSERCODE, cUSERCODE , "string", .T. , .F., 0 , NIL, .F.,.F.) 
cSoap += WSSoapValue("CUSTOMERID", ::cCUSTOMERID, cCUSTOMERID , "string", .T. , .F., 0 , NIL, .F.,.F.) 
cSoap += WSSoapValue("SELLERCODE", ::cSELLERCODE, cSELLERCODE , "string", .T. , .F., 0 , NIL, .F.,.F.) 
cSoap += "</GETSELLER>"

oXmlRet := SvcSoapCall(Self,cSoap,; 
	"http://webservices.microsiga.com.br/mtcustomerseller.apw/GETSELLER",; 
	"DOCUMENT","http://webservices.microsiga.com.br/mtcustomerseller.apw",,"1.031217",; 
	"http://localhost:8059/ws/MTCUSTOMERSELLER.apw")

::Init()
::oWSGETSELLERRESULT:SoapRecv( WSAdvValue( oXmlRet,"_GETSELLERRESPONSE:_GETSELLERRESULT","SELLERVIEW",NIL,NIL,NIL,NIL,NIL,NIL) )

END WSMETHOD

oXmlRet := NIL
Return .T.

// WSDL Method GETTYPEOFPHONE of Service WSMTCUSTOMERSELLER

WSMETHOD GETTYPEOFPHONE WSSEND NULLPARAM WSRECEIVE oWSGETTYPEOFPHONERESULT WSCLIENT WSMTCUSTOMERSELLER
Local cSoap := "" , oXmlRet

BEGIN WSMETHOD

cSoap += '<GETTYPEOFPHONE xmlns="http://webservices.microsiga.com.br/mtcustomerseller.apw">'
cSoap += "</GETTYPEOFPHONE>"

oXmlRet := SvcSoapCall(Self,cSoap,; 
	"http://webservices.microsiga.com.br/mtcustomerseller.apw/GETTYPEOFPHONE",; 
	"DOCUMENT","http://webservices.microsiga.com.br/mtcustomerseller.apw",,"1.031217",; 
	"http://localhost:8059/ws/MTCUSTOMERSELLER.apw")

::Init()
::oWSGETTYPEOFPHONERESULT:SoapRecv( WSAdvValue( oXmlRet,"_GETTYPEOFPHONERESPONSE:_GETTYPEOFPHONERESULT","ARRAYOFGENERICSTRUCT",NIL,NIL,NIL,NIL,NIL,NIL) )

END WSMETHOD

oXmlRet := NIL
Return .T.


// WSDL Data Structure ARRAYOFBRWHEADER

WSSTRUCT MTCUSTOMERSELLER_ARRAYOFBRWHEADER
	WSDATA   oWSBRWHEADER              AS MTCUSTOMERSELLER_BRWHEADER OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT MTCUSTOMERSELLER_ARRAYOFBRWHEADER
	::Init()
Return Self

WSMETHOD INIT WSCLIENT MTCUSTOMERSELLER_ARRAYOFBRWHEADER
	::oWSBRWHEADER         := {} // Array Of  MTCUSTOMERSELLER_BRWHEADER():New()
Return

WSMETHOD CLONE WSCLIENT MTCUSTOMERSELLER_ARRAYOFBRWHEADER
	Local oClone := MTCUSTOMERSELLER_ARRAYOFBRWHEADER():NEW()
	oClone:oWSBRWHEADER := NIL
	If ::oWSBRWHEADER <> NIL 
		oClone:oWSBRWHEADER := {}
		aEval( ::oWSBRWHEADER , { |x| aadd( oClone:oWSBRWHEADER , x:Clone() ) } )
	Endif 
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT MTCUSTOMERSELLER_ARRAYOFBRWHEADER
	Local nRElem1, oNodes1, nTElem1
	::Init()
	If oResponse = NIL ; Return ; Endif 
	oNodes1 :=  WSAdvValue( oResponse,"_BRWHEADER","BRWHEADER",{},NIL,.T.,"O",NIL,NIL) 
	nTElem1 := len(oNodes1)
	For nRElem1 := 1 to nTElem1 
		If !WSIsNilNode( oNodes1[nRElem1] )
			aadd(::oWSBRWHEADER , MTCUSTOMERSELLER_BRWHEADER():New() )
			::oWSBRWHEADER[len(::oWSBRWHEADER)]:SoapRecv(oNodes1[nRElem1])
		Endif
	Next
Return

// WSDL Data Structure SELLERVIEW

WSSTRUCT MTCUSTOMERSELLER_SELLERVIEW
	WSDATA   oWSADDRESSES              AS MTCUSTOMERSELLER_ADDRESSVIEW
	WSDATA   cDISTRICTID               AS string
	WSDATA   cEMAIL                    AS string
	WSDATA   cFEDERALID                AS string
	WSDATA   cHOMEPAGE                 AS string
	WSDATA   cNAME                     AS string
	WSDATA   cNICKNAME                 AS string
	WSDATA   oWSPHONES                 AS MTCUSTOMERSELLER_ARRAYOFPHONEVIEW OPTIONAL
	WSDATA   cSALESMANAGERCODE         AS string OPTIONAL
	WSDATA   cSALESSUPERVISORCODE      AS string OPTIONAL
	WSDATA   cSELLERCODE               AS string
	WSDATA   cSTATEID                  AS string
	WSDATA   oWSUSERFIELDS             AS MTCUSTOMERSELLER_ARRAYOFUSERFIELD OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT MTCUSTOMERSELLER_SELLERVIEW
	::Init()
Return Self

WSMETHOD INIT WSCLIENT MTCUSTOMERSELLER_SELLERVIEW
Return

WSMETHOD CLONE WSCLIENT MTCUSTOMERSELLER_SELLERVIEW
	Local oClone := MTCUSTOMERSELLER_SELLERVIEW():NEW()
	oClone:oWSADDRESSES         := IIF(::oWSADDRESSES = NIL , NIL , ::oWSADDRESSES:Clone() )
	oClone:cDISTRICTID          := ::cDISTRICTID
	oClone:cEMAIL               := ::cEMAIL
	oClone:cFEDERALID           := ::cFEDERALID
	oClone:cHOMEPAGE            := ::cHOMEPAGE
	oClone:cNAME                := ::cNAME
	oClone:cNICKNAME            := ::cNICKNAME
	oClone:oWSPHONES            := IIF(::oWSPHONES = NIL , NIL , ::oWSPHONES:Clone() )
	oClone:cSALESMANAGERCODE    := ::cSALESMANAGERCODE
	oClone:cSALESSUPERVISORCODE := ::cSALESSUPERVISORCODE
	oClone:cSELLERCODE          := ::cSELLERCODE
	oClone:cSTATEID             := ::cSTATEID
	oClone:oWSUSERFIELDS        := IIF(::oWSUSERFIELDS = NIL , NIL , ::oWSUSERFIELDS:Clone() )
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT MTCUSTOMERSELLER_SELLERVIEW
	Local oNode1
	Local oNode8
	Local oNode13
	::Init()
	If oResponse = NIL ; Return ; Endif 
	oNode1 :=  WSAdvValue( oResponse,"_ADDRESSES","ADDRESSVIEW",NIL,"Property oWSADDRESSES as s0:ADDRESSVIEW on SOAP Response not found.",NIL,"O",NIL,NIL) 
	If oNode1 != NIL
		::oWSADDRESSES := MTCUSTOMERSELLER_ADDRESSVIEW():New()
		::oWSADDRESSES:SoapRecv(oNode1)
	EndIf
	::cDISTRICTID        :=  WSAdvValue( oResponse,"_DISTRICTID","string",NIL,"Property cDISTRICTID as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::cEMAIL             :=  WSAdvValue( oResponse,"_EMAIL","string",NIL,"Property cEMAIL as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::cFEDERALID         :=  WSAdvValue( oResponse,"_FEDERALID","string",NIL,"Property cFEDERALID as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::cHOMEPAGE          :=  WSAdvValue( oResponse,"_HOMEPAGE","string",NIL,"Property cHOMEPAGE as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::cNAME              :=  WSAdvValue( oResponse,"_NAME","string",NIL,"Property cNAME as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::cNICKNAME          :=  WSAdvValue( oResponse,"_NICKNAME","string",NIL,"Property cNICKNAME as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	oNode8 :=  WSAdvValue( oResponse,"_PHONES","ARRAYOFPHONEVIEW",NIL,NIL,NIL,"O",NIL,NIL) 
	If oNode8 != NIL
		::oWSPHONES := MTCUSTOMERSELLER_ARRAYOFPHONEVIEW():New()
		::oWSPHONES:SoapRecv(oNode8)
	EndIf
	::cSALESMANAGERCODE  :=  WSAdvValue( oResponse,"_SALESMANAGERCODE","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cSALESSUPERVISORCODE :=  WSAdvValue( oResponse,"_SALESSUPERVISORCODE","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cSELLERCODE        :=  WSAdvValue( oResponse,"_SELLERCODE","string",NIL,"Property cSELLERCODE as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::cSTATEID           :=  WSAdvValue( oResponse,"_STATEID","string",NIL,"Property cSTATEID as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	oNode13 :=  WSAdvValue( oResponse,"_USERFIELDS","ARRAYOFUSERFIELD",NIL,NIL,NIL,"O",NIL,NIL) 
	If oNode13 != NIL
		::oWSUSERFIELDS := MTCUSTOMERSELLER_ARRAYOFUSERFIELD():New()
		::oWSUSERFIELDS:SoapRecv(oNode13)
	EndIf
Return

// WSDL Data Structure ARRAYOFGENERICSTRUCT

WSSTRUCT MTCUSTOMERSELLER_ARRAYOFGENERICSTRUCT
	WSDATA   oWSGENERICSTRUCT          AS MTCUSTOMERSELLER_GENERICSTRUCT OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT MTCUSTOMERSELLER_ARRAYOFGENERICSTRUCT
	::Init()
Return Self

WSMETHOD INIT WSCLIENT MTCUSTOMERSELLER_ARRAYOFGENERICSTRUCT
	::oWSGENERICSTRUCT     := {} // Array Of  MTCUSTOMERSELLER_GENERICSTRUCT():New()
Return

WSMETHOD CLONE WSCLIENT MTCUSTOMERSELLER_ARRAYOFGENERICSTRUCT
	Local oClone := MTCUSTOMERSELLER_ARRAYOFGENERICSTRUCT():NEW()
	oClone:oWSGENERICSTRUCT := NIL
	If ::oWSGENERICSTRUCT <> NIL 
		oClone:oWSGENERICSTRUCT := {}
		aEval( ::oWSGENERICSTRUCT , { |x| aadd( oClone:oWSGENERICSTRUCT , x:Clone() ) } )
	Endif 
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT MTCUSTOMERSELLER_ARRAYOFGENERICSTRUCT
	Local nRElem1, oNodes1, nTElem1
	::Init()
	If oResponse = NIL ; Return ; Endif 
	oNodes1 :=  WSAdvValue( oResponse,"_GENERICSTRUCT","GENERICSTRUCT",{},NIL,.T.,"O",NIL,NIL) 
	nTElem1 := len(oNodes1)
	For nRElem1 := 1 to nTElem1 
		If !WSIsNilNode( oNodes1[nRElem1] )
			aadd(::oWSGENERICSTRUCT , MTCUSTOMERSELLER_GENERICSTRUCT():New() )
			::oWSGENERICSTRUCT[len(::oWSGENERICSTRUCT)]:SoapRecv(oNodes1[nRElem1])
		Endif
	Next
Return

// WSDL Data Structure BRWHEADER

WSSTRUCT MTCUSTOMERSELLER_BRWHEADER
	WSDATA   cHEADERCOMBOBOX           AS string OPTIONAL
	WSDATA   nHEADERDEC                AS integer
	WSDATA   cHEADERF3                 AS string OPTIONAL
	WSDATA   cHEADERFIELD              AS string
	WSDATA   lHEADEROBLIG              AS boolean OPTIONAL
	WSDATA   cHEADERPICTURE            AS string
	WSDATA   nHEADERSIZE               AS integer
	WSDATA   cHEADERTITLE              AS string
	WSDATA   cHEADERTYPE               AS string
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT MTCUSTOMERSELLER_BRWHEADER
	::Init()
Return Self

WSMETHOD INIT WSCLIENT MTCUSTOMERSELLER_BRWHEADER
Return

WSMETHOD CLONE WSCLIENT MTCUSTOMERSELLER_BRWHEADER
	Local oClone := MTCUSTOMERSELLER_BRWHEADER():NEW()
	oClone:cHEADERCOMBOBOX      := ::cHEADERCOMBOBOX
	oClone:nHEADERDEC           := ::nHEADERDEC
	oClone:cHEADERF3            := ::cHEADERF3
	oClone:cHEADERFIELD         := ::cHEADERFIELD
	oClone:lHEADEROBLIG         := ::lHEADEROBLIG
	oClone:cHEADERPICTURE       := ::cHEADERPICTURE
	oClone:nHEADERSIZE          := ::nHEADERSIZE
	oClone:cHEADERTITLE         := ::cHEADERTITLE
	oClone:cHEADERTYPE          := ::cHEADERTYPE
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT MTCUSTOMERSELLER_BRWHEADER
	::Init()
	If oResponse = NIL ; Return ; Endif 
	::cHEADERCOMBOBOX    :=  WSAdvValue( oResponse,"_HEADERCOMBOBOX","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::nHEADERDEC         :=  WSAdvValue( oResponse,"_HEADERDEC","integer",NIL,"Property nHEADERDEC as s:integer on SOAP Response not found.",NIL,"N",NIL,NIL) 
	::cHEADERF3          :=  WSAdvValue( oResponse,"_HEADERF3","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cHEADERFIELD       :=  WSAdvValue( oResponse,"_HEADERFIELD","string",NIL,"Property cHEADERFIELD as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::lHEADEROBLIG       :=  WSAdvValue( oResponse,"_HEADEROBLIG","boolean",NIL,NIL,NIL,"L",NIL,NIL) 
	::cHEADERPICTURE     :=  WSAdvValue( oResponse,"_HEADERPICTURE","string",NIL,"Property cHEADERPICTURE as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::nHEADERSIZE        :=  WSAdvValue( oResponse,"_HEADERSIZE","integer",NIL,"Property nHEADERSIZE as s:integer on SOAP Response not found.",NIL,"N",NIL,NIL) 
	::cHEADERTITLE       :=  WSAdvValue( oResponse,"_HEADERTITLE","string",NIL,"Property cHEADERTITLE as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::cHEADERTYPE        :=  WSAdvValue( oResponse,"_HEADERTYPE","string",NIL,"Property cHEADERTYPE as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
Return

// WSDL Data Structure ADDRESSVIEW

WSSTRUCT MTCUSTOMERSELLER_ADDRESSVIEW
	WSDATA   cADDRESS                  AS string
	WSDATA   cADDRESSNUMBER            AS string
	WSDATA   cCOUNTRY                  AS string OPTIONAL
	WSDATA   cDISTRICT                 AS string
	WSDATA   cSTATE                    AS string
	WSDATA   cTYPEOFADDRESS            AS string
	WSDATA   cZIPCODE                  AS string OPTIONAL
	WSDATA   cZONE                     AS string OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT MTCUSTOMERSELLER_ADDRESSVIEW
	::Init()
Return Self

WSMETHOD INIT WSCLIENT MTCUSTOMERSELLER_ADDRESSVIEW
Return

WSMETHOD CLONE WSCLIENT MTCUSTOMERSELLER_ADDRESSVIEW
	Local oClone := MTCUSTOMERSELLER_ADDRESSVIEW():NEW()
	oClone:cADDRESS             := ::cADDRESS
	oClone:cADDRESSNUMBER       := ::cADDRESSNUMBER
	oClone:cCOUNTRY             := ::cCOUNTRY
	oClone:cDISTRICT            := ::cDISTRICT
	oClone:cSTATE               := ::cSTATE
	oClone:cTYPEOFADDRESS       := ::cTYPEOFADDRESS
	oClone:cZIPCODE             := ::cZIPCODE
	oClone:cZONE                := ::cZONE
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT MTCUSTOMERSELLER_ADDRESSVIEW
	::Init()
	If oResponse = NIL ; Return ; Endif 
	::cADDRESS           :=  WSAdvValue( oResponse,"_ADDRESS","string",NIL,"Property cADDRESS as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::cADDRESSNUMBER     :=  WSAdvValue( oResponse,"_ADDRESSNUMBER","string",NIL,"Property cADDRESSNUMBER as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::cCOUNTRY           :=  WSAdvValue( oResponse,"_COUNTRY","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cDISTRICT          :=  WSAdvValue( oResponse,"_DISTRICT","string",NIL,"Property cDISTRICT as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::cSTATE             :=  WSAdvValue( oResponse,"_STATE","string",NIL,"Property cSTATE as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::cTYPEOFADDRESS     :=  WSAdvValue( oResponse,"_TYPEOFADDRESS","string",NIL,"Property cTYPEOFADDRESS as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::cZIPCODE           :=  WSAdvValue( oResponse,"_ZIPCODE","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cZONE              :=  WSAdvValue( oResponse,"_ZONE","string",NIL,NIL,NIL,"S",NIL,NIL) 
Return

// WSDL Data Structure ARRAYOFPHONEVIEW

WSSTRUCT MTCUSTOMERSELLER_ARRAYOFPHONEVIEW
	WSDATA   oWSPHONEVIEW              AS MTCUSTOMERSELLER_PHONEVIEW OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT MTCUSTOMERSELLER_ARRAYOFPHONEVIEW
	::Init()
Return Self

WSMETHOD INIT WSCLIENT MTCUSTOMERSELLER_ARRAYOFPHONEVIEW
	::oWSPHONEVIEW         := {} // Array Of  MTCUSTOMERSELLER_PHONEVIEW():New()
Return

WSMETHOD CLONE WSCLIENT MTCUSTOMERSELLER_ARRAYOFPHONEVIEW
	Local oClone := MTCUSTOMERSELLER_ARRAYOFPHONEVIEW():NEW()
	oClone:oWSPHONEVIEW := NIL
	If ::oWSPHONEVIEW <> NIL 
		oClone:oWSPHONEVIEW := {}
		aEval( ::oWSPHONEVIEW , { |x| aadd( oClone:oWSPHONEVIEW , x:Clone() ) } )
	Endif 
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT MTCUSTOMERSELLER_ARRAYOFPHONEVIEW
	Local nRElem1, oNodes1, nTElem1
	::Init()
	If oResponse = NIL ; Return ; Endif 
	oNodes1 :=  WSAdvValue( oResponse,"_PHONEVIEW","PHONEVIEW",{},NIL,.T.,"O",NIL,NIL) 
	nTElem1 := len(oNodes1)
	For nRElem1 := 1 to nTElem1 
		If !WSIsNilNode( oNodes1[nRElem1] )
			aadd(::oWSPHONEVIEW , MTCUSTOMERSELLER_PHONEVIEW():New() )
			::oWSPHONEVIEW[len(::oWSPHONEVIEW)]:SoapRecv(oNodes1[nRElem1])
		Endif
	Next
Return

// WSDL Data Structure ARRAYOFUSERFIELD

WSSTRUCT MTCUSTOMERSELLER_ARRAYOFUSERFIELD
	WSDATA   oWSUSERFIELD              AS MTCUSTOMERSELLER_USERFIELD OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT MTCUSTOMERSELLER_ARRAYOFUSERFIELD
	::Init()
Return Self

WSMETHOD INIT WSCLIENT MTCUSTOMERSELLER_ARRAYOFUSERFIELD
	::oWSUSERFIELD         := {} // Array Of  MTCUSTOMERSELLER_USERFIELD():New()
Return

WSMETHOD CLONE WSCLIENT MTCUSTOMERSELLER_ARRAYOFUSERFIELD
	Local oClone := MTCUSTOMERSELLER_ARRAYOFUSERFIELD():NEW()
	oClone:oWSUSERFIELD := NIL
	If ::oWSUSERFIELD <> NIL 
		oClone:oWSUSERFIELD := {}
		aEval( ::oWSUSERFIELD , { |x| aadd( oClone:oWSUSERFIELD , x:Clone() ) } )
	Endif 
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT MTCUSTOMERSELLER_ARRAYOFUSERFIELD
	Local nRElem1, oNodes1, nTElem1
	::Init()
	If oResponse = NIL ; Return ; Endif 
	oNodes1 :=  WSAdvValue( oResponse,"_USERFIELD","USERFIELD",{},NIL,.T.,"O",NIL,NIL) 
	nTElem1 := len(oNodes1)
	For nRElem1 := 1 to nTElem1 
		If !WSIsNilNode( oNodes1[nRElem1] )
			aadd(::oWSUSERFIELD , MTCUSTOMERSELLER_USERFIELD():New() )
			::oWSUSERFIELD[len(::oWSUSERFIELD)]:SoapRecv(oNodes1[nRElem1])
		Endif
	Next
Return

// WSDL Data Structure GENERICSTRUCT

WSSTRUCT MTCUSTOMERSELLER_GENERICSTRUCT
	WSDATA   cCODE                     AS string
	WSDATA   cDESCRIPTION              AS string
	WSDATA   nVALUE                    AS float OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT MTCUSTOMERSELLER_GENERICSTRUCT
	::Init()
Return Self

WSMETHOD INIT WSCLIENT MTCUSTOMERSELLER_GENERICSTRUCT
Return

WSMETHOD CLONE WSCLIENT MTCUSTOMERSELLER_GENERICSTRUCT
	Local oClone := MTCUSTOMERSELLER_GENERICSTRUCT():NEW()
	oClone:cCODE                := ::cCODE
	oClone:cDESCRIPTION         := ::cDESCRIPTION
	oClone:nVALUE               := ::nVALUE
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT MTCUSTOMERSELLER_GENERICSTRUCT
	::Init()
	If oResponse = NIL ; Return ; Endif 
	::cCODE              :=  WSAdvValue( oResponse,"_CODE","string",NIL,"Property cCODE as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::cDESCRIPTION       :=  WSAdvValue( oResponse,"_DESCRIPTION","string",NIL,"Property cDESCRIPTION as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::nVALUE             :=  WSAdvValue( oResponse,"_VALUE","float",NIL,NIL,NIL,"N",NIL,NIL) 
Return

// WSDL Data Structure PHONEVIEW

WSSTRUCT MTCUSTOMERSELLER_PHONEVIEW
	WSDATA   cCOUNTRYAREACODE          AS string OPTIONAL
	WSDATA   cLOCALAREACODE            AS string OPTIONAL
	WSDATA   cPHONENUMBER              AS string OPTIONAL
	WSDATA   cTYPEOFPHONE              AS string
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT MTCUSTOMERSELLER_PHONEVIEW
	::Init()
Return Self

WSMETHOD INIT WSCLIENT MTCUSTOMERSELLER_PHONEVIEW
Return

WSMETHOD CLONE WSCLIENT MTCUSTOMERSELLER_PHONEVIEW
	Local oClone := MTCUSTOMERSELLER_PHONEVIEW():NEW()
	oClone:cCOUNTRYAREACODE     := ::cCOUNTRYAREACODE
	oClone:cLOCALAREACODE       := ::cLOCALAREACODE
	oClone:cPHONENUMBER         := ::cPHONENUMBER
	oClone:cTYPEOFPHONE         := ::cTYPEOFPHONE
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT MTCUSTOMERSELLER_PHONEVIEW
	::Init()
	If oResponse = NIL ; Return ; Endif 
	::cCOUNTRYAREACODE   :=  WSAdvValue( oResponse,"_COUNTRYAREACODE","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cLOCALAREACODE     :=  WSAdvValue( oResponse,"_LOCALAREACODE","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cPHONENUMBER       :=  WSAdvValue( oResponse,"_PHONENUMBER","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cTYPEOFPHONE       :=  WSAdvValue( oResponse,"_TYPEOFPHONE","string",NIL,"Property cTYPEOFPHONE as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
Return

// WSDL Data Structure USERFIELD

WSSTRUCT MTCUSTOMERSELLER_USERFIELD
	WSDATA   cUSERCOMBOBOX             AS string OPTIONAL
	WSDATA   nUSERDEC                  AS integer OPTIONAL
	WSDATA   cUSERF3                   AS string OPTIONAL
	WSDATA   cUSERNAME                 AS string
	WSDATA   lUSEROBLIG                AS boolean OPTIONAL
	WSDATA   cUSERPICTURE              AS string OPTIONAL
	WSDATA   nUSERSIZE                 AS integer OPTIONAL
	WSDATA   cUSERTAG                  AS string OPTIONAL
	WSDATA   cUSERTITLE                AS string OPTIONAL
	WSDATA   cUSERTYPE                 AS string
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT MTCUSTOMERSELLER_USERFIELD
	::Init()
Return Self

WSMETHOD INIT WSCLIENT MTCUSTOMERSELLER_USERFIELD
Return

WSMETHOD CLONE WSCLIENT MTCUSTOMERSELLER_USERFIELD
	Local oClone := MTCUSTOMERSELLER_USERFIELD():NEW()
	oClone:cUSERCOMBOBOX        := ::cUSERCOMBOBOX
	oClone:nUSERDEC             := ::nUSERDEC
	oClone:cUSERF3              := ::cUSERF3
	oClone:cUSERNAME            := ::cUSERNAME
	oClone:lUSEROBLIG           := ::lUSEROBLIG
	oClone:cUSERPICTURE         := ::cUSERPICTURE
	oClone:nUSERSIZE            := ::nUSERSIZE
	oClone:cUSERTAG             := ::cUSERTAG
	oClone:cUSERTITLE           := ::cUSERTITLE
	oClone:cUSERTYPE            := ::cUSERTYPE
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT MTCUSTOMERSELLER_USERFIELD
	::Init()
	If oResponse = NIL ; Return ; Endif 
	::cUSERCOMBOBOX      :=  WSAdvValue( oResponse,"_USERCOMBOBOX","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::nUSERDEC           :=  WSAdvValue( oResponse,"_USERDEC","integer",NIL,NIL,NIL,"N",NIL,NIL) 
	::cUSERF3            :=  WSAdvValue( oResponse,"_USERF3","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cUSERNAME          :=  WSAdvValue( oResponse,"_USERNAME","string",NIL,"Property cUSERNAME as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::lUSEROBLIG         :=  WSAdvValue( oResponse,"_USEROBLIG","boolean",NIL,NIL,NIL,"L",NIL,NIL) 
	::cUSERPICTURE       :=  WSAdvValue( oResponse,"_USERPICTURE","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::nUSERSIZE          :=  WSAdvValue( oResponse,"_USERSIZE","integer",NIL,NIL,NIL,"N",NIL,NIL) 
	::cUSERTAG           :=  WSAdvValue( oResponse,"_USERTAG","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cUSERTITLE         :=  WSAdvValue( oResponse,"_USERTITLE","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cUSERTYPE          :=  WSAdvValue( oResponse,"_USERTYPE","string",NIL,"Property cUSERTYPE as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
Return


