#INCLUDE "PROTHEUS.CH"
#INCLUDE "APWEBSRV.CH"

/* ===============================================================================
WSDL Location    http://localhost/ws/MTPROJECT.APW?WSDL
Gerado em        06/27/05 09:34:07
Observações      Código-Fonte gerado por ADVPL WSDL Client 1.050513
                 Alterações neste arquivo podem causar funcionamento incorreto
                 e serão perdidas caso o código-fonte seja gerado novamente.
=============================================================================== */

User Function _SVWKQKN ; Return  // "dummy" function - Internal Use 

/* -------------------------------------------------------------------------------
WSDL Service WSMTPROJECT
------------------------------------------------------------------------------- */

WSCLIENT WSMTPROJECT

	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD RESET
	WSMETHOD CLONE
	WSMETHOD BRWPROJECTS
	WSMETHOD GETHEADER
	WSMETHOD GETPROJECT

	WSDATA   _URL                      AS String
	WSDATA   cUSERCODE                 AS string
	WSDATA   dPROJECTDATEFROM          AS date
	WSDATA   dPROJECTDATETO            AS date
	WSDATA   cQUERYADDWHERE            AS string
	WSDATA   cINDEXKEY                 AS string
	WSDATA   oWSBRWPROJECTSRESULT      AS MTPROJECT_ARRAYOFPROJECTSVIEW
	WSDATA   cHEADERTYPE               AS string
	WSDATA   oWSGETHEADERRESULT        AS MTPROJECT_ARRAYOFBRWHEADER
	WSDATA   cPROJECTCODE              AS string
	WSDATA   oWSGETPROJECTRESULT       AS MTPROJECT_PROJECTSVIEW

ENDWSCLIENT

WSMETHOD NEW WSCLIENT WSMTPROJECT
::Init()
If !FindFunction("XMLCHILDEX")
	UserException("O Código-Fonte Client atual requer os executáveis do Protheus Build [7.00.050331A] ou superior. Atualize o Protheus ou gere o Código-Fonte novamente utilizando o Build atual.")
EndIf
Return Self

WSMETHOD INIT WSCLIENT WSMTPROJECT
	::oWSBRWPROJECTSRESULT := MTPROJECT_ARRAYOFPROJECTSVIEW():New()
	::oWSGETHEADERRESULT := MTPROJECT_ARRAYOFBRWHEADER():New()
	::oWSGETPROJECTRESULT := MTPROJECT_PROJECTSVIEW():New()
Return

WSMETHOD RESET WSCLIENT WSMTPROJECT
	::cUSERCODE          := NIL 
	::dPROJECTDATEFROM   := NIL 
	::dPROJECTDATETO     := NIL 
	::cQUERYADDWHERE     := NIL 
	::cINDEXKEY          := NIL 
	::oWSBRWPROJECTSRESULT := NIL 
	::cHEADERTYPE        := NIL 
	::oWSGETHEADERRESULT := NIL 
	::cPROJECTCODE       := NIL 
	::oWSGETPROJECTRESULT := NIL 
	::Init()
Return

WSMETHOD CLONE WSCLIENT WSMTPROJECT
Local oClone := WSMTPROJECT():New()
	oClone:_URL          := ::_URL 
	oClone:cUSERCODE     := ::cUSERCODE
	oClone:dPROJECTDATEFROM := ::dPROJECTDATEFROM
	oClone:dPROJECTDATETO := ::dPROJECTDATETO
	oClone:cQUERYADDWHERE := ::cQUERYADDWHERE
	oClone:cINDEXKEY     := ::cINDEXKEY
	oClone:oWSBRWPROJECTSRESULT :=  IIF(::oWSBRWPROJECTSRESULT = NIL , NIL ,::oWSBRWPROJECTSRESULT:Clone() )
	oClone:cHEADERTYPE   := ::cHEADERTYPE
	oClone:oWSGETHEADERRESULT :=  IIF(::oWSGETHEADERRESULT = NIL , NIL ,::oWSGETHEADERRESULT:Clone() )
	oClone:cPROJECTCODE  := ::cPROJECTCODE
	oClone:oWSGETPROJECTRESULT :=  IIF(::oWSGETPROJECTRESULT = NIL , NIL ,::oWSGETPROJECTRESULT:Clone() )
Return oClone

/* -------------------------------------------------------------------------------
WSDL Method BRWPROJECTS of Service WSMTPROJECT
------------------------------------------------------------------------------- */

WSMETHOD BRWPROJECTS WSSEND cUSERCODE,dPROJECTDATEFROM,dPROJECTDATETO,cQUERYADDWHERE,cINDEXKEY WSRECEIVE oWSBRWPROJECTSRESULT WSCLIENT WSMTPROJECT
Local cSoap := "" , oXmlRet

BEGIN WSMETHOD

cSoap += '<BRWPROJECTS xmlns="http://localhost/">'
cSoap += WSSoapValue("USERCODE", ::cUSERCODE, cUSERCODE , "string", .T. , .F., 0 ) 
cSoap += WSSoapValue("PROJECTDATEFROM", ::dPROJECTDATEFROM, dPROJECTDATEFROM , "date", .T. , .F., 0 ) 
cSoap += WSSoapValue("PROJECTDATETO", ::dPROJECTDATETO, dPROJECTDATETO , "date", .T. , .F., 0 ) 
cSoap += WSSoapValue("QUERYADDWHERE", ::cQUERYADDWHERE, cQUERYADDWHERE , "string", .F. , .F., 0 ) 
cSoap += WSSoapValue("INDEXKEY", ::cINDEXKEY, cINDEXKEY , "string", .F. , .F., 0 ) 
cSoap += "</BRWPROJECTS>"

oXmlRet := SvcSoapCall(	Self,cSoap,; 
	"http://localhost/BRWPROJECTS",; 
	"DOCUMENT","http://localhost/",,"1.031217",; 
	"http://localhost/ws/MTPROJECT.apw")

::Init()
::oWSBRWPROJECTSRESULT:SoapRecv( WSAdvValue( oXmlRet,"_BRWPROJECTSRESPONSE:_BRWPROJECTSRESULT","ARRAYOFPROJECTSVIEW",NIL,NIL,NIL,NIL,NIL) )

END WSMETHOD

oXmlRet := NIL
Return .T.

/* -------------------------------------------------------------------------------
WSDL Method GETHEADER of Service WSMTPROJECT
------------------------------------------------------------------------------- */

WSMETHOD GETHEADER WSSEND cHEADERTYPE WSRECEIVE oWSGETHEADERRESULT WSCLIENT WSMTPROJECT
Local cSoap := "" , oXmlRet

BEGIN WSMETHOD

cSoap += '<GETHEADER xmlns="http://localhost/">'
cSoap += WSSoapValue("HEADERTYPE", ::cHEADERTYPE, cHEADERTYPE , "string", .T. , .F., 0 ) 
cSoap += "</GETHEADER>"

oXmlRet := SvcSoapCall(	Self,cSoap,; 
	"http://localhost/GETHEADER",; 
	"DOCUMENT","http://localhost/",,"1.031217",; 
	"http://localhost/ws/MTPROJECT.apw")

::Init()
::oWSGETHEADERRESULT:SoapRecv( WSAdvValue( oXmlRet,"_GETHEADERRESPONSE:_GETHEADERRESULT","ARRAYOFBRWHEADER",NIL,NIL,NIL,NIL,NIL) )

END WSMETHOD

oXmlRet := NIL
Return .T.

/* -------------------------------------------------------------------------------
WSDL Method GETPROJECT of Service WSMTPROJECT
------------------------------------------------------------------------------- */

WSMETHOD GETPROJECT WSSEND cUSERCODE,cPROJECTCODE WSRECEIVE oWSGETPROJECTRESULT WSCLIENT WSMTPROJECT
Local cSoap := "" , oXmlRet

BEGIN WSMETHOD

cSoap += '<GETPROJECT xmlns="http://localhost/">'
cSoap += WSSoapValue("USERCODE", ::cUSERCODE, cUSERCODE , "string", .T. , .F., 0 ) 
cSoap += WSSoapValue("PROJECTCODE", ::cPROJECTCODE, cPROJECTCODE , "string", .T. , .F., 0 ) 
cSoap += "</GETPROJECT>"

oXmlRet := SvcSoapCall(	Self,cSoap,; 
	"http://localhost/GETPROJECT",; 
	"DOCUMENT","http://localhost/",,"1.031217",; 
	"http://localhost/ws/MTPROJECT.apw")

::Init()
::oWSGETPROJECTRESULT:SoapRecv( WSAdvValue( oXmlRet,"_GETPROJECTRESPONSE:_GETPROJECTRESULT","PROJECTSVIEW",NIL,NIL,NIL,NIL,NIL) )

END WSMETHOD

oXmlRet := NIL
Return .T.


/* -------------------------------------------------------------------------------
WSDL Data Structure ARRAYOFPROJECTSVIEW
------------------------------------------------------------------------------- */

WSSTRUCT MTPROJECT_ARRAYOFPROJECTSVIEW
	WSDATA   oWSPROJECTSVIEW           AS MTPROJECT_PROJECTSVIEW OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT MTPROJECT_ARRAYOFPROJECTSVIEW
	::Init()
Return Self

WSMETHOD INIT WSCLIENT MTPROJECT_ARRAYOFPROJECTSVIEW
	::oWSPROJECTSVIEW      := {} // Array Of  MTPROJECT_PROJECTSVIEW():New()
Return

WSMETHOD CLONE WSCLIENT MTPROJECT_ARRAYOFPROJECTSVIEW
	Local oClone := MTPROJECT_ARRAYOFPROJECTSVIEW():NEW()
	oClone:oWSPROJECTSVIEW := NIL
	If ::oWSPROJECTSVIEW <> NIL 
		oClone:oWSPROJECTSVIEW := {}
		aEval( ::oWSPROJECTSVIEW , { |x| aadd( oClone:oWSPROJECTSVIEW , x:Clone() ) } )
	Endif 
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT MTPROJECT_ARRAYOFPROJECTSVIEW
	Local nRElem1, oNodes1, nTElem1
	::Init()
	If oResponse = NIL ; Return ; Endif 
	oNodes1 :=  WSAdvValue( oResponse,"_PROJECTSVIEW","PROJECTSVIEW",{},NIL,.T.,"O",NIL) 
	nTElem1 := len(oNodes1)
	For nRElem1 := 1 to nTElem1 
		If !WSIsNilNode( oNodes1[nRElem1] )
			aadd(::oWSPROJECTSVIEW , MTPROJECT_PROJECTSVIEW():New() )
			::oWSPROJECTSVIEW[len(::oWSPROJECTSVIEW)]:SoapRecv(oNodes1[nRElem1])
		Endif
	Next
Return

/* -------------------------------------------------------------------------------
WSDL Data Structure ARRAYOFBRWHEADER
------------------------------------------------------------------------------- */

WSSTRUCT MTPROJECT_ARRAYOFBRWHEADER
	WSDATA   oWSBRWHEADER              AS MTPROJECT_BRWHEADER OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT MTPROJECT_ARRAYOFBRWHEADER
	::Init()
Return Self

WSMETHOD INIT WSCLIENT MTPROJECT_ARRAYOFBRWHEADER
	::oWSBRWHEADER         := {} // Array Of  MTPROJECT_BRWHEADER():New()
Return

WSMETHOD CLONE WSCLIENT MTPROJECT_ARRAYOFBRWHEADER
	Local oClone := MTPROJECT_ARRAYOFBRWHEADER():NEW()
	oClone:oWSBRWHEADER := NIL
	If ::oWSBRWHEADER <> NIL 
		oClone:oWSBRWHEADER := {}
		aEval( ::oWSBRWHEADER , { |x| aadd( oClone:oWSBRWHEADER , x:Clone() ) } )
	Endif 
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT MTPROJECT_ARRAYOFBRWHEADER
	Local nRElem1, oNodes1, nTElem1
	::Init()
	If oResponse = NIL ; Return ; Endif 
	oNodes1 :=  WSAdvValue( oResponse,"_BRWHEADER","BRWHEADER",{},NIL,.T.,"O",NIL) 
	nTElem1 := len(oNodes1)
	For nRElem1 := 1 to nTElem1 
		If !WSIsNilNode( oNodes1[nRElem1] )
			aadd(::oWSBRWHEADER , MTPROJECT_BRWHEADER():New() )
			::oWSBRWHEADER[len(::oWSBRWHEADER)]:SoapRecv(oNodes1[nRElem1])
		Endif
	Next
Return

/* -------------------------------------------------------------------------------
WSDL Data Structure PROJECTSVIEW
------------------------------------------------------------------------------- */

WSSTRUCT MTPROJECT_PROJECTSVIEW
	WSDATA   oWSDEFAULTVALUES          AS MTPROJECT_DEFAULTVALUESVIEW
	WSDATA   oWSLISTOFPROJECTSTRUCTURE AS MTPROJECT_ARRAYOFPROJECTSTRUCTUREVIEW OPTIONAL
	WSDATA   oWSPERIODS                AS MTPROJECT_PERIODSVIEW
	WSDATA   oWSPROJECTDATA            AS MTPROJECT_PROJECTDATAVIEW
	WSDATA   oWSSCHEDULE               AS MTPROJECT_SCHEDULEVIEW
	WSDATA   oWSSTRUCTUREDCODE         AS MTPROJECT_STRUCTUREDCODEVIEW
	WSDATA   oWSUSERFIELDS             AS MTPROJECT_ARRAYOFUSERFIELD OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT MTPROJECT_PROJECTSVIEW
	::Init()
Return Self

WSMETHOD INIT WSCLIENT MTPROJECT_PROJECTSVIEW
Return

WSMETHOD CLONE WSCLIENT MTPROJECT_PROJECTSVIEW
	Local oClone := MTPROJECT_PROJECTSVIEW():NEW()
	oClone:oWSDEFAULTVALUES     := IIF(::oWSDEFAULTVALUES = NIL , NIL , ::oWSDEFAULTVALUES:Clone() )
	oClone:oWSLISTOFPROJECTSTRUCTURE := IIF(::oWSLISTOFPROJECTSTRUCTURE = NIL , NIL , ::oWSLISTOFPROJECTSTRUCTURE:Clone() )
	oClone:oWSPERIODS           := IIF(::oWSPERIODS = NIL , NIL , ::oWSPERIODS:Clone() )
	oClone:oWSPROJECTDATA       := IIF(::oWSPROJECTDATA = NIL , NIL , ::oWSPROJECTDATA:Clone() )
	oClone:oWSSCHEDULE          := IIF(::oWSSCHEDULE = NIL , NIL , ::oWSSCHEDULE:Clone() )
	oClone:oWSSTRUCTUREDCODE    := IIF(::oWSSTRUCTUREDCODE = NIL , NIL , ::oWSSTRUCTUREDCODE:Clone() )
	oClone:oWSUSERFIELDS        := IIF(::oWSUSERFIELDS = NIL , NIL , ::oWSUSERFIELDS:Clone() )
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT MTPROJECT_PROJECTSVIEW
	Local oNode1
	Local oNode2
	Local oNode3
	Local oNode4
	Local oNode5
	Local oNode6
	Local oNode7
	::Init()
	If oResponse = NIL ; Return ; Endif 
	oNode1 :=  WSAdvValue( oResponse,"_DEFAULTVALUES","DEFAULTVALUESVIEW",NIL,"Property oWSDEFAULTVALUES as s0:DEFAULTVALUESVIEW on SOAP Response not found.",NIL,"O",NIL) 
	If oNode1 != NIL
		::oWSDEFAULTVALUES := MTPROJECT_DEFAULTVALUESVIEW():New()
		::oWSDEFAULTVALUES:SoapRecv(oNode1)
	EndIf
	oNode2 :=  WSAdvValue( oResponse,"_LISTOFPROJECTSTRUCTURE","ARRAYOFPROJECTSTRUCTUREVIEW",NIL,NIL,NIL,"O",NIL) 
	If oNode2 != NIL
		::oWSLISTOFPROJECTSTRUCTURE := MTPROJECT_ARRAYOFPROJECTSTRUCTUREVIEW():New()
		::oWSLISTOFPROJECTSTRUCTURE:SoapRecv(oNode2)
	EndIf
	oNode3 :=  WSAdvValue( oResponse,"_PERIODS","PERIODSVIEW",NIL,"Property oWSPERIODS as s0:PERIODSVIEW on SOAP Response not found.",NIL,"O",NIL) 
	If oNode3 != NIL
		::oWSPERIODS := MTPROJECT_PERIODSVIEW():New()
		::oWSPERIODS:SoapRecv(oNode3)
	EndIf
	oNode4 :=  WSAdvValue( oResponse,"_PROJECTDATA","PROJECTDATAVIEW",NIL,"Property oWSPROJECTDATA as s0:PROJECTDATAVIEW on SOAP Response not found.",NIL,"O",NIL) 
	If oNode4 != NIL
		::oWSPROJECTDATA := MTPROJECT_PROJECTDATAVIEW():New()
		::oWSPROJECTDATA:SoapRecv(oNode4)
	EndIf
	oNode5 :=  WSAdvValue( oResponse,"_SCHEDULE","SCHEDULEVIEW",NIL,"Property oWSSCHEDULE as s0:SCHEDULEVIEW on SOAP Response not found.",NIL,"O",NIL) 
	If oNode5 != NIL
		::oWSSCHEDULE := MTPROJECT_SCHEDULEVIEW():New()
		::oWSSCHEDULE:SoapRecv(oNode5)
	EndIf
	oNode6 :=  WSAdvValue( oResponse,"_STRUCTUREDCODE","STRUCTUREDCODEVIEW",NIL,"Property oWSSTRUCTUREDCODE as s0:STRUCTUREDCODEVIEW on SOAP Response not found.",NIL,"O",NIL) 
	If oNode6 != NIL
		::oWSSTRUCTUREDCODE := MTPROJECT_STRUCTUREDCODEVIEW():New()
		::oWSSTRUCTUREDCODE:SoapRecv(oNode6)
	EndIf
	oNode7 :=  WSAdvValue( oResponse,"_USERFIELDS","ARRAYOFUSERFIELD",NIL,NIL,NIL,"O",NIL) 
	If oNode7 != NIL
		::oWSUSERFIELDS := MTPROJECT_ARRAYOFUSERFIELD():New()
		::oWSUSERFIELDS:SoapRecv(oNode7)
	EndIf
Return

/* -------------------------------------------------------------------------------
WSDL Data Structure BRWHEADER
------------------------------------------------------------------------------- */

WSSTRUCT MTPROJECT_BRWHEADER
	WSDATA   cHEADERCOMBOBOX           AS string OPTIONAL
	WSDATA   nHEADERDEC                AS integer
	WSDATA   cHEADERF3                 AS string OPTIONAL
	WSDATA   cHEADERFIELD              AS string
	WSDATA   lHEADEROBLIG              AS boolean OPTIONAL
	WSDATA   cHEADERPICTURE            AS string
	WSDATA   nHEADERSIZE               AS integer
	WSDATA   cHEADERTITLE              AS string
	WSDATA   cHEADERTYPE               AS string
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT MTPROJECT_BRWHEADER
	::Init()
Return Self

WSMETHOD INIT WSCLIENT MTPROJECT_BRWHEADER
Return

WSMETHOD CLONE WSCLIENT MTPROJECT_BRWHEADER
	Local oClone := MTPROJECT_BRWHEADER():NEW()
	oClone:cHEADERCOMBOBOX      := ::cHEADERCOMBOBOX
	oClone:nHEADERDEC           := ::nHEADERDEC
	oClone:cHEADERF3            := ::cHEADERF3
	oClone:cHEADERFIELD         := ::cHEADERFIELD
	oClone:lHEADEROBLIG         := ::lHEADEROBLIG
	oClone:cHEADERPICTURE       := ::cHEADERPICTURE
	oClone:nHEADERSIZE          := ::nHEADERSIZE
	oClone:cHEADERTITLE         := ::cHEADERTITLE
	oClone:cHEADERTYPE          := ::cHEADERTYPE
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT MTPROJECT_BRWHEADER
	::Init()
	If oResponse = NIL ; Return ; Endif 
	::cHEADERCOMBOBOX    :=  WSAdvValue( oResponse,"_HEADERCOMBOBOX","string",NIL,NIL,NIL,"S",NIL) 
	::nHEADERDEC         :=  WSAdvValue( oResponse,"_HEADERDEC","integer",NIL,"Property nHEADERDEC as s:integer on SOAP Response not found.",NIL,"N",NIL) 
	::cHEADERF3          :=  WSAdvValue( oResponse,"_HEADERF3","string",NIL,NIL,NIL,"S",NIL) 
	::cHEADERFIELD       :=  WSAdvValue( oResponse,"_HEADERFIELD","string",NIL,"Property cHEADERFIELD as s:string on SOAP Response not found.",NIL,"S",NIL) 
	::lHEADEROBLIG       :=  WSAdvValue( oResponse,"_HEADEROBLIG","boolean",NIL,NIL,NIL,"L",NIL) 
	::cHEADERPICTURE     :=  WSAdvValue( oResponse,"_HEADERPICTURE","string",NIL,"Property cHEADERPICTURE as s:string on SOAP Response not found.",NIL,"S",NIL) 
	::nHEADERSIZE        :=  WSAdvValue( oResponse,"_HEADERSIZE","integer",NIL,"Property nHEADERSIZE as s:integer on SOAP Response not found.",NIL,"N",NIL) 
	::cHEADERTITLE       :=  WSAdvValue( oResponse,"_HEADERTITLE","string",NIL,"Property cHEADERTITLE as s:string on SOAP Response not found.",NIL,"S",NIL) 
	::cHEADERTYPE        :=  WSAdvValue( oResponse,"_HEADERTYPE","string",NIL,"Property cHEADERTYPE as s:string on SOAP Response not found.",NIL,"S",NIL) 
Return

/* -------------------------------------------------------------------------------
WSDL Data Structure DEFAULTVALUESVIEW
------------------------------------------------------------------------------- */

WSSTRUCT MTPROJECT_DEFAULTVALUESVIEW
	WSDATA   cCALENDAR                 AS string
	WSDATA   dCONVERSIONDATE           AS date
	WSDATA   cCURRENCYCONVERSION       AS string
	WSDATA   cSTANDARDWAREHOUSE        AS string
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT MTPROJECT_DEFAULTVALUESVIEW
	::Init()
Return Self

WSMETHOD INIT WSCLIENT MTPROJECT_DEFAULTVALUESVIEW
Return

WSMETHOD CLONE WSCLIENT MTPROJECT_DEFAULTVALUESVIEW
	Local oClone := MTPROJECT_DEFAULTVALUESVIEW():NEW()
	oClone:cCALENDAR            := ::cCALENDAR
	oClone:dCONVERSIONDATE      := ::dCONVERSIONDATE
	oClone:cCURRENCYCONVERSION  := ::cCURRENCYCONVERSION
	oClone:cSTANDARDWAREHOUSE   := ::cSTANDARDWAREHOUSE
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT MTPROJECT_DEFAULTVALUESVIEW
	::Init()
	If oResponse = NIL ; Return ; Endif 
	::cCALENDAR          :=  WSAdvValue( oResponse,"_CALENDAR","string",NIL,"Property cCALENDAR as s:string on SOAP Response not found.",NIL,"S",NIL) 
	::dCONVERSIONDATE    :=  WSAdvValue( oResponse,"_CONVERSIONDATE","date",NIL,"Property dCONVERSIONDATE as s:date on SOAP Response not found.",NIL,"D",NIL) 
	::cCURRENCYCONVERSION :=  WSAdvValue( oResponse,"_CURRENCYCONVERSION","string",NIL,"Property cCURRENCYCONVERSION as s:string on SOAP Response not found.",NIL,"S",NIL) 
	::cSTANDARDWAREHOUSE :=  WSAdvValue( oResponse,"_STANDARDWAREHOUSE","string",NIL,"Property cSTANDARDWAREHOUSE as s:string on SOAP Response not found.",NIL,"S",NIL) 
Return

/* -------------------------------------------------------------------------------
WSDL Data Structure ARRAYOFPROJECTSTRUCTUREVIEW
------------------------------------------------------------------------------- */

WSSTRUCT MTPROJECT_ARRAYOFPROJECTSTRUCTUREVIEW
	WSDATA   oWSPROJECTSTRUCTUREVIEW   AS MTPROJECT_PROJECTSTRUCTUREVIEW OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT MTPROJECT_ARRAYOFPROJECTSTRUCTUREVIEW
	::Init()
Return Self

WSMETHOD INIT WSCLIENT MTPROJECT_ARRAYOFPROJECTSTRUCTUREVIEW
	::oWSPROJECTSTRUCTUREVIEW := {} // Array Of  MTPROJECT_PROJECTSTRUCTUREVIEW():New()
Return

WSMETHOD CLONE WSCLIENT MTPROJECT_ARRAYOFPROJECTSTRUCTUREVIEW
	Local oClone := MTPROJECT_ARRAYOFPROJECTSTRUCTUREVIEW():NEW()
	oClone:oWSPROJECTSTRUCTUREVIEW := NIL
	If ::oWSPROJECTSTRUCTUREVIEW <> NIL 
		oClone:oWSPROJECTSTRUCTUREVIEW := {}
		aEval( ::oWSPROJECTSTRUCTUREVIEW , { |x| aadd( oClone:oWSPROJECTSTRUCTUREVIEW , x:Clone() ) } )
	Endif 
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT MTPROJECT_ARRAYOFPROJECTSTRUCTUREVIEW
	Local nRElem1, oNodes1, nTElem1
	::Init()
	If oResponse = NIL ; Return ; Endif 
	oNodes1 :=  WSAdvValue( oResponse,"_PROJECTSTRUCTUREVIEW","PROJECTSTRUCTUREVIEW",{},NIL,.T.,"O",NIL) 
	nTElem1 := len(oNodes1)
	For nRElem1 := 1 to nTElem1 
		If !WSIsNilNode( oNodes1[nRElem1] )
			aadd(::oWSPROJECTSTRUCTUREVIEW , MTPROJECT_PROJECTSTRUCTUREVIEW():New() )
			::oWSPROJECTSTRUCTUREVIEW[len(::oWSPROJECTSTRUCTUREVIEW)]:SoapRecv(oNodes1[nRElem1])
		Endif
	Next
Return

/* -------------------------------------------------------------------------------
WSDL Data Structure PERIODSVIEW
------------------------------------------------------------------------------- */

WSSTRUCT MTPROJECT_PERIODSVIEW
	WSDATA   dPERIODFINALDATE          AS date
	WSDATA   dPERIODINITIALDATE        AS date
	WSDATA   cPERIODTYPE               AS string
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT MTPROJECT_PERIODSVIEW
	::Init()
Return Self

WSMETHOD INIT WSCLIENT MTPROJECT_PERIODSVIEW
Return

WSMETHOD CLONE WSCLIENT MTPROJECT_PERIODSVIEW
	Local oClone := MTPROJECT_PERIODSVIEW():NEW()
	oClone:dPERIODFINALDATE     := ::dPERIODFINALDATE
	oClone:dPERIODINITIALDATE   := ::dPERIODINITIALDATE
	oClone:cPERIODTYPE          := ::cPERIODTYPE
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT MTPROJECT_PERIODSVIEW
	::Init()
	If oResponse = NIL ; Return ; Endif 
	::dPERIODFINALDATE   :=  WSAdvValue( oResponse,"_PERIODFINALDATE","date",NIL,"Property dPERIODFINALDATE as s:date on SOAP Response not found.",NIL,"D",NIL) 
	::dPERIODINITIALDATE :=  WSAdvValue( oResponse,"_PERIODINITIALDATE","date",NIL,"Property dPERIODINITIALDATE as s:date on SOAP Response not found.",NIL,"D",NIL) 
	::cPERIODTYPE        :=  WSAdvValue( oResponse,"_PERIODTYPE","string",NIL,"Property cPERIODTYPE as s:string on SOAP Response not found.",NIL,"S",NIL) 
Return

/* -------------------------------------------------------------------------------
WSDL Data Structure PROJECTDATAVIEW
------------------------------------------------------------------------------- */

WSSTRUCT MTPROJECT_PROJECTDATAVIEW
	WSDATA   cBUDGETCODE               AS string
	WSDATA   cBUDGETSTAGE              AS string
	WSDATA   cCOSTTYPE                 AS string
	WSDATA   cCUSTOMERCODE             AS string
	WSDATA   cNOTES                    AS string OPTIONAL
	WSDATA   cPROJECTCODE              AS string
	WSDATA   dPROJECTDATE              AS date
	WSDATA   cPROJECTDESCRIPTION       AS string
	WSDATA   cPROJECTTYPE              AS string
	WSDATA   cPROJECTVERSION           AS string
	WSDATA   cREVISIONCONTROL          AS string
	WSDATA   cREVISIONCONTROLSTATUS    AS string
	WSDATA   cUNITCUSTOMERCODE         AS string
	WSDATA   cUSERSCONTROL             AS string
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT MTPROJECT_PROJECTDATAVIEW
	::Init()
Return Self

WSMETHOD INIT WSCLIENT MTPROJECT_PROJECTDATAVIEW
Return

WSMETHOD CLONE WSCLIENT MTPROJECT_PROJECTDATAVIEW
	Local oClone := MTPROJECT_PROJECTDATAVIEW():NEW()
	oClone:cBUDGETCODE          := ::cBUDGETCODE
	oClone:cBUDGETSTAGE         := ::cBUDGETSTAGE
	oClone:cCOSTTYPE            := ::cCOSTTYPE
	oClone:cCUSTOMERCODE        := ::cCUSTOMERCODE
	oClone:cNOTES               := ::cNOTES
	oClone:cPROJECTCODE         := ::cPROJECTCODE
	oClone:dPROJECTDATE         := ::dPROJECTDATE
	oClone:cPROJECTDESCRIPTION  := ::cPROJECTDESCRIPTION
	oClone:cPROJECTTYPE         := ::cPROJECTTYPE
	oClone:cPROJECTVERSION      := ::cPROJECTVERSION
	oClone:cREVISIONCONTROL     := ::cREVISIONCONTROL
	oClone:cREVISIONCONTROLSTATUS := ::cREVISIONCONTROLSTATUS
	oClone:cUNITCUSTOMERCODE    := ::cUNITCUSTOMERCODE
	oClone:cUSERSCONTROL        := ::cUSERSCONTROL
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT MTPROJECT_PROJECTDATAVIEW
	::Init()
	If oResponse = NIL ; Return ; Endif 
	::cBUDGETCODE        :=  WSAdvValue( oResponse,"_BUDGETCODE","string",NIL,"Property cBUDGETCODE as s:string on SOAP Response not found.",NIL,"S",NIL) 
	::cBUDGETSTAGE       :=  WSAdvValue( oResponse,"_BUDGETSTAGE","string",NIL,"Property cBUDGETSTAGE as s:string on SOAP Response not found.",NIL,"S",NIL) 
	::cCOSTTYPE          :=  WSAdvValue( oResponse,"_COSTTYPE","string",NIL,"Property cCOSTTYPE as s:string on SOAP Response not found.",NIL,"S",NIL) 
	::cCUSTOMERCODE      :=  WSAdvValue( oResponse,"_CUSTOMERCODE","string",NIL,"Property cCUSTOMERCODE as s:string on SOAP Response not found.",NIL,"S",NIL) 
	::cNOTES             :=  WSAdvValue( oResponse,"_NOTES","string",NIL,NIL,NIL,"S",NIL) 
	::cPROJECTCODE       :=  WSAdvValue( oResponse,"_PROJECTCODE","string",NIL,"Property cPROJECTCODE as s:string on SOAP Response not found.",NIL,"S",NIL) 
	::dPROJECTDATE       :=  WSAdvValue( oResponse,"_PROJECTDATE","date",NIL,"Property dPROJECTDATE as s:date on SOAP Response not found.",NIL,"D",NIL) 
	::cPROJECTDESCRIPTION :=  WSAdvValue( oResponse,"_PROJECTDESCRIPTION","string",NIL,"Property cPROJECTDESCRIPTION as s:string on SOAP Response not found.",NIL,"S",NIL) 
	::cPROJECTTYPE       :=  WSAdvValue( oResponse,"_PROJECTTYPE","string",NIL,"Property cPROJECTTYPE as s:string on SOAP Response not found.",NIL,"S",NIL) 
	::cPROJECTVERSION    :=  WSAdvValue( oResponse,"_PROJECTVERSION","string",NIL,"Property cPROJECTVERSION as s:string on SOAP Response not found.",NIL,"S",NIL) 
	::cREVISIONCONTROL   :=  WSAdvValue( oResponse,"_REVISIONCONTROL","string",NIL,"Property cREVISIONCONTROL as s:string on SOAP Response not found.",NIL,"S",NIL) 
	::cREVISIONCONTROLSTATUS :=  WSAdvValue( oResponse,"_REVISIONCONTROLSTATUS","string",NIL,"Property cREVISIONCONTROLSTATUS as s:string on SOAP Response not found.",NIL,"S",NIL) 
	::cUNITCUSTOMERCODE  :=  WSAdvValue( oResponse,"_UNITCUSTOMERCODE","string",NIL,"Property cUNITCUSTOMERCODE as s:string on SOAP Response not found.",NIL,"S",NIL) 
	::cUSERSCONTROL      :=  WSAdvValue( oResponse,"_USERSCONTROL","string",NIL,"Property cUSERSCONTROL as s:string on SOAP Response not found.",NIL,"S",NIL) 
Return

/* -------------------------------------------------------------------------------
WSDL Data Structure SCHEDULEVIEW
------------------------------------------------------------------------------- */

WSSTRUCT MTPROJECT_SCHEDULEVIEW
	WSDATA   cCALENDAR                 AS string OPTIONAL
	WSDATA   nDURATIONINHOURS          AS integer OPTIONAL
	WSDATA   dESTIMATEDFINALDATE       AS date
	WSDATA   cESTIMATEDFINALHOUR       AS string OPTIONAL
	WSDATA   dESTIMATEDINITIALDATE     AS date
	WSDATA   cESTIMATEDINITIALHOUR     AS string OPTIONAL
	WSDATA   dEXECUTIONFINALDATE       AS date
	WSDATA   dEXECUTIONINITIALDATE     AS date
	WSDATA   cMEASUREMETHOD            AS string OPTIONAL
	WSDATA   cPRIORITY                 AS string OPTIONAL
	WSDATA   cUSEFULHOURS              AS string OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT MTPROJECT_SCHEDULEVIEW
	::Init()
Return Self

WSMETHOD INIT WSCLIENT MTPROJECT_SCHEDULEVIEW
Return

WSMETHOD CLONE WSCLIENT MTPROJECT_SCHEDULEVIEW
	Local oClone := MTPROJECT_SCHEDULEVIEW():NEW()
	oClone:cCALENDAR            := ::cCALENDAR
	oClone:nDURATIONINHOURS     := ::nDURATIONINHOURS
	oClone:dESTIMATEDFINALDATE  := ::dESTIMATEDFINALDATE
	oClone:cESTIMATEDFINALHOUR  := ::cESTIMATEDFINALHOUR
	oClone:dESTIMATEDINITIALDATE := ::dESTIMATEDINITIALDATE
	oClone:cESTIMATEDINITIALHOUR := ::cESTIMATEDINITIALHOUR
	oClone:dEXECUTIONFINALDATE  := ::dEXECUTIONFINALDATE
	oClone:dEXECUTIONINITIALDATE := ::dEXECUTIONINITIALDATE
	oClone:cMEASUREMETHOD       := ::cMEASUREMETHOD
	oClone:cPRIORITY            := ::cPRIORITY
	oClone:cUSEFULHOURS         := ::cUSEFULHOURS
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT MTPROJECT_SCHEDULEVIEW
	::Init()
	If oResponse = NIL ; Return ; Endif 
	::cCALENDAR          :=  WSAdvValue( oResponse,"_CALENDAR","string",NIL,NIL,NIL,"S",NIL) 
	::nDURATIONINHOURS   :=  WSAdvValue( oResponse,"_DURATIONINHOURS","integer",NIL,NIL,NIL,"N",NIL) 
	::dESTIMATEDFINALDATE :=  WSAdvValue( oResponse,"_ESTIMATEDFINALDATE","date",NIL,"Property dESTIMATEDFINALDATE as s:date on SOAP Response not found.",NIL,"D",NIL) 
	::cESTIMATEDFINALHOUR :=  WSAdvValue( oResponse,"_ESTIMATEDFINALHOUR","string",NIL,NIL,NIL,"S",NIL) 
	::dESTIMATEDINITIALDATE :=  WSAdvValue( oResponse,"_ESTIMATEDINITIALDATE","date",NIL,"Property dESTIMATEDINITIALDATE as s:date on SOAP Response not found.",NIL,"D",NIL) 
	::cESTIMATEDINITIALHOUR :=  WSAdvValue( oResponse,"_ESTIMATEDINITIALHOUR","string",NIL,NIL,NIL,"S",NIL) 
	::dEXECUTIONFINALDATE :=  WSAdvValue( oResponse,"_EXECUTIONFINALDATE","date",NIL,"Property dEXECUTIONFINALDATE as s:date on SOAP Response not found.",NIL,"D",NIL) 
	::dEXECUTIONINITIALDATE :=  WSAdvValue( oResponse,"_EXECUTIONINITIALDATE","date",NIL,"Property dEXECUTIONINITIALDATE as s:date on SOAP Response not found.",NIL,"D",NIL) 
	::cMEASUREMETHOD     :=  WSAdvValue( oResponse,"_MEASUREMETHOD","string",NIL,NIL,NIL,"S",NIL) 
	::cPRIORITY          :=  WSAdvValue( oResponse,"_PRIORITY","string",NIL,NIL,NIL,"S",NIL) 
	::cUSEFULHOURS       :=  WSAdvValue( oResponse,"_USEFULHOURS","string",NIL,NIL,NIL,"S",NIL) 
Return

/* -------------------------------------------------------------------------------
WSDL Data Structure STRUCTUREDCODEVIEW
------------------------------------------------------------------------------- */

WSSTRUCT MTPROJECT_STRUCTUREDCODEVIEW
	WSDATA   cDELIMIT                  AS string
	WSDATA   cMASK                     AS string
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT MTPROJECT_STRUCTUREDCODEVIEW
	::Init()
Return Self

WSMETHOD INIT WSCLIENT MTPROJECT_STRUCTUREDCODEVIEW
Return

WSMETHOD CLONE WSCLIENT MTPROJECT_STRUCTUREDCODEVIEW
	Local oClone := MTPROJECT_STRUCTUREDCODEVIEW():NEW()
	oClone:cDELIMIT             := ::cDELIMIT
	oClone:cMASK                := ::cMASK
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT MTPROJECT_STRUCTUREDCODEVIEW
	::Init()
	If oResponse = NIL ; Return ; Endif 
	::cDELIMIT           :=  WSAdvValue( oResponse,"_DELIMIT","string",NIL,"Property cDELIMIT as s:string on SOAP Response not found.",NIL,"S",NIL) 
	::cMASK              :=  WSAdvValue( oResponse,"_MASK","string",NIL,"Property cMASK as s:string on SOAP Response not found.",NIL,"S",NIL) 
Return

/* -------------------------------------------------------------------------------
WSDL Data Structure ARRAYOFUSERFIELD
------------------------------------------------------------------------------- */

WSSTRUCT MTPROJECT_ARRAYOFUSERFIELD
	WSDATA   oWSUSERFIELD              AS MTPROJECT_USERFIELD OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT MTPROJECT_ARRAYOFUSERFIELD
	::Init()
Return Self

WSMETHOD INIT WSCLIENT MTPROJECT_ARRAYOFUSERFIELD
	::oWSUSERFIELD         := {} // Array Of  MTPROJECT_USERFIELD():New()
Return

WSMETHOD CLONE WSCLIENT MTPROJECT_ARRAYOFUSERFIELD
	Local oClone := MTPROJECT_ARRAYOFUSERFIELD():NEW()
	oClone:oWSUSERFIELD := NIL
	If ::oWSUSERFIELD <> NIL 
		oClone:oWSUSERFIELD := {}
		aEval( ::oWSUSERFIELD , { |x| aadd( oClone:oWSUSERFIELD , x:Clone() ) } )
	Endif 
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT MTPROJECT_ARRAYOFUSERFIELD
	Local nRElem1, oNodes1, nTElem1
	::Init()
	If oResponse = NIL ; Return ; Endif 
	oNodes1 :=  WSAdvValue( oResponse,"_USERFIELD","USERFIELD",{},NIL,.T.,"O",NIL) 
	nTElem1 := len(oNodes1)
	For nRElem1 := 1 to nTElem1 
		If !WSIsNilNode( oNodes1[nRElem1] )
			aadd(::oWSUSERFIELD , MTPROJECT_USERFIELD():New() )
			::oWSUSERFIELD[len(::oWSUSERFIELD)]:SoapRecv(oNodes1[nRElem1])
		Endif
	Next
Return

/* -------------------------------------------------------------------------------
WSDL Data Structure PROJECTSTRUCTUREVIEW
------------------------------------------------------------------------------- */

WSSTRUCT MTPROJECT_PROJECTSTRUCTUREVIEW
	WSDATA   oWSESTIMATEDCOST          AS MTPROJECT_ESTIMATEDCOSTVIEW
	WSDATA   oWSLISTOFPROJECTSTRUCTURE AS MTPROJECT_ARRAYOFPROJECTSTRUCTUREVIEW OPTIONAL
	WSDATA   oWSLISTOFPROJECTTASKS     AS MTPROJECT_ARRAYOFPROJECTTASKSVIEW OPTIONAL
	WSDATA   oWSNOTES                  AS MTPROJECT_NOTESVIEW OPTIONAL
	WSDATA   oWSSALESREMITTANCES       AS MTPROJECT_SALESREMITTANCESVIEW
	WSDATA   oWSSCHEDULE               AS MTPROJECT_SCHEDULEVIEW
	WSDATA   oWSUSERFIELDS             AS MTPROJECT_ARRAYOFUSERFIELD OPTIONAL
	WSDATA   oWSWBS                    AS MTPROJECT_WBSVIEW
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT MTPROJECT_PROJECTSTRUCTUREVIEW
	::Init()
Return Self

WSMETHOD INIT WSCLIENT MTPROJECT_PROJECTSTRUCTUREVIEW
Return

WSMETHOD CLONE WSCLIENT MTPROJECT_PROJECTSTRUCTUREVIEW
	Local oClone := MTPROJECT_PROJECTSTRUCTUREVIEW():NEW()
	oClone:oWSESTIMATEDCOST     := IIF(::oWSESTIMATEDCOST = NIL , NIL , ::oWSESTIMATEDCOST:Clone() )
	oClone:oWSLISTOFPROJECTSTRUCTURE := IIF(::oWSLISTOFPROJECTSTRUCTURE = NIL , NIL , ::oWSLISTOFPROJECTSTRUCTURE:Clone() )
	oClone:oWSLISTOFPROJECTTASKS := IIF(::oWSLISTOFPROJECTTASKS = NIL , NIL , ::oWSLISTOFPROJECTTASKS:Clone() )
	oClone:oWSNOTES             := IIF(::oWSNOTES = NIL , NIL , ::oWSNOTES:Clone() )
	oClone:oWSSALESREMITTANCES  := IIF(::oWSSALESREMITTANCES = NIL , NIL , ::oWSSALESREMITTANCES:Clone() )
	oClone:oWSSCHEDULE          := IIF(::oWSSCHEDULE = NIL , NIL , ::oWSSCHEDULE:Clone() )
	oClone:oWSUSERFIELDS        := IIF(::oWSUSERFIELDS = NIL , NIL , ::oWSUSERFIELDS:Clone() )
	oClone:oWSWBS               := IIF(::oWSWBS = NIL , NIL , ::oWSWBS:Clone() )
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT MTPROJECT_PROJECTSTRUCTUREVIEW
	Local oNode1
	Local oNode2
	Local oNode3
	Local oNode4
	Local oNode5
	Local oNode6
	Local oNode7
	Local oNode8
	::Init()
	If oResponse = NIL ; Return ; Endif 
	oNode1 :=  WSAdvValue( oResponse,"_ESTIMATEDCOST","ESTIMATEDCOSTVIEW",NIL,"Property oWSESTIMATEDCOST as s0:ESTIMATEDCOSTVIEW on SOAP Response not found.",NIL,"O",NIL) 
	If oNode1 != NIL
		::oWSESTIMATEDCOST := MTPROJECT_ESTIMATEDCOSTVIEW():New()
		::oWSESTIMATEDCOST:SoapRecv(oNode1)
	EndIf
	oNode2 :=  WSAdvValue( oResponse,"_LISTOFPROJECTSTRUCTURE","ARRAYOFPROJECTSTRUCTUREVIEW",NIL,NIL,NIL,"O",NIL) 
	If oNode2 != NIL
		::oWSLISTOFPROJECTSTRUCTURE := MTPROJECT_ARRAYOFPROJECTSTRUCTUREVIEW():New()
		::oWSLISTOFPROJECTSTRUCTURE:SoapRecv(oNode2)
	EndIf
	oNode3 :=  WSAdvValue( oResponse,"_LISTOFPROJECTTASKS","ARRAYOFPROJECTTASKSVIEW",NIL,NIL,NIL,"O",NIL) 
	If oNode3 != NIL
		::oWSLISTOFPROJECTTASKS := MTPROJECT_ARRAYOFPROJECTTASKSVIEW():New()
		::oWSLISTOFPROJECTTASKS:SoapRecv(oNode3)
	EndIf
	oNode4 :=  WSAdvValue( oResponse,"_NOTES","NOTESVIEW",NIL,NIL,NIL,"O",NIL) 
	If oNode4 != NIL
		::oWSNOTES := MTPROJECT_NOTESVIEW():New()
		::oWSNOTES:SoapRecv(oNode4)
	EndIf
	oNode5 :=  WSAdvValue( oResponse,"_SALESREMITTANCES","SALESREMITTANCESVIEW",NIL,"Property oWSSALESREMITTANCES as s0:SALESREMITTANCESVIEW on SOAP Response not found.",NIL,"O",NIL) 
	If oNode5 != NIL
		::oWSSALESREMITTANCES := MTPROJECT_SALESREMITTANCESVIEW():New()
		::oWSSALESREMITTANCES:SoapRecv(oNode5)
	EndIf
	oNode6 :=  WSAdvValue( oResponse,"_SCHEDULE","SCHEDULEVIEW",NIL,"Property oWSSCHEDULE as s0:SCHEDULEVIEW on SOAP Response not found.",NIL,"O",NIL) 
	If oNode6 != NIL
		::oWSSCHEDULE := MTPROJECT_SCHEDULEVIEW():New()
		::oWSSCHEDULE:SoapRecv(oNode6)
	EndIf
	oNode7 :=  WSAdvValue( oResponse,"_USERFIELDS","ARRAYOFUSERFIELD",NIL,NIL,NIL,"O",NIL) 
	If oNode7 != NIL
		::oWSUSERFIELDS := MTPROJECT_ARRAYOFUSERFIELD():New()
		::oWSUSERFIELDS:SoapRecv(oNode7)
	EndIf
	oNode8 :=  WSAdvValue( oResponse,"_WBS","WBSVIEW",NIL,"Property oWSWBS as s0:WBSVIEW on SOAP Response not found.",NIL,"O",NIL) 
	If oNode8 != NIL
		::oWSWBS := MTPROJECT_WBSVIEW():New()
		::oWSWBS:SoapRecv(oNode8)
	EndIf
Return

/* -------------------------------------------------------------------------------
WSDL Data Structure USERFIELD
------------------------------------------------------------------------------- */

WSSTRUCT MTPROJECT_USERFIELD
	WSDATA   cUSERCOMBOBOX             AS string OPTIONAL
	WSDATA   nUSERDEC                  AS integer OPTIONAL
	WSDATA   cUSERF3                   AS string OPTIONAL
	WSDATA   cUSERNAME                 AS string
	WSDATA   lUSEROBLIG                AS boolean OPTIONAL
	WSDATA   cUSERPICTURE              AS string OPTIONAL
	WSDATA   nUSERSIZE                 AS integer OPTIONAL
	WSDATA   cUSERTAG                  AS string OPTIONAL
	WSDATA   cUSERTITLE                AS string OPTIONAL
	WSDATA   cUSERTYPE                 AS string
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT MTPROJECT_USERFIELD
	::Init()
Return Self

WSMETHOD INIT WSCLIENT MTPROJECT_USERFIELD
Return

WSMETHOD CLONE WSCLIENT MTPROJECT_USERFIELD
	Local oClone := MTPROJECT_USERFIELD():NEW()
	oClone:cUSERCOMBOBOX        := ::cUSERCOMBOBOX
	oClone:nUSERDEC             := ::nUSERDEC
	oClone:cUSERF3              := ::cUSERF3
	oClone:cUSERNAME            := ::cUSERNAME
	oClone:lUSEROBLIG           := ::lUSEROBLIG
	oClone:cUSERPICTURE         := ::cUSERPICTURE
	oClone:nUSERSIZE            := ::nUSERSIZE
	oClone:cUSERTAG             := ::cUSERTAG
	oClone:cUSERTITLE           := ::cUSERTITLE
	oClone:cUSERTYPE            := ::cUSERTYPE
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT MTPROJECT_USERFIELD
	::Init()
	If oResponse = NIL ; Return ; Endif 
	::cUSERCOMBOBOX      :=  WSAdvValue( oResponse,"_USERCOMBOBOX","string",NIL,NIL,NIL,"S",NIL) 
	::nUSERDEC           :=  WSAdvValue( oResponse,"_USERDEC","integer",NIL,NIL,NIL,"N",NIL) 
	::cUSERF3            :=  WSAdvValue( oResponse,"_USERF3","string",NIL,NIL,NIL,"S",NIL) 
	::cUSERNAME          :=  WSAdvValue( oResponse,"_USERNAME","string",NIL,"Property cUSERNAME as s:string on SOAP Response not found.",NIL,"S",NIL) 
	::lUSEROBLIG         :=  WSAdvValue( oResponse,"_USEROBLIG","boolean",NIL,NIL,NIL,"L",NIL) 
	::cUSERPICTURE       :=  WSAdvValue( oResponse,"_USERPICTURE","string",NIL,NIL,NIL,"S",NIL) 
	::nUSERSIZE          :=  WSAdvValue( oResponse,"_USERSIZE","integer",NIL,NIL,NIL,"N",NIL) 
	::cUSERTAG           :=  WSAdvValue( oResponse,"_USERTAG","string",NIL,NIL,NIL,"S",NIL) 
	::cUSERTITLE         :=  WSAdvValue( oResponse,"_USERTITLE","string",NIL,NIL,NIL,"S",NIL) 
	::cUSERTYPE          :=  WSAdvValue( oResponse,"_USERTYPE","string",NIL,"Property cUSERTYPE as s:string on SOAP Response not found.",NIL,"S",NIL) 
Return

/* -------------------------------------------------------------------------------
WSDL Data Structure ESTIMATEDCOSTVIEW
------------------------------------------------------------------------------- */

WSSTRUCT MTPROJECT_ESTIMATEDCOSTVIEW
	WSDATA   dCONVERSIONDATE           AS date
	WSDATA   cCURRENCYCONVERSION       AS string
	WSDATA   nCURRENCYCOST1            AS float
	WSDATA   nCURRENCYCOST2            AS float
	WSDATA   nCURRENCYCOST3            AS float
	WSDATA   nCURRENCYCOST4            AS float
	WSDATA   nCURRENCYCOST5            AS float
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT MTPROJECT_ESTIMATEDCOSTVIEW
	::Init()
Return Self

WSMETHOD INIT WSCLIENT MTPROJECT_ESTIMATEDCOSTVIEW
Return

WSMETHOD CLONE WSCLIENT MTPROJECT_ESTIMATEDCOSTVIEW
	Local oClone := MTPROJECT_ESTIMATEDCOSTVIEW():NEW()
	oClone:dCONVERSIONDATE      := ::dCONVERSIONDATE
	oClone:cCURRENCYCONVERSION  := ::cCURRENCYCONVERSION
	oClone:nCURRENCYCOST1       := ::nCURRENCYCOST1
	oClone:nCURRENCYCOST2       := ::nCURRENCYCOST2
	oClone:nCURRENCYCOST3       := ::nCURRENCYCOST3
	oClone:nCURRENCYCOST4       := ::nCURRENCYCOST4
	oClone:nCURRENCYCOST5       := ::nCURRENCYCOST5
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT MTPROJECT_ESTIMATEDCOSTVIEW
	::Init()
	If oResponse = NIL ; Return ; Endif 
	::dCONVERSIONDATE    :=  WSAdvValue( oResponse,"_CONVERSIONDATE","date",NIL,"Property dCONVERSIONDATE as s:date on SOAP Response not found.",NIL,"D",NIL) 
	::cCURRENCYCONVERSION :=  WSAdvValue( oResponse,"_CURRENCYCONVERSION","string",NIL,"Property cCURRENCYCONVERSION as s:string on SOAP Response not found.",NIL,"S",NIL) 
	::nCURRENCYCOST1     :=  WSAdvValue( oResponse,"_CURRENCYCOST1","float",NIL,"Property nCURRENCYCOST1 as s:float on SOAP Response not found.",NIL,"N",NIL) 
	::nCURRENCYCOST2     :=  WSAdvValue( oResponse,"_CURRENCYCOST2","float",NIL,"Property nCURRENCYCOST2 as s:float on SOAP Response not found.",NIL,"N",NIL) 
	::nCURRENCYCOST3     :=  WSAdvValue( oResponse,"_CURRENCYCOST3","float",NIL,"Property nCURRENCYCOST3 as s:float on SOAP Response not found.",NIL,"N",NIL) 
	::nCURRENCYCOST4     :=  WSAdvValue( oResponse,"_CURRENCYCOST4","float",NIL,"Property nCURRENCYCOST4 as s:float on SOAP Response not found.",NIL,"N",NIL) 
	::nCURRENCYCOST5     :=  WSAdvValue( oResponse,"_CURRENCYCOST5","float",NIL,"Property nCURRENCYCOST5 as s:float on SOAP Response not found.",NIL,"N",NIL) 
Return

/* -------------------------------------------------------------------------------
WSDL Data Structure ARRAYOFPROJECTTASKSVIEW
------------------------------------------------------------------------------- */

WSSTRUCT MTPROJECT_ARRAYOFPROJECTTASKSVIEW
	WSDATA   oWSPROJECTTASKSVIEW       AS MTPROJECT_PROJECTTASKSVIEW OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT MTPROJECT_ARRAYOFPROJECTTASKSVIEW
	::Init()
Return Self

WSMETHOD INIT WSCLIENT MTPROJECT_ARRAYOFPROJECTTASKSVIEW
	::oWSPROJECTTASKSVIEW  := {} // Array Of  MTPROJECT_PROJECTTASKSVIEW():New()
Return

WSMETHOD CLONE WSCLIENT MTPROJECT_ARRAYOFPROJECTTASKSVIEW
	Local oClone := MTPROJECT_ARRAYOFPROJECTTASKSVIEW():NEW()
	oClone:oWSPROJECTTASKSVIEW := NIL
	If ::oWSPROJECTTASKSVIEW <> NIL 
		oClone:oWSPROJECTTASKSVIEW := {}
		aEval( ::oWSPROJECTTASKSVIEW , { |x| aadd( oClone:oWSPROJECTTASKSVIEW , x:Clone() ) } )
	Endif 
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT MTPROJECT_ARRAYOFPROJECTTASKSVIEW
	Local nRElem1, oNodes1, nTElem1
	::Init()
	If oResponse = NIL ; Return ; Endif 
	oNodes1 :=  WSAdvValue( oResponse,"_PROJECTTASKSVIEW","PROJECTTASKSVIEW",{},NIL,.T.,"O",NIL) 
	nTElem1 := len(oNodes1)
	For nRElem1 := 1 to nTElem1 
		If !WSIsNilNode( oNodes1[nRElem1] )
			aadd(::oWSPROJECTTASKSVIEW , MTPROJECT_PROJECTTASKSVIEW():New() )
			::oWSPROJECTTASKSVIEW[len(::oWSPROJECTTASKSVIEW)]:SoapRecv(oNodes1[nRElem1])
		Endif
	Next
Return

/* -------------------------------------------------------------------------------
WSDL Data Structure NOTESVIEW
------------------------------------------------------------------------------- */

WSSTRUCT MTPROJECT_NOTESVIEW
	WSDATA   cNOTES                    AS string OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT MTPROJECT_NOTESVIEW
	::Init()
Return Self

WSMETHOD INIT WSCLIENT MTPROJECT_NOTESVIEW
Return

WSMETHOD CLONE WSCLIENT MTPROJECT_NOTESVIEW
	Local oClone := MTPROJECT_NOTESVIEW():NEW()
	oClone:cNOTES               := ::cNOTES
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT MTPROJECT_NOTESVIEW
	::Init()
	If oResponse = NIL ; Return ; Endif 
	::cNOTES             :=  WSAdvValue( oResponse,"_NOTES","string",NIL,NIL,NIL,"S",NIL) 
Return

/* -------------------------------------------------------------------------------
WSDL Data Structure SALESREMITTANCESVIEW
------------------------------------------------------------------------------- */

WSSTRUCT MTPROJECT_SALESREMITTANCESVIEW
	WSDATA   cINVOICED                 AS string
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT MTPROJECT_SALESREMITTANCESVIEW
	::Init()
Return Self

WSMETHOD INIT WSCLIENT MTPROJECT_SALESREMITTANCESVIEW
Return

WSMETHOD CLONE WSCLIENT MTPROJECT_SALESREMITTANCESVIEW
	Local oClone := MTPROJECT_SALESREMITTANCESVIEW():NEW()
	oClone:cINVOICED            := ::cINVOICED
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT MTPROJECT_SALESREMITTANCESVIEW
	::Init()
	If oResponse = NIL ; Return ; Endif 
	::cINVOICED          :=  WSAdvValue( oResponse,"_INVOICED","string",NIL,"Property cINVOICED as s:string on SOAP Response not found.",NIL,"S",NIL) 
Return

/* -------------------------------------------------------------------------------
WSDL Data Structure WBSVIEW
------------------------------------------------------------------------------- */

WSSTRUCT MTPROJECT_WBSVIEW
	WSDATA   cARRANGEMENTDESCRIPTION   AS string
	WSDATA   cMAINWBSCODE              AS string
	WSDATA   cMEASUREMENTUNIT          AS string
	WSDATA   cPROJECTCODE              AS string
	WSDATA   cPROJECTVERSION           AS string
	WSDATA   cQUANTITYUSED             AS string
	WSDATA   cSTRUCTUREORDER           AS string
	WSDATA   cTASKLEVEL                AS string
	WSDATA   cWBSCODE                  AS string
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT MTPROJECT_WBSVIEW
	::Init()
Return Self

WSMETHOD INIT WSCLIENT MTPROJECT_WBSVIEW
Return

WSMETHOD CLONE WSCLIENT MTPROJECT_WBSVIEW
	Local oClone := MTPROJECT_WBSVIEW():NEW()
	oClone:cARRANGEMENTDESCRIPTION := ::cARRANGEMENTDESCRIPTION
	oClone:cMAINWBSCODE         := ::cMAINWBSCODE
	oClone:cMEASUREMENTUNIT     := ::cMEASUREMENTUNIT
	oClone:cPROJECTCODE         := ::cPROJECTCODE
	oClone:cPROJECTVERSION      := ::cPROJECTVERSION
	oClone:cQUANTITYUSED        := ::cQUANTITYUSED
	oClone:cSTRUCTUREORDER      := ::cSTRUCTUREORDER
	oClone:cTASKLEVEL           := ::cTASKLEVEL
	oClone:cWBSCODE             := ::cWBSCODE
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT MTPROJECT_WBSVIEW
	::Init()
	If oResponse = NIL ; Return ; Endif 
	::cARRANGEMENTDESCRIPTION :=  WSAdvValue( oResponse,"_ARRANGEMENTDESCRIPTION","string",NIL,"Property cARRANGEMENTDESCRIPTION as s:string on SOAP Response not found.",NIL,"S",NIL) 
	::cMAINWBSCODE       :=  WSAdvValue( oResponse,"_MAINWBSCODE","string",NIL,"Property cMAINWBSCODE as s:string on SOAP Response not found.",NIL,"S",NIL) 
	::cMEASUREMENTUNIT   :=  WSAdvValue( oResponse,"_MEASUREMENTUNIT","string",NIL,"Property cMEASUREMENTUNIT as s:string on SOAP Response not found.",NIL,"S",NIL) 
	::cPROJECTCODE       :=  WSAdvValue( oResponse,"_PROJECTCODE","string",NIL,"Property cPROJECTCODE as s:string on SOAP Response not found.",NIL,"S",NIL) 
	::cPROJECTVERSION    :=  WSAdvValue( oResponse,"_PROJECTVERSION","string",NIL,"Property cPROJECTVERSION as s:string on SOAP Response not found.",NIL,"S",NIL) 
	::cQUANTITYUSED      :=  WSAdvValue( oResponse,"_QUANTITYUSED","string",NIL,"Property cQUANTITYUSED as s:string on SOAP Response not found.",NIL,"S",NIL) 
	::cSTRUCTUREORDER    :=  WSAdvValue( oResponse,"_STRUCTUREORDER","string",NIL,"Property cSTRUCTUREORDER as s:string on SOAP Response not found.",NIL,"S",NIL) 
	::cTASKLEVEL         :=  WSAdvValue( oResponse,"_TASKLEVEL","string",NIL,"Property cTASKLEVEL as s:string on SOAP Response not found.",NIL,"S",NIL) 
	::cWBSCODE           :=  WSAdvValue( oResponse,"_WBSCODE","string",NIL,"Property cWBSCODE as s:string on SOAP Response not found.",NIL,"S",NIL) 
Return

/* -------------------------------------------------------------------------------
WSDL Data Structure PROJECTTASKSVIEW
------------------------------------------------------------------------------- */

WSSTRUCT MTPROJECT_PROJECTTASKSVIEW
	WSDATA   cCOMPOSITIONCODE          AS string
	WSDATA   cMAINWBSCODE              AS string
	WSDATA   cMEASUREMENTUNIT          AS string
	WSDATA   cPROJECTCODE              AS string
	WSDATA   cPROJECTVERSION           AS string
	WSDATA   cQUANTITYUSED             AS string
	WSDATA   cSENDEMAIL                AS string
	WSDATA   cSTRUCTUREORDER           AS string
	WSDATA   cTASKCODE                 AS string
	WSDATA   cTASKDESCRIPTION          AS string
	WSDATA   cTASKGROUP                AS string
	WSDATA   cTASKLEVEL                AS string
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT MTPROJECT_PROJECTTASKSVIEW
	::Init()
Return Self

WSMETHOD INIT WSCLIENT MTPROJECT_PROJECTTASKSVIEW
Return

WSMETHOD CLONE WSCLIENT MTPROJECT_PROJECTTASKSVIEW
	Local oClone := MTPROJECT_PROJECTTASKSVIEW():NEW()
	oClone:cCOMPOSITIONCODE     := ::cCOMPOSITIONCODE
	oClone:cMAINWBSCODE         := ::cMAINWBSCODE
	oClone:cMEASUREMENTUNIT     := ::cMEASUREMENTUNIT
	oClone:cPROJECTCODE         := ::cPROJECTCODE
	oClone:cPROJECTVERSION      := ::cPROJECTVERSION
	oClone:cQUANTITYUSED        := ::cQUANTITYUSED
	oClone:cSENDEMAIL           := ::cSENDEMAIL
	oClone:cSTRUCTUREORDER      := ::cSTRUCTUREORDER
	oClone:cTASKCODE            := ::cTASKCODE
	oClone:cTASKDESCRIPTION     := ::cTASKDESCRIPTION
	oClone:cTASKGROUP           := ::cTASKGROUP
	oClone:cTASKLEVEL           := ::cTASKLEVEL
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT MTPROJECT_PROJECTTASKSVIEW
	::Init()
	If oResponse = NIL ; Return ; Endif 
	::cCOMPOSITIONCODE   :=  WSAdvValue( oResponse,"_COMPOSITIONCODE","string",NIL,"Property cCOMPOSITIONCODE as s:string on SOAP Response not found.",NIL,"S",NIL) 
	::cMAINWBSCODE       :=  WSAdvValue( oResponse,"_MAINWBSCODE","string",NIL,"Property cMAINWBSCODE as s:string on SOAP Response not found.",NIL,"S",NIL) 
	::cMEASUREMENTUNIT   :=  WSAdvValue( oResponse,"_MEASUREMENTUNIT","string",NIL,"Property cMEASUREMENTUNIT as s:string on SOAP Response not found.",NIL,"S",NIL) 
	::cPROJECTCODE       :=  WSAdvValue( oResponse,"_PROJECTCODE","string",NIL,"Property cPROJECTCODE as s:string on SOAP Response not found.",NIL,"S",NIL) 
	::cPROJECTVERSION    :=  WSAdvValue( oResponse,"_PROJECTVERSION","string",NIL,"Property cPROJECTVERSION as s:string on SOAP Response not found.",NIL,"S",NIL) 
	::cQUANTITYUSED      :=  WSAdvValue( oResponse,"_QUANTITYUSED","string",NIL,"Property cQUANTITYUSED as s:string on SOAP Response not found.",NIL,"S",NIL) 
	::cSENDEMAIL         :=  WSAdvValue( oResponse,"_SENDEMAIL","string",NIL,"Property cSENDEMAIL as s:string on SOAP Response not found.",NIL,"S",NIL) 
	::cSTRUCTUREORDER    :=  WSAdvValue( oResponse,"_STRUCTUREORDER","string",NIL,"Property cSTRUCTUREORDER as s:string on SOAP Response not found.",NIL,"S",NIL) 
	::cTASKCODE          :=  WSAdvValue( oResponse,"_TASKCODE","string",NIL,"Property cTASKCODE as s:string on SOAP Response not found.",NIL,"S",NIL) 
	::cTASKDESCRIPTION   :=  WSAdvValue( oResponse,"_TASKDESCRIPTION","string",NIL,"Property cTASKDESCRIPTION as s:string on SOAP Response not found.",NIL,"S",NIL) 
	::cTASKGROUP         :=  WSAdvValue( oResponse,"_TASKGROUP","string",NIL,"Property cTASKGROUP as s:string on SOAP Response not found.",NIL,"S",NIL) 
	::cTASKLEVEL         :=  WSAdvValue( oResponse,"_TASKLEVEL","string",NIL,"Property cTASKLEVEL as s:string on SOAP Response not found.",NIL,"S",NIL) 
Return


