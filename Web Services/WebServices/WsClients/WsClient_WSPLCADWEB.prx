#INCLUDE "protheus.ch"
#INCLUDE "apwebsrv.ch"

/* ===============================================================================
WSDL Location    http://10.171.67.162:2217/ws/PLCADWEB.apw?WSDL
Gerado em        05/07/22 14:17:28
Observações      Código-Fonte gerado por ADVPL WSDL Client 1.120703
                 Alterações neste arquivo podem causar funcionamento incorreto
                 e serão perdidas caso o código-fonte seja gerado novamente.
=============================================================================== */

User Function _AHMKKCP ; Return  // "dummy" function - Internal Use 

/* -------------------------------------------------------------------------------
WSDL Service WSPLCADWEB
------------------------------------------------------------------------------- */

WSCLIENT WSPLCADWEB

	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD RESET
	WSMETHOD CLONE
	WSMETHOD GETCMBFORM
	WSMETHOD GETFORM
	WSMETHOD GETVLDFAM
	WSMETHOD GRVFORM
	WSMETHOD LOGLGPD
	WSMETHOD VALCODTIT
	WSMETHOD VALNOMEBE
	WSMETHOD VERIFYSTATUS

	WSDATA   _URL                      AS String
	WSDATA   _HEADOUT                  AS Array of String
	WSDATA   _COOKIES                  AS Array of String
	WSDATA   cUSERCODE                 AS string
	WSDATA   oWSDATAFORM               AS PLCADWEB_SDATAFRM
	WSDATA   oWSGETCMBFORMRESULT       AS PLCADWEB_SRETFORM
	WSDATA   oWSGETFORMRESULT          AS PLCADWEB_SRETFORM
	WSDATA   cDATAAUX                  AS string
	WSDATA   cGETVLDFAMRESULT          AS string
	WSDATA   oWSDATAINPUT              AS PLCADWEB_SDATAINPUT
	WSDATA   cGRVFORMRESULT            AS string
	WSDATA   cUSERLGPD                 AS string
	WSDATA   cROTINLGPD                AS string
	WSDATA   cLOGLGPDRESULT            AS string
	WSDATA   cGRAUPA                   AS string
	WSDATA   cVALCODTITRESULT          AS string
	WSDATA   cNOME                     AS string
	WSDATA   cMSGCRIT                  AS string
	WSDATA   cVALNOMEBERESULT          AS string
	WSDATA   cVERIFYSTATUSRESULT       AS string

	// Estruturas mantidas por compatibilidade - NÃO USAR
	WSDATA   oWSSDATAFRM               AS PLCADWEB_SDATAFRM
	WSDATA   oWSSDATAINPUT             AS PLCADWEB_SDATAINPUT

ENDWSCLIENT

WSMETHOD NEW WSCLIENT WSPLCADWEB
::Init()
If !FindFunction("XMLCHILDEX")
	UserException("O Código-Fonte Client atual requer os executáveis do Protheus Build [7.00.191205P-20200114] ou superior. Atualize o Protheus ou gere o Código-Fonte novamente utilizando o Build atual.")
EndIf
Return Self

WSMETHOD INIT WSCLIENT WSPLCADWEB
	::oWSDATAFORM        := PLCADWEB_SDATAFRM():New()
	::oWSGETCMBFORMRESULT := PLCADWEB_SRETFORM():New()
	::oWSGETFORMRESULT   := PLCADWEB_SRETFORM():New()
	::oWSDATAINPUT       := PLCADWEB_SDATAINPUT():New()

	// Estruturas mantidas por compatibilidade - NÃO USAR
	::oWSSDATAFRM        := ::oWSDATAFORM
	::oWSSDATAINPUT      := ::oWSDATAINPUT
Return

WSMETHOD RESET WSCLIENT WSPLCADWEB
	::cUSERCODE          := NIL 
	::oWSDATAFORM        := NIL 
	::oWSGETCMBFORMRESULT := NIL 
	::oWSGETFORMRESULT   := NIL 
	::cDATAAUX           := NIL 
	::cGETVLDFAMRESULT   := NIL 
	::oWSDATAINPUT       := NIL 
	::cGRVFORMRESULT     := NIL 
	::cUSERLGPD          := NIL 
	::cROTINLGPD         := NIL 
	::cLOGLGPDRESULT     := NIL 
	::cGRAUPA            := NIL 
	::cVALCODTITRESULT   := NIL 
	::cNOME              := NIL 
	::cMSGCRIT           := NIL 
	::cVALNOMEBERESULT   := NIL 
	::cVERIFYSTATUSRESULT := NIL 

	// Estruturas mantidas por compatibilidade - NÃO USAR
	::oWSSDATAFRM        := NIL
	::oWSSDATAINPUT      := NIL
	::Init()
Return

WSMETHOD CLONE WSCLIENT WSPLCADWEB
Local oClone := WSPLCADWEB():New()
	oClone:_URL          := ::_URL 
	oClone:cUSERCODE     := ::cUSERCODE
	oClone:oWSDATAFORM   :=  IIF(::oWSDATAFORM = NIL , NIL ,::oWSDATAFORM:Clone() )
	oClone:oWSGETCMBFORMRESULT :=  IIF(::oWSGETCMBFORMRESULT = NIL , NIL ,::oWSGETCMBFORMRESULT:Clone() )
	oClone:oWSGETFORMRESULT :=  IIF(::oWSGETFORMRESULT = NIL , NIL ,::oWSGETFORMRESULT:Clone() )
	oClone:cDATAAUX      := ::cDATAAUX
	oClone:cGETVLDFAMRESULT := ::cGETVLDFAMRESULT
	oClone:oWSDATAINPUT  :=  IIF(::oWSDATAINPUT = NIL , NIL ,::oWSDATAINPUT:Clone() )
	oClone:cGRVFORMRESULT := ::cGRVFORMRESULT
	oClone:cUSERLGPD     := ::cUSERLGPD
	oClone:cROTINLGPD    := ::cROTINLGPD
	oClone:cLOGLGPDRESULT := ::cLOGLGPDRESULT
	oClone:cGRAUPA       := ::cGRAUPA
	oClone:cVALCODTITRESULT := ::cVALCODTITRESULT
	oClone:cNOME         := ::cNOME
	oClone:cMSGCRIT      := ::cMSGCRIT
	oClone:cVALNOMEBERESULT := ::cVALNOMEBERESULT
	oClone:cVERIFYSTATUSRESULT := ::cVERIFYSTATUSRESULT

	// Estruturas mantidas por compatibilidade - NÃO USAR
	oClone:oWSSDATAFRM   := oClone:oWSDATAFORM
	oClone:oWSSDATAINPUT := oClone:oWSDATAINPUT
Return oClone

// WSDL Method GETCMBFORM of Service WSPLCADWEB

WSMETHOD GETCMBFORM WSSEND cUSERCODE,oWSDATAFORM WSRECEIVE oWSGETCMBFORMRESULT WSCLIENT WSPLCADWEB
Local cSoap := "" , oXmlRet

BEGIN WSMETHOD

cSoap += '<GETCMBFORM xmlns="http://10.171.67.162:2251/">'
cSoap += WSSoapValue("USERCODE", ::cUSERCODE, cUSERCODE , "string", .T. , .F., 0 , NIL, .F.,.F.) 
cSoap += WSSoapValue("DATAFORM", ::oWSDATAFORM, oWSDATAFORM , "SDATAFRM", .F. , .F., 0 , NIL, .F.,.F.) 
cSoap += "</GETCMBFORM>"

oXmlRet := SvcSoapCall(Self,cSoap,; 
	"http://10.171.67.162:2251/GETCMBFORM",; 
	"DOCUMENT","http://10.171.67.162:2251/",,"1.031217",; 
	"http://10.171.67.162:2251/ws/PLCADWEB.apw")

::Init()
::oWSGETCMBFORMRESULT:SoapRecv( WSAdvValue( oXmlRet,"_GETCMBFORMRESPONSE:_GETCMBFORMRESULT","SRETFORM",NIL,NIL,NIL,NIL,NIL,NIL) )

END WSMETHOD

oXmlRet := NIL
Return .T.

// WSDL Method GETFORM of Service WSPLCADWEB

WSMETHOD GETFORM WSSEND cUSERCODE,oWSDATAFORM WSRECEIVE oWSGETFORMRESULT WSCLIENT WSPLCADWEB
Local cSoap := "" , oXmlRet

BEGIN WSMETHOD

cSoap += '<GETFORM xmlns="http://10.171.67.162:2251/">'
cSoap += WSSoapValue("USERCODE", ::cUSERCODE, cUSERCODE , "string", .T. , .F., 0 , NIL, .F.,.F.) 
cSoap += WSSoapValue("DATAFORM", ::oWSDATAFORM, oWSDATAFORM , "SDATAFRM", .F. , .F., 0 , NIL, .F.,.F.) 
cSoap += "</GETFORM>"

oXmlRet := SvcSoapCall(Self,cSoap,; 
	"http://10.171.67.162:2251/GETFORM",; 
	"DOCUMENT","http://10.171.67.162:2251/",,"1.031217",; 
	"http://10.171.67.162:2251/ws/PLCADWEB.apw")

::Init()
::oWSGETFORMRESULT:SoapRecv( WSAdvValue( oXmlRet,"_GETFORMRESPONSE:_GETFORMRESULT","SRETFORM",NIL,NIL,NIL,NIL,NIL,NIL) )

END WSMETHOD

oXmlRet := NIL
Return .T.

// WSDL Method GETVLDFAM of Service WSPLCADWEB

WSMETHOD GETVLDFAM WSSEND cUSERCODE,cDATAAUX WSRECEIVE cGETVLDFAMRESULT WSCLIENT WSPLCADWEB
Local cSoap := "" , oXmlRet

BEGIN WSMETHOD

cSoap += '<GETVLDFAM xmlns="http://10.171.67.162:2217/">'
cSoap += WSSoapValue("USERCODE", ::cUSERCODE, cUSERCODE , "string", .T. , .F., 0 , NIL, .F.,.F.) 
cSoap += WSSoapValue("DATAAUX", ::cDATAAUX, cDATAAUX , "string", .T. , .F., 0 , NIL, .F.,.F.) 
cSoap += "</GETVLDFAM>"

oXmlRet := SvcSoapCall(Self,cSoap,; 
	"http://10.171.67.162:2217/GETVLDFAM",; 
	"DOCUMENT","http://10.171.67.162:2217/",,"1.031217",; 
	"http://10.171.67.162:2217/ws/PLCADWEB.apw")

::Init()
::cGETVLDFAMRESULT   :=  WSAdvValue( oXmlRet,"_GETVLDFAMRESPONSE:_GETVLDFAMRESULT:TEXT","string",NIL,NIL,NIL,NIL,NIL,NIL) 

END WSMETHOD

oXmlRet := NIL
Return .T.

// WSDL Method GRVFORM of Service WSPLCADWEB

WSMETHOD GRVFORM WSSEND cUSERCODE,oWSDATAINPUT,cDATAAUX WSRECEIVE cGRVFORMRESULT WSCLIENT WSPLCADWEB
Local cSoap := "" , oXmlRet

BEGIN WSMETHOD

cSoap += '<GRVFORM xmlns="http://10.171.67.162:2251/">'
cSoap += WSSoapValue("USERCODE", ::cUSERCODE, cUSERCODE , "string", .T. , .F., 0 , NIL, .F.,.F.) 
cSoap += WSSoapValue("DATAINPUT", ::oWSDATAINPUT, oWSDATAINPUT , "SDATAINPUT", .F. , .F., 0 , NIL, .F.,.F.) 
cSoap += WSSoapValue("DATAAUX", ::cDATAAUX, cDATAAUX , "string", .T. , .F., 0 , NIL, .F.,.F.) 
cSoap += "</GRVFORM>"

oXmlRet := SvcSoapCall(Self,cSoap,; 
	"http://10.171.67.162:2251/GRVFORM",; 
	"DOCUMENT","http://10.171.67.162:2251/",,"1.031217",; 
	"http://10.171.67.162:2251/ws/PLCADWEB.apw")

::Init()
::cGRVFORMRESULT     :=  WSAdvValue( oXmlRet,"_GRVFORMRESPONSE:_GRVFORMRESULT:TEXT","string",NIL,NIL,NIL,NIL,NIL,NIL) 

END WSMETHOD

oXmlRet := NIL
Return .T.

// WSDL Method LOGLGPD of Service WSPLCADWEB

WSMETHOD LOGLGPD WSSEND cUSERCODE,cUSERLGPD,cROTINLGPD WSRECEIVE cLOGLGPDRESULT WSCLIENT WSPLCADWEB
Local cSoap := "" , oXmlRet

BEGIN WSMETHOD

cSoap += '<LOGLGPD xmlns="http://10.171.67.162:2251/">'
cSoap += WSSoapValue("USERCODE", ::cUSERCODE, cUSERCODE , "string", .T. , .F., 0 , NIL, .F.,.F.) 
cSoap += WSSoapValue("USERLGPD", ::cUSERLGPD, cUSERLGPD , "string", .F. , .F., 0 , NIL, .F.,.F.) 
cSoap += WSSoapValue("ROTINLGPD", ::cROTINLGPD, cROTINLGPD , "string", .F. , .F., 0 , NIL, .F.,.F.) 
cSoap += "</LOGLGPD>"

oXmlRet := SvcSoapCall(Self,cSoap,; 
	"http://10.171.67.162:2251/LOGLGPD",; 
	"DOCUMENT","http://10.171.67.162:2251/",,"1.031217",; 
	"http://10.171.67.162:2251/ws/PLCADWEB.apw")

::Init()
::cLOGLGPDRESULT     :=  WSAdvValue( oXmlRet,"_LOGLGPDRESPONSE:_LOGLGPDRESULT:TEXT","string",NIL,NIL,NIL,NIL,NIL,NIL) 

END WSMETHOD

oXmlRet := NIL
Return .T.

// WSDL Method VALCODTIT of Service WSPLCADWEB

WSMETHOD VALCODTIT WSSEND cUSERCODE,cGRAUPA WSRECEIVE cVALCODTITRESULT WSCLIENT WSPLCADWEB
Local cSoap := "" , oXmlRet

BEGIN WSMETHOD

cSoap += '<VALCODTIT xmlns="http://10.171.67.162:2251/">'
cSoap += WSSoapValue("USERCODE", ::cUSERCODE, cUSERCODE , "string", .T. , .F., 0 , NIL, .F.,.F.) 
cSoap += WSSoapValue("GRAUPA", ::cGRAUPA, cGRAUPA , "string", .T. , .F., 0 , NIL, .F.,.F.) 
cSoap += "</VALCODTIT>"

oXmlRet := SvcSoapCall(Self,cSoap,; 
	"http://10.171.67.162:2251/VALCODTIT",; 
	"DOCUMENT","http://10.171.67.162:2251/",,"1.031217",; 
	"http://10.171.67.162:2251/ws/PLCADWEB.apw")

::Init()
::cVALCODTITRESULT   :=  WSAdvValue( oXmlRet,"_VALCODTITRESPONSE:_VALCODTITRESULT:TEXT","string",NIL,NIL,NIL,NIL,NIL,NIL) 

END WSMETHOD

oXmlRet := NIL
Return .T.

// WSDL Method VALNOMEBE of Service WSPLCADWEB

WSMETHOD VALNOMEBE WSSEND cUSERCODE,cNOME,cMSGCRIT WSRECEIVE cVALNOMEBERESULT WSCLIENT WSPLCADWEB
Local cSoap := "" , oXmlRet

BEGIN WSMETHOD

cSoap += '<VALNOMEBE xmlns="http://10.171.67.162:2251/">'
cSoap += WSSoapValue("USERCODE", ::cUSERCODE, cUSERCODE , "string", .T. , .F., 0 , NIL, .F.,.F.) 
cSoap += WSSoapValue("NOME", ::cNOME, cNOME , "string", .T. , .F., 0 , NIL, .F.,.F.) 
cSoap += WSSoapValue("MSGCRIT", ::cMSGCRIT, cMSGCRIT , "string", .T. , .F., 0 , NIL, .F.,.F.) 
cSoap += "</VALNOMEBE>"

oXmlRet := SvcSoapCall(Self,cSoap,; 
	"http://10.171.67.162:2251/VALNOMEBE",; 
	"DOCUMENT","http://10.171.67.162:2251/",,"1.031217",; 
	"http://10.171.67.162:2251/ws/PLCADWEB.apw")

::Init()
::cVALNOMEBERESULT   :=  WSAdvValue( oXmlRet,"_VALNOMEBERESPONSE:_VALNOMEBERESULT:TEXT","string",NIL,NIL,NIL,NIL,NIL,NIL) 

END WSMETHOD

oXmlRet := NIL
Return .T.

// WSDL Method VERIFYSTATUS of Service WSPLCADWEB

WSMETHOD VERIFYSTATUS WSSEND cUSERCODE,oWSDATAFORM WSRECEIVE cVERIFYSTATUSRESULT WSCLIENT WSPLCADWEB
Local cSoap := "" , oXmlRet

BEGIN WSMETHOD

cSoap += '<VERIFYSTATUS xmlns="http://10.171.67.162:2251/">'
cSoap += WSSoapValue("USERCODE", ::cUSERCODE, cUSERCODE , "string", .T. , .F., 0 , NIL, .F.,.F.) 
cSoap += WSSoapValue("DATAFORM", ::oWSDATAFORM, oWSDATAFORM , "SDATAFRM", .F. , .F., 0 , NIL, .F.,.F.) 
cSoap += "</VERIFYSTATUS>"

oXmlRet := SvcSoapCall(Self,cSoap,; 
	"http://10.171.67.162:2251/VERIFYSTATUS",; 
	"DOCUMENT","http://10.171.67.162:2251/",,"1.031217",; 
	"http://10.171.67.162:2251/ws/PLCADWEB.apw")

::Init()
::cVERIFYSTATUSRESULT :=  WSAdvValue( oXmlRet,"_VERIFYSTATUSRESPONSE:_VERIFYSTATUSRESULT:TEXT","string",NIL,NIL,NIL,NIL,NIL,NIL) 

END WSMETHOD

oXmlRet := NIL
Return .T.


// WSDL Data Structure SDATAFRM

WSSTRUCT PLCADWEB_SDATAFRM
	WSDATA   cCHAVELAY                 AS string OPTIONAL
	WSDATA   cDADCOMBO                 AS string OPTIONAL
	WSDATA   cDATAAUX                  AS string OPTIONAL
	WSDATA   cRECNOREG                 AS string OPTIONAL
	WSDATA   cTPPORTWS                 AS string OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPSEND
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT PLCADWEB_SDATAFRM
	::Init()
Return Self

WSMETHOD INIT WSCLIENT PLCADWEB_SDATAFRM
Return

WSMETHOD CLONE WSCLIENT PLCADWEB_SDATAFRM
	Local oClone := PLCADWEB_SDATAFRM():NEW()
	oClone:cCHAVELAY            := ::cCHAVELAY
	oClone:cDADCOMBO            := ::cDADCOMBO
	oClone:cDATAAUX             := ::cDATAAUX
	oClone:cRECNOREG            := ::cRECNOREG
	oClone:cTPPORTWS            := ::cTPPORTWS
Return oClone

WSMETHOD SOAPSEND WSCLIENT PLCADWEB_SDATAFRM
	Local cSoap := ""
	cSoap += WSSoapValue("CHAVELAY", ::cCHAVELAY, ::cCHAVELAY , "string", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("DADCOMBO", ::cDADCOMBO, ::cDADCOMBO , "string", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("DATAAUX", ::cDATAAUX, ::cDATAAUX , "string", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("RECNOREG", ::cRECNOREG, ::cRECNOREG , "string", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("TPPORTWS", ::cTPPORTWS, ::cTPPORTWS , "string", .F. , .F., 0 , NIL, .F.,.F.) 
Return cSoap

// WSDL Data Structure SRETFORM

WSSTRUCT PLCADWEB_SRETFORM
	WSDATA   oWSCMPS                   AS PLCADWEB_ARRAYOFSCMPS OPTIONAL
	WSDATA   oWSCONTGRID               AS PLCADWEB_ARRAYOFAGRIDS OPTIONAL
	WSDATA   cGRIDS                    AS string OPTIONAL
	WSDATA   cPAGINA                   AS string OPTIONAL
	WSDATA   oWSRETCMBS                AS PLCADWEB_ARRAYOFSRETCMBS OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT PLCADWEB_SRETFORM
	::Init()
Return Self

WSMETHOD INIT WSCLIENT PLCADWEB_SRETFORM
Return

WSMETHOD CLONE WSCLIENT PLCADWEB_SRETFORM
	Local oClone := PLCADWEB_SRETFORM():NEW()
	oClone:oWSCMPS              := IIF(::oWSCMPS = NIL , NIL , ::oWSCMPS:Clone() )
	oClone:oWSCONTGRID          := IIF(::oWSCONTGRID = NIL , NIL , ::oWSCONTGRID:Clone() )
	oClone:cGRIDS               := ::cGRIDS
	oClone:cPAGINA              := ::cPAGINA
	oClone:oWSRETCMBS           := IIF(::oWSRETCMBS = NIL , NIL , ::oWSRETCMBS:Clone() )
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT PLCADWEB_SRETFORM
	Local oNode1
	Local oNode2
	Local oNode5
	::Init()
	If oResponse = NIL ; Return ; Endif 
	oNode1 :=  WSAdvValue( oResponse,"_CMPS","ARRAYOFSCMPS",NIL,NIL,NIL,"O",NIL,NIL) 
	If oNode1 != NIL
		::oWSCMPS := PLCADWEB_ARRAYOFSCMPS():New()
		::oWSCMPS:SoapRecv(oNode1)
	EndIf
	oNode2 :=  WSAdvValue( oResponse,"_CONTGRID","ARRAYOFAGRIDS",NIL,NIL,NIL,"O",NIL,NIL) 
	If oNode2 != NIL
		::oWSCONTGRID := PLCADWEB_ARRAYOFAGRIDS():New()
		::oWSCONTGRID:SoapRecv(oNode2)
	EndIf
	::cGRIDS             :=  WSAdvValue( oResponse,"_GRIDS","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cPAGINA            :=  WSAdvValue( oResponse,"_PAGINA","string",NIL,NIL,NIL,"S",NIL,NIL) 
	oNode5 :=  WSAdvValue( oResponse,"_RETCMBS","ARRAYOFSRETCMBS",NIL,NIL,NIL,"O",NIL,NIL) 
	If oNode5 != NIL
		::oWSRETCMBS := PLCADWEB_ARRAYOFSRETCMBS():New()
		::oWSRETCMBS:SoapRecv(oNode5)
	EndIf
Return

// WSDL Data Structure SDATAINPUT

WSSTRUCT PLCADWEB_SDATAINPUT
	WSDATA   cCHAVELAY                 AS string
	WSDATA   oWSDADOS                  AS PLCADWEB_ARRAYOFSCMPVLR
	WSDATA   cMATRIC                   AS string OPTIONAL
	WSDATA   cRECNOREG                 AS string OPTIONAL
	WSDATA   cRECNUS                   AS string OPTIONAL
	WSDATA   cTPPORTAL                 AS string OPTIONAL
	WSDATA   cUSERLOGIN                AS string OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPSEND
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT PLCADWEB_SDATAINPUT
	::Init()
Return Self

WSMETHOD INIT WSCLIENT PLCADWEB_SDATAINPUT
Return

WSMETHOD CLONE WSCLIENT PLCADWEB_SDATAINPUT
	Local oClone := PLCADWEB_SDATAINPUT():NEW()
	oClone:cCHAVELAY            := ::cCHAVELAY
	oClone:oWSDADOS             := IIF(::oWSDADOS = NIL , NIL , ::oWSDADOS:Clone() )
	oClone:cMATRIC              := ::cMATRIC
	oClone:cRECNOREG            := ::cRECNOREG
	oClone:cRECNUS              := ::cRECNUS
	oClone:cTPPORTAL            := ::cTPPORTAL
	oClone:cUSERLOGIN           := ::cUSERLOGIN
Return oClone

WSMETHOD SOAPSEND WSCLIENT PLCADWEB_SDATAINPUT
	Local cSoap := ""
	cSoap += WSSoapValue("CHAVELAY", ::cCHAVELAY, ::cCHAVELAY , "string", .T. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("DADOS", ::oWSDADOS, ::oWSDADOS , "ARRAYOFSCMPVLR", .T. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("MATRIC", ::cMATRIC, ::cMATRIC , "string", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("RECNOREG", ::cRECNOREG, ::cRECNOREG , "string", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("RECNUS", ::cRECNUS, ::cRECNUS , "string", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("TPPORTAL", ::cTPPORTAL, ::cTPPORTAL , "string", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("USERLOGIN", ::cUSERLOGIN, ::cUSERLOGIN , "string", .F. , .F., 0 , NIL, .F.,.F.) 
Return cSoap

// WSDL Data Structure ARRAYOFSCMPS

WSSTRUCT PLCADWEB_ARRAYOFSCMPS
	WSDATA   oWSSCMPS                  AS PLCADWEB_SCMPS OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT PLCADWEB_ARRAYOFSCMPS
	::Init()
Return Self

WSMETHOD INIT WSCLIENT PLCADWEB_ARRAYOFSCMPS
	::oWSSCMPS             := {} // Array Of  PLCADWEB_SCMPS():New()
Return

WSMETHOD CLONE WSCLIENT PLCADWEB_ARRAYOFSCMPS
	Local oClone := PLCADWEB_ARRAYOFSCMPS():NEW()
	oClone:oWSSCMPS := NIL
	If ::oWSSCMPS <> NIL 
		oClone:oWSSCMPS := {}
		aEval( ::oWSSCMPS , { |x| aadd( oClone:oWSSCMPS , x:Clone() ) } )
	Endif 
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT PLCADWEB_ARRAYOFSCMPS
	Local nRElem1, oNodes1, nTElem1
	::Init()
	If oResponse = NIL ; Return ; Endif 
	oNodes1 :=  WSAdvValue( oResponse,"_SCMPS","SCMPS",{},NIL,.T.,"O",NIL,NIL) 
	nTElem1 := len(oNodes1)
	For nRElem1 := 1 to nTElem1 
		If !WSIsNilNode( oNodes1[nRElem1] )
			aadd(::oWSSCMPS , PLCADWEB_SCMPS():New() )
			::oWSSCMPS[len(::oWSSCMPS)]:SoapRecv(oNodes1[nRElem1])
		Endif
	Next
Return

// WSDL Data Structure ARRAYOFAGRIDS

WSSTRUCT PLCADWEB_ARRAYOFAGRIDS
	WSDATA   oWSAGRIDS                 AS PLCADWEB_AGRIDS OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT PLCADWEB_ARRAYOFAGRIDS
	::Init()
Return Self

WSMETHOD INIT WSCLIENT PLCADWEB_ARRAYOFAGRIDS
	::oWSAGRIDS            := {} // Array Of  PLCADWEB_AGRIDS():New()
Return

WSMETHOD CLONE WSCLIENT PLCADWEB_ARRAYOFAGRIDS
	Local oClone := PLCADWEB_ARRAYOFAGRIDS():NEW()
	oClone:oWSAGRIDS := NIL
	If ::oWSAGRIDS <> NIL 
		oClone:oWSAGRIDS := {}
		aEval( ::oWSAGRIDS , { |x| aadd( oClone:oWSAGRIDS , x:Clone() ) } )
	Endif 
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT PLCADWEB_ARRAYOFAGRIDS
	Local nRElem1, oNodes1, nTElem1
	::Init()
	If oResponse = NIL ; Return ; Endif 
	oNodes1 :=  WSAdvValue( oResponse,"_AGRIDS","AGRIDS",{},NIL,.T.,"O",NIL,NIL) 
	nTElem1 := len(oNodes1)
	For nRElem1 := 1 to nTElem1 
		If !WSIsNilNode( oNodes1[nRElem1] )
			aadd(::oWSAGRIDS , PLCADWEB_AGRIDS():New() )
			::oWSAGRIDS[len(::oWSAGRIDS)]:SoapRecv(oNodes1[nRElem1])
		Endif
	Next
Return

// WSDL Data Structure ARRAYOFSRETCMBS

WSSTRUCT PLCADWEB_ARRAYOFSRETCMBS
	WSDATA   oWSSRETCMBS               AS PLCADWEB_SRETCMBS OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT PLCADWEB_ARRAYOFSRETCMBS
	::Init()
Return Self

WSMETHOD INIT WSCLIENT PLCADWEB_ARRAYOFSRETCMBS
	::oWSSRETCMBS          := {} // Array Of  PLCADWEB_SRETCMBS():New()
Return

WSMETHOD CLONE WSCLIENT PLCADWEB_ARRAYOFSRETCMBS
	Local oClone := PLCADWEB_ARRAYOFSRETCMBS():NEW()
	oClone:oWSSRETCMBS := NIL
	If ::oWSSRETCMBS <> NIL 
		oClone:oWSSRETCMBS := {}
		aEval( ::oWSSRETCMBS , { |x| aadd( oClone:oWSSRETCMBS , x:Clone() ) } )
	Endif 
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT PLCADWEB_ARRAYOFSRETCMBS
	Local nRElem1, oNodes1, nTElem1
	::Init()
	If oResponse = NIL ; Return ; Endif 
	oNodes1 :=  WSAdvValue( oResponse,"_SRETCMBS","SRETCMBS",{},NIL,.T.,"O",NIL,NIL) 
	nTElem1 := len(oNodes1)
	For nRElem1 := 1 to nTElem1 
		If !WSIsNilNode( oNodes1[nRElem1] )
			aadd(::oWSSRETCMBS , PLCADWEB_SRETCMBS():New() )
			::oWSSRETCMBS[len(::oWSSRETCMBS)]:SoapRecv(oNodes1[nRElem1])
		Endif
	Next
Return

// WSDL Data Structure ARRAYOFSCMPVLR

WSSTRUCT PLCADWEB_ARRAYOFSCMPVLR
	WSDATA   oWSSCMPVLR                AS PLCADWEB_SCMPVLR OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPSEND
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT PLCADWEB_ARRAYOFSCMPVLR
	::Init()
Return Self

WSMETHOD INIT WSCLIENT PLCADWEB_ARRAYOFSCMPVLR
	::oWSSCMPVLR           := {} // Array Of  PLCADWEB_SCMPVLR():New()
Return

WSMETHOD CLONE WSCLIENT PLCADWEB_ARRAYOFSCMPVLR
	Local oClone := PLCADWEB_ARRAYOFSCMPVLR():NEW()
	oClone:oWSSCMPVLR := NIL
	If ::oWSSCMPVLR <> NIL 
		oClone:oWSSCMPVLR := {}
		aEval( ::oWSSCMPVLR , { |x| aadd( oClone:oWSSCMPVLR , x:Clone() ) } )
	Endif 
Return oClone

WSMETHOD SOAPSEND WSCLIENT PLCADWEB_ARRAYOFSCMPVLR
	Local cSoap := ""
	aEval( ::oWSSCMPVLR , {|x| cSoap := cSoap  +  WSSoapValue("SCMPVLR", x , x , "SCMPVLR", .F. , .F., 0 , NIL, .F.,.F.)  } ) 
Return cSoap

// WSDL Data Structure SCMPS

WSSTRUCT PLCADWEB_SCMPS
	WSDATA   oWSACOLS                  AS PLCADWEB_ARRAYOFSTRING OPTIONAL
	WSDATA   oWSAHEADER                AS PLCADWEB_ARRAYOFSTRING OPTIONAL
	WSDATA   oWSCMPGRID                AS PLCADWEB_ARRAYOFSCMPGRID OPTIONAL
	WSDATA   cDESCRI                   AS string OPTIONAL
	WSDATA   cNOME                     AS string OPTIONAL
	WSDATA   cTIPO                     AS string OPTIONAL
	WSDATA   cVALID                    AS string OPTIONAL
	WSDATA   cXCOLS                    AS string OPTIONAL
	WSDATA   cXHEADER                  AS string OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT PLCADWEB_SCMPS
	::Init()
Return Self

WSMETHOD INIT WSCLIENT PLCADWEB_SCMPS
Return

WSMETHOD CLONE WSCLIENT PLCADWEB_SCMPS
	Local oClone := PLCADWEB_SCMPS():NEW()
	oClone:oWSACOLS             := IIF(::oWSACOLS = NIL , NIL , ::oWSACOLS:Clone() )
	oClone:oWSAHEADER           := IIF(::oWSAHEADER = NIL , NIL , ::oWSAHEADER:Clone() )
	oClone:oWSCMPGRID           := IIF(::oWSCMPGRID = NIL , NIL , ::oWSCMPGRID:Clone() )
	oClone:cDESCRI              := ::cDESCRI
	oClone:cNOME                := ::cNOME
	oClone:cTIPO                := ::cTIPO
	oClone:cVALID               := ::cVALID
	oClone:cXCOLS               := ::cXCOLS
	oClone:cXHEADER             := ::cXHEADER
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT PLCADWEB_SCMPS
	Local oNode1
	Local oNode2
	Local oNode3
	::Init()
	If oResponse = NIL ; Return ; Endif 
	oNode1 :=  WSAdvValue( oResponse,"_ACOLS","ARRAYOFSTRING",NIL,NIL,NIL,"O",NIL,NIL) 
	If oNode1 != NIL
		::oWSACOLS := PLCADWEB_ARRAYOFSTRING():New()
		::oWSACOLS:SoapRecv(oNode1)
	EndIf
	oNode2 :=  WSAdvValue( oResponse,"_AHEADER","ARRAYOFSTRING",NIL,NIL,NIL,"O",NIL,NIL) 
	If oNode2 != NIL
		::oWSAHEADER := PLCADWEB_ARRAYOFSTRING():New()
		::oWSAHEADER:SoapRecv(oNode2)
	EndIf
	oNode3 :=  WSAdvValue( oResponse,"_CMPGRID","ARRAYOFSCMPGRID",NIL,NIL,NIL,"O",NIL,NIL) 
	If oNode3 != NIL
		::oWSCMPGRID := PLCADWEB_ARRAYOFSCMPGRID():New()
		::oWSCMPGRID:SoapRecv(oNode3)
	EndIf
	::cDESCRI            :=  WSAdvValue( oResponse,"_DESCRI","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cNOME              :=  WSAdvValue( oResponse,"_NOME","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cTIPO              :=  WSAdvValue( oResponse,"_TIPO","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cVALID             :=  WSAdvValue( oResponse,"_VALID","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cXCOLS             :=  WSAdvValue( oResponse,"_XCOLS","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cXHEADER           :=  WSAdvValue( oResponse,"_XHEADER","string",NIL,NIL,NIL,"S",NIL,NIL) 
Return

// WSDL Data Structure AGRIDS

WSSTRUCT PLCADWEB_AGRIDS
	WSDATA   oWSACOLS                  AS PLCADWEB_ARRAYOFSSTRGRID
	WSDATA   oWSAHEADER                AS PLCADWEB_ARRAYOFSSTRGRID
	WSDATA   cGRID                     AS string
	WSDATA   cXCOLS                    AS string OPTIONAL
	WSDATA   cXHEADER                  AS string OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT PLCADWEB_AGRIDS
	::Init()
Return Self

WSMETHOD INIT WSCLIENT PLCADWEB_AGRIDS
Return

WSMETHOD CLONE WSCLIENT PLCADWEB_AGRIDS
	Local oClone := PLCADWEB_AGRIDS():NEW()
	oClone:oWSACOLS             := IIF(::oWSACOLS = NIL , NIL , ::oWSACOLS:Clone() )
	oClone:oWSAHEADER           := IIF(::oWSAHEADER = NIL , NIL , ::oWSAHEADER:Clone() )
	oClone:cGRID                := ::cGRID
	oClone:cXCOLS               := ::cXCOLS
	oClone:cXHEADER             := ::cXHEADER
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT PLCADWEB_AGRIDS
	Local oNode1
	Local oNode2
	::Init()
	If oResponse = NIL ; Return ; Endif 
	oNode1 :=  WSAdvValue( oResponse,"_ACOLS","ARRAYOFSSTRGRID",NIL,"Property oWSACOLS as s0:ARRAYOFSSTRGRID on SOAP Response not found.",NIL,"O",NIL,NIL) 
	If oNode1 != NIL
		::oWSACOLS := PLCADWEB_ARRAYOFSSTRGRID():New()
		::oWSACOLS:SoapRecv(oNode1)
	EndIf
	oNode2 :=  WSAdvValue( oResponse,"_AHEADER","ARRAYOFSSTRGRID",NIL,"Property oWSAHEADER as s0:ARRAYOFSSTRGRID on SOAP Response not found.",NIL,"O",NIL,NIL) 
	If oNode2 != NIL
		::oWSAHEADER := PLCADWEB_ARRAYOFSSTRGRID():New()
		::oWSAHEADER:SoapRecv(oNode2)
	EndIf
	::cGRID              :=  WSAdvValue( oResponse,"_GRID","string",NIL,"Property cGRID as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::cXCOLS             :=  WSAdvValue( oResponse,"_XCOLS","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cXHEADER           :=  WSAdvValue( oResponse,"_XHEADER","string",NIL,NIL,NIL,"S",NIL,NIL) 
Return

// WSDL Data Structure SRETCMBS

WSSTRUCT PLCADWEB_SRETCMBS
	WSDATA   cCAMPOG                   AS string OPTIONAL
	WSDATA   cCBOX                     AS string OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT PLCADWEB_SRETCMBS
	::Init()
Return Self

WSMETHOD INIT WSCLIENT PLCADWEB_SRETCMBS
Return

WSMETHOD CLONE WSCLIENT PLCADWEB_SRETCMBS
	Local oClone := PLCADWEB_SRETCMBS():NEW()
	oClone:cCAMPOG              := ::cCAMPOG
	oClone:cCBOX                := ::cCBOX
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT PLCADWEB_SRETCMBS
	::Init()
	If oResponse = NIL ; Return ; Endif 
	::cCAMPOG            :=  WSAdvValue( oResponse,"_CAMPOG","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cCBOX              :=  WSAdvValue( oResponse,"_CBOX","string",NIL,NIL,NIL,"S",NIL,NIL) 
Return

// WSDL Data Structure SCMPVLR

WSSTRUCT PLCADWEB_SCMPVLR
	WSDATA   cCAMPO                    AS string OPTIONAL
	WSDATA   cSEQGRID                  AS string OPTIONAL
	WSDATA   cTABELA                   AS string OPTIONAL
	WSDATA   cTIPO                     AS string OPTIONAL
	WSDATA   cVALOR                    AS string OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPSEND
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT PLCADWEB_SCMPVLR
	::Init()
Return Self

WSMETHOD INIT WSCLIENT PLCADWEB_SCMPVLR
Return

WSMETHOD CLONE WSCLIENT PLCADWEB_SCMPVLR
	Local oClone := PLCADWEB_SCMPVLR():NEW()
	oClone:cCAMPO               := ::cCAMPO
	oClone:cSEQGRID             := ::cSEQGRID
	oClone:cTABELA              := ::cTABELA
	oClone:cTIPO                := ::cTIPO
	oClone:cVALOR               := ::cVALOR
Return oClone

WSMETHOD SOAPSEND WSCLIENT PLCADWEB_SCMPVLR
	Local cSoap := ""
	cSoap += WSSoapValue("CAMPO", ::cCAMPO, ::cCAMPO , "string", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("SEQGRID", ::cSEQGRID, ::cSEQGRID , "string", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("TABELA", ::cTABELA, ::cTABELA , "string", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("TIPO", ::cTIPO, ::cTIPO , "string", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("VALOR", ::cVALOR, ::cVALOR , "string", .F. , .F., 0 , NIL, .F.,.F.) 
Return cSoap

// WSDL Data Structure ARRAYOFSTRING

WSSTRUCT PLCADWEB_ARRAYOFSTRING
	WSDATA   cSTRING                   AS string OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT PLCADWEB_ARRAYOFSTRING
	::Init()
Return Self

WSMETHOD INIT WSCLIENT PLCADWEB_ARRAYOFSTRING
	::cSTRING              := {} // Array Of  ""
Return

WSMETHOD CLONE WSCLIENT PLCADWEB_ARRAYOFSTRING
	Local oClone := PLCADWEB_ARRAYOFSTRING():NEW()
	oClone:cSTRING              := IIf(::cSTRING <> NIL , aClone(::cSTRING) , NIL )
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT PLCADWEB_ARRAYOFSTRING
	Local oNodes1 :=  WSAdvValue( oResponse,"_STRING","string",{},NIL,.T.,"S",NIL,"a") 
	::Init()
	If oResponse = NIL ; Return ; Endif 
	aEval(oNodes1 , { |x| aadd(::cSTRING ,  x:TEXT  ) } )
Return

// WSDL Data Structure ARRAYOFSCMPGRID

WSSTRUCT PLCADWEB_ARRAYOFSCMPGRID
	WSDATA   oWSSCMPGRID               AS PLCADWEB_SCMPGRID OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT PLCADWEB_ARRAYOFSCMPGRID
	::Init()
Return Self

WSMETHOD INIT WSCLIENT PLCADWEB_ARRAYOFSCMPGRID
	::oWSSCMPGRID          := {} // Array Of  PLCADWEB_SCMPGRID():New()
Return

WSMETHOD CLONE WSCLIENT PLCADWEB_ARRAYOFSCMPGRID
	Local oClone := PLCADWEB_ARRAYOFSCMPGRID():NEW()
	oClone:oWSSCMPGRID := NIL
	If ::oWSSCMPGRID <> NIL 
		oClone:oWSSCMPGRID := {}
		aEval( ::oWSSCMPGRID , { |x| aadd( oClone:oWSSCMPGRID , x:Clone() ) } )
	Endif 
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT PLCADWEB_ARRAYOFSCMPGRID
	Local nRElem1, oNodes1, nTElem1
	::Init()
	If oResponse = NIL ; Return ; Endif 
	oNodes1 :=  WSAdvValue( oResponse,"_SCMPGRID","SCMPGRID",{},NIL,.T.,"O",NIL,NIL) 
	nTElem1 := len(oNodes1)
	For nRElem1 := 1 to nTElem1 
		If !WSIsNilNode( oNodes1[nRElem1] )
			aadd(::oWSSCMPGRID , PLCADWEB_SCMPGRID():New() )
			::oWSSCMPGRID[len(::oWSSCMPGRID)]:SoapRecv(oNodes1[nRElem1])
		Endif
	Next
Return

// WSDL Data Structure ARRAYOFSSTRGRID

WSSTRUCT PLCADWEB_ARRAYOFSSTRGRID
	WSDATA   oWSSSTRGRID               AS PLCADWEB_SSTRGRID OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT PLCADWEB_ARRAYOFSSTRGRID
	::Init()
Return Self

WSMETHOD INIT WSCLIENT PLCADWEB_ARRAYOFSSTRGRID
	::oWSSSTRGRID          := {} // Array Of  PLCADWEB_SSTRGRID():New()
Return

WSMETHOD CLONE WSCLIENT PLCADWEB_ARRAYOFSSTRGRID
	Local oClone := PLCADWEB_ARRAYOFSSTRGRID():NEW()
	oClone:oWSSSTRGRID := NIL
	If ::oWSSSTRGRID <> NIL 
		oClone:oWSSSTRGRID := {}
		aEval( ::oWSSSTRGRID , { |x| aadd( oClone:oWSSSTRGRID , x:Clone() ) } )
	Endif 
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT PLCADWEB_ARRAYOFSSTRGRID
	Local nRElem1, oNodes1, nTElem1
	::Init()
	If oResponse = NIL ; Return ; Endif 
	oNodes1 :=  WSAdvValue( oResponse,"_SSTRGRID","SSTRGRID",{},NIL,.T.,"O",NIL,NIL) 
	nTElem1 := len(oNodes1)
	For nRElem1 := 1 to nTElem1 
		If !WSIsNilNode( oNodes1[nRElem1] )
			aadd(::oWSSSTRGRID , PLCADWEB_SSTRGRID():New() )
			::oWSSSTRGRID[len(::oWSSSTRGRID)]:SoapRecv(oNodes1[nRElem1])
		Endif
	Next
Return

// WSDL Data Structure SCMPGRID

WSSTRUCT PLCADWEB_SCMPGRID
	WSDATA   cDESCRI                   AS string OPTIONAL
	WSDATA   cNOME                     AS string OPTIONAL
	WSDATA   cTIPO                     AS string OPTIONAL
	WSDATA   cVALID                    AS string OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT PLCADWEB_SCMPGRID
	::Init()
Return Self

WSMETHOD INIT WSCLIENT PLCADWEB_SCMPGRID
Return

WSMETHOD CLONE WSCLIENT PLCADWEB_SCMPGRID
	Local oClone := PLCADWEB_SCMPGRID():NEW()
	oClone:cDESCRI              := ::cDESCRI
	oClone:cNOME                := ::cNOME
	oClone:cTIPO                := ::cTIPO
	oClone:cVALID               := ::cVALID
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT PLCADWEB_SCMPGRID
	::Init()
	If oResponse = NIL ; Return ; Endif 
	::cDESCRI            :=  WSAdvValue( oResponse,"_DESCRI","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cNOME              :=  WSAdvValue( oResponse,"_NOME","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cTIPO              :=  WSAdvValue( oResponse,"_TIPO","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cVALID             :=  WSAdvValue( oResponse,"_VALID","string",NIL,NIL,NIL,"S",NIL,NIL) 
Return

// WSDL Data Structure SSTRGRID

WSSTRUCT PLCADWEB_SSTRGRID
	WSDATA   oWSVALORES                AS PLCADWEB_ARRAYOFSTRING OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT PLCADWEB_SSTRGRID
	::Init()
Return Self

WSMETHOD INIT WSCLIENT PLCADWEB_SSTRGRID
Return

WSMETHOD CLONE WSCLIENT PLCADWEB_SSTRGRID
	Local oClone := PLCADWEB_SSTRGRID():NEW()
	oClone:oWSVALORES           := IIF(::oWSVALORES = NIL , NIL , ::oWSVALORES:Clone() )
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT PLCADWEB_SSTRGRID
	Local oNode1
	::Init()
	If oResponse = NIL ; Return ; Endif 
	oNode1 :=  WSAdvValue( oResponse,"_VALORES","ARRAYOFSTRING",NIL,NIL,NIL,"O",NIL,NIL) 
	If oNode1 != NIL
		::oWSVALORES := PLCADWEB_ARRAYOFSTRING():New()
		::oWSVALORES:SoapRecv(oNode1)
	EndIf
Return


