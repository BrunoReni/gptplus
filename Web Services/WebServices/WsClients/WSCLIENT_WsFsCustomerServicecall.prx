#INCLUDE "PROTHEUS.CH"
#INCLUDE "APWEBSRV.CH"

/* ===============================================================================
WSDL Location    http://localhost/ws/FSCUSTOMERSERVICECALL.APW?WSDL
Gerado em        06/27/05 09:34:16
Observações      Código-Fonte gerado por ADVPL WSDL Client 1.050513
                 Alterações neste arquivo podem causar funcionamento incorreto
                 e serão perdidas caso o código-fonte seja gerado novamente.
=============================================================================== */

User Function _RSCLTTQ ; Return  // "dummy" function - Internal Use 

/* -------------------------------------------------------------------------------
WSDL Service WSFSCUSTOMERSERVICECALL
------------------------------------------------------------------------------- */

WSCLIENT WSFSCUSTOMERSERVICECALL

	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD RESET
	WSMETHOD CLONE
	WSMETHOD BRWSERVICECALL
	WSMETHOD DELSERVICECALL
	WSMETHOD GETHEADER
	WSMETHOD GETSERVICECALL
	WSMETHOD PUTSERVICECALL

	WSDATA   _URL                      AS String
	WSDATA   cUSERCODE                 AS string
	WSDATA   cCUSTOMERID               AS string
	WSDATA   dREGISTERDATEFROM         AS date
	WSDATA   dREGISTERDATETO           AS date
	WSDATA   cQUERYADDWHERE            AS string
	WSDATA   cINDEXKEY                 AS string
	WSDATA   nPAGELEN                  AS integer
	WSDATA   nPAGEFIRST                AS integer
	WSDATA   oWSBRWSERVICECALLRESULT   AS FSCUSTOMERSERVICECALL_ARRAYOFSERVICECALLHEADERVIEW
	WSDATA   cSERVICECALLID            AS string
	WSDATA   cDELSERVICECALLRESULT     AS string
	WSDATA   cHEADERTYPE               AS string
	WSDATA   oWSGETHEADERRESULT        AS FSCUSTOMERSERVICECALL_ARRAYOFBRWHEADER
	WSDATA   oWSGETSERVICECALLRESULT   AS FSCUSTOMERSERVICECALL_SERVICECALLVIEW
	WSDATA   oWSSERVICECALL            AS FSCUSTOMERSERVICECALL_SERVICECALLVIEW
	WSDATA   cPUTSERVICECALLRESULT     AS string

	// Estruturas mantidas por compatibilidade - NÃO USAR
	WSDATA   oWSSERVICECALLVIEW        AS FSCUSTOMERSERVICECALL_SERVICECALLVIEW

ENDWSCLIENT

WSMETHOD NEW WSCLIENT WSFSCUSTOMERSERVICECALL
::Init()
If !FindFunction("XMLCHILDEX")
	UserException("O Código-Fonte Client atual requer os executáveis do Protheus Build [7.00.050331A] ou superior. Atualize o Protheus ou gere o Código-Fonte novamente utilizando o Build atual.")
EndIf
Return Self

WSMETHOD INIT WSCLIENT WSFSCUSTOMERSERVICECALL
	::oWSBRWSERVICECALLRESULT := FSCUSTOMERSERVICECALL_ARRAYOFSERVICECALLHEADERVIEW():New()
	::oWSGETHEADERRESULT := FSCUSTOMERSERVICECALL_ARRAYOFBRWHEADER():New()
	::oWSGETSERVICECALLRESULT := FSCUSTOMERSERVICECALL_SERVICECALLVIEW():New()
	::oWSSERVICECALL     := FSCUSTOMERSERVICECALL_SERVICECALLVIEW():New()

	// Estruturas mantidas por compatibilidade - NÃO USAR
	::oWSSERVICECALLVIEW := ::oWSSERVICECALL
Return

WSMETHOD RESET WSCLIENT WSFSCUSTOMERSERVICECALL
	::cUSERCODE          := NIL 
	::cCUSTOMERID        := NIL 
	::dREGISTERDATEFROM  := NIL 
	::dREGISTERDATETO    := NIL 
	::cQUERYADDWHERE     := NIL 
	::cINDEXKEY          := NIL 
	::nPAGELEN           := NIL 
	::nPAGEFIRST         := NIL 
	::oWSBRWSERVICECALLRESULT := NIL 
	::cSERVICECALLID     := NIL 
	::cDELSERVICECALLRESULT := NIL 
	::cHEADERTYPE        := NIL 
	::oWSGETHEADERRESULT := NIL 
	::oWSGETSERVICECALLRESULT := NIL 
	::oWSSERVICECALL     := NIL 
	::cPUTSERVICECALLRESULT := NIL 

	// Estruturas mantidas por compatibilidade - NÃO USAR
	::oWSSERVICECALLVIEW := NIL
	::Init()
Return

WSMETHOD CLONE WSCLIENT WSFSCUSTOMERSERVICECALL
Local oClone := WSFSCUSTOMERSERVICECALL():New()
	oClone:_URL          := ::_URL 
	oClone:cUSERCODE     := ::cUSERCODE
	oClone:cCUSTOMERID   := ::cCUSTOMERID
	oClone:dREGISTERDATEFROM := ::dREGISTERDATEFROM
	oClone:dREGISTERDATETO := ::dREGISTERDATETO
	oClone:cQUERYADDWHERE := ::cQUERYADDWHERE
	oClone:cINDEXKEY     := ::cINDEXKEY
	oClone:nPAGELEN      := ::nPAGELEN
	oClone:nPAGEFIRST    := ::nPAGEFIRST
	oClone:oWSBRWSERVICECALLRESULT :=  IIF(::oWSBRWSERVICECALLRESULT = NIL , NIL ,::oWSBRWSERVICECALLRESULT:Clone() )
	oClone:cSERVICECALLID := ::cSERVICECALLID
	oClone:cDELSERVICECALLRESULT := ::cDELSERVICECALLRESULT
	oClone:cHEADERTYPE   := ::cHEADERTYPE
	oClone:oWSGETHEADERRESULT :=  IIF(::oWSGETHEADERRESULT = NIL , NIL ,::oWSGETHEADERRESULT:Clone() )
	oClone:oWSGETSERVICECALLRESULT :=  IIF(::oWSGETSERVICECALLRESULT = NIL , NIL ,::oWSGETSERVICECALLRESULT:Clone() )
	oClone:oWSSERVICECALL :=  IIF(::oWSSERVICECALL = NIL , NIL ,::oWSSERVICECALL:Clone() )
	oClone:cPUTSERVICECALLRESULT := ::cPUTSERVICECALLRESULT

	// Estruturas mantidas por compatibilidade - NÃO USAR
	oClone:oWSSERVICECALLVIEW := oClone:oWSSERVICECALL
Return oClone

/* -------------------------------------------------------------------------------
WSDL Method BRWSERVICECALL of Service WSFSCUSTOMERSERVICECALL
------------------------------------------------------------------------------- */

WSMETHOD BRWSERVICECALL WSSEND cUSERCODE,cCUSTOMERID,dREGISTERDATEFROM,dREGISTERDATETO,cQUERYADDWHERE,cINDEXKEY,nPAGELEN,nPAGEFIRST WSRECEIVE oWSBRWSERVICECALLRESULT WSCLIENT WSFSCUSTOMERSERVICECALL
Local cSoap := "" , oXmlRet

BEGIN WSMETHOD

cSoap += '<BRWSERVICECALL xmlns="http://localhost/">'
cSoap += WSSoapValue("USERCODE", ::cUSERCODE, cUSERCODE , "string", .T. , .F., 0 ) 
cSoap += WSSoapValue("CUSTOMERID", ::cCUSTOMERID, cCUSTOMERID , "string", .T. , .F., 0 ) 
cSoap += WSSoapValue("REGISTERDATEFROM", ::dREGISTERDATEFROM, dREGISTERDATEFROM , "date", .T. , .F., 0 ) 
cSoap += WSSoapValue("REGISTERDATETO", ::dREGISTERDATETO, dREGISTERDATETO , "date", .T. , .F., 0 ) 
cSoap += WSSoapValue("QUERYADDWHERE", ::cQUERYADDWHERE, cQUERYADDWHERE , "string", .T. , .F., 0 ) 
cSoap += WSSoapValue("INDEXKEY", ::cINDEXKEY, cINDEXKEY , "string", .T. , .F., 0 ) 
cSoap += WSSoapValue("PAGELEN", ::nPAGELEN, nPAGELEN , "integer", .T. , .F., 0 ) 
cSoap += WSSoapValue("PAGEFIRST", ::nPAGEFIRST, nPAGEFIRST , "integer", .T. , .F., 0 ) 
cSoap += "</BRWSERVICECALL>"

oXmlRet := SvcSoapCall(	Self,cSoap,; 
	"http://localhost/BRWSERVICECALL",; 
	"DOCUMENT","http://localhost/",,"1.031217",; 
	"http://localhost/ws/FSCUSTOMERSERVICECALL.apw")

::Init()
::oWSBRWSERVICECALLRESULT:SoapRecv( WSAdvValue( oXmlRet,"_BRWSERVICECALLRESPONSE:_BRWSERVICECALLRESULT","ARRAYOFSERVICECALLHEADERVIEW",NIL,NIL,NIL,NIL,NIL) )

END WSMETHOD

oXmlRet := NIL
Return .T.

/* -------------------------------------------------------------------------------
WSDL Method DELSERVICECALL of Service WSFSCUSTOMERSERVICECALL
------------------------------------------------------------------------------- */

WSMETHOD DELSERVICECALL WSSEND cUSERCODE,cCUSTOMERID,cSERVICECALLID WSRECEIVE cDELSERVICECALLRESULT WSCLIENT WSFSCUSTOMERSERVICECALL
Local cSoap := "" , oXmlRet

BEGIN WSMETHOD

cSoap += '<DELSERVICECALL xmlns="http://localhost/">'
cSoap += WSSoapValue("USERCODE", ::cUSERCODE, cUSERCODE , "string", .T. , .F., 0 ) 
cSoap += WSSoapValue("CUSTOMERID", ::cCUSTOMERID, cCUSTOMERID , "string", .T. , .F., 0 ) 
cSoap += WSSoapValue("SERVICECALLID", ::cSERVICECALLID, cSERVICECALLID , "string", .T. , .F., 0 ) 
cSoap += "</DELSERVICECALL>"

oXmlRet := SvcSoapCall(	Self,cSoap,; 
	"http://localhost/DELSERVICECALL",; 
	"DOCUMENT","http://localhost/",,"1.031217",; 
	"http://localhost/ws/FSCUSTOMERSERVICECALL.apw")

::Init()
::cDELSERVICECALLRESULT :=  WSAdvValue( oXmlRet,"_DELSERVICECALLRESPONSE:_DELSERVICECALLRESULT:TEXT","string",NIL,NIL,NIL,NIL,NIL) 

END WSMETHOD

oXmlRet := NIL
Return .T.

/* -------------------------------------------------------------------------------
WSDL Method GETHEADER of Service WSFSCUSTOMERSERVICECALL
------------------------------------------------------------------------------- */

WSMETHOD GETHEADER WSSEND cHEADERTYPE WSRECEIVE oWSGETHEADERRESULT WSCLIENT WSFSCUSTOMERSERVICECALL
Local cSoap := "" , oXmlRet

BEGIN WSMETHOD

cSoap += '<GETHEADER xmlns="http://localhost/">'
cSoap += WSSoapValue("HEADERTYPE", ::cHEADERTYPE, cHEADERTYPE , "string", .T. , .F., 0 ) 
cSoap += "</GETHEADER>"

oXmlRet := SvcSoapCall(	Self,cSoap,; 
	"http://localhost/GETHEADER",; 
	"DOCUMENT","http://localhost/",,"1.031217",; 
	"http://localhost/ws/FSCUSTOMERSERVICECALL.apw")

::Init()
::oWSGETHEADERRESULT:SoapRecv( WSAdvValue( oXmlRet,"_GETHEADERRESPONSE:_GETHEADERRESULT","ARRAYOFBRWHEADER",NIL,NIL,NIL,NIL,NIL) )

END WSMETHOD

oXmlRet := NIL
Return .T.

/* -------------------------------------------------------------------------------
WSDL Method GETSERVICECALL of Service WSFSCUSTOMERSERVICECALL
------------------------------------------------------------------------------- */

WSMETHOD GETSERVICECALL WSSEND cUSERCODE,cCUSTOMERID,cSERVICECALLID WSRECEIVE oWSGETSERVICECALLRESULT WSCLIENT WSFSCUSTOMERSERVICECALL
Local cSoap := "" , oXmlRet

BEGIN WSMETHOD

cSoap += '<GETSERVICECALL xmlns="http://localhost/">'
cSoap += WSSoapValue("USERCODE", ::cUSERCODE, cUSERCODE , "string", .T. , .F., 0 ) 
cSoap += WSSoapValue("CUSTOMERID", ::cCUSTOMERID, cCUSTOMERID , "string", .T. , .F., 0 ) 
cSoap += WSSoapValue("SERVICECALLID", ::cSERVICECALLID, cSERVICECALLID , "string", .T. , .F., 0 ) 
cSoap += "</GETSERVICECALL>"

oXmlRet := SvcSoapCall(	Self,cSoap,; 
	"http://localhost/GETSERVICECALL",; 
	"DOCUMENT","http://localhost/",,"1.031217",; 
	"http://localhost/ws/FSCUSTOMERSERVICECALL.apw")

::Init()
::oWSGETSERVICECALLRESULT:SoapRecv( WSAdvValue( oXmlRet,"_GETSERVICECALLRESPONSE:_GETSERVICECALLRESULT","SERVICECALLVIEW",NIL,NIL,NIL,NIL,NIL) )

END WSMETHOD

oXmlRet := NIL
Return .T.

/* -------------------------------------------------------------------------------
WSDL Method PUTSERVICECALL of Service WSFSCUSTOMERSERVICECALL
------------------------------------------------------------------------------- */

WSMETHOD PUTSERVICECALL WSSEND cUSERCODE,cCUSTOMERID,oWSSERVICECALL WSRECEIVE cPUTSERVICECALLRESULT WSCLIENT WSFSCUSTOMERSERVICECALL
Local cSoap := "" , oXmlRet

BEGIN WSMETHOD

cSoap += '<PUTSERVICECALL xmlns="http://localhost/">'
cSoap += WSSoapValue("USERCODE", ::cUSERCODE, cUSERCODE , "string", .T. , .F., 0 ) 
cSoap += WSSoapValue("CUSTOMERID", ::cCUSTOMERID, cCUSTOMERID , "string", .T. , .F., 0 ) 
cSoap += WSSoapValue("SERVICECALL", ::oWSSERVICECALL, oWSSERVICECALL , "SERVICECALLVIEW", .T. , .F., 0 ) 
cSoap += "</PUTSERVICECALL>"

oXmlRet := SvcSoapCall(	Self,cSoap,; 
	"http://localhost/PUTSERVICECALL",; 
	"DOCUMENT","http://localhost/",,"1.031217",; 
	"http://localhost/ws/FSCUSTOMERSERVICECALL.apw")

::Init()
::cPUTSERVICECALLRESULT :=  WSAdvValue( oXmlRet,"_PUTSERVICECALLRESPONSE:_PUTSERVICECALLRESULT:TEXT","string",NIL,NIL,NIL,NIL,NIL) 

END WSMETHOD

oXmlRet := NIL
Return .T.


/* -------------------------------------------------------------------------------
WSDL Data Structure ARRAYOFSERVICECALLHEADERVIEW
------------------------------------------------------------------------------- */

WSSTRUCT FSCUSTOMERSERVICECALL_ARRAYOFSERVICECALLHEADERVIEW
	WSDATA   oWSSERVICECALLHEADERVIEW  AS FSCUSTOMERSERVICECALL_SERVICECALLHEADERVIEW OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT FSCUSTOMERSERVICECALL_ARRAYOFSERVICECALLHEADERVIEW
	::Init()
Return Self

WSMETHOD INIT WSCLIENT FSCUSTOMERSERVICECALL_ARRAYOFSERVICECALLHEADERVIEW
	::oWSSERVICECALLHEADERVIEW := {} // Array Of  FSCUSTOMERSERVICECALL_SERVICECALLHEADERVIEW():New()
Return

WSMETHOD CLONE WSCLIENT FSCUSTOMERSERVICECALL_ARRAYOFSERVICECALLHEADERVIEW
	Local oClone := FSCUSTOMERSERVICECALL_ARRAYOFSERVICECALLHEADERVIEW():NEW()
	oClone:oWSSERVICECALLHEADERVIEW := NIL
	If ::oWSSERVICECALLHEADERVIEW <> NIL 
		oClone:oWSSERVICECALLHEADERVIEW := {}
		aEval( ::oWSSERVICECALLHEADERVIEW , { |x| aadd( oClone:oWSSERVICECALLHEADERVIEW , x:Clone() ) } )
	Endif 
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT FSCUSTOMERSERVICECALL_ARRAYOFSERVICECALLHEADERVIEW
	Local nRElem1, oNodes1, nTElem1
	::Init()
	If oResponse = NIL ; Return ; Endif 
	oNodes1 :=  WSAdvValue( oResponse,"_SERVICECALLHEADERVIEW","SERVICECALLHEADERVIEW",{},NIL,.T.,"O",NIL) 
	nTElem1 := len(oNodes1)
	For nRElem1 := 1 to nTElem1 
		If !WSIsNilNode( oNodes1[nRElem1] )
			aadd(::oWSSERVICECALLHEADERVIEW , FSCUSTOMERSERVICECALL_SERVICECALLHEADERVIEW():New() )
			::oWSSERVICECALLHEADERVIEW[len(::oWSSERVICECALLHEADERVIEW)]:SoapRecv(oNodes1[nRElem1])
		Endif
	Next
Return

/* -------------------------------------------------------------------------------
WSDL Data Structure ARRAYOFBRWHEADER
------------------------------------------------------------------------------- */

WSSTRUCT FSCUSTOMERSERVICECALL_ARRAYOFBRWHEADER
	WSDATA   oWSBRWHEADER              AS FSCUSTOMERSERVICECALL_BRWHEADER OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT FSCUSTOMERSERVICECALL_ARRAYOFBRWHEADER
	::Init()
Return Self

WSMETHOD INIT WSCLIENT FSCUSTOMERSERVICECALL_ARRAYOFBRWHEADER
	::oWSBRWHEADER         := {} // Array Of  FSCUSTOMERSERVICECALL_BRWHEADER():New()
Return

WSMETHOD CLONE WSCLIENT FSCUSTOMERSERVICECALL_ARRAYOFBRWHEADER
	Local oClone := FSCUSTOMERSERVICECALL_ARRAYOFBRWHEADER():NEW()
	oClone:oWSBRWHEADER := NIL
	If ::oWSBRWHEADER <> NIL 
		oClone:oWSBRWHEADER := {}
		aEval( ::oWSBRWHEADER , { |x| aadd( oClone:oWSBRWHEADER , x:Clone() ) } )
	Endif 
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT FSCUSTOMERSERVICECALL_ARRAYOFBRWHEADER
	Local nRElem1, oNodes1, nTElem1
	::Init()
	If oResponse = NIL ; Return ; Endif 
	oNodes1 :=  WSAdvValue( oResponse,"_BRWHEADER","BRWHEADER",{},NIL,.T.,"O",NIL) 
	nTElem1 := len(oNodes1)
	For nRElem1 := 1 to nTElem1 
		If !WSIsNilNode( oNodes1[nRElem1] )
			aadd(::oWSBRWHEADER , FSCUSTOMERSERVICECALL_BRWHEADER():New() )
			::oWSBRWHEADER[len(::oWSBRWHEADER)]:SoapRecv(oNodes1[nRElem1])
		Endif
	Next
Return

/* -------------------------------------------------------------------------------
WSDL Data Structure SERVICECALLVIEW
------------------------------------------------------------------------------- */

WSSTRUCT FSCUSTOMERSERVICECALL_SERVICECALLVIEW
	WSDATA   oWSSERVICECALLHEADER      AS FSCUSTOMERSERVICECALL_SERVICECALLHEADERVIEW
	WSDATA   oWSSERVICECALLITEM        AS FSCUSTOMERSERVICECALL_ARRAYOFSERVICECALLITEMVIEW
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPSEND
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT FSCUSTOMERSERVICECALL_SERVICECALLVIEW
	::Init()
Return Self

WSMETHOD INIT WSCLIENT FSCUSTOMERSERVICECALL_SERVICECALLVIEW
Return

WSMETHOD CLONE WSCLIENT FSCUSTOMERSERVICECALL_SERVICECALLVIEW
	Local oClone := FSCUSTOMERSERVICECALL_SERVICECALLVIEW():NEW()
	oClone:oWSSERVICECALLHEADER := IIF(::oWSSERVICECALLHEADER = NIL , NIL , ::oWSSERVICECALLHEADER:Clone() )
	oClone:oWSSERVICECALLITEM   := IIF(::oWSSERVICECALLITEM = NIL , NIL , ::oWSSERVICECALLITEM:Clone() )
Return oClone

WSMETHOD SOAPSEND WSCLIENT FSCUSTOMERSERVICECALL_SERVICECALLVIEW
	Local cSoap := ""
	cSoap += WSSoapValue("SERVICECALLHEADER", ::oWSSERVICECALLHEADER, ::oWSSERVICECALLHEADER , "SERVICECALLHEADERVIEW", .T. , .F., 0 ) 
	cSoap += WSSoapValue("SERVICECALLITEM", ::oWSSERVICECALLITEM, ::oWSSERVICECALLITEM , "ARRAYOFSERVICECALLITEMVIEW", .T. , .F., 0 ) 
Return cSoap

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT FSCUSTOMERSERVICECALL_SERVICECALLVIEW
	Local oNode1
	Local oNode2
	::Init()
	If oResponse = NIL ; Return ; Endif 
	oNode1 :=  WSAdvValue( oResponse,"_SERVICECALLHEADER","SERVICECALLHEADERVIEW",NIL,"Property oWSSERVICECALLHEADER as s0:SERVICECALLHEADERVIEW on SOAP Response not found.",NIL,"O",NIL) 
	If oNode1 != NIL
		::oWSSERVICECALLHEADER := FSCUSTOMERSERVICECALL_SERVICECALLHEADERVIEW():New()
		::oWSSERVICECALLHEADER:SoapRecv(oNode1)
	EndIf
	oNode2 :=  WSAdvValue( oResponse,"_SERVICECALLITEM","ARRAYOFSERVICECALLITEMVIEW",NIL,"Property oWSSERVICECALLITEM as s0:ARRAYOFSERVICECALLITEMVIEW on SOAP Response not found.",NIL,"O",NIL) 
	If oNode2 != NIL
		::oWSSERVICECALLITEM := FSCUSTOMERSERVICECALL_ARRAYOFSERVICECALLITEMVIEW():New()
		::oWSSERVICECALLITEM:SoapRecv(oNode2)
	EndIf
Return

/* -------------------------------------------------------------------------------
WSDL Data Structure SERVICECALLHEADERVIEW
------------------------------------------------------------------------------- */

WSSTRUCT FSCUSTOMERSERVICECALL_SERVICECALLHEADERVIEW
	WSDATA   cATTENDANT                AS string OPTIONAL
	WSDATA   cCALLTIME                 AS string OPTIONAL
	WSDATA   cCONTACTNAME              AS string OPTIONAL
	WSDATA   cCUSTOMERCODE             AS string
	WSDATA   cCUSTOMERUNIT             AS string
	WSDATA   dISSUEDATE                AS date OPTIONAL
	WSDATA   oWSPHONE                  AS FSCUSTOMERSERVICECALL_PHONEVIEW OPTIONAL
	WSDATA   cSERVICECALLID            AS string OPTIONAL
	WSDATA   cSTATUS                   AS string OPTIONAL
	WSDATA   oWSUSERFIELDS             AS FSCUSTOMERSERVICECALL_ARRAYOFUSERFIELD OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPSEND
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT FSCUSTOMERSERVICECALL_SERVICECALLHEADERVIEW
	::Init()
Return Self

WSMETHOD INIT WSCLIENT FSCUSTOMERSERVICECALL_SERVICECALLHEADERVIEW
Return

WSMETHOD CLONE WSCLIENT FSCUSTOMERSERVICECALL_SERVICECALLHEADERVIEW
	Local oClone := FSCUSTOMERSERVICECALL_SERVICECALLHEADERVIEW():NEW()
	oClone:cATTENDANT           := ::cATTENDANT
	oClone:cCALLTIME            := ::cCALLTIME
	oClone:cCONTACTNAME         := ::cCONTACTNAME
	oClone:cCUSTOMERCODE        := ::cCUSTOMERCODE
	oClone:cCUSTOMERUNIT        := ::cCUSTOMERUNIT
	oClone:dISSUEDATE           := ::dISSUEDATE
	oClone:oWSPHONE             := IIF(::oWSPHONE = NIL , NIL , ::oWSPHONE:Clone() )
	oClone:cSERVICECALLID       := ::cSERVICECALLID
	oClone:cSTATUS              := ::cSTATUS
	oClone:oWSUSERFIELDS        := IIF(::oWSUSERFIELDS = NIL , NIL , ::oWSUSERFIELDS:Clone() )
Return oClone

WSMETHOD SOAPSEND WSCLIENT FSCUSTOMERSERVICECALL_SERVICECALLHEADERVIEW
	Local cSoap := ""
	cSoap += WSSoapValue("ATTENDANT", ::cATTENDANT, ::cATTENDANT , "string", .F. , .F., 0 ) 
	cSoap += WSSoapValue("CALLTIME", ::cCALLTIME, ::cCALLTIME , "string", .F. , .F., 0 ) 
	cSoap += WSSoapValue("CONTACTNAME", ::cCONTACTNAME, ::cCONTACTNAME , "string", .F. , .F., 0 ) 
	cSoap += WSSoapValue("CUSTOMERCODE", ::cCUSTOMERCODE, ::cCUSTOMERCODE , "string", .T. , .F., 0 ) 
	cSoap += WSSoapValue("CUSTOMERUNIT", ::cCUSTOMERUNIT, ::cCUSTOMERUNIT , "string", .T. , .F., 0 ) 
	cSoap += WSSoapValue("ISSUEDATE", ::dISSUEDATE, ::dISSUEDATE , "date", .F. , .F., 0 ) 
	cSoap += WSSoapValue("PHONE", ::oWSPHONE, ::oWSPHONE , "PHONEVIEW", .F. , .F., 0 ) 
	cSoap += WSSoapValue("SERVICECALLID", ::cSERVICECALLID, ::cSERVICECALLID , "string", .F. , .F., 0 ) 
	cSoap += WSSoapValue("STATUS", ::cSTATUS, ::cSTATUS , "string", .F. , .F., 0 ) 
	cSoap += WSSoapValue("USERFIELDS", ::oWSUSERFIELDS, ::oWSUSERFIELDS , "ARRAYOFUSERFIELD", .F. , .F., 0 ) 
Return cSoap

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT FSCUSTOMERSERVICECALL_SERVICECALLHEADERVIEW
	Local oNode7
	Local oNode10
	::Init()
	If oResponse = NIL ; Return ; Endif 
	::cATTENDANT         :=  WSAdvValue( oResponse,"_ATTENDANT","string",NIL,NIL,NIL,"S",NIL) 
	::cCALLTIME          :=  WSAdvValue( oResponse,"_CALLTIME","string",NIL,NIL,NIL,"S",NIL) 
	::cCONTACTNAME       :=  WSAdvValue( oResponse,"_CONTACTNAME","string",NIL,NIL,NIL,"S",NIL) 
	::cCUSTOMERCODE      :=  WSAdvValue( oResponse,"_CUSTOMERCODE","string",NIL,"Property cCUSTOMERCODE as s:string on SOAP Response not found.",NIL,"S",NIL) 
	::cCUSTOMERUNIT      :=  WSAdvValue( oResponse,"_CUSTOMERUNIT","string",NIL,"Property cCUSTOMERUNIT as s:string on SOAP Response not found.",NIL,"S",NIL) 
	::dISSUEDATE         :=  WSAdvValue( oResponse,"_ISSUEDATE","date",NIL,NIL,NIL,"D",NIL) 
	oNode7 :=  WSAdvValue( oResponse,"_PHONE","PHONEVIEW",NIL,NIL,NIL,"O",NIL) 
	If oNode7 != NIL
		::oWSPHONE := FSCUSTOMERSERVICECALL_PHONEVIEW():New()
		::oWSPHONE:SoapRecv(oNode7)
	EndIf
	::cSERVICECALLID     :=  WSAdvValue( oResponse,"_SERVICECALLID","string",NIL,NIL,NIL,"S",NIL) 
	::cSTATUS            :=  WSAdvValue( oResponse,"_STATUS","string",NIL,NIL,NIL,"S",NIL) 
	oNode10 :=  WSAdvValue( oResponse,"_USERFIELDS","ARRAYOFUSERFIELD",NIL,NIL,NIL,"O",NIL) 
	If oNode10 != NIL
		::oWSUSERFIELDS := FSCUSTOMERSERVICECALL_ARRAYOFUSERFIELD():New()
		::oWSUSERFIELDS:SoapRecv(oNode10)
	EndIf
Return

/* -------------------------------------------------------------------------------
WSDL Data Structure BRWHEADER
------------------------------------------------------------------------------- */

WSSTRUCT FSCUSTOMERSERVICECALL_BRWHEADER
	WSDATA   cHEADERCOMBOBOX           AS string OPTIONAL
	WSDATA   nHEADERDEC                AS integer
	WSDATA   cHEADERF3                 AS string OPTIONAL
	WSDATA   cHEADERFIELD              AS string
	WSDATA   lHEADEROBLIG              AS boolean OPTIONAL
	WSDATA   cHEADERPICTURE            AS string
	WSDATA   nHEADERSIZE               AS integer
	WSDATA   cHEADERTITLE              AS string
	WSDATA   cHEADERTYPE               AS string
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT FSCUSTOMERSERVICECALL_BRWHEADER
	::Init()
Return Self

WSMETHOD INIT WSCLIENT FSCUSTOMERSERVICECALL_BRWHEADER
Return

WSMETHOD CLONE WSCLIENT FSCUSTOMERSERVICECALL_BRWHEADER
	Local oClone := FSCUSTOMERSERVICECALL_BRWHEADER():NEW()
	oClone:cHEADERCOMBOBOX      := ::cHEADERCOMBOBOX
	oClone:nHEADERDEC           := ::nHEADERDEC
	oClone:cHEADERF3            := ::cHEADERF3
	oClone:cHEADERFIELD         := ::cHEADERFIELD
	oClone:lHEADEROBLIG         := ::lHEADEROBLIG
	oClone:cHEADERPICTURE       := ::cHEADERPICTURE
	oClone:nHEADERSIZE          := ::nHEADERSIZE
	oClone:cHEADERTITLE         := ::cHEADERTITLE
	oClone:cHEADERTYPE          := ::cHEADERTYPE
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT FSCUSTOMERSERVICECALL_BRWHEADER
	::Init()
	If oResponse = NIL ; Return ; Endif 
	::cHEADERCOMBOBOX    :=  WSAdvValue( oResponse,"_HEADERCOMBOBOX","string",NIL,NIL,NIL,"S",NIL) 
	::nHEADERDEC         :=  WSAdvValue( oResponse,"_HEADERDEC","integer",NIL,"Property nHEADERDEC as s:integer on SOAP Response not found.",NIL,"N",NIL) 
	::cHEADERF3          :=  WSAdvValue( oResponse,"_HEADERF3","string",NIL,NIL,NIL,"S",NIL) 
	::cHEADERFIELD       :=  WSAdvValue( oResponse,"_HEADERFIELD","string",NIL,"Property cHEADERFIELD as s:string on SOAP Response not found.",NIL,"S",NIL) 
	::lHEADEROBLIG       :=  WSAdvValue( oResponse,"_HEADEROBLIG","boolean",NIL,NIL,NIL,"L",NIL) 
	::cHEADERPICTURE     :=  WSAdvValue( oResponse,"_HEADERPICTURE","string",NIL,"Property cHEADERPICTURE as s:string on SOAP Response not found.",NIL,"S",NIL) 
	::nHEADERSIZE        :=  WSAdvValue( oResponse,"_HEADERSIZE","integer",NIL,"Property nHEADERSIZE as s:integer on SOAP Response not found.",NIL,"N",NIL) 
	::cHEADERTITLE       :=  WSAdvValue( oResponse,"_HEADERTITLE","string",NIL,"Property cHEADERTITLE as s:string on SOAP Response not found.",NIL,"S",NIL) 
	::cHEADERTYPE        :=  WSAdvValue( oResponse,"_HEADERTYPE","string",NIL,"Property cHEADERTYPE as s:string on SOAP Response not found.",NIL,"S",NIL) 
Return

/* -------------------------------------------------------------------------------
WSDL Data Structure ARRAYOFSERVICECALLITEMVIEW
------------------------------------------------------------------------------- */

WSSTRUCT FSCUSTOMERSERVICECALL_ARRAYOFSERVICECALLITEMVIEW
	WSDATA   oWSSERVICECALLITEMVIEW    AS FSCUSTOMERSERVICECALL_SERVICECALLITEMVIEW OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPSEND
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT FSCUSTOMERSERVICECALL_ARRAYOFSERVICECALLITEMVIEW
	::Init()
Return Self

WSMETHOD INIT WSCLIENT FSCUSTOMERSERVICECALL_ARRAYOFSERVICECALLITEMVIEW
	::oWSSERVICECALLITEMVIEW := {} // Array Of  FSCUSTOMERSERVICECALL_SERVICECALLITEMVIEW():New()
Return

WSMETHOD CLONE WSCLIENT FSCUSTOMERSERVICECALL_ARRAYOFSERVICECALLITEMVIEW
	Local oClone := FSCUSTOMERSERVICECALL_ARRAYOFSERVICECALLITEMVIEW():NEW()
	oClone:oWSSERVICECALLITEMVIEW := NIL
	If ::oWSSERVICECALLITEMVIEW <> NIL 
		oClone:oWSSERVICECALLITEMVIEW := {}
		aEval( ::oWSSERVICECALLITEMVIEW , { |x| aadd( oClone:oWSSERVICECALLITEMVIEW , x:Clone() ) } )
	Endif 
Return oClone

WSMETHOD SOAPSEND WSCLIENT FSCUSTOMERSERVICECALL_ARRAYOFSERVICECALLITEMVIEW
	Local cSoap := ""
	aEval( ::oWSSERVICECALLITEMVIEW , {|x| cSoap := cSoap  +  WSSoapValue("SERVICECALLITEMVIEW", x , x , "SERVICECALLITEMVIEW", .F. , .F., 0 )  } ) 
Return cSoap

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT FSCUSTOMERSERVICECALL_ARRAYOFSERVICECALLITEMVIEW
	Local nRElem1, oNodes1, nTElem1
	::Init()
	If oResponse = NIL ; Return ; Endif 
	oNodes1 :=  WSAdvValue( oResponse,"_SERVICECALLITEMVIEW","SERVICECALLITEMVIEW",{},NIL,.T.,"O",NIL) 
	nTElem1 := len(oNodes1)
	For nRElem1 := 1 to nTElem1 
		If !WSIsNilNode( oNodes1[nRElem1] )
			aadd(::oWSSERVICECALLITEMVIEW , FSCUSTOMERSERVICECALL_SERVICECALLITEMVIEW():New() )
			::oWSSERVICECALLITEMVIEW[len(::oWSSERVICECALLITEMVIEW)]:SoapRecv(oNodes1[nRElem1])
		Endif
	Next
Return

/* -------------------------------------------------------------------------------
WSDL Data Structure PHONEVIEW
------------------------------------------------------------------------------- */

WSSTRUCT FSCUSTOMERSERVICECALL_PHONEVIEW
	WSDATA   cCOUNTRYAREACODE          AS string OPTIONAL
	WSDATA   cLOCALAREACODE            AS string OPTIONAL
	WSDATA   cPHONENUMBER              AS string OPTIONAL
	WSDATA   cTYPEOFPHONE              AS string
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPSEND
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT FSCUSTOMERSERVICECALL_PHONEVIEW
	::Init()
Return Self

WSMETHOD INIT WSCLIENT FSCUSTOMERSERVICECALL_PHONEVIEW
Return

WSMETHOD CLONE WSCLIENT FSCUSTOMERSERVICECALL_PHONEVIEW
	Local oClone := FSCUSTOMERSERVICECALL_PHONEVIEW():NEW()
	oClone:cCOUNTRYAREACODE     := ::cCOUNTRYAREACODE
	oClone:cLOCALAREACODE       := ::cLOCALAREACODE
	oClone:cPHONENUMBER         := ::cPHONENUMBER
	oClone:cTYPEOFPHONE         := ::cTYPEOFPHONE
Return oClone

WSMETHOD SOAPSEND WSCLIENT FSCUSTOMERSERVICECALL_PHONEVIEW
	Local cSoap := ""
	cSoap += WSSoapValue("COUNTRYAREACODE", ::cCOUNTRYAREACODE, ::cCOUNTRYAREACODE , "string", .F. , .F., 0 ) 
	cSoap += WSSoapValue("LOCALAREACODE", ::cLOCALAREACODE, ::cLOCALAREACODE , "string", .F. , .F., 0 ) 
	cSoap += WSSoapValue("PHONENUMBER", ::cPHONENUMBER, ::cPHONENUMBER , "string", .F. , .F., 0 ) 
	cSoap += WSSoapValue("TYPEOFPHONE", ::cTYPEOFPHONE, ::cTYPEOFPHONE , "string", .T. , .F., 0 ) 
Return cSoap

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT FSCUSTOMERSERVICECALL_PHONEVIEW
	::Init()
	If oResponse = NIL ; Return ; Endif 
	::cCOUNTRYAREACODE   :=  WSAdvValue( oResponse,"_COUNTRYAREACODE","string",NIL,NIL,NIL,"S",NIL) 
	::cLOCALAREACODE     :=  WSAdvValue( oResponse,"_LOCALAREACODE","string",NIL,NIL,NIL,"S",NIL) 
	::cPHONENUMBER       :=  WSAdvValue( oResponse,"_PHONENUMBER","string",NIL,NIL,NIL,"S",NIL) 
	::cTYPEOFPHONE       :=  WSAdvValue( oResponse,"_TYPEOFPHONE","string",NIL,"Property cTYPEOFPHONE as s:string on SOAP Response not found.",NIL,"S",NIL) 
Return

/* -------------------------------------------------------------------------------
WSDL Data Structure ARRAYOFUSERFIELD
------------------------------------------------------------------------------- */

WSSTRUCT FSCUSTOMERSERVICECALL_ARRAYOFUSERFIELD
	WSDATA   oWSUSERFIELD              AS FSCUSTOMERSERVICECALL_USERFIELD OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPSEND
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT FSCUSTOMERSERVICECALL_ARRAYOFUSERFIELD
	::Init()
Return Self

WSMETHOD INIT WSCLIENT FSCUSTOMERSERVICECALL_ARRAYOFUSERFIELD
	::oWSUSERFIELD         := {} // Array Of  FSCUSTOMERSERVICECALL_USERFIELD():New()
Return

WSMETHOD CLONE WSCLIENT FSCUSTOMERSERVICECALL_ARRAYOFUSERFIELD
	Local oClone := FSCUSTOMERSERVICECALL_ARRAYOFUSERFIELD():NEW()
	oClone:oWSUSERFIELD := NIL
	If ::oWSUSERFIELD <> NIL 
		oClone:oWSUSERFIELD := {}
		aEval( ::oWSUSERFIELD , { |x| aadd( oClone:oWSUSERFIELD , x:Clone() ) } )
	Endif 
Return oClone

WSMETHOD SOAPSEND WSCLIENT FSCUSTOMERSERVICECALL_ARRAYOFUSERFIELD
	Local cSoap := ""
	aEval( ::oWSUSERFIELD , {|x| cSoap := cSoap  +  WSSoapValue("USERFIELD", x , x , "USERFIELD", .F. , .F., 0 )  } ) 
Return cSoap

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT FSCUSTOMERSERVICECALL_ARRAYOFUSERFIELD
	Local nRElem1, oNodes1, nTElem1
	::Init()
	If oResponse = NIL ; Return ; Endif 
	oNodes1 :=  WSAdvValue( oResponse,"_USERFIELD","USERFIELD",{},NIL,.T.,"O",NIL) 
	nTElem1 := len(oNodes1)
	For nRElem1 := 1 to nTElem1 
		If !WSIsNilNode( oNodes1[nRElem1] )
			aadd(::oWSUSERFIELD , FSCUSTOMERSERVICECALL_USERFIELD():New() )
			::oWSUSERFIELD[len(::oWSUSERFIELD)]:SoapRecv(oNodes1[nRElem1])
		Endif
	Next
Return

/* -------------------------------------------------------------------------------
WSDL Data Structure SERVICECALLITEMVIEW
------------------------------------------------------------------------------- */

WSSTRUCT FSCUSTOMERSERVICECALL_SERVICECALLITEMVIEW
	WSDATA   cCLASSIFICATION           AS string
	WSDATA   cFAILURE                  AS string
	WSDATA   cNOTES                    AS string
	WSDATA   cPRODUCTID                AS string
	WSDATA   cSERIALNUMBER             AS string
	WSDATA   cSERVICEBUDGETID          AS string
	WSDATA   cSERVICEITEM              AS string
	WSDATA   cSERVICEORDERID           AS string
	WSDATA   cSERVICESTATUS            AS string
	WSDATA   oWSUSERFIELDS             AS FSCUSTOMERSERVICECALL_ARRAYOFUSERFIELD OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPSEND
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT FSCUSTOMERSERVICECALL_SERVICECALLITEMVIEW
	::Init()
Return Self

WSMETHOD INIT WSCLIENT FSCUSTOMERSERVICECALL_SERVICECALLITEMVIEW
Return

WSMETHOD CLONE WSCLIENT FSCUSTOMERSERVICECALL_SERVICECALLITEMVIEW
	Local oClone := FSCUSTOMERSERVICECALL_SERVICECALLITEMVIEW():NEW()
	oClone:cCLASSIFICATION      := ::cCLASSIFICATION
	oClone:cFAILURE             := ::cFAILURE
	oClone:cNOTES               := ::cNOTES
	oClone:cPRODUCTID           := ::cPRODUCTID
	oClone:cSERIALNUMBER        := ::cSERIALNUMBER
	oClone:cSERVICEBUDGETID     := ::cSERVICEBUDGETID
	oClone:cSERVICEITEM         := ::cSERVICEITEM
	oClone:cSERVICEORDERID      := ::cSERVICEORDERID
	oClone:cSERVICESTATUS       := ::cSERVICESTATUS
	oClone:oWSUSERFIELDS        := IIF(::oWSUSERFIELDS = NIL , NIL , ::oWSUSERFIELDS:Clone() )
Return oClone

WSMETHOD SOAPSEND WSCLIENT FSCUSTOMERSERVICECALL_SERVICECALLITEMVIEW
	Local cSoap := ""
	cSoap += WSSoapValue("CLASSIFICATION", ::cCLASSIFICATION, ::cCLASSIFICATION , "string", .T. , .F., 0 ) 
	cSoap += WSSoapValue("FAILURE", ::cFAILURE, ::cFAILURE , "string", .T. , .F., 0 ) 
	cSoap += WSSoapValue("NOTES", ::cNOTES, ::cNOTES , "string", .T. , .F., 0 ) 
	cSoap += WSSoapValue("PRODUCTID", ::cPRODUCTID, ::cPRODUCTID , "string", .T. , .F., 0 ) 
	cSoap += WSSoapValue("SERIALNUMBER", ::cSERIALNUMBER, ::cSERIALNUMBER , "string", .T. , .F., 0 ) 
	cSoap += WSSoapValue("SERVICEBUDGETID", ::cSERVICEBUDGETID, ::cSERVICEBUDGETID , "string", .T. , .F., 0 ) 
	cSoap += WSSoapValue("SERVICEITEM", ::cSERVICEITEM, ::cSERVICEITEM , "string", .T. , .F., 0 ) 
	cSoap += WSSoapValue("SERVICEORDERID", ::cSERVICEORDERID, ::cSERVICEORDERID , "string", .T. , .F., 0 ) 
	cSoap += WSSoapValue("SERVICESTATUS", ::cSERVICESTATUS, ::cSERVICESTATUS , "string", .T. , .F., 0 ) 
	cSoap += WSSoapValue("USERFIELDS", ::oWSUSERFIELDS, ::oWSUSERFIELDS , "ARRAYOFUSERFIELD", .F. , .F., 0 ) 
Return cSoap

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT FSCUSTOMERSERVICECALL_SERVICECALLITEMVIEW
	Local oNode10
	::Init()
	If oResponse = NIL ; Return ; Endif 
	::cCLASSIFICATION    :=  WSAdvValue( oResponse,"_CLASSIFICATION","string",NIL,"Property cCLASSIFICATION as s:string on SOAP Response not found.",NIL,"S",NIL) 
	::cFAILURE           :=  WSAdvValue( oResponse,"_FAILURE","string",NIL,"Property cFAILURE as s:string on SOAP Response not found.",NIL,"S",NIL) 
	::cNOTES             :=  WSAdvValue( oResponse,"_NOTES","string",NIL,"Property cNOTES as s:string on SOAP Response not found.",NIL,"S",NIL) 
	::cPRODUCTID         :=  WSAdvValue( oResponse,"_PRODUCTID","string",NIL,"Property cPRODUCTID as s:string on SOAP Response not found.",NIL,"S",NIL) 
	::cSERIALNUMBER      :=  WSAdvValue( oResponse,"_SERIALNUMBER","string",NIL,"Property cSERIALNUMBER as s:string on SOAP Response not found.",NIL,"S",NIL) 
	::cSERVICEBUDGETID   :=  WSAdvValue( oResponse,"_SERVICEBUDGETID","string",NIL,"Property cSERVICEBUDGETID as s:string on SOAP Response not found.",NIL,"S",NIL) 
	::cSERVICEITEM       :=  WSAdvValue( oResponse,"_SERVICEITEM","string",NIL,"Property cSERVICEITEM as s:string on SOAP Response not found.",NIL,"S",NIL) 
	::cSERVICEORDERID    :=  WSAdvValue( oResponse,"_SERVICEORDERID","string",NIL,"Property cSERVICEORDERID as s:string on SOAP Response not found.",NIL,"S",NIL) 
	::cSERVICESTATUS     :=  WSAdvValue( oResponse,"_SERVICESTATUS","string",NIL,"Property cSERVICESTATUS as s:string on SOAP Response not found.",NIL,"S",NIL) 
	oNode10 :=  WSAdvValue( oResponse,"_USERFIELDS","ARRAYOFUSERFIELD",NIL,NIL,NIL,"O",NIL) 
	If oNode10 != NIL
		::oWSUSERFIELDS := FSCUSTOMERSERVICECALL_ARRAYOFUSERFIELD():New()
		::oWSUSERFIELDS:SoapRecv(oNode10)
	EndIf
Return

/* -------------------------------------------------------------------------------
WSDL Data Structure USERFIELD
------------------------------------------------------------------------------- */

WSSTRUCT FSCUSTOMERSERVICECALL_USERFIELD
	WSDATA   cUSERCOMBOBOX             AS string OPTIONAL
	WSDATA   nUSERDEC                  AS integer OPTIONAL
	WSDATA   cUSERF3                   AS string OPTIONAL
	WSDATA   cUSERNAME                 AS string
	WSDATA   lUSEROBLIG                AS boolean OPTIONAL
	WSDATA   cUSERPICTURE              AS string OPTIONAL
	WSDATA   nUSERSIZE                 AS integer OPTIONAL
	WSDATA   cUSERTAG                  AS string OPTIONAL
	WSDATA   cUSERTITLE                AS string OPTIONAL
	WSDATA   cUSERTYPE                 AS string
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPSEND
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT FSCUSTOMERSERVICECALL_USERFIELD
	::Init()
Return Self

WSMETHOD INIT WSCLIENT FSCUSTOMERSERVICECALL_USERFIELD
Return

WSMETHOD CLONE WSCLIENT FSCUSTOMERSERVICECALL_USERFIELD
	Local oClone := FSCUSTOMERSERVICECALL_USERFIELD():NEW()
	oClone:cUSERCOMBOBOX        := ::cUSERCOMBOBOX
	oClone:nUSERDEC             := ::nUSERDEC
	oClone:cUSERF3              := ::cUSERF3
	oClone:cUSERNAME            := ::cUSERNAME
	oClone:lUSEROBLIG           := ::lUSEROBLIG
	oClone:cUSERPICTURE         := ::cUSERPICTURE
	oClone:nUSERSIZE            := ::nUSERSIZE
	oClone:cUSERTAG             := ::cUSERTAG
	oClone:cUSERTITLE           := ::cUSERTITLE
	oClone:cUSERTYPE            := ::cUSERTYPE
Return oClone

WSMETHOD SOAPSEND WSCLIENT FSCUSTOMERSERVICECALL_USERFIELD
	Local cSoap := ""
	cSoap += WSSoapValue("USERCOMBOBOX", ::cUSERCOMBOBOX, ::cUSERCOMBOBOX , "string", .F. , .F., 0 ) 
	cSoap += WSSoapValue("USERDEC", ::nUSERDEC, ::nUSERDEC , "integer", .F. , .F., 0 ) 
	cSoap += WSSoapValue("USERF3", ::cUSERF3, ::cUSERF3 , "string", .F. , .F., 0 ) 
	cSoap += WSSoapValue("USERNAME", ::cUSERNAME, ::cUSERNAME , "string", .T. , .F., 0 ) 
	cSoap += WSSoapValue("USEROBLIG", ::lUSEROBLIG, ::lUSEROBLIG , "boolean", .F. , .F., 0 ) 
	cSoap += WSSoapValue("USERPICTURE", ::cUSERPICTURE, ::cUSERPICTURE , "string", .F. , .F., 0 ) 
	cSoap += WSSoapValue("USERSIZE", ::nUSERSIZE, ::nUSERSIZE , "integer", .F. , .F., 0 ) 
	cSoap += WSSoapValue("USERTAG", ::cUSERTAG, ::cUSERTAG , "string", .F. , .F., 0 ) 
	cSoap += WSSoapValue("USERTITLE", ::cUSERTITLE, ::cUSERTITLE , "string", .F. , .F., 0 ) 
	cSoap += WSSoapValue("USERTYPE", ::cUSERTYPE, ::cUSERTYPE , "string", .T. , .F., 0 ) 
Return cSoap

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT FSCUSTOMERSERVICECALL_USERFIELD
	::Init()
	If oResponse = NIL ; Return ; Endif 
	::cUSERCOMBOBOX      :=  WSAdvValue( oResponse,"_USERCOMBOBOX","string",NIL,NIL,NIL,"S",NIL) 
	::nUSERDEC           :=  WSAdvValue( oResponse,"_USERDEC","integer",NIL,NIL,NIL,"N",NIL) 
	::cUSERF3            :=  WSAdvValue( oResponse,"_USERF3","string",NIL,NIL,NIL,"S",NIL) 
	::cUSERNAME          :=  WSAdvValue( oResponse,"_USERNAME","string",NIL,"Property cUSERNAME as s:string on SOAP Response not found.",NIL,"S",NIL) 
	::lUSEROBLIG         :=  WSAdvValue( oResponse,"_USEROBLIG","boolean",NIL,NIL,NIL,"L",NIL) 
	::cUSERPICTURE       :=  WSAdvValue( oResponse,"_USERPICTURE","string",NIL,NIL,NIL,"S",NIL) 
	::nUSERSIZE          :=  WSAdvValue( oResponse,"_USERSIZE","integer",NIL,NIL,NIL,"N",NIL) 
	::cUSERTAG           :=  WSAdvValue( oResponse,"_USERTAG","string",NIL,NIL,NIL,"S",NIL) 
	::cUSERTITLE         :=  WSAdvValue( oResponse,"_USERTITLE","string",NIL,NIL,NIL,"S",NIL) 
	::cUSERTYPE          :=  WSAdvValue( oResponse,"_USERTYPE","string",NIL,"Property cUSERTYPE as s:string on SOAP Response not found.",NIL,"S",NIL) 
Return


