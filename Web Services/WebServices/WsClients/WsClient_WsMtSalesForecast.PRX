#INCLUDE "protheus.ch"
#INCLUDE "apwebsrv.ch"

/* ===============================================================================
WSDL Location    http://localhost:8059/ws/MTSALESFORECAST.apw?WSDL
Gerado em        12/14/20 11:10:28
Observações      Código-Fonte gerado por ADVPL WSDL Client 1.120703
                 Alterações neste arquivo podem causar funcionamento incorreto
                 e serão perdidas caso o código-fonte seja gerado novamente.
=============================================================================== */

User Function _SKDZOYL ; Return  // "dummy" function - Internal Use 

/* -------------------------------------------------------------------------------
WSDL Service WSMTSALESFORECAST
------------------------------------------------------------------------------- */

WSCLIENT WSMTSALESFORECAST

	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD RESET
	WSMETHOD CLONE
	WSMETHOD BRWSALESFORECAST
	WSMETHOD DELSALESFORECAST
	WSMETHOD GETHEADER
	WSMETHOD GETSALESFORECAST
	WSMETHOD PUTSALESFORECAST

	WSDATA   _URL                      AS String
	WSDATA   _HEADOUT                  AS Array of String
	WSDATA   _COOKIES                  AS Array of String
	WSDATA   cUSERCODE                 AS string
	WSDATA   cPRODUCTCODE              AS string
	WSDATA   dFORECASTDATEFROM         AS date
	WSDATA   dFORECASTDATETO           AS date
	WSDATA   nPAGELEN                  AS integer
	WSDATA   nPAGEFIRST                AS integer
	WSDATA   cQUERYADDWHERE            AS string
	WSDATA   cINDEXKEY                 AS string
	WSDATA   oWSBRWSALESFORECASTRESULT AS MTSALESFORECAST_ARRAYOFSALESFORECASTVIEW
	WSDATA   cDELSALESFORECASTRESULT   AS string
	WSDATA   cHEADERTYPE               AS string
	WSDATA   oWSGETHEADERRESULT        AS MTSALESFORECAST_ARRAYOFBRWHEADER
	WSDATA   oWSGETSALESFORECASTRESULT AS MTSALESFORECAST_SALESFORECASTVIEW
	WSDATA   oWSSALESFORECAST          AS MTSALESFORECAST_SALESFORECASTVIEW
	WSDATA   cPUTSALESFORECASTRESULT   AS string

	// Estruturas mantidas por compatibilidade - NÃO USAR
	WSDATA   oWSSALESFORECASTVIEW      AS MTSALESFORECAST_SALESFORECASTVIEW

ENDWSCLIENT

WSMETHOD NEW WSCLIENT WSMTSALESFORECAST
::Init()
If !FindFunction("XMLCHILDEX")
	UserException("O Código-Fonte Client atual requer os executáveis do Protheus Build [7.00.191205P-20201009] ou superior. Atualize o Protheus ou gere o Código-Fonte novamente utilizando o Build atual.")
EndIf
Return Self

WSMETHOD INIT WSCLIENT WSMTSALESFORECAST
	::oWSBRWSALESFORECASTRESULT := MTSALESFORECAST_ARRAYOFSALESFORECASTVIEW():New()
	::oWSGETHEADERRESULT := MTSALESFORECAST_ARRAYOFBRWHEADER():New()
	::oWSGETSALESFORECASTRESULT := MTSALESFORECAST_SALESFORECASTVIEW():New()
	::oWSSALESFORECAST   := MTSALESFORECAST_SALESFORECASTVIEW():New()

	// Estruturas mantidas por compatibilidade - NÃO USAR
	::oWSSALESFORECASTVIEW := ::oWSSALESFORECAST
Return

WSMETHOD RESET WSCLIENT WSMTSALESFORECAST
	::cUSERCODE          := NIL 
	::cPRODUCTCODE       := NIL 
	::dFORECASTDATEFROM  := NIL 
	::dFORECASTDATETO    := NIL 
	::nPAGELEN           := NIL 
	::nPAGEFIRST         := NIL 
	::cQUERYADDWHERE     := NIL 
	::cINDEXKEY          := NIL 
	::oWSBRWSALESFORECASTRESULT := NIL 
	::cDELSALESFORECASTRESULT := NIL 
	::cHEADERTYPE        := NIL 
	::oWSGETHEADERRESULT := NIL 
	::oWSGETSALESFORECASTRESULT := NIL 
	::oWSSALESFORECAST   := NIL 
	::cPUTSALESFORECASTRESULT := NIL 

	// Estruturas mantidas por compatibilidade - NÃO USAR
	::oWSSALESFORECASTVIEW := NIL
	::Init()
Return

WSMETHOD CLONE WSCLIENT WSMTSALESFORECAST
Local oClone := WSMTSALESFORECAST():New()
	oClone:_URL          := ::_URL 
	oClone:cUSERCODE     := ::cUSERCODE
	oClone:cPRODUCTCODE  := ::cPRODUCTCODE
	oClone:dFORECASTDATEFROM := ::dFORECASTDATEFROM
	oClone:dFORECASTDATETO := ::dFORECASTDATETO
	oClone:nPAGELEN      := ::nPAGELEN
	oClone:nPAGEFIRST    := ::nPAGEFIRST
	oClone:cQUERYADDWHERE := ::cQUERYADDWHERE
	oClone:cINDEXKEY     := ::cINDEXKEY
	oClone:oWSBRWSALESFORECASTRESULT :=  IIF(::oWSBRWSALESFORECASTRESULT = NIL , NIL ,::oWSBRWSALESFORECASTRESULT:Clone() )
	oClone:cDELSALESFORECASTRESULT := ::cDELSALESFORECASTRESULT
	oClone:cHEADERTYPE   := ::cHEADERTYPE
	oClone:oWSGETHEADERRESULT :=  IIF(::oWSGETHEADERRESULT = NIL , NIL ,::oWSGETHEADERRESULT:Clone() )
	oClone:oWSGETSALESFORECASTRESULT :=  IIF(::oWSGETSALESFORECASTRESULT = NIL , NIL ,::oWSGETSALESFORECASTRESULT:Clone() )
	oClone:oWSSALESFORECAST :=  IIF(::oWSSALESFORECAST = NIL , NIL ,::oWSSALESFORECAST:Clone() )
	oClone:cPUTSALESFORECASTRESULT := ::cPUTSALESFORECASTRESULT

	// Estruturas mantidas por compatibilidade - NÃO USAR
	oClone:oWSSALESFORECASTVIEW := oClone:oWSSALESFORECAST
Return oClone

// WSDL Method BRWSALESFORECAST of Service WSMTSALESFORECAST

WSMETHOD BRWSALESFORECAST WSSEND cUSERCODE,cPRODUCTCODE,dFORECASTDATEFROM,dFORECASTDATETO,nPAGELEN,nPAGEFIRST,cQUERYADDWHERE,cINDEXKEY WSRECEIVE oWSBRWSALESFORECASTRESULT WSCLIENT WSMTSALESFORECAST
Local cSoap := "" , oXmlRet

BEGIN WSMETHOD

cSoap += '<BRWSALESFORECAST xmlns="http://localhost:8059/">'
cSoap += WSSoapValue("USERCODE", ::cUSERCODE, cUSERCODE , "string", .T. , .F., 0 , NIL, .F.,.F.) 
cSoap += WSSoapValue("PRODUCTCODE", ::cPRODUCTCODE, cPRODUCTCODE , "string", .F. , .F., 0 , NIL, .F.,.F.) 
cSoap += WSSoapValue("FORECASTDATEFROM", ::dFORECASTDATEFROM, dFORECASTDATEFROM , "date", .F. , .F., 0 , NIL, .F.,.F.) 
cSoap += WSSoapValue("FORECASTDATETO", ::dFORECASTDATETO, dFORECASTDATETO , "date", .F. , .F., 0 , NIL, .F.,.F.) 
cSoap += WSSoapValue("PAGELEN", ::nPAGELEN, nPAGELEN , "integer", .F. , .F., 0 , NIL, .F.,.F.) 
cSoap += WSSoapValue("PAGEFIRST", ::nPAGEFIRST, nPAGEFIRST , "integer", .F. , .F., 0 , NIL, .F.,.F.) 
cSoap += WSSoapValue("QUERYADDWHERE", ::cQUERYADDWHERE, cQUERYADDWHERE , "string", .F. , .F., 0 , NIL, .F.,.F.) 
cSoap += WSSoapValue("INDEXKEY", ::cINDEXKEY, cINDEXKEY , "string", .F. , .F., 0 , NIL, .F.,.F.) 
cSoap += "</BRWSALESFORECAST>"

oXmlRet := SvcSoapCall(Self,cSoap,; 
	"http://localhost:8059/BRWSALESFORECAST",; 
	"DOCUMENT","http://localhost:8059/",,"1.031217",; 
	"http://localhost:8059/ws/MTSALESFORECAST.apw")

::Init()
::oWSBRWSALESFORECASTRESULT:SoapRecv( WSAdvValue( oXmlRet,"_BRWSALESFORECASTRESPONSE:_BRWSALESFORECASTRESULT","ARRAYOFSALESFORECASTVIEW",NIL,NIL,NIL,NIL,NIL,NIL) )

END WSMETHOD

oXmlRet := NIL
Return .T.

// WSDL Method DELSALESFORECAST of Service WSMTSALESFORECAST

WSMETHOD DELSALESFORECAST WSSEND cUSERCODE,cPRODUCTCODE WSRECEIVE cDELSALESFORECASTRESULT WSCLIENT WSMTSALESFORECAST
Local cSoap := "" , oXmlRet

BEGIN WSMETHOD

cSoap += '<DELSALESFORECAST xmlns="http://localhost:8059/">'
cSoap += WSSoapValue("USERCODE", ::cUSERCODE, cUSERCODE , "string", .T. , .F., 0 , NIL, .F.,.F.) 
cSoap += WSSoapValue("PRODUCTCODE", ::cPRODUCTCODE, cPRODUCTCODE , "string", .F. , .F., 0 , NIL, .F.,.F.) 
cSoap += "</DELSALESFORECAST>"

oXmlRet := SvcSoapCall(Self,cSoap,; 
	"http://localhost:8059/DELSALESFORECAST",; 
	"DOCUMENT","http://localhost:8059/",,"1.031217",; 
	"http://localhost:8059/ws/MTSALESFORECAST.apw")

::Init()
::cDELSALESFORECASTRESULT :=  WSAdvValue( oXmlRet,"_DELSALESFORECASTRESPONSE:_DELSALESFORECASTRESULT:TEXT","string",NIL,NIL,NIL,NIL,NIL,NIL) 

END WSMETHOD

oXmlRet := NIL
Return .T.

// WSDL Method GETHEADER of Service WSMTSALESFORECAST

WSMETHOD GETHEADER WSSEND cHEADERTYPE WSRECEIVE oWSGETHEADERRESULT WSCLIENT WSMTSALESFORECAST
Local cSoap := "" , oXmlRet

BEGIN WSMETHOD

cSoap += '<GETHEADER xmlns="http://localhost:8059/">'
cSoap += WSSoapValue("HEADERTYPE", ::cHEADERTYPE, cHEADERTYPE , "string", .T. , .F., 0 , NIL, .F.,.F.) 
cSoap += "</GETHEADER>"

oXmlRet := SvcSoapCall(Self,cSoap,; 
	"http://localhost:8059/GETHEADER",; 
	"DOCUMENT","http://localhost:8059/",,"1.031217",; 
	"http://localhost:8059/ws/MTSALESFORECAST.apw")

::Init()
::oWSGETHEADERRESULT:SoapRecv( WSAdvValue( oXmlRet,"_GETHEADERRESPONSE:_GETHEADERRESULT","ARRAYOFBRWHEADER",NIL,NIL,NIL,NIL,NIL,NIL) )

END WSMETHOD

oXmlRet := NIL
Return .T.

// WSDL Method GETSALESFORECAST of Service WSMTSALESFORECAST

WSMETHOD GETSALESFORECAST WSSEND cUSERCODE,cPRODUCTCODE WSRECEIVE oWSGETSALESFORECASTRESULT WSCLIENT WSMTSALESFORECAST
Local cSoap := "" , oXmlRet

BEGIN WSMETHOD

cSoap += '<GETSALESFORECAST xmlns="http://localhost:8059/">'
cSoap += WSSoapValue("USERCODE", ::cUSERCODE, cUSERCODE , "string", .T. , .F., 0 , NIL, .F.,.F.) 
cSoap += WSSoapValue("PRODUCTCODE", ::cPRODUCTCODE, cPRODUCTCODE , "string", .F. , .F., 0 , NIL, .F.,.F.) 
cSoap += "</GETSALESFORECAST>"

oXmlRet := SvcSoapCall(Self,cSoap,; 
	"http://localhost:8059/GETSALESFORECAST",; 
	"DOCUMENT","http://localhost:8059/",,"1.031217",; 
	"http://localhost:8059/ws/MTSALESFORECAST.apw")

::Init()
::oWSGETSALESFORECASTRESULT:SoapRecv( WSAdvValue( oXmlRet,"_GETSALESFORECASTRESPONSE:_GETSALESFORECASTRESULT","SALESFORECASTVIEW",NIL,NIL,NIL,NIL,NIL,NIL) )

END WSMETHOD

oXmlRet := NIL
Return .T.

// WSDL Method PUTSALESFORECAST of Service WSMTSALESFORECAST

WSMETHOD PUTSALESFORECAST WSSEND cUSERCODE,oWSSALESFORECAST WSRECEIVE cPUTSALESFORECASTRESULT WSCLIENT WSMTSALESFORECAST
Local cSoap := "" , oXmlRet

BEGIN WSMETHOD

cSoap += '<PUTSALESFORECAST xmlns="http://localhost:8059/">'
cSoap += WSSoapValue("USERCODE", ::cUSERCODE, cUSERCODE , "string", .T. , .F., 0 , NIL, .F.,.F.) 
cSoap += WSSoapValue("SALESFORECAST", ::oWSSALESFORECAST, oWSSALESFORECAST , "SALESFORECASTVIEW", .T. , .F., 0 , NIL, .F.,.F.) 
cSoap += "</PUTSALESFORECAST>"

oXmlRet := SvcSoapCall(Self,cSoap,; 
	"http://localhost:8059/PUTSALESFORECAST",; 
	"DOCUMENT","http://localhost:8059/",,"1.031217",; 
	"http://localhost:8059/ws/MTSALESFORECAST.apw")

::Init()
::cPUTSALESFORECASTRESULT :=  WSAdvValue( oXmlRet,"_PUTSALESFORECASTRESPONSE:_PUTSALESFORECASTRESULT:TEXT","string",NIL,NIL,NIL,NIL,NIL,NIL) 

END WSMETHOD

oXmlRet := NIL
Return .T.


// WSDL Data Structure ARRAYOFSALESFORECASTVIEW

WSSTRUCT MTSALESFORECAST_ARRAYOFSALESFORECASTVIEW
	WSDATA   oWSSALESFORECASTVIEW      AS MTSALESFORECAST_SALESFORECASTVIEW OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT MTSALESFORECAST_ARRAYOFSALESFORECASTVIEW
	::Init()
Return Self

WSMETHOD INIT WSCLIENT MTSALESFORECAST_ARRAYOFSALESFORECASTVIEW
	::oWSSALESFORECASTVIEW := {} // Array Of  MTSALESFORECAST_SALESFORECASTVIEW():New()
Return

WSMETHOD CLONE WSCLIENT MTSALESFORECAST_ARRAYOFSALESFORECASTVIEW
	Local oClone := MTSALESFORECAST_ARRAYOFSALESFORECASTVIEW():NEW()
	oClone:oWSSALESFORECASTVIEW := NIL
	If ::oWSSALESFORECASTVIEW <> NIL 
		oClone:oWSSALESFORECASTVIEW := {}
		aEval( ::oWSSALESFORECASTVIEW , { |x| aadd( oClone:oWSSALESFORECASTVIEW , x:Clone() ) } )
	Endif 
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT MTSALESFORECAST_ARRAYOFSALESFORECASTVIEW
	Local nRElem1, oNodes1, nTElem1
	::Init()
	If oResponse = NIL ; Return ; Endif 
	oNodes1 :=  WSAdvValue( oResponse,"_SALESFORECASTVIEW","SALESFORECASTVIEW",{},NIL,.T.,"O",NIL,NIL) 
	nTElem1 := len(oNodes1)
	For nRElem1 := 1 to nTElem1 
		If !WSIsNilNode( oNodes1[nRElem1] )
			aadd(::oWSSALESFORECASTVIEW , MTSALESFORECAST_SALESFORECASTVIEW():New() )
			::oWSSALESFORECASTVIEW[len(::oWSSALESFORECASTVIEW)]:SoapRecv(oNodes1[nRElem1])
		Endif
	Next
Return

// WSDL Data Structure ARRAYOFBRWHEADER

WSSTRUCT MTSALESFORECAST_ARRAYOFBRWHEADER
	WSDATA   oWSBRWHEADER              AS MTSALESFORECAST_BRWHEADER OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT MTSALESFORECAST_ARRAYOFBRWHEADER
	::Init()
Return Self

WSMETHOD INIT WSCLIENT MTSALESFORECAST_ARRAYOFBRWHEADER
	::oWSBRWHEADER         := {} // Array Of  MTSALESFORECAST_BRWHEADER():New()
Return

WSMETHOD CLONE WSCLIENT MTSALESFORECAST_ARRAYOFBRWHEADER
	Local oClone := MTSALESFORECAST_ARRAYOFBRWHEADER():NEW()
	oClone:oWSBRWHEADER := NIL
	If ::oWSBRWHEADER <> NIL 
		oClone:oWSBRWHEADER := {}
		aEval( ::oWSBRWHEADER , { |x| aadd( oClone:oWSBRWHEADER , x:Clone() ) } )
	Endif 
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT MTSALESFORECAST_ARRAYOFBRWHEADER
	Local nRElem1, oNodes1, nTElem1
	::Init()
	If oResponse = NIL ; Return ; Endif 
	oNodes1 :=  WSAdvValue( oResponse,"_BRWHEADER","BRWHEADER",{},NIL,.T.,"O",NIL,NIL) 
	nTElem1 := len(oNodes1)
	For nRElem1 := 1 to nTElem1 
		If !WSIsNilNode( oNodes1[nRElem1] )
			aadd(::oWSBRWHEADER , MTSALESFORECAST_BRWHEADER():New() )
			::oWSBRWHEADER[len(::oWSBRWHEADER)]:SoapRecv(oNodes1[nRElem1])
		Endif
	Next
Return

// WSDL Data Structure SALESFORECASTVIEW

WSSTRUCT MTSALESFORECAST_SALESFORECASTVIEW
	WSDATA   cDOCUMENT                 AS string OPTIONAL
	WSDATA   dFORECASTDATE             AS date
	WSDATA   cNOTE                     AS string OPTIONAL
	WSDATA   cPRODUCTCODE              AS string
	WSDATA   nQUANTITY                 AS float
	WSDATA   oWSUSERFIELDS             AS MTSALESFORECAST_ARRAYOFUSERFIELD OPTIONAL
	WSDATA   nVALUE                    AS float OPTIONAL
	WSDATA   cWAREHOUSE                AS string
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPSEND
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT MTSALESFORECAST_SALESFORECASTVIEW
	::Init()
Return Self

WSMETHOD INIT WSCLIENT MTSALESFORECAST_SALESFORECASTVIEW
Return

WSMETHOD CLONE WSCLIENT MTSALESFORECAST_SALESFORECASTVIEW
	Local oClone := MTSALESFORECAST_SALESFORECASTVIEW():NEW()
	oClone:cDOCUMENT            := ::cDOCUMENT
	oClone:dFORECASTDATE        := ::dFORECASTDATE
	oClone:cNOTE                := ::cNOTE
	oClone:cPRODUCTCODE         := ::cPRODUCTCODE
	oClone:nQUANTITY            := ::nQUANTITY
	oClone:oWSUSERFIELDS        := IIF(::oWSUSERFIELDS = NIL , NIL , ::oWSUSERFIELDS:Clone() )
	oClone:nVALUE               := ::nVALUE
	oClone:cWAREHOUSE           := ::cWAREHOUSE
Return oClone

WSMETHOD SOAPSEND WSCLIENT MTSALESFORECAST_SALESFORECASTVIEW
	Local cSoap := ""
	cSoap += WSSoapValue("DOCUMENT", ::cDOCUMENT, ::cDOCUMENT , "string", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("FORECASTDATE", ::dFORECASTDATE, ::dFORECASTDATE , "date", .T. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("NOTE", ::cNOTE, ::cNOTE , "string", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("PRODUCTCODE", ::cPRODUCTCODE, ::cPRODUCTCODE , "string", .T. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("QUANTITY", ::nQUANTITY, ::nQUANTITY , "float", .T. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("USERFIELDS", ::oWSUSERFIELDS, ::oWSUSERFIELDS , "ARRAYOFUSERFIELD", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("VALUE", ::nVALUE, ::nVALUE , "float", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("WAREHOUSE", ::cWAREHOUSE, ::cWAREHOUSE , "string", .T. , .F., 0 , NIL, .F.,.F.) 
Return cSoap

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT MTSALESFORECAST_SALESFORECASTVIEW
	Local oNode6
	::Init()
	If oResponse = NIL ; Return ; Endif 
	::cDOCUMENT          :=  WSAdvValue( oResponse,"_DOCUMENT","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::dFORECASTDATE      :=  WSAdvValue( oResponse,"_FORECASTDATE","date",NIL,"Property dFORECASTDATE as s:date on SOAP Response not found.",NIL,"D",NIL,NIL) 
	::cNOTE              :=  WSAdvValue( oResponse,"_NOTE","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cPRODUCTCODE       :=  WSAdvValue( oResponse,"_PRODUCTCODE","string",NIL,"Property cPRODUCTCODE as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::nQUANTITY          :=  WSAdvValue( oResponse,"_QUANTITY","float",NIL,"Property nQUANTITY as s:float on SOAP Response not found.",NIL,"N",NIL,NIL) 
	oNode6 :=  WSAdvValue( oResponse,"_USERFIELDS","ARRAYOFUSERFIELD",NIL,NIL,NIL,"O",NIL,NIL) 
	If oNode6 != NIL
		::oWSUSERFIELDS := MTSALESFORECAST_ARRAYOFUSERFIELD():New()
		::oWSUSERFIELDS:SoapRecv(oNode6)
	EndIf
	::nVALUE             :=  WSAdvValue( oResponse,"_VALUE","float",NIL,NIL,NIL,"N",NIL,NIL) 
	::cWAREHOUSE         :=  WSAdvValue( oResponse,"_WAREHOUSE","string",NIL,"Property cWAREHOUSE as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
Return

// WSDL Data Structure BRWHEADER

WSSTRUCT MTSALESFORECAST_BRWHEADER
	WSDATA   cHEADERCOMBOBOX           AS string OPTIONAL
	WSDATA   nHEADERDEC                AS integer
	WSDATA   cHEADERF3                 AS string OPTIONAL
	WSDATA   cHEADERFIELD              AS string
	WSDATA   lHEADEROBLIG              AS boolean OPTIONAL
	WSDATA   cHEADERPICTURE            AS string
	WSDATA   nHEADERSIZE               AS integer
	WSDATA   cHEADERTITLE              AS string
	WSDATA   cHEADERTYPE               AS string
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT MTSALESFORECAST_BRWHEADER
	::Init()
Return Self

WSMETHOD INIT WSCLIENT MTSALESFORECAST_BRWHEADER
Return

WSMETHOD CLONE WSCLIENT MTSALESFORECAST_BRWHEADER
	Local oClone := MTSALESFORECAST_BRWHEADER():NEW()
	oClone:cHEADERCOMBOBOX      := ::cHEADERCOMBOBOX
	oClone:nHEADERDEC           := ::nHEADERDEC
	oClone:cHEADERF3            := ::cHEADERF3
	oClone:cHEADERFIELD         := ::cHEADERFIELD
	oClone:lHEADEROBLIG         := ::lHEADEROBLIG
	oClone:cHEADERPICTURE       := ::cHEADERPICTURE
	oClone:nHEADERSIZE          := ::nHEADERSIZE
	oClone:cHEADERTITLE         := ::cHEADERTITLE
	oClone:cHEADERTYPE          := ::cHEADERTYPE
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT MTSALESFORECAST_BRWHEADER
	::Init()
	If oResponse = NIL ; Return ; Endif 
	::cHEADERCOMBOBOX    :=  WSAdvValue( oResponse,"_HEADERCOMBOBOX","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::nHEADERDEC         :=  WSAdvValue( oResponse,"_HEADERDEC","integer",NIL,"Property nHEADERDEC as s:integer on SOAP Response not found.",NIL,"N",NIL,NIL) 
	::cHEADERF3          :=  WSAdvValue( oResponse,"_HEADERF3","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cHEADERFIELD       :=  WSAdvValue( oResponse,"_HEADERFIELD","string",NIL,"Property cHEADERFIELD as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::lHEADEROBLIG       :=  WSAdvValue( oResponse,"_HEADEROBLIG","boolean",NIL,NIL,NIL,"L",NIL,NIL) 
	::cHEADERPICTURE     :=  WSAdvValue( oResponse,"_HEADERPICTURE","string",NIL,"Property cHEADERPICTURE as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::nHEADERSIZE        :=  WSAdvValue( oResponse,"_HEADERSIZE","integer",NIL,"Property nHEADERSIZE as s:integer on SOAP Response not found.",NIL,"N",NIL,NIL) 
	::cHEADERTITLE       :=  WSAdvValue( oResponse,"_HEADERTITLE","string",NIL,"Property cHEADERTITLE as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::cHEADERTYPE        :=  WSAdvValue( oResponse,"_HEADERTYPE","string",NIL,"Property cHEADERTYPE as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
Return

// WSDL Data Structure ARRAYOFUSERFIELD

WSSTRUCT MTSALESFORECAST_ARRAYOFUSERFIELD
	WSDATA   oWSUSERFIELD              AS MTSALESFORECAST_USERFIELD OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPSEND
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT MTSALESFORECAST_ARRAYOFUSERFIELD
	::Init()
Return Self

WSMETHOD INIT WSCLIENT MTSALESFORECAST_ARRAYOFUSERFIELD
	::oWSUSERFIELD         := {} // Array Of  MTSALESFORECAST_USERFIELD():New()
Return

WSMETHOD CLONE WSCLIENT MTSALESFORECAST_ARRAYOFUSERFIELD
	Local oClone := MTSALESFORECAST_ARRAYOFUSERFIELD():NEW()
	oClone:oWSUSERFIELD := NIL
	If ::oWSUSERFIELD <> NIL 
		oClone:oWSUSERFIELD := {}
		aEval( ::oWSUSERFIELD , { |x| aadd( oClone:oWSUSERFIELD , x:Clone() ) } )
	Endif 
Return oClone

WSMETHOD SOAPSEND WSCLIENT MTSALESFORECAST_ARRAYOFUSERFIELD
	Local cSoap := ""
	aEval( ::oWSUSERFIELD , {|x| cSoap := cSoap  +  WSSoapValue("USERFIELD", x , x , "USERFIELD", .F. , .F., 0 , NIL, .F.,.F.)  } ) 
Return cSoap

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT MTSALESFORECAST_ARRAYOFUSERFIELD
	Local nRElem1, oNodes1, nTElem1
	::Init()
	If oResponse = NIL ; Return ; Endif 
	oNodes1 :=  WSAdvValue( oResponse,"_USERFIELD","USERFIELD",{},NIL,.T.,"O",NIL,NIL) 
	nTElem1 := len(oNodes1)
	For nRElem1 := 1 to nTElem1 
		If !WSIsNilNode( oNodes1[nRElem1] )
			aadd(::oWSUSERFIELD , MTSALESFORECAST_USERFIELD():New() )
			::oWSUSERFIELD[len(::oWSUSERFIELD)]:SoapRecv(oNodes1[nRElem1])
		Endif
	Next
Return

// WSDL Data Structure USERFIELD

WSSTRUCT MTSALESFORECAST_USERFIELD
	WSDATA   cUSERCOMBOBOX             AS string OPTIONAL
	WSDATA   nUSERDEC                  AS integer OPTIONAL
	WSDATA   cUSERF3                   AS string OPTIONAL
	WSDATA   cUSERNAME                 AS string
	WSDATA   lUSEROBLIG                AS boolean OPTIONAL
	WSDATA   cUSERPICTURE              AS string OPTIONAL
	WSDATA   nUSERSIZE                 AS integer OPTIONAL
	WSDATA   cUSERTAG                  AS string OPTIONAL
	WSDATA   cUSERTITLE                AS string OPTIONAL
	WSDATA   cUSERTYPE                 AS string
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPSEND
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT MTSALESFORECAST_USERFIELD
	::Init()
Return Self

WSMETHOD INIT WSCLIENT MTSALESFORECAST_USERFIELD
Return

WSMETHOD CLONE WSCLIENT MTSALESFORECAST_USERFIELD
	Local oClone := MTSALESFORECAST_USERFIELD():NEW()
	oClone:cUSERCOMBOBOX        := ::cUSERCOMBOBOX
	oClone:nUSERDEC             := ::nUSERDEC
	oClone:cUSERF3              := ::cUSERF3
	oClone:cUSERNAME            := ::cUSERNAME
	oClone:lUSEROBLIG           := ::lUSEROBLIG
	oClone:cUSERPICTURE         := ::cUSERPICTURE
	oClone:nUSERSIZE            := ::nUSERSIZE
	oClone:cUSERTAG             := ::cUSERTAG
	oClone:cUSERTITLE           := ::cUSERTITLE
	oClone:cUSERTYPE            := ::cUSERTYPE
Return oClone

WSMETHOD SOAPSEND WSCLIENT MTSALESFORECAST_USERFIELD
	Local cSoap := ""
	cSoap += WSSoapValue("USERCOMBOBOX", ::cUSERCOMBOBOX, ::cUSERCOMBOBOX , "string", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("USERDEC", ::nUSERDEC, ::nUSERDEC , "integer", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("USERF3", ::cUSERF3, ::cUSERF3 , "string", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("USERNAME", ::cUSERNAME, ::cUSERNAME , "string", .T. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("USEROBLIG", ::lUSEROBLIG, ::lUSEROBLIG , "boolean", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("USERPICTURE", ::cUSERPICTURE, ::cUSERPICTURE , "string", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("USERSIZE", ::nUSERSIZE, ::nUSERSIZE , "integer", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("USERTAG", ::cUSERTAG, ::cUSERTAG , "string", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("USERTITLE", ::cUSERTITLE, ::cUSERTITLE , "string", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("USERTYPE", ::cUSERTYPE, ::cUSERTYPE , "string", .T. , .F., 0 , NIL, .F.,.F.) 
Return cSoap

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT MTSALESFORECAST_USERFIELD
	::Init()
	If oResponse = NIL ; Return ; Endif 
	::cUSERCOMBOBOX      :=  WSAdvValue( oResponse,"_USERCOMBOBOX","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::nUSERDEC           :=  WSAdvValue( oResponse,"_USERDEC","integer",NIL,NIL,NIL,"N",NIL,NIL) 
	::cUSERF3            :=  WSAdvValue( oResponse,"_USERF3","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cUSERNAME          :=  WSAdvValue( oResponse,"_USERNAME","string",NIL,"Property cUSERNAME as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::lUSEROBLIG         :=  WSAdvValue( oResponse,"_USEROBLIG","boolean",NIL,NIL,NIL,"L",NIL,NIL) 
	::cUSERPICTURE       :=  WSAdvValue( oResponse,"_USERPICTURE","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::nUSERSIZE          :=  WSAdvValue( oResponse,"_USERSIZE","integer",NIL,NIL,NIL,"N",NIL,NIL) 
	::cUSERTAG           :=  WSAdvValue( oResponse,"_USERTAG","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cUSERTITLE         :=  WSAdvValue( oResponse,"_USERTITLE","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cUSERTYPE          :=  WSAdvValue( oResponse,"_USERTYPE","string",NIL,"Property cUSERTYPE as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
Return


