#INCLUDE "protheus.ch"
#INCLUDE "apwebsrv.ch"

/* ===============================================================================
WSDL Location    http://localhost:8059/ws/MTPRODUCT.apw?WSDL
Gerado em        12/14/20 11:09:00
Observações      Código-Fonte gerado por ADVPL WSDL Client 1.120703
                 Alterações neste arquivo podem causar funcionamento incorreto
                 e serão perdidas caso o código-fonte seja gerado novamente.
=============================================================================== */

User Function _MJBFSJJ ; Return  // "dummy" function - Internal Use 

/* -------------------------------------------------------------------------------
WSDL Service WSMTPRODUCT
------------------------------------------------------------------------------- */

WSCLIENT WSMTPRODUCT

	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD RESET
	WSMETHOD CLONE
	WSMETHOD GETCATALOG
	WSMETHOD GETDISCOUNT
	WSMETHOD GETHEADER
	WSMETHOD GETIMAGE
	WSMETHOD GETINVENTORY
	WSMETHOD GETPRICE
	WSMETHOD GETSTOCK
	WSMETHOD GETTYPEOFPRODUCT

	WSDATA   _URL                      AS String
	WSDATA   _HEADOUT                  AS Array of String
	WSDATA   _COOKIES                  AS Array of String
	WSDATA   cUSERCODE                 AS string
	WSDATA   cTYPEOFPRODUCTIN          AS string
	WSDATA   cGROUPOFPRODUCTIN         AS string
	WSDATA   cPRODUCTCODELIKE          AS string
	WSDATA   cDESCRIPTIONLIKE          AS string
	WSDATA   nPAGELEN                  AS integer
	WSDATA   nPAGEFIRST                AS integer
	WSDATA   cQUERYADDWHERE            AS string
	WSDATA   cINDEXKEY                 AS string
	WSDATA   cCUSTOMERID               AS string
	WSDATA   oWSGETCATALOGRESULT       AS MTPRODUCT_ARRAYOFPRODUCTVIEW
	WSDATA   cPRODUCTCODE              AS string
	WSDATA   cPRICETABLECODE           AS string
	WSDATA   nQUANTITY                 AS float
	WSDATA   cPAYMENTPLANCODE          AS string
	WSDATA   nDISCOUNTTYPE             AS integer
	WSDATA   nBASEPRICE                AS float
	WSDATA   nGETDISCOUNTRESULT        AS float
	WSDATA   cHEADERTYPE               AS string
	WSDATA   oWSGETHEADERRESULT        AS MTPRODUCT_ARRAYOFBRWHEADER
	WSDATA   cGETIMAGERESULT           AS base64Binary
	WSDATA   dINVENTORYDATE            AS date
	WSDATA   nTYPEOFINVENTORY          AS integer
	WSDATA   oWSGETINVENTORYRESULT     AS MTPRODUCT_ARRAYOFINVENTORYVIEW
	WSDATA   oWSGETPRICERESULT         AS MTPRODUCT_ARRAYOFPRICEVIEW
	WSDATA   cWAREHOUSE                AS string
	WSDATA   oWSGETSTOCKRESULT         AS MTPRODUCT_ARRAYOFINVENTORYVIEW
	WSDATA   oWSGETTYPEOFPRODUCTRESULT AS MTPRODUCT_ARRAYOFGENERICSTRUCT

ENDWSCLIENT

WSMETHOD NEW WSCLIENT WSMTPRODUCT
::Init()
If !FindFunction("XMLCHILDEX")
	UserException("O Código-Fonte Client atual requer os executáveis do Protheus Build [7.00.191205P-20201009] ou superior. Atualize o Protheus ou gere o Código-Fonte novamente utilizando o Build atual.")
EndIf
Return Self

WSMETHOD INIT WSCLIENT WSMTPRODUCT
	::oWSGETCATALOGRESULT := MTPRODUCT_ARRAYOFPRODUCTVIEW():New()
	::oWSGETHEADERRESULT := MTPRODUCT_ARRAYOFBRWHEADER():New()
	::oWSGETINVENTORYRESULT := MTPRODUCT_ARRAYOFINVENTORYVIEW():New()
	::oWSGETPRICERESULT  := MTPRODUCT_ARRAYOFPRICEVIEW():New()
	::oWSGETSTOCKRESULT  := MTPRODUCT_ARRAYOFINVENTORYVIEW():New()
	::oWSGETTYPEOFPRODUCTRESULT := MTPRODUCT_ARRAYOFGENERICSTRUCT():New()
Return

WSMETHOD RESET WSCLIENT WSMTPRODUCT
	::cUSERCODE          := NIL 
	::cTYPEOFPRODUCTIN   := NIL 
	::cGROUPOFPRODUCTIN  := NIL 
	::cPRODUCTCODELIKE   := NIL 
	::cDESCRIPTIONLIKE   := NIL 
	::nPAGELEN           := NIL 
	::nPAGEFIRST         := NIL 
	::cQUERYADDWHERE     := NIL 
	::cINDEXKEY          := NIL 
	::cCUSTOMERID        := NIL 
	::oWSGETCATALOGRESULT := NIL 
	::cPRODUCTCODE       := NIL 
	::cPRICETABLECODE    := NIL 
	::nQUANTITY          := NIL 
	::cPAYMENTPLANCODE   := NIL 
	::nDISCOUNTTYPE      := NIL 
	::nBASEPRICE         := NIL 
	::nGETDISCOUNTRESULT := NIL 
	::cHEADERTYPE        := NIL 
	::oWSGETHEADERRESULT := NIL 
	::cGETIMAGERESULT    := NIL 
	::dINVENTORYDATE     := NIL 
	::nTYPEOFINVENTORY   := NIL 
	::oWSGETINVENTORYRESULT := NIL 
	::oWSGETPRICERESULT  := NIL 
	::cWAREHOUSE         := NIL 
	::oWSGETSTOCKRESULT  := NIL 
	::oWSGETTYPEOFPRODUCTRESULT := NIL 
	::Init()
Return

WSMETHOD CLONE WSCLIENT WSMTPRODUCT
Local oClone := WSMTPRODUCT():New()
	oClone:_URL          := ::_URL 
	oClone:cUSERCODE     := ::cUSERCODE
	oClone:cTYPEOFPRODUCTIN := ::cTYPEOFPRODUCTIN
	oClone:cGROUPOFPRODUCTIN := ::cGROUPOFPRODUCTIN
	oClone:cPRODUCTCODELIKE := ::cPRODUCTCODELIKE
	oClone:cDESCRIPTIONLIKE := ::cDESCRIPTIONLIKE
	oClone:nPAGELEN      := ::nPAGELEN
	oClone:nPAGEFIRST    := ::nPAGEFIRST
	oClone:cQUERYADDWHERE := ::cQUERYADDWHERE
	oClone:cINDEXKEY     := ::cINDEXKEY
	oClone:cCUSTOMERID   := ::cCUSTOMERID
	oClone:oWSGETCATALOGRESULT :=  IIF(::oWSGETCATALOGRESULT = NIL , NIL ,::oWSGETCATALOGRESULT:Clone() )
	oClone:cPRODUCTCODE  := ::cPRODUCTCODE
	oClone:cPRICETABLECODE := ::cPRICETABLECODE
	oClone:nQUANTITY     := ::nQUANTITY
	oClone:cPAYMENTPLANCODE := ::cPAYMENTPLANCODE
	oClone:nDISCOUNTTYPE := ::nDISCOUNTTYPE
	oClone:nBASEPRICE    := ::nBASEPRICE
	oClone:nGETDISCOUNTRESULT := ::nGETDISCOUNTRESULT
	oClone:cHEADERTYPE   := ::cHEADERTYPE
	oClone:oWSGETHEADERRESULT :=  IIF(::oWSGETHEADERRESULT = NIL , NIL ,::oWSGETHEADERRESULT:Clone() )
	oClone:cGETIMAGERESULT := ::cGETIMAGERESULT
	oClone:dINVENTORYDATE := ::dINVENTORYDATE
	oClone:nTYPEOFINVENTORY := ::nTYPEOFINVENTORY
	oClone:oWSGETINVENTORYRESULT :=  IIF(::oWSGETINVENTORYRESULT = NIL , NIL ,::oWSGETINVENTORYRESULT:Clone() )
	oClone:oWSGETPRICERESULT :=  IIF(::oWSGETPRICERESULT = NIL , NIL ,::oWSGETPRICERESULT:Clone() )
	oClone:cWAREHOUSE    := ::cWAREHOUSE
	oClone:oWSGETSTOCKRESULT :=  IIF(::oWSGETSTOCKRESULT = NIL , NIL ,::oWSGETSTOCKRESULT:Clone() )
	oClone:oWSGETTYPEOFPRODUCTRESULT :=  IIF(::oWSGETTYPEOFPRODUCTRESULT = NIL , NIL ,::oWSGETTYPEOFPRODUCTRESULT:Clone() )
Return oClone

// WSDL Method GETCATALOG of Service WSMTPRODUCT

WSMETHOD GETCATALOG WSSEND cUSERCODE,cTYPEOFPRODUCTIN,cGROUPOFPRODUCTIN,cPRODUCTCODELIKE,cDESCRIPTIONLIKE,nPAGELEN,nPAGEFIRST,cQUERYADDWHERE,cINDEXKEY,cCUSTOMERID WSRECEIVE oWSGETCATALOGRESULT WSCLIENT WSMTPRODUCT
Local cSoap := "" , oXmlRet

BEGIN WSMETHOD

cSoap += '<GETCATALOG xmlns="http://webservices.microsiga.com.br/mtproduct.apw">'
cSoap += WSSoapValue("USERCODE", ::cUSERCODE, cUSERCODE , "string", .T. , .F., 0 , NIL, .F.,.F.) 
cSoap += WSSoapValue("TYPEOFPRODUCTIN", ::cTYPEOFPRODUCTIN, cTYPEOFPRODUCTIN , "string", .F. , .F., 0 , NIL, .F.,.F.) 
cSoap += WSSoapValue("GROUPOFPRODUCTIN", ::cGROUPOFPRODUCTIN, cGROUPOFPRODUCTIN , "string", .F. , .F., 0 , NIL, .F.,.F.) 
cSoap += WSSoapValue("PRODUCTCODELIKE", ::cPRODUCTCODELIKE, cPRODUCTCODELIKE , "string", .F. , .F., 0 , NIL, .F.,.F.) 
cSoap += WSSoapValue("DESCRIPTIONLIKE", ::cDESCRIPTIONLIKE, cDESCRIPTIONLIKE , "string", .F. , .F., 0 , NIL, .F.,.F.) 
cSoap += WSSoapValue("PAGELEN", ::nPAGELEN, nPAGELEN , "integer", .F. , .F., 0 , NIL, .F.,.F.) 
cSoap += WSSoapValue("PAGEFIRST", ::nPAGEFIRST, nPAGEFIRST , "integer", .F. , .F., 0 , NIL, .F.,.F.) 
cSoap += WSSoapValue("QUERYADDWHERE", ::cQUERYADDWHERE, cQUERYADDWHERE , "string", .F. , .F., 0 , NIL, .F.,.F.) 
cSoap += WSSoapValue("INDEXKEY", ::cINDEXKEY, cINDEXKEY , "string", .F. , .F., 0 , NIL, .F.,.F.) 
cSoap += WSSoapValue("CUSTOMERID", ::cCUSTOMERID, cCUSTOMERID , "string", .F. , .F., 0 , NIL, .F.,.F.) 
cSoap += "</GETCATALOG>"

oXmlRet := SvcSoapCall(Self,cSoap,; 
	"http://webservices.microsiga.com.br/mtproduct.apw/GETCATALOG",; 
	"DOCUMENT","http://webservices.microsiga.com.br/mtproduct.apw",,"1.031217",; 
	"http://localhost:8059/ws/MTPRODUCT.apw")

::Init()
::oWSGETCATALOGRESULT:SoapRecv( WSAdvValue( oXmlRet,"_GETCATALOGRESPONSE:_GETCATALOGRESULT","ARRAYOFPRODUCTVIEW",NIL,NIL,NIL,NIL,NIL,NIL) )

END WSMETHOD

oXmlRet := NIL
Return .T.

// WSDL Method GETDISCOUNT of Service WSMTPRODUCT

WSMETHOD GETDISCOUNT WSSEND cUSERCODE,cPRODUCTCODE,cCUSTOMERID,cPRICETABLECODE,nQUANTITY,cPAYMENTPLANCODE,nDISCOUNTTYPE,nBASEPRICE WSRECEIVE nGETDISCOUNTRESULT WSCLIENT WSMTPRODUCT
Local cSoap := "" , oXmlRet

BEGIN WSMETHOD

cSoap += '<GETDISCOUNT xmlns="http://webservices.microsiga.com.br/mtproduct.apw">'
cSoap += WSSoapValue("USERCODE", ::cUSERCODE, cUSERCODE , "string", .T. , .F., 0 , NIL, .F.,.F.) 
cSoap += WSSoapValue("PRODUCTCODE", ::cPRODUCTCODE, cPRODUCTCODE , "string", .T. , .F., 0 , NIL, .F.,.F.) 
cSoap += WSSoapValue("CUSTOMERID", ::cCUSTOMERID, cCUSTOMERID , "string", .F. , .F., 0 , NIL, .F.,.F.) 
cSoap += WSSoapValue("PRICETABLECODE", ::cPRICETABLECODE, cPRICETABLECODE , "string", .T. , .F., 0 , NIL, .F.,.F.) 
cSoap += WSSoapValue("QUANTITY", ::nQUANTITY, nQUANTITY , "float", .T. , .F., 0 , NIL, .F.,.F.) 
cSoap += WSSoapValue("PAYMENTPLANCODE", ::cPAYMENTPLANCODE, cPAYMENTPLANCODE , "string", .T. , .F., 0 , NIL, .F.,.F.) 
cSoap += WSSoapValue("DISCOUNTTYPE", ::nDISCOUNTTYPE, nDISCOUNTTYPE , "integer", .T. , .F., 0 , NIL, .F.,.F.) 
cSoap += WSSoapValue("BASEPRICE", ::nBASEPRICE, nBASEPRICE , "float", .T. , .F., 0 , NIL, .F.,.F.) 
cSoap += "</GETDISCOUNT>"

oXmlRet := SvcSoapCall(Self,cSoap,; 
	"http://webservices.microsiga.com.br/mtproduct.apw/GETDISCOUNT",; 
	"DOCUMENT","http://webservices.microsiga.com.br/mtproduct.apw",,"1.031217",; 
	"http://localhost:8059/ws/MTPRODUCT.apw")

::Init()
::nGETDISCOUNTRESULT :=  WSAdvValue( oXmlRet,"_GETDISCOUNTRESPONSE:_GETDISCOUNTRESULT:TEXT","float",NIL,NIL,NIL,NIL,NIL,NIL) 

END WSMETHOD

oXmlRet := NIL
Return .T.

// WSDL Method GETHEADER of Service WSMTPRODUCT

WSMETHOD GETHEADER WSSEND cHEADERTYPE WSRECEIVE oWSGETHEADERRESULT WSCLIENT WSMTPRODUCT
Local cSoap := "" , oXmlRet

BEGIN WSMETHOD

cSoap += '<GETHEADER xmlns="http://webservices.microsiga.com.br/mtproduct.apw">'
cSoap += WSSoapValue("HEADERTYPE", ::cHEADERTYPE, cHEADERTYPE , "string", .T. , .F., 0 , NIL, .F.,.F.) 
cSoap += "</GETHEADER>"

oXmlRet := SvcSoapCall(Self,cSoap,; 
	"http://webservices.microsiga.com.br/mtproduct.apw/GETHEADER",; 
	"DOCUMENT","http://webservices.microsiga.com.br/mtproduct.apw",,"1.031217",; 
	"http://localhost:8059/ws/MTPRODUCT.apw")

::Init()
::oWSGETHEADERRESULT:SoapRecv( WSAdvValue( oXmlRet,"_GETHEADERRESPONSE:_GETHEADERRESULT","ARRAYOFBRWHEADER",NIL,NIL,NIL,NIL,NIL,NIL) )

END WSMETHOD

oXmlRet := NIL
Return .T.

// WSDL Method GETIMAGE of Service WSMTPRODUCT

WSMETHOD GETIMAGE WSSEND cUSERCODE,cPRODUCTCODE WSRECEIVE cGETIMAGERESULT WSCLIENT WSMTPRODUCT
Local cSoap := "" , oXmlRet

BEGIN WSMETHOD

cSoap += '<GETIMAGE xmlns="http://webservices.microsiga.com.br/mtproduct.apw">'
cSoap += WSSoapValue("USERCODE", ::cUSERCODE, cUSERCODE , "string", .T. , .F., 0 , NIL, .F.,.F.) 
cSoap += WSSoapValue("PRODUCTCODE", ::cPRODUCTCODE, cPRODUCTCODE , "string", .T. , .F., 0 , NIL, .F.,.F.) 
cSoap += "</GETIMAGE>"

oXmlRet := SvcSoapCall(Self,cSoap,; 
	"http://webservices.microsiga.com.br/mtproduct.apw/GETIMAGE",; 
	"DOCUMENT","http://webservices.microsiga.com.br/mtproduct.apw",,"1.031217",; 
	"http://localhost:8059/ws/MTPRODUCT.apw")

::Init()
::cGETIMAGERESULT    :=  WSAdvValue( oXmlRet,"_GETIMAGERESPONSE:_GETIMAGERESULT:TEXT","base64Binary",NIL,NIL,NIL,NIL,NIL,NIL) 

END WSMETHOD

oXmlRet := NIL
Return .T.

// WSDL Method GETINVENTORY of Service WSMTPRODUCT

WSMETHOD GETINVENTORY WSSEND cUSERCODE,cPRODUCTCODE,dINVENTORYDATE,nTYPEOFINVENTORY,cQUERYADDWHERE WSRECEIVE oWSGETINVENTORYRESULT WSCLIENT WSMTPRODUCT
Local cSoap := "" , oXmlRet

BEGIN WSMETHOD

cSoap += '<GETINVENTORY xmlns="http://webservices.microsiga.com.br/mtproduct.apw">'
cSoap += WSSoapValue("USERCODE", ::cUSERCODE, cUSERCODE , "string", .T. , .F., 0 , NIL, .F.,.F.) 
cSoap += WSSoapValue("PRODUCTCODE", ::cPRODUCTCODE, cPRODUCTCODE , "string", .T. , .F., 0 , NIL, .F.,.F.) 
cSoap += WSSoapValue("INVENTORYDATE", ::dINVENTORYDATE, dINVENTORYDATE , "date", .F. , .F., 0 , NIL, .F.,.F.) 
cSoap += WSSoapValue("TYPEOFINVENTORY", ::nTYPEOFINVENTORY, nTYPEOFINVENTORY , "integer", .F. , .F., 0 , NIL, .F.,.F.) 
cSoap += WSSoapValue("QUERYADDWHERE", ::cQUERYADDWHERE, cQUERYADDWHERE , "string", .F. , .F., 0 , NIL, .F.,.F.) 
cSoap += "</GETINVENTORY>"

oXmlRet := SvcSoapCall(Self,cSoap,; 
	"http://webservices.microsiga.com.br/mtproduct.apw/GETINVENTORY",; 
	"DOCUMENT","http://webservices.microsiga.com.br/mtproduct.apw",,"1.031217",; 
	"http://localhost:8059/ws/MTPRODUCT.apw")

::Init()
::oWSGETINVENTORYRESULT:SoapRecv( WSAdvValue( oXmlRet,"_GETINVENTORYRESPONSE:_GETINVENTORYRESULT","ARRAYOFINVENTORYVIEW",NIL,NIL,NIL,NIL,NIL,NIL) )

END WSMETHOD

oXmlRet := NIL
Return .T.

// WSDL Method GETPRICE of Service WSMTPRODUCT

WSMETHOD GETPRICE WSSEND cUSERCODE,cPRODUCTCODE,cQUERYADDWHERE WSRECEIVE oWSGETPRICERESULT WSCLIENT WSMTPRODUCT
Local cSoap := "" , oXmlRet

BEGIN WSMETHOD

cSoap += '<GETPRICE xmlns="http://webservices.microsiga.com.br/mtproduct.apw">'
cSoap += WSSoapValue("USERCODE", ::cUSERCODE, cUSERCODE , "string", .T. , .F., 0 , NIL, .F.,.F.) 
cSoap += WSSoapValue("PRODUCTCODE", ::cPRODUCTCODE, cPRODUCTCODE , "string", .T. , .F., 0 , NIL, .F.,.F.) 
cSoap += WSSoapValue("QUERYADDWHERE", ::cQUERYADDWHERE, cQUERYADDWHERE , "string", .F. , .F., 0 , NIL, .F.,.F.) 
cSoap += "</GETPRICE>"

oXmlRet := SvcSoapCall(Self,cSoap,; 
	"http://webservices.microsiga.com.br/mtproduct.apw/GETPRICE",; 
	"DOCUMENT","http://webservices.microsiga.com.br/mtproduct.apw",,"1.031217",; 
	"http://localhost:8059/ws/MTPRODUCT.apw")

::Init()
::oWSGETPRICERESULT:SoapRecv( WSAdvValue( oXmlRet,"_GETPRICERESPONSE:_GETPRICERESULT","ARRAYOFPRICEVIEW",NIL,NIL,NIL,NIL,NIL,NIL) )

END WSMETHOD

oXmlRet := NIL
Return .T.

// WSDL Method GETSTOCK of Service WSMTPRODUCT

WSMETHOD GETSTOCK WSSEND cUSERCODE,cPRODUCTCODE,cWAREHOUSE WSRECEIVE oWSGETSTOCKRESULT WSCLIENT WSMTPRODUCT
Local cSoap := "" , oXmlRet

BEGIN WSMETHOD

cSoap += '<GETSTOCK xmlns="http://webservices.microsiga.com.br/mtproduct.apw">'
cSoap += WSSoapValue("USERCODE", ::cUSERCODE, cUSERCODE , "string", .T. , .F., 0 , NIL, .F.,.F.) 
cSoap += WSSoapValue("PRODUCTCODE", ::cPRODUCTCODE, cPRODUCTCODE , "string", .T. , .F., 0 , NIL, .F.,.F.) 
cSoap += WSSoapValue("WAREHOUSE", ::cWAREHOUSE, cWAREHOUSE , "string", .T. , .F., 0 , NIL, .F.,.F.) 
cSoap += "</GETSTOCK>"

oXmlRet := SvcSoapCall(Self,cSoap,; 
	"http://webservices.microsiga.com.br/mtproduct.apw/GETSTOCK",; 
	"DOCUMENT","http://webservices.microsiga.com.br/mtproduct.apw",,"1.031217",; 
	"http://localhost:8059/ws/MTPRODUCT.apw")

::Init()
::oWSGETSTOCKRESULT:SoapRecv( WSAdvValue( oXmlRet,"_GETSTOCKRESPONSE:_GETSTOCKRESULT","ARRAYOFINVENTORYVIEW",NIL,NIL,NIL,NIL,NIL,NIL) )

END WSMETHOD

oXmlRet := NIL
Return .T.

// WSDL Method GETTYPEOFPRODUCT of Service WSMTPRODUCT

WSMETHOD GETTYPEOFPRODUCT WSSEND cUSERCODE WSRECEIVE oWSGETTYPEOFPRODUCTRESULT WSCLIENT WSMTPRODUCT
Local cSoap := "" , oXmlRet

BEGIN WSMETHOD

cSoap += '<GETTYPEOFPRODUCT xmlns="http://webservices.microsiga.com.br/mtproduct.apw">'
cSoap += WSSoapValue("USERCODE", ::cUSERCODE, cUSERCODE , "string", .T. , .F., 0 , NIL, .F.,.F.) 
cSoap += "</GETTYPEOFPRODUCT>"

oXmlRet := SvcSoapCall(Self,cSoap,; 
	"http://webservices.microsiga.com.br/mtproduct.apw/GETTYPEOFPRODUCT",; 
	"DOCUMENT","http://webservices.microsiga.com.br/mtproduct.apw",,"1.031217",; 
	"http://localhost:8059/ws/MTPRODUCT.apw")

::Init()
::oWSGETTYPEOFPRODUCTRESULT:SoapRecv( WSAdvValue( oXmlRet,"_GETTYPEOFPRODUCTRESPONSE:_GETTYPEOFPRODUCTRESULT","ARRAYOFGENERICSTRUCT",NIL,NIL,NIL,NIL,NIL,NIL) )

END WSMETHOD

oXmlRet := NIL
Return .T.


// WSDL Data Structure ARRAYOFPRODUCTVIEW

WSSTRUCT MTPRODUCT_ARRAYOFPRODUCTVIEW
	WSDATA   oWSPRODUCTVIEW            AS MTPRODUCT_PRODUCTVIEW OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT MTPRODUCT_ARRAYOFPRODUCTVIEW
	::Init()
Return Self

WSMETHOD INIT WSCLIENT MTPRODUCT_ARRAYOFPRODUCTVIEW
	::oWSPRODUCTVIEW       := {} // Array Of  MTPRODUCT_PRODUCTVIEW():New()
Return

WSMETHOD CLONE WSCLIENT MTPRODUCT_ARRAYOFPRODUCTVIEW
	Local oClone := MTPRODUCT_ARRAYOFPRODUCTVIEW():NEW()
	oClone:oWSPRODUCTVIEW := NIL
	If ::oWSPRODUCTVIEW <> NIL 
		oClone:oWSPRODUCTVIEW := {}
		aEval( ::oWSPRODUCTVIEW , { |x| aadd( oClone:oWSPRODUCTVIEW , x:Clone() ) } )
	Endif 
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT MTPRODUCT_ARRAYOFPRODUCTVIEW
	Local nRElem1, oNodes1, nTElem1
	::Init()
	If oResponse = NIL ; Return ; Endif 
	oNodes1 :=  WSAdvValue( oResponse,"_PRODUCTVIEW","PRODUCTVIEW",{},NIL,.T.,"O",NIL,NIL) 
	nTElem1 := len(oNodes1)
	For nRElem1 := 1 to nTElem1 
		If !WSIsNilNode( oNodes1[nRElem1] )
			aadd(::oWSPRODUCTVIEW , MTPRODUCT_PRODUCTVIEW():New() )
			::oWSPRODUCTVIEW[len(::oWSPRODUCTVIEW)]:SoapRecv(oNodes1[nRElem1])
		Endif
	Next
Return

// WSDL Data Structure ARRAYOFBRWHEADER

WSSTRUCT MTPRODUCT_ARRAYOFBRWHEADER
	WSDATA   oWSBRWHEADER              AS MTPRODUCT_BRWHEADER OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT MTPRODUCT_ARRAYOFBRWHEADER
	::Init()
Return Self

WSMETHOD INIT WSCLIENT MTPRODUCT_ARRAYOFBRWHEADER
	::oWSBRWHEADER         := {} // Array Of  MTPRODUCT_BRWHEADER():New()
Return

WSMETHOD CLONE WSCLIENT MTPRODUCT_ARRAYOFBRWHEADER
	Local oClone := MTPRODUCT_ARRAYOFBRWHEADER():NEW()
	oClone:oWSBRWHEADER := NIL
	If ::oWSBRWHEADER <> NIL 
		oClone:oWSBRWHEADER := {}
		aEval( ::oWSBRWHEADER , { |x| aadd( oClone:oWSBRWHEADER , x:Clone() ) } )
	Endif 
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT MTPRODUCT_ARRAYOFBRWHEADER
	Local nRElem1, oNodes1, nTElem1
	::Init()
	If oResponse = NIL ; Return ; Endif 
	oNodes1 :=  WSAdvValue( oResponse,"_BRWHEADER","BRWHEADER",{},NIL,.T.,"O",NIL,NIL) 
	nTElem1 := len(oNodes1)
	For nRElem1 := 1 to nTElem1 
		If !WSIsNilNode( oNodes1[nRElem1] )
			aadd(::oWSBRWHEADER , MTPRODUCT_BRWHEADER():New() )
			::oWSBRWHEADER[len(::oWSBRWHEADER)]:SoapRecv(oNodes1[nRElem1])
		Endif
	Next
Return

// WSDL Data Structure ARRAYOFINVENTORYVIEW

WSSTRUCT MTPRODUCT_ARRAYOFINVENTORYVIEW
	WSDATA   oWSINVENTORYVIEW          AS MTPRODUCT_INVENTORYVIEW OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT MTPRODUCT_ARRAYOFINVENTORYVIEW
	::Init()
Return Self

WSMETHOD INIT WSCLIENT MTPRODUCT_ARRAYOFINVENTORYVIEW
	::oWSINVENTORYVIEW     := {} // Array Of  MTPRODUCT_INVENTORYVIEW():New()
Return

WSMETHOD CLONE WSCLIENT MTPRODUCT_ARRAYOFINVENTORYVIEW
	Local oClone := MTPRODUCT_ARRAYOFINVENTORYVIEW():NEW()
	oClone:oWSINVENTORYVIEW := NIL
	If ::oWSINVENTORYVIEW <> NIL 
		oClone:oWSINVENTORYVIEW := {}
		aEval( ::oWSINVENTORYVIEW , { |x| aadd( oClone:oWSINVENTORYVIEW , x:Clone() ) } )
	Endif 
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT MTPRODUCT_ARRAYOFINVENTORYVIEW
	Local nRElem1, oNodes1, nTElem1
	::Init()
	If oResponse = NIL ; Return ; Endif 
	oNodes1 :=  WSAdvValue( oResponse,"_INVENTORYVIEW","INVENTORYVIEW",{},NIL,.T.,"O",NIL,NIL) 
	nTElem1 := len(oNodes1)
	For nRElem1 := 1 to nTElem1 
		If !WSIsNilNode( oNodes1[nRElem1] )
			aadd(::oWSINVENTORYVIEW , MTPRODUCT_INVENTORYVIEW():New() )
			::oWSINVENTORYVIEW[len(::oWSINVENTORYVIEW)]:SoapRecv(oNodes1[nRElem1])
		Endif
	Next
Return

// WSDL Data Structure ARRAYOFPRICEVIEW

WSSTRUCT MTPRODUCT_ARRAYOFPRICEVIEW
	WSDATA   oWSPRICEVIEW              AS MTPRODUCT_PRICEVIEW OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT MTPRODUCT_ARRAYOFPRICEVIEW
	::Init()
Return Self

WSMETHOD INIT WSCLIENT MTPRODUCT_ARRAYOFPRICEVIEW
	::oWSPRICEVIEW         := {} // Array Of  MTPRODUCT_PRICEVIEW():New()
Return

WSMETHOD CLONE WSCLIENT MTPRODUCT_ARRAYOFPRICEVIEW
	Local oClone := MTPRODUCT_ARRAYOFPRICEVIEW():NEW()
	oClone:oWSPRICEVIEW := NIL
	If ::oWSPRICEVIEW <> NIL 
		oClone:oWSPRICEVIEW := {}
		aEval( ::oWSPRICEVIEW , { |x| aadd( oClone:oWSPRICEVIEW , x:Clone() ) } )
	Endif 
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT MTPRODUCT_ARRAYOFPRICEVIEW
	Local nRElem1, oNodes1, nTElem1
	::Init()
	If oResponse = NIL ; Return ; Endif 
	oNodes1 :=  WSAdvValue( oResponse,"_PRICEVIEW","PRICEVIEW",{},NIL,.T.,"O",NIL,NIL) 
	nTElem1 := len(oNodes1)
	For nRElem1 := 1 to nTElem1 
		If !WSIsNilNode( oNodes1[nRElem1] )
			aadd(::oWSPRICEVIEW , MTPRODUCT_PRICEVIEW():New() )
			::oWSPRICEVIEW[len(::oWSPRICEVIEW)]:SoapRecv(oNodes1[nRElem1])
		Endif
	Next
Return

// WSDL Data Structure ARRAYOFGENERICSTRUCT

WSSTRUCT MTPRODUCT_ARRAYOFGENERICSTRUCT
	WSDATA   oWSGENERICSTRUCT          AS MTPRODUCT_GENERICSTRUCT OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT MTPRODUCT_ARRAYOFGENERICSTRUCT
	::Init()
Return Self

WSMETHOD INIT WSCLIENT MTPRODUCT_ARRAYOFGENERICSTRUCT
	::oWSGENERICSTRUCT     := {} // Array Of  MTPRODUCT_GENERICSTRUCT():New()
Return

WSMETHOD CLONE WSCLIENT MTPRODUCT_ARRAYOFGENERICSTRUCT
	Local oClone := MTPRODUCT_ARRAYOFGENERICSTRUCT():NEW()
	oClone:oWSGENERICSTRUCT := NIL
	If ::oWSGENERICSTRUCT <> NIL 
		oClone:oWSGENERICSTRUCT := {}
		aEval( ::oWSGENERICSTRUCT , { |x| aadd( oClone:oWSGENERICSTRUCT , x:Clone() ) } )
	Endif 
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT MTPRODUCT_ARRAYOFGENERICSTRUCT
	Local nRElem1, oNodes1, nTElem1
	::Init()
	If oResponse = NIL ; Return ; Endif 
	oNodes1 :=  WSAdvValue( oResponse,"_GENERICSTRUCT","GENERICSTRUCT",{},NIL,.T.,"O",NIL,NIL) 
	nTElem1 := len(oNodes1)
	For nRElem1 := 1 to nTElem1 
		If !WSIsNilNode( oNodes1[nRElem1] )
			aadd(::oWSGENERICSTRUCT , MTPRODUCT_GENERICSTRUCT():New() )
			::oWSGENERICSTRUCT[len(::oWSGENERICSTRUCT)]:SoapRecv(oNodes1[nRElem1])
		Endif
	Next
Return

// WSDL Data Structure PRODUCTVIEW

WSSTRUCT MTPRODUCT_PRODUCTVIEW
	WSDATA   cBARCODE                  AS string
	WSDATA   cDESCRIPTION              AS string
	WSDATA   cDESCRIPTIONGROUPOFPRODUCT AS string
	WSDATA   cDESCRIPTIONMEASUREUNIT   AS string
	WSDATA   cDESCRIPTIONSECONDMEASUREUNIT AS string
	WSDATA   cDESCRIPTIONTYPEOFPRODUCT AS string
	WSDATA   nECONOMICLOT              AS float
	WSDATA   nGROSSWEIGHT              AS float
	WSDATA   cGROUPOFPRODUCT           AS string
	WSDATA   nLEADTIME                 AS float
	WSDATA   cMEASUREUNIT              AS string
	WSDATA   nMINIMUMGRADE             AS integer
	WSDATA   nMINIMUMLOT               AS float
	WSDATA   cNCM                      AS string
	WSDATA   nNETWEIGHT                AS float
	WSDATA   nORDERPOINT               AS float
	WSDATA   cPRODUCTCODE              AS string
	WSDATA   nQUANTITYPERPACKAGE       AS float
	WSDATA   cSCIENCEDESCRIPTION       AS string OPTIONAL
	WSDATA   cSECONDMEASUREUNIT        AS string
	WSDATA   cSTANDARDWAREHOUSE        AS string OPTIONAL
	WSDATA   nSTORAGEHEIGHT            AS float
	WSDATA   nSTORAGELENGHT            AS float
	WSDATA   nSTORAGEMAXIMUMPILING     AS float
	WSDATA   nSTORAGEWIDTH             AS float
	WSDATA   nTERMOFVALIDATY           AS integer
	WSDATA   cTYPEOFLEADTIME           AS string
	WSDATA   cTYPEOFPRODUCT            AS string
	WSDATA   oWSUSERFIELDS             AS MTPRODUCT_ARRAYOFUSERFIELD OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT MTPRODUCT_PRODUCTVIEW
	::Init()
Return Self

WSMETHOD INIT WSCLIENT MTPRODUCT_PRODUCTVIEW
Return

WSMETHOD CLONE WSCLIENT MTPRODUCT_PRODUCTVIEW
	Local oClone := MTPRODUCT_PRODUCTVIEW():NEW()
	oClone:cBARCODE             := ::cBARCODE
	oClone:cDESCRIPTION         := ::cDESCRIPTION
	oClone:cDESCRIPTIONGROUPOFPRODUCT := ::cDESCRIPTIONGROUPOFPRODUCT
	oClone:cDESCRIPTIONMEASUREUNIT := ::cDESCRIPTIONMEASUREUNIT
	oClone:cDESCRIPTIONSECONDMEASUREUNIT := ::cDESCRIPTIONSECONDMEASUREUNIT
	oClone:cDESCRIPTIONTYPEOFPRODUCT := ::cDESCRIPTIONTYPEOFPRODUCT
	oClone:nECONOMICLOT         := ::nECONOMICLOT
	oClone:nGROSSWEIGHT         := ::nGROSSWEIGHT
	oClone:cGROUPOFPRODUCT      := ::cGROUPOFPRODUCT
	oClone:nLEADTIME            := ::nLEADTIME
	oClone:cMEASUREUNIT         := ::cMEASUREUNIT
	oClone:nMINIMUMGRADE        := ::nMINIMUMGRADE
	oClone:nMINIMUMLOT          := ::nMINIMUMLOT
	oClone:cNCM                 := ::cNCM
	oClone:nNETWEIGHT           := ::nNETWEIGHT
	oClone:nORDERPOINT          := ::nORDERPOINT
	oClone:cPRODUCTCODE         := ::cPRODUCTCODE
	oClone:nQUANTITYPERPACKAGE  := ::nQUANTITYPERPACKAGE
	oClone:cSCIENCEDESCRIPTION  := ::cSCIENCEDESCRIPTION
	oClone:cSECONDMEASUREUNIT   := ::cSECONDMEASUREUNIT
	oClone:cSTANDARDWAREHOUSE   := ::cSTANDARDWAREHOUSE
	oClone:nSTORAGEHEIGHT       := ::nSTORAGEHEIGHT
	oClone:nSTORAGELENGHT       := ::nSTORAGELENGHT
	oClone:nSTORAGEMAXIMUMPILING := ::nSTORAGEMAXIMUMPILING
	oClone:nSTORAGEWIDTH        := ::nSTORAGEWIDTH
	oClone:nTERMOFVALIDATY      := ::nTERMOFVALIDATY
	oClone:cTYPEOFLEADTIME      := ::cTYPEOFLEADTIME
	oClone:cTYPEOFPRODUCT       := ::cTYPEOFPRODUCT
	oClone:oWSUSERFIELDS        := IIF(::oWSUSERFIELDS = NIL , NIL , ::oWSUSERFIELDS:Clone() )
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT MTPRODUCT_PRODUCTVIEW
	Local oNode29
	::Init()
	If oResponse = NIL ; Return ; Endif 
	::cBARCODE           :=  WSAdvValue( oResponse,"_BARCODE","string",NIL,"Property cBARCODE as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::cDESCRIPTION       :=  WSAdvValue( oResponse,"_DESCRIPTION","string",NIL,"Property cDESCRIPTION as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::cDESCRIPTIONGROUPOFPRODUCT :=  WSAdvValue( oResponse,"_DESCRIPTIONGROUPOFPRODUCT","string",NIL,"Property cDESCRIPTIONGROUPOFPRODUCT as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::cDESCRIPTIONMEASUREUNIT :=  WSAdvValue( oResponse,"_DESCRIPTIONMEASUREUNIT","string",NIL,"Property cDESCRIPTIONMEASUREUNIT as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::cDESCRIPTIONSECONDMEASUREUNIT :=  WSAdvValue( oResponse,"_DESCRIPTIONSECONDMEASUREUNIT","string",NIL,"Property cDESCRIPTIONSECONDMEASUREUNIT as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::cDESCRIPTIONTYPEOFPRODUCT :=  WSAdvValue( oResponse,"_DESCRIPTIONTYPEOFPRODUCT","string",NIL,"Property cDESCRIPTIONTYPEOFPRODUCT as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::nECONOMICLOT       :=  WSAdvValue( oResponse,"_ECONOMICLOT","float",NIL,"Property nECONOMICLOT as s:float on SOAP Response not found.",NIL,"N",NIL,NIL) 
	::nGROSSWEIGHT       :=  WSAdvValue( oResponse,"_GROSSWEIGHT","float",NIL,"Property nGROSSWEIGHT as s:float on SOAP Response not found.",NIL,"N",NIL,NIL) 
	::cGROUPOFPRODUCT    :=  WSAdvValue( oResponse,"_GROUPOFPRODUCT","string",NIL,"Property cGROUPOFPRODUCT as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::nLEADTIME          :=  WSAdvValue( oResponse,"_LEADTIME","float",NIL,"Property nLEADTIME as s:float on SOAP Response not found.",NIL,"N",NIL,NIL) 
	::cMEASUREUNIT       :=  WSAdvValue( oResponse,"_MEASUREUNIT","string",NIL,"Property cMEASUREUNIT as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::nMINIMUMGRADE      :=  WSAdvValue( oResponse,"_MINIMUMGRADE","integer",NIL,"Property nMINIMUMGRADE as s:integer on SOAP Response not found.",NIL,"N",NIL,NIL) 
	::nMINIMUMLOT        :=  WSAdvValue( oResponse,"_MINIMUMLOT","float",NIL,"Property nMINIMUMLOT as s:float on SOAP Response not found.",NIL,"N",NIL,NIL) 
	::cNCM               :=  WSAdvValue( oResponse,"_NCM","string",NIL,"Property cNCM as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::nNETWEIGHT         :=  WSAdvValue( oResponse,"_NETWEIGHT","float",NIL,"Property nNETWEIGHT as s:float on SOAP Response not found.",NIL,"N",NIL,NIL) 
	::nORDERPOINT        :=  WSAdvValue( oResponse,"_ORDERPOINT","float",NIL,"Property nORDERPOINT as s:float on SOAP Response not found.",NIL,"N",NIL,NIL) 
	::cPRODUCTCODE       :=  WSAdvValue( oResponse,"_PRODUCTCODE","string",NIL,"Property cPRODUCTCODE as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::nQUANTITYPERPACKAGE :=  WSAdvValue( oResponse,"_QUANTITYPERPACKAGE","float",NIL,"Property nQUANTITYPERPACKAGE as s:float on SOAP Response not found.",NIL,"N",NIL,NIL) 
	::cSCIENCEDESCRIPTION :=  WSAdvValue( oResponse,"_SCIENCEDESCRIPTION","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cSECONDMEASUREUNIT :=  WSAdvValue( oResponse,"_SECONDMEASUREUNIT","string",NIL,"Property cSECONDMEASUREUNIT as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::cSTANDARDWAREHOUSE :=  WSAdvValue( oResponse,"_STANDARDWAREHOUSE","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::nSTORAGEHEIGHT     :=  WSAdvValue( oResponse,"_STORAGEHEIGHT","float",NIL,"Property nSTORAGEHEIGHT as s:float on SOAP Response not found.",NIL,"N",NIL,NIL) 
	::nSTORAGELENGHT     :=  WSAdvValue( oResponse,"_STORAGELENGHT","float",NIL,"Property nSTORAGELENGHT as s:float on SOAP Response not found.",NIL,"N",NIL,NIL) 
	::nSTORAGEMAXIMUMPILING :=  WSAdvValue( oResponse,"_STORAGEMAXIMUMPILING","float",NIL,"Property nSTORAGEMAXIMUMPILING as s:float on SOAP Response not found.",NIL,"N",NIL,NIL) 
	::nSTORAGEWIDTH      :=  WSAdvValue( oResponse,"_STORAGEWIDTH","float",NIL,"Property nSTORAGEWIDTH as s:float on SOAP Response not found.",NIL,"N",NIL,NIL) 
	::nTERMOFVALIDATY    :=  WSAdvValue( oResponse,"_TERMOFVALIDATY","integer",NIL,"Property nTERMOFVALIDATY as s:integer on SOAP Response not found.",NIL,"N",NIL,NIL) 
	::cTYPEOFLEADTIME    :=  WSAdvValue( oResponse,"_TYPEOFLEADTIME","string",NIL,"Property cTYPEOFLEADTIME as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::cTYPEOFPRODUCT     :=  WSAdvValue( oResponse,"_TYPEOFPRODUCT","string",NIL,"Property cTYPEOFPRODUCT as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	oNode29 :=  WSAdvValue( oResponse,"_USERFIELDS","ARRAYOFUSERFIELD",NIL,NIL,NIL,"O",NIL,NIL) 
	If oNode29 != NIL
		::oWSUSERFIELDS := MTPRODUCT_ARRAYOFUSERFIELD():New()
		::oWSUSERFIELDS:SoapRecv(oNode29)
	EndIf
Return

// WSDL Data Structure BRWHEADER

WSSTRUCT MTPRODUCT_BRWHEADER
	WSDATA   cHEADERCOMBOBOX           AS string OPTIONAL
	WSDATA   nHEADERDEC                AS integer
	WSDATA   cHEADERF3                 AS string OPTIONAL
	WSDATA   cHEADERFIELD              AS string
	WSDATA   lHEADEROBLIG              AS boolean OPTIONAL
	WSDATA   cHEADERPICTURE            AS string
	WSDATA   nHEADERSIZE               AS integer
	WSDATA   cHEADERTITLE              AS string
	WSDATA   cHEADERTYPE               AS string
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT MTPRODUCT_BRWHEADER
	::Init()
Return Self

WSMETHOD INIT WSCLIENT MTPRODUCT_BRWHEADER
Return

WSMETHOD CLONE WSCLIENT MTPRODUCT_BRWHEADER
	Local oClone := MTPRODUCT_BRWHEADER():NEW()
	oClone:cHEADERCOMBOBOX      := ::cHEADERCOMBOBOX
	oClone:nHEADERDEC           := ::nHEADERDEC
	oClone:cHEADERF3            := ::cHEADERF3
	oClone:cHEADERFIELD         := ::cHEADERFIELD
	oClone:lHEADEROBLIG         := ::lHEADEROBLIG
	oClone:cHEADERPICTURE       := ::cHEADERPICTURE
	oClone:nHEADERSIZE          := ::nHEADERSIZE
	oClone:cHEADERTITLE         := ::cHEADERTITLE
	oClone:cHEADERTYPE          := ::cHEADERTYPE
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT MTPRODUCT_BRWHEADER
	::Init()
	If oResponse = NIL ; Return ; Endif 
	::cHEADERCOMBOBOX    :=  WSAdvValue( oResponse,"_HEADERCOMBOBOX","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::nHEADERDEC         :=  WSAdvValue( oResponse,"_HEADERDEC","integer",NIL,"Property nHEADERDEC as s:integer on SOAP Response not found.",NIL,"N",NIL,NIL) 
	::cHEADERF3          :=  WSAdvValue( oResponse,"_HEADERF3","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cHEADERFIELD       :=  WSAdvValue( oResponse,"_HEADERFIELD","string",NIL,"Property cHEADERFIELD as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::lHEADEROBLIG       :=  WSAdvValue( oResponse,"_HEADEROBLIG","boolean",NIL,NIL,NIL,"L",NIL,NIL) 
	::cHEADERPICTURE     :=  WSAdvValue( oResponse,"_HEADERPICTURE","string",NIL,"Property cHEADERPICTURE as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::nHEADERSIZE        :=  WSAdvValue( oResponse,"_HEADERSIZE","integer",NIL,"Property nHEADERSIZE as s:integer on SOAP Response not found.",NIL,"N",NIL,NIL) 
	::cHEADERTITLE       :=  WSAdvValue( oResponse,"_HEADERTITLE","string",NIL,"Property cHEADERTITLE as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::cHEADERTYPE        :=  WSAdvValue( oResponse,"_HEADERTYPE","string",NIL,"Property cHEADERTYPE as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
Return

// WSDL Data Structure INVENTORYVIEW

WSSTRUCT MTPRODUCT_INVENTORYVIEW
	WSDATA   nCOST                     AS float
	WSDATA   nCURRENCY                 AS integer
	WSDATA   cCURRENCYSIMBOL           AS string
	WSDATA   cDESCRIPTIONTYPEOFBALANCE AS string
	WSDATA   cPRODUCTCODE              AS string
	WSDATA   nQUANTITY                 AS float
	WSDATA   nTYPEOFBALANCE            AS integer
	WSDATA   oWSUSERFIELDS             AS MTPRODUCT_ARRAYOFUSERFIELD OPTIONAL
	WSDATA   cWAREHOUSE                AS string OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT MTPRODUCT_INVENTORYVIEW
	::Init()
Return Self

WSMETHOD INIT WSCLIENT MTPRODUCT_INVENTORYVIEW
Return

WSMETHOD CLONE WSCLIENT MTPRODUCT_INVENTORYVIEW
	Local oClone := MTPRODUCT_INVENTORYVIEW():NEW()
	oClone:nCOST                := ::nCOST
	oClone:nCURRENCY            := ::nCURRENCY
	oClone:cCURRENCYSIMBOL      := ::cCURRENCYSIMBOL
	oClone:cDESCRIPTIONTYPEOFBALANCE := ::cDESCRIPTIONTYPEOFBALANCE
	oClone:cPRODUCTCODE         := ::cPRODUCTCODE
	oClone:nQUANTITY            := ::nQUANTITY
	oClone:nTYPEOFBALANCE       := ::nTYPEOFBALANCE
	oClone:oWSUSERFIELDS        := IIF(::oWSUSERFIELDS = NIL , NIL , ::oWSUSERFIELDS:Clone() )
	oClone:cWAREHOUSE           := ::cWAREHOUSE
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT MTPRODUCT_INVENTORYVIEW
	Local oNode8
	::Init()
	If oResponse = NIL ; Return ; Endif 
	::nCOST              :=  WSAdvValue( oResponse,"_COST","float",NIL,"Property nCOST as s:float on SOAP Response not found.",NIL,"N",NIL,NIL) 
	::nCURRENCY          :=  WSAdvValue( oResponse,"_CURRENCY","integer",NIL,"Property nCURRENCY as s:integer on SOAP Response not found.",NIL,"N",NIL,NIL) 
	::cCURRENCYSIMBOL    :=  WSAdvValue( oResponse,"_CURRENCYSIMBOL","string",NIL,"Property cCURRENCYSIMBOL as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::cDESCRIPTIONTYPEOFBALANCE :=  WSAdvValue( oResponse,"_DESCRIPTIONTYPEOFBALANCE","string",NIL,"Property cDESCRIPTIONTYPEOFBALANCE as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::cPRODUCTCODE       :=  WSAdvValue( oResponse,"_PRODUCTCODE","string",NIL,"Property cPRODUCTCODE as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::nQUANTITY          :=  WSAdvValue( oResponse,"_QUANTITY","float",NIL,"Property nQUANTITY as s:float on SOAP Response not found.",NIL,"N",NIL,NIL) 
	::nTYPEOFBALANCE     :=  WSAdvValue( oResponse,"_TYPEOFBALANCE","integer",NIL,"Property nTYPEOFBALANCE as s:integer on SOAP Response not found.",NIL,"N",NIL,NIL) 
	oNode8 :=  WSAdvValue( oResponse,"_USERFIELDS","ARRAYOFUSERFIELD",NIL,NIL,NIL,"O",NIL,NIL) 
	If oNode8 != NIL
		::oWSUSERFIELDS := MTPRODUCT_ARRAYOFUSERFIELD():New()
		::oWSUSERFIELDS:SoapRecv(oNode8)
	EndIf
	::cWAREHOUSE         :=  WSAdvValue( oResponse,"_WAREHOUSE","string",NIL,NIL,NIL,"S",NIL,NIL) 
Return

// WSDL Data Structure PRICEVIEW

WSSTRUCT MTPRODUCT_PRICEVIEW
	WSDATA   nCURRENCY                 AS integer
	WSDATA   cCURRENCYSIMBOL           AS string
	WSDATA   nDISCOUNTVALUE            AS float OPTIONAL
	WSDATA   cPAYMENTPLANCODE          AS string OPTIONAL
	WSDATA   nPRICE                    AS float
	WSDATA   cPRICETABLECODE           AS string
	WSDATA   cPRODUCTCODE              AS string
	WSDATA   nQUANTITYLIMIT            AS float OPTIONAL
	WSDATA   oWSUSERFIELDS             AS MTPRODUCT_ARRAYOFUSERFIELD OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT MTPRODUCT_PRICEVIEW
	::Init()
Return Self

WSMETHOD INIT WSCLIENT MTPRODUCT_PRICEVIEW
Return

WSMETHOD CLONE WSCLIENT MTPRODUCT_PRICEVIEW
	Local oClone := MTPRODUCT_PRICEVIEW():NEW()
	oClone:nCURRENCY            := ::nCURRENCY
	oClone:cCURRENCYSIMBOL      := ::cCURRENCYSIMBOL
	oClone:nDISCOUNTVALUE       := ::nDISCOUNTVALUE
	oClone:cPAYMENTPLANCODE     := ::cPAYMENTPLANCODE
	oClone:nPRICE               := ::nPRICE
	oClone:cPRICETABLECODE      := ::cPRICETABLECODE
	oClone:cPRODUCTCODE         := ::cPRODUCTCODE
	oClone:nQUANTITYLIMIT       := ::nQUANTITYLIMIT
	oClone:oWSUSERFIELDS        := IIF(::oWSUSERFIELDS = NIL , NIL , ::oWSUSERFIELDS:Clone() )
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT MTPRODUCT_PRICEVIEW
	Local oNode9
	::Init()
	If oResponse = NIL ; Return ; Endif 
	::nCURRENCY          :=  WSAdvValue( oResponse,"_CURRENCY","integer",NIL,"Property nCURRENCY as s:integer on SOAP Response not found.",NIL,"N",NIL,NIL) 
	::cCURRENCYSIMBOL    :=  WSAdvValue( oResponse,"_CURRENCYSIMBOL","string",NIL,"Property cCURRENCYSIMBOL as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::nDISCOUNTVALUE     :=  WSAdvValue( oResponse,"_DISCOUNTVALUE","float",NIL,NIL,NIL,"N",NIL,NIL) 
	::cPAYMENTPLANCODE   :=  WSAdvValue( oResponse,"_PAYMENTPLANCODE","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::nPRICE             :=  WSAdvValue( oResponse,"_PRICE","float",NIL,"Property nPRICE as s:float on SOAP Response not found.",NIL,"N",NIL,NIL) 
	::cPRICETABLECODE    :=  WSAdvValue( oResponse,"_PRICETABLECODE","string",NIL,"Property cPRICETABLECODE as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::cPRODUCTCODE       :=  WSAdvValue( oResponse,"_PRODUCTCODE","string",NIL,"Property cPRODUCTCODE as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::nQUANTITYLIMIT     :=  WSAdvValue( oResponse,"_QUANTITYLIMIT","float",NIL,NIL,NIL,"N",NIL,NIL) 
	oNode9 :=  WSAdvValue( oResponse,"_USERFIELDS","ARRAYOFUSERFIELD",NIL,NIL,NIL,"O",NIL,NIL) 
	If oNode9 != NIL
		::oWSUSERFIELDS := MTPRODUCT_ARRAYOFUSERFIELD():New()
		::oWSUSERFIELDS:SoapRecv(oNode9)
	EndIf
Return

// WSDL Data Structure GENERICSTRUCT

WSSTRUCT MTPRODUCT_GENERICSTRUCT
	WSDATA   cCODE                     AS string
	WSDATA   cDESCRIPTION              AS string
	WSDATA   nVALUE                    AS float OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT MTPRODUCT_GENERICSTRUCT
	::Init()
Return Self

WSMETHOD INIT WSCLIENT MTPRODUCT_GENERICSTRUCT
Return

WSMETHOD CLONE WSCLIENT MTPRODUCT_GENERICSTRUCT
	Local oClone := MTPRODUCT_GENERICSTRUCT():NEW()
	oClone:cCODE                := ::cCODE
	oClone:cDESCRIPTION         := ::cDESCRIPTION
	oClone:nVALUE               := ::nVALUE
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT MTPRODUCT_GENERICSTRUCT
	::Init()
	If oResponse = NIL ; Return ; Endif 
	::cCODE              :=  WSAdvValue( oResponse,"_CODE","string",NIL,"Property cCODE as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::cDESCRIPTION       :=  WSAdvValue( oResponse,"_DESCRIPTION","string",NIL,"Property cDESCRIPTION as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::nVALUE             :=  WSAdvValue( oResponse,"_VALUE","float",NIL,NIL,NIL,"N",NIL,NIL) 
Return

// WSDL Data Structure ARRAYOFUSERFIELD

WSSTRUCT MTPRODUCT_ARRAYOFUSERFIELD
	WSDATA   oWSUSERFIELD              AS MTPRODUCT_USERFIELD OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT MTPRODUCT_ARRAYOFUSERFIELD
	::Init()
Return Self

WSMETHOD INIT WSCLIENT MTPRODUCT_ARRAYOFUSERFIELD
	::oWSUSERFIELD         := {} // Array Of  MTPRODUCT_USERFIELD():New()
Return

WSMETHOD CLONE WSCLIENT MTPRODUCT_ARRAYOFUSERFIELD
	Local oClone := MTPRODUCT_ARRAYOFUSERFIELD():NEW()
	oClone:oWSUSERFIELD := NIL
	If ::oWSUSERFIELD <> NIL 
		oClone:oWSUSERFIELD := {}
		aEval( ::oWSUSERFIELD , { |x| aadd( oClone:oWSUSERFIELD , x:Clone() ) } )
	Endif 
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT MTPRODUCT_ARRAYOFUSERFIELD
	Local nRElem1, oNodes1, nTElem1
	::Init()
	If oResponse = NIL ; Return ; Endif 
	oNodes1 :=  WSAdvValue( oResponse,"_USERFIELD","USERFIELD",{},NIL,.T.,"O",NIL,NIL) 
	nTElem1 := len(oNodes1)
	For nRElem1 := 1 to nTElem1 
		If !WSIsNilNode( oNodes1[nRElem1] )
			aadd(::oWSUSERFIELD , MTPRODUCT_USERFIELD():New() )
			::oWSUSERFIELD[len(::oWSUSERFIELD)]:SoapRecv(oNodes1[nRElem1])
		Endif
	Next
Return

// WSDL Data Structure USERFIELD

WSSTRUCT MTPRODUCT_USERFIELD
	WSDATA   cUSERCOMBOBOX             AS string OPTIONAL
	WSDATA   nUSERDEC                  AS integer OPTIONAL
	WSDATA   cUSERF3                   AS string OPTIONAL
	WSDATA   cUSERNAME                 AS string
	WSDATA   lUSEROBLIG                AS boolean OPTIONAL
	WSDATA   cUSERPICTURE              AS string OPTIONAL
	WSDATA   nUSERSIZE                 AS integer OPTIONAL
	WSDATA   cUSERTAG                  AS string OPTIONAL
	WSDATA   cUSERTITLE                AS string OPTIONAL
	WSDATA   cUSERTYPE                 AS string
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT MTPRODUCT_USERFIELD
	::Init()
Return Self

WSMETHOD INIT WSCLIENT MTPRODUCT_USERFIELD
Return

WSMETHOD CLONE WSCLIENT MTPRODUCT_USERFIELD
	Local oClone := MTPRODUCT_USERFIELD():NEW()
	oClone:cUSERCOMBOBOX        := ::cUSERCOMBOBOX
	oClone:nUSERDEC             := ::nUSERDEC
	oClone:cUSERF3              := ::cUSERF3
	oClone:cUSERNAME            := ::cUSERNAME
	oClone:lUSEROBLIG           := ::lUSEROBLIG
	oClone:cUSERPICTURE         := ::cUSERPICTURE
	oClone:nUSERSIZE            := ::nUSERSIZE
	oClone:cUSERTAG             := ::cUSERTAG
	oClone:cUSERTITLE           := ::cUSERTITLE
	oClone:cUSERTYPE            := ::cUSERTYPE
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT MTPRODUCT_USERFIELD
	::Init()
	If oResponse = NIL ; Return ; Endif 
	::cUSERCOMBOBOX      :=  WSAdvValue( oResponse,"_USERCOMBOBOX","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::nUSERDEC           :=  WSAdvValue( oResponse,"_USERDEC","integer",NIL,NIL,NIL,"N",NIL,NIL) 
	::cUSERF3            :=  WSAdvValue( oResponse,"_USERF3","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cUSERNAME          :=  WSAdvValue( oResponse,"_USERNAME","string",NIL,"Property cUSERNAME as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::lUSEROBLIG         :=  WSAdvValue( oResponse,"_USEROBLIG","boolean",NIL,NIL,NIL,"L",NIL,NIL) 
	::cUSERPICTURE       :=  WSAdvValue( oResponse,"_USERPICTURE","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::nUSERSIZE          :=  WSAdvValue( oResponse,"_USERSIZE","integer",NIL,NIL,NIL,"N",NIL,NIL) 
	::cUSERTAG           :=  WSAdvValue( oResponse,"_USERTAG","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cUSERTITLE         :=  WSAdvValue( oResponse,"_USERTITLE","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cUSERTYPE          :=  WSAdvValue( oResponse,"_USERTYPE","string",NIL,"Property cUSERTYPE as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
Return


