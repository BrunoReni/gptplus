#INCLUDE "PROTHEUS.CH"
#INCLUDE "APWEBSRV.CH"

/* ===============================================================================
WSDL Location    http://localhost/ws/FSINSTALLBASE.APW?WSDL
Gerado em        06/27/05 09:34:17
Observações      Código-Fonte gerado por ADVPL WSDL Client 1.050513
                 Alterações neste arquivo podem causar funcionamento incorreto
                 e serão perdidas caso o código-fonte seja gerado novamente.
=============================================================================== */

User Function _JZJDMFC ; Return  // "dummy" function - Internal Use 

/* -------------------------------------------------------------------------------
WSDL Service WSFSINSTALLBASE
------------------------------------------------------------------------------- */

WSCLIENT WSFSINSTALLBASE

	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD RESET
	WSMETHOD CLONE
	WSMETHOD BRWINSTALLBASE
	WSMETHOD DELINSTALLBASE
	WSMETHOD GETHEADER
	WSMETHOD GETINSTALLBASE
	WSMETHOD PUTINSTALLBASE

	WSDATA   _URL                      AS String
	WSDATA   cUSERCODE                 AS string
	WSDATA   cCUSTOMERID               AS string
	WSDATA   cPRODUCTCODE              AS string
	WSDATA   cINDEXKEY                 AS string
	WSDATA   cQUERYADDWHERE            AS string
	WSDATA   oWSBRWINSTALLBASERESULT   AS FSINSTALLBASE_ARRAYOFEQUIPMENTVIEW
	WSDATA   oWSINSTALLBASE            AS FSINSTALLBASE_INSTALLBASEVIEW
	WSDATA   lDELINSTALLBASERESULT     AS boolean
	WSDATA   cHEADERTYPE               AS string
	WSDATA   oWSGETHEADERRESULT        AS FSINSTALLBASE_ARRAYOFBRWHEADER
	WSDATA   cSERIALNUMBER             AS string
	WSDATA   cMANUFACTURERCODE         AS string
	WSDATA   cUNITMANUFACTURERCODE     AS string
	WSDATA   oWSGETINSTALLBASERESULT   AS FSINSTALLBASE_INSTALLBASEVIEW
	WSDATA   lPUTINSTALLBASERESULT     AS boolean

	// Estruturas mantidas por compatibilidade - NÃO USAR
	WSDATA   oWSINSTALLBASEVIEW        AS FSINSTALLBASE_INSTALLBASEVIEW

ENDWSCLIENT

WSMETHOD NEW WSCLIENT WSFSINSTALLBASE
::Init()
If !FindFunction("XMLCHILDEX")
	UserException("O Código-Fonte Client atual requer os executáveis do Protheus Build [7.00.050331A] ou superior. Atualize o Protheus ou gere o Código-Fonte novamente utilizando o Build atual.")
EndIf
Return Self

WSMETHOD INIT WSCLIENT WSFSINSTALLBASE
	::oWSBRWINSTALLBASERESULT := FSINSTALLBASE_ARRAYOFEQUIPMENTVIEW():New()
	::oWSINSTALLBASE     := FSINSTALLBASE_INSTALLBASEVIEW():New()
	::oWSGETHEADERRESULT := FSINSTALLBASE_ARRAYOFBRWHEADER():New()
	::oWSGETINSTALLBASERESULT := FSINSTALLBASE_INSTALLBASEVIEW():New()

	// Estruturas mantidas por compatibilidade - NÃO USAR
	::oWSINSTALLBASEVIEW := ::oWSINSTALLBASE
Return

WSMETHOD RESET WSCLIENT WSFSINSTALLBASE
	::cUSERCODE          := NIL 
	::cCUSTOMERID        := NIL 
	::cPRODUCTCODE       := NIL 
	::cINDEXKEY          := NIL 
	::cQUERYADDWHERE     := NIL 
	::oWSBRWINSTALLBASERESULT := NIL 
	::oWSINSTALLBASE     := NIL 
	::lDELINSTALLBASERESULT := NIL 
	::cHEADERTYPE        := NIL 
	::oWSGETHEADERRESULT := NIL 
	::cSERIALNUMBER      := NIL 
	::cMANUFACTURERCODE  := NIL 
	::cUNITMANUFACTURERCODE := NIL 
	::oWSGETINSTALLBASERESULT := NIL 
	::lPUTINSTALLBASERESULT := NIL 

	// Estruturas mantidas por compatibilidade - NÃO USAR
	::oWSINSTALLBASEVIEW := NIL
	::Init()
Return

WSMETHOD CLONE WSCLIENT WSFSINSTALLBASE
Local oClone := WSFSINSTALLBASE():New()
	oClone:_URL          := ::_URL 
	oClone:cUSERCODE     := ::cUSERCODE
	oClone:cCUSTOMERID   := ::cCUSTOMERID
	oClone:cPRODUCTCODE  := ::cPRODUCTCODE
	oClone:cINDEXKEY     := ::cINDEXKEY
	oClone:cQUERYADDWHERE := ::cQUERYADDWHERE
	oClone:oWSBRWINSTALLBASERESULT :=  IIF(::oWSBRWINSTALLBASERESULT = NIL , NIL ,::oWSBRWINSTALLBASERESULT:Clone() )
	oClone:oWSINSTALLBASE :=  IIF(::oWSINSTALLBASE = NIL , NIL ,::oWSINSTALLBASE:Clone() )
	oClone:lDELINSTALLBASERESULT := ::lDELINSTALLBASERESULT
	oClone:cHEADERTYPE   := ::cHEADERTYPE
	oClone:oWSGETHEADERRESULT :=  IIF(::oWSGETHEADERRESULT = NIL , NIL ,::oWSGETHEADERRESULT:Clone() )
	oClone:cSERIALNUMBER := ::cSERIALNUMBER
	oClone:cMANUFACTURERCODE := ::cMANUFACTURERCODE
	oClone:cUNITMANUFACTURERCODE := ::cUNITMANUFACTURERCODE
	oClone:oWSGETINSTALLBASERESULT :=  IIF(::oWSGETINSTALLBASERESULT = NIL , NIL ,::oWSGETINSTALLBASERESULT:Clone() )
	oClone:lPUTINSTALLBASERESULT := ::lPUTINSTALLBASERESULT

	// Estruturas mantidas por compatibilidade - NÃO USAR
	oClone:oWSINSTALLBASEVIEW := oClone:oWSINSTALLBASE
Return oClone

/* -------------------------------------------------------------------------------
WSDL Method BRWINSTALLBASE of Service WSFSINSTALLBASE
------------------------------------------------------------------------------- */

WSMETHOD BRWINSTALLBASE WSSEND cUSERCODE,cCUSTOMERID,cPRODUCTCODE,cINDEXKEY,cQUERYADDWHERE WSRECEIVE oWSBRWINSTALLBASERESULT WSCLIENT WSFSINSTALLBASE
Local cSoap := "" , oXmlRet

BEGIN WSMETHOD

cSoap += '<BRWINSTALLBASE xmlns="http://webservices.microsiga.com.br/fsinstallbase.apw">'
cSoap += WSSoapValue("USERCODE", ::cUSERCODE, cUSERCODE , "string", .T. , .F., 0 ) 
cSoap += WSSoapValue("CUSTOMERID", ::cCUSTOMERID, cCUSTOMERID , "string", .F. , .F., 0 ) 
cSoap += WSSoapValue("PRODUCTCODE", ::cPRODUCTCODE, cPRODUCTCODE , "string", .F. , .F., 0 ) 
cSoap += WSSoapValue("INDEXKEY", ::cINDEXKEY, cINDEXKEY , "string", .F. , .F., 0 ) 
cSoap += WSSoapValue("QUERYADDWHERE", ::cQUERYADDWHERE, cQUERYADDWHERE , "string", .F. , .F., 0 ) 
cSoap += "</BRWINSTALLBASE>"

oXmlRet := SvcSoapCall(	Self,cSoap,; 
	"http://webservices.microsiga.com.br/fsinstallbase.apw/BRWINSTALLBASE",; 
	"DOCUMENT","http://webservices.microsiga.com.br/fsinstallbase.apw",,"1.031217",; 
	"http://localhost/ws/FSINSTALLBASE.apw")

::Init()
::oWSBRWINSTALLBASERESULT:SoapRecv( WSAdvValue( oXmlRet,"_BRWINSTALLBASERESPONSE:_BRWINSTALLBASERESULT","ARRAYOFEQUIPMENTVIEW",NIL,NIL,NIL,NIL,NIL) )

END WSMETHOD

oXmlRet := NIL
Return .T.

/* -------------------------------------------------------------------------------
WSDL Method DELINSTALLBASE of Service WSFSINSTALLBASE
------------------------------------------------------------------------------- */

WSMETHOD DELINSTALLBASE WSSEND cUSERCODE,oWSINSTALLBASE WSRECEIVE lDELINSTALLBASERESULT WSCLIENT WSFSINSTALLBASE
Local cSoap := "" , oXmlRet

BEGIN WSMETHOD

cSoap += '<DELINSTALLBASE xmlns="http://webservices.microsiga.com.br/fsinstallbase.apw">'
cSoap += WSSoapValue("USERCODE", ::cUSERCODE, cUSERCODE , "string", .T. , .F., 0 ) 
cSoap += WSSoapValue("INSTALLBASE", ::oWSINSTALLBASE, oWSINSTALLBASE , "INSTALLBASEVIEW", .T. , .F., 0 ) 
cSoap += "</DELINSTALLBASE>"

oXmlRet := SvcSoapCall(	Self,cSoap,; 
	"http://webservices.microsiga.com.br/fsinstallbase.apw/DELINSTALLBASE",; 
	"DOCUMENT","http://webservices.microsiga.com.br/fsinstallbase.apw",,"1.031217",; 
	"http://localhost/ws/FSINSTALLBASE.apw")

::Init()
::lDELINSTALLBASERESULT :=  WSAdvValue( oXmlRet,"_DELINSTALLBASERESPONSE:_DELINSTALLBASERESULT:TEXT","boolean",NIL,NIL,NIL,NIL,NIL) 

END WSMETHOD

oXmlRet := NIL
Return .T.

/* -------------------------------------------------------------------------------
WSDL Method GETHEADER of Service WSFSINSTALLBASE
------------------------------------------------------------------------------- */

WSMETHOD GETHEADER WSSEND cHEADERTYPE WSRECEIVE oWSGETHEADERRESULT WSCLIENT WSFSINSTALLBASE
Local cSoap := "" , oXmlRet

BEGIN WSMETHOD

cSoap += '<GETHEADER xmlns="http://webservices.microsiga.com.br/fsinstallbase.apw">'
cSoap += WSSoapValue("HEADERTYPE", ::cHEADERTYPE, cHEADERTYPE , "string", .T. , .F., 0 ) 
cSoap += "</GETHEADER>"

oXmlRet := SvcSoapCall(	Self,cSoap,; 
	"http://webservices.microsiga.com.br/fsinstallbase.apw/GETHEADER",; 
	"DOCUMENT","http://webservices.microsiga.com.br/fsinstallbase.apw",,"1.031217",; 
	"http://localhost/ws/FSINSTALLBASE.apw")

::Init()
::oWSGETHEADERRESULT:SoapRecv( WSAdvValue( oXmlRet,"_GETHEADERRESPONSE:_GETHEADERRESULT","ARRAYOFBRWHEADER",NIL,NIL,NIL,NIL,NIL) )

END WSMETHOD

oXmlRet := NIL
Return .T.

/* -------------------------------------------------------------------------------
WSDL Method GETINSTALLBASE of Service WSFSINSTALLBASE
------------------------------------------------------------------------------- */

WSMETHOD GETINSTALLBASE WSSEND cUSERCODE,cPRODUCTCODE,cSERIALNUMBER,cMANUFACTURERCODE,cUNITMANUFACTURERCODE WSRECEIVE oWSGETINSTALLBASERESULT WSCLIENT WSFSINSTALLBASE
Local cSoap := "" , oXmlRet

BEGIN WSMETHOD

cSoap += '<GETINSTALLBASE xmlns="http://webservices.microsiga.com.br/fsinstallbase.apw">'
cSoap += WSSoapValue("USERCODE", ::cUSERCODE, cUSERCODE , "string", .T. , .F., 0 ) 
cSoap += WSSoapValue("PRODUCTCODE", ::cPRODUCTCODE, cPRODUCTCODE , "string", .F. , .F., 0 ) 
cSoap += WSSoapValue("SERIALNUMBER", ::cSERIALNUMBER, cSERIALNUMBER , "string", .T. , .F., 0 ) 
cSoap += WSSoapValue("MANUFACTURERCODE", ::cMANUFACTURERCODE, cMANUFACTURERCODE , "string", .T. , .F., 0 ) 
cSoap += WSSoapValue("UNITMANUFACTURERCODE", ::cUNITMANUFACTURERCODE, cUNITMANUFACTURERCODE , "string", .T. , .F., 0 ) 
cSoap += "</GETINSTALLBASE>"

oXmlRet := SvcSoapCall(	Self,cSoap,; 
	"http://webservices.microsiga.com.br/fsinstallbase.apw/GETINSTALLBASE",; 
	"DOCUMENT","http://webservices.microsiga.com.br/fsinstallbase.apw",,"1.031217",; 
	"http://localhost/ws/FSINSTALLBASE.apw")

::Init()
::oWSGETINSTALLBASERESULT:SoapRecv( WSAdvValue( oXmlRet,"_GETINSTALLBASERESPONSE:_GETINSTALLBASERESULT","INSTALLBASEVIEW",NIL,NIL,NIL,NIL,NIL) )

END WSMETHOD

oXmlRet := NIL
Return .T.

/* -------------------------------------------------------------------------------
WSDL Method PUTINSTALLBASE of Service WSFSINSTALLBASE
------------------------------------------------------------------------------- */

WSMETHOD PUTINSTALLBASE WSSEND cUSERCODE,oWSINSTALLBASE WSRECEIVE lPUTINSTALLBASERESULT WSCLIENT WSFSINSTALLBASE
Local cSoap := "" , oXmlRet

BEGIN WSMETHOD

cSoap += '<PUTINSTALLBASE xmlns="http://webservices.microsiga.com.br/fsinstallbase.apw">'
cSoap += WSSoapValue("USERCODE", ::cUSERCODE, cUSERCODE , "string", .T. , .F., 0 ) 
cSoap += WSSoapValue("INSTALLBASE", ::oWSINSTALLBASE, oWSINSTALLBASE , "INSTALLBASEVIEW", .T. , .F., 0 ) 
cSoap += "</PUTINSTALLBASE>"

oXmlRet := SvcSoapCall(	Self,cSoap,; 
	"http://webservices.microsiga.com.br/fsinstallbase.apw/PUTINSTALLBASE",; 
	"DOCUMENT","http://webservices.microsiga.com.br/fsinstallbase.apw",,"1.031217",; 
	"http://localhost/ws/FSINSTALLBASE.apw")

::Init()
::lPUTINSTALLBASERESULT :=  WSAdvValue( oXmlRet,"_PUTINSTALLBASERESPONSE:_PUTINSTALLBASERESULT:TEXT","boolean",NIL,NIL,NIL,NIL,NIL) 

END WSMETHOD

oXmlRet := NIL
Return .T.


/* -------------------------------------------------------------------------------
WSDL Data Structure ARRAYOFEQUIPMENTVIEW
------------------------------------------------------------------------------- */

WSSTRUCT FSINSTALLBASE_ARRAYOFEQUIPMENTVIEW
	WSDATA   oWSEQUIPMENTVIEW          AS FSINSTALLBASE_EQUIPMENTVIEW OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT FSINSTALLBASE_ARRAYOFEQUIPMENTVIEW
	::Init()
Return Self

WSMETHOD INIT WSCLIENT FSINSTALLBASE_ARRAYOFEQUIPMENTVIEW
	::oWSEQUIPMENTVIEW     := {} // Array Of  FSINSTALLBASE_EQUIPMENTVIEW():New()
Return

WSMETHOD CLONE WSCLIENT FSINSTALLBASE_ARRAYOFEQUIPMENTVIEW
	Local oClone := FSINSTALLBASE_ARRAYOFEQUIPMENTVIEW():NEW()
	oClone:oWSEQUIPMENTVIEW := NIL
	If ::oWSEQUIPMENTVIEW <> NIL 
		oClone:oWSEQUIPMENTVIEW := {}
		aEval( ::oWSEQUIPMENTVIEW , { |x| aadd( oClone:oWSEQUIPMENTVIEW , x:Clone() ) } )
	Endif 
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT FSINSTALLBASE_ARRAYOFEQUIPMENTVIEW
	Local nRElem1, oNodes1, nTElem1
	::Init()
	If oResponse = NIL ; Return ; Endif 
	oNodes1 :=  WSAdvValue( oResponse,"_EQUIPMENTVIEW","EQUIPMENTVIEW",{},NIL,.T.,"O",NIL) 
	nTElem1 := len(oNodes1)
	For nRElem1 := 1 to nTElem1 
		If !WSIsNilNode( oNodes1[nRElem1] )
			aadd(::oWSEQUIPMENTVIEW , FSINSTALLBASE_EQUIPMENTVIEW():New() )
			::oWSEQUIPMENTVIEW[len(::oWSEQUIPMENTVIEW)]:SoapRecv(oNodes1[nRElem1])
		Endif
	Next
Return

/* -------------------------------------------------------------------------------
WSDL Data Structure INSTALLBASEVIEW
------------------------------------------------------------------------------- */

WSSTRUCT FSINSTALLBASE_INSTALLBASEVIEW
	WSDATA   oWSACCESSORIES            AS FSINSTALLBASE_ARRAYOFACCESSORYVIEW OPTIONAL
	WSDATA   oWSEQUIPMENT              AS FSINSTALLBASE_EQUIPMENTVIEW
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPSEND
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT FSINSTALLBASE_INSTALLBASEVIEW
	::Init()
Return Self

WSMETHOD INIT WSCLIENT FSINSTALLBASE_INSTALLBASEVIEW
Return

WSMETHOD CLONE WSCLIENT FSINSTALLBASE_INSTALLBASEVIEW
	Local oClone := FSINSTALLBASE_INSTALLBASEVIEW():NEW()
	oClone:oWSACCESSORIES       := IIF(::oWSACCESSORIES = NIL , NIL , ::oWSACCESSORIES:Clone() )
	oClone:oWSEQUIPMENT         := IIF(::oWSEQUIPMENT = NIL , NIL , ::oWSEQUIPMENT:Clone() )
Return oClone

WSMETHOD SOAPSEND WSCLIENT FSINSTALLBASE_INSTALLBASEVIEW
	Local cSoap := ""
	cSoap += WSSoapValue("ACCESSORIES", ::oWSACCESSORIES, ::oWSACCESSORIES , "ARRAYOFACCESSORYVIEW", .F. , .F., 0 ) 
	cSoap += WSSoapValue("EQUIPMENT", ::oWSEQUIPMENT, ::oWSEQUIPMENT , "EQUIPMENTVIEW", .T. , .F., 0 ) 
Return cSoap

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT FSINSTALLBASE_INSTALLBASEVIEW
	Local oNode1
	Local oNode2
	::Init()
	If oResponse = NIL ; Return ; Endif 
	oNode1 :=  WSAdvValue( oResponse,"_ACCESSORIES","ARRAYOFACCESSORYVIEW",NIL,NIL,NIL,"O",NIL) 
	If oNode1 != NIL
		::oWSACCESSORIES := FSINSTALLBASE_ARRAYOFACCESSORYVIEW():New()
		::oWSACCESSORIES:SoapRecv(oNode1)
	EndIf
	oNode2 :=  WSAdvValue( oResponse,"_EQUIPMENT","EQUIPMENTVIEW",NIL,"Property oWSEQUIPMENT as s0:EQUIPMENTVIEW on SOAP Response not found.",NIL,"O",NIL) 
	If oNode2 != NIL
		::oWSEQUIPMENT := FSINSTALLBASE_EQUIPMENTVIEW():New()
		::oWSEQUIPMENT:SoapRecv(oNode2)
	EndIf
Return

/* -------------------------------------------------------------------------------
WSDL Data Structure ARRAYOFBRWHEADER
------------------------------------------------------------------------------- */

WSSTRUCT FSINSTALLBASE_ARRAYOFBRWHEADER
	WSDATA   oWSBRWHEADER              AS FSINSTALLBASE_BRWHEADER OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT FSINSTALLBASE_ARRAYOFBRWHEADER
	::Init()
Return Self

WSMETHOD INIT WSCLIENT FSINSTALLBASE_ARRAYOFBRWHEADER
	::oWSBRWHEADER         := {} // Array Of  FSINSTALLBASE_BRWHEADER():New()
Return

WSMETHOD CLONE WSCLIENT FSINSTALLBASE_ARRAYOFBRWHEADER
	Local oClone := FSINSTALLBASE_ARRAYOFBRWHEADER():NEW()
	oClone:oWSBRWHEADER := NIL
	If ::oWSBRWHEADER <> NIL 
		oClone:oWSBRWHEADER := {}
		aEval( ::oWSBRWHEADER , { |x| aadd( oClone:oWSBRWHEADER , x:Clone() ) } )
	Endif 
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT FSINSTALLBASE_ARRAYOFBRWHEADER
	Local nRElem1, oNodes1, nTElem1
	::Init()
	If oResponse = NIL ; Return ; Endif 
	oNodes1 :=  WSAdvValue( oResponse,"_BRWHEADER","BRWHEADER",{},NIL,.T.,"O",NIL) 
	nTElem1 := len(oNodes1)
	For nRElem1 := 1 to nTElem1 
		If !WSIsNilNode( oNodes1[nRElem1] )
			aadd(::oWSBRWHEADER , FSINSTALLBASE_BRWHEADER():New() )
			::oWSBRWHEADER[len(::oWSBRWHEADER)]:SoapRecv(oNodes1[nRElem1])
		Endif
	Next
Return

/* -------------------------------------------------------------------------------
WSDL Data Structure EQUIPMENTVIEW
------------------------------------------------------------------------------- */

WSSTRUCT FSINSTALLBASE_EQUIPMENTVIEW
	WSDATA   nACCUMULATOR              AS float OPTIONAL
	WSDATA   cCONTRACTNUMBER           AS string OPTIONAL
	WSDATA   cCUSTOMERCODE             AS string
	WSDATA   dINSTALLATIONDATE         AS date OPTIONAL
	WSDATA   cINSTALLATIONTECHNICIAN   AS string OPTIONAL
	WSDATA   cINVOICENUMBER            AS string OPTIONAL
	WSDATA   cMANUFACTURERCODE         AS string OPTIONAL
	WSDATA   cMODEL                    AS string OPTIONAL
	WSDATA   nMTBF                     AS float OPTIONAL
	WSDATA   nMTTR                     AS float OPTIONAL
	WSDATA   cNOTE                     AS string OPTIONAL
	WSDATA   cPLATECODE                AS string OPTIONAL
	WSDATA   cPREVENTIVENUMBER         AS string OPTIONAL
	WSDATA   cPRODUCTCODE              AS string
	WSDATA   dSALESDATE                AS date OPTIONAL
	WSDATA   cSERIALNUMBER             AS string
	WSDATA   cSUPPLIERCODE             AS string OPTIONAL
	WSDATA   cUNITCUSTOMERCODE         AS string
	WSDATA   cUNITMANUFACTURERCODE     AS string OPTIONAL
	WSDATA   cUNITSUPPLIERCODE         AS string OPTIONAL
	WSDATA   oWSUSERFIELDS             AS FSINSTALLBASE_ARRAYOFUSERFIELD OPTIONAL
	WSDATA   dWARRANTYDATE             AS date OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPSEND
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT FSINSTALLBASE_EQUIPMENTVIEW
	::Init()
Return Self

WSMETHOD INIT WSCLIENT FSINSTALLBASE_EQUIPMENTVIEW
Return

WSMETHOD CLONE WSCLIENT FSINSTALLBASE_EQUIPMENTVIEW
	Local oClone := FSINSTALLBASE_EQUIPMENTVIEW():NEW()
	oClone:nACCUMULATOR         := ::nACCUMULATOR
	oClone:cCONTRACTNUMBER      := ::cCONTRACTNUMBER
	oClone:cCUSTOMERCODE        := ::cCUSTOMERCODE
	oClone:dINSTALLATIONDATE    := ::dINSTALLATIONDATE
	oClone:cINSTALLATIONTECHNICIAN := ::cINSTALLATIONTECHNICIAN
	oClone:cINVOICENUMBER       := ::cINVOICENUMBER
	oClone:cMANUFACTURERCODE    := ::cMANUFACTURERCODE
	oClone:cMODEL               := ::cMODEL
	oClone:nMTBF                := ::nMTBF
	oClone:nMTTR                := ::nMTTR
	oClone:cNOTE                := ::cNOTE
	oClone:cPLATECODE           := ::cPLATECODE
	oClone:cPREVENTIVENUMBER    := ::cPREVENTIVENUMBER
	oClone:cPRODUCTCODE         := ::cPRODUCTCODE
	oClone:dSALESDATE           := ::dSALESDATE
	oClone:cSERIALNUMBER        := ::cSERIALNUMBER
	oClone:cSUPPLIERCODE        := ::cSUPPLIERCODE
	oClone:cUNITCUSTOMERCODE    := ::cUNITCUSTOMERCODE
	oClone:cUNITMANUFACTURERCODE := ::cUNITMANUFACTURERCODE
	oClone:cUNITSUPPLIERCODE    := ::cUNITSUPPLIERCODE
	oClone:oWSUSERFIELDS        := IIF(::oWSUSERFIELDS = NIL , NIL , ::oWSUSERFIELDS:Clone() )
	oClone:dWARRANTYDATE        := ::dWARRANTYDATE
Return oClone

WSMETHOD SOAPSEND WSCLIENT FSINSTALLBASE_EQUIPMENTVIEW
	Local cSoap := ""
	cSoap += WSSoapValue("ACCUMULATOR", ::nACCUMULATOR, ::nACCUMULATOR , "float", .F. , .F., 0 ) 
	cSoap += WSSoapValue("CONTRACTNUMBER", ::cCONTRACTNUMBER, ::cCONTRACTNUMBER , "string", .F. , .F., 0 ) 
	cSoap += WSSoapValue("CUSTOMERCODE", ::cCUSTOMERCODE, ::cCUSTOMERCODE , "string", .T. , .F., 0 ) 
	cSoap += WSSoapValue("INSTALLATIONDATE", ::dINSTALLATIONDATE, ::dINSTALLATIONDATE , "date", .F. , .F., 0 ) 
	cSoap += WSSoapValue("INSTALLATIONTECHNICIAN", ::cINSTALLATIONTECHNICIAN, ::cINSTALLATIONTECHNICIAN , "string", .F. , .F., 0 ) 
	cSoap += WSSoapValue("INVOICENUMBER", ::cINVOICENUMBER, ::cINVOICENUMBER , "string", .F. , .F., 0 ) 
	cSoap += WSSoapValue("MANUFACTURERCODE", ::cMANUFACTURERCODE, ::cMANUFACTURERCODE , "string", .F. , .F., 0 ) 
	cSoap += WSSoapValue("MODEL", ::cMODEL, ::cMODEL , "string", .F. , .F., 0 ) 
	cSoap += WSSoapValue("MTBF", ::nMTBF, ::nMTBF , "float", .F. , .F., 0 ) 
	cSoap += WSSoapValue("MTTR", ::nMTTR, ::nMTTR , "float", .F. , .F., 0 ) 
	cSoap += WSSoapValue("NOTE", ::cNOTE, ::cNOTE , "string", .F. , .F., 0 ) 
	cSoap += WSSoapValue("PLATECODE", ::cPLATECODE, ::cPLATECODE , "string", .F. , .F., 0 ) 
	cSoap += WSSoapValue("PREVENTIVENUMBER", ::cPREVENTIVENUMBER, ::cPREVENTIVENUMBER , "string", .F. , .F., 0 ) 
	cSoap += WSSoapValue("PRODUCTCODE", ::cPRODUCTCODE, ::cPRODUCTCODE , "string", .T. , .F., 0 ) 
	cSoap += WSSoapValue("SALESDATE", ::dSALESDATE, ::dSALESDATE , "date", .F. , .F., 0 ) 
	cSoap += WSSoapValue("SERIALNUMBER", ::cSERIALNUMBER, ::cSERIALNUMBER , "string", .T. , .F., 0 ) 
	cSoap += WSSoapValue("SUPPLIERCODE", ::cSUPPLIERCODE, ::cSUPPLIERCODE , "string", .F. , .F., 0 ) 
	cSoap += WSSoapValue("UNITCUSTOMERCODE", ::cUNITCUSTOMERCODE, ::cUNITCUSTOMERCODE , "string", .T. , .F., 0 ) 
	cSoap += WSSoapValue("UNITMANUFACTURERCODE", ::cUNITMANUFACTURERCODE, ::cUNITMANUFACTURERCODE , "string", .F. , .F., 0 ) 
	cSoap += WSSoapValue("UNITSUPPLIERCODE", ::cUNITSUPPLIERCODE, ::cUNITSUPPLIERCODE , "string", .F. , .F., 0 ) 
	cSoap += WSSoapValue("USERFIELDS", ::oWSUSERFIELDS, ::oWSUSERFIELDS , "ARRAYOFUSERFIELD", .F. , .F., 0 ) 
	cSoap += WSSoapValue("WARRANTYDATE", ::dWARRANTYDATE, ::dWARRANTYDATE , "date", .F. , .F., 0 ) 
Return cSoap

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT FSINSTALLBASE_EQUIPMENTVIEW
	Local oNode21
	::Init()
	If oResponse = NIL ; Return ; Endif 
	::nACCUMULATOR       :=  WSAdvValue( oResponse,"_ACCUMULATOR","float",NIL,NIL,NIL,"N",NIL) 
	::cCONTRACTNUMBER    :=  WSAdvValue( oResponse,"_CONTRACTNUMBER","string",NIL,NIL,NIL,"S",NIL) 
	::cCUSTOMERCODE      :=  WSAdvValue( oResponse,"_CUSTOMERCODE","string",NIL,"Property cCUSTOMERCODE as s:string on SOAP Response not found.",NIL,"S",NIL) 
	::dINSTALLATIONDATE  :=  WSAdvValue( oResponse,"_INSTALLATIONDATE","date",NIL,NIL,NIL,"D",NIL) 
	::cINSTALLATIONTECHNICIAN :=  WSAdvValue( oResponse,"_INSTALLATIONTECHNICIAN","string",NIL,NIL,NIL,"S",NIL) 
	::cINVOICENUMBER     :=  WSAdvValue( oResponse,"_INVOICENUMBER","string",NIL,NIL,NIL,"S",NIL) 
	::cMANUFACTURERCODE  :=  WSAdvValue( oResponse,"_MANUFACTURERCODE","string",NIL,NIL,NIL,"S",NIL) 
	::cMODEL             :=  WSAdvValue( oResponse,"_MODEL","string",NIL,NIL,NIL,"S",NIL) 
	::nMTBF              :=  WSAdvValue( oResponse,"_MTBF","float",NIL,NIL,NIL,"N",NIL) 
	::nMTTR              :=  WSAdvValue( oResponse,"_MTTR","float",NIL,NIL,NIL,"N",NIL) 
	::cNOTE              :=  WSAdvValue( oResponse,"_NOTE","string",NIL,NIL,NIL,"S",NIL) 
	::cPLATECODE         :=  WSAdvValue( oResponse,"_PLATECODE","string",NIL,NIL,NIL,"S",NIL) 
	::cPREVENTIVENUMBER  :=  WSAdvValue( oResponse,"_PREVENTIVENUMBER","string",NIL,NIL,NIL,"S",NIL) 
	::cPRODUCTCODE       :=  WSAdvValue( oResponse,"_PRODUCTCODE","string",NIL,"Property cPRODUCTCODE as s:string on SOAP Response not found.",NIL,"S",NIL) 
	::dSALESDATE         :=  WSAdvValue( oResponse,"_SALESDATE","date",NIL,NIL,NIL,"D",NIL) 
	::cSERIALNUMBER      :=  WSAdvValue( oResponse,"_SERIALNUMBER","string",NIL,"Property cSERIALNUMBER as s:string on SOAP Response not found.",NIL,"S",NIL) 
	::cSUPPLIERCODE      :=  WSAdvValue( oResponse,"_SUPPLIERCODE","string",NIL,NIL,NIL,"S",NIL) 
	::cUNITCUSTOMERCODE  :=  WSAdvValue( oResponse,"_UNITCUSTOMERCODE","string",NIL,"Property cUNITCUSTOMERCODE as s:string on SOAP Response not found.",NIL,"S",NIL) 
	::cUNITMANUFACTURERCODE :=  WSAdvValue( oResponse,"_UNITMANUFACTURERCODE","string",NIL,NIL,NIL,"S",NIL) 
	::cUNITSUPPLIERCODE  :=  WSAdvValue( oResponse,"_UNITSUPPLIERCODE","string",NIL,NIL,NIL,"S",NIL) 
	oNode21 :=  WSAdvValue( oResponse,"_USERFIELDS","ARRAYOFUSERFIELD",NIL,NIL,NIL,"O",NIL) 
	If oNode21 != NIL
		::oWSUSERFIELDS := FSINSTALLBASE_ARRAYOFUSERFIELD():New()
		::oWSUSERFIELDS:SoapRecv(oNode21)
	EndIf
	::dWARRANTYDATE      :=  WSAdvValue( oResponse,"_WARRANTYDATE","date",NIL,NIL,NIL,"D",NIL) 
Return

/* -------------------------------------------------------------------------------
WSDL Data Structure ARRAYOFACCESSORYVIEW
------------------------------------------------------------------------------- */

WSSTRUCT FSINSTALLBASE_ARRAYOFACCESSORYVIEW
	WSDATA   oWSACCESSORYVIEW          AS FSINSTALLBASE_ACCESSORYVIEW OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPSEND
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT FSINSTALLBASE_ARRAYOFACCESSORYVIEW
	::Init()
Return Self

WSMETHOD INIT WSCLIENT FSINSTALLBASE_ARRAYOFACCESSORYVIEW
	::oWSACCESSORYVIEW     := {} // Array Of  FSINSTALLBASE_ACCESSORYVIEW():New()
Return

WSMETHOD CLONE WSCLIENT FSINSTALLBASE_ARRAYOFACCESSORYVIEW
	Local oClone := FSINSTALLBASE_ARRAYOFACCESSORYVIEW():NEW()
	oClone:oWSACCESSORYVIEW := NIL
	If ::oWSACCESSORYVIEW <> NIL 
		oClone:oWSACCESSORYVIEW := {}
		aEval( ::oWSACCESSORYVIEW , { |x| aadd( oClone:oWSACCESSORYVIEW , x:Clone() ) } )
	Endif 
Return oClone

WSMETHOD SOAPSEND WSCLIENT FSINSTALLBASE_ARRAYOFACCESSORYVIEW
	Local cSoap := ""
	aEval( ::oWSACCESSORYVIEW , {|x| cSoap := cSoap  +  WSSoapValue("ACCESSORYVIEW", x , x , "ACCESSORYVIEW", .F. , .F., 0 )  } ) 
Return cSoap

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT FSINSTALLBASE_ARRAYOFACCESSORYVIEW
	Local nRElem1, oNodes1, nTElem1
	::Init()
	If oResponse = NIL ; Return ; Endif 
	oNodes1 :=  WSAdvValue( oResponse,"_ACCESSORYVIEW","ACCESSORYVIEW",{},NIL,.T.,"O",NIL) 
	nTElem1 := len(oNodes1)
	For nRElem1 := 1 to nTElem1 
		If !WSIsNilNode( oNodes1[nRElem1] )
			aadd(::oWSACCESSORYVIEW , FSINSTALLBASE_ACCESSORYVIEW():New() )
			::oWSACCESSORYVIEW[len(::oWSACCESSORYVIEW)]:SoapRecv(oNodes1[nRElem1])
		Endif
	Next
Return

/* -------------------------------------------------------------------------------
WSDL Data Structure BRWHEADER
------------------------------------------------------------------------------- */

WSSTRUCT FSINSTALLBASE_BRWHEADER
	WSDATA   cHEADERCOMBOBOX           AS string OPTIONAL
	WSDATA   nHEADERDEC                AS integer
	WSDATA   cHEADERF3                 AS string OPTIONAL
	WSDATA   cHEADERFIELD              AS string
	WSDATA   lHEADEROBLIG              AS boolean OPTIONAL
	WSDATA   cHEADERPICTURE            AS string
	WSDATA   nHEADERSIZE               AS integer
	WSDATA   cHEADERTITLE              AS string
	WSDATA   cHEADERTYPE               AS string
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT FSINSTALLBASE_BRWHEADER
	::Init()
Return Self

WSMETHOD INIT WSCLIENT FSINSTALLBASE_BRWHEADER
Return

WSMETHOD CLONE WSCLIENT FSINSTALLBASE_BRWHEADER
	Local oClone := FSINSTALLBASE_BRWHEADER():NEW()
	oClone:cHEADERCOMBOBOX      := ::cHEADERCOMBOBOX
	oClone:nHEADERDEC           := ::nHEADERDEC
	oClone:cHEADERF3            := ::cHEADERF3
	oClone:cHEADERFIELD         := ::cHEADERFIELD
	oClone:lHEADEROBLIG         := ::lHEADEROBLIG
	oClone:cHEADERPICTURE       := ::cHEADERPICTURE
	oClone:nHEADERSIZE          := ::nHEADERSIZE
	oClone:cHEADERTITLE         := ::cHEADERTITLE
	oClone:cHEADERTYPE          := ::cHEADERTYPE
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT FSINSTALLBASE_BRWHEADER
	::Init()
	If oResponse = NIL ; Return ; Endif 
	::cHEADERCOMBOBOX    :=  WSAdvValue( oResponse,"_HEADERCOMBOBOX","string",NIL,NIL,NIL,"S",NIL) 
	::nHEADERDEC         :=  WSAdvValue( oResponse,"_HEADERDEC","integer",NIL,"Property nHEADERDEC as s:integer on SOAP Response not found.",NIL,"N",NIL) 
	::cHEADERF3          :=  WSAdvValue( oResponse,"_HEADERF3","string",NIL,NIL,NIL,"S",NIL) 
	::cHEADERFIELD       :=  WSAdvValue( oResponse,"_HEADERFIELD","string",NIL,"Property cHEADERFIELD as s:string on SOAP Response not found.",NIL,"S",NIL) 
	::lHEADEROBLIG       :=  WSAdvValue( oResponse,"_HEADEROBLIG","boolean",NIL,NIL,NIL,"L",NIL) 
	::cHEADERPICTURE     :=  WSAdvValue( oResponse,"_HEADERPICTURE","string",NIL,"Property cHEADERPICTURE as s:string on SOAP Response not found.",NIL,"S",NIL) 
	::nHEADERSIZE        :=  WSAdvValue( oResponse,"_HEADERSIZE","integer",NIL,"Property nHEADERSIZE as s:integer on SOAP Response not found.",NIL,"N",NIL) 
	::cHEADERTITLE       :=  WSAdvValue( oResponse,"_HEADERTITLE","string",NIL,"Property cHEADERTITLE as s:string on SOAP Response not found.",NIL,"S",NIL) 
	::cHEADERTYPE        :=  WSAdvValue( oResponse,"_HEADERTYPE","string",NIL,"Property cHEADERTYPE as s:string on SOAP Response not found.",NIL,"S",NIL) 
Return

/* -------------------------------------------------------------------------------
WSDL Data Structure ARRAYOFUSERFIELD
------------------------------------------------------------------------------- */

WSSTRUCT FSINSTALLBASE_ARRAYOFUSERFIELD
	WSDATA   oWSUSERFIELD              AS FSINSTALLBASE_USERFIELD OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPSEND
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT FSINSTALLBASE_ARRAYOFUSERFIELD
	::Init()
Return Self

WSMETHOD INIT WSCLIENT FSINSTALLBASE_ARRAYOFUSERFIELD
	::oWSUSERFIELD         := {} // Array Of  FSINSTALLBASE_USERFIELD():New()
Return

WSMETHOD CLONE WSCLIENT FSINSTALLBASE_ARRAYOFUSERFIELD
	Local oClone := FSINSTALLBASE_ARRAYOFUSERFIELD():NEW()
	oClone:oWSUSERFIELD := NIL
	If ::oWSUSERFIELD <> NIL 
		oClone:oWSUSERFIELD := {}
		aEval( ::oWSUSERFIELD , { |x| aadd( oClone:oWSUSERFIELD , x:Clone() ) } )
	Endif 
Return oClone

WSMETHOD SOAPSEND WSCLIENT FSINSTALLBASE_ARRAYOFUSERFIELD
	Local cSoap := ""
	aEval( ::oWSUSERFIELD , {|x| cSoap := cSoap  +  WSSoapValue("USERFIELD", x , x , "USERFIELD", .F. , .F., 0 )  } ) 
Return cSoap

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT FSINSTALLBASE_ARRAYOFUSERFIELD
	Local nRElem1, oNodes1, nTElem1
	::Init()
	If oResponse = NIL ; Return ; Endif 
	oNodes1 :=  WSAdvValue( oResponse,"_USERFIELD","USERFIELD",{},NIL,.T.,"O",NIL) 
	nTElem1 := len(oNodes1)
	For nRElem1 := 1 to nTElem1 
		If !WSIsNilNode( oNodes1[nRElem1] )
			aadd(::oWSUSERFIELD , FSINSTALLBASE_USERFIELD():New() )
			::oWSUSERFIELD[len(::oWSUSERFIELD)]:SoapRecv(oNodes1[nRElem1])
		Endif
	Next
Return

/* -------------------------------------------------------------------------------
WSDL Data Structure ACCESSORYVIEW
------------------------------------------------------------------------------- */

WSSTRUCT FSINSTALLBASE_ACCESSORYVIEW
	WSDATA   dINSTALLATIONDATE         AS date
	WSDATA   cMANUFACTURERCODE         AS string
	WSDATA   cMODEL                    AS string
	WSDATA   cPRODUCTCODE              AS string
	WSDATA   cSERIALNUMBER             AS string
	WSDATA   cSUPPLIERCODE             AS string
	WSDATA   cUNITMANUFACTURERCODE     AS string
	WSDATA   cUNITSUPPLIERCODE         AS string
	WSDATA   oWSUSERFIELDS             AS FSINSTALLBASE_ARRAYOFUSERFIELD OPTIONAL
	WSDATA   dWARRANTYDATE             AS date
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPSEND
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT FSINSTALLBASE_ACCESSORYVIEW
	::Init()
Return Self

WSMETHOD INIT WSCLIENT FSINSTALLBASE_ACCESSORYVIEW
Return

WSMETHOD CLONE WSCLIENT FSINSTALLBASE_ACCESSORYVIEW
	Local oClone := FSINSTALLBASE_ACCESSORYVIEW():NEW()
	oClone:dINSTALLATIONDATE    := ::dINSTALLATIONDATE
	oClone:cMANUFACTURERCODE    := ::cMANUFACTURERCODE
	oClone:cMODEL               := ::cMODEL
	oClone:cPRODUCTCODE         := ::cPRODUCTCODE
	oClone:cSERIALNUMBER        := ::cSERIALNUMBER
	oClone:cSUPPLIERCODE        := ::cSUPPLIERCODE
	oClone:cUNITMANUFACTURERCODE := ::cUNITMANUFACTURERCODE
	oClone:cUNITSUPPLIERCODE    := ::cUNITSUPPLIERCODE
	oClone:oWSUSERFIELDS        := IIF(::oWSUSERFIELDS = NIL , NIL , ::oWSUSERFIELDS:Clone() )
	oClone:dWARRANTYDATE        := ::dWARRANTYDATE
Return oClone

WSMETHOD SOAPSEND WSCLIENT FSINSTALLBASE_ACCESSORYVIEW
	Local cSoap := ""
	cSoap += WSSoapValue("INSTALLATIONDATE", ::dINSTALLATIONDATE, ::dINSTALLATIONDATE , "date", .T. , .F., 0 ) 
	cSoap += WSSoapValue("MANUFACTURERCODE", ::cMANUFACTURERCODE, ::cMANUFACTURERCODE , "string", .T. , .F., 0 ) 
	cSoap += WSSoapValue("MODEL", ::cMODEL, ::cMODEL , "string", .T. , .F., 0 ) 
	cSoap += WSSoapValue("PRODUCTCODE", ::cPRODUCTCODE, ::cPRODUCTCODE , "string", .T. , .F., 0 ) 
	cSoap += WSSoapValue("SERIALNUMBER", ::cSERIALNUMBER, ::cSERIALNUMBER , "string", .T. , .F., 0 ) 
	cSoap += WSSoapValue("SUPPLIERCODE", ::cSUPPLIERCODE, ::cSUPPLIERCODE , "string", .T. , .F., 0 ) 
	cSoap += WSSoapValue("UNITMANUFACTURERCODE", ::cUNITMANUFACTURERCODE, ::cUNITMANUFACTURERCODE , "string", .T. , .F., 0 ) 
	cSoap += WSSoapValue("UNITSUPPLIERCODE", ::cUNITSUPPLIERCODE, ::cUNITSUPPLIERCODE , "string", .T. , .F., 0 ) 
	cSoap += WSSoapValue("USERFIELDS", ::oWSUSERFIELDS, ::oWSUSERFIELDS , "ARRAYOFUSERFIELD", .F. , .F., 0 ) 
	cSoap += WSSoapValue("WARRANTYDATE", ::dWARRANTYDATE, ::dWARRANTYDATE , "date", .T. , .F., 0 ) 
Return cSoap

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT FSINSTALLBASE_ACCESSORYVIEW
	Local oNode9
	::Init()
	If oResponse = NIL ; Return ; Endif 
	::dINSTALLATIONDATE  :=  WSAdvValue( oResponse,"_INSTALLATIONDATE","date",NIL,"Property dINSTALLATIONDATE as s:date on SOAP Response not found.",NIL,"D",NIL) 
	::cMANUFACTURERCODE  :=  WSAdvValue( oResponse,"_MANUFACTURERCODE","string",NIL,"Property cMANUFACTURERCODE as s:string on SOAP Response not found.",NIL,"S",NIL) 
	::cMODEL             :=  WSAdvValue( oResponse,"_MODEL","string",NIL,"Property cMODEL as s:string on SOAP Response not found.",NIL,"S",NIL) 
	::cPRODUCTCODE       :=  WSAdvValue( oResponse,"_PRODUCTCODE","string",NIL,"Property cPRODUCTCODE as s:string on SOAP Response not found.",NIL,"S",NIL) 
	::cSERIALNUMBER      :=  WSAdvValue( oResponse,"_SERIALNUMBER","string",NIL,"Property cSERIALNUMBER as s:string on SOAP Response not found.",NIL,"S",NIL) 
	::cSUPPLIERCODE      :=  WSAdvValue( oResponse,"_SUPPLIERCODE","string",NIL,"Property cSUPPLIERCODE as s:string on SOAP Response not found.",NIL,"S",NIL) 
	::cUNITMANUFACTURERCODE :=  WSAdvValue( oResponse,"_UNITMANUFACTURERCODE","string",NIL,"Property cUNITMANUFACTURERCODE as s:string on SOAP Response not found.",NIL,"S",NIL) 
	::cUNITSUPPLIERCODE  :=  WSAdvValue( oResponse,"_UNITSUPPLIERCODE","string",NIL,"Property cUNITSUPPLIERCODE as s:string on SOAP Response not found.",NIL,"S",NIL) 
	oNode9 :=  WSAdvValue( oResponse,"_USERFIELDS","ARRAYOFUSERFIELD",NIL,NIL,NIL,"O",NIL) 
	If oNode9 != NIL
		::oWSUSERFIELDS := FSINSTALLBASE_ARRAYOFUSERFIELD():New()
		::oWSUSERFIELDS:SoapRecv(oNode9)
	EndIf
	::dWARRANTYDATE      :=  WSAdvValue( oResponse,"_WARRANTYDATE","date",NIL,"Property dWARRANTYDATE as s:date on SOAP Response not found.",NIL,"D",NIL) 
Return

/* -------------------------------------------------------------------------------
WSDL Data Structure USERFIELD
------------------------------------------------------------------------------- */

WSSTRUCT FSINSTALLBASE_USERFIELD
	WSDATA   cUSERCOMBOBOX             AS string OPTIONAL
	WSDATA   nUSERDEC                  AS integer OPTIONAL
	WSDATA   cUSERF3                   AS string OPTIONAL
	WSDATA   cUSERNAME                 AS string
	WSDATA   lUSEROBLIG                AS boolean OPTIONAL
	WSDATA   cUSERPICTURE              AS string OPTIONAL
	WSDATA   nUSERSIZE                 AS integer OPTIONAL
	WSDATA   cUSERTAG                  AS string OPTIONAL
	WSDATA   cUSERTITLE                AS string OPTIONAL
	WSDATA   cUSERTYPE                 AS string
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPSEND
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT FSINSTALLBASE_USERFIELD
	::Init()
Return Self

WSMETHOD INIT WSCLIENT FSINSTALLBASE_USERFIELD
Return

WSMETHOD CLONE WSCLIENT FSINSTALLBASE_USERFIELD
	Local oClone := FSINSTALLBASE_USERFIELD():NEW()
	oClone:cUSERCOMBOBOX        := ::cUSERCOMBOBOX
	oClone:nUSERDEC             := ::nUSERDEC
	oClone:cUSERF3              := ::cUSERF3
	oClone:cUSERNAME            := ::cUSERNAME
	oClone:lUSEROBLIG           := ::lUSEROBLIG
	oClone:cUSERPICTURE         := ::cUSERPICTURE
	oClone:nUSERSIZE            := ::nUSERSIZE
	oClone:cUSERTAG             := ::cUSERTAG
	oClone:cUSERTITLE           := ::cUSERTITLE
	oClone:cUSERTYPE            := ::cUSERTYPE
Return oClone

WSMETHOD SOAPSEND WSCLIENT FSINSTALLBASE_USERFIELD
	Local cSoap := ""
	cSoap += WSSoapValue("USERCOMBOBOX", ::cUSERCOMBOBOX, ::cUSERCOMBOBOX , "string", .F. , .F., 0 ) 
	cSoap += WSSoapValue("USERDEC", ::nUSERDEC, ::nUSERDEC , "integer", .F. , .F., 0 ) 
	cSoap += WSSoapValue("USERF3", ::cUSERF3, ::cUSERF3 , "string", .F. , .F., 0 ) 
	cSoap += WSSoapValue("USERNAME", ::cUSERNAME, ::cUSERNAME , "string", .T. , .F., 0 ) 
	cSoap += WSSoapValue("USEROBLIG", ::lUSEROBLIG, ::lUSEROBLIG , "boolean", .F. , .F., 0 ) 
	cSoap += WSSoapValue("USERPICTURE", ::cUSERPICTURE, ::cUSERPICTURE , "string", .F. , .F., 0 ) 
	cSoap += WSSoapValue("USERSIZE", ::nUSERSIZE, ::nUSERSIZE , "integer", .F. , .F., 0 ) 
	cSoap += WSSoapValue("USERTAG", ::cUSERTAG, ::cUSERTAG , "string", .F. , .F., 0 ) 
	cSoap += WSSoapValue("USERTITLE", ::cUSERTITLE, ::cUSERTITLE , "string", .F. , .F., 0 ) 
	cSoap += WSSoapValue("USERTYPE", ::cUSERTYPE, ::cUSERTYPE , "string", .T. , .F., 0 ) 
Return cSoap

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT FSINSTALLBASE_USERFIELD
	::Init()
	If oResponse = NIL ; Return ; Endif 
	::cUSERCOMBOBOX      :=  WSAdvValue( oResponse,"_USERCOMBOBOX","string",NIL,NIL,NIL,"S",NIL) 
	::nUSERDEC           :=  WSAdvValue( oResponse,"_USERDEC","integer",NIL,NIL,NIL,"N",NIL) 
	::cUSERF3            :=  WSAdvValue( oResponse,"_USERF3","string",NIL,NIL,NIL,"S",NIL) 
	::cUSERNAME          :=  WSAdvValue( oResponse,"_USERNAME","string",NIL,"Property cUSERNAME as s:string on SOAP Response not found.",NIL,"S",NIL) 
	::lUSEROBLIG         :=  WSAdvValue( oResponse,"_USEROBLIG","boolean",NIL,NIL,NIL,"L",NIL) 
	::cUSERPICTURE       :=  WSAdvValue( oResponse,"_USERPICTURE","string",NIL,NIL,NIL,"S",NIL) 
	::nUSERSIZE          :=  WSAdvValue( oResponse,"_USERSIZE","integer",NIL,NIL,NIL,"N",NIL) 
	::cUSERTAG           :=  WSAdvValue( oResponse,"_USERTAG","string",NIL,NIL,NIL,"S",NIL) 
	::cUSERTITLE         :=  WSAdvValue( oResponse,"_USERTITLE","string",NIL,NIL,NIL,"S",NIL) 
	::cUSERTYPE          :=  WSAdvValue( oResponse,"_USERTYPE","string",NIL,"Property cUSERTYPE as s:string on SOAP Response not found.",NIL,"S",NIL) 
Return


