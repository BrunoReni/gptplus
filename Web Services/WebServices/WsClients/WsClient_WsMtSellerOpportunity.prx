#INCLUDE "protheus.ch"
#INCLUDE "apwebsrv.ch"

/* ===============================================================================
WSDL Location    http://localhost:8059/ws/MTSELLEROPPORTUNITY.apw?WSDL
Gerado em        12/14/20 11:14:00
Observações      Código-Fonte gerado por ADVPL WSDL Client 1.120703
                 Alterações neste arquivo podem causar funcionamento incorreto
                 e serão perdidas caso o código-fonte seja gerado novamente.
=============================================================================== */

User Function _APOSCJL ; Return  // "dummy" function - Internal Use 

/* -------------------------------------------------------------------------------
WSDL Service WSMTSELLEROPPORTUNITY
------------------------------------------------------------------------------- */

WSCLIENT WSMTSELLEROPPORTUNITY

	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD RESET
	WSMETHOD CLONE
	WSMETHOD BRWOPPORTUNITY
	WSMETHOD DELOPPORTUNITY
	WSMETHOD GETHEADER
	WSMETHOD GETOPPORTUNITY
	WSMETHOD PUTOPPORTUNITY

	WSDATA   _URL                      AS String
	WSDATA   _HEADOUT                  AS Array of String
	WSDATA   _COOKIES                  AS Array of String
	WSDATA   cUSERCODE                 AS string
	WSDATA   cSELLERCODE               AS string
	WSDATA   dSTARTDATEFROM            AS date
	WSDATA   dSTARTDATETO              AS date
	WSDATA   cQUERYADDWHERE            AS string
	WSDATA   cINDEXKEY                 AS string
	WSDATA   oWSBRWOPPORTUNITYRESULT   AS MTSELLEROPPORTUNITY_ARRAYOFOPPORTUNITYSTRUCT
	WSDATA   cOPPORTUNITYID            AS string
	WSDATA   cDELOPPORTUNITYRESULT     AS string
	WSDATA   cHEADERTYPE               AS string
	WSDATA   oWSGETHEADERRESULT        AS MTSELLEROPPORTUNITY_ARRAYOFBRWHEADER
	WSDATA   oWSGETOPPORTUNITYRESULT   AS MTSELLEROPPORTUNITY_OPPORTUNITYVIEW
	WSDATA   oWSOPPORTUNITY            AS MTSELLEROPPORTUNITY_OPPORTUNITYVIEW
	WSDATA   cPUTOPPORTUNITYRESULT     AS string

	// Estruturas mantidas por compatibilidade - NÃO USAR
	WSDATA   oWSOPPORTUNITYVIEW        AS MTSELLEROPPORTUNITY_OPPORTUNITYVIEW

ENDWSCLIENT

WSMETHOD NEW WSCLIENT WSMTSELLEROPPORTUNITY
::Init()
If !FindFunction("XMLCHILDEX")
	UserException("O Código-Fonte Client atual requer os executáveis do Protheus Build [7.00.191205P-20201009] ou superior. Atualize o Protheus ou gere o Código-Fonte novamente utilizando o Build atual.")
EndIf
Return Self

WSMETHOD INIT WSCLIENT WSMTSELLEROPPORTUNITY
	::oWSBRWOPPORTUNITYRESULT := MTSELLEROPPORTUNITY_ARRAYOFOPPORTUNITYSTRUCT():New()
	::oWSGETHEADERRESULT := MTSELLEROPPORTUNITY_ARRAYOFBRWHEADER():New()
	::oWSGETOPPORTUNITYRESULT := MTSELLEROPPORTUNITY_OPPORTUNITYVIEW():New()
	::oWSOPPORTUNITY     := MTSELLEROPPORTUNITY_OPPORTUNITYVIEW():New()

	// Estruturas mantidas por compatibilidade - NÃO USAR
	::oWSOPPORTUNITYVIEW := ::oWSOPPORTUNITY
Return

WSMETHOD RESET WSCLIENT WSMTSELLEROPPORTUNITY
	::cUSERCODE          := NIL 
	::cSELLERCODE        := NIL 
	::dSTARTDATEFROM     := NIL 
	::dSTARTDATETO       := NIL 
	::cQUERYADDWHERE     := NIL 
	::cINDEXKEY          := NIL 
	::oWSBRWOPPORTUNITYRESULT := NIL 
	::cOPPORTUNITYID     := NIL 
	::cDELOPPORTUNITYRESULT := NIL 
	::cHEADERTYPE        := NIL 
	::oWSGETHEADERRESULT := NIL 
	::oWSGETOPPORTUNITYRESULT := NIL 
	::oWSOPPORTUNITY     := NIL 
	::cPUTOPPORTUNITYRESULT := NIL 

	// Estruturas mantidas por compatibilidade - NÃO USAR
	::oWSOPPORTUNITYVIEW := NIL
	::Init()
Return

WSMETHOD CLONE WSCLIENT WSMTSELLEROPPORTUNITY
Local oClone := WSMTSELLEROPPORTUNITY():New()
	oClone:_URL          := ::_URL 
	oClone:cUSERCODE     := ::cUSERCODE
	oClone:cSELLERCODE   := ::cSELLERCODE
	oClone:dSTARTDATEFROM := ::dSTARTDATEFROM
	oClone:dSTARTDATETO  := ::dSTARTDATETO
	oClone:cQUERYADDWHERE := ::cQUERYADDWHERE
	oClone:cINDEXKEY     := ::cINDEXKEY
	oClone:oWSBRWOPPORTUNITYRESULT :=  IIF(::oWSBRWOPPORTUNITYRESULT = NIL , NIL ,::oWSBRWOPPORTUNITYRESULT:Clone() )
	oClone:cOPPORTUNITYID := ::cOPPORTUNITYID
	oClone:cDELOPPORTUNITYRESULT := ::cDELOPPORTUNITYRESULT
	oClone:cHEADERTYPE   := ::cHEADERTYPE
	oClone:oWSGETHEADERRESULT :=  IIF(::oWSGETHEADERRESULT = NIL , NIL ,::oWSGETHEADERRESULT:Clone() )
	oClone:oWSGETOPPORTUNITYRESULT :=  IIF(::oWSGETOPPORTUNITYRESULT = NIL , NIL ,::oWSGETOPPORTUNITYRESULT:Clone() )
	oClone:oWSOPPORTUNITY :=  IIF(::oWSOPPORTUNITY = NIL , NIL ,::oWSOPPORTUNITY:Clone() )
	oClone:cPUTOPPORTUNITYRESULT := ::cPUTOPPORTUNITYRESULT

	// Estruturas mantidas por compatibilidade - NÃO USAR
	oClone:oWSOPPORTUNITYVIEW := oClone:oWSOPPORTUNITY
Return oClone

// WSDL Method BRWOPPORTUNITY of Service WSMTSELLEROPPORTUNITY

WSMETHOD BRWOPPORTUNITY WSSEND cUSERCODE,cSELLERCODE,dSTARTDATEFROM,dSTARTDATETO,cQUERYADDWHERE,cINDEXKEY WSRECEIVE oWSBRWOPPORTUNITYRESULT WSCLIENT WSMTSELLEROPPORTUNITY
Local cSoap := "" , oXmlRet

BEGIN WSMETHOD

cSoap += '<BRWOPPORTUNITY xmlns="http://webservices.microsiga.com.br/mtselleropportunity.apw">'
cSoap += WSSoapValue("USERCODE", ::cUSERCODE, cUSERCODE , "string", .T. , .F., 0 , NIL, .F.,.F.) 
cSoap += WSSoapValue("SELLERCODE", ::cSELLERCODE, cSELLERCODE , "string", .T. , .F., 0 , NIL, .F.,.F.) 
cSoap += WSSoapValue("STARTDATEFROM", ::dSTARTDATEFROM, dSTARTDATEFROM , "date", .T. , .F., 0 , NIL, .F.,.F.) 
cSoap += WSSoapValue("STARTDATETO", ::dSTARTDATETO, dSTARTDATETO , "date", .T. , .F., 0 , NIL, .F.,.F.) 
cSoap += WSSoapValue("QUERYADDWHERE", ::cQUERYADDWHERE, cQUERYADDWHERE , "string", .T. , .F., 0 , NIL, .F.,.F.) 
cSoap += WSSoapValue("INDEXKEY", ::cINDEXKEY, cINDEXKEY , "string", .T. , .F., 0 , NIL, .F.,.F.) 
cSoap += "</BRWOPPORTUNITY>"

oXmlRet := SvcSoapCall(Self,cSoap,; 
	"http://webservices.microsiga.com.br/mtselleropportunity.apw/BRWOPPORTUNITY",; 
	"DOCUMENT","http://webservices.microsiga.com.br/mtselleropportunity.apw",,"1.031217",; 
	"http://localhost:8059/ws/MTSELLEROPPORTUNITY.apw")

::Init()
::oWSBRWOPPORTUNITYRESULT:SoapRecv( WSAdvValue( oXmlRet,"_BRWOPPORTUNITYRESPONSE:_BRWOPPORTUNITYRESULT","ARRAYOFOPPORTUNITYSTRUCT",NIL,NIL,NIL,NIL,NIL,NIL) )

END WSMETHOD

oXmlRet := NIL
Return .T.

// WSDL Method DELOPPORTUNITY of Service WSMTSELLEROPPORTUNITY

WSMETHOD DELOPPORTUNITY WSSEND cUSERCODE,cSELLERCODE,cOPPORTUNITYID WSRECEIVE cDELOPPORTUNITYRESULT WSCLIENT WSMTSELLEROPPORTUNITY
Local cSoap := "" , oXmlRet

BEGIN WSMETHOD

cSoap += '<DELOPPORTUNITY xmlns="http://webservices.microsiga.com.br/mtselleropportunity.apw">'
cSoap += WSSoapValue("USERCODE", ::cUSERCODE, cUSERCODE , "string", .T. , .F., 0 , NIL, .F.,.F.) 
cSoap += WSSoapValue("SELLERCODE", ::cSELLERCODE, cSELLERCODE , "string", .T. , .F., 0 , NIL, .F.,.F.) 
cSoap += WSSoapValue("OPPORTUNITYID", ::cOPPORTUNITYID, cOPPORTUNITYID , "string", .T. , .F., 0 , NIL, .F.,.F.) 
cSoap += "</DELOPPORTUNITY>"

oXmlRet := SvcSoapCall(Self,cSoap,; 
	"http://webservices.microsiga.com.br/mtselleropportunity.apw/DELOPPORTUNITY",; 
	"DOCUMENT","http://webservices.microsiga.com.br/mtselleropportunity.apw",,"1.031217",; 
	"http://localhost:8059/ws/MTSELLEROPPORTUNITY.apw")

::Init()
::cDELOPPORTUNITYRESULT :=  WSAdvValue( oXmlRet,"_DELOPPORTUNITYRESPONSE:_DELOPPORTUNITYRESULT:TEXT","string",NIL,NIL,NIL,NIL,NIL,NIL) 

END WSMETHOD

oXmlRet := NIL
Return .T.

// WSDL Method GETHEADER of Service WSMTSELLEROPPORTUNITY

WSMETHOD GETHEADER WSSEND cHEADERTYPE WSRECEIVE oWSGETHEADERRESULT WSCLIENT WSMTSELLEROPPORTUNITY
Local cSoap := "" , oXmlRet

BEGIN WSMETHOD

cSoap += '<GETHEADER xmlns="http://webservices.microsiga.com.br/mtselleropportunity.apw">'
cSoap += WSSoapValue("HEADERTYPE", ::cHEADERTYPE, cHEADERTYPE , "string", .T. , .F., 0 , NIL, .F.,.F.) 
cSoap += "</GETHEADER>"

oXmlRet := SvcSoapCall(Self,cSoap,; 
	"http://webservices.microsiga.com.br/mtselleropportunity.apw/GETHEADER",; 
	"DOCUMENT","http://webservices.microsiga.com.br/mtselleropportunity.apw",,"1.031217",; 
	"http://localhost:8059/ws/MTSELLEROPPORTUNITY.apw")

::Init()
::oWSGETHEADERRESULT:SoapRecv( WSAdvValue( oXmlRet,"_GETHEADERRESPONSE:_GETHEADERRESULT","ARRAYOFBRWHEADER",NIL,NIL,NIL,NIL,NIL,NIL) )

END WSMETHOD

oXmlRet := NIL
Return .T.

// WSDL Method GETOPPORTUNITY of Service WSMTSELLEROPPORTUNITY

WSMETHOD GETOPPORTUNITY WSSEND cUSERCODE,cSELLERCODE,cOPPORTUNITYID WSRECEIVE oWSGETOPPORTUNITYRESULT WSCLIENT WSMTSELLEROPPORTUNITY
Local cSoap := "" , oXmlRet

BEGIN WSMETHOD

cSoap += '<GETOPPORTUNITY xmlns="http://webservices.microsiga.com.br/mtselleropportunity.apw">'
cSoap += WSSoapValue("USERCODE", ::cUSERCODE, cUSERCODE , "string", .T. , .F., 0 , NIL, .F.,.F.) 
cSoap += WSSoapValue("SELLERCODE", ::cSELLERCODE, cSELLERCODE , "string", .T. , .F., 0 , NIL, .F.,.F.) 
cSoap += WSSoapValue("OPPORTUNITYID", ::cOPPORTUNITYID, cOPPORTUNITYID , "string", .T. , .F., 0 , NIL, .F.,.F.) 
cSoap += "</GETOPPORTUNITY>"

oXmlRet := SvcSoapCall(Self,cSoap,; 
	"http://webservices.microsiga.com.br/mtselleropportunity.apw/GETOPPORTUNITY",; 
	"DOCUMENT","http://webservices.microsiga.com.br/mtselleropportunity.apw",,"1.031217",; 
	"http://localhost:8059/ws/MTSELLEROPPORTUNITY.apw")

::Init()
::oWSGETOPPORTUNITYRESULT:SoapRecv( WSAdvValue( oXmlRet,"_GETOPPORTUNITYRESPONSE:_GETOPPORTUNITYRESULT","OPPORTUNITYVIEW",NIL,NIL,NIL,NIL,NIL,NIL) )

END WSMETHOD

oXmlRet := NIL
Return .T.

// WSDL Method PUTOPPORTUNITY of Service WSMTSELLEROPPORTUNITY

WSMETHOD PUTOPPORTUNITY WSSEND cUSERCODE,cSELLERCODE,oWSOPPORTUNITY WSRECEIVE cPUTOPPORTUNITYRESULT WSCLIENT WSMTSELLEROPPORTUNITY
Local cSoap := "" , oXmlRet

BEGIN WSMETHOD

cSoap += '<PUTOPPORTUNITY xmlns="http://webservices.microsiga.com.br/mtselleropportunity.apw">'
cSoap += WSSoapValue("USERCODE", ::cUSERCODE, cUSERCODE , "string", .T. , .F., 0 , NIL, .F.,.F.) 
cSoap += WSSoapValue("SELLERCODE", ::cSELLERCODE, cSELLERCODE , "string", .T. , .F., 0 , NIL, .F.,.F.) 
cSoap += WSSoapValue("OPPORTUNITY", ::oWSOPPORTUNITY, oWSOPPORTUNITY , "OPPORTUNITYVIEW", .T. , .F., 0 , NIL, .F.,.F.) 
cSoap += "</PUTOPPORTUNITY>"

oXmlRet := SvcSoapCall(Self,cSoap,; 
	"http://webservices.microsiga.com.br/mtselleropportunity.apw/PUTOPPORTUNITY",; 
	"DOCUMENT","http://webservices.microsiga.com.br/mtselleropportunity.apw",,"1.031217",; 
	"http://localhost:8059/ws/MTSELLEROPPORTUNITY.apw")

::Init()
::cPUTOPPORTUNITYRESULT :=  WSAdvValue( oXmlRet,"_PUTOPPORTUNITYRESPONSE:_PUTOPPORTUNITYRESULT:TEXT","string",NIL,NIL,NIL,NIL,NIL,NIL) 

END WSMETHOD

oXmlRet := NIL
Return .T.


// WSDL Data Structure ARRAYOFOPPORTUNITYSTRUCT

WSSTRUCT MTSELLEROPPORTUNITY_ARRAYOFOPPORTUNITYSTRUCT
	WSDATA   oWSOPPORTUNITYSTRUCT      AS MTSELLEROPPORTUNITY_OPPORTUNITYSTRUCT OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT MTSELLEROPPORTUNITY_ARRAYOFOPPORTUNITYSTRUCT
	::Init()
Return Self

WSMETHOD INIT WSCLIENT MTSELLEROPPORTUNITY_ARRAYOFOPPORTUNITYSTRUCT
	::oWSOPPORTUNITYSTRUCT := {} // Array Of  MTSELLEROPPORTUNITY_OPPORTUNITYSTRUCT():New()
Return

WSMETHOD CLONE WSCLIENT MTSELLEROPPORTUNITY_ARRAYOFOPPORTUNITYSTRUCT
	Local oClone := MTSELLEROPPORTUNITY_ARRAYOFOPPORTUNITYSTRUCT():NEW()
	oClone:oWSOPPORTUNITYSTRUCT := NIL
	If ::oWSOPPORTUNITYSTRUCT <> NIL 
		oClone:oWSOPPORTUNITYSTRUCT := {}
		aEval( ::oWSOPPORTUNITYSTRUCT , { |x| aadd( oClone:oWSOPPORTUNITYSTRUCT , x:Clone() ) } )
	Endif 
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT MTSELLEROPPORTUNITY_ARRAYOFOPPORTUNITYSTRUCT
	Local nRElem1, oNodes1, nTElem1
	::Init()
	If oResponse = NIL ; Return ; Endif 
	oNodes1 :=  WSAdvValue( oResponse,"_OPPORTUNITYSTRUCT","OPPORTUNITYSTRUCT",{},NIL,.T.,"O",NIL,NIL) 
	nTElem1 := len(oNodes1)
	For nRElem1 := 1 to nTElem1 
		If !WSIsNilNode( oNodes1[nRElem1] )
			aadd(::oWSOPPORTUNITYSTRUCT , MTSELLEROPPORTUNITY_OPPORTUNITYSTRUCT():New() )
			::oWSOPPORTUNITYSTRUCT[len(::oWSOPPORTUNITYSTRUCT)]:SoapRecv(oNodes1[nRElem1])
		Endif
	Next
Return

// WSDL Data Structure ARRAYOFBRWHEADER

WSSTRUCT MTSELLEROPPORTUNITY_ARRAYOFBRWHEADER
	WSDATA   oWSBRWHEADER              AS MTSELLEROPPORTUNITY_BRWHEADER OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT MTSELLEROPPORTUNITY_ARRAYOFBRWHEADER
	::Init()
Return Self

WSMETHOD INIT WSCLIENT MTSELLEROPPORTUNITY_ARRAYOFBRWHEADER
	::oWSBRWHEADER         := {} // Array Of  MTSELLEROPPORTUNITY_BRWHEADER():New()
Return

WSMETHOD CLONE WSCLIENT MTSELLEROPPORTUNITY_ARRAYOFBRWHEADER
	Local oClone := MTSELLEROPPORTUNITY_ARRAYOFBRWHEADER():NEW()
	oClone:oWSBRWHEADER := NIL
	If ::oWSBRWHEADER <> NIL 
		oClone:oWSBRWHEADER := {}
		aEval( ::oWSBRWHEADER , { |x| aadd( oClone:oWSBRWHEADER , x:Clone() ) } )
	Endif 
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT MTSELLEROPPORTUNITY_ARRAYOFBRWHEADER
	Local nRElem1, oNodes1, nTElem1
	::Init()
	If oResponse = NIL ; Return ; Endif 
	oNodes1 :=  WSAdvValue( oResponse,"_BRWHEADER","BRWHEADER",{},NIL,.T.,"O",NIL,NIL) 
	nTElem1 := len(oNodes1)
	For nRElem1 := 1 to nTElem1 
		If !WSIsNilNode( oNodes1[nRElem1] )
			aadd(::oWSBRWHEADER , MTSELLEROPPORTUNITY_BRWHEADER():New() )
			::oWSBRWHEADER[len(::oWSBRWHEADER)]:SoapRecv(oNodes1[nRElem1])
		Endif
	Next
Return

// WSDL Data Structure OPPORTUNITYVIEW

WSSTRUCT MTSELLEROPPORTUNITY_OPPORTUNITYVIEW
	WSDATA   cBUDGETID                 AS string OPTIONAL
	WSDATA   oWSCOMPETITOR             AS MTSELLEROPPORTUNITY_ARRAYOFCOMPETITORVIEW OPTIONAL
	WSDATA   oWSCONTACTS               AS MTSELLEROPPORTUNITY_ARRAYOFCONTACTVIEW OPTIONAL
	WSDATA   oWSHEADER                 AS MTSELLEROPPORTUNITY_OPPORTUNITYSTRUCT
	WSDATA   oWSPARTNERS               AS MTSELLEROPPORTUNITY_ARRAYOFGENERICVIEW OPTIONAL
	WSDATA   oWSSALESTEAM              AS MTSELLEROPPORTUNITY_ARRAYOFGENERICVIEW OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPSEND
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT MTSELLEROPPORTUNITY_OPPORTUNITYVIEW
	::Init()
Return Self

WSMETHOD INIT WSCLIENT MTSELLEROPPORTUNITY_OPPORTUNITYVIEW
Return

WSMETHOD CLONE WSCLIENT MTSELLEROPPORTUNITY_OPPORTUNITYVIEW
	Local oClone := MTSELLEROPPORTUNITY_OPPORTUNITYVIEW():NEW()
	oClone:cBUDGETID            := ::cBUDGETID
	oClone:oWSCOMPETITOR        := IIF(::oWSCOMPETITOR = NIL , NIL , ::oWSCOMPETITOR:Clone() )
	oClone:oWSCONTACTS          := IIF(::oWSCONTACTS = NIL , NIL , ::oWSCONTACTS:Clone() )
	oClone:oWSHEADER            := IIF(::oWSHEADER = NIL , NIL , ::oWSHEADER:Clone() )
	oClone:oWSPARTNERS          := IIF(::oWSPARTNERS = NIL , NIL , ::oWSPARTNERS:Clone() )
	oClone:oWSSALESTEAM         := IIF(::oWSSALESTEAM = NIL , NIL , ::oWSSALESTEAM:Clone() )
Return oClone

WSMETHOD SOAPSEND WSCLIENT MTSELLEROPPORTUNITY_OPPORTUNITYVIEW
	Local cSoap := ""
	cSoap += WSSoapValue("BUDGETID", ::cBUDGETID, ::cBUDGETID , "string", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("COMPETITOR", ::oWSCOMPETITOR, ::oWSCOMPETITOR , "ARRAYOFCOMPETITORVIEW", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("CONTACTS", ::oWSCONTACTS, ::oWSCONTACTS , "ARRAYOFCONTACTVIEW", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("HEADER", ::oWSHEADER, ::oWSHEADER , "OPPORTUNITYSTRUCT", .T. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("PARTNERS", ::oWSPARTNERS, ::oWSPARTNERS , "ARRAYOFGENERICVIEW", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("SALESTEAM", ::oWSSALESTEAM, ::oWSSALESTEAM , "ARRAYOFGENERICVIEW", .F. , .F., 0 , NIL, .F.,.F.) 
Return cSoap

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT MTSELLEROPPORTUNITY_OPPORTUNITYVIEW
	Local oNode2
	Local oNode3
	Local oNode4
	Local oNode5
	Local oNode6
	::Init()
	If oResponse = NIL ; Return ; Endif 
	::cBUDGETID          :=  WSAdvValue( oResponse,"_BUDGETID","string",NIL,NIL,NIL,"S",NIL,NIL) 
	oNode2 :=  WSAdvValue( oResponse,"_COMPETITOR","ARRAYOFCOMPETITORVIEW",NIL,NIL,NIL,"O",NIL,NIL) 
	If oNode2 != NIL
		::oWSCOMPETITOR := MTSELLEROPPORTUNITY_ARRAYOFCOMPETITORVIEW():New()
		::oWSCOMPETITOR:SoapRecv(oNode2)
	EndIf
	oNode3 :=  WSAdvValue( oResponse,"_CONTACTS","ARRAYOFCONTACTVIEW",NIL,NIL,NIL,"O",NIL,NIL) 
	If oNode3 != NIL
		::oWSCONTACTS := MTSELLEROPPORTUNITY_ARRAYOFCONTACTVIEW():New()
		::oWSCONTACTS:SoapRecv(oNode3)
	EndIf
	oNode4 :=  WSAdvValue( oResponse,"_HEADER","OPPORTUNITYSTRUCT",NIL,"Property oWSHEADER as s0:OPPORTUNITYSTRUCT on SOAP Response not found.",NIL,"O",NIL,NIL) 
	If oNode4 != NIL
		::oWSHEADER := MTSELLEROPPORTUNITY_OPPORTUNITYSTRUCT():New()
		::oWSHEADER:SoapRecv(oNode4)
	EndIf
	oNode5 :=  WSAdvValue( oResponse,"_PARTNERS","ARRAYOFGENERICVIEW",NIL,NIL,NIL,"O",NIL,NIL) 
	If oNode5 != NIL
		::oWSPARTNERS := MTSELLEROPPORTUNITY_ARRAYOFGENERICVIEW():New()
		::oWSPARTNERS:SoapRecv(oNode5)
	EndIf
	oNode6 :=  WSAdvValue( oResponse,"_SALESTEAM","ARRAYOFGENERICVIEW",NIL,NIL,NIL,"O",NIL,NIL) 
	If oNode6 != NIL
		::oWSSALESTEAM := MTSELLEROPPORTUNITY_ARRAYOFGENERICVIEW():New()
		::oWSSALESTEAM:SoapRecv(oNode6)
	EndIf
Return

// WSDL Data Structure OPPORTUNITYSTRUCT

WSSTRUCT MTSELLEROPPORTUNITY_OPPORTUNITYSTRUCT
	WSDATA   nACCOMPLISHMENT           AS float OPTIONAL
	WSDATA   cBUDGETID                 AS string OPTIONAL
	WSDATA   cCRITICALFAILUREFACTOR    AS string OPTIONAL
	WSDATA   cCRITICALSUCCESSFACTOR    AS string OPTIONAL
	WSDATA   nCURRENCY                 AS float OPTIONAL
	WSDATA   cDESCRIPTION              AS string
	WSDATA   dGOALDATE                 AS date
	WSDATA   dISSUEDATE                AS date OPTIONAL
	WSDATA   cNOTES                    AS string OPTIONAL
	WSDATA   cOPPORTUNITYID            AS string OPTIONAL
	WSDATA   cOPPORTUNITYSTATUS        AS string OPTIONAL
	WSDATA   cPRIORITY                 AS string OPTIONAL
	WSDATA   cPRODUCTCODE              AS string OPTIONAL
	WSDATA   nPROJECTALLOCATEDAMOUNT   AS float OPTIONAL
	WSDATA   cPROSPECTCODE             AS string OPTIONAL
	WSDATA   cSALESPROCESS             AS string
	WSDATA   cSALESSTAGE               AS string
	WSDATA   cSELLERCODE               AS string
	WSDATA   dSTARTDATE                AS date
	WSDATA   cUNITPROSPECTCODE         AS string OPTIONAL
	WSDATA   oWSUSERFIELDS             AS MTSELLEROPPORTUNITY_ARRAYOFUSERFIELD OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPSEND
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT MTSELLEROPPORTUNITY_OPPORTUNITYSTRUCT
	::Init()
Return Self

WSMETHOD INIT WSCLIENT MTSELLEROPPORTUNITY_OPPORTUNITYSTRUCT
Return

WSMETHOD CLONE WSCLIENT MTSELLEROPPORTUNITY_OPPORTUNITYSTRUCT
	Local oClone := MTSELLEROPPORTUNITY_OPPORTUNITYSTRUCT():NEW()
	oClone:nACCOMPLISHMENT      := ::nACCOMPLISHMENT
	oClone:cBUDGETID            := ::cBUDGETID
	oClone:cCRITICALFAILUREFACTOR := ::cCRITICALFAILUREFACTOR
	oClone:cCRITICALSUCCESSFACTOR := ::cCRITICALSUCCESSFACTOR
	oClone:nCURRENCY            := ::nCURRENCY
	oClone:cDESCRIPTION         := ::cDESCRIPTION
	oClone:dGOALDATE            := ::dGOALDATE
	oClone:dISSUEDATE           := ::dISSUEDATE
	oClone:cNOTES               := ::cNOTES
	oClone:cOPPORTUNITYID       := ::cOPPORTUNITYID
	oClone:cOPPORTUNITYSTATUS   := ::cOPPORTUNITYSTATUS
	oClone:cPRIORITY            := ::cPRIORITY
	oClone:cPRODUCTCODE         := ::cPRODUCTCODE
	oClone:nPROJECTALLOCATEDAMOUNT := ::nPROJECTALLOCATEDAMOUNT
	oClone:cPROSPECTCODE        := ::cPROSPECTCODE
	oClone:cSALESPROCESS        := ::cSALESPROCESS
	oClone:cSALESSTAGE          := ::cSALESSTAGE
	oClone:cSELLERCODE          := ::cSELLERCODE
	oClone:dSTARTDATE           := ::dSTARTDATE
	oClone:cUNITPROSPECTCODE    := ::cUNITPROSPECTCODE
	oClone:oWSUSERFIELDS        := IIF(::oWSUSERFIELDS = NIL , NIL , ::oWSUSERFIELDS:Clone() )
Return oClone

WSMETHOD SOAPSEND WSCLIENT MTSELLEROPPORTUNITY_OPPORTUNITYSTRUCT
	Local cSoap := ""
	cSoap += WSSoapValue("ACCOMPLISHMENT", ::nACCOMPLISHMENT, ::nACCOMPLISHMENT , "float", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("BUDGETID", ::cBUDGETID, ::cBUDGETID , "string", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("CRITICALFAILUREFACTOR", ::cCRITICALFAILUREFACTOR, ::cCRITICALFAILUREFACTOR , "string", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("CRITICALSUCCESSFACTOR", ::cCRITICALSUCCESSFACTOR, ::cCRITICALSUCCESSFACTOR , "string", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("CURRENCY", ::nCURRENCY, ::nCURRENCY , "float", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("DESCRIPTION", ::cDESCRIPTION, ::cDESCRIPTION , "string", .T. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("GOALDATE", ::dGOALDATE, ::dGOALDATE , "date", .T. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("ISSUEDATE", ::dISSUEDATE, ::dISSUEDATE , "date", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("NOTES", ::cNOTES, ::cNOTES , "string", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("OPPORTUNITYID", ::cOPPORTUNITYID, ::cOPPORTUNITYID , "string", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("OPPORTUNITYSTATUS", ::cOPPORTUNITYSTATUS, ::cOPPORTUNITYSTATUS , "string", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("PRIORITY", ::cPRIORITY, ::cPRIORITY , "string", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("PRODUCTCODE", ::cPRODUCTCODE, ::cPRODUCTCODE , "string", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("PROJECTALLOCATEDAMOUNT", ::nPROJECTALLOCATEDAMOUNT, ::nPROJECTALLOCATEDAMOUNT , "float", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("PROSPECTCODE", ::cPROSPECTCODE, ::cPROSPECTCODE , "string", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("SALESPROCESS", ::cSALESPROCESS, ::cSALESPROCESS , "string", .T. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("SALESSTAGE", ::cSALESSTAGE, ::cSALESSTAGE , "string", .T. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("SELLERCODE", ::cSELLERCODE, ::cSELLERCODE , "string", .T. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("STARTDATE", ::dSTARTDATE, ::dSTARTDATE , "date", .T. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("UNITPROSPECTCODE", ::cUNITPROSPECTCODE, ::cUNITPROSPECTCODE , "string", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("USERFIELDS", ::oWSUSERFIELDS, ::oWSUSERFIELDS , "ARRAYOFUSERFIELD", .F. , .F., 0 , NIL, .F.,.F.) 
Return cSoap

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT MTSELLEROPPORTUNITY_OPPORTUNITYSTRUCT
	Local oNode21
	::Init()
	If oResponse = NIL ; Return ; Endif 
	::nACCOMPLISHMENT    :=  WSAdvValue( oResponse,"_ACCOMPLISHMENT","float",NIL,NIL,NIL,"N",NIL,NIL) 
	::cBUDGETID          :=  WSAdvValue( oResponse,"_BUDGETID","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cCRITICALFAILUREFACTOR :=  WSAdvValue( oResponse,"_CRITICALFAILUREFACTOR","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cCRITICALSUCCESSFACTOR :=  WSAdvValue( oResponse,"_CRITICALSUCCESSFACTOR","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::nCURRENCY          :=  WSAdvValue( oResponse,"_CURRENCY","float",NIL,NIL,NIL,"N",NIL,NIL) 
	::cDESCRIPTION       :=  WSAdvValue( oResponse,"_DESCRIPTION","string",NIL,"Property cDESCRIPTION as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::dGOALDATE          :=  WSAdvValue( oResponse,"_GOALDATE","date",NIL,"Property dGOALDATE as s:date on SOAP Response not found.",NIL,"D",NIL,NIL) 
	::dISSUEDATE         :=  WSAdvValue( oResponse,"_ISSUEDATE","date",NIL,NIL,NIL,"D",NIL,NIL) 
	::cNOTES             :=  WSAdvValue( oResponse,"_NOTES","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cOPPORTUNITYID     :=  WSAdvValue( oResponse,"_OPPORTUNITYID","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cOPPORTUNITYSTATUS :=  WSAdvValue( oResponse,"_OPPORTUNITYSTATUS","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cPRIORITY          :=  WSAdvValue( oResponse,"_PRIORITY","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cPRODUCTCODE       :=  WSAdvValue( oResponse,"_PRODUCTCODE","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::nPROJECTALLOCATEDAMOUNT :=  WSAdvValue( oResponse,"_PROJECTALLOCATEDAMOUNT","float",NIL,NIL,NIL,"N",NIL,NIL) 
	::cPROSPECTCODE      :=  WSAdvValue( oResponse,"_PROSPECTCODE","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cSALESPROCESS      :=  WSAdvValue( oResponse,"_SALESPROCESS","string",NIL,"Property cSALESPROCESS as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::cSALESSTAGE        :=  WSAdvValue( oResponse,"_SALESSTAGE","string",NIL,"Property cSALESSTAGE as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::cSELLERCODE        :=  WSAdvValue( oResponse,"_SELLERCODE","string",NIL,"Property cSELLERCODE as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::dSTARTDATE         :=  WSAdvValue( oResponse,"_STARTDATE","date",NIL,"Property dSTARTDATE as s:date on SOAP Response not found.",NIL,"D",NIL,NIL) 
	::cUNITPROSPECTCODE  :=  WSAdvValue( oResponse,"_UNITPROSPECTCODE","string",NIL,NIL,NIL,"S",NIL,NIL) 
	oNode21 :=  WSAdvValue( oResponse,"_USERFIELDS","ARRAYOFUSERFIELD",NIL,NIL,NIL,"O",NIL,NIL) 
	If oNode21 != NIL
		::oWSUSERFIELDS := MTSELLEROPPORTUNITY_ARRAYOFUSERFIELD():New()
		::oWSUSERFIELDS:SoapRecv(oNode21)
	EndIf
Return

// WSDL Data Structure BRWHEADER

WSSTRUCT MTSELLEROPPORTUNITY_BRWHEADER
	WSDATA   cHEADERCOMBOBOX           AS string OPTIONAL
	WSDATA   nHEADERDEC                AS integer
	WSDATA   cHEADERF3                 AS string OPTIONAL
	WSDATA   cHEADERFIELD              AS string
	WSDATA   lHEADEROBLIG              AS boolean OPTIONAL
	WSDATA   cHEADERPICTURE            AS string
	WSDATA   nHEADERSIZE               AS integer
	WSDATA   cHEADERTITLE              AS string
	WSDATA   cHEADERTYPE               AS string
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT MTSELLEROPPORTUNITY_BRWHEADER
	::Init()
Return Self

WSMETHOD INIT WSCLIENT MTSELLEROPPORTUNITY_BRWHEADER
Return

WSMETHOD CLONE WSCLIENT MTSELLEROPPORTUNITY_BRWHEADER
	Local oClone := MTSELLEROPPORTUNITY_BRWHEADER():NEW()
	oClone:cHEADERCOMBOBOX      := ::cHEADERCOMBOBOX
	oClone:nHEADERDEC           := ::nHEADERDEC
	oClone:cHEADERF3            := ::cHEADERF3
	oClone:cHEADERFIELD         := ::cHEADERFIELD
	oClone:lHEADEROBLIG         := ::lHEADEROBLIG
	oClone:cHEADERPICTURE       := ::cHEADERPICTURE
	oClone:nHEADERSIZE          := ::nHEADERSIZE
	oClone:cHEADERTITLE         := ::cHEADERTITLE
	oClone:cHEADERTYPE          := ::cHEADERTYPE
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT MTSELLEROPPORTUNITY_BRWHEADER
	::Init()
	If oResponse = NIL ; Return ; Endif 
	::cHEADERCOMBOBOX    :=  WSAdvValue( oResponse,"_HEADERCOMBOBOX","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::nHEADERDEC         :=  WSAdvValue( oResponse,"_HEADERDEC","integer",NIL,"Property nHEADERDEC as s:integer on SOAP Response not found.",NIL,"N",NIL,NIL) 
	::cHEADERF3          :=  WSAdvValue( oResponse,"_HEADERF3","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cHEADERFIELD       :=  WSAdvValue( oResponse,"_HEADERFIELD","string",NIL,"Property cHEADERFIELD as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::lHEADEROBLIG       :=  WSAdvValue( oResponse,"_HEADEROBLIG","boolean",NIL,NIL,NIL,"L",NIL,NIL) 
	::cHEADERPICTURE     :=  WSAdvValue( oResponse,"_HEADERPICTURE","string",NIL,"Property cHEADERPICTURE as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::nHEADERSIZE        :=  WSAdvValue( oResponse,"_HEADERSIZE","integer",NIL,"Property nHEADERSIZE as s:integer on SOAP Response not found.",NIL,"N",NIL,NIL) 
	::cHEADERTITLE       :=  WSAdvValue( oResponse,"_HEADERTITLE","string",NIL,"Property cHEADERTITLE as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::cHEADERTYPE        :=  WSAdvValue( oResponse,"_HEADERTYPE","string",NIL,"Property cHEADERTYPE as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
Return

// WSDL Data Structure ARRAYOFCOMPETITORVIEW

WSSTRUCT MTSELLEROPPORTUNITY_ARRAYOFCOMPETITORVIEW
	WSDATA   oWSCOMPETITORVIEW         AS MTSELLEROPPORTUNITY_COMPETITORVIEW OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPSEND
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT MTSELLEROPPORTUNITY_ARRAYOFCOMPETITORVIEW
	::Init()
Return Self

WSMETHOD INIT WSCLIENT MTSELLEROPPORTUNITY_ARRAYOFCOMPETITORVIEW
	::oWSCOMPETITORVIEW    := {} // Array Of  MTSELLEROPPORTUNITY_COMPETITORVIEW():New()
Return

WSMETHOD CLONE WSCLIENT MTSELLEROPPORTUNITY_ARRAYOFCOMPETITORVIEW
	Local oClone := MTSELLEROPPORTUNITY_ARRAYOFCOMPETITORVIEW():NEW()
	oClone:oWSCOMPETITORVIEW := NIL
	If ::oWSCOMPETITORVIEW <> NIL 
		oClone:oWSCOMPETITORVIEW := {}
		aEval( ::oWSCOMPETITORVIEW , { |x| aadd( oClone:oWSCOMPETITORVIEW , x:Clone() ) } )
	Endif 
Return oClone

WSMETHOD SOAPSEND WSCLIENT MTSELLEROPPORTUNITY_ARRAYOFCOMPETITORVIEW
	Local cSoap := ""
	aEval( ::oWSCOMPETITORVIEW , {|x| cSoap := cSoap  +  WSSoapValue("COMPETITORVIEW", x , x , "COMPETITORVIEW", .F. , .F., 0 , NIL, .F.,.F.)  } ) 
Return cSoap

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT MTSELLEROPPORTUNITY_ARRAYOFCOMPETITORVIEW
	Local nRElem1, oNodes1, nTElem1
	::Init()
	If oResponse = NIL ; Return ; Endif 
	oNodes1 :=  WSAdvValue( oResponse,"_COMPETITORVIEW","COMPETITORVIEW",{},NIL,.T.,"O",NIL,NIL) 
	nTElem1 := len(oNodes1)
	For nRElem1 := 1 to nTElem1 
		If !WSIsNilNode( oNodes1[nRElem1] )
			aadd(::oWSCOMPETITORVIEW , MTSELLEROPPORTUNITY_COMPETITORVIEW():New() )
			::oWSCOMPETITORVIEW[len(::oWSCOMPETITORVIEW)]:SoapRecv(oNodes1[nRElem1])
		Endif
	Next
Return

// WSDL Data Structure ARRAYOFCONTACTVIEW

WSSTRUCT MTSELLEROPPORTUNITY_ARRAYOFCONTACTVIEW
	WSDATA   oWSCONTACTVIEW            AS MTSELLEROPPORTUNITY_CONTACTVIEW OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPSEND
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT MTSELLEROPPORTUNITY_ARRAYOFCONTACTVIEW
	::Init()
Return Self

WSMETHOD INIT WSCLIENT MTSELLEROPPORTUNITY_ARRAYOFCONTACTVIEW
	::oWSCONTACTVIEW       := {} // Array Of  MTSELLEROPPORTUNITY_CONTACTVIEW():New()
Return

WSMETHOD CLONE WSCLIENT MTSELLEROPPORTUNITY_ARRAYOFCONTACTVIEW
	Local oClone := MTSELLEROPPORTUNITY_ARRAYOFCONTACTVIEW():NEW()
	oClone:oWSCONTACTVIEW := NIL
	If ::oWSCONTACTVIEW <> NIL 
		oClone:oWSCONTACTVIEW := {}
		aEval( ::oWSCONTACTVIEW , { |x| aadd( oClone:oWSCONTACTVIEW , x:Clone() ) } )
	Endif 
Return oClone

WSMETHOD SOAPSEND WSCLIENT MTSELLEROPPORTUNITY_ARRAYOFCONTACTVIEW
	Local cSoap := ""
	aEval( ::oWSCONTACTVIEW , {|x| cSoap := cSoap  +  WSSoapValue("CONTACTVIEW", x , x , "CONTACTVIEW", .F. , .F., 0 , NIL, .F.,.F.)  } ) 
Return cSoap

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT MTSELLEROPPORTUNITY_ARRAYOFCONTACTVIEW
	Local nRElem1, oNodes1, nTElem1
	::Init()
	If oResponse = NIL ; Return ; Endif 
	oNodes1 :=  WSAdvValue( oResponse,"_CONTACTVIEW","CONTACTVIEW",{},NIL,.T.,"O",NIL,NIL) 
	nTElem1 := len(oNodes1)
	For nRElem1 := 1 to nTElem1 
		If !WSIsNilNode( oNodes1[nRElem1] )
			aadd(::oWSCONTACTVIEW , MTSELLEROPPORTUNITY_CONTACTVIEW():New() )
			::oWSCONTACTVIEW[len(::oWSCONTACTVIEW)]:SoapRecv(oNodes1[nRElem1])
		Endif
	Next
Return

// WSDL Data Structure ARRAYOFGENERICVIEW

WSSTRUCT MTSELLEROPPORTUNITY_ARRAYOFGENERICVIEW
	WSDATA   oWSGENERICVIEW            AS MTSELLEROPPORTUNITY_GENERICVIEW OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPSEND
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT MTSELLEROPPORTUNITY_ARRAYOFGENERICVIEW
	::Init()
Return Self

WSMETHOD INIT WSCLIENT MTSELLEROPPORTUNITY_ARRAYOFGENERICVIEW
	::oWSGENERICVIEW       := {} // Array Of  MTSELLEROPPORTUNITY_GENERICVIEW():New()
Return

WSMETHOD CLONE WSCLIENT MTSELLEROPPORTUNITY_ARRAYOFGENERICVIEW
	Local oClone := MTSELLEROPPORTUNITY_ARRAYOFGENERICVIEW():NEW()
	oClone:oWSGENERICVIEW := NIL
	If ::oWSGENERICVIEW <> NIL 
		oClone:oWSGENERICVIEW := {}
		aEval( ::oWSGENERICVIEW , { |x| aadd( oClone:oWSGENERICVIEW , x:Clone() ) } )
	Endif 
Return oClone

WSMETHOD SOAPSEND WSCLIENT MTSELLEROPPORTUNITY_ARRAYOFGENERICVIEW
	Local cSoap := ""
	aEval( ::oWSGENERICVIEW , {|x| cSoap := cSoap  +  WSSoapValue("GENERICVIEW", x , x , "GENERICVIEW", .F. , .F., 0 , NIL, .F.,.F.)  } ) 
Return cSoap

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT MTSELLEROPPORTUNITY_ARRAYOFGENERICVIEW
	Local nRElem1, oNodes1, nTElem1
	::Init()
	If oResponse = NIL ; Return ; Endif 
	oNodes1 :=  WSAdvValue( oResponse,"_GENERICVIEW","GENERICVIEW",{},NIL,.T.,"O",NIL,NIL) 
	nTElem1 := len(oNodes1)
	For nRElem1 := 1 to nTElem1 
		If !WSIsNilNode( oNodes1[nRElem1] )
			aadd(::oWSGENERICVIEW , MTSELLEROPPORTUNITY_GENERICVIEW():New() )
			::oWSGENERICVIEW[len(::oWSGENERICVIEW)]:SoapRecv(oNodes1[nRElem1])
		Endif
	Next
Return

// WSDL Data Structure ARRAYOFUSERFIELD

WSSTRUCT MTSELLEROPPORTUNITY_ARRAYOFUSERFIELD
	WSDATA   oWSUSERFIELD              AS MTSELLEROPPORTUNITY_USERFIELD OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPSEND
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT MTSELLEROPPORTUNITY_ARRAYOFUSERFIELD
	::Init()
Return Self

WSMETHOD INIT WSCLIENT MTSELLEROPPORTUNITY_ARRAYOFUSERFIELD
	::oWSUSERFIELD         := {} // Array Of  MTSELLEROPPORTUNITY_USERFIELD():New()
Return

WSMETHOD CLONE WSCLIENT MTSELLEROPPORTUNITY_ARRAYOFUSERFIELD
	Local oClone := MTSELLEROPPORTUNITY_ARRAYOFUSERFIELD():NEW()
	oClone:oWSUSERFIELD := NIL
	If ::oWSUSERFIELD <> NIL 
		oClone:oWSUSERFIELD := {}
		aEval( ::oWSUSERFIELD , { |x| aadd( oClone:oWSUSERFIELD , x:Clone() ) } )
	Endif 
Return oClone

WSMETHOD SOAPSEND WSCLIENT MTSELLEROPPORTUNITY_ARRAYOFUSERFIELD
	Local cSoap := ""
	aEval( ::oWSUSERFIELD , {|x| cSoap := cSoap  +  WSSoapValue("USERFIELD", x , x , "USERFIELD", .F. , .F., 0 , NIL, .F.,.F.)  } ) 
Return cSoap

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT MTSELLEROPPORTUNITY_ARRAYOFUSERFIELD
	Local nRElem1, oNodes1, nTElem1
	::Init()
	If oResponse = NIL ; Return ; Endif 
	oNodes1 :=  WSAdvValue( oResponse,"_USERFIELD","USERFIELD",{},NIL,.T.,"O",NIL,NIL) 
	nTElem1 := len(oNodes1)
	For nRElem1 := 1 to nTElem1 
		If !WSIsNilNode( oNodes1[nRElem1] )
			aadd(::oWSUSERFIELD , MTSELLEROPPORTUNITY_USERFIELD():New() )
			::oWSUSERFIELD[len(::oWSUSERFIELD)]:SoapRecv(oNodes1[nRElem1])
		Endif
	Next
Return

// WSDL Data Structure COMPETITORVIEW

WSSTRUCT MTSELLEROPPORTUNITY_COMPETITORVIEW
	WSDATA   cCOMPETITORCODE           AS string
	WSDATA   cCRITICALFAILUREFACTOR    AS string
	WSDATA   cCRITICALSUCCESSFACTOR    AS string
	WSDATA   nCURRENCY                 AS integer
	WSDATA   nPRICE                    AS float
	WSDATA   oWSUSERFIELDS             AS MTSELLEROPPORTUNITY_ARRAYOFUSERFIELD OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPSEND
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT MTSELLEROPPORTUNITY_COMPETITORVIEW
	::Init()
Return Self

WSMETHOD INIT WSCLIENT MTSELLEROPPORTUNITY_COMPETITORVIEW
Return

WSMETHOD CLONE WSCLIENT MTSELLEROPPORTUNITY_COMPETITORVIEW
	Local oClone := MTSELLEROPPORTUNITY_COMPETITORVIEW():NEW()
	oClone:cCOMPETITORCODE      := ::cCOMPETITORCODE
	oClone:cCRITICALFAILUREFACTOR := ::cCRITICALFAILUREFACTOR
	oClone:cCRITICALSUCCESSFACTOR := ::cCRITICALSUCCESSFACTOR
	oClone:nCURRENCY            := ::nCURRENCY
	oClone:nPRICE               := ::nPRICE
	oClone:oWSUSERFIELDS        := IIF(::oWSUSERFIELDS = NIL , NIL , ::oWSUSERFIELDS:Clone() )
Return oClone

WSMETHOD SOAPSEND WSCLIENT MTSELLEROPPORTUNITY_COMPETITORVIEW
	Local cSoap := ""
	cSoap += WSSoapValue("COMPETITORCODE", ::cCOMPETITORCODE, ::cCOMPETITORCODE , "string", .T. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("CRITICALFAILUREFACTOR", ::cCRITICALFAILUREFACTOR, ::cCRITICALFAILUREFACTOR , "string", .T. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("CRITICALSUCCESSFACTOR", ::cCRITICALSUCCESSFACTOR, ::cCRITICALSUCCESSFACTOR , "string", .T. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("CURRENCY", ::nCURRENCY, ::nCURRENCY , "integer", .T. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("PRICE", ::nPRICE, ::nPRICE , "float", .T. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("USERFIELDS", ::oWSUSERFIELDS, ::oWSUSERFIELDS , "ARRAYOFUSERFIELD", .F. , .F., 0 , NIL, .F.,.F.) 
Return cSoap

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT MTSELLEROPPORTUNITY_COMPETITORVIEW
	Local oNode6
	::Init()
	If oResponse = NIL ; Return ; Endif 
	::cCOMPETITORCODE    :=  WSAdvValue( oResponse,"_COMPETITORCODE","string",NIL,"Property cCOMPETITORCODE as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::cCRITICALFAILUREFACTOR :=  WSAdvValue( oResponse,"_CRITICALFAILUREFACTOR","string",NIL,"Property cCRITICALFAILUREFACTOR as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::cCRITICALSUCCESSFACTOR :=  WSAdvValue( oResponse,"_CRITICALSUCCESSFACTOR","string",NIL,"Property cCRITICALSUCCESSFACTOR as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::nCURRENCY          :=  WSAdvValue( oResponse,"_CURRENCY","integer",NIL,"Property nCURRENCY as s:integer on SOAP Response not found.",NIL,"N",NIL,NIL) 
	::nPRICE             :=  WSAdvValue( oResponse,"_PRICE","float",NIL,"Property nPRICE as s:float on SOAP Response not found.",NIL,"N",NIL,NIL) 
	oNode6 :=  WSAdvValue( oResponse,"_USERFIELDS","ARRAYOFUSERFIELD",NIL,NIL,NIL,"O",NIL,NIL) 
	If oNode6 != NIL
		::oWSUSERFIELDS := MTSELLEROPPORTUNITY_ARRAYOFUSERFIELD():New()
		::oWSUSERFIELDS:SoapRecv(oNode6)
	EndIf
Return

// WSDL Data Structure CONTACTVIEW

WSSTRUCT MTSELLEROPPORTUNITY_CONTACTVIEW
	WSDATA   oWSADDRESSES              AS MTSELLEROPPORTUNITY_ARRAYOFADDRESSVIEW OPTIONAL
	WSDATA   cCONTACTID                AS string OPTIONAL
	WSDATA   cDEPARTMENT               AS string OPTIONAL
	WSDATA   cDEPARTMENTDESCRIPTION    AS string OPTIONAL
	WSDATA   cEMAIL                    AS string OPTIONAL
	WSDATA   cFEDERALID                AS string OPTIONAL
	WSDATA   cGROUP                    AS string OPTIONAL
	WSDATA   cGROUPDESCRIPTION         AS string OPTIONAL
	WSDATA   cHOMEPAGE                 AS string OPTIONAL
	WSDATA   cNAME                     AS string
	WSDATA   oWSPHONES                 AS MTSELLEROPPORTUNITY_ARRAYOFPHONEVIEW OPTIONAL
	WSDATA   cPOSITION                 AS string OPTIONAL
	WSDATA   cPOSITIONDESCRIPTION      AS string OPTIONAL
	WSDATA   oWSUSERFIELDS             AS MTSELLEROPPORTUNITY_ARRAYOFUSERFIELD OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPSEND
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT MTSELLEROPPORTUNITY_CONTACTVIEW
	::Init()
Return Self

WSMETHOD INIT WSCLIENT MTSELLEROPPORTUNITY_CONTACTVIEW
Return

WSMETHOD CLONE WSCLIENT MTSELLEROPPORTUNITY_CONTACTVIEW
	Local oClone := MTSELLEROPPORTUNITY_CONTACTVIEW():NEW()
	oClone:oWSADDRESSES         := IIF(::oWSADDRESSES = NIL , NIL , ::oWSADDRESSES:Clone() )
	oClone:cCONTACTID           := ::cCONTACTID
	oClone:cDEPARTMENT          := ::cDEPARTMENT
	oClone:cDEPARTMENTDESCRIPTION := ::cDEPARTMENTDESCRIPTION
	oClone:cEMAIL               := ::cEMAIL
	oClone:cFEDERALID           := ::cFEDERALID
	oClone:cGROUP               := ::cGROUP
	oClone:cGROUPDESCRIPTION    := ::cGROUPDESCRIPTION
	oClone:cHOMEPAGE            := ::cHOMEPAGE
	oClone:cNAME                := ::cNAME
	oClone:oWSPHONES            := IIF(::oWSPHONES = NIL , NIL , ::oWSPHONES:Clone() )
	oClone:cPOSITION            := ::cPOSITION
	oClone:cPOSITIONDESCRIPTION := ::cPOSITIONDESCRIPTION
	oClone:oWSUSERFIELDS        := IIF(::oWSUSERFIELDS = NIL , NIL , ::oWSUSERFIELDS:Clone() )
Return oClone

WSMETHOD SOAPSEND WSCLIENT MTSELLEROPPORTUNITY_CONTACTVIEW
	Local cSoap := ""
	cSoap += WSSoapValue("ADDRESSES", ::oWSADDRESSES, ::oWSADDRESSES , "ARRAYOFADDRESSVIEW", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("CONTACTID", ::cCONTACTID, ::cCONTACTID , "string", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("DEPARTMENT", ::cDEPARTMENT, ::cDEPARTMENT , "string", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("DEPARTMENTDESCRIPTION", ::cDEPARTMENTDESCRIPTION, ::cDEPARTMENTDESCRIPTION , "string", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("EMAIL", ::cEMAIL, ::cEMAIL , "string", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("FEDERALID", ::cFEDERALID, ::cFEDERALID , "string", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("GROUP", ::cGROUP, ::cGROUP , "string", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("GROUPDESCRIPTION", ::cGROUPDESCRIPTION, ::cGROUPDESCRIPTION , "string", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("HOMEPAGE", ::cHOMEPAGE, ::cHOMEPAGE , "string", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("NAME", ::cNAME, ::cNAME , "string", .T. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("PHONES", ::oWSPHONES, ::oWSPHONES , "ARRAYOFPHONEVIEW", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("POSITION", ::cPOSITION, ::cPOSITION , "string", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("POSITIONDESCRIPTION", ::cPOSITIONDESCRIPTION, ::cPOSITIONDESCRIPTION , "string", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("USERFIELDS", ::oWSUSERFIELDS, ::oWSUSERFIELDS , "ARRAYOFUSERFIELD", .F. , .F., 0 , NIL, .F.,.F.) 
Return cSoap

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT MTSELLEROPPORTUNITY_CONTACTVIEW
	Local oNode1
	Local oNode11
	Local oNode14
	::Init()
	If oResponse = NIL ; Return ; Endif 
	oNode1 :=  WSAdvValue( oResponse,"_ADDRESSES","ARRAYOFADDRESSVIEW",NIL,NIL,NIL,"O",NIL,NIL) 
	If oNode1 != NIL
		::oWSADDRESSES := MTSELLEROPPORTUNITY_ARRAYOFADDRESSVIEW():New()
		::oWSADDRESSES:SoapRecv(oNode1)
	EndIf
	::cCONTACTID         :=  WSAdvValue( oResponse,"_CONTACTID","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cDEPARTMENT        :=  WSAdvValue( oResponse,"_DEPARTMENT","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cDEPARTMENTDESCRIPTION :=  WSAdvValue( oResponse,"_DEPARTMENTDESCRIPTION","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cEMAIL             :=  WSAdvValue( oResponse,"_EMAIL","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cFEDERALID         :=  WSAdvValue( oResponse,"_FEDERALID","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cGROUP             :=  WSAdvValue( oResponse,"_GROUP","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cGROUPDESCRIPTION  :=  WSAdvValue( oResponse,"_GROUPDESCRIPTION","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cHOMEPAGE          :=  WSAdvValue( oResponse,"_HOMEPAGE","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cNAME              :=  WSAdvValue( oResponse,"_NAME","string",NIL,"Property cNAME as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	oNode11 :=  WSAdvValue( oResponse,"_PHONES","ARRAYOFPHONEVIEW",NIL,NIL,NIL,"O",NIL,NIL) 
	If oNode11 != NIL
		::oWSPHONES := MTSELLEROPPORTUNITY_ARRAYOFPHONEVIEW():New()
		::oWSPHONES:SoapRecv(oNode11)
	EndIf
	::cPOSITION          :=  WSAdvValue( oResponse,"_POSITION","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cPOSITIONDESCRIPTION :=  WSAdvValue( oResponse,"_POSITIONDESCRIPTION","string",NIL,NIL,NIL,"S",NIL,NIL) 
	oNode14 :=  WSAdvValue( oResponse,"_USERFIELDS","ARRAYOFUSERFIELD",NIL,NIL,NIL,"O",NIL,NIL) 
	If oNode14 != NIL
		::oWSUSERFIELDS := MTSELLEROPPORTUNITY_ARRAYOFUSERFIELD():New()
		::oWSUSERFIELDS:SoapRecv(oNode14)
	EndIf
Return

// WSDL Data Structure GENERICVIEW

WSSTRUCT MTSELLEROPPORTUNITY_GENERICVIEW
	WSDATA   cCODE                     AS string
	WSDATA   cDESCRIPTION              AS string
	WSDATA   oWSUSERFIELDS             AS MTSELLEROPPORTUNITY_ARRAYOFUSERFIELD OPTIONAL
	WSDATA   nVALUE                    AS float OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPSEND
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT MTSELLEROPPORTUNITY_GENERICVIEW
	::Init()
Return Self

WSMETHOD INIT WSCLIENT MTSELLEROPPORTUNITY_GENERICVIEW
Return

WSMETHOD CLONE WSCLIENT MTSELLEROPPORTUNITY_GENERICVIEW
	Local oClone := MTSELLEROPPORTUNITY_GENERICVIEW():NEW()
	oClone:cCODE                := ::cCODE
	oClone:cDESCRIPTION         := ::cDESCRIPTION
	oClone:oWSUSERFIELDS        := IIF(::oWSUSERFIELDS = NIL , NIL , ::oWSUSERFIELDS:Clone() )
	oClone:nVALUE               := ::nVALUE
Return oClone

WSMETHOD SOAPSEND WSCLIENT MTSELLEROPPORTUNITY_GENERICVIEW
	Local cSoap := ""
	cSoap += WSSoapValue("CODE", ::cCODE, ::cCODE , "string", .T. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("DESCRIPTION", ::cDESCRIPTION, ::cDESCRIPTION , "string", .T. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("USERFIELDS", ::oWSUSERFIELDS, ::oWSUSERFIELDS , "ARRAYOFUSERFIELD", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("VALUE", ::nVALUE, ::nVALUE , "float", .F. , .F., 0 , NIL, .F.,.F.) 
Return cSoap

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT MTSELLEROPPORTUNITY_GENERICVIEW
	Local oNode3
	::Init()
	If oResponse = NIL ; Return ; Endif 
	::cCODE              :=  WSAdvValue( oResponse,"_CODE","string",NIL,"Property cCODE as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::cDESCRIPTION       :=  WSAdvValue( oResponse,"_DESCRIPTION","string",NIL,"Property cDESCRIPTION as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	oNode3 :=  WSAdvValue( oResponse,"_USERFIELDS","ARRAYOFUSERFIELD",NIL,NIL,NIL,"O",NIL,NIL) 
	If oNode3 != NIL
		::oWSUSERFIELDS := MTSELLEROPPORTUNITY_ARRAYOFUSERFIELD():New()
		::oWSUSERFIELDS:SoapRecv(oNode3)
	EndIf
	::nVALUE             :=  WSAdvValue( oResponse,"_VALUE","float",NIL,NIL,NIL,"N",NIL,NIL) 
Return

// WSDL Data Structure USERFIELD

WSSTRUCT MTSELLEROPPORTUNITY_USERFIELD
	WSDATA   cUSERCOMBOBOX             AS string OPTIONAL
	WSDATA   nUSERDEC                  AS integer OPTIONAL
	WSDATA   cUSERF3                   AS string OPTIONAL
	WSDATA   cUSERNAME                 AS string
	WSDATA   lUSEROBLIG                AS boolean OPTIONAL
	WSDATA   cUSERPICTURE              AS string OPTIONAL
	WSDATA   nUSERSIZE                 AS integer OPTIONAL
	WSDATA   cUSERTAG                  AS string OPTIONAL
	WSDATA   cUSERTITLE                AS string OPTIONAL
	WSDATA   cUSERTYPE                 AS string
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPSEND
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT MTSELLEROPPORTUNITY_USERFIELD
	::Init()
Return Self

WSMETHOD INIT WSCLIENT MTSELLEROPPORTUNITY_USERFIELD
Return

WSMETHOD CLONE WSCLIENT MTSELLEROPPORTUNITY_USERFIELD
	Local oClone := MTSELLEROPPORTUNITY_USERFIELD():NEW()
	oClone:cUSERCOMBOBOX        := ::cUSERCOMBOBOX
	oClone:nUSERDEC             := ::nUSERDEC
	oClone:cUSERF3              := ::cUSERF3
	oClone:cUSERNAME            := ::cUSERNAME
	oClone:lUSEROBLIG           := ::lUSEROBLIG
	oClone:cUSERPICTURE         := ::cUSERPICTURE
	oClone:nUSERSIZE            := ::nUSERSIZE
	oClone:cUSERTAG             := ::cUSERTAG
	oClone:cUSERTITLE           := ::cUSERTITLE
	oClone:cUSERTYPE            := ::cUSERTYPE
Return oClone

WSMETHOD SOAPSEND WSCLIENT MTSELLEROPPORTUNITY_USERFIELD
	Local cSoap := ""
	cSoap += WSSoapValue("USERCOMBOBOX", ::cUSERCOMBOBOX, ::cUSERCOMBOBOX , "string", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("USERDEC", ::nUSERDEC, ::nUSERDEC , "integer", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("USERF3", ::cUSERF3, ::cUSERF3 , "string", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("USERNAME", ::cUSERNAME, ::cUSERNAME , "string", .T. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("USEROBLIG", ::lUSEROBLIG, ::lUSEROBLIG , "boolean", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("USERPICTURE", ::cUSERPICTURE, ::cUSERPICTURE , "string", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("USERSIZE", ::nUSERSIZE, ::nUSERSIZE , "integer", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("USERTAG", ::cUSERTAG, ::cUSERTAG , "string", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("USERTITLE", ::cUSERTITLE, ::cUSERTITLE , "string", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("USERTYPE", ::cUSERTYPE, ::cUSERTYPE , "string", .T. , .F., 0 , NIL, .F.,.F.) 
Return cSoap

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT MTSELLEROPPORTUNITY_USERFIELD
	::Init()
	If oResponse = NIL ; Return ; Endif 
	::cUSERCOMBOBOX      :=  WSAdvValue( oResponse,"_USERCOMBOBOX","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::nUSERDEC           :=  WSAdvValue( oResponse,"_USERDEC","integer",NIL,NIL,NIL,"N",NIL,NIL) 
	::cUSERF3            :=  WSAdvValue( oResponse,"_USERF3","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cUSERNAME          :=  WSAdvValue( oResponse,"_USERNAME","string",NIL,"Property cUSERNAME as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::lUSEROBLIG         :=  WSAdvValue( oResponse,"_USEROBLIG","boolean",NIL,NIL,NIL,"L",NIL,NIL) 
	::cUSERPICTURE       :=  WSAdvValue( oResponse,"_USERPICTURE","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::nUSERSIZE          :=  WSAdvValue( oResponse,"_USERSIZE","integer",NIL,NIL,NIL,"N",NIL,NIL) 
	::cUSERTAG           :=  WSAdvValue( oResponse,"_USERTAG","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cUSERTITLE         :=  WSAdvValue( oResponse,"_USERTITLE","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cUSERTYPE          :=  WSAdvValue( oResponse,"_USERTYPE","string",NIL,"Property cUSERTYPE as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
Return

// WSDL Data Structure ARRAYOFADDRESSVIEW

WSSTRUCT MTSELLEROPPORTUNITY_ARRAYOFADDRESSVIEW
	WSDATA   oWSADDRESSVIEW            AS MTSELLEROPPORTUNITY_ADDRESSVIEW OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPSEND
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT MTSELLEROPPORTUNITY_ARRAYOFADDRESSVIEW
	::Init()
Return Self

WSMETHOD INIT WSCLIENT MTSELLEROPPORTUNITY_ARRAYOFADDRESSVIEW
	::oWSADDRESSVIEW       := {} // Array Of  MTSELLEROPPORTUNITY_ADDRESSVIEW():New()
Return

WSMETHOD CLONE WSCLIENT MTSELLEROPPORTUNITY_ARRAYOFADDRESSVIEW
	Local oClone := MTSELLEROPPORTUNITY_ARRAYOFADDRESSVIEW():NEW()
	oClone:oWSADDRESSVIEW := NIL
	If ::oWSADDRESSVIEW <> NIL 
		oClone:oWSADDRESSVIEW := {}
		aEval( ::oWSADDRESSVIEW , { |x| aadd( oClone:oWSADDRESSVIEW , x:Clone() ) } )
	Endif 
Return oClone

WSMETHOD SOAPSEND WSCLIENT MTSELLEROPPORTUNITY_ARRAYOFADDRESSVIEW
	Local cSoap := ""
	aEval( ::oWSADDRESSVIEW , {|x| cSoap := cSoap  +  WSSoapValue("ADDRESSVIEW", x , x , "ADDRESSVIEW", .F. , .F., 0 , NIL, .F.,.F.)  } ) 
Return cSoap

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT MTSELLEROPPORTUNITY_ARRAYOFADDRESSVIEW
	Local nRElem1, oNodes1, nTElem1
	::Init()
	If oResponse = NIL ; Return ; Endif 
	oNodes1 :=  WSAdvValue( oResponse,"_ADDRESSVIEW","ADDRESSVIEW",{},NIL,.T.,"O",NIL,NIL) 
	nTElem1 := len(oNodes1)
	For nRElem1 := 1 to nTElem1 
		If !WSIsNilNode( oNodes1[nRElem1] )
			aadd(::oWSADDRESSVIEW , MTSELLEROPPORTUNITY_ADDRESSVIEW():New() )
			::oWSADDRESSVIEW[len(::oWSADDRESSVIEW)]:SoapRecv(oNodes1[nRElem1])
		Endif
	Next
Return

// WSDL Data Structure ARRAYOFPHONEVIEW

WSSTRUCT MTSELLEROPPORTUNITY_ARRAYOFPHONEVIEW
	WSDATA   oWSPHONEVIEW              AS MTSELLEROPPORTUNITY_PHONEVIEW OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPSEND
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT MTSELLEROPPORTUNITY_ARRAYOFPHONEVIEW
	::Init()
Return Self

WSMETHOD INIT WSCLIENT MTSELLEROPPORTUNITY_ARRAYOFPHONEVIEW
	::oWSPHONEVIEW         := {} // Array Of  MTSELLEROPPORTUNITY_PHONEVIEW():New()
Return

WSMETHOD CLONE WSCLIENT MTSELLEROPPORTUNITY_ARRAYOFPHONEVIEW
	Local oClone := MTSELLEROPPORTUNITY_ARRAYOFPHONEVIEW():NEW()
	oClone:oWSPHONEVIEW := NIL
	If ::oWSPHONEVIEW <> NIL 
		oClone:oWSPHONEVIEW := {}
		aEval( ::oWSPHONEVIEW , { |x| aadd( oClone:oWSPHONEVIEW , x:Clone() ) } )
	Endif 
Return oClone

WSMETHOD SOAPSEND WSCLIENT MTSELLEROPPORTUNITY_ARRAYOFPHONEVIEW
	Local cSoap := ""
	aEval( ::oWSPHONEVIEW , {|x| cSoap := cSoap  +  WSSoapValue("PHONEVIEW", x , x , "PHONEVIEW", .F. , .F., 0 , NIL, .F.,.F.)  } ) 
Return cSoap

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT MTSELLEROPPORTUNITY_ARRAYOFPHONEVIEW
	Local nRElem1, oNodes1, nTElem1
	::Init()
	If oResponse = NIL ; Return ; Endif 
	oNodes1 :=  WSAdvValue( oResponse,"_PHONEVIEW","PHONEVIEW",{},NIL,.T.,"O",NIL,NIL) 
	nTElem1 := len(oNodes1)
	For nRElem1 := 1 to nTElem1 
		If !WSIsNilNode( oNodes1[nRElem1] )
			aadd(::oWSPHONEVIEW , MTSELLEROPPORTUNITY_PHONEVIEW():New() )
			::oWSPHONEVIEW[len(::oWSPHONEVIEW)]:SoapRecv(oNodes1[nRElem1])
		Endif
	Next
Return

// WSDL Data Structure ADDRESSVIEW

WSSTRUCT MTSELLEROPPORTUNITY_ADDRESSVIEW
	WSDATA   cADDRESS                  AS string
	WSDATA   cADDRESSNUMBER            AS string
	WSDATA   cCOUNTRY                  AS string OPTIONAL
	WSDATA   cDISTRICT                 AS string
	WSDATA   cSTATE                    AS string
	WSDATA   cTYPEOFADDRESS            AS string
	WSDATA   cZIPCODE                  AS string OPTIONAL
	WSDATA   cZONE                     AS string OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPSEND
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT MTSELLEROPPORTUNITY_ADDRESSVIEW
	::Init()
Return Self

WSMETHOD INIT WSCLIENT MTSELLEROPPORTUNITY_ADDRESSVIEW
Return

WSMETHOD CLONE WSCLIENT MTSELLEROPPORTUNITY_ADDRESSVIEW
	Local oClone := MTSELLEROPPORTUNITY_ADDRESSVIEW():NEW()
	oClone:cADDRESS             := ::cADDRESS
	oClone:cADDRESSNUMBER       := ::cADDRESSNUMBER
	oClone:cCOUNTRY             := ::cCOUNTRY
	oClone:cDISTRICT            := ::cDISTRICT
	oClone:cSTATE               := ::cSTATE
	oClone:cTYPEOFADDRESS       := ::cTYPEOFADDRESS
	oClone:cZIPCODE             := ::cZIPCODE
	oClone:cZONE                := ::cZONE
Return oClone

WSMETHOD SOAPSEND WSCLIENT MTSELLEROPPORTUNITY_ADDRESSVIEW
	Local cSoap := ""
	cSoap += WSSoapValue("ADDRESS", ::cADDRESS, ::cADDRESS , "string", .T. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("ADDRESSNUMBER", ::cADDRESSNUMBER, ::cADDRESSNUMBER , "string", .T. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("COUNTRY", ::cCOUNTRY, ::cCOUNTRY , "string", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("DISTRICT", ::cDISTRICT, ::cDISTRICT , "string", .T. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("STATE", ::cSTATE, ::cSTATE , "string", .T. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("TYPEOFADDRESS", ::cTYPEOFADDRESS, ::cTYPEOFADDRESS , "string", .T. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("ZIPCODE", ::cZIPCODE, ::cZIPCODE , "string", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("ZONE", ::cZONE, ::cZONE , "string", .F. , .F., 0 , NIL, .F.,.F.) 
Return cSoap

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT MTSELLEROPPORTUNITY_ADDRESSVIEW
	::Init()
	If oResponse = NIL ; Return ; Endif 
	::cADDRESS           :=  WSAdvValue( oResponse,"_ADDRESS","string",NIL,"Property cADDRESS as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::cADDRESSNUMBER     :=  WSAdvValue( oResponse,"_ADDRESSNUMBER","string",NIL,"Property cADDRESSNUMBER as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::cCOUNTRY           :=  WSAdvValue( oResponse,"_COUNTRY","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cDISTRICT          :=  WSAdvValue( oResponse,"_DISTRICT","string",NIL,"Property cDISTRICT as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::cSTATE             :=  WSAdvValue( oResponse,"_STATE","string",NIL,"Property cSTATE as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::cTYPEOFADDRESS     :=  WSAdvValue( oResponse,"_TYPEOFADDRESS","string",NIL,"Property cTYPEOFADDRESS as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::cZIPCODE           :=  WSAdvValue( oResponse,"_ZIPCODE","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cZONE              :=  WSAdvValue( oResponse,"_ZONE","string",NIL,NIL,NIL,"S",NIL,NIL) 
Return

// WSDL Data Structure PHONEVIEW

WSSTRUCT MTSELLEROPPORTUNITY_PHONEVIEW
	WSDATA   cCOUNTRYAREACODE          AS string OPTIONAL
	WSDATA   cLOCALAREACODE            AS string OPTIONAL
	WSDATA   cPHONENUMBER              AS string OPTIONAL
	WSDATA   cTYPEOFPHONE              AS string
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPSEND
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT MTSELLEROPPORTUNITY_PHONEVIEW
	::Init()
Return Self

WSMETHOD INIT WSCLIENT MTSELLEROPPORTUNITY_PHONEVIEW
Return

WSMETHOD CLONE WSCLIENT MTSELLEROPPORTUNITY_PHONEVIEW
	Local oClone := MTSELLEROPPORTUNITY_PHONEVIEW():NEW()
	oClone:cCOUNTRYAREACODE     := ::cCOUNTRYAREACODE
	oClone:cLOCALAREACODE       := ::cLOCALAREACODE
	oClone:cPHONENUMBER         := ::cPHONENUMBER
	oClone:cTYPEOFPHONE         := ::cTYPEOFPHONE
Return oClone

WSMETHOD SOAPSEND WSCLIENT MTSELLEROPPORTUNITY_PHONEVIEW
	Local cSoap := ""
	cSoap += WSSoapValue("COUNTRYAREACODE", ::cCOUNTRYAREACODE, ::cCOUNTRYAREACODE , "string", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("LOCALAREACODE", ::cLOCALAREACODE, ::cLOCALAREACODE , "string", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("PHONENUMBER", ::cPHONENUMBER, ::cPHONENUMBER , "string", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("TYPEOFPHONE", ::cTYPEOFPHONE, ::cTYPEOFPHONE , "string", .T. , .F., 0 , NIL, .F.,.F.) 
Return cSoap

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT MTSELLEROPPORTUNITY_PHONEVIEW
	::Init()
	If oResponse = NIL ; Return ; Endif 
	::cCOUNTRYAREACODE   :=  WSAdvValue( oResponse,"_COUNTRYAREACODE","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cLOCALAREACODE     :=  WSAdvValue( oResponse,"_LOCALAREACODE","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cPHONENUMBER       :=  WSAdvValue( oResponse,"_PHONENUMBER","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cTYPEOFPHONE       :=  WSAdvValue( oResponse,"_TYPEOFPHONE","string",NIL,"Property cTYPEOFPHONE as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
Return


