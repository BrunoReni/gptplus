#INCLUDE "PROTHEUS.CH"
#INCLUDE "APWEBSRV.CH"

/* ===============================================================================
WSDL Location    http://localhost/ws/MTSIMULATIONQUOTE.APW?WSDL
Gerado em        03/09/09 09:59:41
Observações      Código-Fonte gerado por ADVPL WSDL Client 1.090116
                 Alterações neste arquivo podem causar funcionamento incorreto
                 e serão perdidas caso o código-fonte seja gerado novamente.
=============================================================================== */

User Function _WDBRLVU ; Return  // "dummy" function - Internal Use 

/* -------------------------------------------------------------------------------
WSDL Service WSMTSIMULATIONQUOTE
------------------------------------------------------------------------------- */

WSCLIENT WSMTSIMULATIONQUOTE

	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD RESET
	WSMETHOD CLONE
	WSMETHOD PUTQUOTE

	WSDATA   _URL                      AS String
	WSDATA   _HEADOUT                  AS Array of String
	WSDATA   cUSERCODE                 AS string
	WSDATA   cSUPPLIER                 AS string
	WSDATA   oWSOLDQUOTE               AS MTSIMULATIONQUOTE_QUOTEVIEW
	WSDATA   oWSPUTQUOTERESULT         AS MTSIMULATIONQUOTE_QUOTEVIEW

	// Estruturas mantidas por compatibilidade - NÃO USAR
	WSDATA   oWSQUOTEVIEW              AS MTSIMULATIONQUOTE_QUOTEVIEW

ENDWSCLIENT

WSMETHOD NEW WSCLIENT WSMTSIMULATIONQUOTE
::Init()
If !FindFunction("XMLCHILDEX")
	UserException("O Código-Fonte Client atual requer os executáveis do Protheus Build [7.00.081215P-20090122] ou superior. Atualize o Protheus ou gere o Código-Fonte novamente utilizando o Build atual.")
EndIf
Return Self

WSMETHOD INIT WSCLIENT WSMTSIMULATIONQUOTE
	::oWSOLDQUOTE        := MTSIMULATIONQUOTE_QUOTEVIEW():New()
	::oWSPUTQUOTERESULT  := MTSIMULATIONQUOTE_QUOTEVIEW():New()

	// Estruturas mantidas por compatibilidade - NÃO USAR
	::oWSQUOTEVIEW       := ::oWSOLDQUOTE
Return

WSMETHOD RESET WSCLIENT WSMTSIMULATIONQUOTE
	::cUSERCODE          := NIL 
	::cSUPPLIER          := NIL 
	::oWSOLDQUOTE        := NIL 
	::oWSPUTQUOTERESULT  := NIL 

	// Estruturas mantidas por compatibilidade - NÃO USAR
	::oWSQUOTEVIEW       := NIL
	::Init()
Return

WSMETHOD CLONE WSCLIENT WSMTSIMULATIONQUOTE
Local oClone := WSMTSIMULATIONQUOTE():New()
	oClone:_URL          := ::_URL 
	oClone:cUSERCODE     := ::cUSERCODE
	oClone:cSUPPLIER     := ::cSUPPLIER
	oClone:oWSOLDQUOTE   :=  IIF(::oWSOLDQUOTE = NIL , NIL ,::oWSOLDQUOTE:Clone() )
	oClone:oWSPUTQUOTERESULT :=  IIF(::oWSPUTQUOTERESULT = NIL , NIL ,::oWSPUTQUOTERESULT:Clone() )

	// Estruturas mantidas por compatibilidade - NÃO USAR
	oClone:oWSQUOTEVIEW  := oClone:oWSOLDQUOTE
Return oClone

// WSDL Method PUTQUOTE of Service WSMTSIMULATIONQUOTE

WSMETHOD PUTQUOTE WSSEND cUSERCODE,cSUPPLIER,oWSOLDQUOTE WSRECEIVE oWSPUTQUOTERESULT WSCLIENT WSMTSIMULATIONQUOTE
Local cSoap := "" , oXmlRet

BEGIN WSMETHOD

cSoap += '<PUTQUOTE xmlns="http://webservices.microsiga.com.br/mtsimulationquote.apw">'
cSoap += WSSoapValue("USERCODE", ::cUSERCODE, cUSERCODE , "string", .T. , .F., 0 , NIL, .F.) 
cSoap += WSSoapValue("SUPPLIER", ::cSUPPLIER, cSUPPLIER , "string", .T. , .F., 0 , NIL, .F.) 
cSoap += WSSoapValue("OLDQUOTE", ::oWSOLDQUOTE, oWSOLDQUOTE , "QUOTEVIEW", .T. , .F., 0 , NIL, .F.) 
cSoap += "</PUTQUOTE>"

oXmlRet := SvcSoapCall(	Self,cSoap,; 
	"http://webservices.microsiga.com.br/mtsimulationquote.apw/PUTQUOTE",; 
	"DOCUMENT","http://webservices.microsiga.com.br/mtsimulationquote.apw",,"1.031217",; 
	"http://localhost/ws/MTSIMULATIONQUOTE.apw")

::Init()
::oWSPUTQUOTERESULT:SoapRecv( WSAdvValue( oXmlRet,"_PUTQUOTERESPONSE:_PUTQUOTERESULT","QUOTEVIEW",NIL,NIL,NIL,NIL,NIL,NIL) )

END WSMETHOD

oXmlRet := NIL
Return .T.


// WSDL Data Structure QUOTEVIEW

WSSTRUCT MTSIMULATIONQUOTE_QUOTEVIEW
	WSDATA   oWSQUOTEHEADER            AS MTSIMULATIONQUOTE_QUOTEHEADERVIEW
	WSDATA   oWSQUOTEITEM              AS MTSIMULATIONQUOTE_ARRAYOFQUOTEITEMVIEW
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPSEND
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT MTSIMULATIONQUOTE_QUOTEVIEW
	::Init()
Return Self

WSMETHOD INIT WSCLIENT MTSIMULATIONQUOTE_QUOTEVIEW
Return

WSMETHOD CLONE WSCLIENT MTSIMULATIONQUOTE_QUOTEVIEW
	Local oClone := MTSIMULATIONQUOTE_QUOTEVIEW():NEW()
	oClone:oWSQUOTEHEADER       := IIF(::oWSQUOTEHEADER = NIL , NIL , ::oWSQUOTEHEADER:Clone() )
	oClone:oWSQUOTEITEM         := IIF(::oWSQUOTEITEM = NIL , NIL , ::oWSQUOTEITEM:Clone() )
Return oClone

WSMETHOD SOAPSEND WSCLIENT MTSIMULATIONQUOTE_QUOTEVIEW
	Local cSoap := ""
	cSoap += WSSoapValue("QUOTEHEADER", ::oWSQUOTEHEADER, ::oWSQUOTEHEADER , "QUOTEHEADERVIEW", .T. , .F., 0 , NIL, .F.) 
	cSoap += WSSoapValue("QUOTEITEM", ::oWSQUOTEITEM, ::oWSQUOTEITEM , "ARRAYOFQUOTEITEMVIEW", .T. , .F., 0 , NIL, .F.) 
Return cSoap

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT MTSIMULATIONQUOTE_QUOTEVIEW
	Local oNode1
	Local oNode2
	::Init()
	If oResponse = NIL ; Return ; Endif 
	oNode1 :=  WSAdvValue( oResponse,"_QUOTEHEADER","QUOTEHEADERVIEW",NIL,"Property oWSQUOTEHEADER as s0:QUOTEHEADERVIEW on SOAP Response not found.",NIL,"O",NIL,NIL) 
	If oNode1 != NIL
		::oWSQUOTEHEADER := MTSIMULATIONQUOTE_QUOTEHEADERVIEW():New()
		::oWSQUOTEHEADER:SoapRecv(oNode1)
	EndIf
	oNode2 :=  WSAdvValue( oResponse,"_QUOTEITEM","ARRAYOFQUOTEITEMVIEW",NIL,"Property oWSQUOTEITEM as s0:ARRAYOFQUOTEITEMVIEW on SOAP Response not found.",NIL,"O",NIL,NIL) 
	If oNode2 != NIL
		::oWSQUOTEITEM := MTSIMULATIONQUOTE_ARRAYOFQUOTEITEMVIEW():New()
		::oWSQUOTEITEM:SoapRecv(oNode2)
	EndIf
Return

// WSDL Data Structure QUOTEHEADERVIEW

WSSTRUCT MTSIMULATIONQUOTE_QUOTEHEADERVIEW
	WSDATA   cCONTACT                  AS string OPTIONAL
	WSDATA   nCURRENCY                 AS integer OPTIONAL
	WSDATA   nCURRENCYRATE             AS float OPTIONAL
	WSDATA   nDISCOUNTINCASCADE1       AS float OPTIONAL
	WSDATA   nDISCOUNTINCASCADE2       AS float OPTIONAL
	WSDATA   nDISCOUNTINCASCADE3       AS float OPTIONAL
	WSDATA   cPAYMENTPLANCODE          AS string
	WSDATA   cPROPOSALID               AS string OPTIONAL
	WSDATA   oWSPURCHASERES            AS MTSIMULATIONQUOTE_ARRAYOFSTRING OPTIONAL
	WSDATA   cQUOTEID                  AS string
	WSDATA   cQUOTESTATUS              AS string OPTIONAL
	WSDATA   dREGISTERDATE             AS date
	WSDATA   cSUPPLIER                 AS string
	WSDATA   oWSUSERFIELDS             AS MTSIMULATIONQUOTE_ARRAYOFUSERFIELD OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPSEND
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT MTSIMULATIONQUOTE_QUOTEHEADERVIEW
	::Init()
Return Self

WSMETHOD INIT WSCLIENT MTSIMULATIONQUOTE_QUOTEHEADERVIEW
Return

WSMETHOD CLONE WSCLIENT MTSIMULATIONQUOTE_QUOTEHEADERVIEW
	Local oClone := MTSIMULATIONQUOTE_QUOTEHEADERVIEW():NEW()
	oClone:cCONTACT             := ::cCONTACT
	oClone:nCURRENCY            := ::nCURRENCY
	oClone:nCURRENCYRATE        := ::nCURRENCYRATE
	oClone:nDISCOUNTINCASCADE1  := ::nDISCOUNTINCASCADE1
	oClone:nDISCOUNTINCASCADE2  := ::nDISCOUNTINCASCADE2
	oClone:nDISCOUNTINCASCADE3  := ::nDISCOUNTINCASCADE3
	oClone:cPAYMENTPLANCODE     := ::cPAYMENTPLANCODE
	oClone:cPROPOSALID          := ::cPROPOSALID
	oClone:oWSPURCHASERES       := IIF(::oWSPURCHASERES = NIL , NIL , ::oWSPURCHASERES:Clone() )
	oClone:cQUOTEID             := ::cQUOTEID
	oClone:cQUOTESTATUS         := ::cQUOTESTATUS
	oClone:dREGISTERDATE        := ::dREGISTERDATE
	oClone:cSUPPLIER            := ::cSUPPLIER
	oClone:oWSUSERFIELDS        := IIF(::oWSUSERFIELDS = NIL , NIL , ::oWSUSERFIELDS:Clone() )
Return oClone

WSMETHOD SOAPSEND WSCLIENT MTSIMULATIONQUOTE_QUOTEHEADERVIEW
	Local cSoap := ""
	cSoap += WSSoapValue("CONTACT", ::cCONTACT, ::cCONTACT , "string", .F. , .F., 0 , NIL, .F.) 
	cSoap += WSSoapValue("CURRENCY", ::nCURRENCY, ::nCURRENCY , "integer", .F. , .F., 0 , NIL, .F.) 
	cSoap += WSSoapValue("CURRENCYRATE", ::nCURRENCYRATE, ::nCURRENCYRATE , "float", .F. , .F., 0 , NIL, .F.) 
	cSoap += WSSoapValue("DISCOUNTINCASCADE1", ::nDISCOUNTINCASCADE1, ::nDISCOUNTINCASCADE1 , "float", .F. , .F., 0 , NIL, .F.) 
	cSoap += WSSoapValue("DISCOUNTINCASCADE2", ::nDISCOUNTINCASCADE2, ::nDISCOUNTINCASCADE2 , "float", .F. , .F., 0 , NIL, .F.) 
	cSoap += WSSoapValue("DISCOUNTINCASCADE3", ::nDISCOUNTINCASCADE3, ::nDISCOUNTINCASCADE3 , "float", .F. , .F., 0 , NIL, .F.) 
	cSoap += WSSoapValue("PAYMENTPLANCODE", ::cPAYMENTPLANCODE, ::cPAYMENTPLANCODE , "string", .T. , .F., 0 , NIL, .F.) 
	cSoap += WSSoapValue("PROPOSALID", ::cPROPOSALID, ::cPROPOSALID , "string", .F. , .F., 0 , NIL, .F.) 
	cSoap += WSSoapValue("PURCHASERES", ::oWSPURCHASERES, ::oWSPURCHASERES , "ARRAYOFSTRING", .F. , .F., 0 , NIL, .F.) 
	cSoap += WSSoapValue("QUOTEID", ::cQUOTEID, ::cQUOTEID , "string", .T. , .F., 0 , NIL, .F.) 
	cSoap += WSSoapValue("QUOTESTATUS", ::cQUOTESTATUS, ::cQUOTESTATUS , "string", .F. , .F., 0 , NIL, .F.) 
	cSoap += WSSoapValue("REGISTERDATE", ::dREGISTERDATE, ::dREGISTERDATE , "date", .T. , .F., 0 , NIL, .F.) 
	cSoap += WSSoapValue("SUPPLIER", ::cSUPPLIER, ::cSUPPLIER , "string", .T. , .F., 0 , NIL, .F.) 
	cSoap += WSSoapValue("USERFIELDS", ::oWSUSERFIELDS, ::oWSUSERFIELDS , "ARRAYOFUSERFIELD", .F. , .F., 0 , NIL, .F.) 
Return cSoap

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT MTSIMULATIONQUOTE_QUOTEHEADERVIEW
	Local oNode9
	Local oNode14
	::Init()
	If oResponse = NIL ; Return ; Endif 
	::cCONTACT           :=  WSAdvValue( oResponse,"_CONTACT","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::nCURRENCY          :=  WSAdvValue( oResponse,"_CURRENCY","integer",NIL,NIL,NIL,"N",NIL,NIL) 
	::nCURRENCYRATE      :=  WSAdvValue( oResponse,"_CURRENCYRATE","float",NIL,NIL,NIL,"N",NIL,NIL) 
	::nDISCOUNTINCASCADE1 :=  WSAdvValue( oResponse,"_DISCOUNTINCASCADE1","float",NIL,NIL,NIL,"N",NIL,NIL) 
	::nDISCOUNTINCASCADE2 :=  WSAdvValue( oResponse,"_DISCOUNTINCASCADE2","float",NIL,NIL,NIL,"N",NIL,NIL) 
	::nDISCOUNTINCASCADE3 :=  WSAdvValue( oResponse,"_DISCOUNTINCASCADE3","float",NIL,NIL,NIL,"N",NIL,NIL) 
	::cPAYMENTPLANCODE   :=  WSAdvValue( oResponse,"_PAYMENTPLANCODE","string",NIL,"Property cPAYMENTPLANCODE as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::cPROPOSALID        :=  WSAdvValue( oResponse,"_PROPOSALID","string",NIL,NIL,NIL,"S",NIL,NIL) 
	oNode9 :=  WSAdvValue( oResponse,"_PURCHASERES","ARRAYOFSTRING",NIL,NIL,NIL,"O",NIL,NIL) 
	If oNode9 != NIL
		::oWSPURCHASERES := MTSIMULATIONQUOTE_ARRAYOFSTRING():New()
		::oWSPURCHASERES:SoapRecv(oNode9)
	EndIf
	::cQUOTEID           :=  WSAdvValue( oResponse,"_QUOTEID","string",NIL,"Property cQUOTEID as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::cQUOTESTATUS       :=  WSAdvValue( oResponse,"_QUOTESTATUS","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::dREGISTERDATE      :=  WSAdvValue( oResponse,"_REGISTERDATE","date",NIL,"Property dREGISTERDATE as s:date on SOAP Response not found.",NIL,"D",NIL,NIL) 
	::cSUPPLIER          :=  WSAdvValue( oResponse,"_SUPPLIER","string",NIL,"Property cSUPPLIER as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	oNode14 :=  WSAdvValue( oResponse,"_USERFIELDS","ARRAYOFUSERFIELD",NIL,NIL,NIL,"O",NIL,NIL) 
	If oNode14 != NIL
		::oWSUSERFIELDS := MTSIMULATIONQUOTE_ARRAYOFUSERFIELD():New()
		::oWSUSERFIELDS:SoapRecv(oNode14)
	EndIf
Return

// WSDL Data Structure ARRAYOFQUOTEITEMVIEW

WSSTRUCT MTSIMULATIONQUOTE_ARRAYOFQUOTEITEMVIEW
	WSDATA   oWSQUOTEITEMVIEW          AS MTSIMULATIONQUOTE_QUOTEITEMVIEW OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPSEND
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT MTSIMULATIONQUOTE_ARRAYOFQUOTEITEMVIEW
	::Init()
Return Self

WSMETHOD INIT WSCLIENT MTSIMULATIONQUOTE_ARRAYOFQUOTEITEMVIEW
	::oWSQUOTEITEMVIEW     := {} // Array Of  MTSIMULATIONQUOTE_QUOTEITEMVIEW():New()
Return

WSMETHOD CLONE WSCLIENT MTSIMULATIONQUOTE_ARRAYOFQUOTEITEMVIEW
	Local oClone := MTSIMULATIONQUOTE_ARRAYOFQUOTEITEMVIEW():NEW()
	oClone:oWSQUOTEITEMVIEW := NIL
	If ::oWSQUOTEITEMVIEW <> NIL 
		oClone:oWSQUOTEITEMVIEW := {}
		aEval( ::oWSQUOTEITEMVIEW , { |x| aadd( oClone:oWSQUOTEITEMVIEW , x:Clone() ) } )
	Endif 
Return oClone

WSMETHOD SOAPSEND WSCLIENT MTSIMULATIONQUOTE_ARRAYOFQUOTEITEMVIEW
	Local cSoap := ""
	aEval( ::oWSQUOTEITEMVIEW , {|x| cSoap := cSoap  +  WSSoapValue("QUOTEITEMVIEW", x , x , "QUOTEITEMVIEW", .F. , .F., 0 , NIL, .F.)  } ) 
Return cSoap

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT MTSIMULATIONQUOTE_ARRAYOFQUOTEITEMVIEW
	Local nRElem1, oNodes1, nTElem1
	::Init()
	If oResponse = NIL ; Return ; Endif 
	oNodes1 :=  WSAdvValue( oResponse,"_QUOTEITEMVIEW","QUOTEITEMVIEW",{},NIL,.T.,"O",NIL,NIL) 
	nTElem1 := len(oNodes1)
	For nRElem1 := 1 to nTElem1 
		If !WSIsNilNode( oNodes1[nRElem1] )
			aadd(::oWSQUOTEITEMVIEW , MTSIMULATIONQUOTE_QUOTEITEMVIEW():New() )
			::oWSQUOTEITEMVIEW[len(::oWSQUOTEITEMVIEW)]:SoapRecv(oNodes1[nRElem1])
		Endif
	Next
Return

// WSDL Data Structure ARRAYOFSTRING

WSSTRUCT MTSIMULATIONQUOTE_ARRAYOFSTRING
	WSDATA   cSTRING                   AS string OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPSEND
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT MTSIMULATIONQUOTE_ARRAYOFSTRING
	::Init()
Return Self

WSMETHOD INIT WSCLIENT MTSIMULATIONQUOTE_ARRAYOFSTRING
	::cSTRING              := {} // Array Of  ""
Return

WSMETHOD CLONE WSCLIENT MTSIMULATIONQUOTE_ARRAYOFSTRING
	Local oClone := MTSIMULATIONQUOTE_ARRAYOFSTRING():NEW()
	oClone:cSTRING              := IIf(::cSTRING <> NIL , aClone(::cSTRING) , NIL )
Return oClone

WSMETHOD SOAPSEND WSCLIENT MTSIMULATIONQUOTE_ARRAYOFSTRING
	Local cSoap := ""
	aEval( ::cSTRING , {|x| cSoap := cSoap  +  WSSoapValue("STRING", x , x , "string", .F. , .F., 0 , NIL, .F.)  } ) 
Return cSoap

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT MTSIMULATIONQUOTE_ARRAYOFSTRING
	Local oNodes1 :=  WSAdvValue( oResponse,"_STRING","string",{},NIL,.T.,"S",NIL,"a") 
	::Init()
	If oResponse = NIL ; Return ; Endif 
	aEval(oNodes1 , { |x| aadd(::cSTRING ,  x:TEXT  ) } )
Return

// WSDL Data Structure ARRAYOFUSERFIELD

WSSTRUCT MTSIMULATIONQUOTE_ARRAYOFUSERFIELD
	WSDATA   oWSUSERFIELD              AS MTSIMULATIONQUOTE_USERFIELD OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPSEND
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT MTSIMULATIONQUOTE_ARRAYOFUSERFIELD
	::Init()
Return Self

WSMETHOD INIT WSCLIENT MTSIMULATIONQUOTE_ARRAYOFUSERFIELD
	::oWSUSERFIELD         := {} // Array Of  MTSIMULATIONQUOTE_USERFIELD():New()
Return

WSMETHOD CLONE WSCLIENT MTSIMULATIONQUOTE_ARRAYOFUSERFIELD
	Local oClone := MTSIMULATIONQUOTE_ARRAYOFUSERFIELD():NEW()
	oClone:oWSUSERFIELD := NIL
	If ::oWSUSERFIELD <> NIL 
		oClone:oWSUSERFIELD := {}
		aEval( ::oWSUSERFIELD , { |x| aadd( oClone:oWSUSERFIELD , x:Clone() ) } )
	Endif 
Return oClone

WSMETHOD SOAPSEND WSCLIENT MTSIMULATIONQUOTE_ARRAYOFUSERFIELD
	Local cSoap := ""
	aEval( ::oWSUSERFIELD , {|x| cSoap := cSoap  +  WSSoapValue("USERFIELD", x , x , "USERFIELD", .F. , .F., 0 , NIL, .F.)  } ) 
Return cSoap

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT MTSIMULATIONQUOTE_ARRAYOFUSERFIELD
	Local nRElem1, oNodes1, nTElem1
	::Init()
	If oResponse = NIL ; Return ; Endif 
	oNodes1 :=  WSAdvValue( oResponse,"_USERFIELD","USERFIELD",{},NIL,.T.,"O",NIL,NIL) 
	nTElem1 := len(oNodes1)
	For nRElem1 := 1 to nTElem1 
		If !WSIsNilNode( oNodes1[nRElem1] )
			aadd(::oWSUSERFIELD , MTSIMULATIONQUOTE_USERFIELD():New() )
			::oWSUSERFIELD[len(::oWSUSERFIELD)]:SoapRecv(oNodes1[nRElem1])
		Endif
	Next
Return

// WSDL Data Structure QUOTEITEMVIEW

WSSTRUCT MTSIMULATIONQUOTE_QUOTEITEMVIEW
	WSDATA   cBRANCH                   AS string OPTIONAL
	WSDATA   cCODE                     AS string OPTIONAL
	WSDATA   dDELIVERYDATE             AS date OPTIONAL
	WSDATA   nDELIVERYTERMINDAYS       AS integer OPTIONAL
	WSDATA   cDESCRIPTIONPRODUCT       AS string OPTIONAL
	WSDATA   nDISCOUNTPERCENT          AS float OPTIONAL
	WSDATA   nDISCOUNTVALUE            AS float OPTIONAL
	WSDATA   nEXPENSESVALUE            AS float OPTIONAL
	WSDATA   dEXPIRYDATE               AS date OPTIONAL
	WSDATA   nFREIGHTVALUE             AS float OPTIONAL
	WSDATA   nINSURANCEVALUE           AS float OPTIONAL
	WSDATA   cMEASUREUNIT              AS string OPTIONAL
	WSDATA   cNOTES                    AS string OPTIONAL
	WSDATA   cPAYMENTPLANCODE          AS string OPTIONAL
	WSDATA   cPRODUCTCODE              AS string
	WSDATA   cPROPOSALID               AS string OPTIONAL
	WSDATA   nQUANTITY                 AS float OPTIONAL
	WSDATA   cSEQUENTIALID             AS string
	WSDATA   oWSTAXES                  AS MTSIMULATIONQUOTE_ARRAYOFTAXESVIEW OPTIONAL
	WSDATA   nTAXRATE                  AS float OPTIONAL
	WSDATA   nTOTALVALUE               AS float
	WSDATA   nUNITPRICE                AS float
	WSDATA   oWSUSERFIELDS             AS MTSIMULATIONQUOTE_ARRAYOFUSERFIELD OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPSEND
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT MTSIMULATIONQUOTE_QUOTEITEMVIEW
	::Init()
Return Self

WSMETHOD INIT WSCLIENT MTSIMULATIONQUOTE_QUOTEITEMVIEW
Return

WSMETHOD CLONE WSCLIENT MTSIMULATIONQUOTE_QUOTEITEMVIEW
	Local oClone := MTSIMULATIONQUOTE_QUOTEITEMVIEW():NEW()
	oClone:cBRANCH              := ::cBRANCH
	oClone:cCODE                := ::cCODE
	oClone:dDELIVERYDATE        := ::dDELIVERYDATE
	oClone:nDELIVERYTERMINDAYS  := ::nDELIVERYTERMINDAYS
	oClone:cDESCRIPTIONPRODUCT  := ::cDESCRIPTIONPRODUCT
	oClone:nDISCOUNTPERCENT     := ::nDISCOUNTPERCENT
	oClone:nDISCOUNTVALUE       := ::nDISCOUNTVALUE
	oClone:nEXPENSESVALUE       := ::nEXPENSESVALUE
	oClone:dEXPIRYDATE          := ::dEXPIRYDATE
	oClone:nFREIGHTVALUE        := ::nFREIGHTVALUE
	oClone:nINSURANCEVALUE      := ::nINSURANCEVALUE
	oClone:cMEASUREUNIT         := ::cMEASUREUNIT
	oClone:cNOTES               := ::cNOTES
	oClone:cPAYMENTPLANCODE     := ::cPAYMENTPLANCODE
	oClone:cPRODUCTCODE         := ::cPRODUCTCODE
	oClone:cPROPOSALID          := ::cPROPOSALID
	oClone:nQUANTITY            := ::nQUANTITY
	oClone:cSEQUENTIALID        := ::cSEQUENTIALID
	oClone:oWSTAXES             := IIF(::oWSTAXES = NIL , NIL , ::oWSTAXES:Clone() )
	oClone:nTAXRATE             := ::nTAXRATE
	oClone:nTOTALVALUE          := ::nTOTALVALUE
	oClone:nUNITPRICE           := ::nUNITPRICE
	oClone:oWSUSERFIELDS        := IIF(::oWSUSERFIELDS = NIL , NIL , ::oWSUSERFIELDS:Clone() )
Return oClone

WSMETHOD SOAPSEND WSCLIENT MTSIMULATIONQUOTE_QUOTEITEMVIEW
	Local cSoap := ""
	cSoap += WSSoapValue("BRANCH", ::cBRANCH, ::cBRANCH , "string", .F. , .F., 0 , NIL, .F.) 
	cSoap += WSSoapValue("CODE", ::cCODE, ::cCODE , "string", .F. , .F., 0 , NIL, .F.) 
	cSoap += WSSoapValue("DELIVERYDATE", ::dDELIVERYDATE, ::dDELIVERYDATE , "date", .F. , .F., 0 , NIL, .F.) 
	cSoap += WSSoapValue("DELIVERYTERMINDAYS", ::nDELIVERYTERMINDAYS, ::nDELIVERYTERMINDAYS , "integer", .F. , .F., 0 , NIL, .F.) 
	cSoap += WSSoapValue("DESCRIPTIONPRODUCT", ::cDESCRIPTIONPRODUCT, ::cDESCRIPTIONPRODUCT , "string", .F. , .F., 0 , NIL, .F.) 
	cSoap += WSSoapValue("DISCOUNTPERCENT", ::nDISCOUNTPERCENT, ::nDISCOUNTPERCENT , "float", .F. , .F., 0 , NIL, .F.) 
	cSoap += WSSoapValue("DISCOUNTVALUE", ::nDISCOUNTVALUE, ::nDISCOUNTVALUE , "float", .F. , .F., 0 , NIL, .F.) 
	cSoap += WSSoapValue("EXPENSESVALUE", ::nEXPENSESVALUE, ::nEXPENSESVALUE , "float", .F. , .F., 0 , NIL, .F.) 
	cSoap += WSSoapValue("EXPIRYDATE", ::dEXPIRYDATE, ::dEXPIRYDATE , "date", .F. , .F., 0 , NIL, .F.) 
	cSoap += WSSoapValue("FREIGHTVALUE", ::nFREIGHTVALUE, ::nFREIGHTVALUE , "float", .F. , .F., 0 , NIL, .F.) 
	cSoap += WSSoapValue("INSURANCEVALUE", ::nINSURANCEVALUE, ::nINSURANCEVALUE , "float", .F. , .F., 0 , NIL, .F.) 
	cSoap += WSSoapValue("MEASUREUNIT", ::cMEASUREUNIT, ::cMEASUREUNIT , "string", .F. , .F., 0 , NIL, .F.) 
	cSoap += WSSoapValue("NOTES", ::cNOTES, ::cNOTES , "string", .F. , .F., 0 , NIL, .F.) 
	cSoap += WSSoapValue("PAYMENTPLANCODE", ::cPAYMENTPLANCODE, ::cPAYMENTPLANCODE , "string", .F. , .F., 0 , NIL, .F.) 
	cSoap += WSSoapValue("PRODUCTCODE", ::cPRODUCTCODE, ::cPRODUCTCODE , "string", .T. , .F., 0 , NIL, .F.) 
	cSoap += WSSoapValue("PROPOSALID", ::cPROPOSALID, ::cPROPOSALID , "string", .F. , .F., 0 , NIL, .F.) 
	cSoap += WSSoapValue("QUANTITY", ::nQUANTITY, ::nQUANTITY , "float", .F. , .F., 0 , NIL, .F.) 
	cSoap += WSSoapValue("SEQUENTIALID", ::cSEQUENTIALID, ::cSEQUENTIALID , "string", .T. , .F., 0 , NIL, .F.) 
	cSoap += WSSoapValue("TAXES", ::oWSTAXES, ::oWSTAXES , "ARRAYOFTAXESVIEW", .F. , .F., 0 , NIL, .F.) 
	cSoap += WSSoapValue("TAXRATE", ::nTAXRATE, ::nTAXRATE , "float", .F. , .F., 0 , NIL, .F.) 
	cSoap += WSSoapValue("TOTALVALUE", ::nTOTALVALUE, ::nTOTALVALUE , "float", .T. , .F., 0 , NIL, .F.) 
	cSoap += WSSoapValue("UNITPRICE", ::nUNITPRICE, ::nUNITPRICE , "float", .T. , .F., 0 , NIL, .F.) 
	cSoap += WSSoapValue("USERFIELDS", ::oWSUSERFIELDS, ::oWSUSERFIELDS , "ARRAYOFUSERFIELD", .F. , .F., 0 , NIL, .F.) 
Return cSoap

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT MTSIMULATIONQUOTE_QUOTEITEMVIEW
	Local oNode17
	Local oNode21
	::Init()
	If oResponse = NIL ; Return ; Endif 
	::cBRANCH            :=  WSAdvValue( oResponse,"_BRANCH","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cCODE              :=  WSAdvValue( oResponse,"_CODE","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::dDELIVERYDATE      :=  WSAdvValue( oResponse,"_DELIVERYDATE","date",NIL,NIL,NIL,"D",NIL,NIL) 
	::nDELIVERYTERMINDAYS :=  WSAdvValue( oResponse,"_DELIVERYTERMINDAYS","integer",NIL,NIL,NIL,"N",NIL,NIL) 
	::cDESCRIPTIONPRODUCT :=  WSAdvValue( oResponse,"_DESCRIPTIONPRODUCT","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::nDISCOUNTPERCENT   :=  WSAdvValue( oResponse,"_DISCOUNTPERCENT","float",NIL,NIL,NIL,"N",NIL,NIL) 
	::nDISCOUNTVALUE     :=  WSAdvValue( oResponse,"_DISCOUNTVALUE","float",NIL,NIL,NIL,"N",NIL,NIL) 
	::nEXPENSESVALUE     :=  WSAdvValue( oResponse,"_EXPENSESVALUE","float",NIL,NIL,NIL,"N",NIL,NIL) 
	::dEXPIRYDATE        :=  WSAdvValue( oResponse,"_EXPIRYDATE","date",NIL,NIL,NIL,"D",NIL,NIL) 
	::nFREIGHTVALUE      :=  WSAdvValue( oResponse,"_FREIGHTVALUE","float",NIL,NIL,NIL,"N",NIL,NIL) 
	::nINSURANCEVALUE    :=  WSAdvValue( oResponse,"_INSURANCEVALUE","float",NIL,NIL,NIL,"N",NIL,NIL) 
	::cMEASUREUNIT       :=  WSAdvValue( oResponse,"_MEASUREUNIT","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cNOTES             :=  WSAdvValue( oResponse,"_NOTES","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cPAYMENTPLANCODE   :=  WSAdvValue( oResponse,"_PAYMENTPLANCODE","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cPRODUCTCODE       :=  WSAdvValue( oResponse,"_PRODUCTCODE","string",NIL,"Property cPRODUCTCODE as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::cPROPOSALID        :=  WSAdvValue( oResponse,"_PROPOSALID","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::nQUANTITY          :=  WSAdvValue( oResponse,"_QUANTITY","float",NIL,NIL,NIL,"N",NIL,NIL) 
	::cSEQUENTIALID      :=  WSAdvValue( oResponse,"_SEQUENTIALID","string",NIL,"Property cSEQUENTIALID as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	oNode17 :=  WSAdvValue( oResponse,"_TAXES","ARRAYOFTAXESVIEW",NIL,NIL,NIL,"O",NIL,NIL) 
	If oNode17 != NIL
		::oWSTAXES := MTSIMULATIONQUOTE_ARRAYOFTAXESVIEW():New()
		::oWSTAXES:SoapRecv(oNode17)
	EndIf
	::nTAXRATE           :=  WSAdvValue( oResponse,"_TAXRATE","float",NIL,NIL,NIL,"N",NIL,NIL) 
	::nTOTALVALUE        :=  WSAdvValue( oResponse,"_TOTALVALUE","float",NIL,"Property nTOTALVALUE as s:float on SOAP Response not found.",NIL,"N",NIL,NIL) 
	::nUNITPRICE         :=  WSAdvValue( oResponse,"_UNITPRICE","float",NIL,"Property nUNITPRICE as s:float on SOAP Response not found.",NIL,"N",NIL,NIL) 
	oNode21 :=  WSAdvValue( oResponse,"_USERFIELDS","ARRAYOFUSERFIELD",NIL,NIL,NIL,"O",NIL,NIL) 
	If oNode21 != NIL
		::oWSUSERFIELDS := MTSIMULATIONQUOTE_ARRAYOFUSERFIELD():New()
		::oWSUSERFIELDS:SoapRecv(oNode21)
	EndIf
Return

// WSDL Data Structure USERFIELD

WSSTRUCT MTSIMULATIONQUOTE_USERFIELD
	WSDATA   cUSERCOMBOBOX             AS string OPTIONAL
	WSDATA   nUSERDEC                  AS integer OPTIONAL
	WSDATA   cUSERF3                   AS string OPTIONAL
	WSDATA   cUSERNAME                 AS string
	WSDATA   lUSEROBLIG                AS boolean OPTIONAL
	WSDATA   cUSERPICTURE              AS string OPTIONAL
	WSDATA   nUSERSIZE                 AS integer OPTIONAL
	WSDATA   cUSERTAG                  AS string OPTIONAL
	WSDATA   cUSERTITLE                AS string OPTIONAL
	WSDATA   cUSERTYPE                 AS string
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPSEND
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT MTSIMULATIONQUOTE_USERFIELD
	::Init()
Return Self

WSMETHOD INIT WSCLIENT MTSIMULATIONQUOTE_USERFIELD
Return

WSMETHOD CLONE WSCLIENT MTSIMULATIONQUOTE_USERFIELD
	Local oClone := MTSIMULATIONQUOTE_USERFIELD():NEW()
	oClone:cUSERCOMBOBOX        := ::cUSERCOMBOBOX
	oClone:nUSERDEC             := ::nUSERDEC
	oClone:cUSERF3              := ::cUSERF3
	oClone:cUSERNAME            := ::cUSERNAME
	oClone:lUSEROBLIG           := ::lUSEROBLIG
	oClone:cUSERPICTURE         := ::cUSERPICTURE
	oClone:nUSERSIZE            := ::nUSERSIZE
	oClone:cUSERTAG             := ::cUSERTAG
	oClone:cUSERTITLE           := ::cUSERTITLE
	oClone:cUSERTYPE            := ::cUSERTYPE
Return oClone

WSMETHOD SOAPSEND WSCLIENT MTSIMULATIONQUOTE_USERFIELD
	Local cSoap := ""
	cSoap += WSSoapValue("USERCOMBOBOX", ::cUSERCOMBOBOX, ::cUSERCOMBOBOX , "string", .F. , .F., 0 , NIL, .F.) 
	cSoap += WSSoapValue("USERDEC", ::nUSERDEC, ::nUSERDEC , "integer", .F. , .F., 0 , NIL, .F.) 
	cSoap += WSSoapValue("USERF3", ::cUSERF3, ::cUSERF3 , "string", .F. , .F., 0 , NIL, .F.) 
	cSoap += WSSoapValue("USERNAME", ::cUSERNAME, ::cUSERNAME , "string", .T. , .F., 0 , NIL, .F.) 
	cSoap += WSSoapValue("USEROBLIG", ::lUSEROBLIG, ::lUSEROBLIG , "boolean", .F. , .F., 0 , NIL, .F.) 
	cSoap += WSSoapValue("USERPICTURE", ::cUSERPICTURE, ::cUSERPICTURE , "string", .F. , .F., 0 , NIL, .F.) 
	cSoap += WSSoapValue("USERSIZE", ::nUSERSIZE, ::nUSERSIZE , "integer", .F. , .F., 0 , NIL, .F.) 
	cSoap += WSSoapValue("USERTAG", ::cUSERTAG, ::cUSERTAG , "string", .F. , .F., 0 , NIL, .F.) 
	cSoap += WSSoapValue("USERTITLE", ::cUSERTITLE, ::cUSERTITLE , "string", .F. , .F., 0 , NIL, .F.) 
	cSoap += WSSoapValue("USERTYPE", ::cUSERTYPE, ::cUSERTYPE , "string", .T. , .F., 0 , NIL, .F.) 
Return cSoap

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT MTSIMULATIONQUOTE_USERFIELD
	::Init()
	If oResponse = NIL ; Return ; Endif 
	::cUSERCOMBOBOX      :=  WSAdvValue( oResponse,"_USERCOMBOBOX","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::nUSERDEC           :=  WSAdvValue( oResponse,"_USERDEC","integer",NIL,NIL,NIL,"N",NIL,NIL) 
	::cUSERF3            :=  WSAdvValue( oResponse,"_USERF3","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cUSERNAME          :=  WSAdvValue( oResponse,"_USERNAME","string",NIL,"Property cUSERNAME as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::lUSEROBLIG         :=  WSAdvValue( oResponse,"_USEROBLIG","boolean",NIL,NIL,NIL,"L",NIL,NIL) 
	::cUSERPICTURE       :=  WSAdvValue( oResponse,"_USERPICTURE","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::nUSERSIZE          :=  WSAdvValue( oResponse,"_USERSIZE","integer",NIL,NIL,NIL,"N",NIL,NIL) 
	::cUSERTAG           :=  WSAdvValue( oResponse,"_USERTAG","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cUSERTITLE         :=  WSAdvValue( oResponse,"_USERTITLE","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cUSERTYPE          :=  WSAdvValue( oResponse,"_USERTYPE","string",NIL,"Property cUSERTYPE as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
Return

// WSDL Data Structure ARRAYOFTAXESVIEW

WSSTRUCT MTSIMULATIONQUOTE_ARRAYOFTAXESVIEW
	WSDATA   oWSTAXESVIEW              AS MTSIMULATIONQUOTE_TAXESVIEW OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPSEND
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT MTSIMULATIONQUOTE_ARRAYOFTAXESVIEW
	::Init()
Return Self

WSMETHOD INIT WSCLIENT MTSIMULATIONQUOTE_ARRAYOFTAXESVIEW
	::oWSTAXESVIEW         := {} // Array Of  MTSIMULATIONQUOTE_TAXESVIEW():New()
Return

WSMETHOD CLONE WSCLIENT MTSIMULATIONQUOTE_ARRAYOFTAXESVIEW
	Local oClone := MTSIMULATIONQUOTE_ARRAYOFTAXESVIEW():NEW()
	oClone:oWSTAXESVIEW := NIL
	If ::oWSTAXESVIEW <> NIL 
		oClone:oWSTAXESVIEW := {}
		aEval( ::oWSTAXESVIEW , { |x| aadd( oClone:oWSTAXESVIEW , x:Clone() ) } )
	Endif 
Return oClone

WSMETHOD SOAPSEND WSCLIENT MTSIMULATIONQUOTE_ARRAYOFTAXESVIEW
	Local cSoap := ""
	aEval( ::oWSTAXESVIEW , {|x| cSoap := cSoap  +  WSSoapValue("TAXESVIEW", x , x , "TAXESVIEW", .F. , .F., 0 , NIL, .F.)  } ) 
Return cSoap

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT MTSIMULATIONQUOTE_ARRAYOFTAXESVIEW
	Local nRElem1, oNodes1, nTElem1
	::Init()
	If oResponse = NIL ; Return ; Endif 
	oNodes1 :=  WSAdvValue( oResponse,"_TAXESVIEW","TAXESVIEW",{},NIL,.T.,"O",NIL,NIL) 
	nTElem1 := len(oNodes1)
	For nRElem1 := 1 to nTElem1 
		If !WSIsNilNode( oNodes1[nRElem1] )
			aadd(::oWSTAXESVIEW , MTSIMULATIONQUOTE_TAXESVIEW():New() )
			::oWSTAXESVIEW[len(::oWSTAXESVIEW)]:SoapRecv(oNodes1[nRElem1])
		Endif
	Next
Return

// WSDL Data Structure TAXESVIEW

WSSTRUCT MTSIMULATIONQUOTE_TAXESVIEW
	WSDATA   nTAXAMOUNT                AS float
	WSDATA   nTAXBASE                  AS float
	WSDATA   cTAXCODE                  AS string
	WSDATA   nTAXRATE                  AS float
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPSEND
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT MTSIMULATIONQUOTE_TAXESVIEW
	::Init()
Return Self

WSMETHOD INIT WSCLIENT MTSIMULATIONQUOTE_TAXESVIEW
Return

WSMETHOD CLONE WSCLIENT MTSIMULATIONQUOTE_TAXESVIEW
	Local oClone := MTSIMULATIONQUOTE_TAXESVIEW():NEW()
	oClone:nTAXAMOUNT           := ::nTAXAMOUNT
	oClone:nTAXBASE             := ::nTAXBASE
	oClone:cTAXCODE             := ::cTAXCODE
	oClone:nTAXRATE             := ::nTAXRATE
Return oClone

WSMETHOD SOAPSEND WSCLIENT MTSIMULATIONQUOTE_TAXESVIEW
	Local cSoap := ""
	cSoap += WSSoapValue("TAXAMOUNT", ::nTAXAMOUNT, ::nTAXAMOUNT , "float", .T. , .F., 0 , NIL, .F.) 
	cSoap += WSSoapValue("TAXBASE", ::nTAXBASE, ::nTAXBASE , "float", .T. , .F., 0 , NIL, .F.) 
	cSoap += WSSoapValue("TAXCODE", ::cTAXCODE, ::cTAXCODE , "string", .T. , .F., 0 , NIL, .F.) 
	cSoap += WSSoapValue("TAXRATE", ::nTAXRATE, ::nTAXRATE , "float", .T. , .F., 0 , NIL, .F.) 
Return cSoap

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT MTSIMULATIONQUOTE_TAXESVIEW
	::Init()
	If oResponse = NIL ; Return ; Endif 
	::nTAXAMOUNT         :=  WSAdvValue( oResponse,"_TAXAMOUNT","float",NIL,"Property nTAXAMOUNT as s:float on SOAP Response not found.",NIL,"N",NIL,NIL) 
	::nTAXBASE           :=  WSAdvValue( oResponse,"_TAXBASE","float",NIL,"Property nTAXBASE as s:float on SOAP Response not found.",NIL,"N",NIL,NIL) 
	::cTAXCODE           :=  WSAdvValue( oResponse,"_TAXCODE","string",NIL,"Property cTAXCODE as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::nTAXRATE           :=  WSAdvValue( oResponse,"_TAXRATE","float",NIL,"Property nTAXRATE as s:float on SOAP Response not found.",NIL,"N",NIL,NIL) 
Return
