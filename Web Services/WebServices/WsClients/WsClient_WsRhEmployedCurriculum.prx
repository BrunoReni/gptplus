#INCLUDE "PROTHEUS.CH"
#INCLUDE "APWEBSRV.CH"

/* ===============================================================================
WSDL Location    http://172.16.33.125:83/ws/RHEMPLOYEDCURRICULUM.apw?WSDL
Gerado em        04/30/14 15:38:22
Observações      Código-Fonte gerado por ADVPL WSDL Client 1.120703
                 Alterações neste arquivo podem causar funcionamento incorreto
                 e serão perdidas caso o código-fonte seja gerado novamente.
=============================================================================== */

User Function _CEOERHR ; Return  // "dummy" function - Internal Use 

/* -------------------------------------------------------------------------------
WSDL Service WSRHEMPLOYEDCURRICULUM
------------------------------------------------------------------------------- */

WSCLIENT WSRHEMPLOYEDCURRICULUM

	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD RESET
	WSMETHOD CLONE
	WSMETHOD BRWCERTIFICATION
	WSMETHOD BRWENTDATA
	WSMETHOD BRWEXTERNALHISTORY
	WSMETHOD BRWINTERNALEXP
	WSMETHOD BRWITEMDATA
	WSMETHOD BRWITEMTYPES
	WSMETHOD BRWLEARNING
	WSMETHOD BRWMENTORS
	WSMETHOD DELENTITEM
	WSMETHOD DELEXPITEM
	WSMETHOD DELEXTERNALHISTORY
	WSMETHOD DELITEMDATA
	WSMETHOD DELLEARNING
	WSMETHOD GETCOMENT
	WSMETHOD GETPARTICIPANT
	WSMETHOD GETQUALIFY
	WSMETHOD PUTCERTIFICATION
	WSMETHOD PUTCOMENT
	WSMETHOD PUTCOURSE
	WSMETHOD PUTENTDATA
	WSMETHOD PUTEXTERNALHISTORY
	WSMETHOD PUTINTERNALEXP
	WSMETHOD PUTLEARNING
	WSMETHOD PUTMENTOR
	WSMETHOD PUTQUALIFY
	WSMETHOD SETITEMDATA
	WSMETHOD USERMENU

	WSDATA   _URL                      AS String
	WSDATA   _HEADOUT                  AS Array of String
	WSDATA   _COOKIES                  AS Array of String
	WSDATA   cUSERCODE                 AS string
	WSDATA   cITEMCOD                  AS string
	WSDATA   cPARTICIPANTID            AS string
	WSDATA   oWSBRWCERTIFICATIONRESULT AS RHEMPLOYEDCURRICULUM_GROUPCOMBOS
	WSDATA   oWSBRWENTDATARESULT       AS RHEMPLOYEDCURRICULUM_CLASSDATA
	WSDATA   oWSBRWEXTERNALHISTORYRESULT AS RHEMPLOYEDCURRICULUM_ARRAYOFHISTORYLIST
	WSDATA   oWSBRWINTERNALEXPRESULT   AS RHEMPLOYEDCURRICULUM_ARRAYOFEXPERIENCES
	WSDATA   oWSBRWITEMDATARESULT      AS RHEMPLOYEDCURRICULUM_GROUPCOMBOS
	WSDATA   oWSBRWITEMTYPESRESULT     AS RHEMPLOYEDCURRICULUM_ARRAYOFITENSMENU
	WSDATA   oWSBRWLEARNINGRESULT      AS RHEMPLOYEDCURRICULUM_GROUPCOMBOS
	WSDATA   cMENTORNAME               AS string
	WSDATA   oWSBRWMENTORSRESULT       AS RHEMPLOYEDCURRICULUM_ARRAYOFMENTORS
	WSDATA   nREGRECNO                 AS integer
	WSDATA   cDELENTITEMRESULT         AS string
	WSDATA   nHISTORYID                AS integer
	WSDATA   cDELEXPITEMRESULT         AS string
	WSDATA   cDELEXTERNALHISTORYRESULT AS string
	WSDATA   cDELITEMDATARESULT        AS string
	WSDATA   cDELLEARNINGRESULT        AS string
	WSDATA   oWSGETCOMENTRESULT        AS RHEMPLOYEDCURRICULUM_DESC
	WSDATA   cVISION                   AS string
	WSDATA   cENROLMENTID              AS string
	WSDATA   oWSGETPARTICIPANTRESULT   AS RHEMPLOYEDCURRICULUM_PARTICIPANT
	WSDATA   oWSGETQUALIFYRESULT       AS RHEMPLOYEDCURRICULUM_DESC
	WSDATA   oWSCOURSEDATA             AS RHEMPLOYEDCURRICULUM_COURSELIST
	WSDATA   cPUTCERTIFICATIONRESULT   AS string
	WSDATA   cCOMENTARIES              AS string
	WSDATA   cPUTCOMENTRESULT          AS string
	WSDATA   cPUTCOURSERESULT          AS string
	WSDATA   lINCLUDE                  AS boolean
	WSDATA   oWSUSERCLASSITEM          AS RHEMPLOYEDCURRICULUM_USERCLASSLIST
	WSDATA   cPUTENTDATARESULT         AS string
	WSDATA   oWSEXTERNALHISTORY        AS RHEMPLOYEDCURRICULUM_HISTORYLIST
	WSDATA   cPUTEXTERNALHISTORYRESULT AS string
	WSDATA   oWSEXPERIENCEITEM         AS RHEMPLOYEDCURRICULUM_EXPERIENCES
	WSDATA   cPUTINTERNALEXPRESULT     AS string
	WSDATA   cPUTLEARNINGRESULT        AS string
	WSDATA   cCODMENTOR                AS string
	WSDATA   cPUTMENTORRESULT          AS string
	WSDATA   cQUALIFYDESCRIPTION       AS string
	WSDATA   cPUTQUALIFYRESULT         AS string
	WSDATA   cSETITEMDATARESULT        AS string
	WSDATA   cMENUTITLE                AS string
	WSDATA   cUSERMENURESULT           AS string

	// Estruturas mantidas por compatibilidade - NÃO USAR
	WSDATA   oWSCOURSELIST             AS RHEMPLOYEDCURRICULUM_COURSELIST
	WSDATA   oWSUSERCLASSLIST          AS RHEMPLOYEDCURRICULUM_USERCLASSLIST
	WSDATA   oWSHISTORYLIST            AS RHEMPLOYEDCURRICULUM_HISTORYLIST
	WSDATA   oWSEXPERIENCES            AS RHEMPLOYEDCURRICULUM_EXPERIENCES

ENDWSCLIENT

WSMETHOD NEW WSCLIENT WSRHEMPLOYEDCURRICULUM
::Init()
If !FindFunction("XMLCHILDEX")
	UserException("O Código-Fonte Client atual requer os executáveis do Protheus Build [7.00.121227P-20131106] ou superior. Atualize o Protheus ou gere o Código-Fonte novamente utilizando o Build atual.")
EndIf
Return Self

WSMETHOD INIT WSCLIENT WSRHEMPLOYEDCURRICULUM
	::oWSBRWCERTIFICATIONRESULT := RHEMPLOYEDCURRICULUM_GROUPCOMBOS():New()
	::oWSBRWENTDATARESULT := RHEMPLOYEDCURRICULUM_CLASSDATA():New()
	::oWSBRWEXTERNALHISTORYRESULT := RHEMPLOYEDCURRICULUM_ARRAYOFHISTORYLIST():New()
	::oWSBRWINTERNALEXPRESULT := RHEMPLOYEDCURRICULUM_ARRAYOFEXPERIENCES():New()
	::oWSBRWITEMDATARESULT := RHEMPLOYEDCURRICULUM_GROUPCOMBOS():New()
	::oWSBRWITEMTYPESRESULT := RHEMPLOYEDCURRICULUM_ARRAYOFITENSMENU():New()
	::oWSBRWLEARNINGRESULT := RHEMPLOYEDCURRICULUM_GROUPCOMBOS():New()
	::oWSBRWMENTORSRESULT := RHEMPLOYEDCURRICULUM_ARRAYOFMENTORS():New()
	::oWSGETCOMENTRESULT := RHEMPLOYEDCURRICULUM_DESC():New()
	::oWSGETPARTICIPANTRESULT := RHEMPLOYEDCURRICULUM_PARTICIPANT():New()
	::oWSGETQUALIFYRESULT := RHEMPLOYEDCURRICULUM_DESC():New()
	::oWSCOURSEDATA      := RHEMPLOYEDCURRICULUM_COURSELIST():New()
	::oWSUSERCLASSITEM   := RHEMPLOYEDCURRICULUM_USERCLASSLIST():New()
	::oWSEXTERNALHISTORY := RHEMPLOYEDCURRICULUM_HISTORYLIST():New()
	::oWSEXPERIENCEITEM  := RHEMPLOYEDCURRICULUM_EXPERIENCES():New()

	// Estruturas mantidas por compatibilidade - NÃO USAR
	::oWSCOURSELIST      := ::oWSCOURSEDATA
	::oWSUSERCLASSLIST   := ::oWSUSERCLASSITEM
	::oWSHISTORYLIST     := ::oWSEXTERNALHISTORY
	::oWSEXPERIENCES     := ::oWSEXPERIENCEITEM
Return

WSMETHOD RESET WSCLIENT WSRHEMPLOYEDCURRICULUM
	::cUSERCODE          := NIL 
	::cITEMCOD           := NIL 
	::cPARTICIPANTID     := NIL 
	::oWSBRWCERTIFICATIONRESULT := NIL 
	::oWSBRWENTDATARESULT := NIL 
	::oWSBRWEXTERNALHISTORYRESULT := NIL 
	::oWSBRWINTERNALEXPRESULT := NIL 
	::oWSBRWITEMDATARESULT := NIL 
	::oWSBRWITEMTYPESRESULT := NIL 
	::oWSBRWLEARNINGRESULT := NIL 
	::cMENTORNAME        := NIL 
	::oWSBRWMENTORSRESULT := NIL 
	::nREGRECNO          := NIL 
	::cDELENTITEMRESULT  := NIL 
	::nHISTORYID         := NIL 
	::cDELEXPITEMRESULT  := NIL 
	::cDELEXTERNALHISTORYRESULT := NIL 
	::cDELITEMDATARESULT := NIL 
	::cDELLEARNINGRESULT := NIL 
	::oWSGETCOMENTRESULT := NIL 
	::cVISION            := NIL 
	::cENROLMENTID       := NIL 
	::oWSGETPARTICIPANTRESULT := NIL 
	::oWSGETQUALIFYRESULT := NIL 
	::oWSCOURSEDATA      := NIL 
	::cPUTCERTIFICATIONRESULT := NIL 
	::cCOMENTARIES       := NIL 
	::cPUTCOMENTRESULT   := NIL 
	::cPUTCOURSERESULT   := NIL 
	::lINCLUDE           := NIL 
	::oWSUSERCLASSITEM   := NIL 
	::cPUTENTDATARESULT  := NIL 
	::oWSEXTERNALHISTORY := NIL 
	::cPUTEXTERNALHISTORYRESULT := NIL 
	::oWSEXPERIENCEITEM  := NIL 
	::cPUTINTERNALEXPRESULT := NIL 
	::cPUTLEARNINGRESULT := NIL 
	::cCODMENTOR         := NIL 
	::cPUTMENTORRESULT   := NIL 
	::cQUALIFYDESCRIPTION := NIL 
	::cPUTQUALIFYRESULT  := NIL 
	::cSETITEMDATARESULT := NIL 
	::cMENUTITLE         := NIL 
	::cUSERMENURESULT    := NIL 

	// Estruturas mantidas por compatibilidade - NÃO USAR
	::oWSCOURSELIST      := NIL
	::oWSUSERCLASSLIST   := NIL
	::oWSHISTORYLIST     := NIL
	::oWSEXPERIENCES     := NIL
	::Init()
Return

WSMETHOD CLONE WSCLIENT WSRHEMPLOYEDCURRICULUM
Local oClone := WSRHEMPLOYEDCURRICULUM():New()
	oClone:_URL          := ::_URL 
	oClone:cUSERCODE     := ::cUSERCODE
	oClone:cITEMCOD      := ::cITEMCOD
	oClone:cPARTICIPANTID := ::cPARTICIPANTID
	oClone:oWSBRWCERTIFICATIONRESULT :=  IIF(::oWSBRWCERTIFICATIONRESULT = NIL , NIL ,::oWSBRWCERTIFICATIONRESULT:Clone() )
	oClone:oWSBRWENTDATARESULT :=  IIF(::oWSBRWENTDATARESULT = NIL , NIL ,::oWSBRWENTDATARESULT:Clone() )
	oClone:oWSBRWEXTERNALHISTORYRESULT :=  IIF(::oWSBRWEXTERNALHISTORYRESULT = NIL , NIL ,::oWSBRWEXTERNALHISTORYRESULT:Clone() )
	oClone:oWSBRWINTERNALEXPRESULT :=  IIF(::oWSBRWINTERNALEXPRESULT = NIL , NIL ,::oWSBRWINTERNALEXPRESULT:Clone() )
	oClone:oWSBRWITEMDATARESULT :=  IIF(::oWSBRWITEMDATARESULT = NIL , NIL ,::oWSBRWITEMDATARESULT:Clone() )
	oClone:oWSBRWITEMTYPESRESULT :=  IIF(::oWSBRWITEMTYPESRESULT = NIL , NIL ,::oWSBRWITEMTYPESRESULT:Clone() )
	oClone:oWSBRWLEARNINGRESULT :=  IIF(::oWSBRWLEARNINGRESULT = NIL , NIL ,::oWSBRWLEARNINGRESULT:Clone() )
	oClone:cMENTORNAME   := ::cMENTORNAME
	oClone:oWSBRWMENTORSRESULT :=  IIF(::oWSBRWMENTORSRESULT = NIL , NIL ,::oWSBRWMENTORSRESULT:Clone() )
	oClone:nREGRECNO     := ::nREGRECNO
	oClone:cDELENTITEMRESULT := ::cDELENTITEMRESULT
	oClone:nHISTORYID    := ::nHISTORYID
	oClone:cDELEXPITEMRESULT := ::cDELEXPITEMRESULT
	oClone:cDELEXTERNALHISTORYRESULT := ::cDELEXTERNALHISTORYRESULT
	oClone:cDELITEMDATARESULT := ::cDELITEMDATARESULT
	oClone:cDELLEARNINGRESULT := ::cDELLEARNINGRESULT
	oClone:oWSGETCOMENTRESULT :=  IIF(::oWSGETCOMENTRESULT = NIL , NIL ,::oWSGETCOMENTRESULT:Clone() )
	oClone:cVISION       := ::cVISION
	oClone:cENROLMENTID  := ::cENROLMENTID
	oClone:oWSGETPARTICIPANTRESULT :=  IIF(::oWSGETPARTICIPANTRESULT = NIL , NIL ,::oWSGETPARTICIPANTRESULT:Clone() )
	oClone:oWSGETQUALIFYRESULT :=  IIF(::oWSGETQUALIFYRESULT = NIL , NIL ,::oWSGETQUALIFYRESULT:Clone() )
	oClone:oWSCOURSEDATA :=  IIF(::oWSCOURSEDATA = NIL , NIL ,::oWSCOURSEDATA:Clone() )
	oClone:cPUTCERTIFICATIONRESULT := ::cPUTCERTIFICATIONRESULT
	oClone:cCOMENTARIES  := ::cCOMENTARIES
	oClone:cPUTCOMENTRESULT := ::cPUTCOMENTRESULT
	oClone:cPUTCOURSERESULT := ::cPUTCOURSERESULT
	oClone:lINCLUDE      := ::lINCLUDE
	oClone:oWSUSERCLASSITEM :=  IIF(::oWSUSERCLASSITEM = NIL , NIL ,::oWSUSERCLASSITEM:Clone() )
	oClone:cPUTENTDATARESULT := ::cPUTENTDATARESULT
	oClone:oWSEXTERNALHISTORY :=  IIF(::oWSEXTERNALHISTORY = NIL , NIL ,::oWSEXTERNALHISTORY:Clone() )
	oClone:cPUTEXTERNALHISTORYRESULT := ::cPUTEXTERNALHISTORYRESULT
	oClone:oWSEXPERIENCEITEM :=  IIF(::oWSEXPERIENCEITEM = NIL , NIL ,::oWSEXPERIENCEITEM:Clone() )
	oClone:cPUTINTERNALEXPRESULT := ::cPUTINTERNALEXPRESULT
	oClone:cPUTLEARNINGRESULT := ::cPUTLEARNINGRESULT
	oClone:cCODMENTOR    := ::cCODMENTOR
	oClone:cPUTMENTORRESULT := ::cPUTMENTORRESULT
	oClone:cQUALIFYDESCRIPTION := ::cQUALIFYDESCRIPTION
	oClone:cPUTQUALIFYRESULT := ::cPUTQUALIFYRESULT
	oClone:cSETITEMDATARESULT := ::cSETITEMDATARESULT
	oClone:cMENUTITLE    := ::cMENUTITLE
	oClone:cUSERMENURESULT := ::cUSERMENURESULT

	// Estruturas mantidas por compatibilidade - NÃO USAR
	oClone:oWSCOURSELIST := oClone:oWSCOURSEDATA
	oClone:oWSUSERCLASSLIST := oClone:oWSUSERCLASSITEM
	oClone:oWSHISTORYLIST := oClone:oWSEXTERNALHISTORY
	oClone:oWSEXPERIENCES := oClone:oWSEXPERIENCEITEM
Return oClone

// WSDL Method BRWCERTIFICATION of Service WSRHEMPLOYEDCURRICULUM

WSMETHOD BRWCERTIFICATION WSSEND cUSERCODE,cITEMCOD,cPARTICIPANTID WSRECEIVE oWSBRWCERTIFICATIONRESULT WSCLIENT WSRHEMPLOYEDCURRICULUM
Local cSoap := "" , oXmlRet

BEGIN WSMETHOD

cSoap += '<BRWCERTIFICATION xmlns="http://172.16.33.125:83/">'
cSoap += WSSoapValue("USERCODE", ::cUSERCODE, cUSERCODE , "string", .T. , .F., 0 , NIL, .F.) 
cSoap += WSSoapValue("ITEMCOD", ::cITEMCOD, cITEMCOD , "string", .T. , .F., 0 , NIL, .F.) 
cSoap += WSSoapValue("PARTICIPANTID", ::cPARTICIPANTID, cPARTICIPANTID , "string", .F. , .F., 0 , NIL, .F.) 
cSoap += "</BRWCERTIFICATION>"

oXmlRet := SvcSoapCall(	Self,cSoap,; 
	"http://172.16.33.125:83/BRWCERTIFICATION",; 
	"DOCUMENT","http://172.16.33.125:83/",,"1.031217",; 
	"http://172.16.33.125:83/ws/RHEMPLOYEDCURRICULUM.apw")

::Init()
::oWSBRWCERTIFICATIONRESULT:SoapRecv( WSAdvValue( oXmlRet,"_BRWCERTIFICATIONRESPONSE:_BRWCERTIFICATIONRESULT","GROUPCOMBOS",NIL,NIL,NIL,NIL,NIL,NIL) )

END WSMETHOD

oXmlRet := NIL
Return .T.

// WSDL Method BRWENTDATA of Service WSRHEMPLOYEDCURRICULUM

WSMETHOD BRWENTDATA WSSEND cUSERCODE,cPARTICIPANTID WSRECEIVE oWSBRWENTDATARESULT WSCLIENT WSRHEMPLOYEDCURRICULUM
Local cSoap := "" , oXmlRet

BEGIN WSMETHOD

cSoap += '<BRWENTDATA xmlns="http://172.16.33.125:83/">'
cSoap += WSSoapValue("USERCODE", ::cUSERCODE, cUSERCODE , "string", .T. , .F., 0 , NIL, .F.) 
cSoap += WSSoapValue("PARTICIPANTID", ::cPARTICIPANTID, cPARTICIPANTID , "string", .F. , .F., 0 , NIL, .F.) 
cSoap += "</BRWENTDATA>"

oXmlRet := SvcSoapCall(	Self,cSoap,; 
	"http://172.16.33.125:83/BRWENTDATA",; 
	"DOCUMENT","http://172.16.33.125:83/",,"1.031217",; 
	"http://172.16.33.125:83/ws/RHEMPLOYEDCURRICULUM.apw")

::Init()
::oWSBRWENTDATARESULT:SoapRecv( WSAdvValue( oXmlRet,"_BRWENTDATARESPONSE:_BRWENTDATARESULT","CLASSDATA",NIL,NIL,NIL,NIL,NIL,NIL) )

END WSMETHOD

oXmlRet := NIL
Return .T.

// WSDL Method BRWEXTERNALHISTORY of Service WSRHEMPLOYEDCURRICULUM

WSMETHOD BRWEXTERNALHISTORY WSSEND cUSERCODE,cPARTICIPANTID WSRECEIVE oWSBRWEXTERNALHISTORYRESULT WSCLIENT WSRHEMPLOYEDCURRICULUM
Local cSoap := "" , oXmlRet

BEGIN WSMETHOD

cSoap += '<BRWEXTERNALHISTORY xmlns="http://172.16.33.125:83/">'
cSoap += WSSoapValue("USERCODE", ::cUSERCODE, cUSERCODE , "string", .T. , .F., 0 , NIL, .F.) 
cSoap += WSSoapValue("PARTICIPANTID", ::cPARTICIPANTID, cPARTICIPANTID , "string", .F. , .F., 0 , NIL, .F.) 
cSoap += "</BRWEXTERNALHISTORY>"

oXmlRet := SvcSoapCall(	Self,cSoap,; 
	"http://172.16.33.125:83/BRWEXTERNALHISTORY",; 
	"DOCUMENT","http://172.16.33.125:83/",,"1.031217",; 
	"http://172.16.33.125:83/ws/RHEMPLOYEDCURRICULUM.apw")

::Init()
::oWSBRWEXTERNALHISTORYRESULT:SoapRecv( WSAdvValue( oXmlRet,"_BRWEXTERNALHISTORYRESPONSE:_BRWEXTERNALHISTORYRESULT","ARRAYOFHISTORYLIST",NIL,NIL,NIL,NIL,NIL,NIL) )

END WSMETHOD

oXmlRet := NIL
Return .T.

// WSDL Method BRWINTERNALEXP of Service WSRHEMPLOYEDCURRICULUM

WSMETHOD BRWINTERNALEXP WSSEND cUSERCODE,cPARTICIPANTID WSRECEIVE oWSBRWINTERNALEXPRESULT WSCLIENT WSRHEMPLOYEDCURRICULUM
Local cSoap := "" , oXmlRet

BEGIN WSMETHOD

cSoap += '<BRWINTERNALEXP xmlns="http://172.16.33.125:83/">'
cSoap += WSSoapValue("USERCODE", ::cUSERCODE, cUSERCODE , "string", .T. , .F., 0 , NIL, .F.) 
cSoap += WSSoapValue("PARTICIPANTID", ::cPARTICIPANTID, cPARTICIPANTID , "string", .F. , .F., 0 , NIL, .F.) 
cSoap += "</BRWINTERNALEXP>"

oXmlRet := SvcSoapCall(	Self,cSoap,; 
	"http://172.16.33.125:83/BRWINTERNALEXP",; 
	"DOCUMENT","http://172.16.33.125:83/",,"1.031217",; 
	"http://172.16.33.125:83/ws/RHEMPLOYEDCURRICULUM.apw")

::Init()
::oWSBRWINTERNALEXPRESULT:SoapRecv( WSAdvValue( oXmlRet,"_BRWINTERNALEXPRESPONSE:_BRWINTERNALEXPRESULT","ARRAYOFEXPERIENCES",NIL,NIL,NIL,NIL,NIL,NIL) )

END WSMETHOD

oXmlRet := NIL
Return .T.

// WSDL Method BRWITEMDATA of Service WSRHEMPLOYEDCURRICULUM

WSMETHOD BRWITEMDATA WSSEND cUSERCODE,cITEMCOD,cPARTICIPANTID WSRECEIVE oWSBRWITEMDATARESULT WSCLIENT WSRHEMPLOYEDCURRICULUM
Local cSoap := "" , oXmlRet

BEGIN WSMETHOD

cSoap += '<BRWITEMDATA xmlns="http://172.16.33.125:83/">'
cSoap += WSSoapValue("USERCODE", ::cUSERCODE, cUSERCODE , "string", .T. , .F., 0 , NIL, .F.) 
cSoap += WSSoapValue("ITEMCOD", ::cITEMCOD, cITEMCOD , "string", .T. , .F., 0 , NIL, .F.) 
cSoap += WSSoapValue("PARTICIPANTID", ::cPARTICIPANTID, cPARTICIPANTID , "string", .F. , .F., 0 , NIL, .F.) 
cSoap += "</BRWITEMDATA>"

oXmlRet := SvcSoapCall(	Self,cSoap,; 
	"http://172.16.33.125:83/BRWITEMDATA",; 
	"DOCUMENT","http://172.16.33.125:83/",,"1.031217",; 
	"http://172.16.33.125:83/ws/RHEMPLOYEDCURRICULUM.apw")

::Init()
::oWSBRWITEMDATARESULT:SoapRecv( WSAdvValue( oXmlRet,"_BRWITEMDATARESPONSE:_BRWITEMDATARESULT","GROUPCOMBOS",NIL,NIL,NIL,NIL,NIL,NIL) )

END WSMETHOD

oXmlRet := NIL
Return .T.

// WSDL Method BRWITEMTYPES of Service WSRHEMPLOYEDCURRICULUM

WSMETHOD BRWITEMTYPES WSSEND cUSERCODE,cPARTICIPANTID WSRECEIVE oWSBRWITEMTYPESRESULT WSCLIENT WSRHEMPLOYEDCURRICULUM
Local cSoap := "" , oXmlRet

BEGIN WSMETHOD

cSoap += '<BRWITEMTYPES xmlns="http://172.16.33.125:83/">'
cSoap += WSSoapValue("USERCODE", ::cUSERCODE, cUSERCODE , "string", .T. , .F., 0 , NIL, .F.) 
cSoap += WSSoapValue("PARTICIPANTID", ::cPARTICIPANTID, cPARTICIPANTID , "string", .F. , .F., 0 , NIL, .F.) 
cSoap += "</BRWITEMTYPES>"

oXmlRet := SvcSoapCall(	Self,cSoap,; 
	"http://172.16.33.125:83/BRWITEMTYPES",; 
	"DOCUMENT","http://172.16.33.125:83/",,"1.031217",; 
	"http://172.16.33.125:83/ws/RHEMPLOYEDCURRICULUM.apw")

::Init()
::oWSBRWITEMTYPESRESULT:SoapRecv( WSAdvValue( oXmlRet,"_BRWITEMTYPESRESPONSE:_BRWITEMTYPESRESULT","ARRAYOFITENSMENU",NIL,NIL,NIL,NIL,NIL,NIL) )

END WSMETHOD

oXmlRet := NIL
Return .T.

// WSDL Method BRWLEARNING of Service WSRHEMPLOYEDCURRICULUM

WSMETHOD BRWLEARNING WSSEND cUSERCODE,cITEMCOD,cPARTICIPANTID WSRECEIVE oWSBRWLEARNINGRESULT WSCLIENT WSRHEMPLOYEDCURRICULUM
Local cSoap := "" , oXmlRet

BEGIN WSMETHOD

cSoap += '<BRWLEARNING xmlns="http://172.16.33.125:83/">'
cSoap += WSSoapValue("USERCODE", ::cUSERCODE, cUSERCODE , "string", .T. , .F., 0 , NIL, .F.) 
cSoap += WSSoapValue("ITEMCOD", ::cITEMCOD, cITEMCOD , "string", .T. , .F., 0 , NIL, .F.) 
cSoap += WSSoapValue("PARTICIPANTID", ::cPARTICIPANTID, cPARTICIPANTID , "string", .F. , .F., 0 , NIL, .F.) 
cSoap += "</BRWLEARNING>"

oXmlRet := SvcSoapCall(	Self,cSoap,; 
	"http://172.16.33.125:83/BRWLEARNING",; 
	"DOCUMENT","http://172.16.33.125:83/",,"1.031217",; 
	"http://172.16.33.125:83/ws/RHEMPLOYEDCURRICULUM.apw")

::Init()
::oWSBRWLEARNINGRESULT:SoapRecv( WSAdvValue( oXmlRet,"_BRWLEARNINGRESPONSE:_BRWLEARNINGRESULT","GROUPCOMBOS",NIL,NIL,NIL,NIL,NIL,NIL) )

END WSMETHOD

oXmlRet := NIL
Return .T.

// WSDL Method BRWMENTORS of Service WSRHEMPLOYEDCURRICULUM

WSMETHOD BRWMENTORS WSSEND cUSERCODE,cMENTORNAME WSRECEIVE oWSBRWMENTORSRESULT WSCLIENT WSRHEMPLOYEDCURRICULUM
Local cSoap := "" , oXmlRet

BEGIN WSMETHOD

cSoap += '<BRWMENTORS xmlns="http://172.16.33.125:83/">'
cSoap += WSSoapValue("USERCODE", ::cUSERCODE, cUSERCODE , "string", .T. , .F., 0 , NIL, .F.) 
cSoap += WSSoapValue("MENTORNAME", ::cMENTORNAME, cMENTORNAME , "string", .T. , .F., 0 , NIL, .F.) 
cSoap += "</BRWMENTORS>"

oXmlRet := SvcSoapCall(	Self,cSoap,; 
	"http://172.16.33.125:83/BRWMENTORS",; 
	"DOCUMENT","http://172.16.33.125:83/",,"1.031217",; 
	"http://172.16.33.125:83/ws/RHEMPLOYEDCURRICULUM.apw")

::Init()
::oWSBRWMENTORSRESULT:SoapRecv( WSAdvValue( oXmlRet,"_BRWMENTORSRESPONSE:_BRWMENTORSRESULT","ARRAYOFMENTORS",NIL,NIL,NIL,NIL,NIL,NIL) )

END WSMETHOD

oXmlRet := NIL
Return .T.

// WSDL Method DELENTITEM of Service WSRHEMPLOYEDCURRICULUM

WSMETHOD DELENTITEM WSSEND cUSERCODE,nREGRECNO WSRECEIVE cDELENTITEMRESULT WSCLIENT WSRHEMPLOYEDCURRICULUM
Local cSoap := "" , oXmlRet

BEGIN WSMETHOD

cSoap += '<DELENTITEM xmlns="http://172.16.33.125:83/">'
cSoap += WSSoapValue("USERCODE", ::cUSERCODE, cUSERCODE , "string", .T. , .F., 0 , NIL, .F.) 
cSoap += WSSoapValue("REGRECNO", ::nREGRECNO, nREGRECNO , "integer", .T. , .F., 0 , NIL, .F.) 
cSoap += "</DELENTITEM>"

oXmlRet := SvcSoapCall(	Self,cSoap,; 
	"http://172.16.33.125:83/DELENTITEM",; 
	"DOCUMENT","http://172.16.33.125:83/",,"1.031217",; 
	"http://172.16.33.125:83/ws/RHEMPLOYEDCURRICULUM.apw")

::Init()
::cDELENTITEMRESULT  :=  WSAdvValue( oXmlRet,"_DELENTITEMRESPONSE:_DELENTITEMRESULT:TEXT","string",NIL,NIL,NIL,NIL,NIL,NIL) 

END WSMETHOD

oXmlRet := NIL
Return .T.

// WSDL Method DELEXPITEM of Service WSRHEMPLOYEDCURRICULUM

WSMETHOD DELEXPITEM WSSEND cUSERCODE,nHISTORYID WSRECEIVE cDELEXPITEMRESULT WSCLIENT WSRHEMPLOYEDCURRICULUM
Local cSoap := "" , oXmlRet

BEGIN WSMETHOD

cSoap += '<DELEXPITEM xmlns="http://172.16.33.125:83/">'
cSoap += WSSoapValue("USERCODE", ::cUSERCODE, cUSERCODE , "string", .T. , .F., 0 , NIL, .F.) 
cSoap += WSSoapValue("HISTORYID", ::nHISTORYID, nHISTORYID , "integer", .T. , .F., 0 , NIL, .F.) 
cSoap += "</DELEXPITEM>"

oXmlRet := SvcSoapCall(	Self,cSoap,; 
	"http://172.16.33.125:83/DELEXPITEM",; 
	"DOCUMENT","http://172.16.33.125:83/",,"1.031217",; 
	"http://172.16.33.125:83/ws/RHEMPLOYEDCURRICULUM.apw")

::Init()
::cDELEXPITEMRESULT  :=  WSAdvValue( oXmlRet,"_DELEXPITEMRESPONSE:_DELEXPITEMRESULT:TEXT","string",NIL,NIL,NIL,NIL,NIL,NIL) 

END WSMETHOD

oXmlRet := NIL
Return .T.

// WSDL Method DELEXTERNALHISTORY of Service WSRHEMPLOYEDCURRICULUM

WSMETHOD DELEXTERNALHISTORY WSSEND cUSERCODE,nHISTORYID WSRECEIVE cDELEXTERNALHISTORYRESULT WSCLIENT WSRHEMPLOYEDCURRICULUM
Local cSoap := "" , oXmlRet

BEGIN WSMETHOD

cSoap += '<DELEXTERNALHISTORY xmlns="http://172.16.33.125:83/">'
cSoap += WSSoapValue("USERCODE", ::cUSERCODE, cUSERCODE , "string", .T. , .F., 0 , NIL, .F.) 
cSoap += WSSoapValue("HISTORYID", ::nHISTORYID, nHISTORYID , "integer", .T. , .F., 0 , NIL, .F.) 
cSoap += "</DELEXTERNALHISTORY>"

oXmlRet := SvcSoapCall(	Self,cSoap,; 
	"http://172.16.33.125:83/DELEXTERNALHISTORY",; 
	"DOCUMENT","http://172.16.33.125:83/",,"1.031217",; 
	"http://172.16.33.125:83/ws/RHEMPLOYEDCURRICULUM.apw")

::Init()
::cDELEXTERNALHISTORYRESULT :=  WSAdvValue( oXmlRet,"_DELEXTERNALHISTORYRESPONSE:_DELEXTERNALHISTORYRESULT:TEXT","string",NIL,NIL,NIL,NIL,NIL,NIL) 

END WSMETHOD

oXmlRet := NIL
Return .T.

// WSDL Method DELITEMDATA of Service WSRHEMPLOYEDCURRICULUM

WSMETHOD DELITEMDATA WSSEND cUSERCODE,nREGRECNO WSRECEIVE cDELITEMDATARESULT WSCLIENT WSRHEMPLOYEDCURRICULUM
Local cSoap := "" , oXmlRet

BEGIN WSMETHOD

cSoap += '<DELITEMDATA xmlns="http://172.16.33.125:83/">'
cSoap += WSSoapValue("USERCODE", ::cUSERCODE, cUSERCODE , "string", .T. , .F., 0 , NIL, .F.) 
cSoap += WSSoapValue("REGRECNO", ::nREGRECNO, nREGRECNO , "integer", .T. , .F., 0 , NIL, .F.) 
cSoap += "</DELITEMDATA>"

oXmlRet := SvcSoapCall(	Self,cSoap,; 
	"http://172.16.33.125:83/DELITEMDATA",; 
	"DOCUMENT","http://172.16.33.125:83/",,"1.031217",; 
	"http://172.16.33.125:83/ws/RHEMPLOYEDCURRICULUM.apw")

::Init()
::cDELITEMDATARESULT :=  WSAdvValue( oXmlRet,"_DELITEMDATARESPONSE:_DELITEMDATARESULT:TEXT","string",NIL,NIL,NIL,NIL,NIL,NIL) 

END WSMETHOD

oXmlRet := NIL
Return .T.

// WSDL Method DELLEARNING of Service WSRHEMPLOYEDCURRICULUM

WSMETHOD DELLEARNING WSSEND cUSERCODE,nREGRECNO WSRECEIVE cDELLEARNINGRESULT WSCLIENT WSRHEMPLOYEDCURRICULUM
Local cSoap := "" , oXmlRet

BEGIN WSMETHOD

cSoap += '<DELLEARNING xmlns="http://172.16.33.125:83/">'
cSoap += WSSoapValue("USERCODE", ::cUSERCODE, cUSERCODE , "string", .T. , .F., 0 , NIL, .F.) 
cSoap += WSSoapValue("REGRECNO", ::nREGRECNO, nREGRECNO , "integer", .T. , .F., 0 , NIL, .F.) 
cSoap += "</DELLEARNING>"

oXmlRet := SvcSoapCall(	Self,cSoap,; 
	"http://172.16.33.125:83/DELLEARNING",; 
	"DOCUMENT","http://172.16.33.125:83/",,"1.031217",; 
	"http://172.16.33.125:83/ws/RHEMPLOYEDCURRICULUM.apw")

::Init()
::cDELLEARNINGRESULT :=  WSAdvValue( oXmlRet,"_DELLEARNINGRESPONSE:_DELLEARNINGRESULT:TEXT","string",NIL,NIL,NIL,NIL,NIL,NIL) 

END WSMETHOD

oXmlRet := NIL
Return .T.

// WSDL Method GETCOMENT of Service WSRHEMPLOYEDCURRICULUM

WSMETHOD GETCOMENT WSSEND cUSERCODE,cPARTICIPANTID WSRECEIVE oWSGETCOMENTRESULT WSCLIENT WSRHEMPLOYEDCURRICULUM
Local cSoap := "" , oXmlRet

BEGIN WSMETHOD

cSoap += '<GETCOMENT xmlns="http://172.16.33.125:83/">'
cSoap += WSSoapValue("USERCODE", ::cUSERCODE, cUSERCODE , "string", .T. , .F., 0 , NIL, .F.) 
cSoap += WSSoapValue("PARTICIPANTID", ::cPARTICIPANTID, cPARTICIPANTID , "string", .F. , .F., 0 , NIL, .F.) 
cSoap += "</GETCOMENT>"

oXmlRet := SvcSoapCall(	Self,cSoap,; 
	"http://172.16.33.125:83/GETCOMENT",; 
	"DOCUMENT","http://172.16.33.125:83/",,"1.031217",; 
	"http://172.16.33.125:83/ws/RHEMPLOYEDCURRICULUM.apw")

::Init()
::oWSGETCOMENTRESULT:SoapRecv( WSAdvValue( oXmlRet,"_GETCOMENTRESPONSE:_GETCOMENTRESULT","DESC",NIL,NIL,NIL,NIL,NIL,NIL) )

END WSMETHOD

oXmlRet := NIL
Return .T.

// WSDL Method GETPARTICIPANT of Service WSRHEMPLOYEDCURRICULUM

WSMETHOD GETPARTICIPANT WSSEND cUSERCODE,cPARTICIPANTID,cVISION,cENROLMENTID WSRECEIVE oWSGETPARTICIPANTRESULT WSCLIENT WSRHEMPLOYEDCURRICULUM
Local cSoap := "" , oXmlRet

BEGIN WSMETHOD

cSoap += '<GETPARTICIPANT xmlns="http://172.16.33.125:83/">'
cSoap += WSSoapValue("USERCODE", ::cUSERCODE, cUSERCODE , "string", .T. , .F., 0 , NIL, .F.) 
cSoap += WSSoapValue("PARTICIPANTID", ::cPARTICIPANTID, cPARTICIPANTID , "string", .F. , .F., 0 , NIL, .F.) 
cSoap += WSSoapValue("VISION", ::cVISION, cVISION , "string", .F. , .F., 0 , NIL, .F.) 
cSoap += WSSoapValue("ENROLMENTID", ::cENROLMENTID, cENROLMENTID , "string", .F. , .F., 0 , NIL, .F.) 
cSoap += "</GETPARTICIPANT>"

oXmlRet := SvcSoapCall(	Self,cSoap,; 
	"http://172.16.33.125:83/GETPARTICIPANT",; 
	"DOCUMENT","http://172.16.33.125:83/",,"1.031217",; 
	"http://172.16.33.125:83/ws/RHEMPLOYEDCURRICULUM.apw")

::Init()
::oWSGETPARTICIPANTRESULT:SoapRecv( WSAdvValue( oXmlRet,"_GETPARTICIPANTRESPONSE:_GETPARTICIPANTRESULT","PARTICIPANT",NIL,NIL,NIL,NIL,NIL,NIL) )

END WSMETHOD

oXmlRet := NIL
Return .T.

// WSDL Method GETQUALIFY of Service WSRHEMPLOYEDCURRICULUM

WSMETHOD GETQUALIFY WSSEND cUSERCODE,cPARTICIPANTID WSRECEIVE oWSGETQUALIFYRESULT WSCLIENT WSRHEMPLOYEDCURRICULUM
Local cSoap := "" , oXmlRet

BEGIN WSMETHOD

cSoap += '<GETQUALIFY xmlns="http://172.16.33.125:83/">'
cSoap += WSSoapValue("USERCODE", ::cUSERCODE, cUSERCODE , "string", .T. , .F., 0 , NIL, .F.) 
cSoap += WSSoapValue("PARTICIPANTID", ::cPARTICIPANTID, cPARTICIPANTID , "string", .F. , .F., 0 , NIL, .F.) 
cSoap += "</GETQUALIFY>"

oXmlRet := SvcSoapCall(	Self,cSoap,; 
	"http://172.16.33.125:83/GETQUALIFY",; 
	"DOCUMENT","http://172.16.33.125:83/",,"1.031217",; 
	"http://172.16.33.125:83/ws/RHEMPLOYEDCURRICULUM.apw")

::Init()
::oWSGETQUALIFYRESULT:SoapRecv( WSAdvValue( oXmlRet,"_GETQUALIFYRESPONSE:_GETQUALIFYRESULT","DESC",NIL,NIL,NIL,NIL,NIL,NIL) )

END WSMETHOD

oXmlRet := NIL
Return .T.

// WSDL Method PUTCERTIFICATION of Service WSRHEMPLOYEDCURRICULUM

WSMETHOD PUTCERTIFICATION WSSEND cUSERCODE,cPARTICIPANTID,oWSCOURSEDATA WSRECEIVE cPUTCERTIFICATIONRESULT WSCLIENT WSRHEMPLOYEDCURRICULUM
Local cSoap := "" , oXmlRet

BEGIN WSMETHOD

cSoap += '<PUTCERTIFICATION xmlns="http://172.16.33.125:83/">'
cSoap += WSSoapValue("USERCODE", ::cUSERCODE, cUSERCODE , "string", .T. , .F., 0 , NIL, .F.) 
cSoap += WSSoapValue("PARTICIPANTID", ::cPARTICIPANTID, cPARTICIPANTID , "string", .F. , .F., 0 , NIL, .F.) 
cSoap += WSSoapValue("COURSEDATA", ::oWSCOURSEDATA, oWSCOURSEDATA , "COURSELIST", .F. , .F., 0 , NIL, .F.) 
cSoap += "</PUTCERTIFICATION>"

oXmlRet := SvcSoapCall(	Self,cSoap,; 
	"http://172.16.33.125:83/PUTCERTIFICATION",; 
	"DOCUMENT","http://172.16.33.125:83/",,"1.031217",; 
	"http://172.16.33.125:83/ws/RHEMPLOYEDCURRICULUM.apw")

::Init()
::cPUTCERTIFICATIONRESULT :=  WSAdvValue( oXmlRet,"_PUTCERTIFICATIONRESPONSE:_PUTCERTIFICATIONRESULT:TEXT","string",NIL,NIL,NIL,NIL,NIL,NIL) 

END WSMETHOD

oXmlRet := NIL
Return .T.

// WSDL Method PUTCOMENT of Service WSRHEMPLOYEDCURRICULUM

WSMETHOD PUTCOMENT WSSEND cUSERCODE,cPARTICIPANTID,cCOMENTARIES WSRECEIVE cPUTCOMENTRESULT WSCLIENT WSRHEMPLOYEDCURRICULUM
Local cSoap := "" , oXmlRet

BEGIN WSMETHOD

cSoap += '<PUTCOMENT xmlns="http://172.16.33.125:83/">'
cSoap += WSSoapValue("USERCODE", ::cUSERCODE, cUSERCODE , "string", .T. , .F., 0 , NIL, .F.) 
cSoap += WSSoapValue("PARTICIPANTID", ::cPARTICIPANTID, cPARTICIPANTID , "string", .F. , .F., 0 , NIL, .F.) 
cSoap += WSSoapValue("COMENTARIES", ::cCOMENTARIES, cCOMENTARIES , "string", .T. , .F., 0 , NIL, .F.) 
cSoap += "</PUTCOMENT>"

oXmlRet := SvcSoapCall(	Self,cSoap,; 
	"http://172.16.33.125:83/PUTCOMENT",; 
	"DOCUMENT","http://172.16.33.125:83/",,"1.031217",; 
	"http://172.16.33.125:83/ws/RHEMPLOYEDCURRICULUM.apw")

::Init()
::cPUTCOMENTRESULT   :=  WSAdvValue( oXmlRet,"_PUTCOMENTRESPONSE:_PUTCOMENTRESULT:TEXT","string",NIL,NIL,NIL,NIL,NIL,NIL) 

END WSMETHOD

oXmlRet := NIL
Return .T.

// WSDL Method PUTCOURSE of Service WSRHEMPLOYEDCURRICULUM

WSMETHOD PUTCOURSE WSSEND cUSERCODE,cPARTICIPANTID,oWSCOURSEDATA WSRECEIVE cPUTCOURSERESULT WSCLIENT WSRHEMPLOYEDCURRICULUM
Local cSoap := "" , oXmlRet

BEGIN WSMETHOD

cSoap += '<PUTCOURSE xmlns="http://172.16.33.125:83/">'
cSoap += WSSoapValue("USERCODE", ::cUSERCODE, cUSERCODE , "string", .T. , .F., 0 , NIL, .F.) 
cSoap += WSSoapValue("PARTICIPANTID", ::cPARTICIPANTID, cPARTICIPANTID , "string", .F. , .F., 0 , NIL, .F.) 
cSoap += WSSoapValue("COURSEDATA", ::oWSCOURSEDATA, oWSCOURSEDATA , "COURSELIST", .F. , .F., 0 , NIL, .F.) 
cSoap += "</PUTCOURSE>"

oXmlRet := SvcSoapCall(	Self,cSoap,; 
	"http://172.16.33.125:83/PUTCOURSE",; 
	"DOCUMENT","http://172.16.33.125:83/",,"1.031217",; 
	"http://172.16.33.125:83/ws/RHEMPLOYEDCURRICULUM.apw")

::Init()
::cPUTCOURSERESULT   :=  WSAdvValue( oXmlRet,"_PUTCOURSERESPONSE:_PUTCOURSERESULT:TEXT","string",NIL,NIL,NIL,NIL,NIL,NIL) 

END WSMETHOD

oXmlRet := NIL
Return .T.

// WSDL Method PUTENTDATA of Service WSRHEMPLOYEDCURRICULUM

WSMETHOD PUTENTDATA WSSEND cUSERCODE,lINCLUDE,cPARTICIPANTID,nREGRECNO,oWSUSERCLASSITEM WSRECEIVE cPUTENTDATARESULT WSCLIENT WSRHEMPLOYEDCURRICULUM
Local cSoap := "" , oXmlRet

BEGIN WSMETHOD

cSoap += '<PUTENTDATA xmlns="http://172.16.33.125:83/">'
cSoap += WSSoapValue("USERCODE", ::cUSERCODE, cUSERCODE , "string", .T. , .F., 0 , NIL, .F.) 
cSoap += WSSoapValue("INCLUDE", ::lINCLUDE, lINCLUDE , "boolean", .T. , .F., 0 , NIL, .F.) 
cSoap += WSSoapValue("PARTICIPANTID", ::cPARTICIPANTID, cPARTICIPANTID , "string", .F. , .F., 0 , NIL, .F.) 
cSoap += WSSoapValue("REGRECNO", ::nREGRECNO, nREGRECNO , "integer", .T. , .F., 0 , NIL, .F.) 
cSoap += WSSoapValue("USERCLASSITEM", ::oWSUSERCLASSITEM, oWSUSERCLASSITEM , "USERCLASSLIST", .T. , .F., 0 , NIL, .F.) 
cSoap += "</PUTENTDATA>"

oXmlRet := SvcSoapCall(	Self,cSoap,; 
	"http://172.16.33.125:83/PUTENTDATA",; 
	"DOCUMENT","http://172.16.33.125:83/",,"1.031217",; 
	"http://172.16.33.125:83/ws/RHEMPLOYEDCURRICULUM.apw")

::Init()
::cPUTENTDATARESULT  :=  WSAdvValue( oXmlRet,"_PUTENTDATARESPONSE:_PUTENTDATARESULT:TEXT","string",NIL,NIL,NIL,NIL,NIL,NIL) 

END WSMETHOD

oXmlRet := NIL
Return .T.

// WSDL Method PUTEXTERNALHISTORY of Service WSRHEMPLOYEDCURRICULUM

WSMETHOD PUTEXTERNALHISTORY WSSEND cUSERCODE,cPARTICIPANTID,lINCLUDE,oWSEXTERNALHISTORY WSRECEIVE cPUTEXTERNALHISTORYRESULT WSCLIENT WSRHEMPLOYEDCURRICULUM
Local cSoap := "" , oXmlRet

BEGIN WSMETHOD

cSoap += '<PUTEXTERNALHISTORY xmlns="http://172.16.33.125:83/">'
cSoap += WSSoapValue("USERCODE", ::cUSERCODE, cUSERCODE , "string", .T. , .F., 0 , NIL, .F.) 
cSoap += WSSoapValue("PARTICIPANTID", ::cPARTICIPANTID, cPARTICIPANTID , "string", .F. , .F., 0 , NIL, .F.) 
cSoap += WSSoapValue("INCLUDE", ::lINCLUDE, lINCLUDE , "boolean", .T. , .F., 0 , NIL, .F.) 
cSoap += WSSoapValue("EXTERNALHISTORY", ::oWSEXTERNALHISTORY, oWSEXTERNALHISTORY , "HISTORYLIST", .F. , .F., 0 , NIL, .F.) 
cSoap += "</PUTEXTERNALHISTORY>"

oXmlRet := SvcSoapCall(	Self,cSoap,; 
	"http://172.16.33.125:83/PUTEXTERNALHISTORY",; 
	"DOCUMENT","http://172.16.33.125:83/",,"1.031217",; 
	"http://172.16.33.125:83/ws/RHEMPLOYEDCURRICULUM.apw")

::Init()
::cPUTEXTERNALHISTORYRESULT :=  WSAdvValue( oXmlRet,"_PUTEXTERNALHISTORYRESPONSE:_PUTEXTERNALHISTORYRESULT:TEXT","string",NIL,NIL,NIL,NIL,NIL,NIL) 

END WSMETHOD

oXmlRet := NIL
Return .T.

// WSDL Method PUTINTERNALEXP of Service WSRHEMPLOYEDCURRICULUM

WSMETHOD PUTINTERNALEXP WSSEND cUSERCODE,lINCLUDE,oWSEXPERIENCEITEM,cPARTICIPANTID WSRECEIVE cPUTINTERNALEXPRESULT WSCLIENT WSRHEMPLOYEDCURRICULUM
Local cSoap := "" , oXmlRet

BEGIN WSMETHOD

cSoap += '<PUTINTERNALEXP xmlns="http://172.16.33.125:83/">'
cSoap += WSSoapValue("USERCODE", ::cUSERCODE, cUSERCODE , "string", .T. , .F., 0 , NIL, .F.) 
cSoap += WSSoapValue("INCLUDE", ::lINCLUDE, lINCLUDE , "boolean", .T. , .F., 0 , NIL, .F.) 
cSoap += WSSoapValue("EXPERIENCEITEM", ::oWSEXPERIENCEITEM, oWSEXPERIENCEITEM , "EXPERIENCES", .T. , .F., 0 , NIL, .F.) 
cSoap += WSSoapValue("PARTICIPANTID", ::cPARTICIPANTID, cPARTICIPANTID , "string", .F. , .F., 0 , NIL, .F.) 
cSoap += "</PUTINTERNALEXP>"

oXmlRet := SvcSoapCall(	Self,cSoap,; 
	"http://172.16.33.125:83/PUTINTERNALEXP",; 
	"DOCUMENT","http://172.16.33.125:83/",,"1.031217",; 
	"http://172.16.33.125:83/ws/RHEMPLOYEDCURRICULUM.apw")

::Init()
::cPUTINTERNALEXPRESULT :=  WSAdvValue( oXmlRet,"_PUTINTERNALEXPRESPONSE:_PUTINTERNALEXPRESULT:TEXT","string",NIL,NIL,NIL,NIL,NIL,NIL) 

END WSMETHOD

oXmlRet := NIL
Return .T.

// WSDL Method PUTLEARNING of Service WSRHEMPLOYEDCURRICULUM

WSMETHOD PUTLEARNING WSSEND cUSERCODE,cPARTICIPANTID,oWSCOURSEDATA WSRECEIVE cPUTLEARNINGRESULT WSCLIENT WSRHEMPLOYEDCURRICULUM
Local cSoap := "" , oXmlRet

BEGIN WSMETHOD

cSoap += '<PUTLEARNING xmlns="http://172.16.33.125:83/">'
cSoap += WSSoapValue("USERCODE", ::cUSERCODE, cUSERCODE , "string", .T. , .F., 0 , NIL, .F.) 
cSoap += WSSoapValue("PARTICIPANTID", ::cPARTICIPANTID, cPARTICIPANTID , "string", .F. , .F., 0 , NIL, .F.) 
cSoap += WSSoapValue("COURSEDATA", ::oWSCOURSEDATA, oWSCOURSEDATA , "COURSELIST", .F. , .F., 0 , NIL, .F.) 
cSoap += "</PUTLEARNING>"

oXmlRet := SvcSoapCall(	Self,cSoap,; 
	"http://172.16.33.125:83/PUTLEARNING",; 
	"DOCUMENT","http://172.16.33.125:83/",,"1.031217",; 
	"http://172.16.33.125:83/ws/RHEMPLOYEDCURRICULUM.apw")

::Init()
::cPUTLEARNINGRESULT :=  WSAdvValue( oXmlRet,"_PUTLEARNINGRESPONSE:_PUTLEARNINGRESULT:TEXT","string",NIL,NIL,NIL,NIL,NIL,NIL) 

END WSMETHOD

oXmlRet := NIL
Return .T.

// WSDL Method PUTMENTOR of Service WSRHEMPLOYEDCURRICULUM

WSMETHOD PUTMENTOR WSSEND cUSERCODE,cPARTICIPANTID,cCODMENTOR WSRECEIVE cPUTMENTORRESULT WSCLIENT WSRHEMPLOYEDCURRICULUM
Local cSoap := "" , oXmlRet

BEGIN WSMETHOD

cSoap += '<PUTMENTOR xmlns="http://172.16.33.125:83/">'
cSoap += WSSoapValue("USERCODE", ::cUSERCODE, cUSERCODE , "string", .T. , .F., 0 , NIL, .F.) 
cSoap += WSSoapValue("PARTICIPANTID", ::cPARTICIPANTID, cPARTICIPANTID , "string", .F. , .F., 0 , NIL, .F.) 
cSoap += WSSoapValue("CODMENTOR", ::cCODMENTOR, cCODMENTOR , "string", .T. , .F., 0 , NIL, .F.) 
cSoap += "</PUTMENTOR>"

oXmlRet := SvcSoapCall(	Self,cSoap,; 
	"http://172.16.33.125:83/PUTMENTOR",; 
	"DOCUMENT","http://172.16.33.125:83/",,"1.031217",; 
	"http://172.16.33.125:83/ws/RHEMPLOYEDCURRICULUM.apw")

::Init()
::cPUTMENTORRESULT   :=  WSAdvValue( oXmlRet,"_PUTMENTORRESPONSE:_PUTMENTORRESULT:TEXT","string",NIL,NIL,NIL,NIL,NIL,NIL) 

END WSMETHOD

oXmlRet := NIL
Return .T.

// WSDL Method PUTQUALIFY of Service WSRHEMPLOYEDCURRICULUM

WSMETHOD PUTQUALIFY WSSEND cUSERCODE,cPARTICIPANTID,cQUALIFYDESCRIPTION WSRECEIVE cPUTQUALIFYRESULT WSCLIENT WSRHEMPLOYEDCURRICULUM
Local cSoap := "" , oXmlRet

BEGIN WSMETHOD

cSoap += '<PUTQUALIFY xmlns="http://172.16.33.125:83/">'
cSoap += WSSoapValue("USERCODE", ::cUSERCODE, cUSERCODE , "string", .T. , .F., 0 , NIL, .F.) 
cSoap += WSSoapValue("PARTICIPANTID", ::cPARTICIPANTID, cPARTICIPANTID , "string", .F. , .F., 0 , NIL, .F.) 
cSoap += WSSoapValue("QUALIFYDESCRIPTION", ::cQUALIFYDESCRIPTION, cQUALIFYDESCRIPTION , "string", .T. , .F., 0 , NIL, .F.) 
cSoap += "</PUTQUALIFY>"

oXmlRet := SvcSoapCall(	Self,cSoap,; 
	"http://172.16.33.125:83/PUTQUALIFY",; 
	"DOCUMENT","http://172.16.33.125:83/",,"1.031217",; 
	"http://172.16.33.125:83/ws/RHEMPLOYEDCURRICULUM.apw")

::Init()
::cPUTQUALIFYRESULT  :=  WSAdvValue( oXmlRet,"_PUTQUALIFYRESPONSE:_PUTQUALIFYRESULT:TEXT","string",NIL,NIL,NIL,NIL,NIL,NIL) 

END WSMETHOD

oXmlRet := NIL
Return .T.

// WSDL Method SETITEMDATA of Service WSRHEMPLOYEDCURRICULUM

WSMETHOD SETITEMDATA WSSEND cUSERCODE,cPARTICIPANTID,oWSCOURSEDATA WSRECEIVE cSETITEMDATARESULT WSCLIENT WSRHEMPLOYEDCURRICULUM
Local cSoap := "" , oXmlRet

BEGIN WSMETHOD

cSoap += '<SETITEMDATA xmlns="http://172.16.33.125:83/">'
cSoap += WSSoapValue("USERCODE", ::cUSERCODE, cUSERCODE , "string", .T. , .F., 0 , NIL, .F.) 
cSoap += WSSoapValue("PARTICIPANTID", ::cPARTICIPANTID, cPARTICIPANTID , "string", .F. , .F., 0 , NIL, .F.) 
cSoap += WSSoapValue("COURSEDATA", ::oWSCOURSEDATA, oWSCOURSEDATA , "COURSELIST", .F. , .F., 0 , NIL, .F.) 
cSoap += "</SETITEMDATA>"

oXmlRet := SvcSoapCall(	Self,cSoap,; 
	"http://172.16.33.125:83/SETITEMDATA",; 
	"DOCUMENT","http://172.16.33.125:83/",,"1.031217",; 
	"http://172.16.33.125:83/ws/RHEMPLOYEDCURRICULUM.apw")

::Init()
::cSETITEMDATARESULT :=  WSAdvValue( oXmlRet,"_SETITEMDATARESPONSE:_SETITEMDATARESULT:TEXT","string",NIL,NIL,NIL,NIL,NIL,NIL) 

END WSMETHOD

oXmlRet := NIL
Return .T.

// WSDL Method USERMENU of Service WSRHEMPLOYEDCURRICULUM

WSMETHOD USERMENU WSSEND cUSERCODE,cMENUTITLE WSRECEIVE cUSERMENURESULT WSCLIENT WSRHEMPLOYEDCURRICULUM
Local cSoap := "" , oXmlRet

BEGIN WSMETHOD

cSoap += '<USERMENU xmlns="http://172.16.33.125:83/">'
cSoap += WSSoapValue("USERCODE", ::cUSERCODE, cUSERCODE , "string", .T. , .F., 0 , NIL, .F.) 
cSoap += WSSoapValue("MENUTITLE", ::cMENUTITLE, cMENUTITLE , "string", .T. , .F., 0 , NIL, .F.) 
cSoap += "</USERMENU>"

oXmlRet := SvcSoapCall(	Self,cSoap,; 
	"http://172.16.33.125:83/USERMENU",; 
	"DOCUMENT","http://172.16.33.125:83/",,"1.031217",; 
	"http://172.16.33.125:83/ws/RHEMPLOYEDCURRICULUM.apw")

::Init()
::cUSERMENURESULT    :=  WSAdvValue( oXmlRet,"_USERMENURESPONSE:_USERMENURESULT:TEXT","string",NIL,NIL,NIL,NIL,NIL,NIL) 

END WSMETHOD

oXmlRet := NIL
Return .T.


// WSDL Data Structure GROUPCOMBOS

WSSTRUCT RHEMPLOYEDCURRICULUM_GROUPCOMBOS
	WSDATA   oWSACOURSELIST            AS RHEMPLOYEDCURRICULUM_ARRAYOFCOURSELIST OPTIONAL
	WSDATA   oWSACOURSENAMES           AS RHEMPLOYEDCURRICULUM_ARRAYOFCOURSENAMES OPTIONAL
	WSDATA   oWSALEARN                 AS RHEMPLOYEDCURRICULUM_ARRAYOFCOURSENAMES OPTIONAL
	WSDATA   oWSASCALELIST             AS RHEMPLOYEDCURRICULUM_ARRAYOFCOURSESCALELIST OPTIONAL
	WSDATA   oWSATYPESLIST             AS RHEMPLOYEDCURRICULUM_ARRAYOFCOURSETYPESLIST OPTIONAL
	WSDATA   dLASTUPDATE               AS date OPTIONAL
	WSDATA   cUSERID                   AS string
	WSDATA   cUSERNAME                 AS string
	WSDATA   _HEADOUT                  AS Array of String
	
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT RHEMPLOYEDCURRICULUM_GROUPCOMBOS
	::Init()
Return Self

WSMETHOD INIT WSCLIENT RHEMPLOYEDCURRICULUM_GROUPCOMBOS
Return

WSMETHOD CLONE WSCLIENT RHEMPLOYEDCURRICULUM_GROUPCOMBOS
	Local oClone := RHEMPLOYEDCURRICULUM_GROUPCOMBOS():NEW()
	oClone:oWSACOURSELIST       := IIF(::oWSACOURSELIST = NIL , NIL , ::oWSACOURSELIST:Clone() )
	oClone:oWSACOURSENAMES      := IIF(::oWSACOURSENAMES = NIL , NIL , ::oWSACOURSENAMES:Clone() )
	oClone:oWSALEARN            := IIF(::oWSALEARN = NIL , NIL , ::oWSALEARN:Clone() )
	oClone:oWSASCALELIST        := IIF(::oWSASCALELIST = NIL , NIL , ::oWSASCALELIST:Clone() )
	oClone:oWSATYPESLIST        := IIF(::oWSATYPESLIST = NIL , NIL , ::oWSATYPESLIST:Clone() )
	oClone:dLASTUPDATE          := ::dLASTUPDATE
	oClone:cUSERID              := ::cUSERID
	oClone:cUSERNAME            := ::cUSERNAME
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT RHEMPLOYEDCURRICULUM_GROUPCOMBOS
	Local oNode1
	Local oNode2
	Local oNode3
	Local oNode4
	Local oNode5
	::Init()
	If oResponse = NIL ; Return ; Endif 
	oNode1 :=  WSAdvValue( oResponse,"_ACOURSELIST","ARRAYOFCOURSELIST",NIL,NIL,NIL,"O",NIL,NIL) 
	If oNode1 != NIL
		::oWSACOURSELIST := RHEMPLOYEDCURRICULUM_ARRAYOFCOURSELIST():New()
		::oWSACOURSELIST:SoapRecv(oNode1)
	EndIf
	oNode2 :=  WSAdvValue( oResponse,"_ACOURSENAMES","ARRAYOFCOURSENAMES",NIL,NIL,NIL,"O",NIL,NIL) 
	If oNode2 != NIL
		::oWSACOURSENAMES := RHEMPLOYEDCURRICULUM_ARRAYOFCOURSENAMES():New()
		::oWSACOURSENAMES:SoapRecv(oNode2)
	EndIf
	oNode3 :=  WSAdvValue( oResponse,"_ALEARN","ARRAYOFCOURSENAMES",NIL,NIL,NIL,"O",NIL,NIL) 
	If oNode3 != NIL
		::oWSALEARN := RHEMPLOYEDCURRICULUM_ARRAYOFCOURSENAMES():New()
		::oWSALEARN:SoapRecv(oNode3)
	EndIf
	oNode4 :=  WSAdvValue( oResponse,"_ASCALELIST","ARRAYOFCOURSESCALELIST",NIL,NIL,NIL,"O",NIL,NIL) 
	If oNode4 != NIL
		::oWSASCALELIST := RHEMPLOYEDCURRICULUM_ARRAYOFCOURSESCALELIST():New()
		::oWSASCALELIST:SoapRecv(oNode4)
	EndIf
	oNode5 :=  WSAdvValue( oResponse,"_ATYPESLIST","ARRAYOFCOURSETYPESLIST",NIL,NIL,NIL,"O",NIL,NIL) 
	If oNode5 != NIL
		::oWSATYPESLIST := RHEMPLOYEDCURRICULUM_ARRAYOFCOURSETYPESLIST():New()
		::oWSATYPESLIST:SoapRecv(oNode5)
	EndIf
	::dLASTUPDATE        :=  WSAdvValue( oResponse,"_LASTUPDATE","date",NIL,NIL,NIL,"D",NIL,NIL) 
	::cUSERID            :=  WSAdvValue( oResponse,"_USERID","string",NIL,"Property cUSERID as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::cUSERNAME          :=  WSAdvValue( oResponse,"_USERNAME","string",NIL,"Property cUSERNAME as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
Return

// WSDL Data Structure CLASSDATA

WSSTRUCT RHEMPLOYEDCURRICULUM_CLASSDATA
	WSDATA   oWSACOMBOCLASSLIST        AS RHEMPLOYEDCURRICULUM_ARRAYOFCOMBOCLASSLIST OPTIONAL
	WSDATA   oWSAUSERCLASSLIST         AS RHEMPLOYEDCURRICULUM_ARRAYOFUSERCLASSLIST OPTIONAL
	WSDATA   dLASTUPDATE               AS date OPTIONAL
	WSDATA   cUSERID                   AS string
	WSDATA   _HEADOUT                  AS Array of String
	
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT RHEMPLOYEDCURRICULUM_CLASSDATA
	::Init()
Return Self

WSMETHOD INIT WSCLIENT RHEMPLOYEDCURRICULUM_CLASSDATA
Return

WSMETHOD CLONE WSCLIENT RHEMPLOYEDCURRICULUM_CLASSDATA
	Local oClone := RHEMPLOYEDCURRICULUM_CLASSDATA():NEW()
	oClone:oWSACOMBOCLASSLIST   := IIF(::oWSACOMBOCLASSLIST = NIL , NIL , ::oWSACOMBOCLASSLIST:Clone() )
	oClone:oWSAUSERCLASSLIST    := IIF(::oWSAUSERCLASSLIST = NIL , NIL , ::oWSAUSERCLASSLIST:Clone() )
	oClone:dLASTUPDATE          := ::dLASTUPDATE
	oClone:cUSERID              := ::cUSERID
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT RHEMPLOYEDCURRICULUM_CLASSDATA
	Local oNode1
	Local oNode2
	::Init()
	If oResponse = NIL ; Return ; Endif 
	oNode1 :=  WSAdvValue( oResponse,"_ACOMBOCLASSLIST","ARRAYOFCOMBOCLASSLIST",NIL,NIL,NIL,"O",NIL,NIL) 
	If oNode1 != NIL
		::oWSACOMBOCLASSLIST := RHEMPLOYEDCURRICULUM_ARRAYOFCOMBOCLASSLIST():New()
		::oWSACOMBOCLASSLIST:SoapRecv(oNode1)
	EndIf
	oNode2 :=  WSAdvValue( oResponse,"_AUSERCLASSLIST","ARRAYOFUSERCLASSLIST",NIL,NIL,NIL,"O",NIL,NIL) 
	If oNode2 != NIL
		::oWSAUSERCLASSLIST := RHEMPLOYEDCURRICULUM_ARRAYOFUSERCLASSLIST():New()
		::oWSAUSERCLASSLIST:SoapRecv(oNode2)
	EndIf
	::dLASTUPDATE        :=  WSAdvValue( oResponse,"_LASTUPDATE","date",NIL,NIL,NIL,"D",NIL,NIL) 
	::cUSERID            :=  WSAdvValue( oResponse,"_USERID","string",NIL,"Property cUSERID as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
Return

// WSDL Data Structure ARRAYOFHISTORYLIST

WSSTRUCT RHEMPLOYEDCURRICULUM_ARRAYOFHISTORYLIST
	WSDATA   oWSHISTORYLIST            AS RHEMPLOYEDCURRICULUM_HISTORYLIST OPTIONAL
	WSDATA   _HEADOUT                  AS Array of String
	
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT RHEMPLOYEDCURRICULUM_ARRAYOFHISTORYLIST
	::Init()
Return Self

WSMETHOD INIT WSCLIENT RHEMPLOYEDCURRICULUM_ARRAYOFHISTORYLIST
	::oWSHISTORYLIST       := {} // Array Of  RHEMPLOYEDCURRICULUM_HISTORYLIST():New()
Return

WSMETHOD CLONE WSCLIENT RHEMPLOYEDCURRICULUM_ARRAYOFHISTORYLIST
	Local oClone := RHEMPLOYEDCURRICULUM_ARRAYOFHISTORYLIST():NEW()
	oClone:oWSHISTORYLIST := NIL
	If ::oWSHISTORYLIST <> NIL 
		oClone:oWSHISTORYLIST := {}
		aEval( ::oWSHISTORYLIST , { |x| aadd( oClone:oWSHISTORYLIST , x:Clone() ) } )
	Endif 
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT RHEMPLOYEDCURRICULUM_ARRAYOFHISTORYLIST
	Local nRElem1, oNodes1, nTElem1
	::Init()
	If oResponse = NIL ; Return ; Endif 
	oNodes1 :=  WSAdvValue( oResponse,"_HISTORYLIST","HISTORYLIST",{},NIL,.T.,"O",NIL,NIL) 
	nTElem1 := len(oNodes1)
	For nRElem1 := 1 to nTElem1 
		If !WSIsNilNode( oNodes1[nRElem1] )
			aadd(::oWSHISTORYLIST , RHEMPLOYEDCURRICULUM_HISTORYLIST():New() )
			::oWSHISTORYLIST[len(::oWSHISTORYLIST)]:SoapRecv(oNodes1[nRElem1])
		Endif
	Next
Return

// WSDL Data Structure ARRAYOFEXPERIENCES

WSSTRUCT RHEMPLOYEDCURRICULUM_ARRAYOFEXPERIENCES
	WSDATA   oWSEXPERIENCES            AS RHEMPLOYEDCURRICULUM_EXPERIENCES OPTIONAL
	WSDATA   _HEADOUT                  AS Array of String
	
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT RHEMPLOYEDCURRICULUM_ARRAYOFEXPERIENCES
	::Init()
Return Self

WSMETHOD INIT WSCLIENT RHEMPLOYEDCURRICULUM_ARRAYOFEXPERIENCES
	::oWSEXPERIENCES       := {} // Array Of  RHEMPLOYEDCURRICULUM_EXPERIENCES():New()
Return

WSMETHOD CLONE WSCLIENT RHEMPLOYEDCURRICULUM_ARRAYOFEXPERIENCES
	Local oClone := RHEMPLOYEDCURRICULUM_ARRAYOFEXPERIENCES():NEW()
	oClone:oWSEXPERIENCES := NIL
	If ::oWSEXPERIENCES <> NIL 
		oClone:oWSEXPERIENCES := {}
		aEval( ::oWSEXPERIENCES , { |x| aadd( oClone:oWSEXPERIENCES , x:Clone() ) } )
	Endif 
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT RHEMPLOYEDCURRICULUM_ARRAYOFEXPERIENCES
	Local nRElem1, oNodes1, nTElem1
	::Init()
	If oResponse = NIL ; Return ; Endif 
	oNodes1 :=  WSAdvValue( oResponse,"_EXPERIENCES","EXPERIENCES",{},NIL,.T.,"O",NIL,NIL) 
	nTElem1 := len(oNodes1)
	For nRElem1 := 1 to nTElem1 
		If !WSIsNilNode( oNodes1[nRElem1] )
			aadd(::oWSEXPERIENCES , RHEMPLOYEDCURRICULUM_EXPERIENCES():New() )
			::oWSEXPERIENCES[len(::oWSEXPERIENCES)]:SoapRecv(oNodes1[nRElem1])
		Endif
	Next
Return

// WSDL Data Structure ARRAYOFITENSMENU

WSSTRUCT RHEMPLOYEDCURRICULUM_ARRAYOFITENSMENU
	WSDATA   oWSITENSMENU              AS RHEMPLOYEDCURRICULUM_ITENSMENU OPTIONAL
	WSDATA   _HEADOUT                  AS Array of String
	
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT RHEMPLOYEDCURRICULUM_ARRAYOFITENSMENU
	::Init()
Return Self

WSMETHOD INIT WSCLIENT RHEMPLOYEDCURRICULUM_ARRAYOFITENSMENU
	::oWSITENSMENU         := {} // Array Of  RHEMPLOYEDCURRICULUM_ITENSMENU():New()
Return

WSMETHOD CLONE WSCLIENT RHEMPLOYEDCURRICULUM_ARRAYOFITENSMENU
	Local oClone := RHEMPLOYEDCURRICULUM_ARRAYOFITENSMENU():NEW()
	oClone:oWSITENSMENU := NIL
	If ::oWSITENSMENU <> NIL 
		oClone:oWSITENSMENU := {}
		aEval( ::oWSITENSMENU , { |x| aadd( oClone:oWSITENSMENU , x:Clone() ) } )
	Endif 
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT RHEMPLOYEDCURRICULUM_ARRAYOFITENSMENU
	Local nRElem1, oNodes1, nTElem1
	::Init()
	If oResponse = NIL ; Return ; Endif 
	oNodes1 :=  WSAdvValue( oResponse,"_ITENSMENU","ITENSMENU",{},NIL,.T.,"O",NIL,NIL) 
	nTElem1 := len(oNodes1)
	For nRElem1 := 1 to nTElem1 
		If !WSIsNilNode( oNodes1[nRElem1] )
			aadd(::oWSITENSMENU , RHEMPLOYEDCURRICULUM_ITENSMENU():New() )
			::oWSITENSMENU[len(::oWSITENSMENU)]:SoapRecv(oNodes1[nRElem1])
		Endif
	Next
Return

// WSDL Data Structure ARRAYOFMENTORS

WSSTRUCT RHEMPLOYEDCURRICULUM_ARRAYOFMENTORS
	WSDATA   oWSMENTORS                AS RHEMPLOYEDCURRICULUM_MENTORS OPTIONAL
	WSDATA   _HEADOUT                  AS Array of String
	
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT RHEMPLOYEDCURRICULUM_ARRAYOFMENTORS
	::Init()
Return Self

WSMETHOD INIT WSCLIENT RHEMPLOYEDCURRICULUM_ARRAYOFMENTORS
	::oWSMENTORS           := {} // Array Of  RHEMPLOYEDCURRICULUM_MENTORS():New()
Return

WSMETHOD CLONE WSCLIENT RHEMPLOYEDCURRICULUM_ARRAYOFMENTORS
	Local oClone := RHEMPLOYEDCURRICULUM_ARRAYOFMENTORS():NEW()
	oClone:oWSMENTORS := NIL
	If ::oWSMENTORS <> NIL 
		oClone:oWSMENTORS := {}
		aEval( ::oWSMENTORS , { |x| aadd( oClone:oWSMENTORS , x:Clone() ) } )
	Endif 
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT RHEMPLOYEDCURRICULUM_ARRAYOFMENTORS
	Local nRElem1, oNodes1, nTElem1
	::Init()
	If oResponse = NIL ; Return ; Endif 
	oNodes1 :=  WSAdvValue( oResponse,"_MENTORS","MENTORS",{},NIL,.T.,"O",NIL,NIL) 
	nTElem1 := len(oNodes1)
	For nRElem1 := 1 to nTElem1 
		If !WSIsNilNode( oNodes1[nRElem1] )
			aadd(::oWSMENTORS , RHEMPLOYEDCURRICULUM_MENTORS():New() )
			::oWSMENTORS[len(::oWSMENTORS)]:SoapRecv(oNodes1[nRElem1])
		Endif
	Next
Return

// WSDL Data Structure DESC

WSSTRUCT RHEMPLOYEDCURRICULUM_DESC
	WSDATA   cDESCRIPTION              AS string OPTIONAL
	WSDATA   dLASTUPDATE               AS date OPTIONAL
	WSDATA   _HEADOUT                  AS Array of String
	
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT RHEMPLOYEDCURRICULUM_DESC
	::Init()
Return Self

WSMETHOD INIT WSCLIENT RHEMPLOYEDCURRICULUM_DESC
Return

WSMETHOD CLONE WSCLIENT RHEMPLOYEDCURRICULUM_DESC
	Local oClone := RHEMPLOYEDCURRICULUM_DESC():NEW()
	oClone:cDESCRIPTION         := ::cDESCRIPTION
	oClone:dLASTUPDATE          := ::dLASTUPDATE
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT RHEMPLOYEDCURRICULUM_DESC
	::Init()
	If oResponse = NIL ; Return ; Endif 
	::cDESCRIPTION       :=  WSAdvValue( oResponse,"_DESCRIPTION","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::dLASTUPDATE        :=  WSAdvValue( oResponse,"_LASTUPDATE","date",NIL,NIL,NIL,"D",NIL,NIL) 
Return

// WSDL Data Structure PARTICIPANT

WSSTRUCT RHEMPLOYEDCURRICULUM_PARTICIPANT
	WSDATA   cAREA                     AS string OPTIONAL
	WSDATA   cCODMENTOR                AS string OPTIONAL
	WSDATA   cEVALUATORNAME            AS string OPTIONAL
	WSDATA   cFILIAL                   AS string
	WSDATA   cHIERARQLEVEL             AS string OPTIONAL
	WSDATA   dLASTUPDATE               AS date OPTIONAL
	WSDATA   cMENTORNAME               AS string OPTIONAL
	WSDATA   cNAME                     AS string
	WSDATA   cREGISTRATION             AS string
	WSDATA   _HEADOUT                  AS Array of String
	
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT RHEMPLOYEDCURRICULUM_PARTICIPANT
	::Init()
Return Self

WSMETHOD INIT WSCLIENT RHEMPLOYEDCURRICULUM_PARTICIPANT
Return

WSMETHOD CLONE WSCLIENT RHEMPLOYEDCURRICULUM_PARTICIPANT
	Local oClone := RHEMPLOYEDCURRICULUM_PARTICIPANT():NEW()
	oClone:cAREA                := ::cAREA
	oClone:cCODMENTOR           := ::cCODMENTOR
	oClone:cEVALUATORNAME       := ::cEVALUATORNAME
	oClone:cFILIAL              := ::cFILIAL
	oClone:cHIERARQLEVEL        := ::cHIERARQLEVEL
	oClone:dLASTUPDATE          := ::dLASTUPDATE
	oClone:cMENTORNAME          := ::cMENTORNAME
	oClone:cNAME                := ::cNAME
	oClone:cREGISTRATION        := ::cREGISTRATION
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT RHEMPLOYEDCURRICULUM_PARTICIPANT
	::Init()
	If oResponse = NIL ; Return ; Endif 
	::cAREA              :=  WSAdvValue( oResponse,"_AREA","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cCODMENTOR         :=  WSAdvValue( oResponse,"_CODMENTOR","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cEVALUATORNAME     :=  WSAdvValue( oResponse,"_EVALUATORNAME","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cFILIAL            :=  WSAdvValue( oResponse,"_FILIAL","string",NIL,"Property cFILIAL as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::cHIERARQLEVEL      :=  WSAdvValue( oResponse,"_HIERARQLEVEL","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::dLASTUPDATE        :=  WSAdvValue( oResponse,"_LASTUPDATE","date",NIL,NIL,NIL,"D",NIL,NIL) 
	::cMENTORNAME        :=  WSAdvValue( oResponse,"_MENTORNAME","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cNAME              :=  WSAdvValue( oResponse,"_NAME","string",NIL,"Property cNAME as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::cREGISTRATION      :=  WSAdvValue( oResponse,"_REGISTRATION","string",NIL,"Property cREGISTRATION as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
Return

// WSDL Data Structure HISTORYLIST

WSSTRUCT RHEMPLOYEDCURRICULUM_HISTORYLIST
	WSDATA   dADMISSIONDATE            AS date
	WSDATA   cCOMPANYNAME              AS string
	WSDATA   dDEMISSIONDATE            AS date OPTIONAL
	WSDATA   cDESCRIPTION              AS string OPTIONAL
	WSDATA   nHISTORYID                AS integer OPTIONAL
	WSDATA   cINITIALPOSITION          AS string
	WSDATA   dLASTUPDATE               AS date OPTIONAL
	WSDATA   cPOSITION                 AS string
	WSDATA   cREGISTRATION             AS string
	WSDATA   _HEADOUT                  AS Array of String
	
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPSEND
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT RHEMPLOYEDCURRICULUM_HISTORYLIST
	::Init()
Return Self

WSMETHOD INIT WSCLIENT RHEMPLOYEDCURRICULUM_HISTORYLIST
Return

WSMETHOD CLONE WSCLIENT RHEMPLOYEDCURRICULUM_HISTORYLIST
	Local oClone := RHEMPLOYEDCURRICULUM_HISTORYLIST():NEW()
	oClone:dADMISSIONDATE       := ::dADMISSIONDATE
	oClone:cCOMPANYNAME         := ::cCOMPANYNAME
	oClone:dDEMISSIONDATE       := ::dDEMISSIONDATE
	oClone:cDESCRIPTION         := ::cDESCRIPTION
	oClone:nHISTORYID           := ::nHISTORYID
	oClone:cINITIALPOSITION     := ::cINITIALPOSITION
	oClone:dLASTUPDATE          := ::dLASTUPDATE
	oClone:cPOSITION            := ::cPOSITION
	oClone:cREGISTRATION        := ::cREGISTRATION
Return oClone

WSMETHOD SOAPSEND WSCLIENT RHEMPLOYEDCURRICULUM_HISTORYLIST
	Local cSoap := ""
	cSoap += WSSoapValue("ADMISSIONDATE", ::dADMISSIONDATE, ::dADMISSIONDATE , "date", .T. , .F., 0 , NIL, .F.) 
	cSoap += WSSoapValue("COMPANYNAME", ::cCOMPANYNAME, ::cCOMPANYNAME , "string", .T. , .F., 0 , NIL, .F.) 
	cSoap += WSSoapValue("DEMISSIONDATE", ::dDEMISSIONDATE, ::dDEMISSIONDATE , "date", .F. , .F., 0 , NIL, .F.) 
	cSoap += WSSoapValue("DESCRIPTION", ::cDESCRIPTION, ::cDESCRIPTION , "string", .F. , .F., 0 , NIL, .F.) 
	cSoap += WSSoapValue("HISTORYID", ::nHISTORYID, ::nHISTORYID , "integer", .F. , .F., 0 , NIL, .F.) 
	cSoap += WSSoapValue("INITIALPOSITION", ::cINITIALPOSITION, ::cINITIALPOSITION , "string", .T. , .F., 0 , NIL, .F.) 
	cSoap += WSSoapValue("LASTUPDATE", ::dLASTUPDATE, ::dLASTUPDATE , "date", .F. , .F., 0 , NIL, .F.) 
	cSoap += WSSoapValue("POSITION", ::cPOSITION, ::cPOSITION , "string", .T. , .F., 0 , NIL, .F.) 
	cSoap += WSSoapValue("REGISTRATION", ::cREGISTRATION, ::cREGISTRATION , "string", .T. , .F., 0 , NIL, .F.) 
Return cSoap

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT RHEMPLOYEDCURRICULUM_HISTORYLIST
	::Init()
	If oResponse = NIL ; Return ; Endif 
	::dADMISSIONDATE     :=  WSAdvValue( oResponse,"_ADMISSIONDATE","date",NIL,"Property dADMISSIONDATE as s:date on SOAP Response not found.",NIL,"D",NIL,NIL) 
	::cCOMPANYNAME       :=  WSAdvValue( oResponse,"_COMPANYNAME","string",NIL,"Property cCOMPANYNAME as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::dDEMISSIONDATE     :=  WSAdvValue( oResponse,"_DEMISSIONDATE","date",NIL,NIL,NIL,"D",NIL,NIL) 
	::cDESCRIPTION       :=  WSAdvValue( oResponse,"_DESCRIPTION","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::nHISTORYID         :=  WSAdvValue( oResponse,"_HISTORYID","integer",NIL,NIL,NIL,"N",NIL,NIL) 
	::cINITIALPOSITION   :=  WSAdvValue( oResponse,"_INITIALPOSITION","string",NIL,"Property cINITIALPOSITION as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::dLASTUPDATE        :=  WSAdvValue( oResponse,"_LASTUPDATE","date",NIL,NIL,NIL,"D",NIL,NIL) 
	::cPOSITION          :=  WSAdvValue( oResponse,"_POSITION","string",NIL,"Property cPOSITION as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::cREGISTRATION      :=  WSAdvValue( oResponse,"_REGISTRATION","string",NIL,"Property cREGISTRATION as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
Return

// WSDL Data Structure EXPERIENCES

WSSTRUCT RHEMPLOYEDCURRICULUM_EXPERIENCES
	WSDATA   _HEADOUT                  AS Array of String
	WSDATA   nEXPCOD                   AS integer OPTIONAL
	WSDATA   cEXPDETAILS               AS string OPTIONAL
	WSDATA   cEXPDPT                   AS string OPTIONAL
	WSDATA   dEXPFDATE                 AS date OPTIONAL
	WSDATA   cEXPFUNCTION              AS string OPTIONAL
	WSDATA   dEXPIDATE                 AS date OPTIONAL
	WSDATA   cEXPMAT                   AS string
	WSDATA   dLASTUPDATE               AS date OPTIONAL
	
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPSEND
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT RHEMPLOYEDCURRICULUM_EXPERIENCES
	::Init()
Return Self

WSMETHOD INIT WSCLIENT RHEMPLOYEDCURRICULUM_EXPERIENCES
Return

WSMETHOD CLONE WSCLIENT RHEMPLOYEDCURRICULUM_EXPERIENCES
	Local oClone := RHEMPLOYEDCURRICULUM_EXPERIENCES():NEW()
	oClone:nEXPCOD              := ::nEXPCOD
	oClone:cEXPDETAILS          := ::cEXPDETAILS
	oClone:cEXPDPT              := ::cEXPDPT
	oClone:dEXPFDATE            := ::dEXPFDATE
	oClone:cEXPFUNCTION         := ::cEXPFUNCTION
	oClone:dEXPIDATE            := ::dEXPIDATE
	oClone:cEXPMAT              := ::cEXPMAT
	oClone:dLASTUPDATE          := ::dLASTUPDATE
Return oClone

WSMETHOD SOAPSEND WSCLIENT RHEMPLOYEDCURRICULUM_EXPERIENCES
	Local cSoap := ""
	cSoap += WSSoapValue("EXPCOD", ::nEXPCOD, ::nEXPCOD , "integer", .F. , .F., 0 , NIL, .F.) 
	cSoap += WSSoapValue("EXPDETAILS", ::cEXPDETAILS, ::cEXPDETAILS , "string", .F. , .F., 0 , NIL, .F.) 
	cSoap += WSSoapValue("EXPDPT", ::cEXPDPT, ::cEXPDPT , "string", .F. , .F., 0 , NIL, .F.) 
	cSoap += WSSoapValue("EXPFDATE", ::dEXPFDATE, ::dEXPFDATE , "date", .F. , .F., 0 , NIL, .F.) 
	cSoap += WSSoapValue("EXPFUNCTION", ::cEXPFUNCTION, ::cEXPFUNCTION , "string", .F. , .F., 0 , NIL, .F.) 
	cSoap += WSSoapValue("EXPIDATE", ::dEXPIDATE, ::dEXPIDATE , "date", .F. , .F., 0 , NIL, .F.) 
	cSoap += WSSoapValue("EXPMAT", ::cEXPMAT, ::cEXPMAT , "string", .T. , .F., 0 , NIL, .F.) 
	cSoap += WSSoapValue("LASTUPDATE", ::dLASTUPDATE, ::dLASTUPDATE , "date", .F. , .F., 0 , NIL, .F.) 
Return cSoap

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT RHEMPLOYEDCURRICULUM_EXPERIENCES
	::Init()
	If oResponse = NIL ; Return ; Endif 
	::nEXPCOD            :=  WSAdvValue( oResponse,"_EXPCOD","integer",NIL,NIL,NIL,"N",NIL,NIL) 
	::cEXPDETAILS        :=  WSAdvValue( oResponse,"_EXPDETAILS","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cEXPDPT            :=  WSAdvValue( oResponse,"_EXPDPT","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::dEXPFDATE          :=  WSAdvValue( oResponse,"_EXPFDATE","date",NIL,NIL,NIL,"D",NIL,NIL) 
	::cEXPFUNCTION       :=  WSAdvValue( oResponse,"_EXPFUNCTION","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::dEXPIDATE          :=  WSAdvValue( oResponse,"_EXPIDATE","date",NIL,NIL,NIL,"D",NIL,NIL) 
	::cEXPMAT            :=  WSAdvValue( oResponse,"_EXPMAT","string",NIL,"Property cEXPMAT as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::dLASTUPDATE        :=  WSAdvValue( oResponse,"_LASTUPDATE","date",NIL,NIL,NIL,"D",NIL,NIL) 
Return

// WSDL Data Structure ARRAYOFCOURSELIST

WSSTRUCT RHEMPLOYEDCURRICULUM_ARRAYOFCOURSELIST
	WSDATA   oWSCOURSELIST             AS RHEMPLOYEDCURRICULUM_COURSELIST OPTIONAL
	WSDATA   _HEADOUT                  AS Array of String

	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT RHEMPLOYEDCURRICULUM_ARRAYOFCOURSELIST
	::Init()
Return Self

WSMETHOD INIT WSCLIENT RHEMPLOYEDCURRICULUM_ARRAYOFCOURSELIST
	::oWSCOURSELIST        := {} // Array Of  RHEMPLOYEDCURRICULUM_COURSELIST():New()
Return

WSMETHOD CLONE WSCLIENT RHEMPLOYEDCURRICULUM_ARRAYOFCOURSELIST
	Local oClone := RHEMPLOYEDCURRICULUM_ARRAYOFCOURSELIST():NEW()
	oClone:oWSCOURSELIST := NIL
	If ::oWSCOURSELIST <> NIL 
		oClone:oWSCOURSELIST := {}
		aEval( ::oWSCOURSELIST , { |x| aadd( oClone:oWSCOURSELIST , x:Clone() ) } )
	Endif 
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT RHEMPLOYEDCURRICULUM_ARRAYOFCOURSELIST
	Local nRElem1, oNodes1, nTElem1
	::Init()
	If oResponse = NIL ; Return ; Endif 
	oNodes1 :=  WSAdvValue( oResponse,"_COURSELIST","COURSELIST",{},NIL,.T.,"O",NIL,NIL) 
	nTElem1 := len(oNodes1)
	For nRElem1 := 1 to nTElem1 
		If !WSIsNilNode( oNodes1[nRElem1] )
			aadd(::oWSCOURSELIST , RHEMPLOYEDCURRICULUM_COURSELIST():New() )
			::oWSCOURSELIST[len(::oWSCOURSELIST)]:SoapRecv(oNodes1[nRElem1])
		Endif
	Next
Return

// WSDL Data Structure ARRAYOFCOURSENAMES

WSSTRUCT RHEMPLOYEDCURRICULUM_ARRAYOFCOURSENAMES
	WSDATA   oWSCOURSENAMES            AS RHEMPLOYEDCURRICULUM_COURSENAMES OPTIONAL
	WSDATA   _HEADOUT                  AS Array of String
	
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT RHEMPLOYEDCURRICULUM_ARRAYOFCOURSENAMES
	::Init()
Return Self

WSMETHOD INIT WSCLIENT RHEMPLOYEDCURRICULUM_ARRAYOFCOURSENAMES
	::oWSCOURSENAMES       := {} // Array Of  RHEMPLOYEDCURRICULUM_COURSENAMES():New()
Return

WSMETHOD CLONE WSCLIENT RHEMPLOYEDCURRICULUM_ARRAYOFCOURSENAMES
	Local oClone := RHEMPLOYEDCURRICULUM_ARRAYOFCOURSENAMES():NEW()
	oClone:oWSCOURSENAMES := NIL
	If ::oWSCOURSENAMES <> NIL 
		oClone:oWSCOURSENAMES := {}
		aEval( ::oWSCOURSENAMES , { |x| aadd( oClone:oWSCOURSENAMES , x:Clone() ) } )
	Endif 
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT RHEMPLOYEDCURRICULUM_ARRAYOFCOURSENAMES
	Local nRElem1, oNodes1, nTElem1
	::Init()
	If oResponse = NIL ; Return ; Endif 
	oNodes1 :=  WSAdvValue( oResponse,"_COURSENAMES","COURSENAMES",{},NIL,.T.,"O",NIL,NIL) 
	nTElem1 := len(oNodes1)
	For nRElem1 := 1 to nTElem1 
		If !WSIsNilNode( oNodes1[nRElem1] )
			aadd(::oWSCOURSENAMES , RHEMPLOYEDCURRICULUM_COURSENAMES():New() )
			::oWSCOURSENAMES[len(::oWSCOURSENAMES)]:SoapRecv(oNodes1[nRElem1])
		Endif
	Next
Return

// WSDL Data Structure ARRAYOFCOURSESCALELIST

WSSTRUCT RHEMPLOYEDCURRICULUM_ARRAYOFCOURSESCALELIST
	WSDATA   oWSCOURSESCALELIST        AS RHEMPLOYEDCURRICULUM_COURSESCALELIST OPTIONAL
	WSDATA   _HEADOUT                  AS Array of String
	
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT RHEMPLOYEDCURRICULUM_ARRAYOFCOURSESCALELIST
	::Init()
Return Self

WSMETHOD INIT WSCLIENT RHEMPLOYEDCURRICULUM_ARRAYOFCOURSESCALELIST
	::oWSCOURSESCALELIST   := {} // Array Of  RHEMPLOYEDCURRICULUM_COURSESCALELIST():New()
Return

WSMETHOD CLONE WSCLIENT RHEMPLOYEDCURRICULUM_ARRAYOFCOURSESCALELIST
	Local oClone := RHEMPLOYEDCURRICULUM_ARRAYOFCOURSESCALELIST():NEW()
	oClone:oWSCOURSESCALELIST := NIL
	If ::oWSCOURSESCALELIST <> NIL 
		oClone:oWSCOURSESCALELIST := {}
		aEval( ::oWSCOURSESCALELIST , { |x| aadd( oClone:oWSCOURSESCALELIST , x:Clone() ) } )
	Endif 
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT RHEMPLOYEDCURRICULUM_ARRAYOFCOURSESCALELIST
	Local nRElem1, oNodes1, nTElem1
	::Init()
	If oResponse = NIL ; Return ; Endif 
	oNodes1 :=  WSAdvValue( oResponse,"_COURSESCALELIST","COURSESCALELIST",{},NIL,.T.,"O",NIL,NIL) 
	nTElem1 := len(oNodes1)
	For nRElem1 := 1 to nTElem1 
		If !WSIsNilNode( oNodes1[nRElem1] )
			aadd(::oWSCOURSESCALELIST , RHEMPLOYEDCURRICULUM_COURSESCALELIST():New() )
			::oWSCOURSESCALELIST[len(::oWSCOURSESCALELIST)]:SoapRecv(oNodes1[nRElem1])
		Endif
	Next
Return

// WSDL Data Structure ARRAYOFCOURSETYPESLIST

WSSTRUCT RHEMPLOYEDCURRICULUM_ARRAYOFCOURSETYPESLIST
	WSDATA   oWSCOURSETYPESLIST        AS RHEMPLOYEDCURRICULUM_COURSETYPESLIST OPTIONAL
	WSDATA   _HEADOUT                  AS Array of String
	
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT RHEMPLOYEDCURRICULUM_ARRAYOFCOURSETYPESLIST
	::Init()
Return Self

WSMETHOD INIT WSCLIENT RHEMPLOYEDCURRICULUM_ARRAYOFCOURSETYPESLIST
	::oWSCOURSETYPESLIST   := {} // Array Of  RHEMPLOYEDCURRICULUM_COURSETYPESLIST():New()
Return

WSMETHOD CLONE WSCLIENT RHEMPLOYEDCURRICULUM_ARRAYOFCOURSETYPESLIST
	Local oClone := RHEMPLOYEDCURRICULUM_ARRAYOFCOURSETYPESLIST():NEW()
	oClone:oWSCOURSETYPESLIST := NIL
	If ::oWSCOURSETYPESLIST <> NIL 
		oClone:oWSCOURSETYPESLIST := {}
		aEval( ::oWSCOURSETYPESLIST , { |x| aadd( oClone:oWSCOURSETYPESLIST , x:Clone() ) } )
	Endif 
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT RHEMPLOYEDCURRICULUM_ARRAYOFCOURSETYPESLIST
	Local nRElem1, oNodes1, nTElem1
	::Init()
	If oResponse = NIL ; Return ; Endif 
	oNodes1 :=  WSAdvValue( oResponse,"_COURSETYPESLIST","COURSETYPESLIST",{},NIL,.T.,"O",NIL,NIL) 
	nTElem1 := len(oNodes1)
	For nRElem1 := 1 to nTElem1 
		If !WSIsNilNode( oNodes1[nRElem1] )
			aadd(::oWSCOURSETYPESLIST , RHEMPLOYEDCURRICULUM_COURSETYPESLIST():New() )
			::oWSCOURSETYPESLIST[len(::oWSCOURSETYPESLIST)]:SoapRecv(oNodes1[nRElem1])
		Endif
	Next
Return

// WSDL Data Structure ARRAYOFCOMBOCLASSLIST

WSSTRUCT RHEMPLOYEDCURRICULUM_ARRAYOFCOMBOCLASSLIST
	WSDATA   oWSCOMBOCLASSLIST         AS RHEMPLOYEDCURRICULUM_COMBOCLASSLIST OPTIONAL
	WSDATA   _HEADOUT                  AS Array of String
	
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT RHEMPLOYEDCURRICULUM_ARRAYOFCOMBOCLASSLIST
	::Init()
Return Self

WSMETHOD INIT WSCLIENT RHEMPLOYEDCURRICULUM_ARRAYOFCOMBOCLASSLIST
	::oWSCOMBOCLASSLIST    := {} // Array Of  RHEMPLOYEDCURRICULUM_COMBOCLASSLIST():New()
Return

WSMETHOD CLONE WSCLIENT RHEMPLOYEDCURRICULUM_ARRAYOFCOMBOCLASSLIST
	Local oClone := RHEMPLOYEDCURRICULUM_ARRAYOFCOMBOCLASSLIST():NEW()
	oClone:oWSCOMBOCLASSLIST := NIL
	If ::oWSCOMBOCLASSLIST <> NIL 
		oClone:oWSCOMBOCLASSLIST := {}
		aEval( ::oWSCOMBOCLASSLIST , { |x| aadd( oClone:oWSCOMBOCLASSLIST , x:Clone() ) } )
	Endif 
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT RHEMPLOYEDCURRICULUM_ARRAYOFCOMBOCLASSLIST
	Local nRElem1, oNodes1, nTElem1
	::Init()
	If oResponse = NIL ; Return ; Endif 
	oNodes1 :=  WSAdvValue( oResponse,"_COMBOCLASSLIST","COMBOCLASSLIST",{},NIL,.T.,"O",NIL,NIL) 
	nTElem1 := len(oNodes1)
	For nRElem1 := 1 to nTElem1 
		If !WSIsNilNode( oNodes1[nRElem1] )
			aadd(::oWSCOMBOCLASSLIST , RHEMPLOYEDCURRICULUM_COMBOCLASSLIST():New() )
			::oWSCOMBOCLASSLIST[len(::oWSCOMBOCLASSLIST)]:SoapRecv(oNodes1[nRElem1])
		Endif
	Next
Return

// WSDL Data Structure ARRAYOFUSERCLASSLIST

WSSTRUCT RHEMPLOYEDCURRICULUM_ARRAYOFUSERCLASSLIST
	WSDATA   oWSUSERCLASSLIST          AS RHEMPLOYEDCURRICULUM_USERCLASSLIST OPTIONAL
	WSDATA   _HEADOUT                  AS Array of String
	
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT RHEMPLOYEDCURRICULUM_ARRAYOFUSERCLASSLIST
	::Init()
Return Self

WSMETHOD INIT WSCLIENT RHEMPLOYEDCURRICULUM_ARRAYOFUSERCLASSLIST
	::oWSUSERCLASSLIST     := {} // Array Of  RHEMPLOYEDCURRICULUM_USERCLASSLIST():New()
Return

WSMETHOD CLONE WSCLIENT RHEMPLOYEDCURRICULUM_ARRAYOFUSERCLASSLIST
	Local oClone := RHEMPLOYEDCURRICULUM_ARRAYOFUSERCLASSLIST():NEW()
	oClone:oWSUSERCLASSLIST := NIL
	If ::oWSUSERCLASSLIST <> NIL 
		oClone:oWSUSERCLASSLIST := {}
		aEval( ::oWSUSERCLASSLIST , { |x| aadd( oClone:oWSUSERCLASSLIST , x:Clone() ) } )
	Endif 
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT RHEMPLOYEDCURRICULUM_ARRAYOFUSERCLASSLIST
	Local nRElem1, oNodes1, nTElem1
	::Init()
	If oResponse = NIL ; Return ; Endif 
	oNodes1 :=  WSAdvValue( oResponse,"_USERCLASSLIST","USERCLASSLIST",{},NIL,.T.,"O",NIL,NIL) 
	nTElem1 := len(oNodes1)
	For nRElem1 := 1 to nTElem1 
		If !WSIsNilNode( oNodes1[nRElem1] )
			aadd(::oWSUSERCLASSLIST , RHEMPLOYEDCURRICULUM_USERCLASSLIST():New() )
			::oWSUSERCLASSLIST[len(::oWSUSERCLASSLIST)]:SoapRecv(oNodes1[nRElem1])
		Endif
	Next
Return

// WSDL Data Structure ITENSMENU

WSSTRUCT RHEMPLOYEDCURRICULUM_ITENSMENU
	WSDATA   lDATA                     AS boolean OPTIONAL
	WSDATA   cITEMCOD                  AS string OPTIONAL
	WSDATA   cITEMDESC                 AS string OPTIONAL
	WSDATA   cITEMLEVEL                AS string OPTIONAL
	WSDATA   cITEMSTATUS               AS string OPTIONAL
	WSDATA   cITEMTYPE                 AS string OPTIONAL
	WSDATA   cUSERNAME                 AS string OPTIONAL
	WSDATA   _HEADOUT                  AS Array of String
	
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT RHEMPLOYEDCURRICULUM_ITENSMENU
	::Init()
Return Self

WSMETHOD INIT WSCLIENT RHEMPLOYEDCURRICULUM_ITENSMENU
Return

WSMETHOD CLONE WSCLIENT RHEMPLOYEDCURRICULUM_ITENSMENU
	Local oClone := RHEMPLOYEDCURRICULUM_ITENSMENU():NEW()
	oClone:lDATA                := ::lDATA
	oClone:cITEMCOD             := ::cITEMCOD
	oClone:cITEMDESC            := ::cITEMDESC
	oClone:cITEMLEVEL           := ::cITEMLEVEL
	oClone:cITEMSTATUS          := ::cITEMSTATUS
	oClone:cITEMTYPE            := ::cITEMTYPE
	oClone:cUSERNAME            := ::cUSERNAME
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT RHEMPLOYEDCURRICULUM_ITENSMENU
	::Init()
	If oResponse = NIL ; Return ; Endif 
	::lDATA              :=  WSAdvValue( oResponse,"_DATA","boolean",NIL,NIL,NIL,"L",NIL,NIL) 
	::cITEMCOD           :=  WSAdvValue( oResponse,"_ITEMCOD","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cITEMDESC          :=  WSAdvValue( oResponse,"_ITEMDESC","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cITEMLEVEL         :=  WSAdvValue( oResponse,"_ITEMLEVEL","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cITEMSTATUS        :=  WSAdvValue( oResponse,"_ITEMSTATUS","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cITEMTYPE          :=  WSAdvValue( oResponse,"_ITEMTYPE","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cUSERNAME          :=  WSAdvValue( oResponse,"_USERNAME","string",NIL,NIL,NIL,"S",NIL,NIL) 
Return

// WSDL Data Structure MENTORS

WSSTRUCT RHEMPLOYEDCURRICULUM_MENTORS
	WSDATA   cMENTORID                 AS string OPTIONAL
	WSDATA   cMENTORNAME               AS string OPTIONAL
	WSDATA   _HEADOUT                  AS Array of String
	
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT RHEMPLOYEDCURRICULUM_MENTORS
	::Init()
Return Self

WSMETHOD INIT WSCLIENT RHEMPLOYEDCURRICULUM_MENTORS
Return

WSMETHOD CLONE WSCLIENT RHEMPLOYEDCURRICULUM_MENTORS
	Local oClone := RHEMPLOYEDCURRICULUM_MENTORS():NEW()
	oClone:cMENTORID            := ::cMENTORID
	oClone:cMENTORNAME          := ::cMENTORNAME
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT RHEMPLOYEDCURRICULUM_MENTORS
	::Init()
	If oResponse = NIL ; Return ; Endif 
	::cMENTORID          :=  WSAdvValue( oResponse,"_MENTORID","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cMENTORNAME        :=  WSAdvValue( oResponse,"_MENTORNAME","string",NIL,NIL,NIL,"S",NIL,NIL) 
Return

// WSDL Data Structure COURSELIST

WSSTRUCT RHEMPLOYEDCURRICULUM_COURSELIST
	WSDATA   _HEADOUT                  AS Array of String
	WSDATA   dCOURSECDATE              AS date OPTIONAL
	WSDATA   cCOURSECOD                AS string
	WSDATA   cCOURSEDESC               AS string OPTIONAL
	WSDATA   cCOURSEENT                AS string OPTIONAL
	WSDATA   cCOURSEENTDESC            AS string OPTIONAL
	WSDATA   dCOURSEIDATE              AS date OPTIONAL
	WSDATA   lCOURSEINCLUDE            AS boolean OPTIONAL
	WSDATA   cCOURSEMAT                AS string OPTIONAL
	WSDATA   cCOURSENAME               AS string OPTIONAL
	WSDATA   cCOURSESTATUS             AS string OPTIONAL
	WSDATA   cCOURSESTATUSLV           AS string OPTIONAL
	WSDATA   nCOURSETIME               AS float OPTIONAL
	WSDATA   cCOURSETYPE               AS string OPTIONAL
	WSDATA   cCOURSETYPELV             AS string OPTIONAL
	WSDATA   cOTHERCERT                AS string OPTIONAL
	WSDATA   cOTHERENT                 AS string OPTIONAL
	WSDATA   nREGRECNO                 AS integer OPTIONAL
	
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPSEND
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT RHEMPLOYEDCURRICULUM_COURSELIST
	::Init()
Return Self

WSMETHOD INIT WSCLIENT RHEMPLOYEDCURRICULUM_COURSELIST
Return

WSMETHOD CLONE WSCLIENT RHEMPLOYEDCURRICULUM_COURSELIST
	Local oClone := RHEMPLOYEDCURRICULUM_COURSELIST():NEW()
	oClone:dCOURSECDATE         := ::dCOURSECDATE
	oClone:cCOURSECOD           := ::cCOURSECOD
	oClone:cCOURSEDESC          := ::cCOURSEDESC
	oClone:cCOURSEENT           := ::cCOURSEENT
	oClone:cCOURSEENTDESC       := ::cCOURSEENTDESC
	oClone:dCOURSEIDATE         := ::dCOURSEIDATE
	oClone:lCOURSEINCLUDE       := ::lCOURSEINCLUDE
	oClone:cCOURSEMAT           := ::cCOURSEMAT
	oClone:cCOURSENAME          := ::cCOURSENAME
	oClone:cCOURSESTATUS        := ::cCOURSESTATUS
	oClone:cCOURSESTATUSLV      := ::cCOURSESTATUSLV
	oClone:nCOURSETIME          := ::nCOURSETIME
	oClone:cCOURSETYPE          := ::cCOURSETYPE
	oClone:cCOURSETYPELV        := ::cCOURSETYPELV
	oClone:cOTHERCERT           := ::cOTHERCERT
	oClone:cOTHERENT            := ::cOTHERENT
	oClone:nREGRECNO            := ::nREGRECNO
Return oClone

WSMETHOD SOAPSEND WSCLIENT RHEMPLOYEDCURRICULUM_COURSELIST
	Local cSoap := ""
	cSoap += WSSoapValue("COURSECDATE", ::dCOURSECDATE, ::dCOURSECDATE , "date", .F. , .F., 0 , NIL, .F.) 
	cSoap += WSSoapValue("COURSECOD", ::cCOURSECOD, ::cCOURSECOD , "string", .T. , .F., 0 , NIL, .F.) 
	cSoap += WSSoapValue("COURSEDESC", ::cCOURSEDESC, ::cCOURSEDESC , "string", .F. , .F., 0 , NIL, .F.) 
	cSoap += WSSoapValue("COURSEENT", ::cCOURSEENT, ::cCOURSEENT , "string", .F. , .F., 0 , NIL, .F.) 
	cSoap += WSSoapValue("COURSEENTDESC", ::cCOURSEENTDESC, ::cCOURSEENTDESC , "string", .F. , .F., 0 , NIL, .F.) 
	cSoap += WSSoapValue("COURSEIDATE", ::dCOURSEIDATE, ::dCOURSEIDATE , "date", .F. , .F., 0 , NIL, .F.) 
	cSoap += WSSoapValue("COURSEINCLUDE", ::lCOURSEINCLUDE, ::lCOURSEINCLUDE , "boolean", .F. , .F., 0 , NIL, .F.) 
	cSoap += WSSoapValue("COURSEMAT", ::cCOURSEMAT, ::cCOURSEMAT , "string", .F. , .F., 0 , NIL, .F.) 
	cSoap += WSSoapValue("COURSENAME", ::cCOURSENAME, ::cCOURSENAME , "string", .F. , .F., 0 , NIL, .F.) 
	cSoap += WSSoapValue("COURSESTATUS", ::cCOURSESTATUS, ::cCOURSESTATUS , "string", .F. , .F., 0 , NIL, .F.) 
	cSoap += WSSoapValue("COURSESTATUSLV", ::cCOURSESTATUSLV, ::cCOURSESTATUSLV , "string", .F. , .F., 0 , NIL, .F.) 
	cSoap += WSSoapValue("COURSETIME", ::nCOURSETIME, ::nCOURSETIME , "float", .F. , .F., 0 , NIL, .F.) 
	cSoap += WSSoapValue("COURSETYPE", ::cCOURSETYPE, ::cCOURSETYPE , "string", .F. , .F., 0 , NIL, .F.) 
	cSoap += WSSoapValue("COURSETYPELV", ::cCOURSETYPELV, ::cCOURSETYPELV , "string", .F. , .F., 0 , NIL, .F.) 
	cSoap += WSSoapValue("OTHERCERT", ::cOTHERCERT, ::cOTHERCERT , "string", .F. , .F., 0 , NIL, .F.) 
	cSoap += WSSoapValue("OTHERENT", ::cOTHERENT, ::cOTHERENT , "string", .F. , .F., 0 , NIL, .F.) 
	cSoap += WSSoapValue("REGRECNO", ::nREGRECNO, ::nREGRECNO , "integer", .F. , .F., 0 , NIL, .F.) 
Return cSoap

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT RHEMPLOYEDCURRICULUM_COURSELIST
	::Init()
	If oResponse = NIL ; Return ; Endif 
	::dCOURSECDATE       :=  WSAdvValue( oResponse,"_COURSECDATE","date",NIL,NIL,NIL,"D",NIL,NIL) 
	::cCOURSECOD         :=  WSAdvValue( oResponse,"_COURSECOD","string",NIL,"Property cCOURSECOD as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::cCOURSEDESC        :=  WSAdvValue( oResponse,"_COURSEDESC","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cCOURSEENT         :=  WSAdvValue( oResponse,"_COURSEENT","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cCOURSEENTDESC     :=  WSAdvValue( oResponse,"_COURSEENTDESC","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::dCOURSEIDATE       :=  WSAdvValue( oResponse,"_COURSEIDATE","date",NIL,NIL,NIL,"D",NIL,NIL) 
	::lCOURSEINCLUDE     :=  WSAdvValue( oResponse,"_COURSEINCLUDE","boolean",NIL,NIL,NIL,"L",NIL,NIL) 
	::cCOURSEMAT         :=  WSAdvValue( oResponse,"_COURSEMAT","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cCOURSENAME        :=  WSAdvValue( oResponse,"_COURSENAME","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cCOURSESTATUS      :=  WSAdvValue( oResponse,"_COURSESTATUS","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cCOURSESTATUSLV    :=  WSAdvValue( oResponse,"_COURSESTATUSLV","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::nCOURSETIME        :=  WSAdvValue( oResponse,"_COURSETIME","float",NIL,NIL,NIL,"N",NIL,NIL) 
	::cCOURSETYPE        :=  WSAdvValue( oResponse,"_COURSETYPE","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cCOURSETYPELV      :=  WSAdvValue( oResponse,"_COURSETYPELV","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cOTHERCERT         :=  WSAdvValue( oResponse,"_OTHERCERT","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cOTHERENT          :=  WSAdvValue( oResponse,"_OTHERENT","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::nREGRECNO          :=  WSAdvValue( oResponse,"_REGRECNO","integer",NIL,NIL,NIL,"N",NIL,NIL) 
Return

// WSDL Data Structure COURSENAMES

WSSTRUCT RHEMPLOYEDCURRICULUM_COURSENAMES
	WSDATA   cCOURSECOD                AS string
	WSDATA   cCOURSENAME               AS string OPTIONAL
	WSDATA   _HEADOUT                  AS Array of String
	
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT RHEMPLOYEDCURRICULUM_COURSENAMES
	::Init()
Return Self

WSMETHOD INIT WSCLIENT RHEMPLOYEDCURRICULUM_COURSENAMES
Return

WSMETHOD CLONE WSCLIENT RHEMPLOYEDCURRICULUM_COURSENAMES
	Local oClone := RHEMPLOYEDCURRICULUM_COURSENAMES():NEW()
	oClone:cCOURSECOD           := ::cCOURSECOD
	oClone:cCOURSENAME          := ::cCOURSENAME
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT RHEMPLOYEDCURRICULUM_COURSENAMES
	::Init()
	If oResponse = NIL ; Return ; Endif 
	::cCOURSECOD         :=  WSAdvValue( oResponse,"_COURSECOD","string",NIL,"Property cCOURSECOD as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::cCOURSENAME        :=  WSAdvValue( oResponse,"_COURSENAME","string",NIL,NIL,NIL,"S",NIL,NIL) 
Return

// WSDL Data Structure COURSESCALELIST

WSSTRUCT RHEMPLOYEDCURRICULUM_COURSESCALELIST
	WSDATA   cSCALECOD                 AS string
	WSDATA   cSCALEDESCRIPTION         AS string OPTIONAL
	WSDATA   cSCALEITEM                AS string OPTIONAL
	WSDATA   _HEADOUT                  AS Array of String
	
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT RHEMPLOYEDCURRICULUM_COURSESCALELIST
	::Init()
Return Self

WSMETHOD INIT WSCLIENT RHEMPLOYEDCURRICULUM_COURSESCALELIST
Return

WSMETHOD CLONE WSCLIENT RHEMPLOYEDCURRICULUM_COURSESCALELIST
	Local oClone := RHEMPLOYEDCURRICULUM_COURSESCALELIST():NEW()
	oClone:cSCALECOD            := ::cSCALECOD
	oClone:cSCALEDESCRIPTION    := ::cSCALEDESCRIPTION
	oClone:cSCALEITEM           := ::cSCALEITEM
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT RHEMPLOYEDCURRICULUM_COURSESCALELIST
	::Init()
	If oResponse = NIL ; Return ; Endif 
	::cSCALECOD          :=  WSAdvValue( oResponse,"_SCALECOD","string",NIL,"Property cSCALECOD as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::cSCALEDESCRIPTION  :=  WSAdvValue( oResponse,"_SCALEDESCRIPTION","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cSCALEITEM         :=  WSAdvValue( oResponse,"_SCALEITEM","string",NIL,NIL,NIL,"S",NIL,NIL) 
Return

// WSDL Data Structure COURSETYPESLIST

WSSTRUCT RHEMPLOYEDCURRICULUM_COURSETYPESLIST
	WSDATA   cSCALECOD                 AS string
	WSDATA   cSCALEDESCRIPTION         AS string OPTIONAL
	WSDATA   cSCALEITEM                AS string OPTIONAL
	WSDATA   _HEADOUT                  AS Array of String
	
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT RHEMPLOYEDCURRICULUM_COURSETYPESLIST
	::Init()
Return Self

WSMETHOD INIT WSCLIENT RHEMPLOYEDCURRICULUM_COURSETYPESLIST
Return

WSMETHOD CLONE WSCLIENT RHEMPLOYEDCURRICULUM_COURSETYPESLIST
	Local oClone := RHEMPLOYEDCURRICULUM_COURSETYPESLIST():NEW()
	oClone:cSCALECOD            := ::cSCALECOD
	oClone:cSCALEDESCRIPTION    := ::cSCALEDESCRIPTION
	oClone:cSCALEITEM           := ::cSCALEITEM
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT RHEMPLOYEDCURRICULUM_COURSETYPESLIST
	::Init()
	If oResponse = NIL ; Return ; Endif 
	::cSCALECOD          :=  WSAdvValue( oResponse,"_SCALECOD","string",NIL,"Property cSCALECOD as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::cSCALEDESCRIPTION  :=  WSAdvValue( oResponse,"_SCALEDESCRIPTION","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cSCALEITEM         :=  WSAdvValue( oResponse,"_SCALEITEM","string",NIL,NIL,NIL,"S",NIL,NIL) 
Return

// WSDL Data Structure COMBOCLASSLIST

WSSTRUCT RHEMPLOYEDCURRICULUM_COMBOCLASSLIST
	WSDATA   cLABELDESCRIPTION         AS string OPTIONAL
	WSDATA   cLABELID                  AS string
	WSDATA   cREGDESCRIPTION           AS string OPTIONAL
	WSDATA   cREGLABEL                 AS string OPTIONAL
	WSDATA   _HEADOUT                  AS Array of String
	
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT RHEMPLOYEDCURRICULUM_COMBOCLASSLIST
	::Init()
Return Self

WSMETHOD INIT WSCLIENT RHEMPLOYEDCURRICULUM_COMBOCLASSLIST
Return

WSMETHOD CLONE WSCLIENT RHEMPLOYEDCURRICULUM_COMBOCLASSLIST
	Local oClone := RHEMPLOYEDCURRICULUM_COMBOCLASSLIST():NEW()
	oClone:cLABELDESCRIPTION    := ::cLABELDESCRIPTION
	oClone:cLABELID             := ::cLABELID
	oClone:cREGDESCRIPTION      := ::cREGDESCRIPTION
	oClone:cREGLABEL            := ::cREGLABEL
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT RHEMPLOYEDCURRICULUM_COMBOCLASSLIST
	::Init()
	If oResponse = NIL ; Return ; Endif 
	::cLABELDESCRIPTION  :=  WSAdvValue( oResponse,"_LABELDESCRIPTION","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cLABELID           :=  WSAdvValue( oResponse,"_LABELID","string",NIL,"Property cLABELID as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::cREGDESCRIPTION    :=  WSAdvValue( oResponse,"_REGDESCRIPTION","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cREGLABEL          :=  WSAdvValue( oResponse,"_REGLABEL","string",NIL,NIL,NIL,"S",NIL,NIL) 
Return

// WSDL Data Structure USERCLASSLIST

WSSTRUCT RHEMPLOYEDCURRICULUM_USERCLASSLIST
	WSDATA   cESPECCODE                AS string OPTIONAL
	WSDATA   cESPECDESCR               AS string OPTIONAL
	WSDATA   cOTHERDESCRIPTION         AS string OPTIONAL
	WSDATA   cREGDESCRIPTION           AS string OPTIONAL
	WSDATA   cREGLABEL                 AS string OPTIONAL
	WSDATA   cREGNUMBER                AS string OPTIONAL
	WSDATA   nREGRECNO                 AS integer OPTIONAL
	WSDATA   _HEADOUT                  AS Array of String
	
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPSEND
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT RHEMPLOYEDCURRICULUM_USERCLASSLIST
	::Init()
Return Self

WSMETHOD INIT WSCLIENT RHEMPLOYEDCURRICULUM_USERCLASSLIST
Return

WSMETHOD CLONE WSCLIENT RHEMPLOYEDCURRICULUM_USERCLASSLIST
	Local oClone := RHEMPLOYEDCURRICULUM_USERCLASSLIST():NEW()
	oClone:cESPECCODE           := ::cESPECCODE
	oClone:cESPECDESCR          := ::cESPECDESCR
	oClone:cOTHERDESCRIPTION    := ::cOTHERDESCRIPTION
	oClone:cREGDESCRIPTION      := ::cREGDESCRIPTION
	oClone:cREGLABEL            := ::cREGLABEL
	oClone:cREGNUMBER           := ::cREGNUMBER
	oClone:nREGRECNO            := ::nREGRECNO
Return oClone

WSMETHOD SOAPSEND WSCLIENT RHEMPLOYEDCURRICULUM_USERCLASSLIST
	Local cSoap := ""
	cSoap += WSSoapValue("ESPECCODE", ::cESPECCODE, ::cESPECCODE , "string", .F. , .F., 0 , NIL, .F.) 
	cSoap += WSSoapValue("ESPECDESCR", ::cESPECDESCR, ::cESPECDESCR , "string", .F. , .F., 0 , NIL, .F.) 
	cSoap += WSSoapValue("OTHERDESCRIPTION", ::cOTHERDESCRIPTION, ::cOTHERDESCRIPTION , "string", .F. , .F., 0 , NIL, .F.) 
	cSoap += WSSoapValue("REGDESCRIPTION", ::cREGDESCRIPTION, ::cREGDESCRIPTION , "string", .F. , .F., 0 , NIL, .F.) 
	cSoap += WSSoapValue("REGLABEL", ::cREGLABEL, ::cREGLABEL , "string", .F. , .F., 0 , NIL, .F.) 
	cSoap += WSSoapValue("REGNUMBER", ::cREGNUMBER, ::cREGNUMBER , "string", .F. , .F., 0 , NIL, .F.) 
	cSoap += WSSoapValue("REGRECNO", ::nREGRECNO, ::nREGRECNO , "integer", .F. , .F., 0 , NIL, .F.) 
Return cSoap

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT RHEMPLOYEDCURRICULUM_USERCLASSLIST
	::Init()
	If oResponse = NIL ; Return ; Endif 
	::cESPECCODE         :=  WSAdvValue( oResponse,"_ESPECCODE","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cESPECDESCR        :=  WSAdvValue( oResponse,"_ESPECDESCR","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cOTHERDESCRIPTION  :=  WSAdvValue( oResponse,"_OTHERDESCRIPTION","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cREGDESCRIPTION    :=  WSAdvValue( oResponse,"_REGDESCRIPTION","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cREGLABEL          :=  WSAdvValue( oResponse,"_REGLABEL","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cREGNUMBER         :=  WSAdvValue( oResponse,"_REGNUMBER","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::nREGRECNO          :=  WSAdvValue( oResponse,"_REGRECNO","integer",NIL,NIL,NIL,"N",NIL,NIL) 
Return