#INCLUDE "PROTHEUS.CH"
#INCLUDE "APWEBSRV.CH"

/* ===============================================================================
WSDL Location    http://localhost:81/ws/RHCOMPETENCE.apw?WSDL
Gerado em        01/16/17 09:12:54
Observações      Código-Fonte gerado por ADVPL WSDL Client 1.120703
                 Alterações neste arquivo podem causar funcionamento incorreto
                 e serão perdidas caso o código-fonte seja gerado novamente.
=============================================================================== */

User Function _MYRYBSG ; Return  // "dummy" function - Internal Use 

/* -------------------------------------------------------------------------------
WSDL Service WSRHCOMPETENCE
------------------------------------------------------------------------------- */

WSCLIENT WSRHCOMPETENCE

	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD RESET
	WSMETHOD CLONE
	WSMETHOD GETCOMPETENCE
	WSMETHOD GETHABILITIES
	WSMETHOD GETRHPOSITION
	WSMETHOD GETX5TABLE

	WSDATA   _URL                      AS String
	WSDATA   _HEADOUT                  AS Array of String
	WSDATA   _COOKIES                  AS Array of String
	WSDATA   cBRANCH                   AS string
	WSDATA   cREGISTRATION             AS string
	WSDATA   cPOSITIONID               AS string
	WSDATA   oWSGETCOMPETENCERESULT    AS RHCOMPETENCE_TCOMPETENCEBROWSE
	WSDATA   oWSGETHABILITIESRESULT    AS RHCOMPETENCE_TCOMPETENCES
	WSDATA   nPAGE                     AS integer
	WSDATA   cSEARCH                   AS string
	WSDATA   oWSGETRHPOSITIONRESULT    AS RHCOMPETENCE_ARRAYOFPOSITIONVIEW
	WSDATA   cX5ID                     AS string
	WSDATA   oWSGETX5TABLERESULT       AS RHCOMPETENCE_ARRAYOFX5TABLEVIEW

ENDWSCLIENT

WSMETHOD NEW WSCLIENT WSRHCOMPETENCE
::Init()
If !FindFunction("XMLCHILDEX")
	UserException("O Código-Fonte Client atual requer os executáveis do Protheus Build [7.00.131227A-20170111 NG] ou superior. Atualize o Protheus ou gere o Código-Fonte novamente utilizando o Build atual.")
EndIf
Return Self

WSMETHOD INIT WSCLIENT WSRHCOMPETENCE
	::oWSGETCOMPETENCERESULT := RHCOMPETENCE_TCOMPETENCEBROWSE():New()
	::oWSGETHABILITIESRESULT := RHCOMPETENCE_TCOMPETENCES():New()
	::oWSGETRHPOSITIONRESULT := RHCOMPETENCE_ARRAYOFPOSITIONVIEW():New()
	::oWSGETX5TABLERESULT := RHCOMPETENCE_ARRAYOFX5TABLEVIEW():New()
Return

WSMETHOD RESET WSCLIENT WSRHCOMPETENCE
	::cBRANCH            := NIL 
	::cREGISTRATION      := NIL 
	::cPOSITIONID        := NIL 
	::oWSGETCOMPETENCERESULT := NIL 
	::oWSGETHABILITIESRESULT := NIL 
	::nPAGE              := NIL 
	::cSEARCH            := NIL 
	::oWSGETRHPOSITIONRESULT := NIL 
	::cX5ID              := NIL 
	::oWSGETX5TABLERESULT := NIL 
	::Init()
Return

WSMETHOD CLONE WSCLIENT WSRHCOMPETENCE
Local oClone := WSRHCOMPETENCE():New()
	oClone:_URL          := ::_URL 
	oClone:cBRANCH       := ::cBRANCH
	oClone:cREGISTRATION := ::cREGISTRATION
	oClone:cPOSITIONID   := ::cPOSITIONID
	oClone:oWSGETCOMPETENCERESULT :=  IIF(::oWSGETCOMPETENCERESULT = NIL , NIL ,::oWSGETCOMPETENCERESULT:Clone() )
	oClone:oWSGETHABILITIESRESULT :=  IIF(::oWSGETHABILITIESRESULT = NIL , NIL ,::oWSGETHABILITIESRESULT:Clone() )
	oClone:nPAGE         := ::nPAGE
	oClone:cSEARCH       := ::cSEARCH
	oClone:oWSGETRHPOSITIONRESULT :=  IIF(::oWSGETRHPOSITIONRESULT = NIL , NIL ,::oWSGETRHPOSITIONRESULT:Clone() )
	oClone:cX5ID         := ::cX5ID
	oClone:oWSGETX5TABLERESULT :=  IIF(::oWSGETX5TABLERESULT = NIL , NIL ,::oWSGETX5TABLERESULT:Clone() )
Return oClone

// WSDL Method GETCOMPETENCE of Service WSRHCOMPETENCE

WSMETHOD GETCOMPETENCE WSSEND cBRANCH,cREGISTRATION,cPOSITIONID WSRECEIVE oWSGETCOMPETENCERESULT WSCLIENT WSRHCOMPETENCE
Local cSoap := "" , oXmlRet

BEGIN WSMETHOD

cSoap += '<GETCOMPETENCE xmlns="http://localhost:81/">'
cSoap += WSSoapValue("BRANCH", ::cBRANCH, cBRANCH , "string", .T. , .F., 0 , NIL, .F.,.F.) 
cSoap += WSSoapValue("REGISTRATION", ::cREGISTRATION, cREGISTRATION , "string", .T. , .F., 0 , NIL, .F.,.F.) 
cSoap += WSSoapValue("POSITIONID", ::cPOSITIONID, cPOSITIONID , "string", .T. , .F., 0 , NIL, .F.,.F.) 
cSoap += "</GETCOMPETENCE>"

oXmlRet := SvcSoapCall(	Self,cSoap,; 
	"http://localhost:81/GETCOMPETENCE",; 
	"DOCUMENT","http://localhost:81/",,"1.031217",; 
	"http://localhost:81/ws/RHCOMPETENCE.apw")

::Init()
::oWSGETCOMPETENCERESULT:SoapRecv( WSAdvValue( oXmlRet,"_GETCOMPETENCERESPONSE:_GETCOMPETENCERESULT","TCOMPETENCEBROWSE",NIL,NIL,NIL,NIL,NIL,NIL) )

END WSMETHOD

oXmlRet := NIL
Return .T.

// WSDL Method GETHABILITIES of Service WSRHCOMPETENCE

WSMETHOD GETHABILITIES WSSEND cBRANCH,cPOSITIONID WSRECEIVE oWSGETHABILITIESRESULT WSCLIENT WSRHCOMPETENCE
Local cSoap := "" , oXmlRet

BEGIN WSMETHOD

cSoap += '<GETHABILITIES xmlns="http://localhost:81/">'
cSoap += WSSoapValue("BRANCH", ::cBRANCH, cBRANCH , "string", .T. , .F., 0 , NIL, .F.,.F.) 
cSoap += WSSoapValue("POSITIONID", ::cPOSITIONID, cPOSITIONID , "string", .T. , .F., 0 , NIL, .F.,.F.) 
cSoap += "</GETHABILITIES>"

oXmlRet := SvcSoapCall(	Self,cSoap,; 
	"http://localhost:81/GETHABILITIES",; 
	"DOCUMENT","http://localhost:81/",,"1.031217",; 
	"http://localhost:81/ws/RHCOMPETENCE.apw")

::Init()
::oWSGETHABILITIESRESULT:SoapRecv( WSAdvValue( oXmlRet,"_GETHABILITIESRESPONSE:_GETHABILITIESRESULT","TCOMPETENCES",NIL,NIL,NIL,NIL,NIL,NIL) )

END WSMETHOD

oXmlRet := NIL
Return .T.

// WSDL Method GETRHPOSITION of Service WSRHCOMPETENCE

WSMETHOD GETRHPOSITION WSSEND nPAGE,cSEARCH WSRECEIVE oWSGETRHPOSITIONRESULT WSCLIENT WSRHCOMPETENCE
Local cSoap := "" , oXmlRet

BEGIN WSMETHOD

cSoap += '<GETRHPOSITION xmlns="http://localhost:81/">'
cSoap += WSSoapValue("PAGE", ::nPAGE, nPAGE , "integer", .F. , .F., 0 , NIL, .F.,.F.) 
cSoap += WSSoapValue("SEARCH", ::cSEARCH, cSEARCH , "string", .F. , .F., 0 , NIL, .F.,.F.) 
cSoap += "</GETRHPOSITION>"

oXmlRet := SvcSoapCall(	Self,cSoap,; 
	"http://localhost:81/GETRHPOSITION",; 
	"DOCUMENT","http://localhost:81/",,"1.031217",; 
	"http://localhost:81/ws/RHCOMPETENCE.apw")

::Init()
::oWSGETRHPOSITIONRESULT:SoapRecv( WSAdvValue( oXmlRet,"_GETRHPOSITIONRESPONSE:_GETRHPOSITIONRESULT","ARRAYOFPOSITIONVIEW",NIL,NIL,NIL,NIL,NIL,NIL) )

END WSMETHOD

oXmlRet := NIL
Return .T.

// WSDL Method GETX5TABLE of Service WSRHCOMPETENCE

WSMETHOD GETX5TABLE WSSEND nPAGE,cSEARCH,cX5ID WSRECEIVE oWSGETX5TABLERESULT WSCLIENT WSRHCOMPETENCE
Local cSoap := "" , oXmlRet

BEGIN WSMETHOD

cSoap += '<GETX5TABLE xmlns="http://localhost:81/">'
cSoap += WSSoapValue("PAGE", ::nPAGE, nPAGE , "integer", .F. , .F., 0 , NIL, .F.,.F.) 
cSoap += WSSoapValue("SEARCH", ::cSEARCH, cSEARCH , "string", .F. , .F., 0 , NIL, .F.,.F.) 
cSoap += WSSoapValue("X5ID", ::cX5ID, cX5ID , "string", .T. , .F., 0 , NIL, .F.,.F.) 
cSoap += "</GETX5TABLE>"

oXmlRet := SvcSoapCall(	Self,cSoap,; 
	"http://localhost:81/GETX5TABLE",; 
	"DOCUMENT","http://localhost:81/",,"1.031217",; 
	"http://localhost:81/ws/RHCOMPETENCE.apw")

::Init()
::oWSGETX5TABLERESULT:SoapRecv( WSAdvValue( oXmlRet,"_GETX5TABLERESPONSE:_GETX5TABLERESULT","ARRAYOFX5TABLEVIEW",NIL,NIL,NIL,NIL,NIL,NIL) )

END WSMETHOD

oXmlRet := NIL
Return .T.


// WSDL Data Structure TCOMPETENCEBROWSE

WSSTRUCT RHCOMPETENCE_TCOMPETENCEBROWSE
	WSDATA   oWSITENS                  AS RHCOMPETENCE_ARRAYOFTCOMPETENCEDATA OPTIONAL
	WSDATA   _HEADOUT                  AS Array of String
	
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT RHCOMPETENCE_TCOMPETENCEBROWSE
	::Init()
Return Self

WSMETHOD INIT WSCLIENT RHCOMPETENCE_TCOMPETENCEBROWSE
Return

WSMETHOD CLONE WSCLIENT RHCOMPETENCE_TCOMPETENCEBROWSE
	Local oClone := RHCOMPETENCE_TCOMPETENCEBROWSE():NEW()
	oClone:oWSITENS             := IIF(::oWSITENS = NIL , NIL , ::oWSITENS:Clone() )
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT RHCOMPETENCE_TCOMPETENCEBROWSE
	Local oNode1
	::Init()
	If oResponse = NIL ; Return ; Endif 
	oNode1 :=  WSAdvValue( oResponse,"_ITENS","ARRAYOFTCOMPETENCEDATA",NIL,NIL,NIL,"O",NIL,NIL) 
	If oNode1 != NIL
		::oWSITENS := RHCOMPETENCE_ARRAYOFTCOMPETENCEDATA():New()
		::oWSITENS:SoapRecv(oNode1)
	EndIf
Return

// WSDL Data Structure TCOMPETENCES

WSSTRUCT RHCOMPETENCE_TCOMPETENCES
	WSDATA   oWSITENS                  AS RHCOMPETENCE_ARRAYOFLISTOFCOMPETENCES OPTIONAL
	WSDATA   _HEADOUT                  AS Array of String
	
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT RHCOMPETENCE_TCOMPETENCES
	::Init()
Return Self

WSMETHOD INIT WSCLIENT RHCOMPETENCE_TCOMPETENCES
Return

WSMETHOD CLONE WSCLIENT RHCOMPETENCE_TCOMPETENCES
	Local oClone := RHCOMPETENCE_TCOMPETENCES():NEW()
	oClone:oWSITENS             := IIF(::oWSITENS = NIL , NIL , ::oWSITENS:Clone() )
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT RHCOMPETENCE_TCOMPETENCES
	Local oNode1
	::Init()
	If oResponse = NIL ; Return ; Endif 
	oNode1 :=  WSAdvValue( oResponse,"_ITENS","ARRAYOFLISTOFCOMPETENCES",NIL,NIL,NIL,"O",NIL,NIL) 
	If oNode1 != NIL
		::oWSITENS := RHCOMPETENCE_ARRAYOFLISTOFCOMPETENCES():New()
		::oWSITENS:SoapRecv(oNode1)
	EndIf
Return

// WSDL Data Structure ARRAYOFPOSITIONVIEW

WSSTRUCT RHCOMPETENCE_ARRAYOFPOSITIONVIEW
	WSDATA   oWSPOSITIONVIEW           AS RHCOMPETENCE_POSITIONVIEW OPTIONAL
	WSDATA   _HEADOUT                  AS Array of String
	
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT RHCOMPETENCE_ARRAYOFPOSITIONVIEW
	::Init()
Return Self

WSMETHOD INIT WSCLIENT RHCOMPETENCE_ARRAYOFPOSITIONVIEW
	::oWSPOSITIONVIEW      := {} // Array Of  RHCOMPETENCE_POSITIONVIEW():New()
Return

WSMETHOD CLONE WSCLIENT RHCOMPETENCE_ARRAYOFPOSITIONVIEW
	Local oClone := RHCOMPETENCE_ARRAYOFPOSITIONVIEW():NEW()
	oClone:oWSPOSITIONVIEW := NIL
	If ::oWSPOSITIONVIEW <> NIL 
		oClone:oWSPOSITIONVIEW := {}
		aEval( ::oWSPOSITIONVIEW , { |x| aadd( oClone:oWSPOSITIONVIEW , x:Clone() ) } )
	Endif 
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT RHCOMPETENCE_ARRAYOFPOSITIONVIEW
	Local nRElem1, oNodes1, nTElem1
	::Init()
	If oResponse = NIL ; Return ; Endif 
	oNodes1 :=  WSAdvValue( oResponse,"_POSITIONVIEW","POSITIONVIEW",{},NIL,.T.,"O",NIL,NIL) 
	nTElem1 := len(oNodes1)
	For nRElem1 := 1 to nTElem1 
		If !WSIsNilNode( oNodes1[nRElem1] )
			aadd(::oWSPOSITIONVIEW , RHCOMPETENCE_POSITIONVIEW():New() )
			::oWSPOSITIONVIEW[len(::oWSPOSITIONVIEW)]:SoapRecv(oNodes1[nRElem1])
		Endif
	Next
Return

// WSDL Data Structure ARRAYOFX5TABLEVIEW

WSSTRUCT RHCOMPETENCE_ARRAYOFX5TABLEVIEW
	WSDATA   oWSX5TABLEVIEW            AS RHCOMPETENCE_X5TABLEVIEW OPTIONAL
	WSDATA   _HEADOUT                  AS Array of String
	
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT RHCOMPETENCE_ARRAYOFX5TABLEVIEW
	::Init()
Return Self

WSMETHOD INIT WSCLIENT RHCOMPETENCE_ARRAYOFX5TABLEVIEW
	::oWSX5TABLEVIEW       := {} // Array Of  RHCOMPETENCE_X5TABLEVIEW():New()
Return

WSMETHOD CLONE WSCLIENT RHCOMPETENCE_ARRAYOFX5TABLEVIEW
	Local oClone := RHCOMPETENCE_ARRAYOFX5TABLEVIEW():NEW()
	oClone:oWSX5TABLEVIEW := NIL
	If ::oWSX5TABLEVIEW <> NIL 
		oClone:oWSX5TABLEVIEW := {}
		aEval( ::oWSX5TABLEVIEW , { |x| aadd( oClone:oWSX5TABLEVIEW , x:Clone() ) } )
	Endif 
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT RHCOMPETENCE_ARRAYOFX5TABLEVIEW
	Local nRElem1, oNodes1, nTElem1
	::Init()
	If oResponse = NIL ; Return ; Endif 
	oNodes1 :=  WSAdvValue( oResponse,"_X5TABLEVIEW","X5TABLEVIEW",{},NIL,.T.,"O",NIL,NIL) 
	nTElem1 := len(oNodes1)
	For nRElem1 := 1 to nTElem1 
		If !WSIsNilNode( oNodes1[nRElem1] )
			aadd(::oWSX5TABLEVIEW , RHCOMPETENCE_X5TABLEVIEW():New() )
			::oWSX5TABLEVIEW[len(::oWSX5TABLEVIEW)]:SoapRecv(oNodes1[nRElem1])
		Endif
	Next
Return

// WSDL Data Structure ARRAYOFTCOMPETENCEDATA

WSSTRUCT RHCOMPETENCE_ARRAYOFTCOMPETENCEDATA
	WSDATA   oWSTCOMPETENCEDATA        AS RHCOMPETENCE_TCOMPETENCEDATA OPTIONAL
	WSDATA   _HEADOUT                  AS Array of String
	
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT RHCOMPETENCE_ARRAYOFTCOMPETENCEDATA
	::Init()
Return Self

WSMETHOD INIT WSCLIENT RHCOMPETENCE_ARRAYOFTCOMPETENCEDATA
	::oWSTCOMPETENCEDATA   := {} // Array Of  RHCOMPETENCE_TCOMPETENCEDATA():New()
Return

WSMETHOD CLONE WSCLIENT RHCOMPETENCE_ARRAYOFTCOMPETENCEDATA
	Local oClone := RHCOMPETENCE_ARRAYOFTCOMPETENCEDATA():NEW()
	oClone:oWSTCOMPETENCEDATA := NIL
	If ::oWSTCOMPETENCEDATA <> NIL 
		oClone:oWSTCOMPETENCEDATA := {}
		aEval( ::oWSTCOMPETENCEDATA , { |x| aadd( oClone:oWSTCOMPETENCEDATA , x:Clone() ) } )
	Endif 
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT RHCOMPETENCE_ARRAYOFTCOMPETENCEDATA
	Local nRElem1, oNodes1, nTElem1
	::Init()
	If oResponse = NIL ; Return ; Endif 
	oNodes1 :=  WSAdvValue( oResponse,"_TCOMPETENCEDATA","TCOMPETENCEDATA",{},NIL,.T.,"O",NIL,NIL) 
	nTElem1 := len(oNodes1)
	For nRElem1 := 1 to nTElem1 
		If !WSIsNilNode( oNodes1[nRElem1] )
			aadd(::oWSTCOMPETENCEDATA , RHCOMPETENCE_TCOMPETENCEDATA():New() )
			::oWSTCOMPETENCEDATA[len(::oWSTCOMPETENCEDATA)]:SoapRecv(oNodes1[nRElem1])
		Endif
	Next
Return

// WSDL Data Structure ARRAYOFLISTOFCOMPETENCES

WSSTRUCT RHCOMPETENCE_ARRAYOFLISTOFCOMPETENCES
	WSDATA   oWSLISTOFCOMPETENCES      AS RHCOMPETENCE_LISTOFCOMPETENCES OPTIONAL
	WSDATA   _HEADOUT                  AS Array of String
	
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT RHCOMPETENCE_ARRAYOFLISTOFCOMPETENCES
	::Init()
Return Self

WSMETHOD INIT WSCLIENT RHCOMPETENCE_ARRAYOFLISTOFCOMPETENCES
	::oWSLISTOFCOMPETENCES := {} // Array Of  RHCOMPETENCE_LISTOFCOMPETENCES():New()
Return

WSMETHOD CLONE WSCLIENT RHCOMPETENCE_ARRAYOFLISTOFCOMPETENCES
	Local oClone := RHCOMPETENCE_ARRAYOFLISTOFCOMPETENCES():NEW()
	oClone:oWSLISTOFCOMPETENCES := NIL
	If ::oWSLISTOFCOMPETENCES <> NIL 
		oClone:oWSLISTOFCOMPETENCES := {}
		aEval( ::oWSLISTOFCOMPETENCES , { |x| aadd( oClone:oWSLISTOFCOMPETENCES , x:Clone() ) } )
	Endif 
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT RHCOMPETENCE_ARRAYOFLISTOFCOMPETENCES
	Local nRElem1, oNodes1, nTElem1
	::Init()
	If oResponse = NIL ; Return ; Endif 
	oNodes1 :=  WSAdvValue( oResponse,"_LISTOFCOMPETENCES","LISTOFCOMPETENCES",{},NIL,.T.,"O",NIL,NIL) 
	nTElem1 := len(oNodes1)
	For nRElem1 := 1 to nTElem1 
		If !WSIsNilNode( oNodes1[nRElem1] )
			aadd(::oWSLISTOFCOMPETENCES , RHCOMPETENCE_LISTOFCOMPETENCES():New() )
			::oWSLISTOFCOMPETENCES[len(::oWSLISTOFCOMPETENCES)]:SoapRecv(oNodes1[nRElem1])
		Endif
	Next
Return

// WSDL Data Structure POSITIONVIEW

WSSTRUCT RHCOMPETENCE_POSITIONVIEW
	WSDATA   cPOSITIONCODE             AS string OPTIONAL
	WSDATA   cPOSITIONDESCRIPTION      AS string OPTIONAL
	WSDATA   _HEADOUT                  AS Array of String
	
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT RHCOMPETENCE_POSITIONVIEW
	::Init()
Return Self

WSMETHOD INIT WSCLIENT RHCOMPETENCE_POSITIONVIEW
Return

WSMETHOD CLONE WSCLIENT RHCOMPETENCE_POSITIONVIEW
	Local oClone := RHCOMPETENCE_POSITIONVIEW():NEW()
	oClone:cPOSITIONCODE        := ::cPOSITIONCODE
	oClone:cPOSITIONDESCRIPTION := ::cPOSITIONDESCRIPTION
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT RHCOMPETENCE_POSITIONVIEW
	::Init()
	If oResponse = NIL ; Return ; Endif 
	::cPOSITIONCODE      :=  WSAdvValue( oResponse,"_POSITIONCODE","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cPOSITIONDESCRIPTION :=  WSAdvValue( oResponse,"_POSITIONDESCRIPTION","string",NIL,NIL,NIL,"S",NIL,NIL) 
Return

// WSDL Data Structure X5TABLEVIEW

WSSTRUCT RHCOMPETENCE_X5TABLEVIEW
	WSDATA   cX5CODE                   AS string OPTIONAL
	WSDATA   cX5DESCRIPTION            AS string OPTIONAL
	WSDATA   _HEADOUT                  AS Array of String
	
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT RHCOMPETENCE_X5TABLEVIEW
	::Init()
Return Self

WSMETHOD INIT WSCLIENT RHCOMPETENCE_X5TABLEVIEW
Return

WSMETHOD CLONE WSCLIENT RHCOMPETENCE_X5TABLEVIEW
	Local oClone := RHCOMPETENCE_X5TABLEVIEW():NEW()
	oClone:cX5CODE              := ::cX5CODE
	oClone:cX5DESCRIPTION       := ::cX5DESCRIPTION
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT RHCOMPETENCE_X5TABLEVIEW
	::Init()
	If oResponse = NIL ; Return ; Endif 
	::cX5CODE            :=  WSAdvValue( oResponse,"_X5CODE","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cX5DESCRIPTION     :=  WSAdvValue( oResponse,"_X5DESCRIPTION","string",NIL,NIL,NIL,"S",NIL,NIL) 
Return

// WSDL Data Structure TCOMPETENCEDATA

WSSTRUCT RHCOMPETENCE_TCOMPETENCEDATA
	WSDATA   cSKILLDESCRIPTION         AS string
	WSDATA   nSKILLEMPLOYEE            AS float
	WSDATA   nSKILLPOSITION            AS float
	WSDATA   _HEADOUT                  AS Array of String
	
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT RHCOMPETENCE_TCOMPETENCEDATA
	::Init()
Return Self

WSMETHOD INIT WSCLIENT RHCOMPETENCE_TCOMPETENCEDATA
Return

WSMETHOD CLONE WSCLIENT RHCOMPETENCE_TCOMPETENCEDATA
	Local oClone := RHCOMPETENCE_TCOMPETENCEDATA():NEW()
	oClone:cSKILLDESCRIPTION    := ::cSKILLDESCRIPTION
	oClone:nSKILLEMPLOYEE       := ::nSKILLEMPLOYEE
	oClone:nSKILLPOSITION       := ::nSKILLPOSITION
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT RHCOMPETENCE_TCOMPETENCEDATA
	::Init()
	If oResponse = NIL ; Return ; Endif 
	::cSKILLDESCRIPTION  :=  WSAdvValue( oResponse,"_SKILLDESCRIPTION","string",NIL,"Property cSKILLDESCRIPTION as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::nSKILLEMPLOYEE     :=  WSAdvValue( oResponse,"_SKILLEMPLOYEE","float",NIL,"Property nSKILLEMPLOYEE as s:float on SOAP Response not found.",NIL,"N",NIL,NIL) 
	::nSKILLPOSITION     :=  WSAdvValue( oResponse,"_SKILLPOSITION","float",NIL,"Property nSKILLPOSITION as s:float on SOAP Response not found.",NIL,"N",NIL,NIL) 
Return

// WSDL Data Structure LISTOFCOMPETENCES

WSSTRUCT RHCOMPETENCE_LISTOFCOMPETENCES
	WSDATA   cCOMPETENCEDESC           AS string
	WSDATA   cCOMPETENCEID             AS string
	WSDATA   oWSLISTOFHABILITIES       AS RHCOMPETENCE_ARRAYOFHABILITIEDETAIL OPTIONAL
	WSDATA   _HEADOUT                  AS Array of String
	
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT RHCOMPETENCE_LISTOFCOMPETENCES
	::Init()
Return Self

WSMETHOD INIT WSCLIENT RHCOMPETENCE_LISTOFCOMPETENCES
Return

WSMETHOD CLONE WSCLIENT RHCOMPETENCE_LISTOFCOMPETENCES
	Local oClone := RHCOMPETENCE_LISTOFCOMPETENCES():NEW()
	oClone:cCOMPETENCEDESC      := ::cCOMPETENCEDESC
	oClone:cCOMPETENCEID        := ::cCOMPETENCEID
	oClone:oWSLISTOFHABILITIES  := IIF(::oWSLISTOFHABILITIES = NIL , NIL , ::oWSLISTOFHABILITIES:Clone() )
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT RHCOMPETENCE_LISTOFCOMPETENCES
	Local oNode3
	::Init()
	If oResponse = NIL ; Return ; Endif 
	::cCOMPETENCEDESC    :=  WSAdvValue( oResponse,"_COMPETENCEDESC","string",NIL,"Property cCOMPETENCEDESC as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::cCOMPETENCEID      :=  WSAdvValue( oResponse,"_COMPETENCEID","string",NIL,"Property cCOMPETENCEID as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	oNode3 :=  WSAdvValue( oResponse,"_LISTOFHABILITIES","ARRAYOFHABILITIEDETAIL",NIL,NIL,NIL,"O",NIL,NIL) 
	If oNode3 != NIL
		::oWSLISTOFHABILITIES := RHCOMPETENCE_ARRAYOFHABILITIEDETAIL():New()
		::oWSLISTOFHABILITIES:SoapRecv(oNode3)
	EndIf
Return

// WSDL Data Structure ARRAYOFHABILITIEDETAIL

WSSTRUCT RHCOMPETENCE_ARRAYOFHABILITIEDETAIL
	WSDATA   oWSHABILITIEDETAIL        AS RHCOMPETENCE_HABILITIEDETAIL OPTIONAL
	WSDATA   _HEADOUT                  AS Array of String
	
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT RHCOMPETENCE_ARRAYOFHABILITIEDETAIL
	::Init()
Return Self

WSMETHOD INIT WSCLIENT RHCOMPETENCE_ARRAYOFHABILITIEDETAIL
	::oWSHABILITIEDETAIL   := {} // Array Of  RHCOMPETENCE_HABILITIEDETAIL():New()
Return

WSMETHOD CLONE WSCLIENT RHCOMPETENCE_ARRAYOFHABILITIEDETAIL
	Local oClone := RHCOMPETENCE_ARRAYOFHABILITIEDETAIL():NEW()
	oClone:oWSHABILITIEDETAIL := NIL
	If ::oWSHABILITIEDETAIL <> NIL 
		oClone:oWSHABILITIEDETAIL := {}
		aEval( ::oWSHABILITIEDETAIL , { |x| aadd( oClone:oWSHABILITIEDETAIL , x:Clone() ) } )
	Endif 
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT RHCOMPETENCE_ARRAYOFHABILITIEDETAIL
	Local nRElem1, oNodes1, nTElem1
	::Init()
	If oResponse = NIL ; Return ; Endif 
	oNodes1 :=  WSAdvValue( oResponse,"_HABILITIEDETAIL","HABILITIEDETAIL",{},NIL,.T.,"O",NIL,NIL) 
	nTElem1 := len(oNodes1)
	For nRElem1 := 1 to nTElem1 
		If !WSIsNilNode( oNodes1[nRElem1] )
			aadd(::oWSHABILITIEDETAIL , RHCOMPETENCE_HABILITIEDETAIL():New() )
			::oWSHABILITIEDETAIL[len(::oWSHABILITIEDETAIL)]:SoapRecv(oNodes1[nRElem1])
		Endif
	Next
Return

// WSDL Data Structure HABILITIEDETAIL

WSSTRUCT RHCOMPETENCE_HABILITIEDETAIL
	WSDATA   cHABILITIEDESC            AS string
	WSDATA   cHABILITIEID              AS string
	WSDATA   _HEADOUT                  AS Array of String
	
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT RHCOMPETENCE_HABILITIEDETAIL
	::Init()
Return Self

WSMETHOD INIT WSCLIENT RHCOMPETENCE_HABILITIEDETAIL
Return

WSMETHOD CLONE WSCLIENT RHCOMPETENCE_HABILITIEDETAIL
	Local oClone := RHCOMPETENCE_HABILITIEDETAIL():NEW()
	oClone:cHABILITIEDESC       := ::cHABILITIEDESC
	oClone:cHABILITIEID         := ::cHABILITIEID
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT RHCOMPETENCE_HABILITIEDETAIL
	::Init()
	If oResponse = NIL ; Return ; Endif 
	::cHABILITIEDESC     :=  WSAdvValue( oResponse,"_HABILITIEDESC","string",NIL,"Property cHABILITIEDESC as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::cHABILITIEID       :=  WSAdvValue( oResponse,"_HABILITIEID","string",NIL,"Property cHABILITIEID as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
Return


