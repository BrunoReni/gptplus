#INCLUDE "protheus.ch"
#INCLUDE "apwebsrv.ch"

/* ===============================================================================
WSDL Location    http://localhost:8059/ws/TMSCFGUSER.apw?WSDL
Gerado em        12/14/20 11:24:41
Observações      Código-Fonte gerado por ADVPL WSDL Client 1.120703
                 Alterações neste arquivo podem causar funcionamento incorreto
                 e serão perdidas caso o código-fonte seja gerado novamente.
=============================================================================== */

User Function _KQQRDWE ; Return  // "dummy" function - Internal Use 

/* -------------------------------------------------------------------------------
WSDL Service WSTMSCFGUSER
------------------------------------------------------------------------------- */

WSCLIENT WSTMSCFGUSER

	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD RESET
	WSMETHOD CLONE
	WSMETHOD CHGADRESSSEQ
	WSMETHOD GETADRESSSEQ
	WSMETHOD GETBROWSERDLA
	WSMETHOD GETBROWSERDLC
	WSMETHOD GETBROWSERDUY
	WSMETHOD GETBROWSERMG
	WSMETHOD GETBROWSERSB1
	WSMETHOD GETCHGUSER
	WSMETHOD GETFIRSTLOG
	WSMETHOD GETHEADER
	WSMETHOD GETPARAMETERVALUE
	WSMETHOD GETPWDUSER
	WSMETHOD GETSX3BOX
	WSMETHOD GETTRGINFO
	WSMETHOD PUTADRESSSEQ
	WSMETHOD PUTAREAREQUESTOR
	WSMETHOD PUTCHGUSER
	WSMETHOD PUTNEWUSER

	WSDATA   _URL                      AS String
	WSDATA   _HEADOUT                  AS Array of String
	WSDATA   _COOKIES                  AS Array of String
	WSDATA   cUSERCODE                 AS string
	WSDATA   oWSADRESSSEQ              AS TMSCFGUSER_DLA
	WSDATA   cCHGDELADRESSSEQ          AS string
	WSDATA   cCHGADRESSSEQRESULT       AS string
	WSDATA   oWSGETADRESSSEQRESULT     AS TMSCFGUSER_DLA
	WSDATA   oWSGETBROWSERDLARESULT    AS TMSCFGUSER_ARRAYOFDLA
	WSDATA   cTYPEDLC                  AS string
	WSDATA   oWSGETBROWSERDLCRESULT    AS TMSCFGUSER_ARRAYOFBROWSERGENERIC
	WSDATA   oWSGETBROWSERDUYRESULT    AS TMSCFGUSER_ARRAYOFDUY
	WSDATA   oWSGETBROWSERMGRESULT     AS TMSCFGUSER_ARRAYOFBROWSERGENERIC
	WSDATA   oWSGETBROWSERSB1RESULT    AS TMSCFGUSER_ARRAYOFBROWSERGENERIC
	WSDATA   oWSGETCHGUSERRESULT       AS TMSCFGUSER_USERSTR
	WSDATA   lGETFIRSTLOGRESULT        AS boolean
	WSDATA   cTYPHEADER                AS string
	WSDATA   oWSGETHEADERRESULT        AS TMSCFGUSER_ARRAYOFBRWHEADER
	WSDATA   cMVPARAM                  AS string
	WSDATA   cGETPARAMETERVALUERESULT  AS string
	WSDATA   cUSERLOGIN                AS string
	WSDATA   cGETPWDUSERRESULT         AS string
	WSDATA   cFIELDSX3                 AS string
	WSDATA   oWSGETSX3BOXRESULT        AS TMSCFGUSER_ARRAYOFSX3BOX
	WSDATA   cTRGFIELD                 AS string
	WSDATA   cTRGVFIELD01              AS string
	WSDATA   oWSGETTRGINFORESULT       AS TMSCFGUSER_TRGRESULT
	WSDATA   cPUTADRESSSEQRESULT       AS string
	WSDATA   cAREACODE                 AS string
	WSDATA   lPUTAREAREQUESTORRESULT   AS boolean
	WSDATA   oWSUSERDATA               AS TMSCFGUSER_USERSTR
	WSDATA   cPUTCHGUSERRESULT         AS string
	WSDATA   cPUTNEWUSERRESULT         AS string

	// Estruturas mantidas por compatibilidade - NÃO USAR
	WSDATA   oWSDLA                    AS TMSCFGUSER_DLA
	WSDATA   oWSUSERSTR                AS TMSCFGUSER_USERSTR

ENDWSCLIENT

WSMETHOD NEW WSCLIENT WSTMSCFGUSER
::Init()
If !FindFunction("XMLCHILDEX")
	UserException("O Código-Fonte Client atual requer os executáveis do Protheus Build [7.00.191205P-20201009] ou superior. Atualize o Protheus ou gere o Código-Fonte novamente utilizando o Build atual.")
EndIf
Return Self

WSMETHOD INIT WSCLIENT WSTMSCFGUSER
	::oWSADRESSSEQ       := TMSCFGUSER_DLA():New()
	::oWSGETADRESSSEQRESULT := TMSCFGUSER_DLA():New()
	::oWSGETBROWSERDLARESULT := TMSCFGUSER_ARRAYOFDLA():New()
	::oWSGETBROWSERDLCRESULT := TMSCFGUSER_ARRAYOFBROWSERGENERIC():New()
	::oWSGETBROWSERDUYRESULT := TMSCFGUSER_ARRAYOFDUY():New()
	::oWSGETBROWSERMGRESULT := TMSCFGUSER_ARRAYOFBROWSERGENERIC():New()
	::oWSGETBROWSERSB1RESULT := TMSCFGUSER_ARRAYOFBROWSERGENERIC():New()
	::oWSGETCHGUSERRESULT := TMSCFGUSER_USERSTR():New()
	::oWSGETHEADERRESULT := TMSCFGUSER_ARRAYOFBRWHEADER():New()
	::oWSGETSX3BOXRESULT := TMSCFGUSER_ARRAYOFSX3BOX():New()
	::oWSGETTRGINFORESULT := TMSCFGUSER_TRGRESULT():New()
	::oWSUSERDATA        := TMSCFGUSER_USERSTR():New()

	// Estruturas mantidas por compatibilidade - NÃO USAR
	::oWSDLA             := ::oWSADRESSSEQ
	::oWSUSERSTR         := ::oWSUSERDATA
Return

WSMETHOD RESET WSCLIENT WSTMSCFGUSER
	::cUSERCODE          := NIL 
	::oWSADRESSSEQ       := NIL 
	::cCHGDELADRESSSEQ   := NIL 
	::cCHGADRESSSEQRESULT := NIL 
	::oWSGETADRESSSEQRESULT := NIL 
	::oWSGETBROWSERDLARESULT := NIL 
	::cTYPEDLC           := NIL 
	::oWSGETBROWSERDLCRESULT := NIL 
	::oWSGETBROWSERDUYRESULT := NIL 
	::oWSGETBROWSERMGRESULT := NIL 
	::oWSGETBROWSERSB1RESULT := NIL 
	::oWSGETCHGUSERRESULT := NIL 
	::lGETFIRSTLOGRESULT := NIL 
	::cTYPHEADER         := NIL 
	::oWSGETHEADERRESULT := NIL 
	::cMVPARAM           := NIL 
	::cGETPARAMETERVALUERESULT := NIL 
	::cUSERLOGIN         := NIL 
	::cGETPWDUSERRESULT  := NIL 
	::cFIELDSX3          := NIL 
	::oWSGETSX3BOXRESULT := NIL 
	::cTRGFIELD          := NIL 
	::cTRGVFIELD01       := NIL 
	::oWSGETTRGINFORESULT := NIL 
	::cPUTADRESSSEQRESULT := NIL 
	::cAREACODE          := NIL 
	::lPUTAREAREQUESTORRESULT := NIL 
	::oWSUSERDATA        := NIL 
	::cPUTCHGUSERRESULT  := NIL 
	::cPUTNEWUSERRESULT  := NIL 

	// Estruturas mantidas por compatibilidade - NÃO USAR
	::oWSDLA             := NIL
	::oWSUSERSTR         := NIL
	::Init()
Return

WSMETHOD CLONE WSCLIENT WSTMSCFGUSER
Local oClone := WSTMSCFGUSER():New()
	oClone:_URL          := ::_URL 
	oClone:cUSERCODE     := ::cUSERCODE
	oClone:oWSADRESSSEQ  :=  IIF(::oWSADRESSSEQ = NIL , NIL ,::oWSADRESSSEQ:Clone() )
	oClone:cCHGDELADRESSSEQ := ::cCHGDELADRESSSEQ
	oClone:cCHGADRESSSEQRESULT := ::cCHGADRESSSEQRESULT
	oClone:oWSGETADRESSSEQRESULT :=  IIF(::oWSGETADRESSSEQRESULT = NIL , NIL ,::oWSGETADRESSSEQRESULT:Clone() )
	oClone:oWSGETBROWSERDLARESULT :=  IIF(::oWSGETBROWSERDLARESULT = NIL , NIL ,::oWSGETBROWSERDLARESULT:Clone() )
	oClone:cTYPEDLC      := ::cTYPEDLC
	oClone:oWSGETBROWSERDLCRESULT :=  IIF(::oWSGETBROWSERDLCRESULT = NIL , NIL ,::oWSGETBROWSERDLCRESULT:Clone() )
	oClone:oWSGETBROWSERDUYRESULT :=  IIF(::oWSGETBROWSERDUYRESULT = NIL , NIL ,::oWSGETBROWSERDUYRESULT:Clone() )
	oClone:oWSGETBROWSERMGRESULT :=  IIF(::oWSGETBROWSERMGRESULT = NIL , NIL ,::oWSGETBROWSERMGRESULT:Clone() )
	oClone:oWSGETBROWSERSB1RESULT :=  IIF(::oWSGETBROWSERSB1RESULT = NIL , NIL ,::oWSGETBROWSERSB1RESULT:Clone() )
	oClone:oWSGETCHGUSERRESULT :=  IIF(::oWSGETCHGUSERRESULT = NIL , NIL ,::oWSGETCHGUSERRESULT:Clone() )
	oClone:lGETFIRSTLOGRESULT := ::lGETFIRSTLOGRESULT
	oClone:cTYPHEADER    := ::cTYPHEADER
	oClone:oWSGETHEADERRESULT :=  IIF(::oWSGETHEADERRESULT = NIL , NIL ,::oWSGETHEADERRESULT:Clone() )
	oClone:cMVPARAM      := ::cMVPARAM
	oClone:cGETPARAMETERVALUERESULT := ::cGETPARAMETERVALUERESULT
	oClone:cUSERLOGIN    := ::cUSERLOGIN
	oClone:cGETPWDUSERRESULT := ::cGETPWDUSERRESULT
	oClone:cFIELDSX3     := ::cFIELDSX3
	oClone:oWSGETSX3BOXRESULT :=  IIF(::oWSGETSX3BOXRESULT = NIL , NIL ,::oWSGETSX3BOXRESULT:Clone() )
	oClone:cTRGFIELD     := ::cTRGFIELD
	oClone:cTRGVFIELD01  := ::cTRGVFIELD01
	oClone:oWSGETTRGINFORESULT :=  IIF(::oWSGETTRGINFORESULT = NIL , NIL ,::oWSGETTRGINFORESULT:Clone() )
	oClone:cPUTADRESSSEQRESULT := ::cPUTADRESSSEQRESULT
	oClone:cAREACODE     := ::cAREACODE
	oClone:lPUTAREAREQUESTORRESULT := ::lPUTAREAREQUESTORRESULT
	oClone:oWSUSERDATA   :=  IIF(::oWSUSERDATA = NIL , NIL ,::oWSUSERDATA:Clone() )
	oClone:cPUTCHGUSERRESULT := ::cPUTCHGUSERRESULT
	oClone:cPUTNEWUSERRESULT := ::cPUTNEWUSERRESULT

	// Estruturas mantidas por compatibilidade - NÃO USAR
	oClone:oWSDLA        := oClone:oWSADRESSSEQ
	oClone:oWSUSERSTR    := oClone:oWSUSERDATA
Return oClone

// WSDL Method CHGADRESSSEQ of Service WSTMSCFGUSER

WSMETHOD CHGADRESSSEQ WSSEND cUSERCODE,oWSADRESSSEQ,cCHGDELADRESSSEQ WSRECEIVE cCHGADRESSSEQRESULT WSCLIENT WSTMSCFGUSER
Local cSoap := "" , oXmlRet

BEGIN WSMETHOD

cSoap += '<CHGADRESSSEQ xmlns="http://localhost:8059/">'
cSoap += WSSoapValue("USERCODE", ::cUSERCODE, cUSERCODE , "string", .T. , .F., 0 , NIL, .F.,.F.) 
cSoap += WSSoapValue("ADRESSSEQ", ::oWSADRESSSEQ, oWSADRESSSEQ , "DLA", .T. , .F., 0 , NIL, .F.,.F.) 
cSoap += WSSoapValue("CHGDELADRESSSEQ", ::cCHGDELADRESSSEQ, cCHGDELADRESSSEQ , "string", .T. , .F., 0 , NIL, .F.,.F.) 
cSoap += "</CHGADRESSSEQ>"

oXmlRet := SvcSoapCall(Self,cSoap,; 
	"http://localhost:8059/CHGADRESSSEQ",; 
	"DOCUMENT","http://localhost:8059/",,"1.031217",; 
	"http://localhost:8059/ws/TMSCFGUSER.apw")

::Init()
::cCHGADRESSSEQRESULT :=  WSAdvValue( oXmlRet,"_CHGADRESSSEQRESPONSE:_CHGADRESSSEQRESULT:TEXT","string",NIL,NIL,NIL,NIL,NIL,NIL) 

END WSMETHOD

oXmlRet := NIL
Return .T.

// WSDL Method GETADRESSSEQ of Service WSTMSCFGUSER

WSMETHOD GETADRESSSEQ WSSEND cUSERCODE,cCHGDELADRESSSEQ WSRECEIVE oWSGETADRESSSEQRESULT WSCLIENT WSTMSCFGUSER
Local cSoap := "" , oXmlRet

BEGIN WSMETHOD

cSoap += '<GETADRESSSEQ xmlns="http://localhost:8059/">'
cSoap += WSSoapValue("USERCODE", ::cUSERCODE, cUSERCODE , "string", .T. , .F., 0 , NIL, .F.,.F.) 
cSoap += WSSoapValue("CHGDELADRESSSEQ", ::cCHGDELADRESSSEQ, cCHGDELADRESSSEQ , "string", .T. , .F., 0 , NIL, .F.,.F.) 
cSoap += "</GETADRESSSEQ>"

oXmlRet := SvcSoapCall(Self,cSoap,; 
	"http://localhost:8059/GETADRESSSEQ",; 
	"DOCUMENT","http://localhost:8059/",,"1.031217",; 
	"http://localhost:8059/ws/TMSCFGUSER.apw")

::Init()
::oWSGETADRESSSEQRESULT:SoapRecv( WSAdvValue( oXmlRet,"_GETADRESSSEQRESPONSE:_GETADRESSSEQRESULT","DLA",NIL,NIL,NIL,NIL,NIL,NIL) )

END WSMETHOD

oXmlRet := NIL
Return .T.

// WSDL Method GETBROWSERDLA of Service WSTMSCFGUSER

WSMETHOD GETBROWSERDLA WSSEND cUSERCODE WSRECEIVE oWSGETBROWSERDLARESULT WSCLIENT WSTMSCFGUSER
Local cSoap := "" , oXmlRet

BEGIN WSMETHOD

cSoap += '<GETBROWSERDLA xmlns="http://localhost:8059/">'
cSoap += WSSoapValue("USERCODE", ::cUSERCODE, cUSERCODE , "string", .T. , .F., 0 , NIL, .F.,.F.) 
cSoap += "</GETBROWSERDLA>"

oXmlRet := SvcSoapCall(Self,cSoap,; 
	"http://localhost:8059/GETBROWSERDLA",; 
	"DOCUMENT","http://localhost:8059/",,"1.031217",; 
	"http://localhost:8059/ws/TMSCFGUSER.apw")

::Init()
::oWSGETBROWSERDLARESULT:SoapRecv( WSAdvValue( oXmlRet,"_GETBROWSERDLARESPONSE:_GETBROWSERDLARESULT","ARRAYOFDLA",NIL,NIL,NIL,NIL,NIL,NIL) )

END WSMETHOD

oXmlRet := NIL
Return .T.

// WSDL Method GETBROWSERDLC of Service WSTMSCFGUSER

WSMETHOD GETBROWSERDLC WSSEND cTYPEDLC WSRECEIVE oWSGETBROWSERDLCRESULT WSCLIENT WSTMSCFGUSER
Local cSoap := "" , oXmlRet

BEGIN WSMETHOD

cSoap += '<GETBROWSERDLC xmlns="http://localhost:8059/">'
cSoap += WSSoapValue("TYPEDLC", ::cTYPEDLC, cTYPEDLC , "string", .F. , .F., 0 , NIL, .F.,.F.) 
cSoap += "</GETBROWSERDLC>"

oXmlRet := SvcSoapCall(Self,cSoap,; 
	"http://localhost:8059/GETBROWSERDLC",; 
	"DOCUMENT","http://localhost:8059/",,"1.031217",; 
	"http://localhost:8059/ws/TMSCFGUSER.apw")

::Init()
::oWSGETBROWSERDLCRESULT:SoapRecv( WSAdvValue( oXmlRet,"_GETBROWSERDLCRESPONSE:_GETBROWSERDLCRESULT","ARRAYOFBROWSERGENERIC",NIL,NIL,NIL,NIL,NIL,NIL) )

END WSMETHOD

oXmlRet := NIL
Return .T.

// WSDL Method GETBROWSERDUY of Service WSTMSCFGUSER

WSMETHOD GETBROWSERDUY WSSEND NULLPARAM WSRECEIVE oWSGETBROWSERDUYRESULT WSCLIENT WSTMSCFGUSER
Local cSoap := "" , oXmlRet

BEGIN WSMETHOD

cSoap += '<GETBROWSERDUY xmlns="http://localhost:8059/">'
cSoap += "</GETBROWSERDUY>"

oXmlRet := SvcSoapCall(Self,cSoap,; 
	"http://localhost:8059/GETBROWSERDUY",; 
	"DOCUMENT","http://localhost:8059/",,"1.031217",; 
	"http://localhost:8059/ws/TMSCFGUSER.apw")

::Init()
::oWSGETBROWSERDUYRESULT:SoapRecv( WSAdvValue( oXmlRet,"_GETBROWSERDUYRESPONSE:_GETBROWSERDUYRESULT","ARRAYOFDUY",NIL,NIL,NIL,NIL,NIL,NIL) )

END WSMETHOD

oXmlRet := NIL
Return .T.

// WSDL Method GETBROWSERMG of Service WSTMSCFGUSER

WSMETHOD GETBROWSERMG WSSEND NULLPARAM WSRECEIVE oWSGETBROWSERMGRESULT WSCLIENT WSTMSCFGUSER
Local cSoap := "" , oXmlRet

BEGIN WSMETHOD

cSoap += '<GETBROWSERMG xmlns="http://localhost:8059/">'
cSoap += "</GETBROWSERMG>"

oXmlRet := SvcSoapCall(Self,cSoap,; 
	"http://localhost:8059/GETBROWSERMG",; 
	"DOCUMENT","http://localhost:8059/",,"1.031217",; 
	"http://localhost:8059/ws/TMSCFGUSER.apw")

::Init()
::oWSGETBROWSERMGRESULT:SoapRecv( WSAdvValue( oXmlRet,"_GETBROWSERMGRESPONSE:_GETBROWSERMGRESULT","ARRAYOFBROWSERGENERIC",NIL,NIL,NIL,NIL,NIL,NIL) )

END WSMETHOD

oXmlRet := NIL
Return .T.

// WSDL Method GETBROWSERSB1 of Service WSTMSCFGUSER

WSMETHOD GETBROWSERSB1 WSSEND NULLPARAM WSRECEIVE oWSGETBROWSERSB1RESULT WSCLIENT WSTMSCFGUSER
Local cSoap := "" , oXmlRet

BEGIN WSMETHOD

cSoap += '<GETBROWSERSB1 xmlns="http://localhost:8059/">'
cSoap += "</GETBROWSERSB1>"

oXmlRet := SvcSoapCall(Self,cSoap,; 
	"http://localhost:8059/GETBROWSERSB1",; 
	"DOCUMENT","http://localhost:8059/",,"1.031217",; 
	"http://localhost:8059/ws/TMSCFGUSER.apw")

::Init()
::oWSGETBROWSERSB1RESULT:SoapRecv( WSAdvValue( oXmlRet,"_GETBROWSERSB1RESPONSE:_GETBROWSERSB1RESULT","ARRAYOFBROWSERGENERIC",NIL,NIL,NIL,NIL,NIL,NIL) )

END WSMETHOD

oXmlRet := NIL
Return .T.

// WSDL Method GETCHGUSER of Service WSTMSCFGUSER

WSMETHOD GETCHGUSER WSSEND cUSERCODE WSRECEIVE oWSGETCHGUSERRESULT WSCLIENT WSTMSCFGUSER
Local cSoap := "" , oXmlRet

BEGIN WSMETHOD

cSoap += '<GETCHGUSER xmlns="http://localhost:8059/">'
cSoap += WSSoapValue("USERCODE", ::cUSERCODE, cUSERCODE , "string", .T. , .F., 0 , NIL, .F.,.F.) 
cSoap += "</GETCHGUSER>"

oXmlRet := SvcSoapCall(Self,cSoap,; 
	"http://localhost:8059/GETCHGUSER",; 
	"DOCUMENT","http://localhost:8059/",,"1.031217",; 
	"http://localhost:8059/ws/TMSCFGUSER.apw")

::Init()
::oWSGETCHGUSERRESULT:SoapRecv( WSAdvValue( oXmlRet,"_GETCHGUSERRESPONSE:_GETCHGUSERRESULT","USERSTR",NIL,NIL,NIL,NIL,NIL,NIL) )

END WSMETHOD

oXmlRet := NIL
Return .T.

// WSDL Method GETFIRSTLOG of Service WSTMSCFGUSER

WSMETHOD GETFIRSTLOG WSSEND cUSERCODE WSRECEIVE lGETFIRSTLOGRESULT WSCLIENT WSTMSCFGUSER
Local cSoap := "" , oXmlRet

BEGIN WSMETHOD

cSoap += '<GETFIRSTLOG xmlns="http://localhost:8059/">'
cSoap += WSSoapValue("USERCODE", ::cUSERCODE, cUSERCODE , "string", .T. , .F., 0 , NIL, .F.,.F.) 
cSoap += "</GETFIRSTLOG>"

oXmlRet := SvcSoapCall(Self,cSoap,; 
	"http://localhost:8059/GETFIRSTLOG",; 
	"DOCUMENT","http://localhost:8059/",,"1.031217",; 
	"http://localhost:8059/ws/TMSCFGUSER.apw")

::Init()
::lGETFIRSTLOGRESULT :=  WSAdvValue( oXmlRet,"_GETFIRSTLOGRESPONSE:_GETFIRSTLOGRESULT:TEXT","boolean",NIL,NIL,NIL,NIL,NIL,NIL) 

END WSMETHOD

oXmlRet := NIL
Return .T.

// WSDL Method GETHEADER of Service WSTMSCFGUSER

WSMETHOD GETHEADER WSSEND cTYPHEADER WSRECEIVE oWSGETHEADERRESULT WSCLIENT WSTMSCFGUSER
Local cSoap := "" , oXmlRet

BEGIN WSMETHOD

cSoap += '<GETHEADER xmlns="http://localhost:8059/">'
cSoap += WSSoapValue("TYPHEADER", ::cTYPHEADER, cTYPHEADER , "string", .T. , .F., 0 , NIL, .F.,.F.) 
cSoap += "</GETHEADER>"

oXmlRet := SvcSoapCall(Self,cSoap,; 
	"http://localhost:8059/GETHEADER",; 
	"DOCUMENT","http://localhost:8059/",,"1.031217",; 
	"http://localhost:8059/ws/TMSCFGUSER.apw")

::Init()
::oWSGETHEADERRESULT:SoapRecv( WSAdvValue( oXmlRet,"_GETHEADERRESPONSE:_GETHEADERRESULT","ARRAYOFBRWHEADER",NIL,NIL,NIL,NIL,NIL,NIL) )

END WSMETHOD

oXmlRet := NIL
Return .T.

// WSDL Method GETPARAMETERVALUE of Service WSTMSCFGUSER

WSMETHOD GETPARAMETERVALUE WSSEND cMVPARAM WSRECEIVE cGETPARAMETERVALUERESULT WSCLIENT WSTMSCFGUSER
Local cSoap := "" , oXmlRet

BEGIN WSMETHOD

cSoap += '<GETPARAMETERVALUE xmlns="http://localhost:8059/">'
cSoap += WSSoapValue("MVPARAM", ::cMVPARAM, cMVPARAM , "string", .T. , .F., 0 , NIL, .F.,.F.) 
cSoap += "</GETPARAMETERVALUE>"

oXmlRet := SvcSoapCall(Self,cSoap,; 
	"http://localhost:8059/GETPARAMETERVALUE",; 
	"DOCUMENT","http://localhost:8059/",,"1.031217",; 
	"http://localhost:8059/ws/TMSCFGUSER.apw")

::Init()
::cGETPARAMETERVALUERESULT :=  WSAdvValue( oXmlRet,"_GETPARAMETERVALUERESPONSE:_GETPARAMETERVALUERESULT:TEXT","string",NIL,NIL,NIL,NIL,NIL,NIL) 

END WSMETHOD

oXmlRet := NIL
Return .T.

// WSDL Method GETPWDUSER of Service WSTMSCFGUSER

WSMETHOD GETPWDUSER WSSEND cUSERLOGIN WSRECEIVE cGETPWDUSERRESULT WSCLIENT WSTMSCFGUSER
Local cSoap := "" , oXmlRet

BEGIN WSMETHOD

cSoap += '<GETPWDUSER xmlns="http://localhost:8059/">'
cSoap += WSSoapValue("USERLOGIN", ::cUSERLOGIN, cUSERLOGIN , "string", .T. , .F., 0 , NIL, .F.,.F.) 
cSoap += "</GETPWDUSER>"

oXmlRet := SvcSoapCall(Self,cSoap,; 
	"http://localhost:8059/GETPWDUSER",; 
	"DOCUMENT","http://localhost:8059/",,"1.031217",; 
	"http://localhost:8059/ws/TMSCFGUSER.apw")

::Init()
::cGETPWDUSERRESULT  :=  WSAdvValue( oXmlRet,"_GETPWDUSERRESPONSE:_GETPWDUSERRESULT:TEXT","string",NIL,NIL,NIL,NIL,NIL,NIL) 

END WSMETHOD

oXmlRet := NIL
Return .T.

// WSDL Method GETSX3BOX of Service WSTMSCFGUSER

WSMETHOD GETSX3BOX WSSEND cFIELDSX3 WSRECEIVE oWSGETSX3BOXRESULT WSCLIENT WSTMSCFGUSER
Local cSoap := "" , oXmlRet

BEGIN WSMETHOD

cSoap += '<GETSX3BOX xmlns="http://localhost:8059/">'
cSoap += WSSoapValue("FIELDSX3", ::cFIELDSX3, cFIELDSX3 , "string", .T. , .F., 0 , NIL, .F.,.F.) 
cSoap += "</GETSX3BOX>"

oXmlRet := SvcSoapCall(Self,cSoap,; 
	"http://localhost:8059/GETSX3BOX",; 
	"DOCUMENT","http://localhost:8059/",,"1.031217",; 
	"http://localhost:8059/ws/TMSCFGUSER.apw")

::Init()
::oWSGETSX3BOXRESULT:SoapRecv( WSAdvValue( oXmlRet,"_GETSX3BOXRESPONSE:_GETSX3BOXRESULT","ARRAYOFSX3BOX",NIL,NIL,NIL,NIL,NIL,NIL) )

END WSMETHOD

oXmlRet := NIL
Return .T.

// WSDL Method GETTRGINFO of Service WSTMSCFGUSER

WSMETHOD GETTRGINFO WSSEND cTRGFIELD,cTRGVFIELD01 WSRECEIVE oWSGETTRGINFORESULT WSCLIENT WSTMSCFGUSER
Local cSoap := "" , oXmlRet

BEGIN WSMETHOD

cSoap += '<GETTRGINFO xmlns="http://localhost:8059/">'
cSoap += WSSoapValue("TRGFIELD", ::cTRGFIELD, cTRGFIELD , "string", .T. , .F., 0 , NIL, .F.,.F.) 
cSoap += WSSoapValue("TRGVFIELD01", ::cTRGVFIELD01, cTRGVFIELD01 , "string", .T. , .F., 0 , NIL, .F.,.F.) 
cSoap += "</GETTRGINFO>"

oXmlRet := SvcSoapCall(Self,cSoap,; 
	"http://localhost:8059/GETTRGINFO",; 
	"DOCUMENT","http://localhost:8059/",,"1.031217",; 
	"http://localhost:8059/ws/TMSCFGUSER.apw")

::Init()
::oWSGETTRGINFORESULT:SoapRecv( WSAdvValue( oXmlRet,"_GETTRGINFORESPONSE:_GETTRGINFORESULT","TRGRESULT",NIL,NIL,NIL,NIL,NIL,NIL) )

END WSMETHOD

oXmlRet := NIL
Return .T.

// WSDL Method PUTADRESSSEQ of Service WSTMSCFGUSER

WSMETHOD PUTADRESSSEQ WSSEND cUSERCODE,oWSADRESSSEQ WSRECEIVE cPUTADRESSSEQRESULT WSCLIENT WSTMSCFGUSER
Local cSoap := "" , oXmlRet

BEGIN WSMETHOD

cSoap += '<PUTADRESSSEQ xmlns="http://localhost:8059/">'
cSoap += WSSoapValue("USERCODE", ::cUSERCODE, cUSERCODE , "string", .T. , .F., 0 , NIL, .F.,.F.) 
cSoap += WSSoapValue("ADRESSSEQ", ::oWSADRESSSEQ, oWSADRESSSEQ , "DLA", .T. , .F., 0 , NIL, .F.,.F.) 
cSoap += "</PUTADRESSSEQ>"

oXmlRet := SvcSoapCall(Self,cSoap,; 
	"http://localhost:8059/PUTADRESSSEQ",; 
	"DOCUMENT","http://localhost:8059/",,"1.031217",; 
	"http://localhost:8059/ws/TMSCFGUSER.apw")

::Init()
::cPUTADRESSSEQRESULT :=  WSAdvValue( oXmlRet,"_PUTADRESSSEQRESPONSE:_PUTADRESSSEQRESULT:TEXT","string",NIL,NIL,NIL,NIL,NIL,NIL) 

END WSMETHOD

oXmlRet := NIL
Return .T.

// WSDL Method PUTAREAREQUESTOR of Service WSTMSCFGUSER

WSMETHOD PUTAREAREQUESTOR WSSEND cAREACODE,cUSERCODE WSRECEIVE lPUTAREAREQUESTORRESULT WSCLIENT WSTMSCFGUSER
Local cSoap := "" , oXmlRet

BEGIN WSMETHOD

cSoap += '<PUTAREAREQUESTOR xmlns="http://localhost:8059/">'
cSoap += WSSoapValue("AREACODE", ::cAREACODE, cAREACODE , "string", .T. , .F., 0 , NIL, .F.,.F.) 
cSoap += WSSoapValue("USERCODE", ::cUSERCODE, cUSERCODE , "string", .T. , .F., 0 , NIL, .F.,.F.) 
cSoap += "</PUTAREAREQUESTOR>"

oXmlRet := SvcSoapCall(Self,cSoap,; 
	"http://localhost:8059/PUTAREAREQUESTOR",; 
	"DOCUMENT","http://localhost:8059/",,"1.031217",; 
	"http://localhost:8059/ws/TMSCFGUSER.apw")

::Init()
::lPUTAREAREQUESTORRESULT :=  WSAdvValue( oXmlRet,"_PUTAREAREQUESTORRESPONSE:_PUTAREAREQUESTORRESULT:TEXT","boolean",NIL,NIL,NIL,NIL,NIL,NIL) 

END WSMETHOD

oXmlRet := NIL
Return .T.

// WSDL Method PUTCHGUSER of Service WSTMSCFGUSER

WSMETHOD PUTCHGUSER WSSEND oWSUSERDATA,cUSERCODE WSRECEIVE cPUTCHGUSERRESULT WSCLIENT WSTMSCFGUSER
Local cSoap := "" , oXmlRet

BEGIN WSMETHOD

cSoap += '<PUTCHGUSER xmlns="http://localhost:8059/">'
cSoap += WSSoapValue("USERDATA", ::oWSUSERDATA, oWSUSERDATA , "USERSTR", .T. , .F., 0 , NIL, .F.,.F.) 
cSoap += WSSoapValue("USERCODE", ::cUSERCODE, cUSERCODE , "string", .T. , .F., 0 , NIL, .F.,.F.) 
cSoap += "</PUTCHGUSER>"

oXmlRet := SvcSoapCall(Self,cSoap,; 
	"http://localhost:8059/PUTCHGUSER",; 
	"DOCUMENT","http://localhost:8059/",,"1.031217",; 
	"http://localhost:8059/ws/TMSCFGUSER.apw")

::Init()
::cPUTCHGUSERRESULT  :=  WSAdvValue( oXmlRet,"_PUTCHGUSERRESPONSE:_PUTCHGUSERRESULT:TEXT","string",NIL,NIL,NIL,NIL,NIL,NIL) 

END WSMETHOD

oXmlRet := NIL
Return .T.

// WSDL Method PUTNEWUSER of Service WSTMSCFGUSER

WSMETHOD PUTNEWUSER WSSEND oWSUSERDATA WSRECEIVE cPUTNEWUSERRESULT WSCLIENT WSTMSCFGUSER
Local cSoap := "" , oXmlRet

BEGIN WSMETHOD

cSoap += '<PUTNEWUSER xmlns="http://localhost:8059/">'
cSoap += WSSoapValue("USERDATA", ::oWSUSERDATA, oWSUSERDATA , "USERSTR", .T. , .F., 0 , NIL, .F.,.F.) 
cSoap += "</PUTNEWUSER>"

oXmlRet := SvcSoapCall(Self,cSoap,; 
	"http://localhost:8059/PUTNEWUSER",; 
	"DOCUMENT","http://localhost:8059/",,"1.031217",; 
	"http://localhost:8059/ws/TMSCFGUSER.apw")

::Init()
::cPUTNEWUSERRESULT  :=  WSAdvValue( oXmlRet,"_PUTNEWUSERRESPONSE:_PUTNEWUSERRESULT:TEXT","string",NIL,NIL,NIL,NIL,NIL,NIL) 

END WSMETHOD

oXmlRet := NIL
Return .T.


// WSDL Data Structure DLA

WSSTRUCT TMSCFGUSER_DLA
	WSDATA   cDLAADRESS                AS string
	WSDATA   cDLAADRESSSEQ             AS string
	WSDATA   cDLAAREACODE              AS string OPTIONAL
	WSDATA   cDLACITY                  AS string OPTIONAL
	WSDATA   cDLADISTRICT              AS string
	WSDATA   cDLASTATE                 AS string OPTIONAL
	WSDATA   cDLAZIP                   AS string OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPSEND
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT TMSCFGUSER_DLA
	::Init()
Return Self

WSMETHOD INIT WSCLIENT TMSCFGUSER_DLA
Return

WSMETHOD CLONE WSCLIENT TMSCFGUSER_DLA
	Local oClone := TMSCFGUSER_DLA():NEW()
	oClone:cDLAADRESS           := ::cDLAADRESS
	oClone:cDLAADRESSSEQ        := ::cDLAADRESSSEQ
	oClone:cDLAAREACODE         := ::cDLAAREACODE
	oClone:cDLACITY             := ::cDLACITY
	oClone:cDLADISTRICT         := ::cDLADISTRICT
	oClone:cDLASTATE            := ::cDLASTATE
	oClone:cDLAZIP              := ::cDLAZIP
Return oClone

WSMETHOD SOAPSEND WSCLIENT TMSCFGUSER_DLA
	Local cSoap := ""
	cSoap += WSSoapValue("DLAADRESS", ::cDLAADRESS, ::cDLAADRESS , "string", .T. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("DLAADRESSSEQ", ::cDLAADRESSSEQ, ::cDLAADRESSSEQ , "string", .T. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("DLAAREACODE", ::cDLAAREACODE, ::cDLAAREACODE , "string", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("DLACITY", ::cDLACITY, ::cDLACITY , "string", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("DLADISTRICT", ::cDLADISTRICT, ::cDLADISTRICT , "string", .T. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("DLASTATE", ::cDLASTATE, ::cDLASTATE , "string", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("DLAZIP", ::cDLAZIP, ::cDLAZIP , "string", .F. , .F., 0 , NIL, .F.,.F.) 
Return cSoap

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT TMSCFGUSER_DLA
	::Init()
	If oResponse = NIL ; Return ; Endif 
	::cDLAADRESS         :=  WSAdvValue( oResponse,"_DLAADRESS","string",NIL,"Property cDLAADRESS as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::cDLAADRESSSEQ      :=  WSAdvValue( oResponse,"_DLAADRESSSEQ","string",NIL,"Property cDLAADRESSSEQ as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::cDLAAREACODE       :=  WSAdvValue( oResponse,"_DLAAREACODE","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cDLACITY           :=  WSAdvValue( oResponse,"_DLACITY","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cDLADISTRICT       :=  WSAdvValue( oResponse,"_DLADISTRICT","string",NIL,"Property cDLADISTRICT as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::cDLASTATE          :=  WSAdvValue( oResponse,"_DLASTATE","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cDLAZIP            :=  WSAdvValue( oResponse,"_DLAZIP","string",NIL,NIL,NIL,"S",NIL,NIL) 
Return

// WSDL Data Structure ARRAYOFDLA

WSSTRUCT TMSCFGUSER_ARRAYOFDLA
	WSDATA   oWSDLA                    AS TMSCFGUSER_DLA OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT TMSCFGUSER_ARRAYOFDLA
	::Init()
Return Self

WSMETHOD INIT WSCLIENT TMSCFGUSER_ARRAYOFDLA
	::oWSDLA               := {} // Array Of  TMSCFGUSER_DLA():New()
Return

WSMETHOD CLONE WSCLIENT TMSCFGUSER_ARRAYOFDLA
	Local oClone := TMSCFGUSER_ARRAYOFDLA():NEW()
	oClone:oWSDLA := NIL
	If ::oWSDLA <> NIL 
		oClone:oWSDLA := {}
		aEval( ::oWSDLA , { |x| aadd( oClone:oWSDLA , x:Clone() ) } )
	Endif 
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT TMSCFGUSER_ARRAYOFDLA
	Local nRElem1, oNodes1, nTElem1
	::Init()
	If oResponse = NIL ; Return ; Endif 
	oNodes1 :=  WSAdvValue( oResponse,"_DLA","DLA",{},NIL,.T.,"O",NIL,NIL) 
	nTElem1 := len(oNodes1)
	For nRElem1 := 1 to nTElem1 
		If !WSIsNilNode( oNodes1[nRElem1] )
			aadd(::oWSDLA , TMSCFGUSER_DLA():New() )
			::oWSDLA[len(::oWSDLA)]:SoapRecv(oNodes1[nRElem1])
		Endif
	Next
Return

// WSDL Data Structure ARRAYOFBROWSERGENERIC

WSSTRUCT TMSCFGUSER_ARRAYOFBROWSERGENERIC
	WSDATA   oWSBROWSERGENERIC         AS TMSCFGUSER_BROWSERGENERIC OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT TMSCFGUSER_ARRAYOFBROWSERGENERIC
	::Init()
Return Self

WSMETHOD INIT WSCLIENT TMSCFGUSER_ARRAYOFBROWSERGENERIC
	::oWSBROWSERGENERIC    := {} // Array Of  TMSCFGUSER_BROWSERGENERIC():New()
Return

WSMETHOD CLONE WSCLIENT TMSCFGUSER_ARRAYOFBROWSERGENERIC
	Local oClone := TMSCFGUSER_ARRAYOFBROWSERGENERIC():NEW()
	oClone:oWSBROWSERGENERIC := NIL
	If ::oWSBROWSERGENERIC <> NIL 
		oClone:oWSBROWSERGENERIC := {}
		aEval( ::oWSBROWSERGENERIC , { |x| aadd( oClone:oWSBROWSERGENERIC , x:Clone() ) } )
	Endif 
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT TMSCFGUSER_ARRAYOFBROWSERGENERIC
	Local nRElem1, oNodes1, nTElem1
	::Init()
	If oResponse = NIL ; Return ; Endif 
	oNodes1 :=  WSAdvValue( oResponse,"_BROWSERGENERIC","BROWSERGENERIC",{},NIL,.T.,"O",NIL,NIL) 
	nTElem1 := len(oNodes1)
	For nRElem1 := 1 to nTElem1 
		If !WSIsNilNode( oNodes1[nRElem1] )
			aadd(::oWSBROWSERGENERIC , TMSCFGUSER_BROWSERGENERIC():New() )
			::oWSBROWSERGENERIC[len(::oWSBROWSERGENERIC)]:SoapRecv(oNodes1[nRElem1])
		Endif
	Next
Return

// WSDL Data Structure ARRAYOFDUY

WSSTRUCT TMSCFGUSER_ARRAYOFDUY
	WSDATA   oWSDUY                    AS TMSCFGUSER_DUY OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT TMSCFGUSER_ARRAYOFDUY
	::Init()
Return Self

WSMETHOD INIT WSCLIENT TMSCFGUSER_ARRAYOFDUY
	::oWSDUY               := {} // Array Of  TMSCFGUSER_DUY():New()
Return

WSMETHOD CLONE WSCLIENT TMSCFGUSER_ARRAYOFDUY
	Local oClone := TMSCFGUSER_ARRAYOFDUY():NEW()
	oClone:oWSDUY := NIL
	If ::oWSDUY <> NIL 
		oClone:oWSDUY := {}
		aEval( ::oWSDUY , { |x| aadd( oClone:oWSDUY , x:Clone() ) } )
	Endif 
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT TMSCFGUSER_ARRAYOFDUY
	Local nRElem1, oNodes1, nTElem1
	::Init()
	If oResponse = NIL ; Return ; Endif 
	oNodes1 :=  WSAdvValue( oResponse,"_DUY","DUY",{},NIL,.T.,"O",NIL,NIL) 
	nTElem1 := len(oNodes1)
	For nRElem1 := 1 to nTElem1 
		If !WSIsNilNode( oNodes1[nRElem1] )
			aadd(::oWSDUY , TMSCFGUSER_DUY():New() )
			::oWSDUY[len(::oWSDUY)]:SoapRecv(oNodes1[nRElem1])
		Endif
	Next
Return

// WSDL Data Structure USERSTR

WSSTRUCT TMSCFGUSER_USERSTR
	WSDATA   cUSERADRESS               AS string
	WSDATA   cUSERAREACODE             AS string OPTIONAL
	WSDATA   cUSERCGC                  AS string
	WSDATA   cUSERCITY                 AS string
	WSDATA   cUSERDDD                  AS string
	WSDATA   cUSERDISTRICT             AS string
	WSDATA   cUSERLOGIN                AS string
	WSDATA   cUSERMAIL                 AS string
	WSDATA   cUSERNAME                 AS string
	WSDATA   cUSERPSW                  AS string
	WSDATA   cUSERSTATE                AS string
	WSDATA   cUSERTEL                  AS string
	WSDATA   cUSERTRADENAME            AS string
	WSDATA   cUSERZIP                  AS string
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPSEND
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT TMSCFGUSER_USERSTR
	::Init()
Return Self

WSMETHOD INIT WSCLIENT TMSCFGUSER_USERSTR
Return

WSMETHOD CLONE WSCLIENT TMSCFGUSER_USERSTR
	Local oClone := TMSCFGUSER_USERSTR():NEW()
	oClone:cUSERADRESS          := ::cUSERADRESS
	oClone:cUSERAREACODE        := ::cUSERAREACODE
	oClone:cUSERCGC             := ::cUSERCGC
	oClone:cUSERCITY            := ::cUSERCITY
	oClone:cUSERDDD             := ::cUSERDDD
	oClone:cUSERDISTRICT        := ::cUSERDISTRICT
	oClone:cUSERLOGIN           := ::cUSERLOGIN
	oClone:cUSERMAIL            := ::cUSERMAIL
	oClone:cUSERNAME            := ::cUSERNAME
	oClone:cUSERPSW             := ::cUSERPSW
	oClone:cUSERSTATE           := ::cUSERSTATE
	oClone:cUSERTEL             := ::cUSERTEL
	oClone:cUSERTRADENAME       := ::cUSERTRADENAME
	oClone:cUSERZIP             := ::cUSERZIP
Return oClone

WSMETHOD SOAPSEND WSCLIENT TMSCFGUSER_USERSTR
	Local cSoap := ""
	cSoap += WSSoapValue("USERADRESS", ::cUSERADRESS, ::cUSERADRESS , "string", .T. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("USERAREACODE", ::cUSERAREACODE, ::cUSERAREACODE , "string", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("USERCGC", ::cUSERCGC, ::cUSERCGC , "string", .T. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("USERCITY", ::cUSERCITY, ::cUSERCITY , "string", .T. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("USERDDD", ::cUSERDDD, ::cUSERDDD , "string", .T. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("USERDISTRICT", ::cUSERDISTRICT, ::cUSERDISTRICT , "string", .T. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("USERLOGIN", ::cUSERLOGIN, ::cUSERLOGIN , "string", .T. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("USERMAIL", ::cUSERMAIL, ::cUSERMAIL , "string", .T. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("USERNAME", ::cUSERNAME, ::cUSERNAME , "string", .T. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("USERPSW", ::cUSERPSW, ::cUSERPSW , "string", .T. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("USERSTATE", ::cUSERSTATE, ::cUSERSTATE , "string", .T. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("USERTEL", ::cUSERTEL, ::cUSERTEL , "string", .T. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("USERTRADENAME", ::cUSERTRADENAME, ::cUSERTRADENAME , "string", .T. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("USERZIP", ::cUSERZIP, ::cUSERZIP , "string", .T. , .F., 0 , NIL, .F.,.F.) 
Return cSoap

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT TMSCFGUSER_USERSTR
	::Init()
	If oResponse = NIL ; Return ; Endif 
	::cUSERADRESS        :=  WSAdvValue( oResponse,"_USERADRESS","string",NIL,"Property cUSERADRESS as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::cUSERAREACODE      :=  WSAdvValue( oResponse,"_USERAREACODE","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cUSERCGC           :=  WSAdvValue( oResponse,"_USERCGC","string",NIL,"Property cUSERCGC as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::cUSERCITY          :=  WSAdvValue( oResponse,"_USERCITY","string",NIL,"Property cUSERCITY as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::cUSERDDD           :=  WSAdvValue( oResponse,"_USERDDD","string",NIL,"Property cUSERDDD as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::cUSERDISTRICT      :=  WSAdvValue( oResponse,"_USERDISTRICT","string",NIL,"Property cUSERDISTRICT as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::cUSERLOGIN         :=  WSAdvValue( oResponse,"_USERLOGIN","string",NIL,"Property cUSERLOGIN as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::cUSERMAIL          :=  WSAdvValue( oResponse,"_USERMAIL","string",NIL,"Property cUSERMAIL as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::cUSERNAME          :=  WSAdvValue( oResponse,"_USERNAME","string",NIL,"Property cUSERNAME as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::cUSERPSW           :=  WSAdvValue( oResponse,"_USERPSW","string",NIL,"Property cUSERPSW as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::cUSERSTATE         :=  WSAdvValue( oResponse,"_USERSTATE","string",NIL,"Property cUSERSTATE as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::cUSERTEL           :=  WSAdvValue( oResponse,"_USERTEL","string",NIL,"Property cUSERTEL as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::cUSERTRADENAME     :=  WSAdvValue( oResponse,"_USERTRADENAME","string",NIL,"Property cUSERTRADENAME as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::cUSERZIP           :=  WSAdvValue( oResponse,"_USERZIP","string",NIL,"Property cUSERZIP as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
Return

// WSDL Data Structure ARRAYOFBRWHEADER

WSSTRUCT TMSCFGUSER_ARRAYOFBRWHEADER
	WSDATA   oWSBRWHEADER              AS TMSCFGUSER_BRWHEADER OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT TMSCFGUSER_ARRAYOFBRWHEADER
	::Init()
Return Self

WSMETHOD INIT WSCLIENT TMSCFGUSER_ARRAYOFBRWHEADER
	::oWSBRWHEADER         := {} // Array Of  TMSCFGUSER_BRWHEADER():New()
Return

WSMETHOD CLONE WSCLIENT TMSCFGUSER_ARRAYOFBRWHEADER
	Local oClone := TMSCFGUSER_ARRAYOFBRWHEADER():NEW()
	oClone:oWSBRWHEADER := NIL
	If ::oWSBRWHEADER <> NIL 
		oClone:oWSBRWHEADER := {}
		aEval( ::oWSBRWHEADER , { |x| aadd( oClone:oWSBRWHEADER , x:Clone() ) } )
	Endif 
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT TMSCFGUSER_ARRAYOFBRWHEADER
	Local nRElem1, oNodes1, nTElem1
	::Init()
	If oResponse = NIL ; Return ; Endif 
	oNodes1 :=  WSAdvValue( oResponse,"_BRWHEADER","BRWHEADER",{},NIL,.T.,"O",NIL,NIL) 
	nTElem1 := len(oNodes1)
	For nRElem1 := 1 to nTElem1 
		If !WSIsNilNode( oNodes1[nRElem1] )
			aadd(::oWSBRWHEADER , TMSCFGUSER_BRWHEADER():New() )
			::oWSBRWHEADER[len(::oWSBRWHEADER)]:SoapRecv(oNodes1[nRElem1])
		Endif
	Next
Return

// WSDL Data Structure ARRAYOFSX3BOX

WSSTRUCT TMSCFGUSER_ARRAYOFSX3BOX
	WSDATA   oWSSX3BOX                 AS TMSCFGUSER_SX3BOX OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT TMSCFGUSER_ARRAYOFSX3BOX
	::Init()
Return Self

WSMETHOD INIT WSCLIENT TMSCFGUSER_ARRAYOFSX3BOX
	::oWSSX3BOX            := {} // Array Of  TMSCFGUSER_SX3BOX():New()
Return

WSMETHOD CLONE WSCLIENT TMSCFGUSER_ARRAYOFSX3BOX
	Local oClone := TMSCFGUSER_ARRAYOFSX3BOX():NEW()
	oClone:oWSSX3BOX := NIL
	If ::oWSSX3BOX <> NIL 
		oClone:oWSSX3BOX := {}
		aEval( ::oWSSX3BOX , { |x| aadd( oClone:oWSSX3BOX , x:Clone() ) } )
	Endif 
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT TMSCFGUSER_ARRAYOFSX3BOX
	Local nRElem1, oNodes1, nTElem1
	::Init()
	If oResponse = NIL ; Return ; Endif 
	oNodes1 :=  WSAdvValue( oResponse,"_SX3BOX","SX3BOX",{},NIL,.T.,"O",NIL,NIL) 
	nTElem1 := len(oNodes1)
	For nRElem1 := 1 to nTElem1 
		If !WSIsNilNode( oNodes1[nRElem1] )
			aadd(::oWSSX3BOX , TMSCFGUSER_SX3BOX():New() )
			::oWSSX3BOX[len(::oWSSX3BOX)]:SoapRecv(oNodes1[nRElem1])
		Endif
	Next
Return

// WSDL Data Structure TRGRESULT

WSSTRUCT TMSCFGUSER_TRGRESULT
	WSDATA   cTRGVALUE01               AS string
	WSDATA   cTRGVALUE02               AS string
	WSDATA   cTRGVALUE03               AS string
	WSDATA   cTRGVALUE04               AS string
	WSDATA   cTRGVALUE05               AS string
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT TMSCFGUSER_TRGRESULT
	::Init()
Return Self

WSMETHOD INIT WSCLIENT TMSCFGUSER_TRGRESULT
Return

WSMETHOD CLONE WSCLIENT TMSCFGUSER_TRGRESULT
	Local oClone := TMSCFGUSER_TRGRESULT():NEW()
	oClone:cTRGVALUE01          := ::cTRGVALUE01
	oClone:cTRGVALUE02          := ::cTRGVALUE02
	oClone:cTRGVALUE03          := ::cTRGVALUE03
	oClone:cTRGVALUE04          := ::cTRGVALUE04
	oClone:cTRGVALUE05          := ::cTRGVALUE05
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT TMSCFGUSER_TRGRESULT
	::Init()
	If oResponse = NIL ; Return ; Endif 
	::cTRGVALUE01        :=  WSAdvValue( oResponse,"_TRGVALUE01","string",NIL,"Property cTRGVALUE01 as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::cTRGVALUE02        :=  WSAdvValue( oResponse,"_TRGVALUE02","string",NIL,"Property cTRGVALUE02 as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::cTRGVALUE03        :=  WSAdvValue( oResponse,"_TRGVALUE03","string",NIL,"Property cTRGVALUE03 as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::cTRGVALUE04        :=  WSAdvValue( oResponse,"_TRGVALUE04","string",NIL,"Property cTRGVALUE04 as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::cTRGVALUE05        :=  WSAdvValue( oResponse,"_TRGVALUE05","string",NIL,"Property cTRGVALUE05 as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
Return

// WSDL Data Structure BROWSERGENERIC

WSSTRUCT TMSCFGUSER_BROWSERGENERIC
	WSDATA   cBGCODE                   AS string
	WSDATA   cBGDESCRIPTION            AS string
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT TMSCFGUSER_BROWSERGENERIC
	::Init()
Return Self

WSMETHOD INIT WSCLIENT TMSCFGUSER_BROWSERGENERIC
Return

WSMETHOD CLONE WSCLIENT TMSCFGUSER_BROWSERGENERIC
	Local oClone := TMSCFGUSER_BROWSERGENERIC():NEW()
	oClone:cBGCODE              := ::cBGCODE
	oClone:cBGDESCRIPTION       := ::cBGDESCRIPTION
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT TMSCFGUSER_BROWSERGENERIC
	::Init()
	If oResponse = NIL ; Return ; Endif 
	::cBGCODE            :=  WSAdvValue( oResponse,"_BGCODE","string",NIL,"Property cBGCODE as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::cBGDESCRIPTION     :=  WSAdvValue( oResponse,"_BGDESCRIPTION","string",NIL,"Property cBGDESCRIPTION as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
Return

// WSDL Data Structure DUY

WSSTRUCT TMSCFGUSER_DUY
	WSDATA   cDUYAREAGROUP             AS string
	WSDATA   cDUYDESCRIPTION           AS string
	WSDATA   cDUYSTATE                 AS string
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT TMSCFGUSER_DUY
	::Init()
Return Self

WSMETHOD INIT WSCLIENT TMSCFGUSER_DUY
Return

WSMETHOD CLONE WSCLIENT TMSCFGUSER_DUY
	Local oClone := TMSCFGUSER_DUY():NEW()
	oClone:cDUYAREAGROUP        := ::cDUYAREAGROUP
	oClone:cDUYDESCRIPTION      := ::cDUYDESCRIPTION
	oClone:cDUYSTATE            := ::cDUYSTATE
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT TMSCFGUSER_DUY
	::Init()
	If oResponse = NIL ; Return ; Endif 
	::cDUYAREAGROUP      :=  WSAdvValue( oResponse,"_DUYAREAGROUP","string",NIL,"Property cDUYAREAGROUP as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::cDUYDESCRIPTION    :=  WSAdvValue( oResponse,"_DUYDESCRIPTION","string",NIL,"Property cDUYDESCRIPTION as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::cDUYSTATE          :=  WSAdvValue( oResponse,"_DUYSTATE","string",NIL,"Property cDUYSTATE as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
Return

// WSDL Data Structure BRWHEADER

WSSTRUCT TMSCFGUSER_BRWHEADER
	WSDATA   cHEADERCOMBOBOX           AS string OPTIONAL
	WSDATA   nHEADERDEC                AS integer
	WSDATA   cHEADERF3                 AS string OPTIONAL
	WSDATA   cHEADERFIELD              AS string
	WSDATA   lHEADEROBLIG              AS boolean OPTIONAL
	WSDATA   cHEADERPICTURE            AS string
	WSDATA   nHEADERSIZE               AS integer
	WSDATA   cHEADERTITLE              AS string
	WSDATA   cHEADERTYPE               AS string
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT TMSCFGUSER_BRWHEADER
	::Init()
Return Self

WSMETHOD INIT WSCLIENT TMSCFGUSER_BRWHEADER
Return

WSMETHOD CLONE WSCLIENT TMSCFGUSER_BRWHEADER
	Local oClone := TMSCFGUSER_BRWHEADER():NEW()
	oClone:cHEADERCOMBOBOX      := ::cHEADERCOMBOBOX
	oClone:nHEADERDEC           := ::nHEADERDEC
	oClone:cHEADERF3            := ::cHEADERF3
	oClone:cHEADERFIELD         := ::cHEADERFIELD
	oClone:lHEADEROBLIG         := ::lHEADEROBLIG
	oClone:cHEADERPICTURE       := ::cHEADERPICTURE
	oClone:nHEADERSIZE          := ::nHEADERSIZE
	oClone:cHEADERTITLE         := ::cHEADERTITLE
	oClone:cHEADERTYPE          := ::cHEADERTYPE
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT TMSCFGUSER_BRWHEADER
	::Init()
	If oResponse = NIL ; Return ; Endif 
	::cHEADERCOMBOBOX    :=  WSAdvValue( oResponse,"_HEADERCOMBOBOX","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::nHEADERDEC         :=  WSAdvValue( oResponse,"_HEADERDEC","integer",NIL,"Property nHEADERDEC as s:integer on SOAP Response not found.",NIL,"N",NIL,NIL) 
	::cHEADERF3          :=  WSAdvValue( oResponse,"_HEADERF3","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cHEADERFIELD       :=  WSAdvValue( oResponse,"_HEADERFIELD","string",NIL,"Property cHEADERFIELD as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::lHEADEROBLIG       :=  WSAdvValue( oResponse,"_HEADEROBLIG","boolean",NIL,NIL,NIL,"L",NIL,NIL) 
	::cHEADERPICTURE     :=  WSAdvValue( oResponse,"_HEADERPICTURE","string",NIL,"Property cHEADERPICTURE as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::nHEADERSIZE        :=  WSAdvValue( oResponse,"_HEADERSIZE","integer",NIL,"Property nHEADERSIZE as s:integer on SOAP Response not found.",NIL,"N",NIL,NIL) 
	::cHEADERTITLE       :=  WSAdvValue( oResponse,"_HEADERTITLE","string",NIL,"Property cHEADERTITLE as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::cHEADERTYPE        :=  WSAdvValue( oResponse,"_HEADERTYPE","string",NIL,"Property cHEADERTYPE as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
Return

// WSDL Data Structure SX3BOX

WSSTRUCT TMSCFGUSER_SX3BOX
	WSDATA   cSBDESCRIPTION            AS string
	WSDATA   cSBVALUE01                AS string
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT TMSCFGUSER_SX3BOX
	::Init()
Return Self

WSMETHOD INIT WSCLIENT TMSCFGUSER_SX3BOX
Return

WSMETHOD CLONE WSCLIENT TMSCFGUSER_SX3BOX
	Local oClone := TMSCFGUSER_SX3BOX():NEW()
	oClone:cSBDESCRIPTION       := ::cSBDESCRIPTION
	oClone:cSBVALUE01           := ::cSBVALUE01
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT TMSCFGUSER_SX3BOX
	::Init()
	If oResponse = NIL ; Return ; Endif 
	::cSBDESCRIPTION     :=  WSAdvValue( oResponse,"_SBDESCRIPTION","string",NIL,"Property cSBDESCRIPTION as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::cSBVALUE01         :=  WSAdvValue( oResponse,"_SBVALUE01","string",NIL,"Property cSBVALUE01 as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
Return


