#INCLUDE "protheus.ch"
#INCLUDE "apwebsrv.ch"

/* ===============================================================================
WSDL Location    http://localhost:8059/ws/PMSPROJECTS.apw?WSDL
Gerado em        12/14/20 11:23:00
Observações      Código-Fonte gerado por ADVPL WSDL Client 1.120703
                 Alterações neste arquivo podem causar funcionamento incorreto
                 e serão perdidas caso o código-fonte seja gerado novamente.
=============================================================================== */

User Function _KCQMKKU ; Return  // "dummy" function - Internal Use 

/* -------------------------------------------------------------------------------
WSDL Service WSPMSPROJECTS
------------------------------------------------------------------------------- */

WSCLIENT WSPMSPROJECTS

	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD RESET
	WSMETHOD CLONE
	WSMETHOD GETEVENTLIST
	WSMETHOD GETEXPENSELIST
	WSMETHOD GETHEADER
	WSMETHOD GETHEADERPMS
	WSMETHOD GETPROJECT
	WSMETHOD GETPROJECTSTRUCT
	WSMETHOD GETPROJECTTOPHEADER
	WSMETHOD GETRELATIONSHIPLIST
	WSMETHOD GETTASKALLOCATIONLIST
	WSMETHOD GETTASKDETAIL
	WSMETHOD GETTASKLIST
	WSMETHOD GETTASKPRODUCTSLIST
	WSMETHOD GETWBSDETAIL

	WSDATA   _URL                      AS String
	WSDATA   _HEADOUT                  AS Array of String
	WSDATA   _COOKIES                  AS Array of String
	WSDATA   cUSERCODE                 AS string
	WSDATA   cPROTHEUSUSERCODE         AS string
	WSDATA   cPROJECTCODE              AS string
	WSDATA   cWBSTASKCODE              AS string
	WSDATA   cWBSORTASK                AS string
	WSDATA   oWSGETEVENTLISTRESULT     AS PMSPROJECTS_ARRAYOFEVENTLISTVIEW
	WSDATA   cTASKCODE                 AS string
	WSDATA   oWSGETEXPENSELISTRESULT   AS PMSPROJECTS_ARRAYOFEXPENSELISTVIEW
	WSDATA   cHEADERTYPE               AS string
	WSDATA   oWSGETHEADERRESULT        AS PMSPROJECTS_ARRAYOFBRWHEADER
	WSDATA   oWSGETHEADERPMSRESULT     AS PMSPROJECTS_ARRAYOFBRWHEADERPMS
	WSDATA   dDATEINITIAL              AS date
	WSDATA   dDATEFINAL                AS date
	WSDATA   cPROJECTINITIAL           AS string
	WSDATA   cPROJECTFINAL             AS string
	WSDATA   cCLIENTINITIAL            AS string
	WSDATA   cCLIENTFINAL              AS string
	WSDATA   nPAGELEN                  AS integer
	WSDATA   nPAGEFIRST                AS integer
	WSDATA   cQRYADD                   AS string
	WSDATA   oWSGETPROJECTRESULT       AS PMSPROJECTS_ARRAYOFPROJECTLISTVIEW
	WSDATA   cWBSFATHER                AS string
	WSDATA   cTARGET                   AS string
	WSDATA   cWBSTARGET                AS string
	WSDATA   oWSGETPROJECTSTRUCTRESULT AS PMSPROJECTS_ARRAYOFPROJECTSTRUCTVIEW
	WSDATA   oWSGETPROJECTTOPHEADERRESULT AS PMSPROJECTS_ARRAYOFPROJECTHEADERVIEW
	WSDATA   oWSGETRELATIONSHIPLISTRESULT AS PMSPROJECTS_ARRAYOFRELATIONSHIPLISTVIEW
	WSDATA   oWSGETTASKALLOCATIONLISTRESULT AS PMSPROJECTS_ARRAYOFTASKALLOCATIONVIEW
	WSDATA   oWSGETTASKDETAILRESULT    AS PMSPROJECTS_ARRAYOFTASKDETAILVIEW
	WSDATA   oWSGETTASKLISTRESULT      AS PMSPROJECTS_ARRAYOFTASKLISTVIEW
	WSDATA   oWSGETTASKPRODUCTSLISTRESULT AS PMSPROJECTS_ARRAYOFTASKPRODUCTSVIEW
	WSDATA   cWBSCODE                  AS string
	WSDATA   oWSGETWBSDETAILRESULT     AS PMSPROJECTS_ARRAYOFWBSDETAILVIEW

ENDWSCLIENT

WSMETHOD NEW WSCLIENT WSPMSPROJECTS
::Init()
If !FindFunction("XMLCHILDEX")
	UserException("O Código-Fonte Client atual requer os executáveis do Protheus Build [7.00.191205P-20201009] ou superior. Atualize o Protheus ou gere o Código-Fonte novamente utilizando o Build atual.")
EndIf
Return Self

WSMETHOD INIT WSCLIENT WSPMSPROJECTS
	::oWSGETEVENTLISTRESULT := PMSPROJECTS_ARRAYOFEVENTLISTVIEW():New()
	::oWSGETEXPENSELISTRESULT := PMSPROJECTS_ARRAYOFEXPENSELISTVIEW():New()
	::oWSGETHEADERRESULT := PMSPROJECTS_ARRAYOFBRWHEADER():New()
	::oWSGETHEADERPMSRESULT := PMSPROJECTS_ARRAYOFBRWHEADERPMS():New()
	::oWSGETPROJECTRESULT := PMSPROJECTS_ARRAYOFPROJECTLISTVIEW():New()
	::oWSGETPROJECTSTRUCTRESULT := PMSPROJECTS_ARRAYOFPROJECTSTRUCTVIEW():New()
	::oWSGETPROJECTTOPHEADERRESULT := PMSPROJECTS_ARRAYOFPROJECTHEADERVIEW():New()
	::oWSGETRELATIONSHIPLISTRESULT := PMSPROJECTS_ARRAYOFRELATIONSHIPLISTVIEW():New()
	::oWSGETTASKALLOCATIONLISTRESULT := PMSPROJECTS_ARRAYOFTASKALLOCATIONVIEW():New()
	::oWSGETTASKDETAILRESULT := PMSPROJECTS_ARRAYOFTASKDETAILVIEW():New()
	::oWSGETTASKLISTRESULT := PMSPROJECTS_ARRAYOFTASKLISTVIEW():New()
	::oWSGETTASKPRODUCTSLISTRESULT := PMSPROJECTS_ARRAYOFTASKPRODUCTSVIEW():New()
	::oWSGETWBSDETAILRESULT := PMSPROJECTS_ARRAYOFWBSDETAILVIEW():New()
Return

WSMETHOD RESET WSCLIENT WSPMSPROJECTS
	::cUSERCODE          := NIL 
	::cPROTHEUSUSERCODE  := NIL 
	::cPROJECTCODE       := NIL 
	::cWBSTASKCODE       := NIL 
	::cWBSORTASK         := NIL 
	::oWSGETEVENTLISTRESULT := NIL 
	::cTASKCODE          := NIL 
	::oWSGETEXPENSELISTRESULT := NIL 
	::cHEADERTYPE        := NIL 
	::oWSGETHEADERRESULT := NIL 
	::oWSGETHEADERPMSRESULT := NIL 
	::dDATEINITIAL       := NIL 
	::dDATEFINAL         := NIL 
	::cPROJECTINITIAL    := NIL 
	::cPROJECTFINAL      := NIL 
	::cCLIENTINITIAL     := NIL 
	::cCLIENTFINAL       := NIL 
	::nPAGELEN           := NIL 
	::nPAGEFIRST         := NIL 
	::cQRYADD            := NIL 
	::oWSGETPROJECTRESULT := NIL 
	::cWBSFATHER         := NIL 
	::cTARGET            := NIL 
	::cWBSTARGET         := NIL 
	::oWSGETPROJECTSTRUCTRESULT := NIL 
	::oWSGETPROJECTTOPHEADERRESULT := NIL 
	::oWSGETRELATIONSHIPLISTRESULT := NIL 
	::oWSGETTASKALLOCATIONLISTRESULT := NIL 
	::oWSGETTASKDETAILRESULT := NIL 
	::oWSGETTASKLISTRESULT := NIL 
	::oWSGETTASKPRODUCTSLISTRESULT := NIL 
	::cWBSCODE           := NIL 
	::oWSGETWBSDETAILRESULT := NIL 
	::Init()
Return

WSMETHOD CLONE WSCLIENT WSPMSPROJECTS
Local oClone := WSPMSPROJECTS():New()
	oClone:_URL          := ::_URL 
	oClone:cUSERCODE     := ::cUSERCODE
	oClone:cPROTHEUSUSERCODE := ::cPROTHEUSUSERCODE
	oClone:cPROJECTCODE  := ::cPROJECTCODE
	oClone:cWBSTASKCODE  := ::cWBSTASKCODE
	oClone:cWBSORTASK    := ::cWBSORTASK
	oClone:oWSGETEVENTLISTRESULT :=  IIF(::oWSGETEVENTLISTRESULT = NIL , NIL ,::oWSGETEVENTLISTRESULT:Clone() )
	oClone:cTASKCODE     := ::cTASKCODE
	oClone:oWSGETEXPENSELISTRESULT :=  IIF(::oWSGETEXPENSELISTRESULT = NIL , NIL ,::oWSGETEXPENSELISTRESULT:Clone() )
	oClone:cHEADERTYPE   := ::cHEADERTYPE
	oClone:oWSGETHEADERRESULT :=  IIF(::oWSGETHEADERRESULT = NIL , NIL ,::oWSGETHEADERRESULT:Clone() )
	oClone:oWSGETHEADERPMSRESULT :=  IIF(::oWSGETHEADERPMSRESULT = NIL , NIL ,::oWSGETHEADERPMSRESULT:Clone() )
	oClone:dDATEINITIAL  := ::dDATEINITIAL
	oClone:dDATEFINAL    := ::dDATEFINAL
	oClone:cPROJECTINITIAL := ::cPROJECTINITIAL
	oClone:cPROJECTFINAL := ::cPROJECTFINAL
	oClone:cCLIENTINITIAL := ::cCLIENTINITIAL
	oClone:cCLIENTFINAL  := ::cCLIENTFINAL
	oClone:nPAGELEN      := ::nPAGELEN
	oClone:nPAGEFIRST    := ::nPAGEFIRST
	oClone:cQRYADD       := ::cQRYADD
	oClone:oWSGETPROJECTRESULT :=  IIF(::oWSGETPROJECTRESULT = NIL , NIL ,::oWSGETPROJECTRESULT:Clone() )
	oClone:cWBSFATHER    := ::cWBSFATHER
	oClone:cTARGET       := ::cTARGET
	oClone:cWBSTARGET    := ::cWBSTARGET
	oClone:oWSGETPROJECTSTRUCTRESULT :=  IIF(::oWSGETPROJECTSTRUCTRESULT = NIL , NIL ,::oWSGETPROJECTSTRUCTRESULT:Clone() )
	oClone:oWSGETPROJECTTOPHEADERRESULT :=  IIF(::oWSGETPROJECTTOPHEADERRESULT = NIL , NIL ,::oWSGETPROJECTTOPHEADERRESULT:Clone() )
	oClone:oWSGETRELATIONSHIPLISTRESULT :=  IIF(::oWSGETRELATIONSHIPLISTRESULT = NIL , NIL ,::oWSGETRELATIONSHIPLISTRESULT:Clone() )
	oClone:oWSGETTASKALLOCATIONLISTRESULT :=  IIF(::oWSGETTASKALLOCATIONLISTRESULT = NIL , NIL ,::oWSGETTASKALLOCATIONLISTRESULT:Clone() )
	oClone:oWSGETTASKDETAILRESULT :=  IIF(::oWSGETTASKDETAILRESULT = NIL , NIL ,::oWSGETTASKDETAILRESULT:Clone() )
	oClone:oWSGETTASKLISTRESULT :=  IIF(::oWSGETTASKLISTRESULT = NIL , NIL ,::oWSGETTASKLISTRESULT:Clone() )
	oClone:oWSGETTASKPRODUCTSLISTRESULT :=  IIF(::oWSGETTASKPRODUCTSLISTRESULT = NIL , NIL ,::oWSGETTASKPRODUCTSLISTRESULT:Clone() )
	oClone:cWBSCODE      := ::cWBSCODE
	oClone:oWSGETWBSDETAILRESULT :=  IIF(::oWSGETWBSDETAILRESULT = NIL , NIL ,::oWSGETWBSDETAILRESULT:Clone() )
Return oClone

// WSDL Method GETEVENTLIST of Service WSPMSPROJECTS

WSMETHOD GETEVENTLIST WSSEND cUSERCODE,cPROTHEUSUSERCODE,cPROJECTCODE,cWBSTASKCODE,cWBSORTASK WSRECEIVE oWSGETEVENTLISTRESULT WSCLIENT WSPMSPROJECTS
Local cSoap := "" , oXmlRet

BEGIN WSMETHOD

cSoap += '<GETEVENTLIST xmlns="http://localhost:8059/">'
cSoap += WSSoapValue("USERCODE", ::cUSERCODE, cUSERCODE , "string", .T. , .F., 0 , NIL, .F.,.F.) 
cSoap += WSSoapValue("PROTHEUSUSERCODE", ::cPROTHEUSUSERCODE, cPROTHEUSUSERCODE , "string", .T. , .F., 0 , NIL, .F.,.F.) 
cSoap += WSSoapValue("PROJECTCODE", ::cPROJECTCODE, cPROJECTCODE , "string", .T. , .F., 0 , NIL, .F.,.F.) 
cSoap += WSSoapValue("WBSTASKCODE", ::cWBSTASKCODE, cWBSTASKCODE , "string", .T. , .F., 0 , NIL, .F.,.F.) 
cSoap += WSSoapValue("WBSORTASK", ::cWBSORTASK, cWBSORTASK , "string", .T. , .F., 0 , NIL, .F.,.F.) 
cSoap += "</GETEVENTLIST>"

oXmlRet := SvcSoapCall(Self,cSoap,; 
	"http://localhost:8059/GETEVENTLIST",; 
	"DOCUMENT","http://localhost:8059/",,"1.031217",; 
	"http://localhost:8059/ws/PMSPROJECTS.apw")

::Init()
::oWSGETEVENTLISTRESULT:SoapRecv( WSAdvValue( oXmlRet,"_GETEVENTLISTRESPONSE:_GETEVENTLISTRESULT","ARRAYOFEVENTLISTVIEW",NIL,NIL,NIL,NIL,NIL,NIL) )

END WSMETHOD

oXmlRet := NIL
Return .T.

// WSDL Method GETEXPENSELIST of Service WSPMSPROJECTS

WSMETHOD GETEXPENSELIST WSSEND cUSERCODE,cPROTHEUSUSERCODE,cPROJECTCODE,cTASKCODE WSRECEIVE oWSGETEXPENSELISTRESULT WSCLIENT WSPMSPROJECTS
Local cSoap := "" , oXmlRet

BEGIN WSMETHOD

cSoap += '<GETEXPENSELIST xmlns="http://localhost:8059/">'
cSoap += WSSoapValue("USERCODE", ::cUSERCODE, cUSERCODE , "string", .T. , .F., 0 , NIL, .F.,.F.) 
cSoap += WSSoapValue("PROTHEUSUSERCODE", ::cPROTHEUSUSERCODE, cPROTHEUSUSERCODE , "string", .T. , .F., 0 , NIL, .F.,.F.) 
cSoap += WSSoapValue("PROJECTCODE", ::cPROJECTCODE, cPROJECTCODE , "string", .T. , .F., 0 , NIL, .F.,.F.) 
cSoap += WSSoapValue("TASKCODE", ::cTASKCODE, cTASKCODE , "string", .T. , .F., 0 , NIL, .F.,.F.) 
cSoap += "</GETEXPENSELIST>"

oXmlRet := SvcSoapCall(Self,cSoap,; 
	"http://localhost:8059/GETEXPENSELIST",; 
	"DOCUMENT","http://localhost:8059/",,"1.031217",; 
	"http://localhost:8059/ws/PMSPROJECTS.apw")

::Init()
::oWSGETEXPENSELISTRESULT:SoapRecv( WSAdvValue( oXmlRet,"_GETEXPENSELISTRESPONSE:_GETEXPENSELISTRESULT","ARRAYOFEXPENSELISTVIEW",NIL,NIL,NIL,NIL,NIL,NIL) )

END WSMETHOD

oXmlRet := NIL
Return .T.

// WSDL Method GETHEADER of Service WSPMSPROJECTS

WSMETHOD GETHEADER WSSEND cHEADERTYPE WSRECEIVE oWSGETHEADERRESULT WSCLIENT WSPMSPROJECTS
Local cSoap := "" , oXmlRet

BEGIN WSMETHOD

cSoap += '<GETHEADER xmlns="http://localhost:8059/">'
cSoap += WSSoapValue("HEADERTYPE", ::cHEADERTYPE, cHEADERTYPE , "string", .T. , .F., 0 , NIL, .F.,.F.) 
cSoap += "</GETHEADER>"

oXmlRet := SvcSoapCall(Self,cSoap,; 
	"http://localhost:8059/GETHEADER",; 
	"DOCUMENT","http://localhost:8059/",,"1.031217",; 
	"http://localhost:8059/ws/PMSPROJECTS.apw")

::Init()
::oWSGETHEADERRESULT:SoapRecv( WSAdvValue( oXmlRet,"_GETHEADERRESPONSE:_GETHEADERRESULT","ARRAYOFBRWHEADER",NIL,NIL,NIL,NIL,NIL,NIL) )

END WSMETHOD

oXmlRet := NIL
Return .T.

// WSDL Method GETHEADERPMS of Service WSPMSPROJECTS

WSMETHOD GETHEADERPMS WSSEND cHEADERTYPE WSRECEIVE oWSGETHEADERPMSRESULT WSCLIENT WSPMSPROJECTS
Local cSoap := "" , oXmlRet

BEGIN WSMETHOD

cSoap += '<GETHEADERPMS xmlns="http://localhost:8059/">'
cSoap += WSSoapValue("HEADERTYPE", ::cHEADERTYPE, cHEADERTYPE , "string", .T. , .F., 0 , NIL, .F.,.F.) 
cSoap += "</GETHEADERPMS>"

oXmlRet := SvcSoapCall(Self,cSoap,; 
	"http://localhost:8059/GETHEADERPMS",; 
	"DOCUMENT","http://localhost:8059/",,"1.031217",; 
	"http://localhost:8059/ws/PMSPROJECTS.apw")

::Init()
::oWSGETHEADERPMSRESULT:SoapRecv( WSAdvValue( oXmlRet,"_GETHEADERPMSRESPONSE:_GETHEADERPMSRESULT","ARRAYOFBRWHEADERPMS",NIL,NIL,NIL,NIL,NIL,NIL) )

END WSMETHOD

oXmlRet := NIL
Return .T.

// WSDL Method GETPROJECT of Service WSPMSPROJECTS

WSMETHOD GETPROJECT WSSEND cUSERCODE,cPROTHEUSUSERCODE,dDATEINITIAL,dDATEFINAL,cPROJECTINITIAL,cPROJECTFINAL,cCLIENTINITIAL,cCLIENTFINAL,nPAGELEN,nPAGEFIRST,cQRYADD WSRECEIVE oWSGETPROJECTRESULT WSCLIENT WSPMSPROJECTS
Local cSoap := "" , oXmlRet

BEGIN WSMETHOD

cSoap += '<GETPROJECT xmlns="http://localhost:8059/">'
cSoap += WSSoapValue("USERCODE", ::cUSERCODE, cUSERCODE , "string", .T. , .F., 0 , NIL, .F.,.F.) 
cSoap += WSSoapValue("PROTHEUSUSERCODE", ::cPROTHEUSUSERCODE, cPROTHEUSUSERCODE , "string", .T. , .F., 0 , NIL, .F.,.F.) 
cSoap += WSSoapValue("DATEINITIAL", ::dDATEINITIAL, dDATEINITIAL , "date", .T. , .F., 0 , NIL, .F.,.F.) 
cSoap += WSSoapValue("DATEFINAL", ::dDATEFINAL, dDATEFINAL , "date", .T. , .F., 0 , NIL, .F.,.F.) 
cSoap += WSSoapValue("PROJECTINITIAL", ::cPROJECTINITIAL, cPROJECTINITIAL , "string", .T. , .F., 0 , NIL, .F.,.F.) 
cSoap += WSSoapValue("PROJECTFINAL", ::cPROJECTFINAL, cPROJECTFINAL , "string", .T. , .F., 0 , NIL, .F.,.F.) 
cSoap += WSSoapValue("CLIENTINITIAL", ::cCLIENTINITIAL, cCLIENTINITIAL , "string", .T. , .F., 0 , NIL, .F.,.F.) 
cSoap += WSSoapValue("CLIENTFINAL", ::cCLIENTFINAL, cCLIENTFINAL , "string", .T. , .F., 0 , NIL, .F.,.F.) 
cSoap += WSSoapValue("PAGELEN", ::nPAGELEN, nPAGELEN , "integer", .F. , .F., 0 , NIL, .F.,.F.) 
cSoap += WSSoapValue("PAGEFIRST", ::nPAGEFIRST, nPAGEFIRST , "integer", .F. , .F., 0 , NIL, .F.,.F.) 
cSoap += WSSoapValue("QRYADD", ::cQRYADD, cQRYADD , "string", .F. , .F., 0 , NIL, .F.,.F.) 
cSoap += "</GETPROJECT>"

oXmlRet := SvcSoapCall(Self,cSoap,; 
	"http://localhost:8059/GETPROJECT",; 
	"DOCUMENT","http://localhost:8059/",,"1.031217",; 
	"http://localhost:8059/ws/PMSPROJECTS.apw")

::Init()
::oWSGETPROJECTRESULT:SoapRecv( WSAdvValue( oXmlRet,"_GETPROJECTRESPONSE:_GETPROJECTRESULT","ARRAYOFPROJECTLISTVIEW",NIL,NIL,NIL,NIL,NIL,NIL) )

END WSMETHOD

oXmlRet := NIL
Return .T.

// WSDL Method GETPROJECTSTRUCT of Service WSPMSPROJECTS

WSMETHOD GETPROJECTSTRUCT WSSEND cUSERCODE,cPROTHEUSUSERCODE,cPROJECTCODE,cWBSFATHER,cTARGET,cWBSTARGET,dDATEINITIAL,dDATEFINAL WSRECEIVE oWSGETPROJECTSTRUCTRESULT WSCLIENT WSPMSPROJECTS
Local cSoap := "" , oXmlRet

BEGIN WSMETHOD

cSoap += '<GETPROJECTSTRUCT xmlns="http://localhost:8059/">'
cSoap += WSSoapValue("USERCODE", ::cUSERCODE, cUSERCODE , "string", .T. , .F., 0 , NIL, .F.,.F.) 
cSoap += WSSoapValue("PROTHEUSUSERCODE", ::cPROTHEUSUSERCODE, cPROTHEUSUSERCODE , "string", .T. , .F., 0 , NIL, .F.,.F.) 
cSoap += WSSoapValue("PROJECTCODE", ::cPROJECTCODE, cPROJECTCODE , "string", .T. , .F., 0 , NIL, .F.,.F.) 
cSoap += WSSoapValue("WBSFATHER", ::cWBSFATHER, cWBSFATHER , "string", .T. , .F., 0 , NIL, .F.,.F.) 
cSoap += WSSoapValue("TARGET", ::cTARGET, cTARGET , "string", .F. , .F., 0 , NIL, .F.,.F.) 
cSoap += WSSoapValue("WBSTARGET", ::cWBSTARGET, cWBSTARGET , "string", .F. , .F., 0 , NIL, .F.,.F.) 
cSoap += WSSoapValue("DATEINITIAL", ::dDATEINITIAL, dDATEINITIAL , "date", .T. , .F., 0 , NIL, .F.,.F.) 
cSoap += WSSoapValue("DATEFINAL", ::dDATEFINAL, dDATEFINAL , "date", .T. , .F., 0 , NIL, .F.,.F.) 
cSoap += "</GETPROJECTSTRUCT>"

oXmlRet := SvcSoapCall(Self,cSoap,; 
	"http://localhost:8059/GETPROJECTSTRUCT",; 
	"DOCUMENT","http://localhost:8059/",,"1.031217",; 
	"http://localhost:8059/ws/PMSPROJECTS.apw")

::Init()
::oWSGETPROJECTSTRUCTRESULT:SoapRecv( WSAdvValue( oXmlRet,"_GETPROJECTSTRUCTRESPONSE:_GETPROJECTSTRUCTRESULT","ARRAYOFPROJECTSTRUCTVIEW",NIL,NIL,NIL,NIL,NIL,NIL) )

END WSMETHOD

oXmlRet := NIL
Return .T.

// WSDL Method GETPROJECTTOPHEADER of Service WSPMSPROJECTS

WSMETHOD GETPROJECTTOPHEADER WSSEND cUSERCODE,cPROTHEUSUSERCODE,cPROJECTCODE,cWBSFATHER WSRECEIVE oWSGETPROJECTTOPHEADERRESULT WSCLIENT WSPMSPROJECTS
Local cSoap := "" , oXmlRet

BEGIN WSMETHOD

cSoap += '<GETPROJECTTOPHEADER xmlns="http://localhost:8059/">'
cSoap += WSSoapValue("USERCODE", ::cUSERCODE, cUSERCODE , "string", .T. , .F., 0 , NIL, .F.,.F.) 
cSoap += WSSoapValue("PROTHEUSUSERCODE", ::cPROTHEUSUSERCODE, cPROTHEUSUSERCODE , "string", .T. , .F., 0 , NIL, .F.,.F.) 
cSoap += WSSoapValue("PROJECTCODE", ::cPROJECTCODE, cPROJECTCODE , "string", .T. , .F., 0 , NIL, .F.,.F.) 
cSoap += WSSoapValue("WBSFATHER", ::cWBSFATHER, cWBSFATHER , "string", .T. , .F., 0 , NIL, .F.,.F.) 
cSoap += "</GETPROJECTTOPHEADER>"

oXmlRet := SvcSoapCall(Self,cSoap,; 
	"http://localhost:8059/GETPROJECTTOPHEADER",; 
	"DOCUMENT","http://localhost:8059/",,"1.031217",; 
	"http://localhost:8059/ws/PMSPROJECTS.apw")

::Init()
::oWSGETPROJECTTOPHEADERRESULT:SoapRecv( WSAdvValue( oXmlRet,"_GETPROJECTTOPHEADERRESPONSE:_GETPROJECTTOPHEADERRESULT","ARRAYOFPROJECTHEADERVIEW",NIL,NIL,NIL,NIL,NIL,NIL) )

END WSMETHOD

oXmlRet := NIL
Return .T.

// WSDL Method GETRELATIONSHIPLIST of Service WSPMSPROJECTS

WSMETHOD GETRELATIONSHIPLIST WSSEND cUSERCODE,cPROTHEUSUSERCODE,cPROJECTCODE,cTASKCODE WSRECEIVE oWSGETRELATIONSHIPLISTRESULT WSCLIENT WSPMSPROJECTS
Local cSoap := "" , oXmlRet

BEGIN WSMETHOD

cSoap += '<GETRELATIONSHIPLIST xmlns="http://localhost:8059/">'
cSoap += WSSoapValue("USERCODE", ::cUSERCODE, cUSERCODE , "string", .T. , .F., 0 , NIL, .F.,.F.) 
cSoap += WSSoapValue("PROTHEUSUSERCODE", ::cPROTHEUSUSERCODE, cPROTHEUSUSERCODE , "string", .T. , .F., 0 , NIL, .F.,.F.) 
cSoap += WSSoapValue("PROJECTCODE", ::cPROJECTCODE, cPROJECTCODE , "string", .T. , .F., 0 , NIL, .F.,.F.) 
cSoap += WSSoapValue("TASKCODE", ::cTASKCODE, cTASKCODE , "string", .T. , .F., 0 , NIL, .F.,.F.) 
cSoap += "</GETRELATIONSHIPLIST>"

oXmlRet := SvcSoapCall(Self,cSoap,; 
	"http://localhost:8059/GETRELATIONSHIPLIST",; 
	"DOCUMENT","http://localhost:8059/",,"1.031217",; 
	"http://localhost:8059/ws/PMSPROJECTS.apw")

::Init()
::oWSGETRELATIONSHIPLISTRESULT:SoapRecv( WSAdvValue( oXmlRet,"_GETRELATIONSHIPLISTRESPONSE:_GETRELATIONSHIPLISTRESULT","ARRAYOFRELATIONSHIPLISTVIEW",NIL,NIL,NIL,NIL,NIL,NIL) )

END WSMETHOD

oXmlRet := NIL
Return .T.

// WSDL Method GETTASKALLOCATIONLIST of Service WSPMSPROJECTS

WSMETHOD GETTASKALLOCATIONLIST WSSEND cUSERCODE,cPROTHEUSUSERCODE,cPROJECTCODE,cTASKCODE WSRECEIVE oWSGETTASKALLOCATIONLISTRESULT WSCLIENT WSPMSPROJECTS
Local cSoap := "" , oXmlRet

BEGIN WSMETHOD

cSoap += '<GETTASKALLOCATIONLIST xmlns="http://localhost:8059/">'
cSoap += WSSoapValue("USERCODE", ::cUSERCODE, cUSERCODE , "string", .T. , .F., 0 , NIL, .F.,.F.) 
cSoap += WSSoapValue("PROTHEUSUSERCODE", ::cPROTHEUSUSERCODE, cPROTHEUSUSERCODE , "string", .T. , .F., 0 , NIL, .F.,.F.) 
cSoap += WSSoapValue("PROJECTCODE", ::cPROJECTCODE, cPROJECTCODE , "string", .T. , .F., 0 , NIL, .F.,.F.) 
cSoap += WSSoapValue("TASKCODE", ::cTASKCODE, cTASKCODE , "string", .T. , .F., 0 , NIL, .F.,.F.) 
cSoap += "</GETTASKALLOCATIONLIST>"

oXmlRet := SvcSoapCall(Self,cSoap,; 
	"http://localhost:8059/GETTASKALLOCATIONLIST",; 
	"DOCUMENT","http://localhost:8059/",,"1.031217",; 
	"http://localhost:8059/ws/PMSPROJECTS.apw")

::Init()
::oWSGETTASKALLOCATIONLISTRESULT:SoapRecv( WSAdvValue( oXmlRet,"_GETTASKALLOCATIONLISTRESPONSE:_GETTASKALLOCATIONLISTRESULT","ARRAYOFTASKALLOCATIONVIEW",NIL,NIL,NIL,NIL,NIL,NIL) )

END WSMETHOD

oXmlRet := NIL
Return .T.

// WSDL Method GETTASKDETAIL of Service WSPMSPROJECTS

WSMETHOD GETTASKDETAIL WSSEND cUSERCODE,cPROTHEUSUSERCODE,cPROJECTCODE,cTASKCODE WSRECEIVE oWSGETTASKDETAILRESULT WSCLIENT WSPMSPROJECTS
Local cSoap := "" , oXmlRet

BEGIN WSMETHOD

cSoap += '<GETTASKDETAIL xmlns="http://localhost:8059/">'
cSoap += WSSoapValue("USERCODE", ::cUSERCODE, cUSERCODE , "string", .T. , .F., 0 , NIL, .F.,.F.) 
cSoap += WSSoapValue("PROTHEUSUSERCODE", ::cPROTHEUSUSERCODE, cPROTHEUSUSERCODE , "string", .T. , .F., 0 , NIL, .F.,.F.) 
cSoap += WSSoapValue("PROJECTCODE", ::cPROJECTCODE, cPROJECTCODE , "string", .T. , .F., 0 , NIL, .F.,.F.) 
cSoap += WSSoapValue("TASKCODE", ::cTASKCODE, cTASKCODE , "string", .T. , .F., 0 , NIL, .F.,.F.) 
cSoap += "</GETTASKDETAIL>"

oXmlRet := SvcSoapCall(Self,cSoap,; 
	"http://localhost:8059/GETTASKDETAIL",; 
	"DOCUMENT","http://localhost:8059/",,"1.031217",; 
	"http://localhost:8059/ws/PMSPROJECTS.apw")

::Init()
::oWSGETTASKDETAILRESULT:SoapRecv( WSAdvValue( oXmlRet,"_GETTASKDETAILRESPONSE:_GETTASKDETAILRESULT","ARRAYOFTASKDETAILVIEW",NIL,NIL,NIL,NIL,NIL,NIL) )

END WSMETHOD

oXmlRet := NIL
Return .T.

// WSDL Method GETTASKLIST of Service WSPMSPROJECTS

WSMETHOD GETTASKLIST WSSEND cUSERCODE,cPROTHEUSUSERCODE,cPROJECTCODE,cWBSFATHER WSRECEIVE oWSGETTASKLISTRESULT WSCLIENT WSPMSPROJECTS
Local cSoap := "" , oXmlRet

BEGIN WSMETHOD

cSoap += '<GETTASKLIST xmlns="http://localhost:8059/">'
cSoap += WSSoapValue("USERCODE", ::cUSERCODE, cUSERCODE , "string", .T. , .F., 0 , NIL, .F.,.F.) 
cSoap += WSSoapValue("PROTHEUSUSERCODE", ::cPROTHEUSUSERCODE, cPROTHEUSUSERCODE , "string", .T. , .F., 0 , NIL, .F.,.F.) 
cSoap += WSSoapValue("PROJECTCODE", ::cPROJECTCODE, cPROJECTCODE , "string", .T. , .F., 0 , NIL, .F.,.F.) 
cSoap += WSSoapValue("WBSFATHER", ::cWBSFATHER, cWBSFATHER , "string", .T. , .F., 0 , NIL, .F.,.F.) 
cSoap += "</GETTASKLIST>"

oXmlRet := SvcSoapCall(Self,cSoap,; 
	"http://localhost:8059/GETTASKLIST",; 
	"DOCUMENT","http://localhost:8059/",,"1.031217",; 
	"http://localhost:8059/ws/PMSPROJECTS.apw")

::Init()
::oWSGETTASKLISTRESULT:SoapRecv( WSAdvValue( oXmlRet,"_GETTASKLISTRESPONSE:_GETTASKLISTRESULT","ARRAYOFTASKLISTVIEW",NIL,NIL,NIL,NIL,NIL,NIL) )

END WSMETHOD

oXmlRet := NIL
Return .T.

// WSDL Method GETTASKPRODUCTSLIST of Service WSPMSPROJECTS

WSMETHOD GETTASKPRODUCTSLIST WSSEND cUSERCODE,cPROTHEUSUSERCODE,cPROJECTCODE,cTASKCODE WSRECEIVE oWSGETTASKPRODUCTSLISTRESULT WSCLIENT WSPMSPROJECTS
Local cSoap := "" , oXmlRet

BEGIN WSMETHOD

cSoap += '<GETTASKPRODUCTSLIST xmlns="http://localhost:8059/">'
cSoap += WSSoapValue("USERCODE", ::cUSERCODE, cUSERCODE , "string", .T. , .F., 0 , NIL, .F.,.F.) 
cSoap += WSSoapValue("PROTHEUSUSERCODE", ::cPROTHEUSUSERCODE, cPROTHEUSUSERCODE , "string", .T. , .F., 0 , NIL, .F.,.F.) 
cSoap += WSSoapValue("PROJECTCODE", ::cPROJECTCODE, cPROJECTCODE , "string", .T. , .F., 0 , NIL, .F.,.F.) 
cSoap += WSSoapValue("TASKCODE", ::cTASKCODE, cTASKCODE , "string", .T. , .F., 0 , NIL, .F.,.F.) 
cSoap += "</GETTASKPRODUCTSLIST>"

oXmlRet := SvcSoapCall(Self,cSoap,; 
	"http://localhost:8059/GETTASKPRODUCTSLIST",; 
	"DOCUMENT","http://localhost:8059/",,"1.031217",; 
	"http://localhost:8059/ws/PMSPROJECTS.apw")

::Init()
::oWSGETTASKPRODUCTSLISTRESULT:SoapRecv( WSAdvValue( oXmlRet,"_GETTASKPRODUCTSLISTRESPONSE:_GETTASKPRODUCTSLISTRESULT","ARRAYOFTASKPRODUCTSVIEW",NIL,NIL,NIL,NIL,NIL,NIL) )

END WSMETHOD

oXmlRet := NIL
Return .T.

// WSDL Method GETWBSDETAIL of Service WSPMSPROJECTS

WSMETHOD GETWBSDETAIL WSSEND cUSERCODE,cPROTHEUSUSERCODE,cPROJECTCODE,cWBSCODE WSRECEIVE oWSGETWBSDETAILRESULT WSCLIENT WSPMSPROJECTS
Local cSoap := "" , oXmlRet

BEGIN WSMETHOD

cSoap += '<GETWBSDETAIL xmlns="http://localhost:8059/">'
cSoap += WSSoapValue("USERCODE", ::cUSERCODE, cUSERCODE , "string", .T. , .F., 0 , NIL, .F.,.F.) 
cSoap += WSSoapValue("PROTHEUSUSERCODE", ::cPROTHEUSUSERCODE, cPROTHEUSUSERCODE , "string", .T. , .F., 0 , NIL, .F.,.F.) 
cSoap += WSSoapValue("PROJECTCODE", ::cPROJECTCODE, cPROJECTCODE , "string", .T. , .F., 0 , NIL, .F.,.F.) 
cSoap += WSSoapValue("WBSCODE", ::cWBSCODE, cWBSCODE , "string", .T. , .F., 0 , NIL, .F.,.F.) 
cSoap += "</GETWBSDETAIL>"

oXmlRet := SvcSoapCall(Self,cSoap,; 
	"http://localhost:8059/GETWBSDETAIL",; 
	"DOCUMENT","http://localhost:8059/",,"1.031217",; 
	"http://localhost:8059/ws/PMSPROJECTS.apw")

::Init()
::oWSGETWBSDETAILRESULT:SoapRecv( WSAdvValue( oXmlRet,"_GETWBSDETAILRESPONSE:_GETWBSDETAILRESULT","ARRAYOFWBSDETAILVIEW",NIL,NIL,NIL,NIL,NIL,NIL) )

END WSMETHOD

oXmlRet := NIL
Return .T.


// WSDL Data Structure ARRAYOFEVENTLISTVIEW

WSSTRUCT PMSPROJECTS_ARRAYOFEVENTLISTVIEW
	WSDATA   oWSEVENTLISTVIEW          AS PMSPROJECTS_EVENTLISTVIEW OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT PMSPROJECTS_ARRAYOFEVENTLISTVIEW
	::Init()
Return Self

WSMETHOD INIT WSCLIENT PMSPROJECTS_ARRAYOFEVENTLISTVIEW
	::oWSEVENTLISTVIEW     := {} // Array Of  PMSPROJECTS_EVENTLISTVIEW():New()
Return

WSMETHOD CLONE WSCLIENT PMSPROJECTS_ARRAYOFEVENTLISTVIEW
	Local oClone := PMSPROJECTS_ARRAYOFEVENTLISTVIEW():NEW()
	oClone:oWSEVENTLISTVIEW := NIL
	If ::oWSEVENTLISTVIEW <> NIL 
		oClone:oWSEVENTLISTVIEW := {}
		aEval( ::oWSEVENTLISTVIEW , { |x| aadd( oClone:oWSEVENTLISTVIEW , x:Clone() ) } )
	Endif 
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT PMSPROJECTS_ARRAYOFEVENTLISTVIEW
	Local nRElem1, oNodes1, nTElem1
	::Init()
	If oResponse = NIL ; Return ; Endif 
	oNodes1 :=  WSAdvValue( oResponse,"_EVENTLISTVIEW","EVENTLISTVIEW",{},NIL,.T.,"O",NIL,NIL) 
	nTElem1 := len(oNodes1)
	For nRElem1 := 1 to nTElem1 
		If !WSIsNilNode( oNodes1[nRElem1] )
			aadd(::oWSEVENTLISTVIEW , PMSPROJECTS_EVENTLISTVIEW():New() )
			::oWSEVENTLISTVIEW[len(::oWSEVENTLISTVIEW)]:SoapRecv(oNodes1[nRElem1])
		Endif
	Next
Return

// WSDL Data Structure ARRAYOFEXPENSELISTVIEW

WSSTRUCT PMSPROJECTS_ARRAYOFEXPENSELISTVIEW
	WSDATA   oWSEXPENSELISTVIEW        AS PMSPROJECTS_EXPENSELISTVIEW OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT PMSPROJECTS_ARRAYOFEXPENSELISTVIEW
	::Init()
Return Self

WSMETHOD INIT WSCLIENT PMSPROJECTS_ARRAYOFEXPENSELISTVIEW
	::oWSEXPENSELISTVIEW   := {} // Array Of  PMSPROJECTS_EXPENSELISTVIEW():New()
Return

WSMETHOD CLONE WSCLIENT PMSPROJECTS_ARRAYOFEXPENSELISTVIEW
	Local oClone := PMSPROJECTS_ARRAYOFEXPENSELISTVIEW():NEW()
	oClone:oWSEXPENSELISTVIEW := NIL
	If ::oWSEXPENSELISTVIEW <> NIL 
		oClone:oWSEXPENSELISTVIEW := {}
		aEval( ::oWSEXPENSELISTVIEW , { |x| aadd( oClone:oWSEXPENSELISTVIEW , x:Clone() ) } )
	Endif 
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT PMSPROJECTS_ARRAYOFEXPENSELISTVIEW
	Local nRElem1, oNodes1, nTElem1
	::Init()
	If oResponse = NIL ; Return ; Endif 
	oNodes1 :=  WSAdvValue( oResponse,"_EXPENSELISTVIEW","EXPENSELISTVIEW",{},NIL,.T.,"O",NIL,NIL) 
	nTElem1 := len(oNodes1)
	For nRElem1 := 1 to nTElem1 
		If !WSIsNilNode( oNodes1[nRElem1] )
			aadd(::oWSEXPENSELISTVIEW , PMSPROJECTS_EXPENSELISTVIEW():New() )
			::oWSEXPENSELISTVIEW[len(::oWSEXPENSELISTVIEW)]:SoapRecv(oNodes1[nRElem1])
		Endif
	Next
Return

// WSDL Data Structure ARRAYOFBRWHEADER

WSSTRUCT PMSPROJECTS_ARRAYOFBRWHEADER
	WSDATA   oWSBRWHEADER              AS PMSPROJECTS_BRWHEADER OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT PMSPROJECTS_ARRAYOFBRWHEADER
	::Init()
Return Self

WSMETHOD INIT WSCLIENT PMSPROJECTS_ARRAYOFBRWHEADER
	::oWSBRWHEADER         := {} // Array Of  PMSPROJECTS_BRWHEADER():New()
Return

WSMETHOD CLONE WSCLIENT PMSPROJECTS_ARRAYOFBRWHEADER
	Local oClone := PMSPROJECTS_ARRAYOFBRWHEADER():NEW()
	oClone:oWSBRWHEADER := NIL
	If ::oWSBRWHEADER <> NIL 
		oClone:oWSBRWHEADER := {}
		aEval( ::oWSBRWHEADER , { |x| aadd( oClone:oWSBRWHEADER , x:Clone() ) } )
	Endif 
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT PMSPROJECTS_ARRAYOFBRWHEADER
	Local nRElem1, oNodes1, nTElem1
	::Init()
	If oResponse = NIL ; Return ; Endif 
	oNodes1 :=  WSAdvValue( oResponse,"_BRWHEADER","BRWHEADER",{},NIL,.T.,"O",NIL,NIL) 
	nTElem1 := len(oNodes1)
	For nRElem1 := 1 to nTElem1 
		If !WSIsNilNode( oNodes1[nRElem1] )
			aadd(::oWSBRWHEADER , PMSPROJECTS_BRWHEADER():New() )
			::oWSBRWHEADER[len(::oWSBRWHEADER)]:SoapRecv(oNodes1[nRElem1])
		Endif
	Next
Return

// WSDL Data Structure ARRAYOFBRWHEADERPMS

WSSTRUCT PMSPROJECTS_ARRAYOFBRWHEADERPMS
	WSDATA   oWSBRWHEADERPMS           AS PMSPROJECTS_BRWHEADERPMS OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT PMSPROJECTS_ARRAYOFBRWHEADERPMS
	::Init()
Return Self

WSMETHOD INIT WSCLIENT PMSPROJECTS_ARRAYOFBRWHEADERPMS
	::oWSBRWHEADERPMS      := {} // Array Of  PMSPROJECTS_BRWHEADERPMS():New()
Return

WSMETHOD CLONE WSCLIENT PMSPROJECTS_ARRAYOFBRWHEADERPMS
	Local oClone := PMSPROJECTS_ARRAYOFBRWHEADERPMS():NEW()
	oClone:oWSBRWHEADERPMS := NIL
	If ::oWSBRWHEADERPMS <> NIL 
		oClone:oWSBRWHEADERPMS := {}
		aEval( ::oWSBRWHEADERPMS , { |x| aadd( oClone:oWSBRWHEADERPMS , x:Clone() ) } )
	Endif 
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT PMSPROJECTS_ARRAYOFBRWHEADERPMS
	Local nRElem1, oNodes1, nTElem1
	::Init()
	If oResponse = NIL ; Return ; Endif 
	oNodes1 :=  WSAdvValue( oResponse,"_BRWHEADERPMS","BRWHEADERPMS",{},NIL,.T.,"O",NIL,NIL) 
	nTElem1 := len(oNodes1)
	For nRElem1 := 1 to nTElem1 
		If !WSIsNilNode( oNodes1[nRElem1] )
			aadd(::oWSBRWHEADERPMS , PMSPROJECTS_BRWHEADERPMS():New() )
			::oWSBRWHEADERPMS[len(::oWSBRWHEADERPMS)]:SoapRecv(oNodes1[nRElem1])
		Endif
	Next
Return

// WSDL Data Structure ARRAYOFPROJECTLISTVIEW

WSSTRUCT PMSPROJECTS_ARRAYOFPROJECTLISTVIEW
	WSDATA   oWSPROJECTLISTVIEW        AS PMSPROJECTS_PROJECTLISTVIEW OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT PMSPROJECTS_ARRAYOFPROJECTLISTVIEW
	::Init()
Return Self

WSMETHOD INIT WSCLIENT PMSPROJECTS_ARRAYOFPROJECTLISTVIEW
	::oWSPROJECTLISTVIEW   := {} // Array Of  PMSPROJECTS_PROJECTLISTVIEW():New()
Return

WSMETHOD CLONE WSCLIENT PMSPROJECTS_ARRAYOFPROJECTLISTVIEW
	Local oClone := PMSPROJECTS_ARRAYOFPROJECTLISTVIEW():NEW()
	oClone:oWSPROJECTLISTVIEW := NIL
	If ::oWSPROJECTLISTVIEW <> NIL 
		oClone:oWSPROJECTLISTVIEW := {}
		aEval( ::oWSPROJECTLISTVIEW , { |x| aadd( oClone:oWSPROJECTLISTVIEW , x:Clone() ) } )
	Endif 
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT PMSPROJECTS_ARRAYOFPROJECTLISTVIEW
	Local nRElem1, oNodes1, nTElem1
	::Init()
	If oResponse = NIL ; Return ; Endif 
	oNodes1 :=  WSAdvValue( oResponse,"_PROJECTLISTVIEW","PROJECTLISTVIEW",{},NIL,.T.,"O",NIL,NIL) 
	nTElem1 := len(oNodes1)
	For nRElem1 := 1 to nTElem1 
		If !WSIsNilNode( oNodes1[nRElem1] )
			aadd(::oWSPROJECTLISTVIEW , PMSPROJECTS_PROJECTLISTVIEW():New() )
			::oWSPROJECTLISTVIEW[len(::oWSPROJECTLISTVIEW)]:SoapRecv(oNodes1[nRElem1])
		Endif
	Next
Return

// WSDL Data Structure ARRAYOFPROJECTSTRUCTVIEW

WSSTRUCT PMSPROJECTS_ARRAYOFPROJECTSTRUCTVIEW
	WSDATA   oWSPROJECTSTRUCTVIEW      AS PMSPROJECTS_PROJECTSTRUCTVIEW OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT PMSPROJECTS_ARRAYOFPROJECTSTRUCTVIEW
	::Init()
Return Self

WSMETHOD INIT WSCLIENT PMSPROJECTS_ARRAYOFPROJECTSTRUCTVIEW
	::oWSPROJECTSTRUCTVIEW := {} // Array Of  PMSPROJECTS_PROJECTSTRUCTVIEW():New()
Return

WSMETHOD CLONE WSCLIENT PMSPROJECTS_ARRAYOFPROJECTSTRUCTVIEW
	Local oClone := PMSPROJECTS_ARRAYOFPROJECTSTRUCTVIEW():NEW()
	oClone:oWSPROJECTSTRUCTVIEW := NIL
	If ::oWSPROJECTSTRUCTVIEW <> NIL 
		oClone:oWSPROJECTSTRUCTVIEW := {}
		aEval( ::oWSPROJECTSTRUCTVIEW , { |x| aadd( oClone:oWSPROJECTSTRUCTVIEW , x:Clone() ) } )
	Endif 
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT PMSPROJECTS_ARRAYOFPROJECTSTRUCTVIEW
	Local nRElem1, oNodes1, nTElem1
	::Init()
	If oResponse = NIL ; Return ; Endif 
	oNodes1 :=  WSAdvValue( oResponse,"_PROJECTSTRUCTVIEW","PROJECTSTRUCTVIEW",{},NIL,.T.,"O",NIL,NIL) 
	nTElem1 := len(oNodes1)
	For nRElem1 := 1 to nTElem1 
		If !WSIsNilNode( oNodes1[nRElem1] )
			aadd(::oWSPROJECTSTRUCTVIEW , PMSPROJECTS_PROJECTSTRUCTVIEW():New() )
			::oWSPROJECTSTRUCTVIEW[len(::oWSPROJECTSTRUCTVIEW)]:SoapRecv(oNodes1[nRElem1])
		Endif
	Next
Return

// WSDL Data Structure ARRAYOFPROJECTHEADERVIEW

WSSTRUCT PMSPROJECTS_ARRAYOFPROJECTHEADERVIEW
	WSDATA   oWSPROJECTHEADERVIEW      AS PMSPROJECTS_PROJECTHEADERVIEW OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT PMSPROJECTS_ARRAYOFPROJECTHEADERVIEW
	::Init()
Return Self

WSMETHOD INIT WSCLIENT PMSPROJECTS_ARRAYOFPROJECTHEADERVIEW
	::oWSPROJECTHEADERVIEW := {} // Array Of  PMSPROJECTS_PROJECTHEADERVIEW():New()
Return

WSMETHOD CLONE WSCLIENT PMSPROJECTS_ARRAYOFPROJECTHEADERVIEW
	Local oClone := PMSPROJECTS_ARRAYOFPROJECTHEADERVIEW():NEW()
	oClone:oWSPROJECTHEADERVIEW := NIL
	If ::oWSPROJECTHEADERVIEW <> NIL 
		oClone:oWSPROJECTHEADERVIEW := {}
		aEval( ::oWSPROJECTHEADERVIEW , { |x| aadd( oClone:oWSPROJECTHEADERVIEW , x:Clone() ) } )
	Endif 
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT PMSPROJECTS_ARRAYOFPROJECTHEADERVIEW
	Local nRElem1, oNodes1, nTElem1
	::Init()
	If oResponse = NIL ; Return ; Endif 
	oNodes1 :=  WSAdvValue( oResponse,"_PROJECTHEADERVIEW","PROJECTHEADERVIEW",{},NIL,.T.,"O",NIL,NIL) 
	nTElem1 := len(oNodes1)
	For nRElem1 := 1 to nTElem1 
		If !WSIsNilNode( oNodes1[nRElem1] )
			aadd(::oWSPROJECTHEADERVIEW , PMSPROJECTS_PROJECTHEADERVIEW():New() )
			::oWSPROJECTHEADERVIEW[len(::oWSPROJECTHEADERVIEW)]:SoapRecv(oNodes1[nRElem1])
		Endif
	Next
Return

// WSDL Data Structure ARRAYOFRELATIONSHIPLISTVIEW

WSSTRUCT PMSPROJECTS_ARRAYOFRELATIONSHIPLISTVIEW
	WSDATA   oWSRELATIONSHIPLISTVIEW   AS PMSPROJECTS_RELATIONSHIPLISTVIEW OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT PMSPROJECTS_ARRAYOFRELATIONSHIPLISTVIEW
	::Init()
Return Self

WSMETHOD INIT WSCLIENT PMSPROJECTS_ARRAYOFRELATIONSHIPLISTVIEW
	::oWSRELATIONSHIPLISTVIEW := {} // Array Of  PMSPROJECTS_RELATIONSHIPLISTVIEW():New()
Return

WSMETHOD CLONE WSCLIENT PMSPROJECTS_ARRAYOFRELATIONSHIPLISTVIEW
	Local oClone := PMSPROJECTS_ARRAYOFRELATIONSHIPLISTVIEW():NEW()
	oClone:oWSRELATIONSHIPLISTVIEW := NIL
	If ::oWSRELATIONSHIPLISTVIEW <> NIL 
		oClone:oWSRELATIONSHIPLISTVIEW := {}
		aEval( ::oWSRELATIONSHIPLISTVIEW , { |x| aadd( oClone:oWSRELATIONSHIPLISTVIEW , x:Clone() ) } )
	Endif 
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT PMSPROJECTS_ARRAYOFRELATIONSHIPLISTVIEW
	Local nRElem1, oNodes1, nTElem1
	::Init()
	If oResponse = NIL ; Return ; Endif 
	oNodes1 :=  WSAdvValue( oResponse,"_RELATIONSHIPLISTVIEW","RELATIONSHIPLISTVIEW",{},NIL,.T.,"O",NIL,NIL) 
	nTElem1 := len(oNodes1)
	For nRElem1 := 1 to nTElem1 
		If !WSIsNilNode( oNodes1[nRElem1] )
			aadd(::oWSRELATIONSHIPLISTVIEW , PMSPROJECTS_RELATIONSHIPLISTVIEW():New() )
			::oWSRELATIONSHIPLISTVIEW[len(::oWSRELATIONSHIPLISTVIEW)]:SoapRecv(oNodes1[nRElem1])
		Endif
	Next
Return

// WSDL Data Structure ARRAYOFTASKALLOCATIONVIEW

WSSTRUCT PMSPROJECTS_ARRAYOFTASKALLOCATIONVIEW
	WSDATA   oWSTASKALLOCATIONVIEW     AS PMSPROJECTS_TASKALLOCATIONVIEW OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT PMSPROJECTS_ARRAYOFTASKALLOCATIONVIEW
	::Init()
Return Self

WSMETHOD INIT WSCLIENT PMSPROJECTS_ARRAYOFTASKALLOCATIONVIEW
	::oWSTASKALLOCATIONVIEW := {} // Array Of  PMSPROJECTS_TASKALLOCATIONVIEW():New()
Return

WSMETHOD CLONE WSCLIENT PMSPROJECTS_ARRAYOFTASKALLOCATIONVIEW
	Local oClone := PMSPROJECTS_ARRAYOFTASKALLOCATIONVIEW():NEW()
	oClone:oWSTASKALLOCATIONVIEW := NIL
	If ::oWSTASKALLOCATIONVIEW <> NIL 
		oClone:oWSTASKALLOCATIONVIEW := {}
		aEval( ::oWSTASKALLOCATIONVIEW , { |x| aadd( oClone:oWSTASKALLOCATIONVIEW , x:Clone() ) } )
	Endif 
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT PMSPROJECTS_ARRAYOFTASKALLOCATIONVIEW
	Local nRElem1, oNodes1, nTElem1
	::Init()
	If oResponse = NIL ; Return ; Endif 
	oNodes1 :=  WSAdvValue( oResponse,"_TASKALLOCATIONVIEW","TASKALLOCATIONVIEW",{},NIL,.T.,"O",NIL,NIL) 
	nTElem1 := len(oNodes1)
	For nRElem1 := 1 to nTElem1 
		If !WSIsNilNode( oNodes1[nRElem1] )
			aadd(::oWSTASKALLOCATIONVIEW , PMSPROJECTS_TASKALLOCATIONVIEW():New() )
			::oWSTASKALLOCATIONVIEW[len(::oWSTASKALLOCATIONVIEW)]:SoapRecv(oNodes1[nRElem1])
		Endif
	Next
Return

// WSDL Data Structure ARRAYOFTASKDETAILVIEW

WSSTRUCT PMSPROJECTS_ARRAYOFTASKDETAILVIEW
	WSDATA   oWSTASKDETAILVIEW         AS PMSPROJECTS_TASKDETAILVIEW OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT PMSPROJECTS_ARRAYOFTASKDETAILVIEW
	::Init()
Return Self

WSMETHOD INIT WSCLIENT PMSPROJECTS_ARRAYOFTASKDETAILVIEW
	::oWSTASKDETAILVIEW    := {} // Array Of  PMSPROJECTS_TASKDETAILVIEW():New()
Return

WSMETHOD CLONE WSCLIENT PMSPROJECTS_ARRAYOFTASKDETAILVIEW
	Local oClone := PMSPROJECTS_ARRAYOFTASKDETAILVIEW():NEW()
	oClone:oWSTASKDETAILVIEW := NIL
	If ::oWSTASKDETAILVIEW <> NIL 
		oClone:oWSTASKDETAILVIEW := {}
		aEval( ::oWSTASKDETAILVIEW , { |x| aadd( oClone:oWSTASKDETAILVIEW , x:Clone() ) } )
	Endif 
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT PMSPROJECTS_ARRAYOFTASKDETAILVIEW
	Local nRElem1, oNodes1, nTElem1
	::Init()
	If oResponse = NIL ; Return ; Endif 
	oNodes1 :=  WSAdvValue( oResponse,"_TASKDETAILVIEW","TASKDETAILVIEW",{},NIL,.T.,"O",NIL,NIL) 
	nTElem1 := len(oNodes1)
	For nRElem1 := 1 to nTElem1 
		If !WSIsNilNode( oNodes1[nRElem1] )
			aadd(::oWSTASKDETAILVIEW , PMSPROJECTS_TASKDETAILVIEW():New() )
			::oWSTASKDETAILVIEW[len(::oWSTASKDETAILVIEW)]:SoapRecv(oNodes1[nRElem1])
		Endif
	Next
Return

// WSDL Data Structure ARRAYOFTASKLISTVIEW

WSSTRUCT PMSPROJECTS_ARRAYOFTASKLISTVIEW
	WSDATA   oWSTASKLISTVIEW           AS PMSPROJECTS_TASKLISTVIEW OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT PMSPROJECTS_ARRAYOFTASKLISTVIEW
	::Init()
Return Self

WSMETHOD INIT WSCLIENT PMSPROJECTS_ARRAYOFTASKLISTVIEW
	::oWSTASKLISTVIEW      := {} // Array Of  PMSPROJECTS_TASKLISTVIEW():New()
Return

WSMETHOD CLONE WSCLIENT PMSPROJECTS_ARRAYOFTASKLISTVIEW
	Local oClone := PMSPROJECTS_ARRAYOFTASKLISTVIEW():NEW()
	oClone:oWSTASKLISTVIEW := NIL
	If ::oWSTASKLISTVIEW <> NIL 
		oClone:oWSTASKLISTVIEW := {}
		aEval( ::oWSTASKLISTVIEW , { |x| aadd( oClone:oWSTASKLISTVIEW , x:Clone() ) } )
	Endif 
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT PMSPROJECTS_ARRAYOFTASKLISTVIEW
	Local nRElem1, oNodes1, nTElem1
	::Init()
	If oResponse = NIL ; Return ; Endif 
	oNodes1 :=  WSAdvValue( oResponse,"_TASKLISTVIEW","TASKLISTVIEW",{},NIL,.T.,"O",NIL,NIL) 
	nTElem1 := len(oNodes1)
	For nRElem1 := 1 to nTElem1 
		If !WSIsNilNode( oNodes1[nRElem1] )
			aadd(::oWSTASKLISTVIEW , PMSPROJECTS_TASKLISTVIEW():New() )
			::oWSTASKLISTVIEW[len(::oWSTASKLISTVIEW)]:SoapRecv(oNodes1[nRElem1])
		Endif
	Next
Return

// WSDL Data Structure ARRAYOFTASKPRODUCTSVIEW

WSSTRUCT PMSPROJECTS_ARRAYOFTASKPRODUCTSVIEW
	WSDATA   oWSTASKPRODUCTSVIEW       AS PMSPROJECTS_TASKPRODUCTSVIEW OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT PMSPROJECTS_ARRAYOFTASKPRODUCTSVIEW
	::Init()
Return Self

WSMETHOD INIT WSCLIENT PMSPROJECTS_ARRAYOFTASKPRODUCTSVIEW
	::oWSTASKPRODUCTSVIEW  := {} // Array Of  PMSPROJECTS_TASKPRODUCTSVIEW():New()
Return

WSMETHOD CLONE WSCLIENT PMSPROJECTS_ARRAYOFTASKPRODUCTSVIEW
	Local oClone := PMSPROJECTS_ARRAYOFTASKPRODUCTSVIEW():NEW()
	oClone:oWSTASKPRODUCTSVIEW := NIL
	If ::oWSTASKPRODUCTSVIEW <> NIL 
		oClone:oWSTASKPRODUCTSVIEW := {}
		aEval( ::oWSTASKPRODUCTSVIEW , { |x| aadd( oClone:oWSTASKPRODUCTSVIEW , x:Clone() ) } )
	Endif 
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT PMSPROJECTS_ARRAYOFTASKPRODUCTSVIEW
	Local nRElem1, oNodes1, nTElem1
	::Init()
	If oResponse = NIL ; Return ; Endif 
	oNodes1 :=  WSAdvValue( oResponse,"_TASKPRODUCTSVIEW","TASKPRODUCTSVIEW",{},NIL,.T.,"O",NIL,NIL) 
	nTElem1 := len(oNodes1)
	For nRElem1 := 1 to nTElem1 
		If !WSIsNilNode( oNodes1[nRElem1] )
			aadd(::oWSTASKPRODUCTSVIEW , PMSPROJECTS_TASKPRODUCTSVIEW():New() )
			::oWSTASKPRODUCTSVIEW[len(::oWSTASKPRODUCTSVIEW)]:SoapRecv(oNodes1[nRElem1])
		Endif
	Next
Return

// WSDL Data Structure ARRAYOFWBSDETAILVIEW

WSSTRUCT PMSPROJECTS_ARRAYOFWBSDETAILVIEW
	WSDATA   oWSWBSDETAILVIEW          AS PMSPROJECTS_WBSDETAILVIEW OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT PMSPROJECTS_ARRAYOFWBSDETAILVIEW
	::Init()
Return Self

WSMETHOD INIT WSCLIENT PMSPROJECTS_ARRAYOFWBSDETAILVIEW
	::oWSWBSDETAILVIEW     := {} // Array Of  PMSPROJECTS_WBSDETAILVIEW():New()
Return

WSMETHOD CLONE WSCLIENT PMSPROJECTS_ARRAYOFWBSDETAILVIEW
	Local oClone := PMSPROJECTS_ARRAYOFWBSDETAILVIEW():NEW()
	oClone:oWSWBSDETAILVIEW := NIL
	If ::oWSWBSDETAILVIEW <> NIL 
		oClone:oWSWBSDETAILVIEW := {}
		aEval( ::oWSWBSDETAILVIEW , { |x| aadd( oClone:oWSWBSDETAILVIEW , x:Clone() ) } )
	Endif 
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT PMSPROJECTS_ARRAYOFWBSDETAILVIEW
	Local nRElem1, oNodes1, nTElem1
	::Init()
	If oResponse = NIL ; Return ; Endif 
	oNodes1 :=  WSAdvValue( oResponse,"_WBSDETAILVIEW","WBSDETAILVIEW",{},NIL,.T.,"O",NIL,NIL) 
	nTElem1 := len(oNodes1)
	For nRElem1 := 1 to nTElem1 
		If !WSIsNilNode( oNodes1[nRElem1] )
			aadd(::oWSWBSDETAILVIEW , PMSPROJECTS_WBSDETAILVIEW():New() )
			::oWSWBSDETAILVIEW[len(::oWSWBSDETAILVIEW)]:SoapRecv(oNodes1[nRElem1])
		Endif
	Next
Return

// WSDL Data Structure EVENTLISTVIEW

WSSTRUCT PMSPROJECTS_EVENTLISTVIEW
	WSDATA   nBILLCURRENCY             AS integer OPTIONAL
	WSDATA   cBILLNUMBER               AS string OPTIONAL
	WSDATA   cBILLPREFIX               AS string OPTIONAL
	WSDATA   nBILLVALUE                AS float OPTIONAL
	WSDATA   cCLASSCODE                AS string OPTIONAL
	WSDATA   cCUSTOMERBRANCH           AS string OPTIONAL
	WSDATA   cCUSTOMERCODE             AS string OPTIONAL
	WSDATA   dESTIMATEDDATE            AS date OPTIONAL
	WSDATA   cEVENTDESCRIPTION         AS string OPTIONAL
	WSDATA   dEVENTESTIMATEDDATE       AS date OPTIONAL
	WSDATA   dEVENTEXECUTIONDATE       AS date OPTIONAL
	WSDATA   cEXECUTEUSERFUNCTION      AS string OPTIONAL
	WSDATA   cGENERATEBILLRECEIVABLE   AS string OPTIONAL
	WSDATA   cGENERATETEMPORARYBILL    AS string OPTIONAL
	WSDATA   cITEM                     AS string OPTIONAL
	WSDATA   cPAYMENTTERM              AS string OPTIONAL
	WSDATA   nPERCENTAGEEXECUTED       AS float OPTIONAL
	WSDATA   cSALESORDERNUMBER         AS string OPTIONAL
	WSDATA   cSALESORDERNUMBERITEM     AS string OPTIONAL
	WSDATA   nSALESORDERRELEASE        AS float OPTIONAL
	WSDATA   cSENDEMAIL                AS string OPTIONAL
	WSDATA   cTASKCODE                 AS string OPTIONAL
	WSDATA   cUSAGECODE                AS string OPTIONAL
	WSDATA   oWSUSERFIELDS             AS PMSPROJECTS_ARRAYOFUSERFIELD OPTIONAL
	WSDATA   cWBSCODE                  AS string OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT PMSPROJECTS_EVENTLISTVIEW
	::Init()
Return Self

WSMETHOD INIT WSCLIENT PMSPROJECTS_EVENTLISTVIEW
Return

WSMETHOD CLONE WSCLIENT PMSPROJECTS_EVENTLISTVIEW
	Local oClone := PMSPROJECTS_EVENTLISTVIEW():NEW()
	oClone:nBILLCURRENCY        := ::nBILLCURRENCY
	oClone:cBILLNUMBER          := ::cBILLNUMBER
	oClone:cBILLPREFIX          := ::cBILLPREFIX
	oClone:nBILLVALUE           := ::nBILLVALUE
	oClone:cCLASSCODE           := ::cCLASSCODE
	oClone:cCUSTOMERBRANCH      := ::cCUSTOMERBRANCH
	oClone:cCUSTOMERCODE        := ::cCUSTOMERCODE
	oClone:dESTIMATEDDATE       := ::dESTIMATEDDATE
	oClone:cEVENTDESCRIPTION    := ::cEVENTDESCRIPTION
	oClone:dEVENTESTIMATEDDATE  := ::dEVENTESTIMATEDDATE
	oClone:dEVENTEXECUTIONDATE  := ::dEVENTEXECUTIONDATE
	oClone:cEXECUTEUSERFUNCTION := ::cEXECUTEUSERFUNCTION
	oClone:cGENERATEBILLRECEIVABLE := ::cGENERATEBILLRECEIVABLE
	oClone:cGENERATETEMPORARYBILL := ::cGENERATETEMPORARYBILL
	oClone:cITEM                := ::cITEM
	oClone:cPAYMENTTERM         := ::cPAYMENTTERM
	oClone:nPERCENTAGEEXECUTED  := ::nPERCENTAGEEXECUTED
	oClone:cSALESORDERNUMBER    := ::cSALESORDERNUMBER
	oClone:cSALESORDERNUMBERITEM := ::cSALESORDERNUMBERITEM
	oClone:nSALESORDERRELEASE   := ::nSALESORDERRELEASE
	oClone:cSENDEMAIL           := ::cSENDEMAIL
	oClone:cTASKCODE            := ::cTASKCODE
	oClone:cUSAGECODE           := ::cUSAGECODE
	oClone:oWSUSERFIELDS        := IIF(::oWSUSERFIELDS = NIL , NIL , ::oWSUSERFIELDS:Clone() )
	oClone:cWBSCODE             := ::cWBSCODE
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT PMSPROJECTS_EVENTLISTVIEW
	Local oNode24
	::Init()
	If oResponse = NIL ; Return ; Endif 
	::nBILLCURRENCY      :=  WSAdvValue( oResponse,"_BILLCURRENCY","integer",NIL,NIL,NIL,"N",NIL,NIL) 
	::cBILLNUMBER        :=  WSAdvValue( oResponse,"_BILLNUMBER","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cBILLPREFIX        :=  WSAdvValue( oResponse,"_BILLPREFIX","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::nBILLVALUE         :=  WSAdvValue( oResponse,"_BILLVALUE","float",NIL,NIL,NIL,"N",NIL,NIL) 
	::cCLASSCODE         :=  WSAdvValue( oResponse,"_CLASSCODE","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cCUSTOMERBRANCH    :=  WSAdvValue( oResponse,"_CUSTOMERBRANCH","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cCUSTOMERCODE      :=  WSAdvValue( oResponse,"_CUSTOMERCODE","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::dESTIMATEDDATE     :=  WSAdvValue( oResponse,"_ESTIMATEDDATE","date",NIL,NIL,NIL,"D",NIL,NIL) 
	::cEVENTDESCRIPTION  :=  WSAdvValue( oResponse,"_EVENTDESCRIPTION","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::dEVENTESTIMATEDDATE :=  WSAdvValue( oResponse,"_EVENTESTIMATEDDATE","date",NIL,NIL,NIL,"D",NIL,NIL) 
	::dEVENTEXECUTIONDATE :=  WSAdvValue( oResponse,"_EVENTEXECUTIONDATE","date",NIL,NIL,NIL,"D",NIL,NIL) 
	::cEXECUTEUSERFUNCTION :=  WSAdvValue( oResponse,"_EXECUTEUSERFUNCTION","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cGENERATEBILLRECEIVABLE :=  WSAdvValue( oResponse,"_GENERATEBILLRECEIVABLE","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cGENERATETEMPORARYBILL :=  WSAdvValue( oResponse,"_GENERATETEMPORARYBILL","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cITEM              :=  WSAdvValue( oResponse,"_ITEM","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cPAYMENTTERM       :=  WSAdvValue( oResponse,"_PAYMENTTERM","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::nPERCENTAGEEXECUTED :=  WSAdvValue( oResponse,"_PERCENTAGEEXECUTED","float",NIL,NIL,NIL,"N",NIL,NIL) 
	::cSALESORDERNUMBER  :=  WSAdvValue( oResponse,"_SALESORDERNUMBER","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cSALESORDERNUMBERITEM :=  WSAdvValue( oResponse,"_SALESORDERNUMBERITEM","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::nSALESORDERRELEASE :=  WSAdvValue( oResponse,"_SALESORDERRELEASE","float",NIL,NIL,NIL,"N",NIL,NIL) 
	::cSENDEMAIL         :=  WSAdvValue( oResponse,"_SENDEMAIL","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cTASKCODE          :=  WSAdvValue( oResponse,"_TASKCODE","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cUSAGECODE         :=  WSAdvValue( oResponse,"_USAGECODE","string",NIL,NIL,NIL,"S",NIL,NIL) 
	oNode24 :=  WSAdvValue( oResponse,"_USERFIELDS","ARRAYOFUSERFIELD",NIL,NIL,NIL,"O",NIL,NIL) 
	If oNode24 != NIL
		::oWSUSERFIELDS := PMSPROJECTS_ARRAYOFUSERFIELD():New()
		::oWSUSERFIELDS:SoapRecv(oNode24)
	EndIf
	::cWBSCODE           :=  WSAdvValue( oResponse,"_WBSCODE","string",NIL,NIL,NIL,"S",NIL,NIL) 
Return

// WSDL Data Structure EXPENSELISTVIEW

WSSTRUCT PMSPROJECTS_EXPENSELISTVIEW
	WSDATA   cACCUMULATECOSTS          AS string OPTIONAL
	WSDATA   nALLOCATEDPERCENTAGE      AS float OPTIONAL
	WSDATA   cALLOCATIONFINALHOUR      AS string OPTIONAL
	WSDATA   cALLOCATIONINITIALHOUR    AS string OPTIONAL
	WSDATA   nCURRENCY                 AS integer OPTIONAL
	WSDATA   cCURRENCYSYMBOL           AS string OPTIONAL
	WSDATA   cDESCRIPTION              AS string OPTIONAL
	WSDATA   nEXPENSESAMOUNT           AS float OPTIONAL
	WSDATA   cEXPENSESTYPE             AS string OPTIONAL
	WSDATA   dFINALALLOCATIONDATE      AS date OPTIONAL
	WSDATA   dINITIALALLOCATIONDATE    AS date OPTIONAL
	WSDATA   cINVOICEPRODUCTCODE       AS string OPTIONAL
	WSDATA   cITEM                     AS string OPTIONAL
	WSDATA   dNECESSITYDATE            AS date OPTIONAL
	WSDATA   cPROJECTCODE              AS string OPTIONAL
	WSDATA   cPROJECTVERSION           AS string OPTIONAL
	WSDATA   cRESOURCECODE             AS string OPTIONAL
	WSDATA   cSUBCOMPOSITIONCODE       AS string OPTIONAL
	WSDATA   cTASKCODE                 AS string OPTIONAL
	WSDATA   oWSUSERFIELDS             AS PMSPROJECTS_ARRAYOFUSERFIELD OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT PMSPROJECTS_EXPENSELISTVIEW
	::Init()
Return Self

WSMETHOD INIT WSCLIENT PMSPROJECTS_EXPENSELISTVIEW
Return

WSMETHOD CLONE WSCLIENT PMSPROJECTS_EXPENSELISTVIEW
	Local oClone := PMSPROJECTS_EXPENSELISTVIEW():NEW()
	oClone:cACCUMULATECOSTS     := ::cACCUMULATECOSTS
	oClone:nALLOCATEDPERCENTAGE := ::nALLOCATEDPERCENTAGE
	oClone:cALLOCATIONFINALHOUR := ::cALLOCATIONFINALHOUR
	oClone:cALLOCATIONINITIALHOUR := ::cALLOCATIONINITIALHOUR
	oClone:nCURRENCY            := ::nCURRENCY
	oClone:cCURRENCYSYMBOL      := ::cCURRENCYSYMBOL
	oClone:cDESCRIPTION         := ::cDESCRIPTION
	oClone:nEXPENSESAMOUNT      := ::nEXPENSESAMOUNT
	oClone:cEXPENSESTYPE        := ::cEXPENSESTYPE
	oClone:dFINALALLOCATIONDATE := ::dFINALALLOCATIONDATE
	oClone:dINITIALALLOCATIONDATE := ::dINITIALALLOCATIONDATE
	oClone:cINVOICEPRODUCTCODE  := ::cINVOICEPRODUCTCODE
	oClone:cITEM                := ::cITEM
	oClone:dNECESSITYDATE       := ::dNECESSITYDATE
	oClone:cPROJECTCODE         := ::cPROJECTCODE
	oClone:cPROJECTVERSION      := ::cPROJECTVERSION
	oClone:cRESOURCECODE        := ::cRESOURCECODE
	oClone:cSUBCOMPOSITIONCODE  := ::cSUBCOMPOSITIONCODE
	oClone:cTASKCODE            := ::cTASKCODE
	oClone:oWSUSERFIELDS        := IIF(::oWSUSERFIELDS = NIL , NIL , ::oWSUSERFIELDS:Clone() )
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT PMSPROJECTS_EXPENSELISTVIEW
	Local oNode20
	::Init()
	If oResponse = NIL ; Return ; Endif 
	::cACCUMULATECOSTS   :=  WSAdvValue( oResponse,"_ACCUMULATECOSTS","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::nALLOCATEDPERCENTAGE :=  WSAdvValue( oResponse,"_ALLOCATEDPERCENTAGE","float",NIL,NIL,NIL,"N",NIL,NIL) 
	::cALLOCATIONFINALHOUR :=  WSAdvValue( oResponse,"_ALLOCATIONFINALHOUR","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cALLOCATIONINITIALHOUR :=  WSAdvValue( oResponse,"_ALLOCATIONINITIALHOUR","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::nCURRENCY          :=  WSAdvValue( oResponse,"_CURRENCY","integer",NIL,NIL,NIL,"N",NIL,NIL) 
	::cCURRENCYSYMBOL    :=  WSAdvValue( oResponse,"_CURRENCYSYMBOL","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cDESCRIPTION       :=  WSAdvValue( oResponse,"_DESCRIPTION","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::nEXPENSESAMOUNT    :=  WSAdvValue( oResponse,"_EXPENSESAMOUNT","float",NIL,NIL,NIL,"N",NIL,NIL) 
	::cEXPENSESTYPE      :=  WSAdvValue( oResponse,"_EXPENSESTYPE","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::dFINALALLOCATIONDATE :=  WSAdvValue( oResponse,"_FINALALLOCATIONDATE","date",NIL,NIL,NIL,"D",NIL,NIL) 
	::dINITIALALLOCATIONDATE :=  WSAdvValue( oResponse,"_INITIALALLOCATIONDATE","date",NIL,NIL,NIL,"D",NIL,NIL) 
	::cINVOICEPRODUCTCODE :=  WSAdvValue( oResponse,"_INVOICEPRODUCTCODE","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cITEM              :=  WSAdvValue( oResponse,"_ITEM","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::dNECESSITYDATE     :=  WSAdvValue( oResponse,"_NECESSITYDATE","date",NIL,NIL,NIL,"D",NIL,NIL) 
	::cPROJECTCODE       :=  WSAdvValue( oResponse,"_PROJECTCODE","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cPROJECTVERSION    :=  WSAdvValue( oResponse,"_PROJECTVERSION","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cRESOURCECODE      :=  WSAdvValue( oResponse,"_RESOURCECODE","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cSUBCOMPOSITIONCODE :=  WSAdvValue( oResponse,"_SUBCOMPOSITIONCODE","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cTASKCODE          :=  WSAdvValue( oResponse,"_TASKCODE","string",NIL,NIL,NIL,"S",NIL,NIL) 
	oNode20 :=  WSAdvValue( oResponse,"_USERFIELDS","ARRAYOFUSERFIELD",NIL,NIL,NIL,"O",NIL,NIL) 
	If oNode20 != NIL
		::oWSUSERFIELDS := PMSPROJECTS_ARRAYOFUSERFIELD():New()
		::oWSUSERFIELDS:SoapRecv(oNode20)
	EndIf
Return

// WSDL Data Structure BRWHEADER

WSSTRUCT PMSPROJECTS_BRWHEADER
	WSDATA   cHEADERCOMBOBOX           AS string OPTIONAL
	WSDATA   nHEADERDEC                AS integer
	WSDATA   cHEADERF3                 AS string OPTIONAL
	WSDATA   cHEADERFIELD              AS string
	WSDATA   lHEADEROBLIG              AS boolean OPTIONAL
	WSDATA   cHEADERPICTURE            AS string
	WSDATA   nHEADERSIZE               AS integer
	WSDATA   cHEADERTITLE              AS string
	WSDATA   cHEADERTYPE               AS string
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT PMSPROJECTS_BRWHEADER
	::Init()
Return Self

WSMETHOD INIT WSCLIENT PMSPROJECTS_BRWHEADER
Return

WSMETHOD CLONE WSCLIENT PMSPROJECTS_BRWHEADER
	Local oClone := PMSPROJECTS_BRWHEADER():NEW()
	oClone:cHEADERCOMBOBOX      := ::cHEADERCOMBOBOX
	oClone:nHEADERDEC           := ::nHEADERDEC
	oClone:cHEADERF3            := ::cHEADERF3
	oClone:cHEADERFIELD         := ::cHEADERFIELD
	oClone:lHEADEROBLIG         := ::lHEADEROBLIG
	oClone:cHEADERPICTURE       := ::cHEADERPICTURE
	oClone:nHEADERSIZE          := ::nHEADERSIZE
	oClone:cHEADERTITLE         := ::cHEADERTITLE
	oClone:cHEADERTYPE          := ::cHEADERTYPE
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT PMSPROJECTS_BRWHEADER
	::Init()
	If oResponse = NIL ; Return ; Endif 
	::cHEADERCOMBOBOX    :=  WSAdvValue( oResponse,"_HEADERCOMBOBOX","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::nHEADERDEC         :=  WSAdvValue( oResponse,"_HEADERDEC","integer",NIL,"Property nHEADERDEC as s:integer on SOAP Response not found.",NIL,"N",NIL,NIL) 
	::cHEADERF3          :=  WSAdvValue( oResponse,"_HEADERF3","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cHEADERFIELD       :=  WSAdvValue( oResponse,"_HEADERFIELD","string",NIL,"Property cHEADERFIELD as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::lHEADEROBLIG       :=  WSAdvValue( oResponse,"_HEADEROBLIG","boolean",NIL,NIL,NIL,"L",NIL,NIL) 
	::cHEADERPICTURE     :=  WSAdvValue( oResponse,"_HEADERPICTURE","string",NIL,"Property cHEADERPICTURE as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::nHEADERSIZE        :=  WSAdvValue( oResponse,"_HEADERSIZE","integer",NIL,"Property nHEADERSIZE as s:integer on SOAP Response not found.",NIL,"N",NIL,NIL) 
	::cHEADERTITLE       :=  WSAdvValue( oResponse,"_HEADERTITLE","string",NIL,"Property cHEADERTITLE as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::cHEADERTYPE        :=  WSAdvValue( oResponse,"_HEADERTYPE","string",NIL,"Property cHEADERTYPE as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
Return

// WSDL Data Structure BRWHEADERPMS

WSSTRUCT PMSPROJECTS_BRWHEADERPMS
	WSDATA   cEDITABLE                 AS string OPTIONAL
	WSDATA   cHEADERCOMBOBOX           AS string OPTIONAL
	WSDATA   nHEADERDEC                AS integer OPTIONAL
	WSDATA   cHEADERF3                 AS string OPTIONAL
	WSDATA   cHEADERFIELD              AS string OPTIONAL
	WSDATA   cHEADERFOLDER             AS string OPTIONAL
	WSDATA   lHEADEROBLIG              AS boolean OPTIONAL
	WSDATA   cHEADERORDER              AS string OPTIONAL
	WSDATA   cHEADERPICTURE            AS string OPTIONAL
	WSDATA   nHEADERSIZE               AS integer OPTIONAL
	WSDATA   cHEADERTITLE              AS string OPTIONAL
	WSDATA   cHEADERTYPE               AS string OPTIONAL
	WSDATA   cHEADERTYPE2              AS string OPTIONAL
	WSDATA   cINITIALVALUE             AS string OPTIONAL
	WSDATA   cPROPRIETYNAME            AS string OPTIONAL
	WSDATA   lUSERFIELD                AS boolean OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT PMSPROJECTS_BRWHEADERPMS
	::Init()
Return Self

WSMETHOD INIT WSCLIENT PMSPROJECTS_BRWHEADERPMS
Return

WSMETHOD CLONE WSCLIENT PMSPROJECTS_BRWHEADERPMS
	Local oClone := PMSPROJECTS_BRWHEADERPMS():NEW()
	oClone:cEDITABLE            := ::cEDITABLE
	oClone:cHEADERCOMBOBOX      := ::cHEADERCOMBOBOX
	oClone:nHEADERDEC           := ::nHEADERDEC
	oClone:cHEADERF3            := ::cHEADERF3
	oClone:cHEADERFIELD         := ::cHEADERFIELD
	oClone:cHEADERFOLDER        := ::cHEADERFOLDER
	oClone:lHEADEROBLIG         := ::lHEADEROBLIG
	oClone:cHEADERORDER         := ::cHEADERORDER
	oClone:cHEADERPICTURE       := ::cHEADERPICTURE
	oClone:nHEADERSIZE          := ::nHEADERSIZE
	oClone:cHEADERTITLE         := ::cHEADERTITLE
	oClone:cHEADERTYPE          := ::cHEADERTYPE
	oClone:cHEADERTYPE2         := ::cHEADERTYPE2
	oClone:cINITIALVALUE        := ::cINITIALVALUE
	oClone:cPROPRIETYNAME       := ::cPROPRIETYNAME
	oClone:lUSERFIELD           := ::lUSERFIELD
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT PMSPROJECTS_BRWHEADERPMS
	::Init()
	If oResponse = NIL ; Return ; Endif 
	::cEDITABLE          :=  WSAdvValue( oResponse,"_EDITABLE","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cHEADERCOMBOBOX    :=  WSAdvValue( oResponse,"_HEADERCOMBOBOX","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::nHEADERDEC         :=  WSAdvValue( oResponse,"_HEADERDEC","integer",NIL,NIL,NIL,"N",NIL,NIL) 
	::cHEADERF3          :=  WSAdvValue( oResponse,"_HEADERF3","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cHEADERFIELD       :=  WSAdvValue( oResponse,"_HEADERFIELD","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cHEADERFOLDER      :=  WSAdvValue( oResponse,"_HEADERFOLDER","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::lHEADEROBLIG       :=  WSAdvValue( oResponse,"_HEADEROBLIG","boolean",NIL,NIL,NIL,"L",NIL,NIL) 
	::cHEADERORDER       :=  WSAdvValue( oResponse,"_HEADERORDER","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cHEADERPICTURE     :=  WSAdvValue( oResponse,"_HEADERPICTURE","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::nHEADERSIZE        :=  WSAdvValue( oResponse,"_HEADERSIZE","integer",NIL,NIL,NIL,"N",NIL,NIL) 
	::cHEADERTITLE       :=  WSAdvValue( oResponse,"_HEADERTITLE","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cHEADERTYPE        :=  WSAdvValue( oResponse,"_HEADERTYPE","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cHEADERTYPE2       :=  WSAdvValue( oResponse,"_HEADERTYPE2","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cINITIALVALUE      :=  WSAdvValue( oResponse,"_INITIALVALUE","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cPROPRIETYNAME     :=  WSAdvValue( oResponse,"_PROPRIETYNAME","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::lUSERFIELD         :=  WSAdvValue( oResponse,"_USERFIELD","boolean",NIL,NIL,NIL,"L",NIL,NIL) 
Return

// WSDL Data Structure PROJECTLISTVIEW

WSSTRUCT PMSPROJECTS_PROJECTLISTVIEW
	WSDATA   cDESCRIPTION              AS string OPTIONAL
	WSDATA   cPROJECTCLIENTE           AS string OPTIONAL
	WSDATA   cPROJECTCODE              AS string OPTIONAL
	WSDATA   dPROJECTDATE              AS date OPTIONAL
	WSDATA   cPROJECTREVISION          AS string OPTIONAL
	WSDATA   cPROJECTSTAGE             AS string OPTIONAL
	WSDATA   cPROJECTUNIT              AS string OPTIONAL
	WSDATA   oWSUSERFIELDS             AS PMSPROJECTS_ARRAYOFUSERFIELD OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT PMSPROJECTS_PROJECTLISTVIEW
	::Init()
Return Self

WSMETHOD INIT WSCLIENT PMSPROJECTS_PROJECTLISTVIEW
Return

WSMETHOD CLONE WSCLIENT PMSPROJECTS_PROJECTLISTVIEW
	Local oClone := PMSPROJECTS_PROJECTLISTVIEW():NEW()
	oClone:cDESCRIPTION         := ::cDESCRIPTION
	oClone:cPROJECTCLIENTE      := ::cPROJECTCLIENTE
	oClone:cPROJECTCODE         := ::cPROJECTCODE
	oClone:dPROJECTDATE         := ::dPROJECTDATE
	oClone:cPROJECTREVISION     := ::cPROJECTREVISION
	oClone:cPROJECTSTAGE        := ::cPROJECTSTAGE
	oClone:cPROJECTUNIT         := ::cPROJECTUNIT
	oClone:oWSUSERFIELDS        := IIF(::oWSUSERFIELDS = NIL , NIL , ::oWSUSERFIELDS:Clone() )
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT PMSPROJECTS_PROJECTLISTVIEW
	Local oNode8
	::Init()
	If oResponse = NIL ; Return ; Endif 
	::cDESCRIPTION       :=  WSAdvValue( oResponse,"_DESCRIPTION","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cPROJECTCLIENTE    :=  WSAdvValue( oResponse,"_PROJECTCLIENTE","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cPROJECTCODE       :=  WSAdvValue( oResponse,"_PROJECTCODE","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::dPROJECTDATE       :=  WSAdvValue( oResponse,"_PROJECTDATE","date",NIL,NIL,NIL,"D",NIL,NIL) 
	::cPROJECTREVISION   :=  WSAdvValue( oResponse,"_PROJECTREVISION","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cPROJECTSTAGE      :=  WSAdvValue( oResponse,"_PROJECTSTAGE","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cPROJECTUNIT       :=  WSAdvValue( oResponse,"_PROJECTUNIT","string",NIL,NIL,NIL,"S",NIL,NIL) 
	oNode8 :=  WSAdvValue( oResponse,"_USERFIELDS","ARRAYOFUSERFIELD",NIL,NIL,NIL,"O",NIL,NIL) 
	If oNode8 != NIL
		::oWSUSERFIELDS := PMSPROJECTS_ARRAYOFUSERFIELD():New()
		::oWSUSERFIELDS:SoapRecv(oNode8)
	EndIf
Return

// WSDL Data Structure PROJECTSTRUCTVIEW

WSSTRUCT PMSPROJECTS_PROJECTSTRUCTVIEW
	WSDATA   cDESCRIPTION              AS string OPTIONAL
	WSDATA   dESTIMATEDFINALDATE       AS date OPTIONAL
	WSDATA   dESTIMATEDINITIALDATE     AS date OPTIONAL
	WSDATA   dEXECUTIONFINALDATE       AS date OPTIONAL
	WSDATA   dEXECUTIONINITIALDATE     AS date OPTIONAL
	WSDATA   nEXECUTIONPERCENTAGE      AS float OPTIONAL
	WSDATA   cLEVEL                    AS string OPTIONAL
	WSDATA   cORDERLIST                AS string OPTIONAL
	WSDATA   nTIMEDURATION             AS integer OPTIONAL
	WSDATA   oWSUSERFIELDS             AS PMSPROJECTS_ARRAYOFUSERFIELD OPTIONAL
	WSDATA   cWBSFATHER                AS string OPTIONAL
	WSDATA   cWBSJOBCODE               AS string OPTIONAL
	WSDATA   cWBSORJOB                 AS string OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT PMSPROJECTS_PROJECTSTRUCTVIEW
	::Init()
Return Self

WSMETHOD INIT WSCLIENT PMSPROJECTS_PROJECTSTRUCTVIEW
Return

WSMETHOD CLONE WSCLIENT PMSPROJECTS_PROJECTSTRUCTVIEW
	Local oClone := PMSPROJECTS_PROJECTSTRUCTVIEW():NEW()
	oClone:cDESCRIPTION         := ::cDESCRIPTION
	oClone:dESTIMATEDFINALDATE  := ::dESTIMATEDFINALDATE
	oClone:dESTIMATEDINITIALDATE := ::dESTIMATEDINITIALDATE
	oClone:dEXECUTIONFINALDATE  := ::dEXECUTIONFINALDATE
	oClone:dEXECUTIONINITIALDATE := ::dEXECUTIONINITIALDATE
	oClone:nEXECUTIONPERCENTAGE := ::nEXECUTIONPERCENTAGE
	oClone:cLEVEL               := ::cLEVEL
	oClone:cORDERLIST           := ::cORDERLIST
	oClone:nTIMEDURATION        := ::nTIMEDURATION
	oClone:oWSUSERFIELDS        := IIF(::oWSUSERFIELDS = NIL , NIL , ::oWSUSERFIELDS:Clone() )
	oClone:cWBSFATHER           := ::cWBSFATHER
	oClone:cWBSJOBCODE          := ::cWBSJOBCODE
	oClone:cWBSORJOB            := ::cWBSORJOB
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT PMSPROJECTS_PROJECTSTRUCTVIEW
	Local oNode10
	::Init()
	If oResponse = NIL ; Return ; Endif 
	::cDESCRIPTION       :=  WSAdvValue( oResponse,"_DESCRIPTION","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::dESTIMATEDFINALDATE :=  WSAdvValue( oResponse,"_ESTIMATEDFINALDATE","date",NIL,NIL,NIL,"D",NIL,NIL) 
	::dESTIMATEDINITIALDATE :=  WSAdvValue( oResponse,"_ESTIMATEDINITIALDATE","date",NIL,NIL,NIL,"D",NIL,NIL) 
	::dEXECUTIONFINALDATE :=  WSAdvValue( oResponse,"_EXECUTIONFINALDATE","date",NIL,NIL,NIL,"D",NIL,NIL) 
	::dEXECUTIONINITIALDATE :=  WSAdvValue( oResponse,"_EXECUTIONINITIALDATE","date",NIL,NIL,NIL,"D",NIL,NIL) 
	::nEXECUTIONPERCENTAGE :=  WSAdvValue( oResponse,"_EXECUTIONPERCENTAGE","float",NIL,NIL,NIL,"N",NIL,NIL) 
	::cLEVEL             :=  WSAdvValue( oResponse,"_LEVEL","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cORDERLIST         :=  WSAdvValue( oResponse,"_ORDERLIST","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::nTIMEDURATION      :=  WSAdvValue( oResponse,"_TIMEDURATION","integer",NIL,NIL,NIL,"N",NIL,NIL) 
	oNode10 :=  WSAdvValue( oResponse,"_USERFIELDS","ARRAYOFUSERFIELD",NIL,NIL,NIL,"O",NIL,NIL) 
	If oNode10 != NIL
		::oWSUSERFIELDS := PMSPROJECTS_ARRAYOFUSERFIELD():New()
		::oWSUSERFIELDS:SoapRecv(oNode10)
	EndIf
	::cWBSFATHER         :=  WSAdvValue( oResponse,"_WBSFATHER","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cWBSJOBCODE        :=  WSAdvValue( oResponse,"_WBSJOBCODE","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cWBSORJOB          :=  WSAdvValue( oResponse,"_WBSORJOB","string",NIL,NIL,NIL,"S",NIL,NIL) 
Return

// WSDL Data Structure PROJECTHEADERVIEW

WSSTRUCT PMSPROJECTS_PROJECTHEADERVIEW
	WSDATA   cDESCRIPTION              AS string OPTIONAL
	WSDATA   cIMAGECOLOR               AS string OPTIONAL
	WSDATA   cWBSCODE                  AS string OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT PMSPROJECTS_PROJECTHEADERVIEW
	::Init()
Return Self

WSMETHOD INIT WSCLIENT PMSPROJECTS_PROJECTHEADERVIEW
Return

WSMETHOD CLONE WSCLIENT PMSPROJECTS_PROJECTHEADERVIEW
	Local oClone := PMSPROJECTS_PROJECTHEADERVIEW():NEW()
	oClone:cDESCRIPTION         := ::cDESCRIPTION
	oClone:cIMAGECOLOR          := ::cIMAGECOLOR
	oClone:cWBSCODE             := ::cWBSCODE
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT PMSPROJECTS_PROJECTHEADERVIEW
	::Init()
	If oResponse = NIL ; Return ; Endif 
	::cDESCRIPTION       :=  WSAdvValue( oResponse,"_DESCRIPTION","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cIMAGECOLOR        :=  WSAdvValue( oResponse,"_IMAGECOLOR","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cWBSCODE           :=  WSAdvValue( oResponse,"_WBSCODE","string",NIL,NIL,NIL,"S",NIL,NIL) 
Return

// WSDL Data Structure RELATIONSHIPLISTVIEW

WSSTRUCT PMSPROJECTS_RELATIONSHIPLISTVIEW
	WSDATA   cPREDECESSORITEM          AS string OPTIONAL
	WSDATA   cPREDECESSORTASKCODE      AS string OPTIONAL
	WSDATA   cPROJECTVERSION           AS string OPTIONAL
	WSDATA   nRELATIONSHIPDELAY        AS float OPTIONAL
	WSDATA   cRELATIONSHIPTYPE         AS string OPTIONAL
	WSDATA   cTASKDESCRIPTION          AS string OPTIONAL
	WSDATA   oWSUSERFIELDS             AS PMSPROJECTS_ARRAYOFUSERFIELD OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT PMSPROJECTS_RELATIONSHIPLISTVIEW
	::Init()
Return Self

WSMETHOD INIT WSCLIENT PMSPROJECTS_RELATIONSHIPLISTVIEW
Return

WSMETHOD CLONE WSCLIENT PMSPROJECTS_RELATIONSHIPLISTVIEW
	Local oClone := PMSPROJECTS_RELATIONSHIPLISTVIEW():NEW()
	oClone:cPREDECESSORITEM     := ::cPREDECESSORITEM
	oClone:cPREDECESSORTASKCODE := ::cPREDECESSORTASKCODE
	oClone:cPROJECTVERSION      := ::cPROJECTVERSION
	oClone:nRELATIONSHIPDELAY   := ::nRELATIONSHIPDELAY
	oClone:cRELATIONSHIPTYPE    := ::cRELATIONSHIPTYPE
	oClone:cTASKDESCRIPTION     := ::cTASKDESCRIPTION
	oClone:oWSUSERFIELDS        := IIF(::oWSUSERFIELDS = NIL , NIL , ::oWSUSERFIELDS:Clone() )
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT PMSPROJECTS_RELATIONSHIPLISTVIEW
	Local oNode7
	::Init()
	If oResponse = NIL ; Return ; Endif 
	::cPREDECESSORITEM   :=  WSAdvValue( oResponse,"_PREDECESSORITEM","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cPREDECESSORTASKCODE :=  WSAdvValue( oResponse,"_PREDECESSORTASKCODE","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cPROJECTVERSION    :=  WSAdvValue( oResponse,"_PROJECTVERSION","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::nRELATIONSHIPDELAY :=  WSAdvValue( oResponse,"_RELATIONSHIPDELAY","float",NIL,NIL,NIL,"N",NIL,NIL) 
	::cRELATIONSHIPTYPE  :=  WSAdvValue( oResponse,"_RELATIONSHIPTYPE","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cTASKDESCRIPTION   :=  WSAdvValue( oResponse,"_TASKDESCRIPTION","string",NIL,NIL,NIL,"S",NIL,NIL) 
	oNode7 :=  WSAdvValue( oResponse,"_USERFIELDS","ARRAYOFUSERFIELD",NIL,NIL,NIL,"O",NIL,NIL) 
	If oNode7 != NIL
		::oWSUSERFIELDS := PMSPROJECTS_ARRAYOFUSERFIELD():New()
		::oWSUSERFIELDS:SoapRecv(oNode7)
	EndIf
Return

// WSDL Data Structure TASKALLOCATIONVIEW

WSSTRUCT PMSPROJECTS_TASKALLOCATIONVIEW
	WSDATA   nALLOCATEDPERCENTAGE      AS float OPTIONAL
	WSDATA   cCOSTCALCULATIONMETHOD    AS string OPTIONAL
	WSDATA   nCURRENCY                 AS integer OPTIONAL
	WSDATA   cCURRENCYSYMBOL           AS string OPTIONAL
	WSDATA   cDESCRIPTION              AS string OPTIONAL
	WSDATA   cESTABLISH                AS string OPTIONAL
	WSDATA   cINVOICEPRODUCTCODE       AS string OPTIONAL
	WSDATA   cITEM                     AS string OPTIONAL
	WSDATA   dNECESSITYDATE            AS date OPTIONAL
	WSDATA   cPRODUCTCODE              AS string OPTIONAL
	WSDATA   nQUANTITY                 AS integer OPTIONAL
	WSDATA   nQUANTITY2                AS integer OPTIONAL
	WSDATA   cRECALCULATECOSTS         AS string OPTIONAL
	WSDATA   cRESOURCECODE             AS string OPTIONAL
	WSDATA   nSTANDARDCOST             AS float OPTIONAL
	WSDATA   cUNIT                     AS string OPTIONAL
	WSDATA   cUNIT2                    AS string OPTIONAL
	WSDATA   oWSUSERFIELDS             AS PMSPROJECTS_ARRAYOFUSERFIELD OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT PMSPROJECTS_TASKALLOCATIONVIEW
	::Init()
Return Self

WSMETHOD INIT WSCLIENT PMSPROJECTS_TASKALLOCATIONVIEW
Return

WSMETHOD CLONE WSCLIENT PMSPROJECTS_TASKALLOCATIONVIEW
	Local oClone := PMSPROJECTS_TASKALLOCATIONVIEW():NEW()
	oClone:nALLOCATEDPERCENTAGE := ::nALLOCATEDPERCENTAGE
	oClone:cCOSTCALCULATIONMETHOD := ::cCOSTCALCULATIONMETHOD
	oClone:nCURRENCY            := ::nCURRENCY
	oClone:cCURRENCYSYMBOL      := ::cCURRENCYSYMBOL
	oClone:cDESCRIPTION         := ::cDESCRIPTION
	oClone:cESTABLISH           := ::cESTABLISH
	oClone:cINVOICEPRODUCTCODE  := ::cINVOICEPRODUCTCODE
	oClone:cITEM                := ::cITEM
	oClone:dNECESSITYDATE       := ::dNECESSITYDATE
	oClone:cPRODUCTCODE         := ::cPRODUCTCODE
	oClone:nQUANTITY            := ::nQUANTITY
	oClone:nQUANTITY2           := ::nQUANTITY2
	oClone:cRECALCULATECOSTS    := ::cRECALCULATECOSTS
	oClone:cRESOURCECODE        := ::cRESOURCECODE
	oClone:nSTANDARDCOST        := ::nSTANDARDCOST
	oClone:cUNIT                := ::cUNIT
	oClone:cUNIT2               := ::cUNIT2
	oClone:oWSUSERFIELDS        := IIF(::oWSUSERFIELDS = NIL , NIL , ::oWSUSERFIELDS:Clone() )
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT PMSPROJECTS_TASKALLOCATIONVIEW
	Local oNode18
	::Init()
	If oResponse = NIL ; Return ; Endif 
	::nALLOCATEDPERCENTAGE :=  WSAdvValue( oResponse,"_ALLOCATEDPERCENTAGE","float",NIL,NIL,NIL,"N",NIL,NIL) 
	::cCOSTCALCULATIONMETHOD :=  WSAdvValue( oResponse,"_COSTCALCULATIONMETHOD","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::nCURRENCY          :=  WSAdvValue( oResponse,"_CURRENCY","integer",NIL,NIL,NIL,"N",NIL,NIL) 
	::cCURRENCYSYMBOL    :=  WSAdvValue( oResponse,"_CURRENCYSYMBOL","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cDESCRIPTION       :=  WSAdvValue( oResponse,"_DESCRIPTION","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cESTABLISH         :=  WSAdvValue( oResponse,"_ESTABLISH","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cINVOICEPRODUCTCODE :=  WSAdvValue( oResponse,"_INVOICEPRODUCTCODE","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cITEM              :=  WSAdvValue( oResponse,"_ITEM","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::dNECESSITYDATE     :=  WSAdvValue( oResponse,"_NECESSITYDATE","date",NIL,NIL,NIL,"D",NIL,NIL) 
	::cPRODUCTCODE       :=  WSAdvValue( oResponse,"_PRODUCTCODE","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::nQUANTITY          :=  WSAdvValue( oResponse,"_QUANTITY","integer",NIL,NIL,NIL,"N",NIL,NIL) 
	::nQUANTITY2         :=  WSAdvValue( oResponse,"_QUANTITY2","integer",NIL,NIL,NIL,"N",NIL,NIL) 
	::cRECALCULATECOSTS  :=  WSAdvValue( oResponse,"_RECALCULATECOSTS","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cRESOURCECODE      :=  WSAdvValue( oResponse,"_RESOURCECODE","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::nSTANDARDCOST      :=  WSAdvValue( oResponse,"_STANDARDCOST","float",NIL,NIL,NIL,"N",NIL,NIL) 
	::cUNIT              :=  WSAdvValue( oResponse,"_UNIT","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cUNIT2             :=  WSAdvValue( oResponse,"_UNIT2","string",NIL,NIL,NIL,"S",NIL,NIL) 
	oNode18 :=  WSAdvValue( oResponse,"_USERFIELDS","ARRAYOFUSERFIELD",NIL,NIL,NIL,"O",NIL,NIL) 
	If oNode18 != NIL
		::oWSUSERFIELDS := PMSPROJECTS_ARRAYOFUSERFIELD():New()
		::oWSUSERFIELDS:SoapRecv(oNode18)
	EndIf
Return

// WSDL Data Structure TASKDETAILVIEW

WSSTRUCT PMSPROJECTS_TASKDETAILVIEW
	WSDATA   cACCOUNTINGITEM           AS string OPTIONAL
	WSDATA   cCALENDAR                 AS string OPTIONAL
	WSDATA   cCOMPOSITIONCODE          AS string OPTIONAL
	WSDATA   dCONVERSIONDATE           AS date OPTIONAL
	WSDATA   cCOSTCENTER               AS string OPTIONAL
	WSDATA   nCURRENCYACTUALVALUE1     AS float OPTIONAL
	WSDATA   nCURRENCYACTUALVALUE2     AS float OPTIONAL
	WSDATA   nCURRENCYACTUALVALUE3     AS float OPTIONAL
	WSDATA   nCURRENCYACTUALVALUE4     AS float OPTIONAL
	WSDATA   nCURRENCYACTUALVALUE5     AS float OPTIONAL
	WSDATA   cCURRENCYCONVERSION       AS string OPTIONAL
	WSDATA   cDESCRIPTION              AS string OPTIONAL
	WSDATA   dESTIMATEDFINALDATE       AS date OPTIONAL
	WSDATA   cESTIMATEDFINALHOUR       AS string OPTIONAL
	WSDATA   dESTIMATEDINITIALDATE     AS date OPTIONAL
	WSDATA   cESTIMATEDINITIALHOUR     AS string OPTIONAL
	WSDATA   dEXECUTIONFINALDATE       AS date OPTIONAL
	WSDATA   dEXECUTIONINITIALDATE     AS date OPTIONAL
	WSDATA   nEXPENSEVALUE1            AS float OPTIONAL
	WSDATA   nEXPENSEVALUE2            AS float OPTIONAL
	WSDATA   nEXPENSEVALUE3            AS float OPTIONAL
	WSDATA   nEXPENSEVALUE4            AS float OPTIONAL
	WSDATA   nEXPENSEVALUE5            AS float OPTIONAL
	WSDATA   nFINALVALUE1              AS float OPTIONAL
	WSDATA   nFINALVALUE2              AS float OPTIONAL
	WSDATA   nFINALVALUE3              AS float OPTIONAL
	WSDATA   nFINALVALUE4              AS float OPTIONAL
	WSDATA   nFINALVALUE5              AS float OPTIONAL
	WSDATA   nINITIALVALUE1            AS float OPTIONAL
	WSDATA   nINITIALVALUE2            AS float OPTIONAL
	WSDATA   nINITIALVALUE3            AS float OPTIONAL
	WSDATA   nINITIALVALUE4            AS float OPTIONAL
	WSDATA   nINITIALVALUE5            AS float OPTIONAL
	WSDATA   cINVOICED                 AS string OPTIONAL
	WSDATA   cINVOICEPRODUCTCODE       AS string OPTIONAL
	WSDATA   cMAINWBSCODE              AS string OPTIONAL
	WSDATA   nMARKUPCOUST              AS float OPTIONAL
	WSDATA   nMARKUPVALUE              AS float OPTIONAL
	WSDATA   cMEASUREMENTMETHOD        AS string OPTIONAL
	WSDATA   oWSNOTES                  AS PMSPROJECTS_ARRAYOFNOTESVIEW OPTIONAL
	WSDATA   cOBS                      AS string OPTIONAL
	WSDATA   cPROJECTCODE              AS string OPTIONAL
	WSDATA   nQUANTITY                 AS integer OPTIONAL
	WSDATA   nRATEENTERED2             AS float OPTIONAL
	WSDATA   nRATEENTERED3             AS float OPTIONAL
	WSDATA   nRATEENTERED4             AS float OPTIONAL
	WSDATA   nRATEENTERED5             AS float OPTIONAL
	WSDATA   dRESTRICTIONDATE          AS date OPTIONAL
	WSDATA   cRESTRICTIONTIME          AS string OPTIONAL
	WSDATA   cRESTRICTIONTYPE          AS string OPTIONAL
	WSDATA   nSALESGRANDTOTAL          AS float OPTIONAL
	WSDATA   cSENDEMAIL                AS string OPTIONAL
	WSDATA   cSTRUCTUREORDER           AS string OPTIONAL
	WSDATA   nTAKSCOST1                AS float OPTIONAL
	WSDATA   nTAKSCOST2                AS float OPTIONAL
	WSDATA   nTAKSCOST3                AS float OPTIONAL
	WSDATA   nTAKSCOST4                AS float OPTIONAL
	WSDATA   nTAKSCOST5                AS float OPTIONAL
	WSDATA   cTASKCODE                 AS string OPTIONAL
	WSDATA   nTASKDURATIONHOURS        AS float OPTIONAL
	WSDATA   cTASKGROUP                AS string OPTIONAL
	WSDATA   cTASKLEVEL                AS string OPTIONAL
	WSDATA   nTASKPRIORITY             AS integer OPTIONAL
	WSDATA   nTASKUSEFULHOURS          AS float OPTIONAL
	WSDATA   cUNIT                     AS string OPTIONAL
	WSDATA   oWSUSERFIELDS             AS PMSPROJECTS_ARRAYOFUSERFIELD OPTIONAL
	WSDATA   cVALUECLASS               AS string OPTIONAL
	WSDATA   cVERSION                  AS string OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT PMSPROJECTS_TASKDETAILVIEW
	::Init()
Return Self

WSMETHOD INIT WSCLIENT PMSPROJECTS_TASKDETAILVIEW
Return

WSMETHOD CLONE WSCLIENT PMSPROJECTS_TASKDETAILVIEW
	Local oClone := PMSPROJECTS_TASKDETAILVIEW():NEW()
	oClone:cACCOUNTINGITEM      := ::cACCOUNTINGITEM
	oClone:cCALENDAR            := ::cCALENDAR
	oClone:cCOMPOSITIONCODE     := ::cCOMPOSITIONCODE
	oClone:dCONVERSIONDATE      := ::dCONVERSIONDATE
	oClone:cCOSTCENTER          := ::cCOSTCENTER
	oClone:nCURRENCYACTUALVALUE1 := ::nCURRENCYACTUALVALUE1
	oClone:nCURRENCYACTUALVALUE2 := ::nCURRENCYACTUALVALUE2
	oClone:nCURRENCYACTUALVALUE3 := ::nCURRENCYACTUALVALUE3
	oClone:nCURRENCYACTUALVALUE4 := ::nCURRENCYACTUALVALUE4
	oClone:nCURRENCYACTUALVALUE5 := ::nCURRENCYACTUALVALUE5
	oClone:cCURRENCYCONVERSION  := ::cCURRENCYCONVERSION
	oClone:cDESCRIPTION         := ::cDESCRIPTION
	oClone:dESTIMATEDFINALDATE  := ::dESTIMATEDFINALDATE
	oClone:cESTIMATEDFINALHOUR  := ::cESTIMATEDFINALHOUR
	oClone:dESTIMATEDINITIALDATE := ::dESTIMATEDINITIALDATE
	oClone:cESTIMATEDINITIALHOUR := ::cESTIMATEDINITIALHOUR
	oClone:dEXECUTIONFINALDATE  := ::dEXECUTIONFINALDATE
	oClone:dEXECUTIONINITIALDATE := ::dEXECUTIONINITIALDATE
	oClone:nEXPENSEVALUE1       := ::nEXPENSEVALUE1
	oClone:nEXPENSEVALUE2       := ::nEXPENSEVALUE2
	oClone:nEXPENSEVALUE3       := ::nEXPENSEVALUE3
	oClone:nEXPENSEVALUE4       := ::nEXPENSEVALUE4
	oClone:nEXPENSEVALUE5       := ::nEXPENSEVALUE5
	oClone:nFINALVALUE1         := ::nFINALVALUE1
	oClone:nFINALVALUE2         := ::nFINALVALUE2
	oClone:nFINALVALUE3         := ::nFINALVALUE3
	oClone:nFINALVALUE4         := ::nFINALVALUE4
	oClone:nFINALVALUE5         := ::nFINALVALUE5
	oClone:nINITIALVALUE1       := ::nINITIALVALUE1
	oClone:nINITIALVALUE2       := ::nINITIALVALUE2
	oClone:nINITIALVALUE3       := ::nINITIALVALUE3
	oClone:nINITIALVALUE4       := ::nINITIALVALUE4
	oClone:nINITIALVALUE5       := ::nINITIALVALUE5
	oClone:cINVOICED            := ::cINVOICED
	oClone:cINVOICEPRODUCTCODE  := ::cINVOICEPRODUCTCODE
	oClone:cMAINWBSCODE         := ::cMAINWBSCODE
	oClone:nMARKUPCOUST         := ::nMARKUPCOUST
	oClone:nMARKUPVALUE         := ::nMARKUPVALUE
	oClone:cMEASUREMENTMETHOD   := ::cMEASUREMENTMETHOD
	oClone:oWSNOTES             := IIF(::oWSNOTES = NIL , NIL , ::oWSNOTES:Clone() )
	oClone:cOBS                 := ::cOBS
	oClone:cPROJECTCODE         := ::cPROJECTCODE
	oClone:nQUANTITY            := ::nQUANTITY
	oClone:nRATEENTERED2        := ::nRATEENTERED2
	oClone:nRATEENTERED3        := ::nRATEENTERED3
	oClone:nRATEENTERED4        := ::nRATEENTERED4
	oClone:nRATEENTERED5        := ::nRATEENTERED5
	oClone:dRESTRICTIONDATE     := ::dRESTRICTIONDATE
	oClone:cRESTRICTIONTIME     := ::cRESTRICTIONTIME
	oClone:cRESTRICTIONTYPE     := ::cRESTRICTIONTYPE
	oClone:nSALESGRANDTOTAL     := ::nSALESGRANDTOTAL
	oClone:cSENDEMAIL           := ::cSENDEMAIL
	oClone:cSTRUCTUREORDER      := ::cSTRUCTUREORDER
	oClone:nTAKSCOST1           := ::nTAKSCOST1
	oClone:nTAKSCOST2           := ::nTAKSCOST2
	oClone:nTAKSCOST3           := ::nTAKSCOST3
	oClone:nTAKSCOST4           := ::nTAKSCOST4
	oClone:nTAKSCOST5           := ::nTAKSCOST5
	oClone:cTASKCODE            := ::cTASKCODE
	oClone:nTASKDURATIONHOURS   := ::nTASKDURATIONHOURS
	oClone:cTASKGROUP           := ::cTASKGROUP
	oClone:cTASKLEVEL           := ::cTASKLEVEL
	oClone:nTASKPRIORITY        := ::nTASKPRIORITY
	oClone:nTASKUSEFULHOURS     := ::nTASKUSEFULHOURS
	oClone:cUNIT                := ::cUNIT
	oClone:oWSUSERFIELDS        := IIF(::oWSUSERFIELDS = NIL , NIL , ::oWSUSERFIELDS:Clone() )
	oClone:cVALUECLASS          := ::cVALUECLASS
	oClone:cVERSION             := ::cVERSION
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT PMSPROJECTS_TASKDETAILVIEW
	Local oNode40
	Local oNode66
	::Init()
	If oResponse = NIL ; Return ; Endif 
	::cACCOUNTINGITEM    :=  WSAdvValue( oResponse,"_ACCOUNTINGITEM","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cCALENDAR          :=  WSAdvValue( oResponse,"_CALENDAR","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cCOMPOSITIONCODE   :=  WSAdvValue( oResponse,"_COMPOSITIONCODE","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::dCONVERSIONDATE    :=  WSAdvValue( oResponse,"_CONVERSIONDATE","date",NIL,NIL,NIL,"D",NIL,NIL) 
	::cCOSTCENTER        :=  WSAdvValue( oResponse,"_COSTCENTER","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::nCURRENCYACTUALVALUE1 :=  WSAdvValue( oResponse,"_CURRENCYACTUALVALUE1","float",NIL,NIL,NIL,"N",NIL,NIL) 
	::nCURRENCYACTUALVALUE2 :=  WSAdvValue( oResponse,"_CURRENCYACTUALVALUE2","float",NIL,NIL,NIL,"N",NIL,NIL) 
	::nCURRENCYACTUALVALUE3 :=  WSAdvValue( oResponse,"_CURRENCYACTUALVALUE3","float",NIL,NIL,NIL,"N",NIL,NIL) 
	::nCURRENCYACTUALVALUE4 :=  WSAdvValue( oResponse,"_CURRENCYACTUALVALUE4","float",NIL,NIL,NIL,"N",NIL,NIL) 
	::nCURRENCYACTUALVALUE5 :=  WSAdvValue( oResponse,"_CURRENCYACTUALVALUE5","float",NIL,NIL,NIL,"N",NIL,NIL) 
	::cCURRENCYCONVERSION :=  WSAdvValue( oResponse,"_CURRENCYCONVERSION","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cDESCRIPTION       :=  WSAdvValue( oResponse,"_DESCRIPTION","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::dESTIMATEDFINALDATE :=  WSAdvValue( oResponse,"_ESTIMATEDFINALDATE","date",NIL,NIL,NIL,"D",NIL,NIL) 
	::cESTIMATEDFINALHOUR :=  WSAdvValue( oResponse,"_ESTIMATEDFINALHOUR","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::dESTIMATEDINITIALDATE :=  WSAdvValue( oResponse,"_ESTIMATEDINITIALDATE","date",NIL,NIL,NIL,"D",NIL,NIL) 
	::cESTIMATEDINITIALHOUR :=  WSAdvValue( oResponse,"_ESTIMATEDINITIALHOUR","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::dEXECUTIONFINALDATE :=  WSAdvValue( oResponse,"_EXECUTIONFINALDATE","date",NIL,NIL,NIL,"D",NIL,NIL) 
	::dEXECUTIONINITIALDATE :=  WSAdvValue( oResponse,"_EXECUTIONINITIALDATE","date",NIL,NIL,NIL,"D",NIL,NIL) 
	::nEXPENSEVALUE1     :=  WSAdvValue( oResponse,"_EXPENSEVALUE1","float",NIL,NIL,NIL,"N",NIL,NIL) 
	::nEXPENSEVALUE2     :=  WSAdvValue( oResponse,"_EXPENSEVALUE2","float",NIL,NIL,NIL,"N",NIL,NIL) 
	::nEXPENSEVALUE3     :=  WSAdvValue( oResponse,"_EXPENSEVALUE3","float",NIL,NIL,NIL,"N",NIL,NIL) 
	::nEXPENSEVALUE4     :=  WSAdvValue( oResponse,"_EXPENSEVALUE4","float",NIL,NIL,NIL,"N",NIL,NIL) 
	::nEXPENSEVALUE5     :=  WSAdvValue( oResponse,"_EXPENSEVALUE5","float",NIL,NIL,NIL,"N",NIL,NIL) 
	::nFINALVALUE1       :=  WSAdvValue( oResponse,"_FINALVALUE1","float",NIL,NIL,NIL,"N",NIL,NIL) 
	::nFINALVALUE2       :=  WSAdvValue( oResponse,"_FINALVALUE2","float",NIL,NIL,NIL,"N",NIL,NIL) 
	::nFINALVALUE3       :=  WSAdvValue( oResponse,"_FINALVALUE3","float",NIL,NIL,NIL,"N",NIL,NIL) 
	::nFINALVALUE4       :=  WSAdvValue( oResponse,"_FINALVALUE4","float",NIL,NIL,NIL,"N",NIL,NIL) 
	::nFINALVALUE5       :=  WSAdvValue( oResponse,"_FINALVALUE5","float",NIL,NIL,NIL,"N",NIL,NIL) 
	::nINITIALVALUE1     :=  WSAdvValue( oResponse,"_INITIALVALUE1","float",NIL,NIL,NIL,"N",NIL,NIL) 
	::nINITIALVALUE2     :=  WSAdvValue( oResponse,"_INITIALVALUE2","float",NIL,NIL,NIL,"N",NIL,NIL) 
	::nINITIALVALUE3     :=  WSAdvValue( oResponse,"_INITIALVALUE3","float",NIL,NIL,NIL,"N",NIL,NIL) 
	::nINITIALVALUE4     :=  WSAdvValue( oResponse,"_INITIALVALUE4","float",NIL,NIL,NIL,"N",NIL,NIL) 
	::nINITIALVALUE5     :=  WSAdvValue( oResponse,"_INITIALVALUE5","float",NIL,NIL,NIL,"N",NIL,NIL) 
	::cINVOICED          :=  WSAdvValue( oResponse,"_INVOICED","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cINVOICEPRODUCTCODE :=  WSAdvValue( oResponse,"_INVOICEPRODUCTCODE","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cMAINWBSCODE       :=  WSAdvValue( oResponse,"_MAINWBSCODE","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::nMARKUPCOUST       :=  WSAdvValue( oResponse,"_MARKUPCOUST","float",NIL,NIL,NIL,"N",NIL,NIL) 
	::nMARKUPVALUE       :=  WSAdvValue( oResponse,"_MARKUPVALUE","float",NIL,NIL,NIL,"N",NIL,NIL) 
	::cMEASUREMENTMETHOD :=  WSAdvValue( oResponse,"_MEASUREMENTMETHOD","string",NIL,NIL,NIL,"S",NIL,NIL) 
	oNode40 :=  WSAdvValue( oResponse,"_NOTES","ARRAYOFNOTESVIEW",NIL,NIL,NIL,"O",NIL,NIL) 
	If oNode40 != NIL
		::oWSNOTES := PMSPROJECTS_ARRAYOFNOTESVIEW():New()
		::oWSNOTES:SoapRecv(oNode40)
	EndIf
	::cOBS               :=  WSAdvValue( oResponse,"_OBS","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cPROJECTCODE       :=  WSAdvValue( oResponse,"_PROJECTCODE","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::nQUANTITY          :=  WSAdvValue( oResponse,"_QUANTITY","integer",NIL,NIL,NIL,"N",NIL,NIL) 
	::nRATEENTERED2      :=  WSAdvValue( oResponse,"_RATEENTERED2","float",NIL,NIL,NIL,"N",NIL,NIL) 
	::nRATEENTERED3      :=  WSAdvValue( oResponse,"_RATEENTERED3","float",NIL,NIL,NIL,"N",NIL,NIL) 
	::nRATEENTERED4      :=  WSAdvValue( oResponse,"_RATEENTERED4","float",NIL,NIL,NIL,"N",NIL,NIL) 
	::nRATEENTERED5      :=  WSAdvValue( oResponse,"_RATEENTERED5","float",NIL,NIL,NIL,"N",NIL,NIL) 
	::dRESTRICTIONDATE   :=  WSAdvValue( oResponse,"_RESTRICTIONDATE","date",NIL,NIL,NIL,"D",NIL,NIL) 
	::cRESTRICTIONTIME   :=  WSAdvValue( oResponse,"_RESTRICTIONTIME","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cRESTRICTIONTYPE   :=  WSAdvValue( oResponse,"_RESTRICTIONTYPE","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::nSALESGRANDTOTAL   :=  WSAdvValue( oResponse,"_SALESGRANDTOTAL","float",NIL,NIL,NIL,"N",NIL,NIL) 
	::cSENDEMAIL         :=  WSAdvValue( oResponse,"_SENDEMAIL","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cSTRUCTUREORDER    :=  WSAdvValue( oResponse,"_STRUCTUREORDER","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::nTAKSCOST1         :=  WSAdvValue( oResponse,"_TAKSCOST1","float",NIL,NIL,NIL,"N",NIL,NIL) 
	::nTAKSCOST2         :=  WSAdvValue( oResponse,"_TAKSCOST2","float",NIL,NIL,NIL,"N",NIL,NIL) 
	::nTAKSCOST3         :=  WSAdvValue( oResponse,"_TAKSCOST3","float",NIL,NIL,NIL,"N",NIL,NIL) 
	::nTAKSCOST4         :=  WSAdvValue( oResponse,"_TAKSCOST4","float",NIL,NIL,NIL,"N",NIL,NIL) 
	::nTAKSCOST5         :=  WSAdvValue( oResponse,"_TAKSCOST5","float",NIL,NIL,NIL,"N",NIL,NIL) 
	::cTASKCODE          :=  WSAdvValue( oResponse,"_TASKCODE","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::nTASKDURATIONHOURS :=  WSAdvValue( oResponse,"_TASKDURATIONHOURS","float",NIL,NIL,NIL,"N",NIL,NIL) 
	::cTASKGROUP         :=  WSAdvValue( oResponse,"_TASKGROUP","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cTASKLEVEL         :=  WSAdvValue( oResponse,"_TASKLEVEL","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::nTASKPRIORITY      :=  WSAdvValue( oResponse,"_TASKPRIORITY","integer",NIL,NIL,NIL,"N",NIL,NIL) 
	::nTASKUSEFULHOURS   :=  WSAdvValue( oResponse,"_TASKUSEFULHOURS","float",NIL,NIL,NIL,"N",NIL,NIL) 
	::cUNIT              :=  WSAdvValue( oResponse,"_UNIT","string",NIL,NIL,NIL,"S",NIL,NIL) 
	oNode66 :=  WSAdvValue( oResponse,"_USERFIELDS","ARRAYOFUSERFIELD",NIL,NIL,NIL,"O",NIL,NIL) 
	If oNode66 != NIL
		::oWSUSERFIELDS := PMSPROJECTS_ARRAYOFUSERFIELD():New()
		::oWSUSERFIELDS:SoapRecv(oNode66)
	EndIf
	::cVALUECLASS        :=  WSAdvValue( oResponse,"_VALUECLASS","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cVERSION           :=  WSAdvValue( oResponse,"_VERSION","string",NIL,NIL,NIL,"S",NIL,NIL) 
Return

// WSDL Data Structure TASKLISTVIEW

WSSTRUCT PMSPROJECTS_TASKLISTVIEW
	WSDATA   cACCOUNTINGITEM           AS string OPTIONAL
	WSDATA   cCALENDAR                 AS string OPTIONAL
	WSDATA   cCOMPOSITIONCODE          AS string OPTIONAL
	WSDATA   dCONVERSIONDATE           AS date OPTIONAL
	WSDATA   cCOSTCENTER               AS string OPTIONAL
	WSDATA   cCURRENCYCONVERSION       AS string OPTIONAL
	WSDATA   nCURRENCYCOST1            AS float OPTIONAL
	WSDATA   nCURRENCYCOST2            AS float OPTIONAL
	WSDATA   nCURRENCYCOST3            AS float OPTIONAL
	WSDATA   nCURRENCYCOST4            AS float OPTIONAL
	WSDATA   nCURRENCYCOST5            AS float OPTIONAL
	WSDATA   nCURRENCYRATE2            AS float OPTIONAL
	WSDATA   nCURRENCYRATE3            AS float OPTIONAL
	WSDATA   nCURRENCYRATE4            AS float OPTIONAL
	WSDATA   nCURRENCYRATE5            AS float OPTIONAL
	WSDATA   nCURRENTVALUE1            AS float OPTIONAL
	WSDATA   nCURRENTVALUE2            AS float OPTIONAL
	WSDATA   nCURRENTVALUE3            AS float OPTIONAL
	WSDATA   nCURRENTVALUE4            AS float OPTIONAL
	WSDATA   nCURRENTVALUE5            AS float OPTIONAL
	WSDATA   cDESCRIPTION              AS string OPTIONAL
	WSDATA   dESTIMATEDFINALDATE       AS date OPTIONAL
	WSDATA   cESTIMATEDFINALHOUR       AS string OPTIONAL
	WSDATA   dESTIMATEDINITIALDATE     AS date OPTIONAL
	WSDATA   cESTIMATEDINITIALHOUR     AS string OPTIONAL
	WSDATA   dEXECUTIONFINALDATE       AS date OPTIONAL
	WSDATA   dEXECUTIONINITIALDATE     AS date OPTIONAL
	WSDATA   nEXPENSEVALUE1            AS float OPTIONAL
	WSDATA   nEXPENSEVALUE2            AS float OPTIONAL
	WSDATA   nEXPENSEVALUE3            AS float OPTIONAL
	WSDATA   nEXPENSEVALUE4            AS float OPTIONAL
	WSDATA   nEXPENSEVALUE5            AS float OPTIONAL
	WSDATA   nFINALVALUE1              AS float OPTIONAL
	WSDATA   nFINALVALUE2              AS float OPTIONAL
	WSDATA   nFINALVALUE3              AS float OPTIONAL
	WSDATA   nFINALVALUE4              AS float OPTIONAL
	WSDATA   nFINALVALUE5              AS float OPTIONAL
	WSDATA   nGRANDTOTAL               AS float OPTIONAL
	WSDATA   cGROUP                    AS string OPTIONAL
	WSDATA   nINITIALVALUE1            AS float OPTIONAL
	WSDATA   nINITIALVALUE2            AS float OPTIONAL
	WSDATA   nINITIALVALUE3            AS float OPTIONAL
	WSDATA   nINITIALVALUE4            AS float OPTIONAL
	WSDATA   nINITIALVALUE5            AS float OPTIONAL
	WSDATA   cINVOICED                 AS string OPTIONAL
	WSDATA   cINVOICEPRODUCTCODE       AS string OPTIONAL
	WSDATA   cLEVEL                    AS string OPTIONAL
	WSDATA   cMAINWBS                  AS string OPTIONAL
	WSDATA   nMARKUPPERCENT            AS float OPTIONAL
	WSDATA   nMARKUPVALUE              AS float OPTIONAL
	WSDATA   cMEASUREMENTMETHOD        AS string OPTIONAL
	WSDATA   cMU                       AS string OPTIONAL
	WSDATA   nPRIORITY                 AS integer OPTIONAL
	WSDATA   nQUANTITY                 AS integer OPTIONAL
	WSDATA   dRESTRICTDATE             AS date OPTIONAL
	WSDATA   cRESTRICTION              AS string OPTIONAL
	WSDATA   cRESTRICTTIME             AS string OPTIONAL
	WSDATA   cSENDEMAIL                AS string OPTIONAL
	WSDATA   cSTRUCTUREORDER           AS string OPTIONAL
	WSDATA   cTASK                     AS string OPTIONAL
	WSDATA   nTIMEDURATION             AS integer OPTIONAL
	WSDATA   nUSEFULHOURS              AS float OPTIONAL
	WSDATA   oWSUSERFIELDS             AS PMSPROJECTS_ARRAYOFUSERFIELD OPTIONAL
	WSDATA   cVALUECLASS               AS string OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT PMSPROJECTS_TASKLISTVIEW
	::Init()
Return Self

WSMETHOD INIT WSCLIENT PMSPROJECTS_TASKLISTVIEW
Return

WSMETHOD CLONE WSCLIENT PMSPROJECTS_TASKLISTVIEW
	Local oClone := PMSPROJECTS_TASKLISTVIEW():NEW()
	oClone:cACCOUNTINGITEM      := ::cACCOUNTINGITEM
	oClone:cCALENDAR            := ::cCALENDAR
	oClone:cCOMPOSITIONCODE     := ::cCOMPOSITIONCODE
	oClone:dCONVERSIONDATE      := ::dCONVERSIONDATE
	oClone:cCOSTCENTER          := ::cCOSTCENTER
	oClone:cCURRENCYCONVERSION  := ::cCURRENCYCONVERSION
	oClone:nCURRENCYCOST1       := ::nCURRENCYCOST1
	oClone:nCURRENCYCOST2       := ::nCURRENCYCOST2
	oClone:nCURRENCYCOST3       := ::nCURRENCYCOST3
	oClone:nCURRENCYCOST4       := ::nCURRENCYCOST4
	oClone:nCURRENCYCOST5       := ::nCURRENCYCOST5
	oClone:nCURRENCYRATE2       := ::nCURRENCYRATE2
	oClone:nCURRENCYRATE3       := ::nCURRENCYRATE3
	oClone:nCURRENCYRATE4       := ::nCURRENCYRATE4
	oClone:nCURRENCYRATE5       := ::nCURRENCYRATE5
	oClone:nCURRENTVALUE1       := ::nCURRENTVALUE1
	oClone:nCURRENTVALUE2       := ::nCURRENTVALUE2
	oClone:nCURRENTVALUE3       := ::nCURRENTVALUE3
	oClone:nCURRENTVALUE4       := ::nCURRENTVALUE4
	oClone:nCURRENTVALUE5       := ::nCURRENTVALUE5
	oClone:cDESCRIPTION         := ::cDESCRIPTION
	oClone:dESTIMATEDFINALDATE  := ::dESTIMATEDFINALDATE
	oClone:cESTIMATEDFINALHOUR  := ::cESTIMATEDFINALHOUR
	oClone:dESTIMATEDINITIALDATE := ::dESTIMATEDINITIALDATE
	oClone:cESTIMATEDINITIALHOUR := ::cESTIMATEDINITIALHOUR
	oClone:dEXECUTIONFINALDATE  := ::dEXECUTIONFINALDATE
	oClone:dEXECUTIONINITIALDATE := ::dEXECUTIONINITIALDATE
	oClone:nEXPENSEVALUE1       := ::nEXPENSEVALUE1
	oClone:nEXPENSEVALUE2       := ::nEXPENSEVALUE2
	oClone:nEXPENSEVALUE3       := ::nEXPENSEVALUE3
	oClone:nEXPENSEVALUE4       := ::nEXPENSEVALUE4
	oClone:nEXPENSEVALUE5       := ::nEXPENSEVALUE5
	oClone:nFINALVALUE1         := ::nFINALVALUE1
	oClone:nFINALVALUE2         := ::nFINALVALUE2
	oClone:nFINALVALUE3         := ::nFINALVALUE3
	oClone:nFINALVALUE4         := ::nFINALVALUE4
	oClone:nFINALVALUE5         := ::nFINALVALUE5
	oClone:nGRANDTOTAL          := ::nGRANDTOTAL
	oClone:cGROUP               := ::cGROUP
	oClone:nINITIALVALUE1       := ::nINITIALVALUE1
	oClone:nINITIALVALUE2       := ::nINITIALVALUE2
	oClone:nINITIALVALUE3       := ::nINITIALVALUE3
	oClone:nINITIALVALUE4       := ::nINITIALVALUE4
	oClone:nINITIALVALUE5       := ::nINITIALVALUE5
	oClone:cINVOICED            := ::cINVOICED
	oClone:cINVOICEPRODUCTCODE  := ::cINVOICEPRODUCTCODE
	oClone:cLEVEL               := ::cLEVEL
	oClone:cMAINWBS             := ::cMAINWBS
	oClone:nMARKUPPERCENT       := ::nMARKUPPERCENT
	oClone:nMARKUPVALUE         := ::nMARKUPVALUE
	oClone:cMEASUREMENTMETHOD   := ::cMEASUREMENTMETHOD
	oClone:cMU                  := ::cMU
	oClone:nPRIORITY            := ::nPRIORITY
	oClone:nQUANTITY            := ::nQUANTITY
	oClone:dRESTRICTDATE        := ::dRESTRICTDATE
	oClone:cRESTRICTION         := ::cRESTRICTION
	oClone:cRESTRICTTIME        := ::cRESTRICTTIME
	oClone:cSENDEMAIL           := ::cSENDEMAIL
	oClone:cSTRUCTUREORDER      := ::cSTRUCTUREORDER
	oClone:cTASK                := ::cTASK
	oClone:nTIMEDURATION        := ::nTIMEDURATION
	oClone:nUSEFULHOURS         := ::nUSEFULHOURS
	oClone:oWSUSERFIELDS        := IIF(::oWSUSERFIELDS = NIL , NIL , ::oWSUSERFIELDS:Clone() )
	oClone:cVALUECLASS          := ::cVALUECLASS
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT PMSPROJECTS_TASKLISTVIEW
	Local oNode63
	::Init()
	If oResponse = NIL ; Return ; Endif 
	::cACCOUNTINGITEM    :=  WSAdvValue( oResponse,"_ACCOUNTINGITEM","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cCALENDAR          :=  WSAdvValue( oResponse,"_CALENDAR","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cCOMPOSITIONCODE   :=  WSAdvValue( oResponse,"_COMPOSITIONCODE","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::dCONVERSIONDATE    :=  WSAdvValue( oResponse,"_CONVERSIONDATE","date",NIL,NIL,NIL,"D",NIL,NIL) 
	::cCOSTCENTER        :=  WSAdvValue( oResponse,"_COSTCENTER","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cCURRENCYCONVERSION :=  WSAdvValue( oResponse,"_CURRENCYCONVERSION","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::nCURRENCYCOST1     :=  WSAdvValue( oResponse,"_CURRENCYCOST1","float",NIL,NIL,NIL,"N",NIL,NIL) 
	::nCURRENCYCOST2     :=  WSAdvValue( oResponse,"_CURRENCYCOST2","float",NIL,NIL,NIL,"N",NIL,NIL) 
	::nCURRENCYCOST3     :=  WSAdvValue( oResponse,"_CURRENCYCOST3","float",NIL,NIL,NIL,"N",NIL,NIL) 
	::nCURRENCYCOST4     :=  WSAdvValue( oResponse,"_CURRENCYCOST4","float",NIL,NIL,NIL,"N",NIL,NIL) 
	::nCURRENCYCOST5     :=  WSAdvValue( oResponse,"_CURRENCYCOST5","float",NIL,NIL,NIL,"N",NIL,NIL) 
	::nCURRENCYRATE2     :=  WSAdvValue( oResponse,"_CURRENCYRATE2","float",NIL,NIL,NIL,"N",NIL,NIL) 
	::nCURRENCYRATE3     :=  WSAdvValue( oResponse,"_CURRENCYRATE3","float",NIL,NIL,NIL,"N",NIL,NIL) 
	::nCURRENCYRATE4     :=  WSAdvValue( oResponse,"_CURRENCYRATE4","float",NIL,NIL,NIL,"N",NIL,NIL) 
	::nCURRENCYRATE5     :=  WSAdvValue( oResponse,"_CURRENCYRATE5","float",NIL,NIL,NIL,"N",NIL,NIL) 
	::nCURRENTVALUE1     :=  WSAdvValue( oResponse,"_CURRENTVALUE1","float",NIL,NIL,NIL,"N",NIL,NIL) 
	::nCURRENTVALUE2     :=  WSAdvValue( oResponse,"_CURRENTVALUE2","float",NIL,NIL,NIL,"N",NIL,NIL) 
	::nCURRENTVALUE3     :=  WSAdvValue( oResponse,"_CURRENTVALUE3","float",NIL,NIL,NIL,"N",NIL,NIL) 
	::nCURRENTVALUE4     :=  WSAdvValue( oResponse,"_CURRENTVALUE4","float",NIL,NIL,NIL,"N",NIL,NIL) 
	::nCURRENTVALUE5     :=  WSAdvValue( oResponse,"_CURRENTVALUE5","float",NIL,NIL,NIL,"N",NIL,NIL) 
	::cDESCRIPTION       :=  WSAdvValue( oResponse,"_DESCRIPTION","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::dESTIMATEDFINALDATE :=  WSAdvValue( oResponse,"_ESTIMATEDFINALDATE","date",NIL,NIL,NIL,"D",NIL,NIL) 
	::cESTIMATEDFINALHOUR :=  WSAdvValue( oResponse,"_ESTIMATEDFINALHOUR","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::dESTIMATEDINITIALDATE :=  WSAdvValue( oResponse,"_ESTIMATEDINITIALDATE","date",NIL,NIL,NIL,"D",NIL,NIL) 
	::cESTIMATEDINITIALHOUR :=  WSAdvValue( oResponse,"_ESTIMATEDINITIALHOUR","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::dEXECUTIONFINALDATE :=  WSAdvValue( oResponse,"_EXECUTIONFINALDATE","date",NIL,NIL,NIL,"D",NIL,NIL) 
	::dEXECUTIONINITIALDATE :=  WSAdvValue( oResponse,"_EXECUTIONINITIALDATE","date",NIL,NIL,NIL,"D",NIL,NIL) 
	::nEXPENSEVALUE1     :=  WSAdvValue( oResponse,"_EXPENSEVALUE1","float",NIL,NIL,NIL,"N",NIL,NIL) 
	::nEXPENSEVALUE2     :=  WSAdvValue( oResponse,"_EXPENSEVALUE2","float",NIL,NIL,NIL,"N",NIL,NIL) 
	::nEXPENSEVALUE3     :=  WSAdvValue( oResponse,"_EXPENSEVALUE3","float",NIL,NIL,NIL,"N",NIL,NIL) 
	::nEXPENSEVALUE4     :=  WSAdvValue( oResponse,"_EXPENSEVALUE4","float",NIL,NIL,NIL,"N",NIL,NIL) 
	::nEXPENSEVALUE5     :=  WSAdvValue( oResponse,"_EXPENSEVALUE5","float",NIL,NIL,NIL,"N",NIL,NIL) 
	::nFINALVALUE1       :=  WSAdvValue( oResponse,"_FINALVALUE1","float",NIL,NIL,NIL,"N",NIL,NIL) 
	::nFINALVALUE2       :=  WSAdvValue( oResponse,"_FINALVALUE2","float",NIL,NIL,NIL,"N",NIL,NIL) 
	::nFINALVALUE3       :=  WSAdvValue( oResponse,"_FINALVALUE3","float",NIL,NIL,NIL,"N",NIL,NIL) 
	::nFINALVALUE4       :=  WSAdvValue( oResponse,"_FINALVALUE4","float",NIL,NIL,NIL,"N",NIL,NIL) 
	::nFINALVALUE5       :=  WSAdvValue( oResponse,"_FINALVALUE5","float",NIL,NIL,NIL,"N",NIL,NIL) 
	::nGRANDTOTAL        :=  WSAdvValue( oResponse,"_GRANDTOTAL","float",NIL,NIL,NIL,"N",NIL,NIL) 
	::cGROUP             :=  WSAdvValue( oResponse,"_GROUP","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::nINITIALVALUE1     :=  WSAdvValue( oResponse,"_INITIALVALUE1","float",NIL,NIL,NIL,"N",NIL,NIL) 
	::nINITIALVALUE2     :=  WSAdvValue( oResponse,"_INITIALVALUE2","float",NIL,NIL,NIL,"N",NIL,NIL) 
	::nINITIALVALUE3     :=  WSAdvValue( oResponse,"_INITIALVALUE3","float",NIL,NIL,NIL,"N",NIL,NIL) 
	::nINITIALVALUE4     :=  WSAdvValue( oResponse,"_INITIALVALUE4","float",NIL,NIL,NIL,"N",NIL,NIL) 
	::nINITIALVALUE5     :=  WSAdvValue( oResponse,"_INITIALVALUE5","float",NIL,NIL,NIL,"N",NIL,NIL) 
	::cINVOICED          :=  WSAdvValue( oResponse,"_INVOICED","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cINVOICEPRODUCTCODE :=  WSAdvValue( oResponse,"_INVOICEPRODUCTCODE","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cLEVEL             :=  WSAdvValue( oResponse,"_LEVEL","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cMAINWBS           :=  WSAdvValue( oResponse,"_MAINWBS","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::nMARKUPPERCENT     :=  WSAdvValue( oResponse,"_MARKUPPERCENT","float",NIL,NIL,NIL,"N",NIL,NIL) 
	::nMARKUPVALUE       :=  WSAdvValue( oResponse,"_MARKUPVALUE","float",NIL,NIL,NIL,"N",NIL,NIL) 
	::cMEASUREMENTMETHOD :=  WSAdvValue( oResponse,"_MEASUREMENTMETHOD","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cMU                :=  WSAdvValue( oResponse,"_MU","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::nPRIORITY          :=  WSAdvValue( oResponse,"_PRIORITY","integer",NIL,NIL,NIL,"N",NIL,NIL) 
	::nQUANTITY          :=  WSAdvValue( oResponse,"_QUANTITY","integer",NIL,NIL,NIL,"N",NIL,NIL) 
	::dRESTRICTDATE      :=  WSAdvValue( oResponse,"_RESTRICTDATE","date",NIL,NIL,NIL,"D",NIL,NIL) 
	::cRESTRICTION       :=  WSAdvValue( oResponse,"_RESTRICTION","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cRESTRICTTIME      :=  WSAdvValue( oResponse,"_RESTRICTTIME","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cSENDEMAIL         :=  WSAdvValue( oResponse,"_SENDEMAIL","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cSTRUCTUREORDER    :=  WSAdvValue( oResponse,"_STRUCTUREORDER","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cTASK              :=  WSAdvValue( oResponse,"_TASK","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::nTIMEDURATION      :=  WSAdvValue( oResponse,"_TIMEDURATION","integer",NIL,NIL,NIL,"N",NIL,NIL) 
	::nUSEFULHOURS       :=  WSAdvValue( oResponse,"_USEFULHOURS","float",NIL,NIL,NIL,"N",NIL,NIL) 
	oNode63 :=  WSAdvValue( oResponse,"_USERFIELDS","ARRAYOFUSERFIELD",NIL,NIL,NIL,"O",NIL,NIL) 
	If oNode63 != NIL
		::oWSUSERFIELDS := PMSPROJECTS_ARRAYOFUSERFIELD():New()
		::oWSUSERFIELDS:SoapRecv(oNode63)
	EndIf
	::cVALUECLASS        :=  WSAdvValue( oResponse,"_VALUECLASS","string",NIL,NIL,NIL,"S",NIL,NIL) 
Return

// WSDL Data Structure TASKPRODUCTSVIEW

WSSTRUCT PMSPROJECTS_TASKPRODUCTSVIEW
	WSDATA   cCOSTCALCULATIONMETHOD    AS string OPTIONAL
	WSDATA   nCURRENCY                 AS integer OPTIONAL
	WSDATA   cCURRENCYSYMBOL           AS string OPTIONAL
	WSDATA   cDESCRIPTION              AS string OPTIONAL
	WSDATA   cINVOICEPRODUCTCODE       AS string OPTIONAL
	WSDATA   cITEM                     AS string OPTIONAL
	WSDATA   dNECESSITYDATE            AS date OPTIONAL
	WSDATA   cPLANNINGCODE             AS string OPTIONAL
	WSDATA   cPRODUCTCODE              AS string OPTIONAL
	WSDATA   cPRODUCTTYPE              AS string OPTIONAL
	WSDATA   nQUANTITY                 AS integer OPTIONAL
	WSDATA   nQUANTITY2                AS integer OPTIONAL
	WSDATA   cRECALCULATECOSTS         AS string OPTIONAL
	WSDATA   nSTANDARDCOST             AS float OPTIONAL
	WSDATA   cSUBCOMPOSTIONCODE        AS string OPTIONAL
	WSDATA   cUNIT                     AS string OPTIONAL
	WSDATA   cUNIT2                    AS string OPTIONAL
	WSDATA   oWSUSERFIELDS             AS PMSPROJECTS_ARRAYOFUSERFIELD OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT PMSPROJECTS_TASKPRODUCTSVIEW
	::Init()
Return Self

WSMETHOD INIT WSCLIENT PMSPROJECTS_TASKPRODUCTSVIEW
Return

WSMETHOD CLONE WSCLIENT PMSPROJECTS_TASKPRODUCTSVIEW
	Local oClone := PMSPROJECTS_TASKPRODUCTSVIEW():NEW()
	oClone:cCOSTCALCULATIONMETHOD := ::cCOSTCALCULATIONMETHOD
	oClone:nCURRENCY            := ::nCURRENCY
	oClone:cCURRENCYSYMBOL      := ::cCURRENCYSYMBOL
	oClone:cDESCRIPTION         := ::cDESCRIPTION
	oClone:cINVOICEPRODUCTCODE  := ::cINVOICEPRODUCTCODE
	oClone:cITEM                := ::cITEM
	oClone:dNECESSITYDATE       := ::dNECESSITYDATE
	oClone:cPLANNINGCODE        := ::cPLANNINGCODE
	oClone:cPRODUCTCODE         := ::cPRODUCTCODE
	oClone:cPRODUCTTYPE         := ::cPRODUCTTYPE
	oClone:nQUANTITY            := ::nQUANTITY
	oClone:nQUANTITY2           := ::nQUANTITY2
	oClone:cRECALCULATECOSTS    := ::cRECALCULATECOSTS
	oClone:nSTANDARDCOST        := ::nSTANDARDCOST
	oClone:cSUBCOMPOSTIONCODE   := ::cSUBCOMPOSTIONCODE
	oClone:cUNIT                := ::cUNIT
	oClone:cUNIT2               := ::cUNIT2
	oClone:oWSUSERFIELDS        := IIF(::oWSUSERFIELDS = NIL , NIL , ::oWSUSERFIELDS:Clone() )
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT PMSPROJECTS_TASKPRODUCTSVIEW
	Local oNode18
	::Init()
	If oResponse = NIL ; Return ; Endif 
	::cCOSTCALCULATIONMETHOD :=  WSAdvValue( oResponse,"_COSTCALCULATIONMETHOD","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::nCURRENCY          :=  WSAdvValue( oResponse,"_CURRENCY","integer",NIL,NIL,NIL,"N",NIL,NIL) 
	::cCURRENCYSYMBOL    :=  WSAdvValue( oResponse,"_CURRENCYSYMBOL","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cDESCRIPTION       :=  WSAdvValue( oResponse,"_DESCRIPTION","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cINVOICEPRODUCTCODE :=  WSAdvValue( oResponse,"_INVOICEPRODUCTCODE","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cITEM              :=  WSAdvValue( oResponse,"_ITEM","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::dNECESSITYDATE     :=  WSAdvValue( oResponse,"_NECESSITYDATE","date",NIL,NIL,NIL,"D",NIL,NIL) 
	::cPLANNINGCODE      :=  WSAdvValue( oResponse,"_PLANNINGCODE","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cPRODUCTCODE       :=  WSAdvValue( oResponse,"_PRODUCTCODE","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cPRODUCTTYPE       :=  WSAdvValue( oResponse,"_PRODUCTTYPE","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::nQUANTITY          :=  WSAdvValue( oResponse,"_QUANTITY","integer",NIL,NIL,NIL,"N",NIL,NIL) 
	::nQUANTITY2         :=  WSAdvValue( oResponse,"_QUANTITY2","integer",NIL,NIL,NIL,"N",NIL,NIL) 
	::cRECALCULATECOSTS  :=  WSAdvValue( oResponse,"_RECALCULATECOSTS","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::nSTANDARDCOST      :=  WSAdvValue( oResponse,"_STANDARDCOST","float",NIL,NIL,NIL,"N",NIL,NIL) 
	::cSUBCOMPOSTIONCODE :=  WSAdvValue( oResponse,"_SUBCOMPOSTIONCODE","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cUNIT              :=  WSAdvValue( oResponse,"_UNIT","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cUNIT2             :=  WSAdvValue( oResponse,"_UNIT2","string",NIL,NIL,NIL,"S",NIL,NIL) 
	oNode18 :=  WSAdvValue( oResponse,"_USERFIELDS","ARRAYOFUSERFIELD",NIL,NIL,NIL,"O",NIL,NIL) 
	If oNode18 != NIL
		::oWSUSERFIELDS := PMSPROJECTS_ARRAYOFUSERFIELD():New()
		::oWSUSERFIELDS:SoapRecv(oNode18)
	EndIf
Return

// WSDL Data Structure WBSDETAILVIEW

WSSTRUCT PMSPROJECTS_WBSDETAILVIEW
	WSDATA   cCALENDAR                 AS string OPTIONAL
	WSDATA   nCOSTCURRENCYFIVE         AS float OPTIONAL
	WSDATA   nCOSTCURRENCYFOR          AS float OPTIONAL
	WSDATA   nCOSTCURRENCYONE          AS float OPTIONAL
	WSDATA   nCOSTCURRENCYTHREE        AS float OPTIONAL
	WSDATA   nCOSTCURRENCYTWO          AS float OPTIONAL
	WSDATA   cDESCRIPTION              AS string OPTIONAL
	WSDATA   dESTIMATEDFINALDATE       AS date OPTIONAL
	WSDATA   cESTIMATEDFINALHOUR       AS string OPTIONAL
	WSDATA   dESTIMATEDINITIALDATE     AS date OPTIONAL
	WSDATA   cESTIMATEDINITIALHOUR     AS string OPTIONAL
	WSDATA   dEXECUTEDFINALDATE        AS date OPTIONAL
	WSDATA   dEXECUTEDINITIALDATE      AS date OPTIONAL
	WSDATA   cINVOICED                 AS string OPTIONAL
	WSDATA   cLEVEL                    AS string OPTIONAL
	WSDATA   nMARKUPVALUE              AS float OPTIONAL
	WSDATA   oWSNOTES                  AS PMSPROJECTS_ARRAYOFNOTESVIEW OPTIONAL
	WSDATA   cOBS                      AS string OPTIONAL
	WSDATA   cPROJECTCODE              AS string OPTIONAL
	WSDATA   nQUANTITY                 AS integer OPTIONAL
	WSDATA   cREVISION                 AS string OPTIONAL
	WSDATA   nSALESGRANDTOTAL          AS float OPTIONAL
	WSDATA   cSTRUCTUREORDER           AS string OPTIONAL
	WSDATA   nTASKUSEFULHOURS          AS integer OPTIONAL
	WSDATA   nTIMEDURATION             AS float OPTIONAL
	WSDATA   cUNITY                    AS string OPTIONAL
	WSDATA   oWSUSERFIELDS             AS PMSPROJECTS_ARRAYOFUSERFIELD OPTIONAL
	WSDATA   cWBSCODE                  AS string OPTIONAL
	WSDATA   cWBSFATHER                AS string OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT PMSPROJECTS_WBSDETAILVIEW
	::Init()
Return Self

WSMETHOD INIT WSCLIENT PMSPROJECTS_WBSDETAILVIEW
Return

WSMETHOD CLONE WSCLIENT PMSPROJECTS_WBSDETAILVIEW
	Local oClone := PMSPROJECTS_WBSDETAILVIEW():NEW()
	oClone:cCALENDAR            := ::cCALENDAR
	oClone:nCOSTCURRENCYFIVE    := ::nCOSTCURRENCYFIVE
	oClone:nCOSTCURRENCYFOR     := ::nCOSTCURRENCYFOR
	oClone:nCOSTCURRENCYONE     := ::nCOSTCURRENCYONE
	oClone:nCOSTCURRENCYTHREE   := ::nCOSTCURRENCYTHREE
	oClone:nCOSTCURRENCYTWO     := ::nCOSTCURRENCYTWO
	oClone:cDESCRIPTION         := ::cDESCRIPTION
	oClone:dESTIMATEDFINALDATE  := ::dESTIMATEDFINALDATE
	oClone:cESTIMATEDFINALHOUR  := ::cESTIMATEDFINALHOUR
	oClone:dESTIMATEDINITIALDATE := ::dESTIMATEDINITIALDATE
	oClone:cESTIMATEDINITIALHOUR := ::cESTIMATEDINITIALHOUR
	oClone:dEXECUTEDFINALDATE   := ::dEXECUTEDFINALDATE
	oClone:dEXECUTEDINITIALDATE := ::dEXECUTEDINITIALDATE
	oClone:cINVOICED            := ::cINVOICED
	oClone:cLEVEL               := ::cLEVEL
	oClone:nMARKUPVALUE         := ::nMARKUPVALUE
	oClone:oWSNOTES             := IIF(::oWSNOTES = NIL , NIL , ::oWSNOTES:Clone() )
	oClone:cOBS                 := ::cOBS
	oClone:cPROJECTCODE         := ::cPROJECTCODE
	oClone:nQUANTITY            := ::nQUANTITY
	oClone:cREVISION            := ::cREVISION
	oClone:nSALESGRANDTOTAL     := ::nSALESGRANDTOTAL
	oClone:cSTRUCTUREORDER      := ::cSTRUCTUREORDER
	oClone:nTASKUSEFULHOURS     := ::nTASKUSEFULHOURS
	oClone:nTIMEDURATION        := ::nTIMEDURATION
	oClone:cUNITY               := ::cUNITY
	oClone:oWSUSERFIELDS        := IIF(::oWSUSERFIELDS = NIL , NIL , ::oWSUSERFIELDS:Clone() )
	oClone:cWBSCODE             := ::cWBSCODE
	oClone:cWBSFATHER           := ::cWBSFATHER
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT PMSPROJECTS_WBSDETAILVIEW
	Local oNode17
	Local oNode27
	::Init()
	If oResponse = NIL ; Return ; Endif 
	::cCALENDAR          :=  WSAdvValue( oResponse,"_CALENDAR","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::nCOSTCURRENCYFIVE  :=  WSAdvValue( oResponse,"_COSTCURRENCYFIVE","float",NIL,NIL,NIL,"N",NIL,NIL) 
	::nCOSTCURRENCYFOR   :=  WSAdvValue( oResponse,"_COSTCURRENCYFOR","float",NIL,NIL,NIL,"N",NIL,NIL) 
	::nCOSTCURRENCYONE   :=  WSAdvValue( oResponse,"_COSTCURRENCYONE","float",NIL,NIL,NIL,"N",NIL,NIL) 
	::nCOSTCURRENCYTHREE :=  WSAdvValue( oResponse,"_COSTCURRENCYTHREE","float",NIL,NIL,NIL,"N",NIL,NIL) 
	::nCOSTCURRENCYTWO   :=  WSAdvValue( oResponse,"_COSTCURRENCYTWO","float",NIL,NIL,NIL,"N",NIL,NIL) 
	::cDESCRIPTION       :=  WSAdvValue( oResponse,"_DESCRIPTION","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::dESTIMATEDFINALDATE :=  WSAdvValue( oResponse,"_ESTIMATEDFINALDATE","date",NIL,NIL,NIL,"D",NIL,NIL) 
	::cESTIMATEDFINALHOUR :=  WSAdvValue( oResponse,"_ESTIMATEDFINALHOUR","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::dESTIMATEDINITIALDATE :=  WSAdvValue( oResponse,"_ESTIMATEDINITIALDATE","date",NIL,NIL,NIL,"D",NIL,NIL) 
	::cESTIMATEDINITIALHOUR :=  WSAdvValue( oResponse,"_ESTIMATEDINITIALHOUR","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::dEXECUTEDFINALDATE :=  WSAdvValue( oResponse,"_EXECUTEDFINALDATE","date",NIL,NIL,NIL,"D",NIL,NIL) 
	::dEXECUTEDINITIALDATE :=  WSAdvValue( oResponse,"_EXECUTEDINITIALDATE","date",NIL,NIL,NIL,"D",NIL,NIL) 
	::cINVOICED          :=  WSAdvValue( oResponse,"_INVOICED","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cLEVEL             :=  WSAdvValue( oResponse,"_LEVEL","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::nMARKUPVALUE       :=  WSAdvValue( oResponse,"_MARKUPVALUE","float",NIL,NIL,NIL,"N",NIL,NIL) 
	oNode17 :=  WSAdvValue( oResponse,"_NOTES","ARRAYOFNOTESVIEW",NIL,NIL,NIL,"O",NIL,NIL) 
	If oNode17 != NIL
		::oWSNOTES := PMSPROJECTS_ARRAYOFNOTESVIEW():New()
		::oWSNOTES:SoapRecv(oNode17)
	EndIf
	::cOBS               :=  WSAdvValue( oResponse,"_OBS","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cPROJECTCODE       :=  WSAdvValue( oResponse,"_PROJECTCODE","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::nQUANTITY          :=  WSAdvValue( oResponse,"_QUANTITY","integer",NIL,NIL,NIL,"N",NIL,NIL) 
	::cREVISION          :=  WSAdvValue( oResponse,"_REVISION","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::nSALESGRANDTOTAL   :=  WSAdvValue( oResponse,"_SALESGRANDTOTAL","float",NIL,NIL,NIL,"N",NIL,NIL) 
	::cSTRUCTUREORDER    :=  WSAdvValue( oResponse,"_STRUCTUREORDER","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::nTASKUSEFULHOURS   :=  WSAdvValue( oResponse,"_TASKUSEFULHOURS","integer",NIL,NIL,NIL,"N",NIL,NIL) 
	::nTIMEDURATION      :=  WSAdvValue( oResponse,"_TIMEDURATION","float",NIL,NIL,NIL,"N",NIL,NIL) 
	::cUNITY             :=  WSAdvValue( oResponse,"_UNITY","string",NIL,NIL,NIL,"S",NIL,NIL) 
	oNode27 :=  WSAdvValue( oResponse,"_USERFIELDS","ARRAYOFUSERFIELD",NIL,NIL,NIL,"O",NIL,NIL) 
	If oNode27 != NIL
		::oWSUSERFIELDS := PMSPROJECTS_ARRAYOFUSERFIELD():New()
		::oWSUSERFIELDS:SoapRecv(oNode27)
	EndIf
	::cWBSCODE           :=  WSAdvValue( oResponse,"_WBSCODE","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cWBSFATHER         :=  WSAdvValue( oResponse,"_WBSFATHER","string",NIL,NIL,NIL,"S",NIL,NIL) 
Return

// WSDL Data Structure ARRAYOFUSERFIELD

WSSTRUCT PMSPROJECTS_ARRAYOFUSERFIELD
	WSDATA   oWSUSERFIELD              AS PMSPROJECTS_USERFIELD OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT PMSPROJECTS_ARRAYOFUSERFIELD
	::Init()
Return Self

WSMETHOD INIT WSCLIENT PMSPROJECTS_ARRAYOFUSERFIELD
	::oWSUSERFIELD         := {} // Array Of  PMSPROJECTS_USERFIELD():New()
Return

WSMETHOD CLONE WSCLIENT PMSPROJECTS_ARRAYOFUSERFIELD
	Local oClone := PMSPROJECTS_ARRAYOFUSERFIELD():NEW()
	oClone:oWSUSERFIELD := NIL
	If ::oWSUSERFIELD <> NIL 
		oClone:oWSUSERFIELD := {}
		aEval( ::oWSUSERFIELD , { |x| aadd( oClone:oWSUSERFIELD , x:Clone() ) } )
	Endif 
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT PMSPROJECTS_ARRAYOFUSERFIELD
	Local nRElem1, oNodes1, nTElem1
	::Init()
	If oResponse = NIL ; Return ; Endif 
	oNodes1 :=  WSAdvValue( oResponse,"_USERFIELD","USERFIELD",{},NIL,.T.,"O",NIL,NIL) 
	nTElem1 := len(oNodes1)
	For nRElem1 := 1 to nTElem1 
		If !WSIsNilNode( oNodes1[nRElem1] )
			aadd(::oWSUSERFIELD , PMSPROJECTS_USERFIELD():New() )
			::oWSUSERFIELD[len(::oWSUSERFIELD)]:SoapRecv(oNodes1[nRElem1])
		Endif
	Next
Return

// WSDL Data Structure ARRAYOFNOTESVIEW

WSSTRUCT PMSPROJECTS_ARRAYOFNOTESVIEW
	WSDATA   oWSNOTESVIEW              AS PMSPROJECTS_NOTESVIEW OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT PMSPROJECTS_ARRAYOFNOTESVIEW
	::Init()
Return Self

WSMETHOD INIT WSCLIENT PMSPROJECTS_ARRAYOFNOTESVIEW
	::oWSNOTESVIEW         := {} // Array Of  PMSPROJECTS_NOTESVIEW():New()
Return

WSMETHOD CLONE WSCLIENT PMSPROJECTS_ARRAYOFNOTESVIEW
	Local oClone := PMSPROJECTS_ARRAYOFNOTESVIEW():NEW()
	oClone:oWSNOTESVIEW := NIL
	If ::oWSNOTESVIEW <> NIL 
		oClone:oWSNOTESVIEW := {}
		aEval( ::oWSNOTESVIEW , { |x| aadd( oClone:oWSNOTESVIEW , x:Clone() ) } )
	Endif 
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT PMSPROJECTS_ARRAYOFNOTESVIEW
	Local nRElem1, oNodes1, nTElem1
	::Init()
	If oResponse = NIL ; Return ; Endif 
	oNodes1 :=  WSAdvValue( oResponse,"_NOTESVIEW","NOTESVIEW",{},NIL,.T.,"O",NIL,NIL) 
	nTElem1 := len(oNodes1)
	For nRElem1 := 1 to nTElem1 
		If !WSIsNilNode( oNodes1[nRElem1] )
			aadd(::oWSNOTESVIEW , PMSPROJECTS_NOTESVIEW():New() )
			::oWSNOTESVIEW[len(::oWSNOTESVIEW)]:SoapRecv(oNodes1[nRElem1])
		Endif
	Next
Return

// WSDL Data Structure USERFIELD

WSSTRUCT PMSPROJECTS_USERFIELD
	WSDATA   cUSERCOMBOBOX             AS string OPTIONAL
	WSDATA   nUSERDEC                  AS integer OPTIONAL
	WSDATA   cUSERF3                   AS string OPTIONAL
	WSDATA   cUSERNAME                 AS string
	WSDATA   lUSEROBLIG                AS boolean OPTIONAL
	WSDATA   cUSERPICTURE              AS string OPTIONAL
	WSDATA   nUSERSIZE                 AS integer OPTIONAL
	WSDATA   cUSERTAG                  AS string OPTIONAL
	WSDATA   cUSERTITLE                AS string OPTIONAL
	WSDATA   cUSERTYPE                 AS string
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT PMSPROJECTS_USERFIELD
	::Init()
Return Self

WSMETHOD INIT WSCLIENT PMSPROJECTS_USERFIELD
Return

WSMETHOD CLONE WSCLIENT PMSPROJECTS_USERFIELD
	Local oClone := PMSPROJECTS_USERFIELD():NEW()
	oClone:cUSERCOMBOBOX        := ::cUSERCOMBOBOX
	oClone:nUSERDEC             := ::nUSERDEC
	oClone:cUSERF3              := ::cUSERF3
	oClone:cUSERNAME            := ::cUSERNAME
	oClone:lUSEROBLIG           := ::lUSEROBLIG
	oClone:cUSERPICTURE         := ::cUSERPICTURE
	oClone:nUSERSIZE            := ::nUSERSIZE
	oClone:cUSERTAG             := ::cUSERTAG
	oClone:cUSERTITLE           := ::cUSERTITLE
	oClone:cUSERTYPE            := ::cUSERTYPE
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT PMSPROJECTS_USERFIELD
	::Init()
	If oResponse = NIL ; Return ; Endif 
	::cUSERCOMBOBOX      :=  WSAdvValue( oResponse,"_USERCOMBOBOX","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::nUSERDEC           :=  WSAdvValue( oResponse,"_USERDEC","integer",NIL,NIL,NIL,"N",NIL,NIL) 
	::cUSERF3            :=  WSAdvValue( oResponse,"_USERF3","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cUSERNAME          :=  WSAdvValue( oResponse,"_USERNAME","string",NIL,"Property cUSERNAME as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::lUSEROBLIG         :=  WSAdvValue( oResponse,"_USEROBLIG","boolean",NIL,NIL,NIL,"L",NIL,NIL) 
	::cUSERPICTURE       :=  WSAdvValue( oResponse,"_USERPICTURE","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::nUSERSIZE          :=  WSAdvValue( oResponse,"_USERSIZE","integer",NIL,NIL,NIL,"N",NIL,NIL) 
	::cUSERTAG           :=  WSAdvValue( oResponse,"_USERTAG","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cUSERTITLE         :=  WSAdvValue( oResponse,"_USERTITLE","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cUSERTYPE          :=  WSAdvValue( oResponse,"_USERTYPE","string",NIL,"Property cUSERTYPE as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
Return

// WSDL Data Structure NOTESVIEW

WSSTRUCT PMSPROJECTS_NOTESVIEW
	WSDATA   cNOTES                    AS string OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT PMSPROJECTS_NOTESVIEW
	::Init()
Return Self

WSMETHOD INIT WSCLIENT PMSPROJECTS_NOTESVIEW
Return

WSMETHOD CLONE WSCLIENT PMSPROJECTS_NOTESVIEW
	Local oClone := PMSPROJECTS_NOTESVIEW():NEW()
	oClone:cNOTES               := ::cNOTES
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT PMSPROJECTS_NOTESVIEW
	::Init()
	If oResponse = NIL ; Return ; Endif 
	::cNOTES             :=  WSAdvValue( oResponse,"_NOTES","string",NIL,NIL,NIL,"S",NIL,NIL) 
Return


