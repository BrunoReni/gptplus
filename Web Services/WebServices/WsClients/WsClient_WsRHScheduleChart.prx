#INCLUDE "PROTHEUS.CH"
#INCLUDE "APWEBSRV.CH"

/* ===============================================================================
WSDL Location    http://172.16.31.46:82/ws/RHSCHEDULECHART.apw?WSDL
Gerado em        06/05/12 08:40:49
Observações      Código-Fonte gerado por ADVPL WSDL Client 1.111215
                 Alterações neste arquivo podem causar funcionamento incorreto
                 e serão perdidas caso o código-fonte seja gerado novamente.
=============================================================================== */

User Function _RRYHSJR ; Return  // "dummy" function - Internal Use 

/* -------------------------------------------------------------------------------
WSDL Service WSRHSCHEDULECHART
------------------------------------------------------------------------------- */

WSCLIENT WSRHSCHEDULECHART

	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD RESET
	WSMETHOD CLONE
	WSMETHOD GETSCHEDULECHART

	WSDATA   _URL                      AS String
	WSDATA   _HEADOUT                  AS Array of String
	WSDATA   _COOKIES                  AS Array of String
	WSDATA   cBRANCH                   AS string
	WSDATA   cREGISTRATION             AS string
	WSDATA   oWSGETSCHEDULECHARTRESULT AS RHSCHEDULECHART_TSCHEDULECHARTBROWSE

ENDWSCLIENT

WSMETHOD NEW WSCLIENT WSRHSCHEDULECHART
::Init()
If !FindFunction("XMLCHILDEX")
	UserException("O Código-Fonte Client atual requer os executáveis do Protheus Build [7.00.101202A-20110919] ou superior. Atualize o Protheus ou gere o Código-Fonte novamente utilizando o Build atual.")
EndIf
Return Self

WSMETHOD INIT WSCLIENT WSRHSCHEDULECHART
	::oWSGETSCHEDULECHARTRESULT := RHSCHEDULECHART_TSCHEDULECHARTBROWSE():New()
Return

WSMETHOD RESET WSCLIENT WSRHSCHEDULECHART
	::cBRANCH            := NIL 
	::cREGISTRATION      := NIL 
	::oWSGETSCHEDULECHARTRESULT := NIL 
	::Init()
Return

WSMETHOD CLONE WSCLIENT WSRHSCHEDULECHART
Local oClone := WSRHSCHEDULECHART():New()
	oClone:_URL          := ::_URL 
	oClone:cBRANCH       := ::cBRANCH
	oClone:cREGISTRATION := ::cREGISTRATION
	oClone:oWSGETSCHEDULECHARTRESULT :=  IIF(::oWSGETSCHEDULECHARTRESULT = NIL , NIL ,::oWSGETSCHEDULECHARTRESULT:Clone() )
Return oClone

// WSDL Method GETSCHEDULECHART of Service WSRHSCHEDULECHART

WSMETHOD GETSCHEDULECHART WSSEND cBRANCH,cREGISTRATION WSRECEIVE oWSGETSCHEDULECHARTRESULT WSCLIENT WSRHSCHEDULECHART
Local cSoap := "" , oXmlRet

BEGIN WSMETHOD

cSoap += '<GETSCHEDULECHART xmlns="http://172.16.31.46:82/">'
cSoap += WSSoapValue("BRANCH", ::cBRANCH, cBRANCH , "string", .T. , .F., 0 , NIL, .F.) 
cSoap += WSSoapValue("REGISTRATION", ::cREGISTRATION, cREGISTRATION , "string", .T. , .F., 0 , NIL, .F.) 
cSoap += "</GETSCHEDULECHART>"

oXmlRet := SvcSoapCall(	Self,cSoap,; 
	"http://172.16.31.46:82/GETSCHEDULECHART",; 
	"DOCUMENT","http://172.16.31.46:82/",,"1.031217",; 
	"http://172.16.31.46:82/ws/RHSCHEDULECHART.apw")

::Init()
::oWSGETSCHEDULECHARTRESULT:SoapRecv( WSAdvValue( oXmlRet,"_GETSCHEDULECHARTRESPONSE:_GETSCHEDULECHARTRESULT","TSCHEDULECHARTBROWSE",NIL,NIL,NIL,NIL,NIL,NIL) )

END WSMETHOD

oXmlRet := NIL
Return .T.


// WSDL Data Structure TSCHEDULECHARTBROWSE

WSSTRUCT RHSCHEDULECHART_TSCHEDULECHARTBROWSE
	WSDATA   oWSFIELDS                 AS RHSCHEDULECHART_ARRAYOFTSCHEDULECHARTFIELDS OPTIONAL
	WSDATA   oWSITENS                  AS RHSCHEDULECHART_ARRAYOFTSCHEDULECHARTLIST OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT RHSCHEDULECHART_TSCHEDULECHARTBROWSE
	::Init()
Return Self

WSMETHOD INIT WSCLIENT RHSCHEDULECHART_TSCHEDULECHARTBROWSE
Return

WSMETHOD CLONE WSCLIENT RHSCHEDULECHART_TSCHEDULECHARTBROWSE
	Local oClone := RHSCHEDULECHART_TSCHEDULECHARTBROWSE():NEW()
	oClone:oWSFIELDS            := IIF(::oWSFIELDS = NIL , NIL , ::oWSFIELDS:Clone() )
	oClone:oWSITENS             := IIF(::oWSITENS = NIL , NIL , ::oWSITENS:Clone() )
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT RHSCHEDULECHART_TSCHEDULECHARTBROWSE
	Local oNode1
	Local oNode2
	::Init()
	If oResponse = NIL ; Return ; Endif 
	oNode1 :=  WSAdvValue( oResponse,"_FIELDS","ARRAYOFTSCHEDULECHARTFIELDS",NIL,NIL,NIL,"O",NIL,NIL) 
	If oNode1 != NIL
		::oWSFIELDS := RHSCHEDULECHART_ARRAYOFTSCHEDULECHARTFIELDS():New()
		::oWSFIELDS:SoapRecv(oNode1)
	EndIf
	oNode2 :=  WSAdvValue( oResponse,"_ITENS","ARRAYOFTSCHEDULECHARTLIST",NIL,NIL,NIL,"O",NIL,NIL) 
	If oNode2 != NIL
		::oWSITENS := RHSCHEDULECHART_ARRAYOFTSCHEDULECHARTLIST():New()
		::oWSITENS:SoapRecv(oNode2)
	EndIf
Return

// WSDL Data Structure ARRAYOFTSCHEDULECHARTFIELDS

WSSTRUCT RHSCHEDULECHART_ARRAYOFTSCHEDULECHARTFIELDS
	WSDATA   oWSTSCHEDULECHARTFIELDS   AS RHSCHEDULECHART_TSCHEDULECHARTFIELDS OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT RHSCHEDULECHART_ARRAYOFTSCHEDULECHARTFIELDS
	::Init()
Return Self

WSMETHOD INIT WSCLIENT RHSCHEDULECHART_ARRAYOFTSCHEDULECHARTFIELDS
	::oWSTSCHEDULECHARTFIELDS := {} // Array Of  RHSCHEDULECHART_TSCHEDULECHARTFIELDS():New()
Return

WSMETHOD CLONE WSCLIENT RHSCHEDULECHART_ARRAYOFTSCHEDULECHARTFIELDS
	Local oClone := RHSCHEDULECHART_ARRAYOFTSCHEDULECHARTFIELDS():NEW()
	oClone:oWSTSCHEDULECHARTFIELDS := NIL
	If ::oWSTSCHEDULECHARTFIELDS <> NIL 
		oClone:oWSTSCHEDULECHARTFIELDS := {}
		aEval( ::oWSTSCHEDULECHARTFIELDS , { |x| aadd( oClone:oWSTSCHEDULECHARTFIELDS , x:Clone() ) } )
	Endif 
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT RHSCHEDULECHART_ARRAYOFTSCHEDULECHARTFIELDS
	Local nRElem1, oNodes1, nTElem1
	::Init()
	If oResponse = NIL ; Return ; Endif 
	oNodes1 :=  WSAdvValue( oResponse,"_TSCHEDULECHARTFIELDS","TSCHEDULECHARTFIELDS",{},NIL,.T.,"O",NIL,NIL) 
	nTElem1 := len(oNodes1)
	For nRElem1 := 1 to nTElem1 
		If !WSIsNilNode( oNodes1[nRElem1] )
			aadd(::oWSTSCHEDULECHARTFIELDS , RHSCHEDULECHART_TSCHEDULECHARTFIELDS():New() )
			::oWSTSCHEDULECHARTFIELDS[len(::oWSTSCHEDULECHARTFIELDS)]:SoapRecv(oNodes1[nRElem1])
		Endif
	Next
Return

// WSDL Data Structure ARRAYOFTSCHEDULECHARTLIST

WSSTRUCT RHSCHEDULECHART_ARRAYOFTSCHEDULECHARTLIST
	WSDATA   oWSTSCHEDULECHARTLIST     AS RHSCHEDULECHART_TSCHEDULECHARTLIST OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT RHSCHEDULECHART_ARRAYOFTSCHEDULECHARTLIST
	::Init()
Return Self

WSMETHOD INIT WSCLIENT RHSCHEDULECHART_ARRAYOFTSCHEDULECHARTLIST
	::oWSTSCHEDULECHARTLIST := {} // Array Of  RHSCHEDULECHART_TSCHEDULECHARTLIST():New()
Return

WSMETHOD CLONE WSCLIENT RHSCHEDULECHART_ARRAYOFTSCHEDULECHARTLIST
	Local oClone := RHSCHEDULECHART_ARRAYOFTSCHEDULECHARTLIST():NEW()
	oClone:oWSTSCHEDULECHARTLIST := NIL
	If ::oWSTSCHEDULECHARTLIST <> NIL 
		oClone:oWSTSCHEDULECHARTLIST := {}
		aEval( ::oWSTSCHEDULECHARTLIST , { |x| aadd( oClone:oWSTSCHEDULECHARTLIST , x:Clone() ) } )
	Endif 
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT RHSCHEDULECHART_ARRAYOFTSCHEDULECHARTLIST
	Local nRElem1, oNodes1, nTElem1
	::Init()
	If oResponse = NIL ; Return ; Endif 
	oNodes1 :=  WSAdvValue( oResponse,"_TSCHEDULECHARTLIST","TSCHEDULECHARTLIST",{},NIL,.T.,"O",NIL,NIL) 
	nTElem1 := len(oNodes1)
	For nRElem1 := 1 to nTElem1 
		If !WSIsNilNode( oNodes1[nRElem1] )
			aadd(::oWSTSCHEDULECHARTLIST , RHSCHEDULECHART_TSCHEDULECHARTLIST():New() )
			::oWSTSCHEDULECHARTLIST[len(::oWSTSCHEDULECHARTLIST)]:SoapRecv(oNodes1[nRElem1])
		Endif
	Next
Return

// WSDL Data Structure TSCHEDULECHARTFIELDS

WSSTRUCT RHSCHEDULECHART_TSCHEDULECHARTFIELDS
	WSDATA   cBRANCH                   AS string
	WSDATA   cCOSTCENTER               AS string
	WSDATA   cDEPARTMENT               AS string
	WSDATA   cNAME                     AS string
	WSDATA   cPERIODFROM               AS string
	WSDATA   cPERIODTO                 AS string
	WSDATA   cSHIFT                    AS string
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT RHSCHEDULECHART_TSCHEDULECHARTFIELDS
	::Init()
Return Self

WSMETHOD INIT WSCLIENT RHSCHEDULECHART_TSCHEDULECHARTFIELDS
Return

WSMETHOD CLONE WSCLIENT RHSCHEDULECHART_TSCHEDULECHARTFIELDS
	Local oClone := RHSCHEDULECHART_TSCHEDULECHARTFIELDS():NEW()
	oClone:cBRANCH              := ::cBRANCH
	oClone:cCOSTCENTER          := ::cCOSTCENTER
	oClone:cDEPARTMENT          := ::cDEPARTMENT
	oClone:cNAME                := ::cNAME
	oClone:cPERIODFROM          := ::cPERIODFROM
	oClone:cPERIODTO            := ::cPERIODTO
	oClone:cSHIFT               := ::cSHIFT
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT RHSCHEDULECHART_TSCHEDULECHARTFIELDS
	::Init()
	If oResponse = NIL ; Return ; Endif 
	::cBRANCH            :=  WSAdvValue( oResponse,"_BRANCH","string",NIL,"Property cBRANCH as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::cCOSTCENTER        :=  WSAdvValue( oResponse,"_COSTCENTER","string",NIL,"Property cCOSTCENTER as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::cDEPARTMENT        :=  WSAdvValue( oResponse,"_DEPARTMENT","string",NIL,"Property cDEPARTMENT as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::cNAME              :=  WSAdvValue( oResponse,"_NAME","string",NIL,"Property cNAME as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::cPERIODFROM        :=  WSAdvValue( oResponse,"_PERIODFROM","string",NIL,"Property cPERIODFROM as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::cPERIODTO          :=  WSAdvValue( oResponse,"_PERIODTO","string",NIL,"Property cPERIODTO as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::cSHIFT             :=  WSAdvValue( oResponse,"_SHIFT","string",NIL,"Property cSHIFT as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
Return

// WSDL Data Structure TSCHEDULECHARTLIST

WSSTRUCT RHSCHEDULECHART_TSCHEDULECHARTLIST
	WSDATA   cBRANCH                   AS string
	WSDATA   cDATEEVENT                AS string
	WSDATA   cDAYTYPE                  AS string
	WSDATA   cDAYWEEK                  AS string
	WSDATA   cENTRY1                   AS string
	WSDATA   cENTRY2                   AS string
	WSDATA   cENTRY3                   AS string
	WSDATA   cENTRY4                   AS string
	WSDATA   cEXCEPTION                AS string
	WSDATA   cINTHRS                   AS string
	WSDATA   cMEALCODE                 AS string
	WSDATA   cOUTPUT1                  AS string
	WSDATA   cOUTPUT2                  AS string
	WSDATA   cOUTPUT3                  AS string
	WSDATA   cOUTPUT4                  AS string
	WSDATA   cOVERTIMETYPENIGHT        AS string
	WSDATA   cOVERTIMETYPEREGULAR      AS string
	WSDATA   cREGISTRATION             AS string
	WSDATA   cSEQUENCE                 AS string
	WSDATA   cSHIFT                    AS string
	WSDATA   cWORKHRS                  AS string
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT RHSCHEDULECHART_TSCHEDULECHARTLIST
	::Init()
Return Self

WSMETHOD INIT WSCLIENT RHSCHEDULECHART_TSCHEDULECHARTLIST
Return

WSMETHOD CLONE WSCLIENT RHSCHEDULECHART_TSCHEDULECHARTLIST
	Local oClone := RHSCHEDULECHART_TSCHEDULECHARTLIST():NEW()
	oClone:cBRANCH              := ::cBRANCH
	oClone:cDATEEVENT           := ::cDATEEVENT
	oClone:cDAYTYPE             := ::cDAYTYPE
	oClone:cDAYWEEK             := ::cDAYWEEK
	oClone:cENTRY1              := ::cENTRY1
	oClone:cENTRY2              := ::cENTRY2
	oClone:cENTRY3              := ::cENTRY3
	oClone:cENTRY4              := ::cENTRY4
	oClone:cEXCEPTION           := ::cEXCEPTION
	oClone:cINTHRS              := ::cINTHRS
	oClone:cMEALCODE            := ::cMEALCODE
	oClone:cOUTPUT1             := ::cOUTPUT1
	oClone:cOUTPUT2             := ::cOUTPUT2
	oClone:cOUTPUT3             := ::cOUTPUT3
	oClone:cOUTPUT4             := ::cOUTPUT4
	oClone:cOVERTIMETYPENIGHT   := ::cOVERTIMETYPENIGHT
	oClone:cOVERTIMETYPEREGULAR := ::cOVERTIMETYPEREGULAR
	oClone:cREGISTRATION        := ::cREGISTRATION
	oClone:cSEQUENCE            := ::cSEQUENCE
	oClone:cSHIFT               := ::cSHIFT
	oClone:cWORKHRS             := ::cWORKHRS
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT RHSCHEDULECHART_TSCHEDULECHARTLIST
	::Init()
	If oResponse = NIL ; Return ; Endif 
	::cBRANCH            :=  WSAdvValue( oResponse,"_BRANCH","string",NIL,"Property cBRANCH as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::cDATEEVENT         :=  WSAdvValue( oResponse,"_DATEEVENT","string",NIL,"Property cDATEEVENT as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::cDAYTYPE           :=  WSAdvValue( oResponse,"_DAYTYPE","string",NIL,"Property cDAYTYPE as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::cDAYWEEK           :=  WSAdvValue( oResponse,"_DAYWEEK","string",NIL,"Property cDAYWEEK as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::cENTRY1            :=  WSAdvValue( oResponse,"_ENTRY1","string",NIL,"Property cENTRY1 as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::cENTRY2            :=  WSAdvValue( oResponse,"_ENTRY2","string",NIL,"Property cENTRY2 as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::cENTRY3            :=  WSAdvValue( oResponse,"_ENTRY3","string",NIL,"Property cENTRY3 as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::cENTRY4            :=  WSAdvValue( oResponse,"_ENTRY4","string",NIL,"Property cENTRY4 as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::cEXCEPTION         :=  WSAdvValue( oResponse,"_EXCEPTION","string",NIL,"Property cEXCEPTION as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::cINTHRS            :=  WSAdvValue( oResponse,"_INTHRS","string",NIL,"Property cINTHRS as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::cMEALCODE          :=  WSAdvValue( oResponse,"_MEALCODE","string",NIL,"Property cMEALCODE as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::cOUTPUT1           :=  WSAdvValue( oResponse,"_OUTPUT1","string",NIL,"Property cOUTPUT1 as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::cOUTPUT2           :=  WSAdvValue( oResponse,"_OUTPUT2","string",NIL,"Property cOUTPUT2 as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::cOUTPUT3           :=  WSAdvValue( oResponse,"_OUTPUT3","string",NIL,"Property cOUTPUT3 as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::cOUTPUT4           :=  WSAdvValue( oResponse,"_OUTPUT4","string",NIL,"Property cOUTPUT4 as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::cOVERTIMETYPENIGHT :=  WSAdvValue( oResponse,"_OVERTIMETYPENIGHT","string",NIL,"Property cOVERTIMETYPENIGHT as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::cOVERTIMETYPEREGULAR :=  WSAdvValue( oResponse,"_OVERTIMETYPEREGULAR","string",NIL,"Property cOVERTIMETYPEREGULAR as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::cREGISTRATION      :=  WSAdvValue( oResponse,"_REGISTRATION","string",NIL,"Property cREGISTRATION as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::cSEQUENCE          :=  WSAdvValue( oResponse,"_SEQUENCE","string",NIL,"Property cSEQUENCE as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::cSHIFT             :=  WSAdvValue( oResponse,"_SHIFT","string",NIL,"Property cSHIFT as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::cWORKHRS           :=  WSAdvValue( oResponse,"_WORKHRS","string",NIL,"Property cWORKHRS as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
Return