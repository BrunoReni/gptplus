#INCLUDE "PROTHEUS.CH"
#INCLUDE "APWEBSRV.CH"

/* ===============================================================================
WSDL Location    http://localhost/ws/MTQUALITYCONTROL.APW?WSDL
Gerado em        06/27/05 09:34:29
Observações      Código-Fonte gerado por ADVPL WSDL Client 1.050513
                 Alterações neste arquivo podem causar funcionamento incorreto
                 e serão perdidas caso o código-fonte seja gerado novamente.
=============================================================================== */

User Function _EEXQESK ; Return  // "dummy" function - Internal Use 

/* -------------------------------------------------------------------------------
WSDL Service WSMTQUALITYCONTROL
------------------------------------------------------------------------------- */

WSCLIENT WSMTQUALITYCONTROL

	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD RESET
	WSMETHOD CLONE
	WSMETHOD GETHEADER
	WSMETHOD GETQUALITYCONTROL

	WSDATA   _URL                      AS String
	WSDATA   cHEADERTYPE               AS string
	WSDATA   oWSGETHEADERRESULT        AS MTQUALITYCONTROL_ARRAYOFBRWHEADER
	WSDATA   cUSERCODE                 AS string
	WSDATA   cDOCUMENT                 AS string
	WSDATA   oWSGETQUALITYCONTROLRESULT AS MTQUALITYCONTROL_QUALITYCONTROLVIEW

ENDWSCLIENT

WSMETHOD NEW WSCLIENT WSMTQUALITYCONTROL
::Init()
If !FindFunction("XMLCHILDEX")
	UserException("O Código-Fonte Client atual requer os executáveis do Protheus Build [7.00.050331A] ou superior. Atualize o Protheus ou gere o Código-Fonte novamente utilizando o Build atual.")
EndIf
Return Self

WSMETHOD INIT WSCLIENT WSMTQUALITYCONTROL
	::oWSGETHEADERRESULT := MTQUALITYCONTROL_ARRAYOFBRWHEADER():New()
	::oWSGETQUALITYCONTROLRESULT := MTQUALITYCONTROL_QUALITYCONTROLVIEW():New()
Return

WSMETHOD RESET WSCLIENT WSMTQUALITYCONTROL
	::cHEADERTYPE        := NIL 
	::oWSGETHEADERRESULT := NIL 
	::cUSERCODE          := NIL 
	::cDOCUMENT          := NIL 
	::oWSGETQUALITYCONTROLRESULT := NIL 
	::Init()
Return

WSMETHOD CLONE WSCLIENT WSMTQUALITYCONTROL
Local oClone := WSMTQUALITYCONTROL():New()
	oClone:_URL          := ::_URL 
	oClone:cHEADERTYPE   := ::cHEADERTYPE
	oClone:oWSGETHEADERRESULT :=  IIF(::oWSGETHEADERRESULT = NIL , NIL ,::oWSGETHEADERRESULT:Clone() )
	oClone:cUSERCODE     := ::cUSERCODE
	oClone:cDOCUMENT     := ::cDOCUMENT
	oClone:oWSGETQUALITYCONTROLRESULT :=  IIF(::oWSGETQUALITYCONTROLRESULT = NIL , NIL ,::oWSGETQUALITYCONTROLRESULT:Clone() )
Return oClone

/* -------------------------------------------------------------------------------
WSDL Method GETHEADER of Service WSMTQUALITYCONTROL
------------------------------------------------------------------------------- */

WSMETHOD GETHEADER WSSEND cHEADERTYPE WSRECEIVE oWSGETHEADERRESULT WSCLIENT WSMTQUALITYCONTROL
Local cSoap := "" , oXmlRet

BEGIN WSMETHOD

cSoap += '<GETHEADER xmlns="http:webservices.microsiga.com.br/mtqualitycontrol.apw">'
cSoap += WSSoapValue("HEADERTYPE", ::cHEADERTYPE, cHEADERTYPE , "string", .T. , .F., 0 ) 
cSoap += "</GETHEADER>"

oXmlRet := SvcSoapCall(	Self,cSoap,; 
	"http:webservices.microsiga.com.br/mtqualitycontrol.apw/GETHEADER",; 
	"DOCUMENT","http:webservices.microsiga.com.br/mtqualitycontrol.apw",,"1.031217",; 
	"http://localhost/ws/MTQUALITYCONTROL.apw")

::Init()
::oWSGETHEADERRESULT:SoapRecv( WSAdvValue( oXmlRet,"_GETHEADERRESPONSE:_GETHEADERRESULT","ARRAYOFBRWHEADER",NIL,NIL,NIL,NIL,NIL) )

END WSMETHOD

oXmlRet := NIL
Return .T.

/* -------------------------------------------------------------------------------
WSDL Method GETQUALITYCONTROL of Service WSMTQUALITYCONTROL
------------------------------------------------------------------------------- */

WSMETHOD GETQUALITYCONTROL WSSEND cUSERCODE,cDOCUMENT WSRECEIVE oWSGETQUALITYCONTROLRESULT WSCLIENT WSMTQUALITYCONTROL
Local cSoap := "" , oXmlRet

BEGIN WSMETHOD

cSoap += '<GETQUALITYCONTROL xmlns="http:webservices.microsiga.com.br/mtqualitycontrol.apw">'
cSoap += WSSoapValue("USERCODE", ::cUSERCODE, cUSERCODE , "string", .T. , .F., 0 ) 
cSoap += WSSoapValue("DOCUMENT", ::cDOCUMENT, cDOCUMENT , "string", .T. , .F., 0 ) 
cSoap += "</GETQUALITYCONTROL>"

oXmlRet := SvcSoapCall(	Self,cSoap,; 
	"http:webservices.microsiga.com.br/mtqualitycontrol.apw/GETQUALITYCONTROL",; 
	"DOCUMENT","http:webservices.microsiga.com.br/mtqualitycontrol.apw",,"1.031217",; 
	"http://localhost/ws/MTQUALITYCONTROL.apw")

::Init()
::oWSGETQUALITYCONTROLRESULT:SoapRecv( WSAdvValue( oXmlRet,"_GETQUALITYCONTROLRESPONSE:_GETQUALITYCONTROLRESULT","QUALITYCONTROLVIEW",NIL,NIL,NIL,NIL,NIL) )

END WSMETHOD

oXmlRet := NIL
Return .T.


/* -------------------------------------------------------------------------------
WSDL Data Structure ARRAYOFBRWHEADER
------------------------------------------------------------------------------- */

WSSTRUCT MTQUALITYCONTROL_ARRAYOFBRWHEADER
	WSDATA   oWSBRWHEADER              AS MTQUALITYCONTROL_BRWHEADER OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT MTQUALITYCONTROL_ARRAYOFBRWHEADER
	::Init()
Return Self

WSMETHOD INIT WSCLIENT MTQUALITYCONTROL_ARRAYOFBRWHEADER
	::oWSBRWHEADER         := {} // Array Of  MTQUALITYCONTROL_BRWHEADER():New()
Return

WSMETHOD CLONE WSCLIENT MTQUALITYCONTROL_ARRAYOFBRWHEADER
	Local oClone := MTQUALITYCONTROL_ARRAYOFBRWHEADER():NEW()
	oClone:oWSBRWHEADER := NIL
	If ::oWSBRWHEADER <> NIL 
		oClone:oWSBRWHEADER := {}
		aEval( ::oWSBRWHEADER , { |x| aadd( oClone:oWSBRWHEADER , x:Clone() ) } )
	Endif 
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT MTQUALITYCONTROL_ARRAYOFBRWHEADER
	Local nRElem1, oNodes1, nTElem1
	::Init()
	If oResponse = NIL ; Return ; Endif 
	oNodes1 :=  WSAdvValue( oResponse,"_BRWHEADER","BRWHEADER",{},NIL,.T.,"O",NIL) 
	nTElem1 := len(oNodes1)
	For nRElem1 := 1 to nTElem1 
		If !WSIsNilNode( oNodes1[nRElem1] )
			aadd(::oWSBRWHEADER , MTQUALITYCONTROL_BRWHEADER():New() )
			::oWSBRWHEADER[len(::oWSBRWHEADER)]:SoapRecv(oNodes1[nRElem1])
		Endif
	Next
Return

/* -------------------------------------------------------------------------------
WSDL Data Structure QUALITYCONTROLVIEW
------------------------------------------------------------------------------- */

WSSTRUCT MTQUALITYCONTROL_QUALITYCONTROLVIEW
	WSDATA   nBALANCE                  AS float OPTIONAL
	WSDATA   cDOCUMENT                 AS string
	WSDATA   cPRODUCTCODE              AS string
	WSDATA   nSECONDMEASUREUNITBALANCE AS float OPTIONAL
	WSDATA   oWSTRANSACTIONS           AS MTQUALITYCONTROL_ARRAYOFQUALITYCONTROLTRANSACTIONSVIEW
	WSDATA   cWAREHOUSE                AS string
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT MTQUALITYCONTROL_QUALITYCONTROLVIEW
	::Init()
Return Self

WSMETHOD INIT WSCLIENT MTQUALITYCONTROL_QUALITYCONTROLVIEW
Return

WSMETHOD CLONE WSCLIENT MTQUALITYCONTROL_QUALITYCONTROLVIEW
	Local oClone := MTQUALITYCONTROL_QUALITYCONTROLVIEW():NEW()
	oClone:nBALANCE             := ::nBALANCE
	oClone:cDOCUMENT            := ::cDOCUMENT
	oClone:cPRODUCTCODE         := ::cPRODUCTCODE
	oClone:nSECONDMEASUREUNITBALANCE := ::nSECONDMEASUREUNITBALANCE
	oClone:oWSTRANSACTIONS      := IIF(::oWSTRANSACTIONS = NIL , NIL , ::oWSTRANSACTIONS:Clone() )
	oClone:cWAREHOUSE           := ::cWAREHOUSE
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT MTQUALITYCONTROL_QUALITYCONTROLVIEW
	Local oNode5
	::Init()
	If oResponse = NIL ; Return ; Endif 
	::nBALANCE           :=  WSAdvValue( oResponse,"_BALANCE","float",NIL,NIL,NIL,"N",NIL) 
	::cDOCUMENT          :=  WSAdvValue( oResponse,"_DOCUMENT","string",NIL,"Property cDOCUMENT as s:string on SOAP Response not found.",NIL,"S",NIL) 
	::cPRODUCTCODE       :=  WSAdvValue( oResponse,"_PRODUCTCODE","string",NIL,"Property cPRODUCTCODE as s:string on SOAP Response not found.",NIL,"S",NIL) 
	::nSECONDMEASUREUNITBALANCE :=  WSAdvValue( oResponse,"_SECONDMEASUREUNITBALANCE","float",NIL,NIL,NIL,"N",NIL) 
	oNode5 :=  WSAdvValue( oResponse,"_TRANSACTIONS","ARRAYOFQUALITYCONTROLTRANSACTIONSVIEW",NIL,"Property oWSTRANSACTIONS as s0:ARRAYOFQUALITYCONTROLTRANSACTIONSVIEW on SOAP Response not found.",NIL,"O",NIL) 
	If oNode5 != NIL
		::oWSTRANSACTIONS := MTQUALITYCONTROL_ARRAYOFQUALITYCONTROLTRANSACTIONSVIEW():New()
		::oWSTRANSACTIONS:SoapRecv(oNode5)
	EndIf
	::cWAREHOUSE         :=  WSAdvValue( oResponse,"_WAREHOUSE","string",NIL,"Property cWAREHOUSE as s:string on SOAP Response not found.",NIL,"S",NIL) 
Return

/* -------------------------------------------------------------------------------
WSDL Data Structure BRWHEADER
------------------------------------------------------------------------------- */

WSSTRUCT MTQUALITYCONTROL_BRWHEADER
	WSDATA   cHEADERCOMBOBOX           AS string OPTIONAL
	WSDATA   nHEADERDEC                AS integer
	WSDATA   cHEADERF3                 AS string OPTIONAL
	WSDATA   cHEADERFIELD              AS string
	WSDATA   lHEADEROBLIG              AS boolean OPTIONAL
	WSDATA   cHEADERPICTURE            AS string
	WSDATA   nHEADERSIZE               AS integer
	WSDATA   cHEADERTITLE              AS string
	WSDATA   cHEADERTYPE               AS string
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT MTQUALITYCONTROL_BRWHEADER
	::Init()
Return Self

WSMETHOD INIT WSCLIENT MTQUALITYCONTROL_BRWHEADER
Return

WSMETHOD CLONE WSCLIENT MTQUALITYCONTROL_BRWHEADER
	Local oClone := MTQUALITYCONTROL_BRWHEADER():NEW()
	oClone:cHEADERCOMBOBOX      := ::cHEADERCOMBOBOX
	oClone:nHEADERDEC           := ::nHEADERDEC
	oClone:cHEADERF3            := ::cHEADERF3
	oClone:cHEADERFIELD         := ::cHEADERFIELD
	oClone:lHEADEROBLIG         := ::lHEADEROBLIG
	oClone:cHEADERPICTURE       := ::cHEADERPICTURE
	oClone:nHEADERSIZE          := ::nHEADERSIZE
	oClone:cHEADERTITLE         := ::cHEADERTITLE
	oClone:cHEADERTYPE          := ::cHEADERTYPE
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT MTQUALITYCONTROL_BRWHEADER
	::Init()
	If oResponse = NIL ; Return ; Endif 
	::cHEADERCOMBOBOX    :=  WSAdvValue( oResponse,"_HEADERCOMBOBOX","string",NIL,NIL,NIL,"S",NIL) 
	::nHEADERDEC         :=  WSAdvValue( oResponse,"_HEADERDEC","integer",NIL,"Property nHEADERDEC as s:integer on SOAP Response not found.",NIL,"N",NIL) 
	::cHEADERF3          :=  WSAdvValue( oResponse,"_HEADERF3","string",NIL,NIL,NIL,"S",NIL) 
	::cHEADERFIELD       :=  WSAdvValue( oResponse,"_HEADERFIELD","string",NIL,"Property cHEADERFIELD as s:string on SOAP Response not found.",NIL,"S",NIL) 
	::lHEADEROBLIG       :=  WSAdvValue( oResponse,"_HEADEROBLIG","boolean",NIL,NIL,NIL,"L",NIL) 
	::cHEADERPICTURE     :=  WSAdvValue( oResponse,"_HEADERPICTURE","string",NIL,"Property cHEADERPICTURE as s:string on SOAP Response not found.",NIL,"S",NIL) 
	::nHEADERSIZE        :=  WSAdvValue( oResponse,"_HEADERSIZE","integer",NIL,"Property nHEADERSIZE as s:integer on SOAP Response not found.",NIL,"N",NIL) 
	::cHEADERTITLE       :=  WSAdvValue( oResponse,"_HEADERTITLE","string",NIL,"Property cHEADERTITLE as s:string on SOAP Response not found.",NIL,"S",NIL) 
	::cHEADERTYPE        :=  WSAdvValue( oResponse,"_HEADERTYPE","string",NIL,"Property cHEADERTYPE as s:string on SOAP Response not found.",NIL,"S",NIL) 
Return

/* -------------------------------------------------------------------------------
WSDL Data Structure ARRAYOFQUALITYCONTROLTRANSACTIONSVIEW
------------------------------------------------------------------------------- */

WSSTRUCT MTQUALITYCONTROL_ARRAYOFQUALITYCONTROLTRANSACTIONSVIEW
	WSDATA   oWSQUALITYCONTROLTRANSACTIONSVIEW AS MTQUALITYCONTROL_QUALITYCONTROLTRANSACTIONSVIEW OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT MTQUALITYCONTROL_ARRAYOFQUALITYCONTROLTRANSACTIONSVIEW
	::Init()
Return Self

WSMETHOD INIT WSCLIENT MTQUALITYCONTROL_ARRAYOFQUALITYCONTROLTRANSACTIONSVIEW
	::oWSQUALITYCONTROLTRANSACTIONSVIEW := {} // Array Of  MTQUALITYCONTROL_QUALITYCONTROLTRANSACTIONSVIEW():New()
Return

WSMETHOD CLONE WSCLIENT MTQUALITYCONTROL_ARRAYOFQUALITYCONTROLTRANSACTIONSVIEW
	Local oClone := MTQUALITYCONTROL_ARRAYOFQUALITYCONTROLTRANSACTIONSVIEW():NEW()
	oClone:oWSQUALITYCONTROLTRANSACTIONSVIEW := NIL
	If ::oWSQUALITYCONTROLTRANSACTIONSVIEW <> NIL 
		oClone:oWSQUALITYCONTROLTRANSACTIONSVIEW := {}
		aEval( ::oWSQUALITYCONTROLTRANSACTIONSVIEW , { |x| aadd( oClone:oWSQUALITYCONTROLTRANSACTIONSVIEW , x:Clone() ) } )
	Endif 
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT MTQUALITYCONTROL_ARRAYOFQUALITYCONTROLTRANSACTIONSVIEW
	Local nRElem1, oNodes1, nTElem1
	::Init()
	If oResponse = NIL ; Return ; Endif 
	oNodes1 :=  WSAdvValue( oResponse,"_QUALITYCONTROLTRANSACTIONSVIEW","QUALITYCONTROLTRANSACTIONSVIEW",{},NIL,.T.,"O",NIL) 
	nTElem1 := len(oNodes1)
	For nRElem1 := 1 to nTElem1 
		If !WSIsNilNode( oNodes1[nRElem1] )
			aadd(::oWSQUALITYCONTROLTRANSACTIONSVIEW , MTQUALITYCONTROL_QUALITYCONTROLTRANSACTIONSVIEW():New() )
			::oWSQUALITYCONTROLTRANSACTIONSVIEW[len(::oWSQUALITYCONTROLTRANSACTIONSVIEW)]:SoapRecv(oNodes1[nRElem1])
		Endif
	Next
Return

/* -------------------------------------------------------------------------------
WSDL Data Structure QUALITYCONTROLTRANSACTIONSVIEW
------------------------------------------------------------------------------- */

WSSTRUCT MTQUALITYCONTROL_QUALITYCONTROLTRANSACTIONSVIEW
	WSDATA   cCERTIFICATE              AS base64binary OPTIONAL
	WSDATA   cDESCRIPTIONTYPEOFMOVEMENT AS string OPTIONAL
	WSDATA   dISSUEDATE                AS date
	WSDATA   cITEM                     AS string
	WSDATA   oWSLOTIDENTIFIER          AS MTQUALITYCONTROL_LOTVIEW OPTIONAL
	WSDATA   nQUANTITY                 AS float
	WSDATA   cREASONFORREJECTION       AS string OPTIONAL
	WSDATA   nSECONDMEASUREUNITQUANTITY AS float OPTIONAL
	WSDATA   nTYPEOFMOVEMENT           AS integer
	WSDATA   oWSUSERFIELDS             AS MTQUALITYCONTROL_ARRAYOFUSERFIELD OPTIONAL
	WSDATA   cWAREHOUSE                AS string OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT MTQUALITYCONTROL_QUALITYCONTROLTRANSACTIONSVIEW
	::Init()
Return Self

WSMETHOD INIT WSCLIENT MTQUALITYCONTROL_QUALITYCONTROLTRANSACTIONSVIEW
Return

WSMETHOD CLONE WSCLIENT MTQUALITYCONTROL_QUALITYCONTROLTRANSACTIONSVIEW
	Local oClone := MTQUALITYCONTROL_QUALITYCONTROLTRANSACTIONSVIEW():NEW()
	oClone:cCERTIFICATE         := ::cCERTIFICATE
	oClone:cDESCRIPTIONTYPEOFMOVEMENT := ::cDESCRIPTIONTYPEOFMOVEMENT
	oClone:dISSUEDATE           := ::dISSUEDATE
	oClone:cITEM                := ::cITEM
	oClone:oWSLOTIDENTIFIER     := IIF(::oWSLOTIDENTIFIER = NIL , NIL , ::oWSLOTIDENTIFIER:Clone() )
	oClone:nQUANTITY            := ::nQUANTITY
	oClone:cREASONFORREJECTION  := ::cREASONFORREJECTION
	oClone:nSECONDMEASUREUNITQUANTITY := ::nSECONDMEASUREUNITQUANTITY
	oClone:nTYPEOFMOVEMENT      := ::nTYPEOFMOVEMENT
	oClone:oWSUSERFIELDS        := IIF(::oWSUSERFIELDS = NIL , NIL , ::oWSUSERFIELDS:Clone() )
	oClone:cWAREHOUSE           := ::cWAREHOUSE
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT MTQUALITYCONTROL_QUALITYCONTROLTRANSACTIONSVIEW
	Local oNode5
	Local oNode10
	::Init()
	If oResponse = NIL ; Return ; Endif 
	::cCERTIFICATE       :=  WSAdvValue( oResponse,"_CERTIFICATE","base64binary",NIL,NIL,NIL,"SB",NIL) 
	::cDESCRIPTIONTYPEOFMOVEMENT :=  WSAdvValue( oResponse,"_DESCRIPTIONTYPEOFMOVEMENT","string",NIL,NIL,NIL,"S",NIL) 
	::dISSUEDATE         :=  WSAdvValue( oResponse,"_ISSUEDATE","date",NIL,"Property dISSUEDATE as s:date on SOAP Response not found.",NIL,"D",NIL) 
	::cITEM              :=  WSAdvValue( oResponse,"_ITEM","string",NIL,"Property cITEM as s:string on SOAP Response not found.",NIL,"S",NIL) 
	oNode5 :=  WSAdvValue( oResponse,"_LOTIDENTIFIER","LOTVIEW",NIL,NIL,NIL,"O",NIL) 
	If oNode5 != NIL
		::oWSLOTIDENTIFIER := MTQUALITYCONTROL_LOTVIEW():New()
		::oWSLOTIDENTIFIER:SoapRecv(oNode5)
	EndIf
	::nQUANTITY          :=  WSAdvValue( oResponse,"_QUANTITY","float",NIL,"Property nQUANTITY as s:float on SOAP Response not found.",NIL,"N",NIL) 
	::cREASONFORREJECTION :=  WSAdvValue( oResponse,"_REASONFORREJECTION","string",NIL,NIL,NIL,"S",NIL) 
	::nSECONDMEASUREUNITQUANTITY :=  WSAdvValue( oResponse,"_SECONDMEASUREUNITQUANTITY","float",NIL,NIL,NIL,"N",NIL) 
	::nTYPEOFMOVEMENT    :=  WSAdvValue( oResponse,"_TYPEOFMOVEMENT","integer",NIL,"Property nTYPEOFMOVEMENT as s:integer on SOAP Response not found.",NIL,"N",NIL) 
	oNode10 :=  WSAdvValue( oResponse,"_USERFIELDS","ARRAYOFUSERFIELD",NIL,NIL,NIL,"O",NIL) 
	If oNode10 != NIL
		::oWSUSERFIELDS := MTQUALITYCONTROL_ARRAYOFUSERFIELD():New()
		::oWSUSERFIELDS:SoapRecv(oNode10)
	EndIf
	::cWAREHOUSE         :=  WSAdvValue( oResponse,"_WAREHOUSE","string",NIL,NIL,NIL,"S",NIL) 
Return

/* -------------------------------------------------------------------------------
WSDL Data Structure LOTVIEW
------------------------------------------------------------------------------- */

WSSTRUCT MTQUALITYCONTROL_LOTVIEW
	WSDATA   cLOTNUMBER                AS string
	WSDATA   cLOTSUPPLIER              AS string OPTIONAL
	WSDATA   nPOTENCYLOT               AS float OPTIONAL
	WSDATA   dVALIDITYDATE             AS date
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT MTQUALITYCONTROL_LOTVIEW
	::Init()
Return Self

WSMETHOD INIT WSCLIENT MTQUALITYCONTROL_LOTVIEW
Return

WSMETHOD CLONE WSCLIENT MTQUALITYCONTROL_LOTVIEW
	Local oClone := MTQUALITYCONTROL_LOTVIEW():NEW()
	oClone:cLOTNUMBER           := ::cLOTNUMBER
	oClone:cLOTSUPPLIER         := ::cLOTSUPPLIER
	oClone:nPOTENCYLOT          := ::nPOTENCYLOT
	oClone:dVALIDITYDATE        := ::dVALIDITYDATE
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT MTQUALITYCONTROL_LOTVIEW
	::Init()
	If oResponse = NIL ; Return ; Endif 
	::cLOTNUMBER         :=  WSAdvValue( oResponse,"_LOTNUMBER","string",NIL,"Property cLOTNUMBER as s:string on SOAP Response not found.",NIL,"S",NIL) 
	::cLOTSUPPLIER       :=  WSAdvValue( oResponse,"_LOTSUPPLIER","string",NIL,NIL,NIL,"S",NIL) 
	::nPOTENCYLOT        :=  WSAdvValue( oResponse,"_POTENCYLOT","float",NIL,NIL,NIL,"N",NIL) 
	::dVALIDITYDATE      :=  WSAdvValue( oResponse,"_VALIDITYDATE","date",NIL,"Property dVALIDITYDATE as s:date on SOAP Response not found.",NIL,"D",NIL) 
Return

/* -------------------------------------------------------------------------------
WSDL Data Structure ARRAYOFUSERFIELD
------------------------------------------------------------------------------- */

WSSTRUCT MTQUALITYCONTROL_ARRAYOFUSERFIELD
	WSDATA   oWSUSERFIELD              AS MTQUALITYCONTROL_USERFIELD OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT MTQUALITYCONTROL_ARRAYOFUSERFIELD
	::Init()
Return Self

WSMETHOD INIT WSCLIENT MTQUALITYCONTROL_ARRAYOFUSERFIELD
	::oWSUSERFIELD         := {} // Array Of  MTQUALITYCONTROL_USERFIELD():New()
Return

WSMETHOD CLONE WSCLIENT MTQUALITYCONTROL_ARRAYOFUSERFIELD
	Local oClone := MTQUALITYCONTROL_ARRAYOFUSERFIELD():NEW()
	oClone:oWSUSERFIELD := NIL
	If ::oWSUSERFIELD <> NIL 
		oClone:oWSUSERFIELD := {}
		aEval( ::oWSUSERFIELD , { |x| aadd( oClone:oWSUSERFIELD , x:Clone() ) } )
	Endif 
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT MTQUALITYCONTROL_ARRAYOFUSERFIELD
	Local nRElem1, oNodes1, nTElem1
	::Init()
	If oResponse = NIL ; Return ; Endif 
	oNodes1 :=  WSAdvValue( oResponse,"_USERFIELD","USERFIELD",{},NIL,.T.,"O",NIL) 
	nTElem1 := len(oNodes1)
	For nRElem1 := 1 to nTElem1 
		If !WSIsNilNode( oNodes1[nRElem1] )
			aadd(::oWSUSERFIELD , MTQUALITYCONTROL_USERFIELD():New() )
			::oWSUSERFIELD[len(::oWSUSERFIELD)]:SoapRecv(oNodes1[nRElem1])
		Endif
	Next
Return

/* -------------------------------------------------------------------------------
WSDL Data Structure USERFIELD
------------------------------------------------------------------------------- */

WSSTRUCT MTQUALITYCONTROL_USERFIELD
	WSDATA   cUSERCOMBOBOX             AS string OPTIONAL
	WSDATA   nUSERDEC                  AS integer OPTIONAL
	WSDATA   cUSERF3                   AS string OPTIONAL
	WSDATA   cUSERNAME                 AS string
	WSDATA   lUSEROBLIG                AS boolean OPTIONAL
	WSDATA   cUSERPICTURE              AS string OPTIONAL
	WSDATA   nUSERSIZE                 AS integer OPTIONAL
	WSDATA   cUSERTAG                  AS string OPTIONAL
	WSDATA   cUSERTITLE                AS string OPTIONAL
	WSDATA   cUSERTYPE                 AS string
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT MTQUALITYCONTROL_USERFIELD
	::Init()
Return Self

WSMETHOD INIT WSCLIENT MTQUALITYCONTROL_USERFIELD
Return

WSMETHOD CLONE WSCLIENT MTQUALITYCONTROL_USERFIELD
	Local oClone := MTQUALITYCONTROL_USERFIELD():NEW()
	oClone:cUSERCOMBOBOX        := ::cUSERCOMBOBOX
	oClone:nUSERDEC             := ::nUSERDEC
	oClone:cUSERF3              := ::cUSERF3
	oClone:cUSERNAME            := ::cUSERNAME
	oClone:lUSEROBLIG           := ::lUSEROBLIG
	oClone:cUSERPICTURE         := ::cUSERPICTURE
	oClone:nUSERSIZE            := ::nUSERSIZE
	oClone:cUSERTAG             := ::cUSERTAG
	oClone:cUSERTITLE           := ::cUSERTITLE
	oClone:cUSERTYPE            := ::cUSERTYPE
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT MTQUALITYCONTROL_USERFIELD
	::Init()
	If oResponse = NIL ; Return ; Endif 
	::cUSERCOMBOBOX      :=  WSAdvValue( oResponse,"_USERCOMBOBOX","string",NIL,NIL,NIL,"S",NIL) 
	::nUSERDEC           :=  WSAdvValue( oResponse,"_USERDEC","integer",NIL,NIL,NIL,"N",NIL) 
	::cUSERF3            :=  WSAdvValue( oResponse,"_USERF3","string",NIL,NIL,NIL,"S",NIL) 
	::cUSERNAME          :=  WSAdvValue( oResponse,"_USERNAME","string",NIL,"Property cUSERNAME as s:string on SOAP Response not found.",NIL,"S",NIL) 
	::lUSEROBLIG         :=  WSAdvValue( oResponse,"_USEROBLIG","boolean",NIL,NIL,NIL,"L",NIL) 
	::cUSERPICTURE       :=  WSAdvValue( oResponse,"_USERPICTURE","string",NIL,NIL,NIL,"S",NIL) 
	::nUSERSIZE          :=  WSAdvValue( oResponse,"_USERSIZE","integer",NIL,NIL,NIL,"N",NIL) 
	::cUSERTAG           :=  WSAdvValue( oResponse,"_USERTAG","string",NIL,NIL,NIL,"S",NIL) 
	::cUSERTITLE         :=  WSAdvValue( oResponse,"_USERTITLE","string",NIL,NIL,NIL,"S",NIL) 
	::cUSERTYPE          :=  WSAdvValue( oResponse,"_USERTYPE","string",NIL,"Property cUSERTYPE as s:string on SOAP Response not found.",NIL,"S",NIL) 
Return


