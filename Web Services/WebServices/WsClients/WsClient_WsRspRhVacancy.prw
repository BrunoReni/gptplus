#INCLUDE "PROTHEUS.CH"
#INCLUDE "APWEBSRV.CH"

/* ===============================================================================
WSDL Location    http://10.172.68.197:83/ws12ant/RHVACANCY.apw?WSDL
Gerado em        07/06/17 16:49:26
Observações      Código-Fonte gerado por ADVPL WSDL Client 1.120703
                 Alterações neste arquivo podem causar funcionamento incorreto
                 e serão perdidas caso o código-fonte seja gerado novamente.
=============================================================================== */

User Function _KOKUZWF ; Return  // "dummy" function - Internal Use 

/* -------------------------------------------------------------------------------
WSDL Service WSRHVACANCY
------------------------------------------------------------------------------- */

WSCLIENT WSRHVACANCY

	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD RESET
	WSMETHOD CLONE
	WSMETHOD GETCANDPROCSEL
	WSMETHOD GETSELECTS
	WSMETHOD GETVACANCY
	WSMETHOD SETAPPROVECANDIDATE
	WSMETHOD SETSCHEDULE
	WSMETHOD SHOWVACANCY

	WSDATA   _URL                      AS String
	WSDATA   _HEADOUT                  AS Array of String
	WSDATA   _COOKIES                  AS Array of String
	WSDATA   cVACANCYCODE              AS string
	WSDATA   cREGISTRATION             AS string
	WSDATA   cEMPLOYEEFIL              AS string
	WSDATA   cFILTERVALUE              AS string
	WSDATA   cFILTERFIELD              AS string
	WSDATA   cVACANCYFIL               AS string
	WSDATA   oWSGETCANDPROCSELRESULT   AS RHVACANCY_ARRAYOFCURRICULUM1
	WSDATA   oWSGETSELECTSRESULT       AS RHVACANCY_ARRAYOFSELECTS
	WSDATA   cUSERCODE                 AS string
	WSDATA   cTYPEVACANCY              AS string
	WSDATA   lNOMENSAGESQS             AS boolean
	WSDATA   oWSGETVACANCYRESULT       AS RHVACANCY_ARRAYOFVACANCYCHOICE
	WSDATA   cCURRICCODE               AS string
	WSDATA   cTYPEAPPROVAL             AS string
	WSDATA   nSETAPPROVECANDIDATERESULT AS integer
	WSDATA   oWSSETAGENDACANDIDATE     AS RHVACANCY_STEPSAGENDACANDIDATE
	WSDATA   lALTERDATETIME            AS boolean
	WSDATA   lALTEROBSCAND             AS boolean
	WSDATA   lSENDMAILREPROVE          AS boolean
	WSDATA   nSETSCHEDULERESULT        AS integer
	WSDATA   oWSSHOWVACANCYRESULT      AS RHVACANCY_ARRAYOFVACANCYVIEW

	// Estruturas mantidas por compatibilidade - NÃO USAR
	WSDATA   oWSSTEPSAGENDACANDIDATE   AS RHVACANCY_STEPSAGENDACANDIDATE

ENDWSCLIENT

WSMETHOD NEW WSCLIENT WSRHVACANCY
::Init()
If !FindFunction("XMLCHILDEX")
	UserException("O Código-Fonte Client atual requer os executáveis do Protheus Build [7.00.131227A-20161206 NG] ou superior. Atualize o Protheus ou gere o Código-Fonte novamente utilizando o Build atual.")
EndIf
Return Self

WSMETHOD INIT WSCLIENT WSRHVACANCY
	::oWSGETCANDPROCSELRESULT := RHVACANCY_ARRAYOFCURRICULUM1():New()
	::oWSGETSELECTSRESULT := RHVACANCY_ARRAYOFSELECTS():New()
	::oWSGETVACANCYRESULT := RHVACANCY_ARRAYOFVACANCYCHOICE():New()
	::oWSSETAGENDACANDIDATE := RHVACANCY_STEPSAGENDACANDIDATE():New()
	::oWSSHOWVACANCYRESULT := RHVACANCY_ARRAYOFVACANCYVIEW():New()

	// Estruturas mantidas por compatibilidade - NÃO USAR
	::oWSSTEPSAGENDACANDIDATE := ::oWSSETAGENDACANDIDATE
Return

WSMETHOD RESET WSCLIENT WSRHVACANCY
	::cVACANCYCODE       := NIL 
	::cREGISTRATION      := NIL 
	::cEMPLOYEEFIL       := NIL 
	::cFILTERVALUE       := NIL 
	::cFILTERFIELD       := NIL 
	::cVACANCYFIL        := NIL 
	::oWSGETCANDPROCSELRESULT := NIL 
	::oWSGETSELECTSRESULT := NIL 
	::cUSERCODE          := NIL 
	::cTYPEVACANCY       := NIL 
	::lNOMENSAGESQS      := NIL 
	::oWSGETVACANCYRESULT := NIL 
	::cCURRICCODE        := NIL 
	::cTYPEAPPROVAL      := NIL 
	::nSETAPPROVECANDIDATERESULT := NIL 
	::oWSSETAGENDACANDIDATE := NIL 
	::lALTERDATETIME     := NIL 
	::lALTEROBSCAND      := NIL 
	::lSENDMAILREPROVE   := NIL 
	::nSETSCHEDULERESULT := NIL 
	::oWSSHOWVACANCYRESULT := NIL 

	// Estruturas mantidas por compatibilidade - NÃO USAR
	::oWSSTEPSAGENDACANDIDATE := NIL
	::Init()
Return

WSMETHOD CLONE WSCLIENT WSRHVACANCY
Local oClone := WSRHVACANCY():New()
	oClone:_URL          := ::_URL 
	oClone:cVACANCYCODE  := ::cVACANCYCODE
	oClone:cREGISTRATION := ::cREGISTRATION
	oClone:cEMPLOYEEFIL  := ::cEMPLOYEEFIL
	oClone:cFILTERVALUE  := ::cFILTERVALUE
	oClone:cFILTERFIELD  := ::cFILTERFIELD
	oClone:cVACANCYFIL   := ::cVACANCYFIL
	oClone:oWSGETCANDPROCSELRESULT :=  IIF(::oWSGETCANDPROCSELRESULT = NIL , NIL ,::oWSGETCANDPROCSELRESULT:Clone() )
	oClone:oWSGETSELECTSRESULT :=  IIF(::oWSGETSELECTSRESULT = NIL , NIL ,::oWSGETSELECTSRESULT:Clone() )
	oClone:cUSERCODE     := ::cUSERCODE
	oClone:cTYPEVACANCY  := ::cTYPEVACANCY
	oClone:lNOMENSAGESQS := ::lNOMENSAGESQS
	oClone:oWSGETVACANCYRESULT :=  IIF(::oWSGETVACANCYRESULT = NIL , NIL ,::oWSGETVACANCYRESULT:Clone() )
	oClone:cCURRICCODE   := ::cCURRICCODE
	oClone:cTYPEAPPROVAL := ::cTYPEAPPROVAL
	oClone:nSETAPPROVECANDIDATERESULT := ::nSETAPPROVECANDIDATERESULT
	oClone:oWSSETAGENDACANDIDATE :=  IIF(::oWSSETAGENDACANDIDATE = NIL , NIL ,::oWSSETAGENDACANDIDATE:Clone() )
	oClone:lALTERDATETIME := ::lALTERDATETIME
	oClone:lALTEROBSCAND := ::lALTEROBSCAND
	oClone:lSENDMAILREPROVE := ::lSENDMAILREPROVE
	oClone:nSETSCHEDULERESULT := ::nSETSCHEDULERESULT
	oClone:oWSSHOWVACANCYRESULT :=  IIF(::oWSSHOWVACANCYRESULT = NIL , NIL ,::oWSSHOWVACANCYRESULT:Clone() )

	// Estruturas mantidas por compatibilidade - NÃO USAR
	oClone:oWSSTEPSAGENDACANDIDATE := oClone:oWSSETAGENDACANDIDATE
Return oClone

// WSDL Method GETCANDPROCSEL of Service WSRHVACANCY

WSMETHOD GETCANDPROCSEL WSSEND cVACANCYCODE,cREGISTRATION,cEMPLOYEEFIL,cFILTERVALUE,cFILTERFIELD,cVACANCYFIL WSRECEIVE oWSGETCANDPROCSELRESULT WSCLIENT WSRHVACANCY
Local cSoap := "" , oXmlRet

BEGIN WSMETHOD

cSoap += '<GETCANDPROCSEL xmlns="http://10.172.68.197:83/">'
cSoap += WSSoapValue("VACANCYCODE", ::cVACANCYCODE, cVACANCYCODE , "string", .T. , .F., 0 , NIL, .F.,.F.) 
cSoap += WSSoapValue("REGISTRATION", ::cREGISTRATION, cREGISTRATION , "string", .F. , .F., 0 , NIL, .F.,.F.) 
cSoap += WSSoapValue("EMPLOYEEFIL", ::cEMPLOYEEFIL, cEMPLOYEEFIL , "string", .F. , .F., 0 , NIL, .F.,.F.) 
cSoap += WSSoapValue("FILTERVALUE", ::cFILTERVALUE, cFILTERVALUE , "string", .F. , .F., 0 , NIL, .F.,.F.) 
cSoap += WSSoapValue("FILTERFIELD", ::cFILTERFIELD, cFILTERFIELD , "string", .F. , .F., 0 , NIL, .F.,.F.) 
cSoap += WSSoapValue("VACANCYFIL", ::cVACANCYFIL, cVACANCYFIL , "string", .F. , .F., 0 , NIL, .F.,.F.) 
cSoap += "</GETCANDPROCSEL>"

oXmlRet := SvcSoapCall(	Self,cSoap,; 
	"http://10.172.68.197:83/GETCANDPROCSEL",; 
	"DOCUMENT","http://10.172.68.197:83/",,"1.031217",; 
	"http://10.172.68.197:83/ws12ant/RHVACANCY.apw")

::Init()
::oWSGETCANDPROCSELRESULT:SoapRecv( WSAdvValue( oXmlRet,"_GETCANDPROCSELRESPONSE:_GETCANDPROCSELRESULT","ARRAYOFCURRICULUM1",NIL,NIL,NIL,NIL,NIL,NIL) )

END WSMETHOD

oXmlRet := NIL
Return .T.

// WSDL Method GETSELECTS of Service WSRHVACANCY

WSMETHOD GETSELECTS WSSEND cVACANCYCODE WSRECEIVE oWSGETSELECTSRESULT WSCLIENT WSRHVACANCY
Local cSoap := "" , oXmlRet

BEGIN WSMETHOD

cSoap += '<GETSELECTS xmlns="http://10.172.68.197:83/">'
cSoap += WSSoapValue("VACANCYCODE", ::cVACANCYCODE, cVACANCYCODE , "string", .T. , .F., 0 , NIL, .F.,.F.) 
cSoap += "</GETSELECTS>"

oXmlRet := SvcSoapCall(	Self,cSoap,; 
	"http://10.172.68.197:83/GETSELECTS",; 
	"DOCUMENT","http://10.172.68.197:83/",,"1.031217",; 
	"http://10.172.68.197:83/ws12ant/RHVACANCY.apw")

::Init()
::oWSGETSELECTSRESULT:SoapRecv( WSAdvValue( oXmlRet,"_GETSELECTSRESPONSE:_GETSELECTSRESULT","ARRAYOFSELECTS",NIL,NIL,NIL,NIL,NIL,NIL) )

END WSMETHOD

oXmlRet := NIL
Return .T.

// WSDL Method GETVACANCY of Service WSRHVACANCY

WSMETHOD GETVACANCY WSSEND cUSERCODE,cVACANCYFIL,cTYPEVACANCY,cFILTERVALUE,cFILTERFIELD,cREGISTRATION,cEMPLOYEEFIL, lNOMENSAGESQS WSRECEIVE oWSGETVACANCYRESULT WSCLIENT WSRHVACANCY
Local cSoap := "" , oXmlRet

BEGIN WSMETHOD

cSoap += '<GETVACANCY xmlns="http://10.172.68.197:83/">'
cSoap += WSSoapValue("USERCODE", ::cUSERCODE, cUSERCODE , "string", .T. , .F., 0 , NIL, .F.,.F.) 
cSoap += WSSoapValue("VACANCYFIL", ::cVACANCYFIL, cVACANCYFIL , "string", .F. , .F., 0 , NIL, .F.,.F.) 
cSoap += WSSoapValue("TYPEVACANCY", ::cTYPEVACANCY, cTYPEVACANCY , "string", .F. , .F., 0 , NIL, .F.,.F.) 
cSoap += WSSoapValue("FILTERVALUE", ::cFILTERVALUE, cFILTERVALUE , "string", .F. , .F., 0 , NIL, .F.,.F.) 
cSoap += WSSoapValue("FILTERFIELD", ::cFILTERFIELD, cFILTERFIELD , "string", .F. , .F., 0 , NIL, .F.,.F.) 
cSoap += WSSoapValue("REGISTRATION", ::cREGISTRATION, cREGISTRATION , "string", .F. , .F., 0 , NIL, .F.,.F.) 
cSoap += WSSoapValue("EMPLOYEEFIL", ::cEMPLOYEEFIL, cEMPLOYEEFIL , "string", .F. , .F., 0 , NIL, .F.,.F.) 
cSoap += WSSoapValue("NOMENSAGESQS", ::lNOMENSAGESQS, lNOMENSAGESQS , "boolean", .F. , .F., 0 , NIL, .F.,.F.) 
cSoap += "</GETVACANCY>"

oXmlRet := SvcSoapCall(	Self,cSoap,; 
	"http://10.172.68.197:83/GETVACANCY",; 
	"DOCUMENT","http://10.172.68.197:83/",,"1.031217",; 
	"http://10.172.68.197:83/ws12ant/RHVACANCY.apw")

::Init()
::oWSGETVACANCYRESULT:SoapRecv( WSAdvValue( oXmlRet,"_GETVACANCYRESPONSE:_GETVACANCYRESULT","ARRAYOFVACANCYCHOICE",NIL,NIL,NIL,NIL,NIL,NIL) )

END WSMETHOD

oXmlRet := NIL
Return .T.

// WSDL Method SETAPPROVECANDIDATE of Service WSRHVACANCY

WSMETHOD SETAPPROVECANDIDATE WSSEND cCURRICCODE,cVACANCYCODE,cTYPEAPPROVAL WSRECEIVE nSETAPPROVECANDIDATERESULT WSCLIENT WSRHVACANCY
Local cSoap := "" , oXmlRet

BEGIN WSMETHOD

cSoap += '<SETAPPROVECANDIDATE xmlns="http://10.172.68.197:83/">'
cSoap += WSSoapValue("CURRICCODE", ::cCURRICCODE, cCURRICCODE , "string", .F. , .F., 0 , NIL, .F.,.F.) 
cSoap += WSSoapValue("VACANCYCODE", ::cVACANCYCODE, cVACANCYCODE , "string", .T. , .F., 0 , NIL, .F.,.F.) 
cSoap += WSSoapValue("TYPEAPPROVAL", ::cTYPEAPPROVAL, cTYPEAPPROVAL , "string", .F. , .F., 0 , NIL, .F.,.F.) 
cSoap += "</SETAPPROVECANDIDATE>"

oXmlRet := SvcSoapCall(	Self,cSoap,; 
	"http://10.172.68.197:83/SETAPPROVECANDIDATE",; 
	"DOCUMENT","http://10.172.68.197:83/",,"1.031217",; 
	"http://10.172.68.197:83/ws12ant/RHVACANCY.apw")

::Init()
::nSETAPPROVECANDIDATERESULT :=  WSAdvValue( oXmlRet,"_SETAPPROVECANDIDATERESPONSE:_SETAPPROVECANDIDATERESULT:TEXT","integer",NIL,NIL,NIL,NIL,NIL,NIL) 

END WSMETHOD

oXmlRet := NIL
Return .T.

// WSDL Method SETSCHEDULE of Service WSRHVACANCY

WSMETHOD SETSCHEDULE WSSEND oWSSETAGENDACANDIDATE,cCURRICCODE,cVACANCYCODE,cTYPEAPPROVAL,lALTERDATETIME,lALTEROBSCAND,lSENDMAILREPROVE WSRECEIVE nSETSCHEDULERESULT WSCLIENT WSRHVACANCY
Local cSoap := "" , oXmlRet

BEGIN WSMETHOD

cSoap += '<SETSCHEDULE xmlns="http://10.172.68.197:83/">'
cSoap += WSSoapValue("SETAGENDACANDIDATE", ::oWSSETAGENDACANDIDATE, oWSSETAGENDACANDIDATE , "STEPSAGENDACANDIDATE", .F. , .F., 0 , NIL, .F.,.F.) 
cSoap += WSSoapValue("CURRICCODE", ::cCURRICCODE, cCURRICCODE , "string", .F. , .F., 0 , NIL, .F.,.F.) 
cSoap += WSSoapValue("VACANCYCODE", ::cVACANCYCODE, cVACANCYCODE , "string", .T. , .F., 0 , NIL, .F.,.F.) 
cSoap += WSSoapValue("TYPEAPPROVAL", ::cTYPEAPPROVAL, cTYPEAPPROVAL , "string", .F. , .F., 0 , NIL, .F.,.F.) 
cSoap += WSSoapValue("ALTERDATETIME", ::lALTERDATETIME, lALTERDATETIME , "boolean", .F. , .F., 0 , NIL, .F.,.F.) 
cSoap += WSSoapValue("ALTEROBSCAND", ::lALTEROBSCAND, lALTEROBSCAND , "boolean", .F. , .F., 0 , NIL, .F.,.F.) 
cSoap += WSSoapValue("SENDMAILREPROVE", ::lSENDMAILREPROVE, lSENDMAILREPROVE , "boolean", .F. , .F., 0 , NIL, .F.,.F.) 
cSoap += "</SETSCHEDULE>"

oXmlRet := SvcSoapCall(	Self,cSoap,; 
	"http://10.172.68.197:83/SETSCHEDULE",; 
	"DOCUMENT","http://10.172.68.197:83/",,"1.031217",; 
	"http://10.172.68.197:83/ws12ant/RHVACANCY.apw")

::Init()
::nSETSCHEDULERESULT :=  WSAdvValue( oXmlRet,"_SETSCHEDULERESPONSE:_SETSCHEDULERESULT:TEXT","integer",NIL,NIL,NIL,NIL,NIL,NIL) 

END WSMETHOD

oXmlRet := NIL
Return .T.

// WSDL Method SHOWVACANCY of Service WSRHVACANCY

WSMETHOD SHOWVACANCY WSSEND cUSERCODE,cVACANCYCODE,cVACANCYFIL WSRECEIVE oWSSHOWVACANCYRESULT WSCLIENT WSRHVACANCY
Local cSoap := "" , oXmlRet

BEGIN WSMETHOD

cSoap += '<SHOWVACANCY xmlns="http://10.172.68.197:83/">'
cSoap += WSSoapValue("USERCODE", ::cUSERCODE, cUSERCODE , "string", .T. , .F., 0 , NIL, .F.,.F.) 
cSoap += WSSoapValue("VACANCYCODE", ::cVACANCYCODE, cVACANCYCODE , "string", .T. , .F., 0 , NIL, .F.,.F.) 
cSoap += WSSoapValue("VACANCYFIL", ::cVACANCYFIL, cVACANCYFIL , "string", .F. , .F., 0 , NIL, .F.,.F.) 
cSoap += "</SHOWVACANCY>"

oXmlRet := SvcSoapCall(	Self,cSoap,; 
	"http://10.172.68.197:83/SHOWVACANCY",; 
	"DOCUMENT","http://10.172.68.197:83/",,"1.031217",; 
	"http://10.172.68.197:83/ws12ant/RHVACANCY.apw")

::Init()
::oWSSHOWVACANCYRESULT:SoapRecv( WSAdvValue( oXmlRet,"_SHOWVACANCYRESPONSE:_SHOWVACANCYRESULT","ARRAYOFVACANCYVIEW",NIL,NIL,NIL,NIL,NIL,NIL) )

END WSMETHOD

oXmlRet := NIL
Return .T.


// WSDL Data Structure ARRAYOFCURRICULUM1

WSSTRUCT RHVACANCY_ARRAYOFCURRICULUM1
	WSDATA   oWSCURRICULUM1            AS RHVACANCY_CURRICULUM1 OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT RHVACANCY_ARRAYOFCURRICULUM1
	::Init()
Return Self

WSMETHOD INIT WSCLIENT RHVACANCY_ARRAYOFCURRICULUM1
	::oWSCURRICULUM1       := {} // Array Of  RHVACANCY_CURRICULUM1():New()
Return

WSMETHOD CLONE WSCLIENT RHVACANCY_ARRAYOFCURRICULUM1
	Local oClone := RHVACANCY_ARRAYOFCURRICULUM1():NEW()
	oClone:oWSCURRICULUM1 := NIL
	If ::oWSCURRICULUM1 <> NIL 
		oClone:oWSCURRICULUM1 := {}
		aEval( ::oWSCURRICULUM1 , { |x| aadd( oClone:oWSCURRICULUM1 , x:Clone() ) } )
	Endif 
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT RHVACANCY_ARRAYOFCURRICULUM1
	Local nRElem1, oNodes1, nTElem1
	::Init()
	If oResponse = NIL ; Return ; Endif 
	oNodes1 :=  WSAdvValue( oResponse,"_CURRICULUM1","CURRICULUM1",{},NIL,.T.,"O",NIL,NIL) 
	nTElem1 := len(oNodes1)
	For nRElem1 := 1 to nTElem1 
		If !WSIsNilNode( oNodes1[nRElem1] )
			aadd(::oWSCURRICULUM1 , RHVACANCY_CURRICULUM1():New() )
			::oWSCURRICULUM1[len(::oWSCURRICULUM1)]:SoapRecv(oNodes1[nRElem1])
		Endif
	Next
Return

// WSDL Data Structure ARRAYOFSELECTS

WSSTRUCT RHVACANCY_ARRAYOFSELECTS
	WSDATA   oWSSELECTS                AS RHVACANCY_SELECTS OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT RHVACANCY_ARRAYOFSELECTS
	::Init()
Return Self

WSMETHOD INIT WSCLIENT RHVACANCY_ARRAYOFSELECTS
	::oWSSELECTS           := {} // Array Of  RHVACANCY_SELECTS():New()
Return

WSMETHOD CLONE WSCLIENT RHVACANCY_ARRAYOFSELECTS
	Local oClone := RHVACANCY_ARRAYOFSELECTS():NEW()
	oClone:oWSSELECTS := NIL
	If ::oWSSELECTS <> NIL 
		oClone:oWSSELECTS := {}
		aEval( ::oWSSELECTS , { |x| aadd( oClone:oWSSELECTS , x:Clone() ) } )
	Endif 
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT RHVACANCY_ARRAYOFSELECTS
	Local nRElem1, oNodes1, nTElem1
	::Init()
	If oResponse = NIL ; Return ; Endif 
	oNodes1 :=  WSAdvValue( oResponse,"_SELECTS","SELECTS",{},NIL,.T.,"O",NIL,NIL) 
	nTElem1 := len(oNodes1)
	For nRElem1 := 1 to nTElem1 
		If !WSIsNilNode( oNodes1[nRElem1] )
			aadd(::oWSSELECTS , RHVACANCY_SELECTS():New() )
			::oWSSELECTS[len(::oWSSELECTS)]:SoapRecv(oNodes1[nRElem1])
		Endif
	Next
Return

// WSDL Data Structure ARRAYOFVACANCYCHOICE

WSSTRUCT RHVACANCY_ARRAYOFVACANCYCHOICE
	WSDATA   oWSVACANCYCHOICE          AS RHVACANCY_VACANCYCHOICE OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT RHVACANCY_ARRAYOFVACANCYCHOICE
	::Init()
Return Self

WSMETHOD INIT WSCLIENT RHVACANCY_ARRAYOFVACANCYCHOICE
	::oWSVACANCYCHOICE     := {} // Array Of  RHVACANCY_VACANCYCHOICE():New()
Return

WSMETHOD CLONE WSCLIENT RHVACANCY_ARRAYOFVACANCYCHOICE
	Local oClone := RHVACANCY_ARRAYOFVACANCYCHOICE():NEW()
	oClone:oWSVACANCYCHOICE := NIL
	If ::oWSVACANCYCHOICE <> NIL 
		oClone:oWSVACANCYCHOICE := {}
		aEval( ::oWSVACANCYCHOICE , { |x| aadd( oClone:oWSVACANCYCHOICE , x:Clone() ) } )
	Endif 
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT RHVACANCY_ARRAYOFVACANCYCHOICE
	Local nRElem1, oNodes1, nTElem1
	::Init()
	If oResponse = NIL ; Return ; Endif 
	oNodes1 :=  WSAdvValue( oResponse,"_VACANCYCHOICE","VACANCYCHOICE",{},NIL,.T.,"O",NIL,NIL) 
	nTElem1 := len(oNodes1)
	For nRElem1 := 1 to nTElem1 
		If !WSIsNilNode( oNodes1[nRElem1] )
			aadd(::oWSVACANCYCHOICE , RHVACANCY_VACANCYCHOICE():New() )
			::oWSVACANCYCHOICE[len(::oWSVACANCYCHOICE)]:SoapRecv(oNodes1[nRElem1])
		Endif
	Next
Return

// WSDL Data Structure ARRAYOFVACANCYVIEW

WSSTRUCT RHVACANCY_ARRAYOFVACANCYVIEW
	WSDATA   oWSVACANCYVIEW            AS RHVACANCY_VACANCYVIEW OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT RHVACANCY_ARRAYOFVACANCYVIEW
	::Init()
Return Self

WSMETHOD INIT WSCLIENT RHVACANCY_ARRAYOFVACANCYVIEW
	::oWSVACANCYVIEW       := {} // Array Of  RHVACANCY_VACANCYVIEW():New()
Return

WSMETHOD CLONE WSCLIENT RHVACANCY_ARRAYOFVACANCYVIEW
	Local oClone := RHVACANCY_ARRAYOFVACANCYVIEW():NEW()
	oClone:oWSVACANCYVIEW := NIL
	If ::oWSVACANCYVIEW <> NIL 
		oClone:oWSVACANCYVIEW := {}
		aEval( ::oWSVACANCYVIEW , { |x| aadd( oClone:oWSVACANCYVIEW , x:Clone() ) } )
	Endif 
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT RHVACANCY_ARRAYOFVACANCYVIEW
	Local nRElem1, oNodes1, nTElem1
	::Init()
	If oResponse = NIL ; Return ; Endif 
	oNodes1 :=  WSAdvValue( oResponse,"_VACANCYVIEW","VACANCYVIEW",{},NIL,.T.,"O",NIL,NIL) 
	nTElem1 := len(oNodes1)
	For nRElem1 := 1 to nTElem1 
		If !WSIsNilNode( oNodes1[nRElem1] )
			aadd(::oWSVACANCYVIEW , RHVACANCY_VACANCYVIEW():New() )
			::oWSVACANCYVIEW[len(::oWSVACANCYVIEW)]:SoapRecv(oNodes1[nRElem1])
		Endif
	Next
Return

// WSDL Data Structure CURRICULUM1

WSSTRUCT RHVACANCY_CURRICULUM1
	WSDATA   cACEITE                   AS string OPTIONAL
	WSDATA   cACEITERESP               AS string OPTIONAL
	WSDATA   cADDRESS                  AS string
	WSDATA   cADDRESSCOMPLEMENT        AS string OPTIONAL
	WSDATA   oWSAGENDACANDIDATE        AS RHVACANCY_ARRAYOFSTEPSAGENDACANDIDATE OPTIONAL
	WSDATA   cANALISYS                 AS string OPTIONAL
	WSDATA   cAPPLICANTGROUP           AS string OPTIONAL
	WSDATA   cAREACODE                 AS string OPTIONAL
	WSDATA   cARRIVALYEAR              AS string OPTIONAL
	WSDATA   cBRANCH                   AS string OPTIONAL
	WSDATA   cBUSINESSPHONE            AS string OPTIONAL
	WSDATA   cCARGOCOD                 AS string OPTIONAL
	WSDATA   cCARGODESC                AS string OPTIONAL
	WSDATA   cCODCITYORI               AS string OPTIONAL
	WSDATA   cCOSTCENTERCODE           AS string OPTIONAL
	WSDATA   cCPF                      AS string OPTIONAL
	WSDATA   cCURRICULUM               AS string
	WSDATA   cCURRICULUMSTATUS         AS string OPTIONAL
	WSDATA   dDATEOFBIRTH              AS date OPTIONAL
	WSDATA   cDESIGNATION              AS string OPTIONAL
	WSDATA   cDISTRICT                 AS string OPTIONAL
	WSDATA   cDRIVINGLICENSE           AS string OPTIONAL
	WSDATA   cELECTORALDISTRICT        AS string OPTIONAL
	WSDATA   cEMAIL                    AS string OPTIONAL
	WSDATA   cEMPLOYBOOKNR             AS string OPTIONAL
	WSDATA   cEMPLOYBOOKSR             AS string OPTIONAL
	WSDATA   cEMPLOYBOOKSTATE          AS string OPTIONAL
	WSDATA   cEMPLOYEEBRANCH           AS string OPTIONAL
	WSDATA   cEMPLOYEEREGISTRATION     AS string OPTIONAL
	WSDATA   nEXPECTEDSALARY           AS float OPTIONAL
	WSDATA   cEXPERIENCE               AS string OPTIONAL
	WSDATA   nEXPERIENCETIME           AS float OPTIONAL
	WSDATA   cFATHERSNAME              AS string OPTIONAL
	WSDATA   cFIRSTNAME                AS string OPTIONAL
	WSDATA   cFIRSTSURNAME             AS string OPTIONAL
	WSDATA   cFONT                     AS string OPTIONAL
	WSDATA   cGENDER                   AS string OPTIONAL
	WSDATA   cHANDCAPPED               AS string OPTIONAL
	WSDATA   cHANDCAPPEDDESC           AS string OPTIONAL
	WSDATA   cHIERARCHICAL             AS string OPTIONAL
	WSDATA   cID                       AS string OPTIONAL
	WSDATA   cJOBABROAD                AS string OPTIONAL
	WSDATA   nLASTSALARY               AS float OPTIONAL
	WSDATA   oWSLISTOFCERTIFICATION    AS RHVACANCY_ARRAYOFCERTIFICATION OPTIONAL
	WSDATA   oWSLISTOFCHARACTERS       AS RHVACANCY_ARRAYOFCHARACTERS OPTIONAL
	WSDATA   oWSLISTOFCOURSES          AS RHVACANCY_ARRAYOFCOURSES OPTIONAL
	WSDATA   oWSLISTOFEVALUATION       AS RHVACANCY_ARRAYOFEVALUATION OPTIONAL
	WSDATA   oWSLISTOFGRADUATION       AS RHVACANCY_ARRAYOFGRADUATION OPTIONAL
	WSDATA   oWSLISTOFHISTORY          AS RHVACANCY_ARRAYOFHISTORY OPTIONAL
	WSDATA   oWSLISTOFLANGUAGES        AS RHVACANCY_ARRAYOFLANGUAGES OPTIONAL
	WSDATA   oWSLISTOFQUALIFICATION    AS RHVACANCY_ARRAYOFQUALIFICATION OPTIONAL
	WSDATA   cMARITALSTATUS            AS string OPTIONAL
	WSDATA   cMEANSSENT                AS string OPTIONAL
	WSDATA   cMOBILEPHONE              AS string OPTIONAL
	WSDATA   cMOTHERSNAME              AS string OPTIONAL
	WSDATA   cNAME                     AS string
	WSDATA   cNATIONALITY              AS string OPTIONAL
	WSDATA   nNUMBERCHARS              AS integer OPTIONAL
	WSDATA   nNUMBEROFCHILDREN         AS integer OPTIONAL
	WSDATA   cORIGIN                   AS string OPTIONAL
	WSDATA   cPARTNER                  AS string OPTIONAL
	WSDATA   cPASSWORD                 AS string OPTIONAL
	WSDATA   cPHONE                    AS string OPTIONAL
	WSDATA   cPIS                      AS string OPTIONAL
	WSDATA   cPOSITONAIMED             AS string OPTIONAL
	WSDATA   dREGISTERDATE             AS date OPTIONAL
	WSDATA   cRESERVISTCARD            AS string OPTIONAL
	WSDATA   cSECONDNAME               AS string OPTIONAL
	WSDATA   cSECONDSURNAME            AS string OPTIONAL
	WSDATA   cSTATE                    AS string OPTIONAL
	WSDATA   dTESTDATE                 AS date OPTIONAL
	WSDATA   nTESTGRADE                AS float OPTIONAL
	WSDATA   cTYPECURRICULUM           AS string OPTIONAL
	WSDATA   oWSUSERFIELDCERT          AS RHVACANCY_ARRAYOFUSERFIELD OPTIONAL
	WSDATA   oWSUSERFIELDCOUR          AS RHVACANCY_ARRAYOFUSERFIELD OPTIONAL
	WSDATA   oWSUSERFIELDGRAD          AS RHVACANCY_ARRAYOFUSERFIELD OPTIONAL
	WSDATA   oWSUSERFIELDHIST          AS RHVACANCY_ARRAYOFUSERFIELD OPTIONAL
	WSDATA   oWSUSERFIELDLANG          AS RHVACANCY_ARRAYOFUSERFIELD OPTIONAL
	WSDATA   oWSUSERFIELDPERS          AS RHVACANCY_ARRAYOFUSERFIELD OPTIONAL
	WSDATA   oWSUSERFIELDS             AS RHVACANCY_ARRAYOFUSERFIELD OPTIONAL
	WSDATA   cVOTINGCARD               AS string OPTIONAL
	WSDATA   nWORKEDTIME               AS float OPTIONAL
	WSDATA   cZIPCODE                  AS string OPTIONAL
	WSDATA   cZONE                     AS string OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT RHVACANCY_CURRICULUM1
	::Init()
Return Self

WSMETHOD INIT WSCLIENT RHVACANCY_CURRICULUM1
Return

WSMETHOD CLONE WSCLIENT RHVACANCY_CURRICULUM1
	Local oClone := RHVACANCY_CURRICULUM1():NEW()
	oClone:cACEITE              := ::cACEITE
	oClone:cACEITERESP          := ::cACEITERESP
	oClone:cADDRESS             := ::cADDRESS
	oClone:cADDRESSCOMPLEMENT   := ::cADDRESSCOMPLEMENT
	oClone:oWSAGENDACANDIDATE   := IIF(::oWSAGENDACANDIDATE = NIL , NIL , ::oWSAGENDACANDIDATE:Clone() )
	oClone:cANALISYS            := ::cANALISYS
	oClone:cAPPLICANTGROUP      := ::cAPPLICANTGROUP
	oClone:cAREACODE            := ::cAREACODE
	oClone:cARRIVALYEAR         := ::cARRIVALYEAR
	oClone:cBRANCH              := ::cBRANCH
	oClone:cBUSINESSPHONE       := ::cBUSINESSPHONE
	oClone:cCARGOCOD            := ::cCARGOCOD
	oClone:cCARGODESC           := ::cCARGODESC
	oClone:cCODCITYORI          := ::cCODCITYORI
	oClone:cCOSTCENTERCODE      := ::cCOSTCENTERCODE
	oClone:cCPF                 := ::cCPF
	oClone:cCURRICULUM          := ::cCURRICULUM
	oClone:cCURRICULUMSTATUS    := ::cCURRICULUMSTATUS
	oClone:dDATEOFBIRTH         := ::dDATEOFBIRTH
	oClone:cDESIGNATION         := ::cDESIGNATION
	oClone:cDISTRICT            := ::cDISTRICT
	oClone:cDRIVINGLICENSE      := ::cDRIVINGLICENSE
	oClone:cELECTORALDISTRICT   := ::cELECTORALDISTRICT
	oClone:cEMAIL               := ::cEMAIL
	oClone:cEMPLOYBOOKNR        := ::cEMPLOYBOOKNR
	oClone:cEMPLOYBOOKSR        := ::cEMPLOYBOOKSR
	oClone:cEMPLOYBOOKSTATE     := ::cEMPLOYBOOKSTATE
	oClone:cEMPLOYEEBRANCH      := ::cEMPLOYEEBRANCH
	oClone:cEMPLOYEEREGISTRATION := ::cEMPLOYEEREGISTRATION
	oClone:nEXPECTEDSALARY      := ::nEXPECTEDSALARY
	oClone:cEXPERIENCE          := ::cEXPERIENCE
	oClone:nEXPERIENCETIME      := ::nEXPERIENCETIME
	oClone:cFATHERSNAME         := ::cFATHERSNAME
	oClone:cFIRSTNAME           := ::cFIRSTNAME
	oClone:cFIRSTSURNAME        := ::cFIRSTSURNAME
	oClone:cFONT                := ::cFONT
	oClone:cGENDER              := ::cGENDER
	oClone:cHANDCAPPED          := ::cHANDCAPPED
	oClone:cHANDCAPPEDDESC      := ::cHANDCAPPEDDESC
	oClone:cHIERARCHICAL        := ::cHIERARCHICAL
	oClone:cID                  := ::cID
	oClone:cJOBABROAD           := ::cJOBABROAD
	oClone:nLASTSALARY          := ::nLASTSALARY
	oClone:oWSLISTOFCERTIFICATION := IIF(::oWSLISTOFCERTIFICATION = NIL , NIL , ::oWSLISTOFCERTIFICATION:Clone() )
	oClone:oWSLISTOFCHARACTERS  := IIF(::oWSLISTOFCHARACTERS = NIL , NIL , ::oWSLISTOFCHARACTERS:Clone() )
	oClone:oWSLISTOFCOURSES     := IIF(::oWSLISTOFCOURSES = NIL , NIL , ::oWSLISTOFCOURSES:Clone() )
	oClone:oWSLISTOFEVALUATION  := IIF(::oWSLISTOFEVALUATION = NIL , NIL , ::oWSLISTOFEVALUATION:Clone() )
	oClone:oWSLISTOFGRADUATION  := IIF(::oWSLISTOFGRADUATION = NIL , NIL , ::oWSLISTOFGRADUATION:Clone() )
	oClone:oWSLISTOFHISTORY     := IIF(::oWSLISTOFHISTORY = NIL , NIL , ::oWSLISTOFHISTORY:Clone() )
	oClone:oWSLISTOFLANGUAGES   := IIF(::oWSLISTOFLANGUAGES = NIL , NIL , ::oWSLISTOFLANGUAGES:Clone() )
	oClone:oWSLISTOFQUALIFICATION := IIF(::oWSLISTOFQUALIFICATION = NIL , NIL , ::oWSLISTOFQUALIFICATION:Clone() )
	oClone:cMARITALSTATUS       := ::cMARITALSTATUS
	oClone:cMEANSSENT           := ::cMEANSSENT
	oClone:cMOBILEPHONE         := ::cMOBILEPHONE
	oClone:cMOTHERSNAME         := ::cMOTHERSNAME
	oClone:cNAME                := ::cNAME
	oClone:cNATIONALITY         := ::cNATIONALITY
	oClone:nNUMBERCHARS         := ::nNUMBERCHARS
	oClone:nNUMBEROFCHILDREN    := ::nNUMBEROFCHILDREN
	oClone:cORIGIN              := ::cORIGIN
	oClone:cPARTNER             := ::cPARTNER
	oClone:cPASSWORD            := ::cPASSWORD
	oClone:cPHONE               := ::cPHONE
	oClone:cPIS                 := ::cPIS
	oClone:cPOSITONAIMED        := ::cPOSITONAIMED
	oClone:dREGISTERDATE        := ::dREGISTERDATE
	oClone:cRESERVISTCARD       := ::cRESERVISTCARD
	oClone:cSECONDNAME          := ::cSECONDNAME
	oClone:cSECONDSURNAME       := ::cSECONDSURNAME
	oClone:cSTATE               := ::cSTATE
	oClone:dTESTDATE            := ::dTESTDATE
	oClone:nTESTGRADE           := ::nTESTGRADE
	oClone:cTYPECURRICULUM      := ::cTYPECURRICULUM
	oClone:oWSUSERFIELDCERT     := IIF(::oWSUSERFIELDCERT = NIL , NIL , ::oWSUSERFIELDCERT:Clone() )
	oClone:oWSUSERFIELDCOUR     := IIF(::oWSUSERFIELDCOUR = NIL , NIL , ::oWSUSERFIELDCOUR:Clone() )
	oClone:oWSUSERFIELDGRAD     := IIF(::oWSUSERFIELDGRAD = NIL , NIL , ::oWSUSERFIELDGRAD:Clone() )
	oClone:oWSUSERFIELDHIST     := IIF(::oWSUSERFIELDHIST = NIL , NIL , ::oWSUSERFIELDHIST:Clone() )
	oClone:oWSUSERFIELDLANG     := IIF(::oWSUSERFIELDLANG = NIL , NIL , ::oWSUSERFIELDLANG:Clone() )
	oClone:oWSUSERFIELDPERS     := IIF(::oWSUSERFIELDPERS = NIL , NIL , ::oWSUSERFIELDPERS:Clone() )
	oClone:oWSUSERFIELDS        := IIF(::oWSUSERFIELDS = NIL , NIL , ::oWSUSERFIELDS:Clone() )
	oClone:cVOTINGCARD          := ::cVOTINGCARD
	oClone:nWORKEDTIME          := ::nWORKEDTIME
	oClone:cZIPCODE             := ::cZIPCODE
	oClone:cZONE                := ::cZONE
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT RHVACANCY_CURRICULUM1
	Local oNode5
	Local oNode44
	Local oNode45
	Local oNode46
	Local oNode47
	Local oNode48
	Local oNode49
	Local oNode50
	Local oNode51
	Local oNode74
	Local oNode75
	Local oNode76
	Local oNode77
	Local oNode78
	Local oNode79
	Local oNode80
	::Init()
	If oResponse = NIL ; Return ; Endif 
	::cACEITE            :=  WSAdvValue( oResponse,"_ACEITE","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cACEITERESP        :=  WSAdvValue( oResponse,"_ACEITERESP","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cADDRESS           :=  WSAdvValue( oResponse,"_ADDRESS","string",NIL,"Property cADDRESS as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::cADDRESSCOMPLEMENT :=  WSAdvValue( oResponse,"_ADDRESSCOMPLEMENT","string",NIL,NIL,NIL,"S",NIL,NIL) 
	oNode5 :=  WSAdvValue( oResponse,"_AGENDACANDIDATE","ARRAYOFSTEPSAGENDACANDIDATE",NIL,NIL,NIL,"O",NIL,NIL) 
	If oNode5 != NIL
		::oWSAGENDACANDIDATE := RHVACANCY_ARRAYOFSTEPSAGENDACANDIDATE():New()
		::oWSAGENDACANDIDATE:SoapRecv(oNode5)
	EndIf
	::cANALISYS          :=  WSAdvValue( oResponse,"_ANALISYS","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cAPPLICANTGROUP    :=  WSAdvValue( oResponse,"_APPLICANTGROUP","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cAREACODE          :=  WSAdvValue( oResponse,"_AREACODE","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cARRIVALYEAR       :=  WSAdvValue( oResponse,"_ARRIVALYEAR","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cBRANCH            :=  WSAdvValue( oResponse,"_BRANCH","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cBUSINESSPHONE     :=  WSAdvValue( oResponse,"_BUSINESSPHONE","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cCARGOCOD          :=  WSAdvValue( oResponse,"_CARGOCOD","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cCARGODESC         :=  WSAdvValue( oResponse,"_CARGODESC","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cCODCITYORI        :=  WSAdvValue( oResponse,"_CODCITYORI","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cCOSTCENTERCODE    :=  WSAdvValue( oResponse,"_COSTCENTERCODE","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cCPF               :=  WSAdvValue( oResponse,"_CPF","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cCURRICULUM        :=  WSAdvValue( oResponse,"_CURRICULUM","string",NIL,"Property cCURRICULUM as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::cCURRICULUMSTATUS  :=  WSAdvValue( oResponse,"_CURRICULUMSTATUS","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::dDATEOFBIRTH       :=  WSAdvValue( oResponse,"_DATEOFBIRTH","date",NIL,NIL,NIL,"D",NIL,NIL) 
	::cDESIGNATION       :=  WSAdvValue( oResponse,"_DESIGNATION","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cDISTRICT          :=  WSAdvValue( oResponse,"_DISTRICT","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cDRIVINGLICENSE    :=  WSAdvValue( oResponse,"_DRIVINGLICENSE","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cELECTORALDISTRICT :=  WSAdvValue( oResponse,"_ELECTORALDISTRICT","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cEMAIL             :=  WSAdvValue( oResponse,"_EMAIL","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cEMPLOYBOOKNR      :=  WSAdvValue( oResponse,"_EMPLOYBOOKNR","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cEMPLOYBOOKSR      :=  WSAdvValue( oResponse,"_EMPLOYBOOKSR","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cEMPLOYBOOKSTATE   :=  WSAdvValue( oResponse,"_EMPLOYBOOKSTATE","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cEMPLOYEEBRANCH    :=  WSAdvValue( oResponse,"_EMPLOYEEBRANCH","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cEMPLOYEEREGISTRATION :=  WSAdvValue( oResponse,"_EMPLOYEEREGISTRATION","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::nEXPECTEDSALARY    :=  WSAdvValue( oResponse,"_EXPECTEDSALARY","float",NIL,NIL,NIL,"N",NIL,NIL) 
	::cEXPERIENCE        :=  WSAdvValue( oResponse,"_EXPERIENCE","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::nEXPERIENCETIME    :=  WSAdvValue( oResponse,"_EXPERIENCETIME","float",NIL,NIL,NIL,"N",NIL,NIL) 
	::cFATHERSNAME       :=  WSAdvValue( oResponse,"_FATHERSNAME","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cFIRSTNAME         :=  WSAdvValue( oResponse,"_FIRSTNAME","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cFIRSTSURNAME      :=  WSAdvValue( oResponse,"_FIRSTSURNAME","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cFONT              :=  WSAdvValue( oResponse,"_FONT","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cGENDER            :=  WSAdvValue( oResponse,"_GENDER","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cHANDCAPPED        :=  WSAdvValue( oResponse,"_HANDCAPPED","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cHANDCAPPEDDESC    :=  WSAdvValue( oResponse,"_HANDCAPPEDDESC","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cHIERARCHICAL      :=  WSAdvValue( oResponse,"_HIERARCHICAL","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cID                :=  WSAdvValue( oResponse,"_ID","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cJOBABROAD         :=  WSAdvValue( oResponse,"_JOBABROAD","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::nLASTSALARY        :=  WSAdvValue( oResponse,"_LASTSALARY","float",NIL,NIL,NIL,"N",NIL,NIL) 
	oNode44 :=  WSAdvValue( oResponse,"_LISTOFCERTIFICATION","ARRAYOFCERTIFICATION",NIL,NIL,NIL,"O",NIL,NIL) 
	If oNode44 != NIL
		::oWSLISTOFCERTIFICATION := RHVACANCY_ARRAYOFCERTIFICATION():New()
		::oWSLISTOFCERTIFICATION:SoapRecv(oNode44)
	EndIf
	oNode45 :=  WSAdvValue( oResponse,"_LISTOFCHARACTERS","ARRAYOFCHARACTERS",NIL,NIL,NIL,"O",NIL,NIL) 
	If oNode45 != NIL
		::oWSLISTOFCHARACTERS := RHVACANCY_ARRAYOFCHARACTERS():New()
		::oWSLISTOFCHARACTERS:SoapRecv(oNode45)
	EndIf
	oNode46 :=  WSAdvValue( oResponse,"_LISTOFCOURSES","ARRAYOFCOURSES",NIL,NIL,NIL,"O",NIL,NIL) 
	If oNode46 != NIL
		::oWSLISTOFCOURSES := RHVACANCY_ARRAYOFCOURSES():New()
		::oWSLISTOFCOURSES:SoapRecv(oNode46)
	EndIf
	oNode47 :=  WSAdvValue( oResponse,"_LISTOFEVALUATION","ARRAYOFEVALUATION",NIL,NIL,NIL,"O",NIL,NIL) 
	If oNode47 != NIL
		::oWSLISTOFEVALUATION := RHVACANCY_ARRAYOFEVALUATION():New()
		::oWSLISTOFEVALUATION:SoapRecv(oNode47)
	EndIf
	oNode48 :=  WSAdvValue( oResponse,"_LISTOFGRADUATION","ARRAYOFGRADUATION",NIL,NIL,NIL,"O",NIL,NIL) 
	If oNode48 != NIL
		::oWSLISTOFGRADUATION := RHVACANCY_ARRAYOFGRADUATION():New()
		::oWSLISTOFGRADUATION:SoapRecv(oNode48)
	EndIf
	oNode49 :=  WSAdvValue( oResponse,"_LISTOFHISTORY","ARRAYOFHISTORY",NIL,NIL,NIL,"O",NIL,NIL) 
	If oNode49 != NIL
		::oWSLISTOFHISTORY := RHVACANCY_ARRAYOFHISTORY():New()
		::oWSLISTOFHISTORY:SoapRecv(oNode49)
	EndIf
	oNode50 :=  WSAdvValue( oResponse,"_LISTOFLANGUAGES","ARRAYOFLANGUAGES",NIL,NIL,NIL,"O",NIL,NIL) 
	If oNode50 != NIL
		::oWSLISTOFLANGUAGES := RHVACANCY_ARRAYOFLANGUAGES():New()
		::oWSLISTOFLANGUAGES:SoapRecv(oNode50)
	EndIf
	oNode51 :=  WSAdvValue( oResponse,"_LISTOFQUALIFICATION","ARRAYOFQUALIFICATION",NIL,NIL,NIL,"O",NIL,NIL) 
	If oNode51 != NIL
		::oWSLISTOFQUALIFICATION := RHVACANCY_ARRAYOFQUALIFICATION():New()
		::oWSLISTOFQUALIFICATION:SoapRecv(oNode51)
	EndIf
	::cMARITALSTATUS     :=  WSAdvValue( oResponse,"_MARITALSTATUS","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cMEANSSENT         :=  WSAdvValue( oResponse,"_MEANSSENT","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cMOBILEPHONE       :=  WSAdvValue( oResponse,"_MOBILEPHONE","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cMOTHERSNAME       :=  WSAdvValue( oResponse,"_MOTHERSNAME","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cNAME              :=  WSAdvValue( oResponse,"_NAME","string",NIL,"Property cNAME as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::cNATIONALITY       :=  WSAdvValue( oResponse,"_NATIONALITY","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::nNUMBERCHARS       :=  WSAdvValue( oResponse,"_NUMBERCHARS","integer",NIL,NIL,NIL,"N",NIL,NIL) 
	::nNUMBEROFCHILDREN  :=  WSAdvValue( oResponse,"_NUMBEROFCHILDREN","integer",NIL,NIL,NIL,"N",NIL,NIL) 
	::cORIGIN            :=  WSAdvValue( oResponse,"_ORIGIN","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cPARTNER           :=  WSAdvValue( oResponse,"_PARTNER","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cPASSWORD          :=  WSAdvValue( oResponse,"_PASSWORD","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cPHONE             :=  WSAdvValue( oResponse,"_PHONE","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cPIS               :=  WSAdvValue( oResponse,"_PIS","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cPOSITONAIMED      :=  WSAdvValue( oResponse,"_POSITONAIMED","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::dREGISTERDATE      :=  WSAdvValue( oResponse,"_REGISTERDATE","date",NIL,NIL,NIL,"D",NIL,NIL) 
	::cRESERVISTCARD     :=  WSAdvValue( oResponse,"_RESERVISTCARD","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cSECONDNAME        :=  WSAdvValue( oResponse,"_SECONDNAME","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cSECONDSURNAME     :=  WSAdvValue( oResponse,"_SECONDSURNAME","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cSTATE             :=  WSAdvValue( oResponse,"_STATE","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::dTESTDATE          :=  WSAdvValue( oResponse,"_TESTDATE","date",NIL,NIL,NIL,"D",NIL,NIL) 
	::nTESTGRADE         :=  WSAdvValue( oResponse,"_TESTGRADE","float",NIL,NIL,NIL,"N",NIL,NIL) 
	::cTYPECURRICULUM    :=  WSAdvValue( oResponse,"_TYPECURRICULUM","string",NIL,NIL,NIL,"S",NIL,NIL) 
	oNode74 :=  WSAdvValue( oResponse,"_USERFIELDCERT","ARRAYOFUSERFIELD",NIL,NIL,NIL,"O",NIL,NIL) 
	If oNode74 != NIL
		::oWSUSERFIELDCERT := RHVACANCY_ARRAYOFUSERFIELD():New()
		::oWSUSERFIELDCERT:SoapRecv(oNode74)
	EndIf
	oNode75 :=  WSAdvValue( oResponse,"_USERFIELDCOUR","ARRAYOFUSERFIELD",NIL,NIL,NIL,"O",NIL,NIL) 
	If oNode75 != NIL
		::oWSUSERFIELDCOUR := RHVACANCY_ARRAYOFUSERFIELD():New()
		::oWSUSERFIELDCOUR:SoapRecv(oNode75)
	EndIf
	oNode76 :=  WSAdvValue( oResponse,"_USERFIELDGRAD","ARRAYOFUSERFIELD",NIL,NIL,NIL,"O",NIL,NIL) 
	If oNode76 != NIL
		::oWSUSERFIELDGRAD := RHVACANCY_ARRAYOFUSERFIELD():New()
		::oWSUSERFIELDGRAD:SoapRecv(oNode76)
	EndIf
	oNode77 :=  WSAdvValue( oResponse,"_USERFIELDHIST","ARRAYOFUSERFIELD",NIL,NIL,NIL,"O",NIL,NIL) 
	If oNode77 != NIL
		::oWSUSERFIELDHIST := RHVACANCY_ARRAYOFUSERFIELD():New()
		::oWSUSERFIELDHIST:SoapRecv(oNode77)
	EndIf
	oNode78 :=  WSAdvValue( oResponse,"_USERFIELDLANG","ARRAYOFUSERFIELD",NIL,NIL,NIL,"O",NIL,NIL) 
	If oNode78 != NIL
		::oWSUSERFIELDLANG := RHVACANCY_ARRAYOFUSERFIELD():New()
		::oWSUSERFIELDLANG:SoapRecv(oNode78)
	EndIf
	oNode79 :=  WSAdvValue( oResponse,"_USERFIELDPERS","ARRAYOFUSERFIELD",NIL,NIL,NIL,"O",NIL,NIL) 
	If oNode79 != NIL
		::oWSUSERFIELDPERS := RHVACANCY_ARRAYOFUSERFIELD():New()
		::oWSUSERFIELDPERS:SoapRecv(oNode79)
	EndIf
	oNode80 :=  WSAdvValue( oResponse,"_USERFIELDS","ARRAYOFUSERFIELD",NIL,NIL,NIL,"O",NIL,NIL) 
	If oNode80 != NIL
		::oWSUSERFIELDS := RHVACANCY_ARRAYOFUSERFIELD():New()
		::oWSUSERFIELDS:SoapRecv(oNode80)
	EndIf
	::cVOTINGCARD        :=  WSAdvValue( oResponse,"_VOTINGCARD","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::nWORKEDTIME        :=  WSAdvValue( oResponse,"_WORKEDTIME","float",NIL,NIL,NIL,"N",NIL,NIL) 
	::cZIPCODE           :=  WSAdvValue( oResponse,"_ZIPCODE","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cZONE              :=  WSAdvValue( oResponse,"_ZONE","string",NIL,NIL,NIL,"S",NIL,NIL) 
Return

// WSDL Data Structure SELECTS

WSSTRUCT RHVACANCY_SELECTS
	WSDATA   oWSSELECTITENS            AS RHVACANCY_ARRAYOFOPTIONSELECT OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT RHVACANCY_SELECTS
	::Init()
Return Self

WSMETHOD INIT WSCLIENT RHVACANCY_SELECTS
Return

WSMETHOD CLONE WSCLIENT RHVACANCY_SELECTS
	Local oClone := RHVACANCY_SELECTS():NEW()
	oClone:oWSSELECTITENS       := IIF(::oWSSELECTITENS = NIL , NIL , ::oWSSELECTITENS:Clone() )
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT RHVACANCY_SELECTS
	Local oNode1
	::Init()
	If oResponse = NIL ; Return ; Endif 
	oNode1 :=  WSAdvValue( oResponse,"_SELECTITENS","ARRAYOFOPTIONSELECT",NIL,NIL,NIL,"O",NIL,NIL) 
	If oNode1 != NIL
		::oWSSELECTITENS := RHVACANCY_ARRAYOFOPTIONSELECT():New()
		::oWSSELECTITENS:SoapRecv(oNode1)
	EndIf
Return

// WSDL Data Structure VACANCYCHOICE

WSSTRUCT RHVACANCY_VACANCYCHOICE
	WSDATA   nAVAIABLEVACANCIES        AS integer OPTIONAL
	WSDATA   nNUMBERCLOSEDVACANCIES    AS integer OPTIONAL
	WSDATA   dOPENINGDATE              AS date OPTIONAL
	WSDATA   cOPENPOSITIONDESCRIPTION  AS string
	WSDATA   cPROFILE                  AS string
	WSDATA   oWSUSERFIELDS             AS RHVACANCY_ARRAYOFUSERFIELD OPTIONAL
	WSDATA   cVACANCYCODE              AS string
	WSDATA   cVACANCYDESCRIPTIONFIL    AS string OPTIONAL
	WSDATA   cVACANCYFIL               AS string OPTIONAL
	WSDATA   cVACANCYTYPE              AS string OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT RHVACANCY_VACANCYCHOICE
	::Init()
Return Self

WSMETHOD INIT WSCLIENT RHVACANCY_VACANCYCHOICE
Return

WSMETHOD CLONE WSCLIENT RHVACANCY_VACANCYCHOICE
	Local oClone := RHVACANCY_VACANCYCHOICE():NEW()
	oClone:nAVAIABLEVACANCIES   := ::nAVAIABLEVACANCIES
	oClone:nNUMBERCLOSEDVACANCIES := ::nNUMBERCLOSEDVACANCIES
	oClone:dOPENINGDATE         := ::dOPENINGDATE
	oClone:cOPENPOSITIONDESCRIPTION := ::cOPENPOSITIONDESCRIPTION
	oClone:cPROFILE             := ::cPROFILE
	oClone:oWSUSERFIELDS        := IIF(::oWSUSERFIELDS = NIL , NIL , ::oWSUSERFIELDS:Clone() )
	oClone:cVACANCYCODE         := ::cVACANCYCODE
	oClone:cVACANCYDESCRIPTIONFIL := ::cVACANCYDESCRIPTIONFIL
	oClone:cVACANCYFIL          := ::cVACANCYFIL
	oClone:cVACANCYTYPE         := ::cVACANCYTYPE
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT RHVACANCY_VACANCYCHOICE
	Local oNode6
	::Init()
	If oResponse = NIL ; Return ; Endif 
	::nAVAIABLEVACANCIES :=  WSAdvValue( oResponse,"_AVAIABLEVACANCIES","integer",NIL,NIL,NIL,"N",NIL,NIL) 
	::nNUMBERCLOSEDVACANCIES :=  WSAdvValue( oResponse,"_NUMBERCLOSEDVACANCIES","integer",NIL,NIL,NIL,"N",NIL,NIL) 
	::dOPENINGDATE       :=  WSAdvValue( oResponse,"_OPENINGDATE","date",NIL,NIL,NIL,"D",NIL,NIL) 
	::cOPENPOSITIONDESCRIPTION :=  WSAdvValue( oResponse,"_OPENPOSITIONDESCRIPTION","string",NIL,"Property cOPENPOSITIONDESCRIPTION as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::cPROFILE           :=  WSAdvValue( oResponse,"_PROFILE","string",NIL,"Property cPROFILE as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	oNode6 :=  WSAdvValue( oResponse,"_USERFIELDS","ARRAYOFUSERFIELD",NIL,NIL,NIL,"O",NIL,NIL) 
	If oNode6 != NIL
		::oWSUSERFIELDS := RHVACANCY_ARRAYOFUSERFIELD():New()
		::oWSUSERFIELDS:SoapRecv(oNode6)
	EndIf
	::cVACANCYCODE       :=  WSAdvValue( oResponse,"_VACANCYCODE","string",NIL,"Property cVACANCYCODE as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::cVACANCYDESCRIPTIONFIL :=  WSAdvValue( oResponse,"_VACANCYDESCRIPTIONFIL","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cVACANCYFIL        :=  WSAdvValue( oResponse,"_VACANCYFIL","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cVACANCYTYPE       :=  WSAdvValue( oResponse,"_VACANCYTYPE","string",NIL,NIL,NIL,"S",NIL,NIL) 
Return

// WSDL Data Structure VACANCYVIEW

WSSTRUCT RHVACANCY_VACANCYVIEW
	WSDATA   cAPPROVALMESSAGE          AS string OPTIONAL
	WSDATA   cAPPROVALMESSAGEDESCRIPTION AS string OPTIONAL
	WSDATA   cAREACODE                 AS string OPTIONAL
	WSDATA   cAREADESCRIPTION          AS string OPTIONAL
	WSDATA   cAUTOFAILURE              AS string OPTIONAL
	WSDATA   nAVAIABLEVACANCIES        AS integer OPTIONAL
	WSDATA   cCOSTCENTERCODE           AS string OPTIONAL
	WSDATA   cCOSTCENTERDESCRIPTION    AS string OPTIONAL
	WSDATA   cDISAPPROVALMESSAGE       AS string OPTIONAL
	WSDATA   cDISAPPROVALMESSAGEDESCRIPTION AS string OPTIONAL
	WSDATA   cFUNCTIONCODE             AS string OPTIONAL
	WSDATA   cFUNCTIONDESCRIPTION      AS string OPTIONAL
	WSDATA   nNUMBERCLOSEDVACANCIES    AS integer OPTIONAL
	WSDATA   nNUMBERVACANCIES          AS integer OPTIONAL
	WSDATA   dOPENINGDATE              AS date OPTIONAL
	WSDATA   cOPENPOSITIONDESCRIPTION  AS string
	WSDATA   cPETITIONER               AS string OPTIONAL
	WSDATA   nPOINT                    AS integer OPTIONAL
	WSDATA   cPOSITIONCODE             AS string OPTIONAL
	WSDATA   cPOSITIONDESCRIPTION      AS string OPTIONAL
	WSDATA   cPOSITIONDETAILEDDESCRIPTION AS string OPTIONAL
	WSDATA   cPROFILEDETAILEDDESCRIPTION AS string OPTIONAL
	WSDATA   cREINSCRIPTION            AS string OPTIONAL
	WSDATA   nTERMVACANCY              AS integer OPTIONAL
	WSDATA   cTEST                     AS string OPTIONAL
	WSDATA   cTESTDESCRIPTION          AS string OPTIONAL
	WSDATA   oWSUSERFIELDS             AS RHVACANCY_ARRAYOFUSERFIELD OPTIONAL
	WSDATA   cVACANCYCODE              AS string
	WSDATA   cVACANCYDESCRIPTIONFIL    AS string OPTIONAL
	WSDATA   cVACANCYFIL               AS string OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT RHVACANCY_VACANCYVIEW
	::Init()
Return Self

WSMETHOD INIT WSCLIENT RHVACANCY_VACANCYVIEW
Return

WSMETHOD CLONE WSCLIENT RHVACANCY_VACANCYVIEW
	Local oClone := RHVACANCY_VACANCYVIEW():NEW()
	oClone:cAPPROVALMESSAGE     := ::cAPPROVALMESSAGE
	oClone:cAPPROVALMESSAGEDESCRIPTION := ::cAPPROVALMESSAGEDESCRIPTION
	oClone:cAREACODE            := ::cAREACODE
	oClone:cAREADESCRIPTION     := ::cAREADESCRIPTION
	oClone:cAUTOFAILURE         := ::cAUTOFAILURE
	oClone:nAVAIABLEVACANCIES   := ::nAVAIABLEVACANCIES
	oClone:cCOSTCENTERCODE      := ::cCOSTCENTERCODE
	oClone:cCOSTCENTERDESCRIPTION := ::cCOSTCENTERDESCRIPTION
	oClone:cDISAPPROVALMESSAGE  := ::cDISAPPROVALMESSAGE
	oClone:cDISAPPROVALMESSAGEDESCRIPTION := ::cDISAPPROVALMESSAGEDESCRIPTION
	oClone:cFUNCTIONCODE        := ::cFUNCTIONCODE
	oClone:cFUNCTIONDESCRIPTION := ::cFUNCTIONDESCRIPTION
	oClone:nNUMBERCLOSEDVACANCIES := ::nNUMBERCLOSEDVACANCIES
	oClone:nNUMBERVACANCIES     := ::nNUMBERVACANCIES
	oClone:dOPENINGDATE         := ::dOPENINGDATE
	oClone:cOPENPOSITIONDESCRIPTION := ::cOPENPOSITIONDESCRIPTION
	oClone:cPETITIONER          := ::cPETITIONER
	oClone:nPOINT               := ::nPOINT
	oClone:cPOSITIONCODE        := ::cPOSITIONCODE
	oClone:cPOSITIONDESCRIPTION := ::cPOSITIONDESCRIPTION
	oClone:cPOSITIONDETAILEDDESCRIPTION := ::cPOSITIONDETAILEDDESCRIPTION
	oClone:cPROFILEDETAILEDDESCRIPTION := ::cPROFILEDETAILEDDESCRIPTION
	oClone:cREINSCRIPTION       := ::cREINSCRIPTION
	oClone:nTERMVACANCY         := ::nTERMVACANCY
	oClone:cTEST                := ::cTEST
	oClone:cTESTDESCRIPTION     := ::cTESTDESCRIPTION
	oClone:oWSUSERFIELDS        := IIF(::oWSUSERFIELDS = NIL , NIL , ::oWSUSERFIELDS:Clone() )
	oClone:cVACANCYCODE         := ::cVACANCYCODE
	oClone:cVACANCYDESCRIPTIONFIL := ::cVACANCYDESCRIPTIONFIL
	oClone:cVACANCYFIL          := ::cVACANCYFIL
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT RHVACANCY_VACANCYVIEW
	Local oNode27
	::Init()
	If oResponse = NIL ; Return ; Endif 
	::cAPPROVALMESSAGE   :=  WSAdvValue( oResponse,"_APPROVALMESSAGE","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cAPPROVALMESSAGEDESCRIPTION :=  WSAdvValue( oResponse,"_APPROVALMESSAGEDESCRIPTION","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cAREACODE          :=  WSAdvValue( oResponse,"_AREACODE","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cAREADESCRIPTION   :=  WSAdvValue( oResponse,"_AREADESCRIPTION","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cAUTOFAILURE       :=  WSAdvValue( oResponse,"_AUTOFAILURE","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::nAVAIABLEVACANCIES :=  WSAdvValue( oResponse,"_AVAIABLEVACANCIES","integer",NIL,NIL,NIL,"N",NIL,NIL) 
	::cCOSTCENTERCODE    :=  WSAdvValue( oResponse,"_COSTCENTERCODE","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cCOSTCENTERDESCRIPTION :=  WSAdvValue( oResponse,"_COSTCENTERDESCRIPTION","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cDISAPPROVALMESSAGE :=  WSAdvValue( oResponse,"_DISAPPROVALMESSAGE","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cDISAPPROVALMESSAGEDESCRIPTION :=  WSAdvValue( oResponse,"_DISAPPROVALMESSAGEDESCRIPTION","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cFUNCTIONCODE      :=  WSAdvValue( oResponse,"_FUNCTIONCODE","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cFUNCTIONDESCRIPTION :=  WSAdvValue( oResponse,"_FUNCTIONDESCRIPTION","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::nNUMBERCLOSEDVACANCIES :=  WSAdvValue( oResponse,"_NUMBERCLOSEDVACANCIES","integer",NIL,NIL,NIL,"N",NIL,NIL) 
	::nNUMBERVACANCIES   :=  WSAdvValue( oResponse,"_NUMBERVACANCIES","integer",NIL,NIL,NIL,"N",NIL,NIL) 
	::dOPENINGDATE       :=  WSAdvValue( oResponse,"_OPENINGDATE","date",NIL,NIL,NIL,"D",NIL,NIL) 
	::cOPENPOSITIONDESCRIPTION :=  WSAdvValue( oResponse,"_OPENPOSITIONDESCRIPTION","string",NIL,"Property cOPENPOSITIONDESCRIPTION as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::cPETITIONER        :=  WSAdvValue( oResponse,"_PETITIONER","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::nPOINT             :=  WSAdvValue( oResponse,"_POINT","integer",NIL,NIL,NIL,"N",NIL,NIL) 
	::cPOSITIONCODE      :=  WSAdvValue( oResponse,"_POSITIONCODE","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cPOSITIONDESCRIPTION :=  WSAdvValue( oResponse,"_POSITIONDESCRIPTION","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cPOSITIONDETAILEDDESCRIPTION :=  WSAdvValue( oResponse,"_POSITIONDETAILEDDESCRIPTION","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cPROFILEDETAILEDDESCRIPTION :=  WSAdvValue( oResponse,"_PROFILEDETAILEDDESCRIPTION","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cREINSCRIPTION     :=  WSAdvValue( oResponse,"_REINSCRIPTION","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::nTERMVACANCY       :=  WSAdvValue( oResponse,"_TERMVACANCY","integer",NIL,NIL,NIL,"N",NIL,NIL) 
	::cTEST              :=  WSAdvValue( oResponse,"_TEST","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cTESTDESCRIPTION   :=  WSAdvValue( oResponse,"_TESTDESCRIPTION","string",NIL,NIL,NIL,"S",NIL,NIL) 
	oNode27 :=  WSAdvValue( oResponse,"_USERFIELDS","ARRAYOFUSERFIELD",NIL,NIL,NIL,"O",NIL,NIL) 
	If oNode27 != NIL
		::oWSUSERFIELDS := RHVACANCY_ARRAYOFUSERFIELD():New()
		::oWSUSERFIELDS:SoapRecv(oNode27)
	EndIf
	::cVACANCYCODE       :=  WSAdvValue( oResponse,"_VACANCYCODE","string",NIL,"Property cVACANCYCODE as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::cVACANCYDESCRIPTIONFIL :=  WSAdvValue( oResponse,"_VACANCYDESCRIPTIONFIL","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cVACANCYFIL        :=  WSAdvValue( oResponse,"_VACANCYFIL","string",NIL,NIL,NIL,"S",NIL,NIL) 
Return

// WSDL Data Structure ARRAYOFSTEPSAGENDACANDIDATE

WSSTRUCT RHVACANCY_ARRAYOFSTEPSAGENDACANDIDATE
	WSDATA   oWSSTEPSAGENDACANDIDATE   AS RHVACANCY_STEPSAGENDACANDIDATE OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT RHVACANCY_ARRAYOFSTEPSAGENDACANDIDATE
	::Init()
Return Self

WSMETHOD INIT WSCLIENT RHVACANCY_ARRAYOFSTEPSAGENDACANDIDATE
	::oWSSTEPSAGENDACANDIDATE := {} // Array Of  RHVACANCY_STEPSAGENDACANDIDATE():New()
Return

WSMETHOD CLONE WSCLIENT RHVACANCY_ARRAYOFSTEPSAGENDACANDIDATE
	Local oClone := RHVACANCY_ARRAYOFSTEPSAGENDACANDIDATE():NEW()
	oClone:oWSSTEPSAGENDACANDIDATE := NIL
	If ::oWSSTEPSAGENDACANDIDATE <> NIL 
		oClone:oWSSTEPSAGENDACANDIDATE := {}
		aEval( ::oWSSTEPSAGENDACANDIDATE , { |x| aadd( oClone:oWSSTEPSAGENDACANDIDATE , x:Clone() ) } )
	Endif 
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT RHVACANCY_ARRAYOFSTEPSAGENDACANDIDATE
	Local nRElem1, oNodes1, nTElem1
	::Init()
	If oResponse = NIL ; Return ; Endif 
	oNodes1 :=  WSAdvValue( oResponse,"_STEPSAGENDACANDIDATE","STEPSAGENDACANDIDATE",{},NIL,.T.,"O",NIL,NIL) 
	nTElem1 := len(oNodes1)
	For nRElem1 := 1 to nTElem1 
		If !WSIsNilNode( oNodes1[nRElem1] )
			aadd(::oWSSTEPSAGENDACANDIDATE , RHVACANCY_STEPSAGENDACANDIDATE():New() )
			::oWSSTEPSAGENDACANDIDATE[len(::oWSSTEPSAGENDACANDIDATE)]:SoapRecv(oNodes1[nRElem1])
		Endif
	Next
Return

// WSDL Data Structure ARRAYOFCERTIFICATION

WSSTRUCT RHVACANCY_ARRAYOFCERTIFICATION
	WSDATA   oWSCERTIFICATION          AS RHVACANCY_CERTIFICATION OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT RHVACANCY_ARRAYOFCERTIFICATION
	::Init()
Return Self

WSMETHOD INIT WSCLIENT RHVACANCY_ARRAYOFCERTIFICATION
	::oWSCERTIFICATION     := {} // Array Of  RHVACANCY_CERTIFICATION():New()
Return

WSMETHOD CLONE WSCLIENT RHVACANCY_ARRAYOFCERTIFICATION
	Local oClone := RHVACANCY_ARRAYOFCERTIFICATION():NEW()
	oClone:oWSCERTIFICATION := NIL
	If ::oWSCERTIFICATION <> NIL 
		oClone:oWSCERTIFICATION := {}
		aEval( ::oWSCERTIFICATION , { |x| aadd( oClone:oWSCERTIFICATION , x:Clone() ) } )
	Endif 
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT RHVACANCY_ARRAYOFCERTIFICATION
	Local nRElem1, oNodes1, nTElem1
	::Init()
	If oResponse = NIL ; Return ; Endif 
	oNodes1 :=  WSAdvValue( oResponse,"_CERTIFICATION","CERTIFICATION",{},NIL,.T.,"O",NIL,NIL) 
	nTElem1 := len(oNodes1)
	For nRElem1 := 1 to nTElem1 
		If !WSIsNilNode( oNodes1[nRElem1] )
			aadd(::oWSCERTIFICATION , RHVACANCY_CERTIFICATION():New() )
			::oWSCERTIFICATION[len(::oWSCERTIFICATION)]:SoapRecv(oNodes1[nRElem1])
		Endif
	Next
Return

// WSDL Data Structure ARRAYOFCHARACTERS

WSSTRUCT RHVACANCY_ARRAYOFCHARACTERS
	WSDATA   oWSCHARACTERS             AS RHVACANCY_CHARACTERS OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT RHVACANCY_ARRAYOFCHARACTERS
	::Init()
Return Self

WSMETHOD INIT WSCLIENT RHVACANCY_ARRAYOFCHARACTERS
	::oWSCHARACTERS        := {} // Array Of  RHVACANCY_CHARACTERS():New()
Return

WSMETHOD CLONE WSCLIENT RHVACANCY_ARRAYOFCHARACTERS
	Local oClone := RHVACANCY_ARRAYOFCHARACTERS():NEW()
	oClone:oWSCHARACTERS := NIL
	If ::oWSCHARACTERS <> NIL 
		oClone:oWSCHARACTERS := {}
		aEval( ::oWSCHARACTERS , { |x| aadd( oClone:oWSCHARACTERS , x:Clone() ) } )
	Endif 
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT RHVACANCY_ARRAYOFCHARACTERS
	Local nRElem1, oNodes1, nTElem1
	::Init()
	If oResponse = NIL ; Return ; Endif 
	oNodes1 :=  WSAdvValue( oResponse,"_CHARACTERS","CHARACTERS",{},NIL,.T.,"SC",NIL,NIL) 
	nTElem1 := len(oNodes1)
	For nRElem1 := 1 to nTElem1 
		If !WSIsNilNode( oNodes1[nRElem1] )
			aadd(::oWSCHARACTERS , RHVACANCY_CHARACTERS():New() )
			::oWSCHARACTERS[len(::oWSCHARACTERS)]:SoapRecv(oNodes1[nRElem1])
		Endif
	Next
Return

// WSDL Data Structure ARRAYOFCOURSES

WSSTRUCT RHVACANCY_ARRAYOFCOURSES
	WSDATA   oWSCOURSES                AS RHVACANCY_COURSES OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT RHVACANCY_ARRAYOFCOURSES
	::Init()
Return Self

WSMETHOD INIT WSCLIENT RHVACANCY_ARRAYOFCOURSES
	::oWSCOURSES           := {} // Array Of  RHVACANCY_COURSES():New()
Return

WSMETHOD CLONE WSCLIENT RHVACANCY_ARRAYOFCOURSES
	Local oClone := RHVACANCY_ARRAYOFCOURSES():NEW()
	oClone:oWSCOURSES := NIL
	If ::oWSCOURSES <> NIL 
		oClone:oWSCOURSES := {}
		aEval( ::oWSCOURSES , { |x| aadd( oClone:oWSCOURSES , x:Clone() ) } )
	Endif 
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT RHVACANCY_ARRAYOFCOURSES
	Local nRElem1, oNodes1, nTElem1
	::Init()
	If oResponse = NIL ; Return ; Endif 
	oNodes1 :=  WSAdvValue( oResponse,"_COURSES","COURSES",{},NIL,.T.,"O",NIL,NIL) 
	nTElem1 := len(oNodes1)
	For nRElem1 := 1 to nTElem1 
		If !WSIsNilNode( oNodes1[nRElem1] )
			aadd(::oWSCOURSES , RHVACANCY_COURSES():New() )
			::oWSCOURSES[len(::oWSCOURSES)]:SoapRecv(oNodes1[nRElem1])
		Endif
	Next
Return

// WSDL Data Structure ARRAYOFEVALUATION

WSSTRUCT RHVACANCY_ARRAYOFEVALUATION
	WSDATA   oWSEVALUATION             AS RHVACANCY_EVALUATION OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT RHVACANCY_ARRAYOFEVALUATION
	::Init()
Return Self

WSMETHOD INIT WSCLIENT RHVACANCY_ARRAYOFEVALUATION
	::oWSEVALUATION        := {} // Array Of  RHVACANCY_EVALUATION():New()
Return

WSMETHOD CLONE WSCLIENT RHVACANCY_ARRAYOFEVALUATION
	Local oClone := RHVACANCY_ARRAYOFEVALUATION():NEW()
	oClone:oWSEVALUATION := NIL
	If ::oWSEVALUATION <> NIL 
		oClone:oWSEVALUATION := {}
		aEval( ::oWSEVALUATION , { |x| aadd( oClone:oWSEVALUATION , x:Clone() ) } )
	Endif 
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT RHVACANCY_ARRAYOFEVALUATION
	Local nRElem1, oNodes1, nTElem1
	::Init()
	If oResponse = NIL ; Return ; Endif 
	oNodes1 :=  WSAdvValue( oResponse,"_EVALUATION","EVALUATION",{},NIL,.T.,"O",NIL,NIL) 
	nTElem1 := len(oNodes1)
	For nRElem1 := 1 to nTElem1 
		If !WSIsNilNode( oNodes1[nRElem1] )
			aadd(::oWSEVALUATION , RHVACANCY_EVALUATION():New() )
			::oWSEVALUATION[len(::oWSEVALUATION)]:SoapRecv(oNodes1[nRElem1])
		Endif
	Next
Return

// WSDL Data Structure ARRAYOFGRADUATION

WSSTRUCT RHVACANCY_ARRAYOFGRADUATION
	WSDATA   oWSGRADUATION             AS RHVACANCY_GRADUATION OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT RHVACANCY_ARRAYOFGRADUATION
	::Init()
Return Self

WSMETHOD INIT WSCLIENT RHVACANCY_ARRAYOFGRADUATION
	::oWSGRADUATION        := {} // Array Of  RHVACANCY_GRADUATION():New()
Return

WSMETHOD CLONE WSCLIENT RHVACANCY_ARRAYOFGRADUATION
	Local oClone := RHVACANCY_ARRAYOFGRADUATION():NEW()
	oClone:oWSGRADUATION := NIL
	If ::oWSGRADUATION <> NIL 
		oClone:oWSGRADUATION := {}
		aEval( ::oWSGRADUATION , { |x| aadd( oClone:oWSGRADUATION , x:Clone() ) } )
	Endif 
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT RHVACANCY_ARRAYOFGRADUATION
	Local nRElem1, oNodes1, nTElem1
	::Init()
	If oResponse = NIL ; Return ; Endif 
	oNodes1 :=  WSAdvValue( oResponse,"_GRADUATION","GRADUATION",{},NIL,.T.,"O",NIL,NIL) 
	nTElem1 := len(oNodes1)
	For nRElem1 := 1 to nTElem1 
		If !WSIsNilNode( oNodes1[nRElem1] )
			aadd(::oWSGRADUATION , RHVACANCY_GRADUATION():New() )
			::oWSGRADUATION[len(::oWSGRADUATION)]:SoapRecv(oNodes1[nRElem1])
		Endif
	Next
Return

// WSDL Data Structure ARRAYOFHISTORY

WSSTRUCT RHVACANCY_ARRAYOFHISTORY
	WSDATA   oWSHISTORY                AS RHVACANCY_HISTORY OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT RHVACANCY_ARRAYOFHISTORY
	::Init()
Return Self

WSMETHOD INIT WSCLIENT RHVACANCY_ARRAYOFHISTORY
	::oWSHISTORY           := {} // Array Of  RHVACANCY_HISTORY():New()
Return

WSMETHOD CLONE WSCLIENT RHVACANCY_ARRAYOFHISTORY
	Local oClone := RHVACANCY_ARRAYOFHISTORY():NEW()
	oClone:oWSHISTORY := NIL
	If ::oWSHISTORY <> NIL 
		oClone:oWSHISTORY := {}
		aEval( ::oWSHISTORY , { |x| aadd( oClone:oWSHISTORY , x:Clone() ) } )
	Endif 
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT RHVACANCY_ARRAYOFHISTORY
	Local nRElem1, oNodes1, nTElem1
	::Init()
	If oResponse = NIL ; Return ; Endif 
	oNodes1 :=  WSAdvValue( oResponse,"_HISTORY","HISTORY",{},NIL,.T.,"O",NIL,NIL) 
	nTElem1 := len(oNodes1)
	For nRElem1 := 1 to nTElem1 
		If !WSIsNilNode( oNodes1[nRElem1] )
			aadd(::oWSHISTORY , RHVACANCY_HISTORY():New() )
			::oWSHISTORY[len(::oWSHISTORY)]:SoapRecv(oNodes1[nRElem1])
		Endif
	Next
Return

// WSDL Data Structure ARRAYOFLANGUAGES

WSSTRUCT RHVACANCY_ARRAYOFLANGUAGES
	WSDATA   oWSLANGUAGES              AS RHVACANCY_LANGUAGES OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT RHVACANCY_ARRAYOFLANGUAGES
	::Init()
Return Self

WSMETHOD INIT WSCLIENT RHVACANCY_ARRAYOFLANGUAGES
	::oWSLANGUAGES         := {} // Array Of  RHVACANCY_LANGUAGES():New()
Return

WSMETHOD CLONE WSCLIENT RHVACANCY_ARRAYOFLANGUAGES
	Local oClone := RHVACANCY_ARRAYOFLANGUAGES():NEW()
	oClone:oWSLANGUAGES := NIL
	If ::oWSLANGUAGES <> NIL 
		oClone:oWSLANGUAGES := {}
		aEval( ::oWSLANGUAGES , { |x| aadd( oClone:oWSLANGUAGES , x:Clone() ) } )
	Endif 
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT RHVACANCY_ARRAYOFLANGUAGES
	Local nRElem1, oNodes1, nTElem1
	::Init()
	If oResponse = NIL ; Return ; Endif 
	oNodes1 :=  WSAdvValue( oResponse,"_LANGUAGES","LANGUAGES",{},NIL,.T.,"O",NIL,NIL) 
	nTElem1 := len(oNodes1)
	For nRElem1 := 1 to nTElem1 
		If !WSIsNilNode( oNodes1[nRElem1] )
			aadd(::oWSLANGUAGES , RHVACANCY_LANGUAGES():New() )
			::oWSLANGUAGES[len(::oWSLANGUAGES)]:SoapRecv(oNodes1[nRElem1])
		Endif
	Next
Return

// WSDL Data Structure ARRAYOFQUALIFICATION

WSSTRUCT RHVACANCY_ARRAYOFQUALIFICATION
	WSDATA   oWSQUALIFICATION          AS RHVACANCY_QUALIFICATION OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT RHVACANCY_ARRAYOFQUALIFICATION
	::Init()
Return Self

WSMETHOD INIT WSCLIENT RHVACANCY_ARRAYOFQUALIFICATION
	::oWSQUALIFICATION     := {} // Array Of  RHVACANCY_QUALIFICATION():New()
Return

WSMETHOD CLONE WSCLIENT RHVACANCY_ARRAYOFQUALIFICATION
	Local oClone := RHVACANCY_ARRAYOFQUALIFICATION():NEW()
	oClone:oWSQUALIFICATION := NIL
	If ::oWSQUALIFICATION <> NIL 
		oClone:oWSQUALIFICATION := {}
		aEval( ::oWSQUALIFICATION , { |x| aadd( oClone:oWSQUALIFICATION , x:Clone() ) } )
	Endif 
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT RHVACANCY_ARRAYOFQUALIFICATION
	Local nRElem1, oNodes1, nTElem1
	::Init()
	If oResponse = NIL ; Return ; Endif 
	oNodes1 :=  WSAdvValue( oResponse,"_QUALIFICATION","QUALIFICATION",{},NIL,.T.,"O",NIL,NIL) 
	nTElem1 := len(oNodes1)
	For nRElem1 := 1 to nTElem1 
		If !WSIsNilNode( oNodes1[nRElem1] )
			aadd(::oWSQUALIFICATION , RHVACANCY_QUALIFICATION():New() )
			::oWSQUALIFICATION[len(::oWSQUALIFICATION)]:SoapRecv(oNodes1[nRElem1])
		Endif
	Next
Return

// WSDL Data Structure ARRAYOFUSERFIELD

WSSTRUCT RHVACANCY_ARRAYOFUSERFIELD
	WSDATA   oWSUSERFIELD              AS RHVACANCY_USERFIELD OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT RHVACANCY_ARRAYOFUSERFIELD
	::Init()
Return Self

WSMETHOD INIT WSCLIENT RHVACANCY_ARRAYOFUSERFIELD
	::oWSUSERFIELD         := {} // Array Of  RHVACANCY_USERFIELD():New()
Return

WSMETHOD CLONE WSCLIENT RHVACANCY_ARRAYOFUSERFIELD
	Local oClone := RHVACANCY_ARRAYOFUSERFIELD():NEW()
	oClone:oWSUSERFIELD := NIL
	If ::oWSUSERFIELD <> NIL 
		oClone:oWSUSERFIELD := {}
		aEval( ::oWSUSERFIELD , { |x| aadd( oClone:oWSUSERFIELD , x:Clone() ) } )
	Endif 
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT RHVACANCY_ARRAYOFUSERFIELD
	Local nRElem1, oNodes1, nTElem1
	::Init()
	If oResponse = NIL ; Return ; Endif 
	oNodes1 :=  WSAdvValue( oResponse,"_USERFIELD","USERFIELD",{},NIL,.T.,"O",NIL,NIL) 
	nTElem1 := len(oNodes1)
	For nRElem1 := 1 to nTElem1 
		If !WSIsNilNode( oNodes1[nRElem1] )
			aadd(::oWSUSERFIELD , RHVACANCY_USERFIELD():New() )
			::oWSUSERFIELD[len(::oWSUSERFIELD)]:SoapRecv(oNodes1[nRElem1])
		Endif
	Next
Return

// WSDL Data Structure ARRAYOFOPTIONSELECT

WSSTRUCT RHVACANCY_ARRAYOFOPTIONSELECT
	WSDATA   oWSOPTIONSELECT           AS RHVACANCY_OPTIONSELECT OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT RHVACANCY_ARRAYOFOPTIONSELECT
	::Init()
Return Self

WSMETHOD INIT WSCLIENT RHVACANCY_ARRAYOFOPTIONSELECT
	::oWSOPTIONSELECT      := {} // Array Of  RHVACANCY_OPTIONSELECT():New()
Return

WSMETHOD CLONE WSCLIENT RHVACANCY_ARRAYOFOPTIONSELECT
	Local oClone := RHVACANCY_ARRAYOFOPTIONSELECT():NEW()
	oClone:oWSOPTIONSELECT := NIL
	If ::oWSOPTIONSELECT <> NIL 
		oClone:oWSOPTIONSELECT := {}
		aEval( ::oWSOPTIONSELECT , { |x| aadd( oClone:oWSOPTIONSELECT , x:Clone() ) } )
	Endif 
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT RHVACANCY_ARRAYOFOPTIONSELECT
	Local nRElem1, oNodes1, nTElem1
	::Init()
	If oResponse = NIL ; Return ; Endif 
	oNodes1 :=  WSAdvValue( oResponse,"_OPTIONSELECT","OPTIONSELECT",{},NIL,.T.,"O",NIL,NIL) 
	nTElem1 := len(oNodes1)
	For nRElem1 := 1 to nTElem1 
		If !WSIsNilNode( oNodes1[nRElem1] )
			aadd(::oWSOPTIONSELECT , RHVACANCY_OPTIONSELECT():New() )
			::oWSOPTIONSELECT[len(::oWSOPTIONSELECT)]:SoapRecv(oNodes1[nRElem1])
		Endif
	Next
Return

// WSDL Data Structure STEPSAGENDACANDIDATE

WSSTRUCT RHVACANCY_STEPSAGENDACANDIDATE
	WSDATA   cCODEEVALUATIONFINAL      AS string OPTIONAL
	WSDATA   cCODESTEP                 AS string OPTIONAL
	WSDATA   cCODETEST                 AS string OPTIONAL
	WSDATA   cDATE                     AS string OPTIONAL
	WSDATA   cDESCCODETEST             AS string OPTIONAL
	WSDATA   cDESCEVALUATIONFINAL      AS string OPTIONAL
	WSDATA   cDESCSTEP                 AS string OPTIONAL
	WSDATA   cEMPLOYEEREGISTRATION     AS string OPTIONAL
	WSDATA   cEVALUATIONFINAL          AS string OPTIONAL
	WSDATA   cEVALUATIONOK             AS string OPTIONAL
	WSDATA   cNAMEEMPLOYEEREGISTRATION AS string OPTIONAL
	WSDATA   cOBSERVATIONCANDIDATE     AS string OPTIONAL
	WSDATA   cOBSERVATIONEVALUATOR     AS string OPTIONAL
	WSDATA   cSTEPSITUATION            AS string OPTIONAL
	WSDATA   cTIME                     AS string OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPSEND
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT RHVACANCY_STEPSAGENDACANDIDATE
	::Init()
Return Self

WSMETHOD INIT WSCLIENT RHVACANCY_STEPSAGENDACANDIDATE
Return

WSMETHOD CLONE WSCLIENT RHVACANCY_STEPSAGENDACANDIDATE
	Local oClone := RHVACANCY_STEPSAGENDACANDIDATE():NEW()
	oClone:cCODEEVALUATIONFINAL := ::cCODEEVALUATIONFINAL
	oClone:cCODESTEP            := ::cCODESTEP
	oClone:cCODETEST            := ::cCODETEST
	oClone:cDATE                := ::cDATE
	oClone:cDESCCODETEST        := ::cDESCCODETEST
	oClone:cDESCEVALUATIONFINAL := ::cDESCEVALUATIONFINAL
	oClone:cDESCSTEP            := ::cDESCSTEP
	oClone:cEMPLOYEEREGISTRATION := ::cEMPLOYEEREGISTRATION
	oClone:cEVALUATIONFINAL     := ::cEVALUATIONFINAL
	oClone:cEVALUATIONOK        := ::cEVALUATIONOK
	oClone:cNAMEEMPLOYEEREGISTRATION := ::cNAMEEMPLOYEEREGISTRATION
	oClone:cOBSERVATIONCANDIDATE := ::cOBSERVATIONCANDIDATE
	oClone:cOBSERVATIONEVALUATOR := ::cOBSERVATIONEVALUATOR
	oClone:cSTEPSITUATION       := ::cSTEPSITUATION
	oClone:cTIME                := ::cTIME
Return oClone

WSMETHOD SOAPSEND WSCLIENT RHVACANCY_STEPSAGENDACANDIDATE
	Local cSoap := ""
	cSoap += WSSoapValue("CODEEVALUATIONFINAL", ::cCODEEVALUATIONFINAL, ::cCODEEVALUATIONFINAL , "string", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("CODESTEP", ::cCODESTEP, ::cCODESTEP , "string", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("CODETEST", ::cCODETEST, ::cCODETEST , "string", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("DATE", ::cDATE, ::cDATE , "string", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("DESCCODETEST", ::cDESCCODETEST, ::cDESCCODETEST , "string", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("DESCEVALUATIONFINAL", ::cDESCEVALUATIONFINAL, ::cDESCEVALUATIONFINAL , "string", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("DESCSTEP", ::cDESCSTEP, ::cDESCSTEP , "string", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("EMPLOYEEREGISTRATION", ::cEMPLOYEEREGISTRATION, ::cEMPLOYEEREGISTRATION , "string", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("EVALUATIONFINAL", ::cEVALUATIONFINAL, ::cEVALUATIONFINAL , "string", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("EVALUATIONOK", ::cEVALUATIONOK, ::cEVALUATIONOK , "string", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("NAMEEMPLOYEEREGISTRATION", ::cNAMEEMPLOYEEREGISTRATION, ::cNAMEEMPLOYEEREGISTRATION , "string", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("OBSERVATIONCANDIDATE", ::cOBSERVATIONCANDIDATE, ::cOBSERVATIONCANDIDATE , "string", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("OBSERVATIONEVALUATOR", ::cOBSERVATIONEVALUATOR, ::cOBSERVATIONEVALUATOR , "string", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("STEPSITUATION", ::cSTEPSITUATION, ::cSTEPSITUATION , "string", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("TIME", ::cTIME, ::cTIME , "string", .F. , .F., 0 , NIL, .F.,.F.) 
Return cSoap

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT RHVACANCY_STEPSAGENDACANDIDATE
	::Init()
	If oResponse = NIL ; Return ; Endif 
	::cCODEEVALUATIONFINAL :=  WSAdvValue( oResponse,"_CODEEVALUATIONFINAL","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cCODESTEP          :=  WSAdvValue( oResponse,"_CODESTEP","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cCODETEST          :=  WSAdvValue( oResponse,"_CODETEST","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cDATE              :=  WSAdvValue( oResponse,"_DATE","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cDESCCODETEST      :=  WSAdvValue( oResponse,"_DESCCODETEST","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cDESCEVALUATIONFINAL :=  WSAdvValue( oResponse,"_DESCEVALUATIONFINAL","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cDESCSTEP          :=  WSAdvValue( oResponse,"_DESCSTEP","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cEMPLOYEEREGISTRATION :=  WSAdvValue( oResponse,"_EMPLOYEEREGISTRATION","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cEVALUATIONFINAL   :=  WSAdvValue( oResponse,"_EVALUATIONFINAL","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cEVALUATIONOK      :=  WSAdvValue( oResponse,"_EVALUATIONOK","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cNAMEEMPLOYEEREGISTRATION :=  WSAdvValue( oResponse,"_NAMEEMPLOYEEREGISTRATION","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cOBSERVATIONCANDIDATE :=  WSAdvValue( oResponse,"_OBSERVATIONCANDIDATE","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cOBSERVATIONEVALUATOR :=  WSAdvValue( oResponse,"_OBSERVATIONEVALUATOR","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cSTEPSITUATION     :=  WSAdvValue( oResponse,"_STEPSITUATION","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cTIME              :=  WSAdvValue( oResponse,"_TIME","string",NIL,NIL,NIL,"S",NIL,NIL) 
Return

// WSDL Data Structure CERTIFICATION

WSSTRUCT RHVACANCY_CERTIFICATION
	WSDATA   cCOURSECODE               AS string OPTIONAL
	WSDATA   cCOURSEDESC               AS string OPTIONAL
	WSDATA   cEDUCATION                AS string OPTIONAL
	WSDATA   cEMPLOYCOURSE             AS string OPTIONAL
	WSDATA   cEMPLOYDESCCOURSE         AS string OPTIONAL
	WSDATA   cEMPLOYDESCENTITY         AS string OPTIONAL
	WSDATA   cEMPLOYENTITY             AS string OPTIONAL
	WSDATA   cENTITYCODE               AS string OPTIONAL
	WSDATA   cENTITYDESC               AS string OPTIONAL
	WSDATA   dGRADUATIONDATE           AS date OPTIONAL
	WSDATA   cTYPE                     AS string OPTIONAL
	WSDATA   oWSUSERFIELDS             AS RHVACANCY_ARRAYOFUSERFIELD OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT RHVACANCY_CERTIFICATION
	::Init()
Return Self

WSMETHOD INIT WSCLIENT RHVACANCY_CERTIFICATION
Return

WSMETHOD CLONE WSCLIENT RHVACANCY_CERTIFICATION
	Local oClone := RHVACANCY_CERTIFICATION():NEW()
	oClone:cCOURSECODE          := ::cCOURSECODE
	oClone:cCOURSEDESC          := ::cCOURSEDESC
	oClone:cEDUCATION           := ::cEDUCATION
	oClone:cEMPLOYCOURSE        := ::cEMPLOYCOURSE
	oClone:cEMPLOYDESCCOURSE    := ::cEMPLOYDESCCOURSE
	oClone:cEMPLOYDESCENTITY    := ::cEMPLOYDESCENTITY
	oClone:cEMPLOYENTITY        := ::cEMPLOYENTITY
	oClone:cENTITYCODE          := ::cENTITYCODE
	oClone:cENTITYDESC          := ::cENTITYDESC
	oClone:dGRADUATIONDATE      := ::dGRADUATIONDATE
	oClone:cTYPE                := ::cTYPE
	oClone:oWSUSERFIELDS        := IIF(::oWSUSERFIELDS = NIL , NIL , ::oWSUSERFIELDS:Clone() )
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT RHVACANCY_CERTIFICATION
	Local oNode12
	::Init()
	If oResponse = NIL ; Return ; Endif 
	::cCOURSECODE        :=  WSAdvValue( oResponse,"_COURSECODE","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cCOURSEDESC        :=  WSAdvValue( oResponse,"_COURSEDESC","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cEDUCATION         :=  WSAdvValue( oResponse,"_EDUCATION","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cEMPLOYCOURSE      :=  WSAdvValue( oResponse,"_EMPLOYCOURSE","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cEMPLOYDESCCOURSE  :=  WSAdvValue( oResponse,"_EMPLOYDESCCOURSE","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cEMPLOYDESCENTITY  :=  WSAdvValue( oResponse,"_EMPLOYDESCENTITY","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cEMPLOYENTITY      :=  WSAdvValue( oResponse,"_EMPLOYENTITY","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cENTITYCODE        :=  WSAdvValue( oResponse,"_ENTITYCODE","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cENTITYDESC        :=  WSAdvValue( oResponse,"_ENTITYDESC","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::dGRADUATIONDATE    :=  WSAdvValue( oResponse,"_GRADUATIONDATE","date",NIL,NIL,NIL,"D",NIL,NIL) 
	::cTYPE              :=  WSAdvValue( oResponse,"_TYPE","string",NIL,NIL,NIL,"S",NIL,NIL) 
	oNode12 :=  WSAdvValue( oResponse,"_USERFIELDS","ARRAYOFUSERFIELD",NIL,NIL,NIL,"O",NIL,NIL) 
	If oNode12 != NIL
		::oWSUSERFIELDS := RHVACANCY_ARRAYOFUSERFIELD():New()
		::oWSUSERFIELDS:SoapRecv(oNode12)
	EndIf
Return

// WSDL Data Structure CHARACTERS

WSSTRUCT RHVACANCY_CHARACTERS
	WSDATA   cANSWER                   AS string OPTIONAL
	WSDATA   cCHOICE                   AS string OPTIONAL
	WSDATA   cCODE                     AS string OPTIONAL
	WSDATA   oWSLISTOFCHAROPTIONS      AS RHVACANCY_ARRAYOFCHAROPTIONS OPTIONAL
	WSDATA   cQUESTION                 AS string OPTIONAL
	WSDATA   cTYPE                     AS string OPTIONAL
	WSDATA   oWSUSERFIELDS             AS RHVACANCY_ARRAYOFUSERFIELD OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT RHVACANCY_CHARACTERS
	::Init()
Return Self

WSMETHOD INIT WSCLIENT RHVACANCY_CHARACTERS
Return

WSMETHOD CLONE WSCLIENT RHVACANCY_CHARACTERS
	Local oClone := RHVACANCY_CHARACTERS():NEW()
	oClone:cANSWER              := ::cANSWER
	oClone:cCHOICE              := ::cCHOICE
	oClone:cCODE                := ::cCODE
	oClone:oWSLISTOFCHAROPTIONS := IIF(::oWSLISTOFCHAROPTIONS = NIL , NIL , ::oWSLISTOFCHAROPTIONS:Clone() )
	oClone:cQUESTION            := ::cQUESTION
	oClone:cTYPE                := ::cTYPE
	oClone:oWSUSERFIELDS        := IIF(::oWSUSERFIELDS = NIL , NIL , ::oWSUSERFIELDS:Clone() )
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT RHVACANCY_CHARACTERS
	Local oNode4
	Local oNode7
	::Init()
	If oResponse = NIL ; Return ; Endif 
	::cANSWER            :=  WSAdvValue( oResponse,"_ANSWER","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cCHOICE            :=  WSAdvValue( oResponse,"_CHOICE","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cCODE              :=  WSAdvValue( oResponse,"_CODE","string",NIL,NIL,NIL,"S",NIL,NIL) 
	oNode4 :=  WSAdvValue( oResponse,"_LISTOFCHAROPTIONS","ARRAYOFCHAROPTIONS",NIL,NIL,NIL,"O",NIL,NIL) 
	If oNode4 != NIL
		::oWSLISTOFCHAROPTIONS := RHVACANCY_ARRAYOFCHAROPTIONS():New()
		::oWSLISTOFCHAROPTIONS:SoapRecv(oNode4)
	EndIf
	::cQUESTION          :=  WSAdvValue( oResponse,"_QUESTION","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cTYPE              :=  WSAdvValue( oResponse,"_TYPE","string",NIL,NIL,NIL,"S",NIL,NIL) 
	oNode7 :=  WSAdvValue( oResponse,"_USERFIELDS","ARRAYOFUSERFIELD",NIL,NIL,NIL,"O",NIL,NIL) 
	If oNode7 != NIL
		::oWSUSERFIELDS := RHVACANCY_ARRAYOFUSERFIELD():New()
		::oWSUSERFIELDS:SoapRecv(oNode7)
	EndIf
Return

// WSDL Data Structure COURSES

WSSTRUCT RHVACANCY_COURSES
	WSDATA   cCOURSECODE               AS string OPTIONAL
	WSDATA   cCOURSEDESC               AS string OPTIONAL
	WSDATA   cEDUCATION                AS string OPTIONAL
	WSDATA   cEMPLOYCOURSE             AS string OPTIONAL
	WSDATA   cEMPLOYDESCCOURSE         AS string OPTIONAL
	WSDATA   cEMPLOYDESCENTITY         AS string OPTIONAL
	WSDATA   cEMPLOYENTITY             AS string OPTIONAL
	WSDATA   cENTITYCODE               AS string OPTIONAL
	WSDATA   cENTITYDESC               AS string OPTIONAL
	WSDATA   dGRADUATIONDATE           AS date OPTIONAL
	WSDATA   cTYPE                     AS string OPTIONAL
	WSDATA   oWSUSERFIELDS             AS RHVACANCY_ARRAYOFUSERFIELD OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT RHVACANCY_COURSES
	::Init()
Return Self

WSMETHOD INIT WSCLIENT RHVACANCY_COURSES
Return

WSMETHOD CLONE WSCLIENT RHVACANCY_COURSES
	Local oClone := RHVACANCY_COURSES():NEW()
	oClone:cCOURSECODE          := ::cCOURSECODE
	oClone:cCOURSEDESC          := ::cCOURSEDESC
	oClone:cEDUCATION           := ::cEDUCATION
	oClone:cEMPLOYCOURSE        := ::cEMPLOYCOURSE
	oClone:cEMPLOYDESCCOURSE    := ::cEMPLOYDESCCOURSE
	oClone:cEMPLOYDESCENTITY    := ::cEMPLOYDESCENTITY
	oClone:cEMPLOYENTITY        := ::cEMPLOYENTITY
	oClone:cENTITYCODE          := ::cENTITYCODE
	oClone:cENTITYDESC          := ::cENTITYDESC
	oClone:dGRADUATIONDATE      := ::dGRADUATIONDATE
	oClone:cTYPE                := ::cTYPE
	oClone:oWSUSERFIELDS        := IIF(::oWSUSERFIELDS = NIL , NIL , ::oWSUSERFIELDS:Clone() )
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT RHVACANCY_COURSES
	Local oNode12
	::Init()
	If oResponse = NIL ; Return ; Endif 
	::cCOURSECODE        :=  WSAdvValue( oResponse,"_COURSECODE","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cCOURSEDESC        :=  WSAdvValue( oResponse,"_COURSEDESC","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cEDUCATION         :=  WSAdvValue( oResponse,"_EDUCATION","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cEMPLOYCOURSE      :=  WSAdvValue( oResponse,"_EMPLOYCOURSE","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cEMPLOYDESCCOURSE  :=  WSAdvValue( oResponse,"_EMPLOYDESCCOURSE","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cEMPLOYDESCENTITY  :=  WSAdvValue( oResponse,"_EMPLOYDESCENTITY","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cEMPLOYENTITY      :=  WSAdvValue( oResponse,"_EMPLOYENTITY","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cENTITYCODE        :=  WSAdvValue( oResponse,"_ENTITYCODE","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cENTITYDESC        :=  WSAdvValue( oResponse,"_ENTITYDESC","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::dGRADUATIONDATE    :=  WSAdvValue( oResponse,"_GRADUATIONDATE","date",NIL,NIL,NIL,"D",NIL,NIL) 
	::cTYPE              :=  WSAdvValue( oResponse,"_TYPE","string",NIL,NIL,NIL,"S",NIL,NIL) 
	oNode12 :=  WSAdvValue( oResponse,"_USERFIELDS","ARRAYOFUSERFIELD",NIL,NIL,NIL,"O",NIL,NIL) 
	If oNode12 != NIL
		::oWSUSERFIELDS := RHVACANCY_ARRAYOFUSERFIELD():New()
		::oWSUSERFIELDS:SoapRecv(oNode12)
	EndIf
Return

// WSDL Data Structure EVALUATION

WSSTRUCT RHVACANCY_EVALUATION
	WSDATA   nADJUSTMENT               AS float OPTIONAL
	WSDATA   cALTERNATIVE              AS string OPTIONAL
	WSDATA   cDESCALTERNATIVE          AS string OPTIONAL
	WSDATA   cDESCANSWER               AS string OPTIONAL
	WSDATA   cDESCEVALUATION           AS string OPTIONAL
	WSDATA   cDESCQUESTION             AS string OPTIONAL
	WSDATA   cDESCSUBJECT              AS string OPTIONAL
	WSDATA   cDURATION                 AS string OPTIONAL
	WSDATA   cEVALUATION               AS string OPTIONAL
	WSDATA   cQUESTION                 AS string OPTIONAL
	WSDATA   cREGISTRATION             AS string OPTIONAL
	WSDATA   cSUBJECT                  AS string OPTIONAL
	WSDATA   oWSUSERFIELDS             AS RHVACANCY_ARRAYOFUSERFIELD OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT RHVACANCY_EVALUATION
	::Init()
Return Self

WSMETHOD INIT WSCLIENT RHVACANCY_EVALUATION
Return

WSMETHOD CLONE WSCLIENT RHVACANCY_EVALUATION
	Local oClone := RHVACANCY_EVALUATION():NEW()
	oClone:nADJUSTMENT          := ::nADJUSTMENT
	oClone:cALTERNATIVE         := ::cALTERNATIVE
	oClone:cDESCALTERNATIVE     := ::cDESCALTERNATIVE
	oClone:cDESCANSWER          := ::cDESCANSWER
	oClone:cDESCEVALUATION      := ::cDESCEVALUATION
	oClone:cDESCQUESTION        := ::cDESCQUESTION
	oClone:cDESCSUBJECT         := ::cDESCSUBJECT
	oClone:cDURATION            := ::cDURATION
	oClone:cEVALUATION          := ::cEVALUATION
	oClone:cQUESTION            := ::cQUESTION
	oClone:cREGISTRATION        := ::cREGISTRATION
	oClone:cSUBJECT             := ::cSUBJECT
	oClone:oWSUSERFIELDS        := IIF(::oWSUSERFIELDS = NIL , NIL , ::oWSUSERFIELDS:Clone() )
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT RHVACANCY_EVALUATION
	Local oNode13
	::Init()
	If oResponse = NIL ; Return ; Endif 
	::nADJUSTMENT        :=  WSAdvValue( oResponse,"_ADJUSTMENT","float",NIL,NIL,NIL,"N",NIL,NIL) 
	::cALTERNATIVE       :=  WSAdvValue( oResponse,"_ALTERNATIVE","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cDESCALTERNATIVE   :=  WSAdvValue( oResponse,"_DESCALTERNATIVE","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cDESCANSWER        :=  WSAdvValue( oResponse,"_DESCANSWER","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cDESCEVALUATION    :=  WSAdvValue( oResponse,"_DESCEVALUATION","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cDESCQUESTION      :=  WSAdvValue( oResponse,"_DESCQUESTION","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cDESCSUBJECT       :=  WSAdvValue( oResponse,"_DESCSUBJECT","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cDURATION          :=  WSAdvValue( oResponse,"_DURATION","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cEVALUATION        :=  WSAdvValue( oResponse,"_EVALUATION","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cQUESTION          :=  WSAdvValue( oResponse,"_QUESTION","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cREGISTRATION      :=  WSAdvValue( oResponse,"_REGISTRATION","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cSUBJECT           :=  WSAdvValue( oResponse,"_SUBJECT","string",NIL,NIL,NIL,"S",NIL,NIL) 
	oNode13 :=  WSAdvValue( oResponse,"_USERFIELDS","ARRAYOFUSERFIELD",NIL,NIL,NIL,"O",NIL,NIL) 
	If oNode13 != NIL
		::oWSUSERFIELDS := RHVACANCY_ARRAYOFUSERFIELD():New()
		::oWSUSERFIELDS:SoapRecv(oNode13)
	EndIf
Return

// WSDL Data Structure GRADUATION

WSSTRUCT RHVACANCY_GRADUATION
	WSDATA   cCOURSECODE               AS string OPTIONAL
	WSDATA   cCOURSEDESC               AS string OPTIONAL
	WSDATA   cEDUCATION                AS string OPTIONAL
	WSDATA   cEMPLOYCOURSE             AS string OPTIONAL
	WSDATA   cEMPLOYDESCCOURSE         AS string OPTIONAL
	WSDATA   cEMPLOYDESCENTITY         AS string OPTIONAL
	WSDATA   cEMPLOYENTITY             AS string OPTIONAL
	WSDATA   cENTITYCODE               AS string OPTIONAL
	WSDATA   cENTITYDESC               AS string OPTIONAL
	WSDATA   cGRADE                    AS string OPTIONAL
	WSDATA   dGRADUATIONDATE           AS date OPTIONAL
	WSDATA   cTYPE                     AS string OPTIONAL
	WSDATA   oWSUSERFIELDS             AS RHVACANCY_ARRAYOFUSERFIELD OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT RHVACANCY_GRADUATION
	::Init()
Return Self

WSMETHOD INIT WSCLIENT RHVACANCY_GRADUATION
Return

WSMETHOD CLONE WSCLIENT RHVACANCY_GRADUATION
	Local oClone := RHVACANCY_GRADUATION():NEW()
	oClone:cCOURSECODE          := ::cCOURSECODE
	oClone:cCOURSEDESC          := ::cCOURSEDESC
	oClone:cEDUCATION           := ::cEDUCATION
	oClone:cEMPLOYCOURSE        := ::cEMPLOYCOURSE
	oClone:cEMPLOYDESCCOURSE    := ::cEMPLOYDESCCOURSE
	oClone:cEMPLOYDESCENTITY    := ::cEMPLOYDESCENTITY
	oClone:cEMPLOYENTITY        := ::cEMPLOYENTITY
	oClone:cENTITYCODE          := ::cENTITYCODE
	oClone:cENTITYDESC          := ::cENTITYDESC
	oClone:cGRADE               := ::cGRADE
	oClone:dGRADUATIONDATE      := ::dGRADUATIONDATE
	oClone:cTYPE                := ::cTYPE
	oClone:oWSUSERFIELDS        := IIF(::oWSUSERFIELDS = NIL , NIL , ::oWSUSERFIELDS:Clone() )
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT RHVACANCY_GRADUATION
	Local oNode13
	::Init()
	If oResponse = NIL ; Return ; Endif 
	::cCOURSECODE        :=  WSAdvValue( oResponse,"_COURSECODE","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cCOURSEDESC        :=  WSAdvValue( oResponse,"_COURSEDESC","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cEDUCATION         :=  WSAdvValue( oResponse,"_EDUCATION","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cEMPLOYCOURSE      :=  WSAdvValue( oResponse,"_EMPLOYCOURSE","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cEMPLOYDESCCOURSE  :=  WSAdvValue( oResponse,"_EMPLOYDESCCOURSE","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cEMPLOYDESCENTITY  :=  WSAdvValue( oResponse,"_EMPLOYDESCENTITY","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cEMPLOYENTITY      :=  WSAdvValue( oResponse,"_EMPLOYENTITY","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cENTITYCODE        :=  WSAdvValue( oResponse,"_ENTITYCODE","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cENTITYDESC        :=  WSAdvValue( oResponse,"_ENTITYDESC","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cGRADE             :=  WSAdvValue( oResponse,"_GRADE","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::dGRADUATIONDATE    :=  WSAdvValue( oResponse,"_GRADUATIONDATE","date",NIL,NIL,NIL,"D",NIL,NIL) 
	::cTYPE              :=  WSAdvValue( oResponse,"_TYPE","string",NIL,NIL,NIL,"S",NIL,NIL) 
	oNode13 :=  WSAdvValue( oResponse,"_USERFIELDS","ARRAYOFUSERFIELD",NIL,NIL,NIL,"O",NIL,NIL) 
	If oNode13 != NIL
		::oWSUSERFIELDS := RHVACANCY_ARRAYOFUSERFIELD():New()
		::oWSUSERFIELDS:SoapRecv(oNode13)
	EndIf
Return

// WSDL Data Structure HISTORY

WSSTRUCT RHVACANCY_HISTORY
	WSDATA   cACTIVITY                 AS string OPTIONAL
	WSDATA   dADMISSIONDATE            AS date OPTIONAL
	WSDATA   cAREACODE                 AS string OPTIONAL
	WSDATA   cAREADESCRIPTION          AS string OPTIONAL
	WSDATA   cCOMPANY                  AS string OPTIONAL
	WSDATA   dDISMISSALDATE            AS date OPTIONAL
	WSDATA   cFUNCTIONCODE             AS string OPTIONAL
	WSDATA   oWSUSERFIELDS             AS RHVACANCY_ARRAYOFUSERFIELD OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT RHVACANCY_HISTORY
	::Init()
Return Self

WSMETHOD INIT WSCLIENT RHVACANCY_HISTORY
Return

WSMETHOD CLONE WSCLIENT RHVACANCY_HISTORY
	Local oClone := RHVACANCY_HISTORY():NEW()
	oClone:cACTIVITY            := ::cACTIVITY
	oClone:dADMISSIONDATE       := ::dADMISSIONDATE
	oClone:cAREACODE            := ::cAREACODE
	oClone:cAREADESCRIPTION     := ::cAREADESCRIPTION
	oClone:cCOMPANY             := ::cCOMPANY
	oClone:dDISMISSALDATE       := ::dDISMISSALDATE
	oClone:cFUNCTIONCODE        := ::cFUNCTIONCODE
	oClone:oWSUSERFIELDS        := IIF(::oWSUSERFIELDS = NIL , NIL , ::oWSUSERFIELDS:Clone() )
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT RHVACANCY_HISTORY
	Local oNode8
	::Init()
	If oResponse = NIL ; Return ; Endif 
	::cACTIVITY          :=  WSAdvValue( oResponse,"_ACTIVITY","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::dADMISSIONDATE     :=  WSAdvValue( oResponse,"_ADMISSIONDATE","date",NIL,NIL,NIL,"D",NIL,NIL) 
	::cAREACODE          :=  WSAdvValue( oResponse,"_AREACODE","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cAREADESCRIPTION   :=  WSAdvValue( oResponse,"_AREADESCRIPTION","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cCOMPANY           :=  WSAdvValue( oResponse,"_COMPANY","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::dDISMISSALDATE     :=  WSAdvValue( oResponse,"_DISMISSALDATE","date",NIL,NIL,NIL,"D",NIL,NIL) 
	::cFUNCTIONCODE      :=  WSAdvValue( oResponse,"_FUNCTIONCODE","string",NIL,NIL,NIL,"S",NIL,NIL) 
	oNode8 :=  WSAdvValue( oResponse,"_USERFIELDS","ARRAYOFUSERFIELD",NIL,NIL,NIL,"O",NIL,NIL) 
	If oNode8 != NIL
		::oWSUSERFIELDS := RHVACANCY_ARRAYOFUSERFIELD():New()
		::oWSUSERFIELDS:SoapRecv(oNode8)
	EndIf
Return

// WSDL Data Structure LANGUAGES

WSSTRUCT RHVACANCY_LANGUAGES
	WSDATA   cCOURSECODE               AS string OPTIONAL
	WSDATA   cCOURSEDESC               AS string OPTIONAL
	WSDATA   cEDUCATION                AS string OPTIONAL
	WSDATA   cEMPLOYCOURSE             AS string OPTIONAL
	WSDATA   cEMPLOYDESCCOURSE         AS string OPTIONAL
	WSDATA   cEMPLOYDESCENTITY         AS string OPTIONAL
	WSDATA   cEMPLOYENTITY             AS string OPTIONAL
	WSDATA   cENTITYCODE               AS string OPTIONAL
	WSDATA   cENTITYDESC               AS string OPTIONAL
	WSDATA   cGRADE                    AS string OPTIONAL
	WSDATA   dGRADUATIONDATE           AS date OPTIONAL
	WSDATA   cTYPE                     AS string OPTIONAL
	WSDATA   oWSUSERFIELDS             AS RHVACANCY_ARRAYOFUSERFIELD OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT RHVACANCY_LANGUAGES
	::Init()
Return Self

WSMETHOD INIT WSCLIENT RHVACANCY_LANGUAGES
Return

WSMETHOD CLONE WSCLIENT RHVACANCY_LANGUAGES
	Local oClone := RHVACANCY_LANGUAGES():NEW()
	oClone:cCOURSECODE          := ::cCOURSECODE
	oClone:cCOURSEDESC          := ::cCOURSEDESC
	oClone:cEDUCATION           := ::cEDUCATION
	oClone:cEMPLOYCOURSE        := ::cEMPLOYCOURSE
	oClone:cEMPLOYDESCCOURSE    := ::cEMPLOYDESCCOURSE
	oClone:cEMPLOYDESCENTITY    := ::cEMPLOYDESCENTITY
	oClone:cEMPLOYENTITY        := ::cEMPLOYENTITY
	oClone:cENTITYCODE          := ::cENTITYCODE
	oClone:cENTITYDESC          := ::cENTITYDESC
	oClone:cGRADE               := ::cGRADE
	oClone:dGRADUATIONDATE      := ::dGRADUATIONDATE
	oClone:cTYPE                := ::cTYPE
	oClone:oWSUSERFIELDS        := IIF(::oWSUSERFIELDS = NIL , NIL , ::oWSUSERFIELDS:Clone() )
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT RHVACANCY_LANGUAGES
	Local oNode13
	::Init()
	If oResponse = NIL ; Return ; Endif 
	::cCOURSECODE        :=  WSAdvValue( oResponse,"_COURSECODE","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cCOURSEDESC        :=  WSAdvValue( oResponse,"_COURSEDESC","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cEDUCATION         :=  WSAdvValue( oResponse,"_EDUCATION","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cEMPLOYCOURSE      :=  WSAdvValue( oResponse,"_EMPLOYCOURSE","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cEMPLOYDESCCOURSE  :=  WSAdvValue( oResponse,"_EMPLOYDESCCOURSE","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cEMPLOYDESCENTITY  :=  WSAdvValue( oResponse,"_EMPLOYDESCENTITY","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cEMPLOYENTITY      :=  WSAdvValue( oResponse,"_EMPLOYENTITY","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cENTITYCODE        :=  WSAdvValue( oResponse,"_ENTITYCODE","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cENTITYDESC        :=  WSAdvValue( oResponse,"_ENTITYDESC","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cGRADE             :=  WSAdvValue( oResponse,"_GRADE","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::dGRADUATIONDATE    :=  WSAdvValue( oResponse,"_GRADUATIONDATE","date",NIL,NIL,NIL,"D",NIL,NIL) 
	::cTYPE              :=  WSAdvValue( oResponse,"_TYPE","string",NIL,NIL,NIL,"S",NIL,NIL) 
	oNode13 :=  WSAdvValue( oResponse,"_USERFIELDS","ARRAYOFUSERFIELD",NIL,NIL,NIL,"O",NIL,NIL) 
	If oNode13 != NIL
		::oWSUSERFIELDS := RHVACANCY_ARRAYOFUSERFIELD():New()
		::oWSUSERFIELDS:SoapRecv(oNode13)
	EndIf
Return

// WSDL Data Structure QUALIFICATION

WSSTRUCT RHVACANCY_QUALIFICATION
	WSDATA   dDATEFACTOR               AS date OPTIONAL
	WSDATA   cDEGREE                   AS string OPTIONAL
	WSDATA   cDEGREEDESCR              AS string OPTIONAL
	WSDATA   cFACTOR                   AS string OPTIONAL
	WSDATA   cFATORDESCR               AS string OPTIONAL
	WSDATA   cGROUP                    AS string OPTIONAL
	WSDATA   cGROUPDESCR               AS string OPTIONAL
	WSDATA   oWSUSERFIELDS             AS RHVACANCY_ARRAYOFUSERFIELD OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT RHVACANCY_QUALIFICATION
	::Init()
Return Self

WSMETHOD INIT WSCLIENT RHVACANCY_QUALIFICATION
Return

WSMETHOD CLONE WSCLIENT RHVACANCY_QUALIFICATION
	Local oClone := RHVACANCY_QUALIFICATION():NEW()
	oClone:dDATEFACTOR          := ::dDATEFACTOR
	oClone:cDEGREE              := ::cDEGREE
	oClone:cDEGREEDESCR         := ::cDEGREEDESCR
	oClone:cFACTOR              := ::cFACTOR
	oClone:cFATORDESCR          := ::cFATORDESCR
	oClone:cGROUP               := ::cGROUP
	oClone:cGROUPDESCR          := ::cGROUPDESCR
	oClone:oWSUSERFIELDS        := IIF(::oWSUSERFIELDS = NIL , NIL , ::oWSUSERFIELDS:Clone() )
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT RHVACANCY_QUALIFICATION
	Local oNode8
	::Init()
	If oResponse = NIL ; Return ; Endif 
	::dDATEFACTOR        :=  WSAdvValue( oResponse,"_DATEFACTOR","date",NIL,NIL,NIL,"D",NIL,NIL) 
	::cDEGREE            :=  WSAdvValue( oResponse,"_DEGREE","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cDEGREEDESCR       :=  WSAdvValue( oResponse,"_DEGREEDESCR","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cFACTOR            :=  WSAdvValue( oResponse,"_FACTOR","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cFATORDESCR        :=  WSAdvValue( oResponse,"_FATORDESCR","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cGROUP             :=  WSAdvValue( oResponse,"_GROUP","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cGROUPDESCR        :=  WSAdvValue( oResponse,"_GROUPDESCR","string",NIL,NIL,NIL,"S",NIL,NIL) 
	oNode8 :=  WSAdvValue( oResponse,"_USERFIELDS","ARRAYOFUSERFIELD",NIL,NIL,NIL,"O",NIL,NIL) 
	If oNode8 != NIL
		::oWSUSERFIELDS := RHVACANCY_ARRAYOFUSERFIELD():New()
		::oWSUSERFIELDS:SoapRecv(oNode8)
	EndIf
Return

// WSDL Data Structure USERFIELD

WSSTRUCT RHVACANCY_USERFIELD
	WSDATA   cUSERCOMBOBOX             AS string OPTIONAL
	WSDATA   nUSERDEC                  AS integer OPTIONAL
	WSDATA   cUSERF3                   AS string OPTIONAL
	WSDATA   cUSERNAME                 AS string
	WSDATA   lUSEROBLIG                AS boolean OPTIONAL
	WSDATA   cUSERPICTURE              AS string OPTIONAL
	WSDATA   nUSERSIZE                 AS integer OPTIONAL
	WSDATA   cUSERTAG                  AS string OPTIONAL
	WSDATA   cUSERTITLE                AS string OPTIONAL
	WSDATA   cUSERTYPE                 AS string
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT RHVACANCY_USERFIELD
	::Init()
Return Self

WSMETHOD INIT WSCLIENT RHVACANCY_USERFIELD
Return

WSMETHOD CLONE WSCLIENT RHVACANCY_USERFIELD
	Local oClone := RHVACANCY_USERFIELD():NEW()
	oClone:cUSERCOMBOBOX        := ::cUSERCOMBOBOX
	oClone:nUSERDEC             := ::nUSERDEC
	oClone:cUSERF3              := ::cUSERF3
	oClone:cUSERNAME            := ::cUSERNAME
	oClone:lUSEROBLIG           := ::lUSEROBLIG
	oClone:cUSERPICTURE         := ::cUSERPICTURE
	oClone:nUSERSIZE            := ::nUSERSIZE
	oClone:cUSERTAG             := ::cUSERTAG
	oClone:cUSERTITLE           := ::cUSERTITLE
	oClone:cUSERTYPE            := ::cUSERTYPE
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT RHVACANCY_USERFIELD
	::Init()
	If oResponse = NIL ; Return ; Endif 
	::cUSERCOMBOBOX      :=  WSAdvValue( oResponse,"_USERCOMBOBOX","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::nUSERDEC           :=  WSAdvValue( oResponse,"_USERDEC","integer",NIL,NIL,NIL,"N",NIL,NIL) 
	::cUSERF3            :=  WSAdvValue( oResponse,"_USERF3","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cUSERNAME          :=  WSAdvValue( oResponse,"_USERNAME","string",NIL,"Property cUSERNAME as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::lUSEROBLIG         :=  WSAdvValue( oResponse,"_USEROBLIG","boolean",NIL,NIL,NIL,"L",NIL,NIL) 
	::cUSERPICTURE       :=  WSAdvValue( oResponse,"_USERPICTURE","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::nUSERSIZE          :=  WSAdvValue( oResponse,"_USERSIZE","integer",NIL,NIL,NIL,"N",NIL,NIL) 
	::cUSERTAG           :=  WSAdvValue( oResponse,"_USERTAG","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cUSERTITLE         :=  WSAdvValue( oResponse,"_USERTITLE","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cUSERTYPE          :=  WSAdvValue( oResponse,"_USERTYPE","string",NIL,"Property cUSERTYPE as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
Return

// WSDL Data Structure OPTIONSELECT

WSSTRUCT RHVACANCY_OPTIONSELECT
	WSDATA   cDESCSELECT               AS string OPTIONAL
	WSDATA   cKEYSELECT                AS string OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT RHVACANCY_OPTIONSELECT
	::Init()
Return Self

WSMETHOD INIT WSCLIENT RHVACANCY_OPTIONSELECT
Return

WSMETHOD CLONE WSCLIENT RHVACANCY_OPTIONSELECT
	Local oClone := RHVACANCY_OPTIONSELECT():NEW()
	oClone:cDESCSELECT          := ::cDESCSELECT
	oClone:cKEYSELECT           := ::cKEYSELECT
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT RHVACANCY_OPTIONSELECT
	::Init()
	If oResponse = NIL ; Return ; Endif 
	::cDESCSELECT        :=  WSAdvValue( oResponse,"_DESCSELECT","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cKEYSELECT         :=  WSAdvValue( oResponse,"_KEYSELECT","string",NIL,NIL,NIL,"S",NIL,NIL) 
Return

// WSDL Data Structure ARRAYOFCHAROPTIONS

WSSTRUCT RHVACANCY_ARRAYOFCHAROPTIONS
	WSDATA   oWSCHAROPTIONS            AS RHVACANCY_CHAROPTIONS OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT RHVACANCY_ARRAYOFCHAROPTIONS
	::Init()
Return Self

WSMETHOD INIT WSCLIENT RHVACANCY_ARRAYOFCHAROPTIONS
	::oWSCHAROPTIONS       := {} // Array Of  RHVACANCY_CHAROPTIONS():New()
Return

WSMETHOD CLONE WSCLIENT RHVACANCY_ARRAYOFCHAROPTIONS
	Local oClone := RHVACANCY_ARRAYOFCHAROPTIONS():NEW()
	oClone:oWSCHAROPTIONS := NIL
	If ::oWSCHAROPTIONS <> NIL 
		oClone:oWSCHAROPTIONS := {}
		aEval( ::oWSCHAROPTIONS , { |x| aadd( oClone:oWSCHAROPTIONS , x:Clone() ) } )
	Endif 
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT RHVACANCY_ARRAYOFCHAROPTIONS
	Local nRElem1, oNodes1, nTElem1
	::Init()
	If oResponse = NIL ; Return ; Endif 
	oNodes1 :=  WSAdvValue( oResponse,"_CHAROPTIONS","CHAROPTIONS",{},NIL,.T.,"SC",NIL,NIL) 
	nTElem1 := len(oNodes1)
	For nRElem1 := 1 to nTElem1 
		If !WSIsNilNode( oNodes1[nRElem1] )
			aadd(::oWSCHAROPTIONS , RHVACANCY_CHAROPTIONS():New() )
			::oWSCHAROPTIONS[len(::oWSCHAROPTIONS)]:SoapRecv(oNodes1[nRElem1])
		Endif
	Next
Return

// WSDL Data Structure CHAROPTIONS

WSSTRUCT RHVACANCY_CHAROPTIONS
	WSDATA   cCODE                     AS string OPTIONAL
	WSDATA   cDESC                     AS string OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT RHVACANCY_CHAROPTIONS
	::Init()
Return Self

WSMETHOD INIT WSCLIENT RHVACANCY_CHAROPTIONS
Return

WSMETHOD CLONE WSCLIENT RHVACANCY_CHAROPTIONS
	Local oClone := RHVACANCY_CHAROPTIONS():NEW()
	oClone:cCODE                := ::cCODE
	oClone:cDESC                := ::cDESC
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT RHVACANCY_CHAROPTIONS
	::Init()
	If oResponse = NIL ; Return ; Endif 
	::cCODE              :=  WSAdvValue( oResponse,"_CODE","string",NIL,NIL,NIL,"S",NIL,NIL) 
	::cDESC              :=  WSAdvValue( oResponse,"_DESC","string",NIL,NIL,NIL,"S",NIL,NIL) 
Return
