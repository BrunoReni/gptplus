#INCLUDE "PROTHEUS.CH"
#INCLUDE "APWEBSRV.CH"

/* ===============================================================================
WSDL Location    http://ipt-rogerio/ws/RHKNOWLEDGE.apw?WSDL
Gerado em        05/29/07 17:24:57
Observações      Código-Fonte gerado por ADVPL WSDL Client 1.060117
                 Alterações neste arquivo podem causar funcionamento incorreto
                 e serão perdidas caso o código-fonte seja gerado novamente.
=============================================================================== */

User Function _TPXRGES ; Return  // "dummy" function - Internal Use 

/* -------------------------------------------------------------------------------
WSDL Service WSRHKNOWLEDGE
------------------------------------------------------------------------------- */

WSCLIENT WSRHKNOWLEDGE

	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD RESET
	WSMETHOD CLONE
	WSMETHOD APPROVEMAP
	WSMETHOD BRWCOMPETENCE
	WSMETHOD BRWEVALUATED
	WSMETHOD BRWHISTORY
	WSMETHOD BRWITEMCOMPETENCE
	WSMETHOD BRWMENTORS
	WSMETHOD BRWSKILL
	WSMETHOD GETCHANGEDITEM
	WSMETHOD GETHEADERPART
	WSMETHOD GETMAPHISTORY
	WSMETHOD GETMYMAP
	WSMETHOD PUTEVALUATEDMAP
	WSMETHOD PUTLEVELSKILL
	WSMETHOD PUTMENTOR
	WSMETHOD SETEVALUATORREVISION
	WSMETHOD SETTOREVISION

	WSDATA   _URL                      AS String
	WSDATA   _HEADOUT                  AS Array of String
	WSDATA   cUSERCODE                 AS string
	WSDATA   cCODMAP                   AS string
	WSDATA   cPARTICIPANTID            AS string
	WSDATA   cEVALUATORID              AS string
	WSDATA   cSINCRON                  AS string
	WSDATA   cAPPROVEMAPRESULT         AS string
	WSDATA   oWSBRWCOMPETENCERESULT    AS RHKNOWLEDGE_ARRAYOFCOMPETENCELIST
	WSDATA   oWSBRWEVALUATEDRESULT     AS RHKNOWLEDGE_ARRAYOFMAPPARTICIPANT
	WSDATA   cVERSION                  AS string
	WSDATA   oWSBRWHISTORYRESULT       AS RHKNOWLEDGE_ITEMLIST
	WSDATA   cCOMPETENCEID             AS string
	WSDATA   cEVALUATEDID              AS string
	WSDATA   oWSBRWITEMCOMPETENCERESULT AS RHKNOWLEDGE_ITEMLIST
	WSDATA   cMENTORNAME               AS string
	WSDATA   oWSBRWMENTORSRESULT       AS RHKNOWLEDGE_ARRAYOFMENTORS
	WSDATA   cITEMCOMPETENCEID         AS string
	WSDATA   oWSBRWSKILLRESULT         AS RHKNOWLEDGE_ARRAYOFSKILLSLIST
	WSDATA   lGETCHANGEDITEMRESULT     AS boolean
	WSDATA   cTYPE                     AS string
	WSDATA   oWSGETHEADERPARTRESULT    AS RHKNOWLEDGE_HEADERPARTICIPANT
	WSDATA   oWSGETMAPHISTORYRESULT    AS RHKNOWLEDGE_ARRAYOFHISTORYMAP
	WSDATA   oWSGETMYMAPRESULT         AS RHKNOWLEDGE_MAPPARTICIPANT
	WSDATA   cPUTEVALUATEDMAPRESULT    AS string
	WSDATA   cAUTHOR                   AS string
	WSDATA   oWSLEVELSKILL             AS RHKNOWLEDGE_SKILLS
	WSDATA   lPUTLEVELSKILLRESULT      AS boolean
	WSDATA   cCODMENTOR                AS string
	WSDATA   cPUTMENTORRESULT          AS string
	WSDATA   cSETEVALUATORREVISIONRESULT AS string
	WSDATA   cSETTOREVISIONRESULT      AS string

	// Estruturas mantidas por compatibilidade - NÃO USAR
	WSDATA   oWSSKILLS                 AS RHKNOWLEDGE_SKILLS

ENDWSCLIENT

WSMETHOD NEW WSCLIENT WSRHKNOWLEDGE
::Init()
If !FindFunction("XMLCHILDEX")
	UserException("O Código-Fonte Client atual requer os executáveis do Protheus Build [7.00.070518A] ou superior. Atualize o Protheus ou gere o Código-Fonte novamente utilizando o Build atual.")
EndIf
Return Self

WSMETHOD INIT WSCLIENT WSRHKNOWLEDGE
	::oWSBRWCOMPETENCERESULT := RHKNOWLEDGE_ARRAYOFCOMPETENCELIST():New()
	::oWSBRWEVALUATEDRESULT := RHKNOWLEDGE_ARRAYOFMAPPARTICIPANT():New()
	::oWSBRWHISTORYRESULT := RHKNOWLEDGE_ITEMLIST():New()
	::oWSBRWITEMCOMPETENCERESULT := RHKNOWLEDGE_ITEMLIST():New()
	::oWSBRWMENTORSRESULT := RHKNOWLEDGE_ARRAYOFMENTORS():New()
	::oWSBRWSKILLRESULT  := RHKNOWLEDGE_ARRAYOFSKILLSLIST():New()
	::oWSGETHEADERPARTRESULT := RHKNOWLEDGE_HEADERPARTICIPANT():New()
	::oWSGETMAPHISTORYRESULT := RHKNOWLEDGE_ARRAYOFHISTORYMAP():New()
	::oWSGETMYMAPRESULT  := RHKNOWLEDGE_MAPPARTICIPANT():New()
	::oWSLEVELSKILL      := RHKNOWLEDGE_SKILLS():New()

	// Estruturas mantidas por compatibilidade - NÃO USAR
	::oWSSKILLS          := ::oWSLEVELSKILL
Return

WSMETHOD RESET WSCLIENT WSRHKNOWLEDGE
	::cUSERCODE          := NIL 
	::cCODMAP            := NIL 
	::cPARTICIPANTID     := NIL 
	::cEVALUATORID       := NIL 
	::cSINCRON           := NIL 
	::cAPPROVEMAPRESULT  := NIL 
	::oWSBRWCOMPETENCERESULT := NIL 
	::oWSBRWEVALUATEDRESULT := NIL 
	::cVERSION           := NIL 
	::oWSBRWHISTORYRESULT := NIL 
	::cCOMPETENCEID      := NIL 
	::cEVALUATEDID       := NIL 
	::oWSBRWITEMCOMPETENCERESULT := NIL 
	::cMENTORNAME        := NIL 
	::oWSBRWMENTORSRESULT := NIL 
	::cITEMCOMPETENCEID  := NIL 
	::oWSBRWSKILLRESULT  := NIL 
	::lGETCHANGEDITEMRESULT := NIL 
	::cTYPE              := NIL 
	::oWSGETHEADERPARTRESULT := NIL 
	::oWSGETMAPHISTORYRESULT := NIL 
	::oWSGETMYMAPRESULT  := NIL 
	::cPUTEVALUATEDMAPRESULT := NIL 
	::cAUTHOR            := NIL 
	::oWSLEVELSKILL      := NIL 
	::lPUTLEVELSKILLRESULT := NIL 
	::cCODMENTOR         := NIL 
	::cPUTMENTORRESULT   := NIL 
	::cSETEVALUATORREVISIONRESULT := NIL 
	::cSETTOREVISIONRESULT := NIL 

	// Estruturas mantidas por compatibilidade - NÃO USAR
	::oWSSKILLS          := NIL
	::Init()
Return

WSMETHOD CLONE WSCLIENT WSRHKNOWLEDGE
Local oClone := WSRHKNOWLEDGE():New()
	oClone:_URL          := ::_URL 
	oClone:cUSERCODE     := ::cUSERCODE
	oClone:cCODMAP       := ::cCODMAP
	oClone:cPARTICIPANTID := ::cPARTICIPANTID
	oClone:cEVALUATORID  := ::cEVALUATORID
	oClone:cSINCRON      := ::cSINCRON
	oClone:cAPPROVEMAPRESULT := ::cAPPROVEMAPRESULT
	oClone:oWSBRWCOMPETENCERESULT :=  IIF(::oWSBRWCOMPETENCERESULT = NIL , NIL ,::oWSBRWCOMPETENCERESULT:Clone() )
	oClone:oWSBRWEVALUATEDRESULT :=  IIF(::oWSBRWEVALUATEDRESULT = NIL , NIL ,::oWSBRWEVALUATEDRESULT:Clone() )
	oClone:cVERSION      := ::cVERSION
	oClone:oWSBRWHISTORYRESULT :=  IIF(::oWSBRWHISTORYRESULT = NIL , NIL ,::oWSBRWHISTORYRESULT:Clone() )
	oClone:cCOMPETENCEID := ::cCOMPETENCEID
	oClone:cEVALUATEDID  := ::cEVALUATEDID
	oClone:oWSBRWITEMCOMPETENCERESULT :=  IIF(::oWSBRWITEMCOMPETENCERESULT = NIL , NIL ,::oWSBRWITEMCOMPETENCERESULT:Clone() )
	oClone:cMENTORNAME   := ::cMENTORNAME
	oClone:oWSBRWMENTORSRESULT :=  IIF(::oWSBRWMENTORSRESULT = NIL , NIL ,::oWSBRWMENTORSRESULT:Clone() )
	oClone:cITEMCOMPETENCEID := ::cITEMCOMPETENCEID
	oClone:oWSBRWSKILLRESULT :=  IIF(::oWSBRWSKILLRESULT = NIL , NIL ,::oWSBRWSKILLRESULT:Clone() )
	oClone:lGETCHANGEDITEMRESULT := ::lGETCHANGEDITEMRESULT
	oClone:cTYPE         := ::cTYPE
	oClone:oWSGETHEADERPARTRESULT :=  IIF(::oWSGETHEADERPARTRESULT = NIL , NIL ,::oWSGETHEADERPARTRESULT:Clone() )
	oClone:oWSGETMAPHISTORYRESULT :=  IIF(::oWSGETMAPHISTORYRESULT = NIL , NIL ,::oWSGETMAPHISTORYRESULT:Clone() )
	oClone:oWSGETMYMAPRESULT :=  IIF(::oWSGETMYMAPRESULT = NIL , NIL ,::oWSGETMYMAPRESULT:Clone() )
	oClone:cPUTEVALUATEDMAPRESULT := ::cPUTEVALUATEDMAPRESULT
	oClone:cAUTHOR       := ::cAUTHOR
	oClone:oWSLEVELSKILL :=  IIF(::oWSLEVELSKILL = NIL , NIL ,::oWSLEVELSKILL:Clone() )
	oClone:lPUTLEVELSKILLRESULT := ::lPUTLEVELSKILLRESULT
	oClone:cCODMENTOR    := ::cCODMENTOR
	oClone:cPUTMENTORRESULT := ::cPUTMENTORRESULT
	oClone:cSETEVALUATORREVISIONRESULT := ::cSETEVALUATORREVISIONRESULT
	oClone:cSETTOREVISIONRESULT := ::cSETTOREVISIONRESULT

	// Estruturas mantidas por compatibilidade - NÃO USAR
	oClone:oWSSKILLS     := oClone:oWSLEVELSKILL
Return oClone

/* -------------------------------------------------------------------------------
WSDL Method APPROVEMAP of Service WSRHKNOWLEDGE
------------------------------------------------------------------------------- */

WSMETHOD APPROVEMAP WSSEND cUSERCODE,cCODMAP,cPARTICIPANTID,cEVALUATORID,cSINCRON WSRECEIVE cAPPROVEMAPRESULT WSCLIENT WSRHKNOWLEDGE
Local cSoap := "" , oXmlRet

BEGIN WSMETHOD

cSoap += '<APPROVEMAP xmlns="http://ipt-rogerio/">'
cSoap += WSSoapValue("USERCODE", ::cUSERCODE, cUSERCODE , "string", .T. , .F., 0 ) 
cSoap += WSSoapValue("CODMAP", ::cCODMAP, cCODMAP , "string", .F. , .F., 0 ) 
cSoap += WSSoapValue("PARTICIPANTID", ::cPARTICIPANTID, cPARTICIPANTID , "string", .T. , .F., 0 ) 
cSoap += WSSoapValue("EVALUATORID", ::cEVALUATORID, cEVALUATORID , "string", .T. , .F., 0 ) 
cSoap += WSSoapValue("SINCRON", ::cSINCRON, cSINCRON , "string", .F. , .F., 0 ) 
cSoap += "</APPROVEMAP>"

oXmlRet := SvcSoapCall(	Self,cSoap,; 
	"http://ipt-rogerio/APPROVEMAP",; 
	"DOCUMENT","http://ipt-rogerio/",,"1.031217",; 
	"http://ipt-rogerio/ws/RHKNOWLEDGE.apw")

::Init()
::cAPPROVEMAPRESULT  :=  WSAdvValue( oXmlRet,"_APPROVEMAPRESPONSE:_APPROVEMAPRESULT:TEXT","string",NIL,NIL,NIL,NIL,NIL) 

END WSMETHOD

oXmlRet := NIL
Return .T.

/* -------------------------------------------------------------------------------
WSDL Method BRWCOMPETENCE of Service WSRHKNOWLEDGE
------------------------------------------------------------------------------- */

WSMETHOD BRWCOMPETENCE WSSEND cUSERCODE,cCODMAP,cPARTICIPANTID,cEVALUATORID WSRECEIVE oWSBRWCOMPETENCERESULT WSCLIENT WSRHKNOWLEDGE
Local cSoap := "" , oXmlRet

BEGIN WSMETHOD

cSoap += '<BRWCOMPETENCE xmlns="http://ipt-rogerio/">'
cSoap += WSSoapValue("USERCODE", ::cUSERCODE, cUSERCODE , "string", .T. , .F., 0 ) 
cSoap += WSSoapValue("CODMAP", ::cCODMAP, cCODMAP , "string", .F. , .F., 0 ) 
cSoap += WSSoapValue("PARTICIPANTID", ::cPARTICIPANTID, cPARTICIPANTID , "string", .T. , .F., 0 ) 
cSoap += WSSoapValue("EVALUATORID", ::cEVALUATORID, cEVALUATORID , "string", .T. , .F., 0 ) 
cSoap += "</BRWCOMPETENCE>"

oXmlRet := SvcSoapCall(	Self,cSoap,; 
	"http://ipt-rogerio/BRWCOMPETENCE",; 
	"DOCUMENT","http://ipt-rogerio/",,"1.031217",; 
	"http://ipt-rogerio/ws/RHKNOWLEDGE.apw")

::Init()
::oWSBRWCOMPETENCERESULT:SoapRecv( WSAdvValue( oXmlRet,"_BRWCOMPETENCERESPONSE:_BRWCOMPETENCERESULT","ARRAYOFCOMPETENCELIST",NIL,NIL,NIL,NIL,NIL) )

END WSMETHOD

oXmlRet := NIL
Return .T.

/* -------------------------------------------------------------------------------
WSDL Method BRWEVALUATED of Service WSRHKNOWLEDGE
------------------------------------------------------------------------------- */

WSMETHOD BRWEVALUATED WSSEND cUSERCODE,cPARTICIPANTID WSRECEIVE oWSBRWEVALUATEDRESULT WSCLIENT WSRHKNOWLEDGE
Local cSoap := "" , oXmlRet

BEGIN WSMETHOD

cSoap += '<BRWEVALUATED xmlns="http://ipt-rogerio/">'
cSoap += WSSoapValue("USERCODE", ::cUSERCODE, cUSERCODE , "string", .T. , .F., 0 ) 
cSoap += WSSoapValue("PARTICIPANTID", ::cPARTICIPANTID, cPARTICIPANTID , "string", .T. , .F., 0 ) 
cSoap += "</BRWEVALUATED>"

oXmlRet := SvcSoapCall(	Self,cSoap,; 
	"http://ipt-rogerio/BRWEVALUATED",; 
	"DOCUMENT","http://ipt-rogerio/",,"1.031217",; 
	"http://ipt-rogerio/ws/RHKNOWLEDGE.apw")

::Init()
::oWSBRWEVALUATEDRESULT:SoapRecv( WSAdvValue( oXmlRet,"_BRWEVALUATEDRESPONSE:_BRWEVALUATEDRESULT","ARRAYOFMAPPARTICIPANT",NIL,NIL,NIL,NIL,NIL) )

END WSMETHOD

oXmlRet := NIL
Return .T.

/* -------------------------------------------------------------------------------
WSDL Method BRWHISTORY of Service WSRHKNOWLEDGE
------------------------------------------------------------------------------- */

WSMETHOD BRWHISTORY WSSEND cUSERCODE,cPARTICIPANTID,cEVALUATORID,cCODMAP,cVERSION WSRECEIVE oWSBRWHISTORYRESULT WSCLIENT WSRHKNOWLEDGE
Local cSoap := "" , oXmlRet

BEGIN WSMETHOD

cSoap += '<BRWHISTORY xmlns="http://ipt-rogerio/">'
cSoap += WSSoapValue("USERCODE", ::cUSERCODE, cUSERCODE , "string", .T. , .F., 0 ) 
cSoap += WSSoapValue("PARTICIPANTID", ::cPARTICIPANTID, cPARTICIPANTID , "string", .T. , .F., 0 ) 
cSoap += WSSoapValue("EVALUATORID", ::cEVALUATORID, cEVALUATORID , "string", .T. , .F., 0 ) 
cSoap += WSSoapValue("CODMAP", ::cCODMAP, cCODMAP , "string", .F. , .F., 0 ) 
cSoap += WSSoapValue("VERSION", ::cVERSION, cVERSION , "string", .T. , .F., 0 ) 
cSoap += "</BRWHISTORY>"

oXmlRet := SvcSoapCall(	Self,cSoap,; 
	"http://ipt-rogerio/BRWHISTORY",; 
	"DOCUMENT","http://ipt-rogerio/",,"1.031217",; 
	"http://ipt-rogerio/ws/RHKNOWLEDGE.apw")

::Init()
::oWSBRWHISTORYRESULT:SoapRecv( WSAdvValue( oXmlRet,"_BRWHISTORYRESPONSE:_BRWHISTORYRESULT","ITEMLIST",NIL,NIL,NIL,NIL,NIL) )

END WSMETHOD

oXmlRet := NIL
Return .T.

/* -------------------------------------------------------------------------------
WSDL Method BRWITEMCOMPETENCE of Service WSRHKNOWLEDGE
------------------------------------------------------------------------------- */

WSMETHOD BRWITEMCOMPETENCE WSSEND cUSERCODE,cCOMPETENCEID,cCODMAP,cEVALUATEDID,cEVALUATORID WSRECEIVE oWSBRWITEMCOMPETENCERESULT WSCLIENT WSRHKNOWLEDGE
Local cSoap := "" , oXmlRet

BEGIN WSMETHOD

cSoap += '<BRWITEMCOMPETENCE xmlns="http://ipt-rogerio/">'
cSoap += WSSoapValue("USERCODE", ::cUSERCODE, cUSERCODE , "string", .T. , .F., 0 ) 
cSoap += WSSoapValue("COMPETENCEID", ::cCOMPETENCEID, cCOMPETENCEID , "string", .T. , .F., 0 ) 
cSoap += WSSoapValue("CODMAP", ::cCODMAP, cCODMAP , "string", .F. , .F., 0 ) 
cSoap += WSSoapValue("EVALUATEDID", ::cEVALUATEDID, cEVALUATEDID , "string", .T. , .F., 0 ) 
cSoap += WSSoapValue("EVALUATORID", ::cEVALUATORID, cEVALUATORID , "string", .T. , .F., 0 ) 
cSoap += "</BRWITEMCOMPETENCE>"

oXmlRet := SvcSoapCall(	Self,cSoap,; 
	"http://ipt-rogerio/BRWITEMCOMPETENCE",; 
	"DOCUMENT","http://ipt-rogerio/",,"1.031217",; 
	"http://ipt-rogerio/ws/RHKNOWLEDGE.apw")

::Init()
::oWSBRWITEMCOMPETENCERESULT:SoapRecv( WSAdvValue( oXmlRet,"_BRWITEMCOMPETENCERESPONSE:_BRWITEMCOMPETENCERESULT","ITEMLIST",NIL,NIL,NIL,NIL,NIL) )

END WSMETHOD

oXmlRet := NIL
Return .T.

/* -------------------------------------------------------------------------------
WSDL Method BRWMENTORS of Service WSRHKNOWLEDGE
------------------------------------------------------------------------------- */

WSMETHOD BRWMENTORS WSSEND cUSERCODE,cMENTORNAME WSRECEIVE oWSBRWMENTORSRESULT WSCLIENT WSRHKNOWLEDGE
Local cSoap := "" , oXmlRet

BEGIN WSMETHOD

cSoap += '<BRWMENTORS xmlns="http://ipt-rogerio/">'
cSoap += WSSoapValue("USERCODE", ::cUSERCODE, cUSERCODE , "string", .T. , .F., 0 ) 
cSoap += WSSoapValue("MENTORNAME", ::cMENTORNAME, cMENTORNAME , "string", .T. , .F., 0 ) 
cSoap += "</BRWMENTORS>"

oXmlRet := SvcSoapCall(	Self,cSoap,; 
	"http://ipt-rogerio/BRWMENTORS",; 
	"DOCUMENT","http://ipt-rogerio/",,"1.031217",; 
	"http://ipt-rogerio/ws/RHKNOWLEDGE.apw")

::Init()
::oWSBRWMENTORSRESULT:SoapRecv( WSAdvValue( oXmlRet,"_BRWMENTORSRESPONSE:_BRWMENTORSRESULT","ARRAYOFMENTORS",NIL,NIL,NIL,NIL,NIL) )

END WSMETHOD

oXmlRet := NIL
Return .T.

/* -------------------------------------------------------------------------------
WSDL Method BRWSKILL of Service WSRHKNOWLEDGE
------------------------------------------------------------------------------- */

WSMETHOD BRWSKILL WSSEND cUSERCODE,cCOMPETENCEID,cITEMCOMPETENCEID,cPARTICIPANTID WSRECEIVE oWSBRWSKILLRESULT WSCLIENT WSRHKNOWLEDGE
Local cSoap := "" , oXmlRet

BEGIN WSMETHOD

cSoap += '<BRWSKILL xmlns="http://ipt-rogerio/">'
cSoap += WSSoapValue("USERCODE", ::cUSERCODE, cUSERCODE , "string", .T. , .F., 0 ) 
cSoap += WSSoapValue("COMPETENCEID", ::cCOMPETENCEID, cCOMPETENCEID , "string", .T. , .F., 0 ) 
cSoap += WSSoapValue("ITEMCOMPETENCEID", ::cITEMCOMPETENCEID, cITEMCOMPETENCEID , "string", .F. , .F., 0 ) 
cSoap += WSSoapValue("PARTICIPANTID", ::cPARTICIPANTID, cPARTICIPANTID , "string", .T. , .F., 0 ) 
cSoap += "</BRWSKILL>"

oXmlRet := SvcSoapCall(	Self,cSoap,; 
	"http://ipt-rogerio/BRWSKILL",; 
	"DOCUMENT","http://ipt-rogerio/",,"1.031217",; 
	"http://ipt-rogerio/ws/RHKNOWLEDGE.apw")

::Init()
::oWSBRWSKILLRESULT:SoapRecv( WSAdvValue( oXmlRet,"_BRWSKILLRESPONSE:_BRWSKILLRESULT","ARRAYOFSKILLSLIST",NIL,NIL,NIL,NIL,NIL) )

END WSMETHOD

oXmlRet := NIL
Return .T.

/* -------------------------------------------------------------------------------
WSDL Method GETCHANGEDITEM of Service WSRHKNOWLEDGE
------------------------------------------------------------------------------- */

WSMETHOD GETCHANGEDITEM WSSEND cUSERCODE,cPARTICIPANTID,cEVALUATORID,cCODMAP,cVERSION WSRECEIVE lGETCHANGEDITEMRESULT WSCLIENT WSRHKNOWLEDGE
Local cSoap := "" , oXmlRet

BEGIN WSMETHOD

cSoap += '<GETCHANGEDITEM xmlns="http://ipt-rogerio/">'
cSoap += WSSoapValue("USERCODE", ::cUSERCODE, cUSERCODE , "string", .T. , .F., 0 ) 
cSoap += WSSoapValue("PARTICIPANTID", ::cPARTICIPANTID, cPARTICIPANTID , "string", .T. , .F., 0 ) 
cSoap += WSSoapValue("EVALUATORID", ::cEVALUATORID, cEVALUATORID , "string", .T. , .F., 0 ) 
cSoap += WSSoapValue("CODMAP", ::cCODMAP, cCODMAP , "string", .F. , .F., 0 ) 
cSoap += WSSoapValue("VERSION", ::cVERSION, cVERSION , "string", .T. , .F., 0 ) 
cSoap += "</GETCHANGEDITEM>"

oXmlRet := SvcSoapCall(	Self,cSoap,; 
	"http://ipt-rogerio/GETCHANGEDITEM",; 
	"DOCUMENT","http://ipt-rogerio/",,"1.031217",; 
	"http://ipt-rogerio/ws/RHKNOWLEDGE.apw")

::Init()
::lGETCHANGEDITEMRESULT :=  WSAdvValue( oXmlRet,"_GETCHANGEDITEMRESPONSE:_GETCHANGEDITEMRESULT:TEXT","boolean",NIL,NIL,NIL,NIL,NIL) 

END WSMETHOD

oXmlRet := NIL
Return .T.

/* -------------------------------------------------------------------------------
WSDL Method GETHEADERPART of Service WSRHKNOWLEDGE
------------------------------------------------------------------------------- */

WSMETHOD GETHEADERPART WSSEND cUSERCODE,cPARTICIPANTID,cTYPE,cCODMAP WSRECEIVE oWSGETHEADERPARTRESULT WSCLIENT WSRHKNOWLEDGE
Local cSoap := "" , oXmlRet

BEGIN WSMETHOD

cSoap += '<GETHEADERPART xmlns="http://ipt-rogerio/">'
cSoap += WSSoapValue("USERCODE", ::cUSERCODE, cUSERCODE , "string", .T. , .F., 0 ) 
cSoap += WSSoapValue("PARTICIPANTID", ::cPARTICIPANTID, cPARTICIPANTID , "string", .T. , .F., 0 ) 
cSoap += WSSoapValue("TYPE", ::cTYPE, cTYPE , "string", .T. , .F., 0 ) 
cSoap += WSSoapValue("CODMAP", ::cCODMAP, cCODMAP , "string", .F. , .F., 0 ) 
cSoap += "</GETHEADERPART>"

oXmlRet := SvcSoapCall(	Self,cSoap,; 
	"http://ipt-rogerio/GETHEADERPART",; 
	"DOCUMENT","http://ipt-rogerio/",,"1.031217",; 
	"http://ipt-rogerio/ws/RHKNOWLEDGE.apw")

::Init()
::oWSGETHEADERPARTRESULT:SoapRecv( WSAdvValue( oXmlRet,"_GETHEADERPARTRESPONSE:_GETHEADERPARTRESULT","HEADERPARTICIPANT",NIL,NIL,NIL,NIL,NIL) )

END WSMETHOD

oXmlRet := NIL
Return .T.

/* -------------------------------------------------------------------------------
WSDL Method GETMAPHISTORY of Service WSRHKNOWLEDGE
------------------------------------------------------------------------------- */

WSMETHOD GETMAPHISTORY WSSEND cUSERCODE,cPARTICIPANTID,cTYPE WSRECEIVE oWSGETMAPHISTORYRESULT WSCLIENT WSRHKNOWLEDGE
Local cSoap := "" , oXmlRet

BEGIN WSMETHOD

cSoap += '<GETMAPHISTORY xmlns="http://ipt-rogerio/">'
cSoap += WSSoapValue("USERCODE", ::cUSERCODE, cUSERCODE , "string", .T. , .F., 0 ) 
cSoap += WSSoapValue("PARTICIPANTID", ::cPARTICIPANTID, cPARTICIPANTID , "string", .T. , .F., 0 ) 
cSoap += WSSoapValue("TYPE", ::cTYPE, cTYPE , "string", .T. , .F., 0 ) 
cSoap += "</GETMAPHISTORY>"

oXmlRet := SvcSoapCall(	Self,cSoap,; 
	"http://ipt-rogerio/GETMAPHISTORY",; 
	"DOCUMENT","http://ipt-rogerio/",,"1.031217",; 
	"http://ipt-rogerio/ws/RHKNOWLEDGE.apw")

::Init()
::oWSGETMAPHISTORYRESULT:SoapRecv( WSAdvValue( oXmlRet,"_GETMAPHISTORYRESPONSE:_GETMAPHISTORYRESULT","ARRAYOFHISTORYMAP",NIL,NIL,NIL,NIL,NIL) )

END WSMETHOD

oXmlRet := NIL
Return .T.

/* -------------------------------------------------------------------------------
WSDL Method GETMYMAP of Service WSRHKNOWLEDGE
------------------------------------------------------------------------------- */

WSMETHOD GETMYMAP WSSEND cUSERCODE,cPARTICIPANTID WSRECEIVE oWSGETMYMAPRESULT WSCLIENT WSRHKNOWLEDGE
Local cSoap := "" , oXmlRet

BEGIN WSMETHOD

cSoap += '<GETMYMAP xmlns="http://ipt-rogerio/">'
cSoap += WSSoapValue("USERCODE", ::cUSERCODE, cUSERCODE , "string", .T. , .F., 0 ) 
cSoap += WSSoapValue("PARTICIPANTID", ::cPARTICIPANTID, cPARTICIPANTID , "string", .T. , .F., 0 ) 
cSoap += "</GETMYMAP>"

oXmlRet := SvcSoapCall(	Self,cSoap,; 
	"http://ipt-rogerio/GETMYMAP",; 
	"DOCUMENT","http://ipt-rogerio/",,"1.031217",; 
	"http://ipt-rogerio/ws/RHKNOWLEDGE.apw")

::Init()
::oWSGETMYMAPRESULT:SoapRecv( WSAdvValue( oXmlRet,"_GETMYMAPRESPONSE:_GETMYMAPRESULT","MAPPARTICIPANT",NIL,NIL,NIL,NIL,NIL) )

END WSMETHOD

oXmlRet := NIL
Return .T.

/* -------------------------------------------------------------------------------
WSDL Method PUTEVALUATEDMAP of Service WSRHKNOWLEDGE
------------------------------------------------------------------------------- */

WSMETHOD PUTEVALUATEDMAP WSSEND cUSERCODE,cPARTICIPANTID,cCODMAP,cEVALUATORID WSRECEIVE cPUTEVALUATEDMAPRESULT WSCLIENT WSRHKNOWLEDGE
Local cSoap := "" , oXmlRet

BEGIN WSMETHOD

cSoap += '<PUTEVALUATEDMAP xmlns="http://ipt-rogerio/">'
cSoap += WSSoapValue("USERCODE", ::cUSERCODE, cUSERCODE , "string", .T. , .F., 0 ) 
cSoap += WSSoapValue("PARTICIPANTID", ::cPARTICIPANTID, cPARTICIPANTID , "string", .T. , .F., 0 ) 
cSoap += WSSoapValue("CODMAP", ::cCODMAP, cCODMAP , "string", .F. , .F., 0 ) 
cSoap += WSSoapValue("EVALUATORID", ::cEVALUATORID, cEVALUATORID , "string", .T. , .F., 0 ) 
cSoap += "</PUTEVALUATEDMAP>"

oXmlRet := SvcSoapCall(	Self,cSoap,; 
	"http://ipt-rogerio/PUTEVALUATEDMAP",; 
	"DOCUMENT","http://ipt-rogerio/",,"1.031217",; 
	"http://ipt-rogerio/ws/RHKNOWLEDGE.apw")

::Init()
::cPUTEVALUATEDMAPRESULT :=  WSAdvValue( oXmlRet,"_PUTEVALUATEDMAPRESPONSE:_PUTEVALUATEDMAPRESULT:TEXT","string",NIL,NIL,NIL,NIL,NIL) 

END WSMETHOD

oXmlRet := NIL
Return .T.

/* -------------------------------------------------------------------------------
WSDL Method PUTLEVELSKILL of Service WSRHKNOWLEDGE
------------------------------------------------------------------------------- */

WSMETHOD PUTLEVELSKILL WSSEND cUSERCODE,cCODMAP,cPARTICIPANTID,cEVALUATORID,cAUTHOR,oWSLEVELSKILL WSRECEIVE lPUTLEVELSKILLRESULT WSCLIENT WSRHKNOWLEDGE
Local cSoap := "" , oXmlRet

BEGIN WSMETHOD

cSoap += '<PUTLEVELSKILL xmlns="http://ipt-rogerio/">'
cSoap += WSSoapValue("USERCODE", ::cUSERCODE, cUSERCODE , "string", .T. , .F., 0 ) 
cSoap += WSSoapValue("CODMAP", ::cCODMAP, cCODMAP , "string", .F. , .F., 0 ) 
cSoap += WSSoapValue("PARTICIPANTID", ::cPARTICIPANTID, cPARTICIPANTID , "string", .T. , .F., 0 ) 
cSoap += WSSoapValue("EVALUATORID", ::cEVALUATORID, cEVALUATORID , "string", .T. , .F., 0 ) 
cSoap += WSSoapValue("AUTHOR", ::cAUTHOR, cAUTHOR , "string", .F. , .F., 0 ) 
cSoap += WSSoapValue("LEVELSKILL", ::oWSLEVELSKILL, oWSLEVELSKILL , "SKILLS", .F. , .F., 0 ) 
cSoap += "</PUTLEVELSKILL>"

oXmlRet := SvcSoapCall(	Self,cSoap,; 
	"http://ipt-rogerio/PUTLEVELSKILL",; 
	"DOCUMENT","http://ipt-rogerio/",,"1.031217",; 
	"http://ipt-rogerio/ws/RHKNOWLEDGE.apw")

::Init()
::lPUTLEVELSKILLRESULT :=  WSAdvValue( oXmlRet,"_PUTLEVELSKILLRESPONSE:_PUTLEVELSKILLRESULT:TEXT","boolean",NIL,NIL,NIL,NIL,NIL) 

END WSMETHOD

oXmlRet := NIL
Return .T.

/* -------------------------------------------------------------------------------
WSDL Method PUTMENTOR of Service WSRHKNOWLEDGE
------------------------------------------------------------------------------- */

WSMETHOD PUTMENTOR WSSEND cUSERCODE,cPARTICIPANTID,cCODMENTOR,cCODMAP,cVERSION WSRECEIVE cPUTMENTORRESULT WSCLIENT WSRHKNOWLEDGE
Local cSoap := "" , oXmlRet

BEGIN WSMETHOD

cSoap += '<PUTMENTOR xmlns="http://ipt-rogerio/">'
cSoap += WSSoapValue("USERCODE", ::cUSERCODE, cUSERCODE , "string", .T. , .F., 0 ) 
cSoap += WSSoapValue("PARTICIPANTID", ::cPARTICIPANTID, cPARTICIPANTID , "string", .T. , .F., 0 ) 
cSoap += WSSoapValue("CODMENTOR", ::cCODMENTOR, cCODMENTOR , "string", .F. , .F., 0 ) 
cSoap += WSSoapValue("CODMAP", ::cCODMAP, cCODMAP , "string", .F. , .F., 0 ) 
cSoap += WSSoapValue("VERSION", ::cVERSION, cVERSION , "string", .T. , .F., 0 ) 
cSoap += "</PUTMENTOR>"

oXmlRet := SvcSoapCall(	Self,cSoap,; 
	"http://ipt-rogerio/PUTMENTOR",; 
	"DOCUMENT","http://ipt-rogerio/",,"1.031217",; 
	"http://ipt-rogerio/ws/RHKNOWLEDGE.apw")

::Init()
::cPUTMENTORRESULT   :=  WSAdvValue( oXmlRet,"_PUTMENTORRESPONSE:_PUTMENTORRESULT:TEXT","string",NIL,NIL,NIL,NIL,NIL) 

END WSMETHOD

oXmlRet := NIL
Return .T.

/* -------------------------------------------------------------------------------
WSDL Method SETEVALUATORREVISION of Service WSRHKNOWLEDGE
------------------------------------------------------------------------------- */

WSMETHOD SETEVALUATORREVISION WSSEND cUSERCODE,oWSLEVELSKILL WSRECEIVE cSETEVALUATORREVISIONRESULT WSCLIENT WSRHKNOWLEDGE
Local cSoap := "" , oXmlRet

BEGIN WSMETHOD

cSoap += '<SETEVALUATORREVISION xmlns="http://ipt-rogerio/">'
cSoap += WSSoapValue("USERCODE", ::cUSERCODE, cUSERCODE , "string", .T. , .F., 0 ) 
cSoap += WSSoapValue("LEVELSKILL", ::oWSLEVELSKILL, oWSLEVELSKILL , "SKILLS", .F. , .F., 0 ) 
cSoap += "</SETEVALUATORREVISION>"

oXmlRet := SvcSoapCall(	Self,cSoap,; 
	"http://ipt-rogerio/SETEVALUATORREVISION",; 
	"DOCUMENT","http://ipt-rogerio/",,"1.031217",; 
	"http://ipt-rogerio/ws/RHKNOWLEDGE.apw")

::Init()
::cSETEVALUATORREVISIONRESULT :=  WSAdvValue( oXmlRet,"_SETEVALUATORREVISIONRESPONSE:_SETEVALUATORREVISIONRESULT:TEXT","string",NIL,NIL,NIL,NIL,NIL) 

END WSMETHOD

oXmlRet := NIL
Return .T.

/* -------------------------------------------------------------------------------
WSDL Method SETTOREVISION of Service WSRHKNOWLEDGE
------------------------------------------------------------------------------- */

WSMETHOD SETTOREVISION WSSEND cUSERCODE,cCODMAP,cPARTICIPANTID,cEVALUATORID,cAUTHOR WSRECEIVE cSETTOREVISIONRESULT WSCLIENT WSRHKNOWLEDGE
Local cSoap := "" , oXmlRet

BEGIN WSMETHOD

cSoap += '<SETTOREVISION xmlns="http://ipt-rogerio/">'
cSoap += WSSoapValue("USERCODE", ::cUSERCODE, cUSERCODE , "string", .T. , .F., 0 ) 
cSoap += WSSoapValue("CODMAP", ::cCODMAP, cCODMAP , "string", .F. , .F., 0 ) 
cSoap += WSSoapValue("PARTICIPANTID", ::cPARTICIPANTID, cPARTICIPANTID , "string", .T. , .F., 0 ) 
cSoap += WSSoapValue("EVALUATORID", ::cEVALUATORID, cEVALUATORID , "string", .T. , .F., 0 ) 
cSoap += WSSoapValue("AUTHOR", ::cAUTHOR, cAUTHOR , "string", .F. , .F., 0 ) 
cSoap += "</SETTOREVISION>"

oXmlRet := SvcSoapCall(	Self,cSoap,; 
	"http://ipt-rogerio/SETTOREVISION",; 
	"DOCUMENT","http://ipt-rogerio/",,"1.031217",; 
	"http://ipt-rogerio/ws/RHKNOWLEDGE.apw")

::Init()
::cSETTOREVISIONRESULT :=  WSAdvValue( oXmlRet,"_SETTOREVISIONRESPONSE:_SETTOREVISIONRESULT:TEXT","string",NIL,NIL,NIL,NIL,NIL) 

END WSMETHOD

oXmlRet := NIL
Return .T.


/* -------------------------------------------------------------------------------
WSDL Data Structure ARRAYOFCOMPETENCELIST
------------------------------------------------------------------------------- */

WSSTRUCT RHKNOWLEDGE_ARRAYOFCOMPETENCELIST
	WSDATA   oWSCOMPETENCELIST         AS RHKNOWLEDGE_COMPETENCELIST OPTIONAL
	WSDATA   _HEADOUT                  AS Array of String
	
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT RHKNOWLEDGE_ARRAYOFCOMPETENCELIST
	::Init()
Return Self

WSMETHOD INIT WSCLIENT RHKNOWLEDGE_ARRAYOFCOMPETENCELIST
	::oWSCOMPETENCELIST    := {} // Array Of  RHKNOWLEDGE_COMPETENCELIST():New()
Return

WSMETHOD CLONE WSCLIENT RHKNOWLEDGE_ARRAYOFCOMPETENCELIST
	Local oClone := RHKNOWLEDGE_ARRAYOFCOMPETENCELIST():NEW()
	oClone:oWSCOMPETENCELIST := NIL
	If ::oWSCOMPETENCELIST <> NIL 
		oClone:oWSCOMPETENCELIST := {}
		aEval( ::oWSCOMPETENCELIST , { |x| aadd( oClone:oWSCOMPETENCELIST , x:Clone() ) } )
	Endif 
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT RHKNOWLEDGE_ARRAYOFCOMPETENCELIST
	Local nRElem1, oNodes1, nTElem1
	::Init()
	If oResponse = NIL ; Return ; Endif 
	oNodes1 :=  WSAdvValue( oResponse,"_COMPETENCELIST","COMPETENCELIST",{},NIL,.T.,"O",NIL) 
	nTElem1 := len(oNodes1)
	For nRElem1 := 1 to nTElem1 
		If !WSIsNilNode( oNodes1[nRElem1] )
			aadd(::oWSCOMPETENCELIST , RHKNOWLEDGE_COMPETENCELIST():New() )
			::oWSCOMPETENCELIST[len(::oWSCOMPETENCELIST)]:SoapRecv(oNodes1[nRElem1])
		Endif
	Next
Return

/* -------------------------------------------------------------------------------
WSDL Data Structure ARRAYOFMAPPARTICIPANT
------------------------------------------------------------------------------- */

WSSTRUCT RHKNOWLEDGE_ARRAYOFMAPPARTICIPANT
	WSDATA   oWSMAPPARTICIPANT         AS RHKNOWLEDGE_MAPPARTICIPANT OPTIONAL
	WSDATA   _HEADOUT                  AS Array of String
	
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT RHKNOWLEDGE_ARRAYOFMAPPARTICIPANT
	::Init()
Return Self

WSMETHOD INIT WSCLIENT RHKNOWLEDGE_ARRAYOFMAPPARTICIPANT
	::oWSMAPPARTICIPANT    := {} // Array Of  RHKNOWLEDGE_MAPPARTICIPANT():New()
Return

WSMETHOD CLONE WSCLIENT RHKNOWLEDGE_ARRAYOFMAPPARTICIPANT
	Local oClone := RHKNOWLEDGE_ARRAYOFMAPPARTICIPANT():NEW()
	oClone:oWSMAPPARTICIPANT := NIL
	If ::oWSMAPPARTICIPANT <> NIL 
		oClone:oWSMAPPARTICIPANT := {}
		aEval( ::oWSMAPPARTICIPANT , { |x| aadd( oClone:oWSMAPPARTICIPANT , x:Clone() ) } )
	Endif 
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT RHKNOWLEDGE_ARRAYOFMAPPARTICIPANT
	Local nRElem1, oNodes1, nTElem1
	::Init()
	If oResponse = NIL ; Return ; Endif 
	oNodes1 :=  WSAdvValue( oResponse,"_MAPPARTICIPANT","MAPPARTICIPANT",{},NIL,.T.,"O",NIL) 
	nTElem1 := len(oNodes1)
	For nRElem1 := 1 to nTElem1 
		If !WSIsNilNode( oNodes1[nRElem1] )
			aadd(::oWSMAPPARTICIPANT , RHKNOWLEDGE_MAPPARTICIPANT():New() )
			::oWSMAPPARTICIPANT[len(::oWSMAPPARTICIPANT)]:SoapRecv(oNodes1[nRElem1])
		Endif
	Next
Return

/* -------------------------------------------------------------------------------
WSDL Data Structure ITEMLIST
------------------------------------------------------------------------------- */

WSSTRUCT RHKNOWLEDGE_ITEMLIST
	WSDATA   cAUTHOR                   AS string OPTIONAL
	WSDATA   cCOMPETENCEDESC           AS string OPTIONAL
	WSDATA   cCOMPETENCEID             AS string
	WSDATA   cCOMPETENCEITEM           AS string OPTIONAL
	WSDATA   cCOMPETENCEITEMDESC       AS string OPTIONAL
	WSDATA   cCOMPETENCETREE           AS string OPTIONAL
	WSDATA   oWSLISTOFITEM             AS RHKNOWLEDGE_ARRAYOFITEMLIST OPTIONAL
	WSDATA   oWSLISTOFSKILLS           AS RHKNOWLEDGE_ARRAYOFSKILLSLIST OPTIONAL
	WSDATA   _HEADOUT                  AS Array of String
	
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT RHKNOWLEDGE_ITEMLIST
	::Init()
Return Self

WSMETHOD INIT WSCLIENT RHKNOWLEDGE_ITEMLIST
Return

WSMETHOD CLONE WSCLIENT RHKNOWLEDGE_ITEMLIST
	Local oClone := RHKNOWLEDGE_ITEMLIST():NEW()
	oClone:cAUTHOR              := ::cAUTHOR
	oClone:cCOMPETENCEDESC      := ::cCOMPETENCEDESC
	oClone:cCOMPETENCEID        := ::cCOMPETENCEID
	oClone:cCOMPETENCEITEM      := ::cCOMPETENCEITEM
	oClone:cCOMPETENCEITEMDESC  := ::cCOMPETENCEITEMDESC
	oClone:cCOMPETENCETREE      := ::cCOMPETENCETREE
	oClone:oWSLISTOFITEM        := IIF(::oWSLISTOFITEM = NIL , NIL , ::oWSLISTOFITEM:Clone() )
	oClone:oWSLISTOFSKILLS      := IIF(::oWSLISTOFSKILLS = NIL , NIL , ::oWSLISTOFSKILLS:Clone() )
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT RHKNOWLEDGE_ITEMLIST
	Local oNode7
	Local oNode8
	::Init()
	If oResponse = NIL ; Return ; Endif 
	::cAUTHOR            :=  WSAdvValue( oResponse,"_AUTHOR","string",NIL,NIL,NIL,"S",NIL) 
	::cCOMPETENCEDESC    :=  WSAdvValue( oResponse,"_COMPETENCEDESC","string",NIL,NIL,NIL,"S",NIL) 
	::cCOMPETENCEID      :=  WSAdvValue( oResponse,"_COMPETENCEID","string",NIL,"Property cCOMPETENCEID as s:string on SOAP Response not found.",NIL,"S",NIL) 
	::cCOMPETENCEITEM    :=  WSAdvValue( oResponse,"_COMPETENCEITEM","string",NIL,NIL,NIL,"S",NIL) 
	::cCOMPETENCEITEMDESC :=  WSAdvValue( oResponse,"_COMPETENCEITEMDESC","string",NIL,NIL,NIL,"S",NIL) 
	::cCOMPETENCETREE    :=  WSAdvValue( oResponse,"_COMPETENCETREE","string",NIL,NIL,NIL,"S",NIL) 
	oNode7 :=  WSAdvValue( oResponse,"_LISTOFITEM","ARRAYOFITEMLIST",NIL,NIL,NIL,"O",NIL) 
	If oNode7 != NIL
		::oWSLISTOFITEM := RHKNOWLEDGE_ARRAYOFITEMLIST():New()
		::oWSLISTOFITEM:SoapRecv(oNode7)
	EndIf
	oNode8 :=  WSAdvValue( oResponse,"_LISTOFSKILLS","ARRAYOFSKILLSLIST",NIL,NIL,NIL,"O",NIL) 
	If oNode8 != NIL
		::oWSLISTOFSKILLS := RHKNOWLEDGE_ARRAYOFSKILLSLIST():New()
		::oWSLISTOFSKILLS:SoapRecv(oNode8)
	EndIf
Return

/* -------------------------------------------------------------------------------
WSDL Data Structure ARRAYOFMENTORS
------------------------------------------------------------------------------- */

WSSTRUCT RHKNOWLEDGE_ARRAYOFMENTORS
	WSDATA   oWSMENTORS                AS RHKNOWLEDGE_MENTORS OPTIONAL
	WSDATA   _HEADOUT                  AS Array of String
	
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT RHKNOWLEDGE_ARRAYOFMENTORS
	::Init()
Return Self

WSMETHOD INIT WSCLIENT RHKNOWLEDGE_ARRAYOFMENTORS
	::oWSMENTORS           := {} // Array Of  RHKNOWLEDGE_MENTORS():New()
Return

WSMETHOD CLONE WSCLIENT RHKNOWLEDGE_ARRAYOFMENTORS
	Local oClone := RHKNOWLEDGE_ARRAYOFMENTORS():NEW()
	oClone:oWSMENTORS := NIL
	If ::oWSMENTORS <> NIL 
		oClone:oWSMENTORS := {}
		aEval( ::oWSMENTORS , { |x| aadd( oClone:oWSMENTORS , x:Clone() ) } )
	Endif 
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT RHKNOWLEDGE_ARRAYOFMENTORS
	Local nRElem1, oNodes1, nTElem1
	::Init()
	If oResponse = NIL ; Return ; Endif 
	oNodes1 :=  WSAdvValue( oResponse,"_MENTORS","MENTORS",{},NIL,.T.,"O",NIL) 
	nTElem1 := len(oNodes1)
	For nRElem1 := 1 to nTElem1 
		If !WSIsNilNode( oNodes1[nRElem1] )
			aadd(::oWSMENTORS , RHKNOWLEDGE_MENTORS():New() )
			::oWSMENTORS[len(::oWSMENTORS)]:SoapRecv(oNodes1[nRElem1])
		Endif
	Next
Return

/* -------------------------------------------------------------------------------
WSDL Data Structure ARRAYOFSKILLSLIST
------------------------------------------------------------------------------- */

WSSTRUCT RHKNOWLEDGE_ARRAYOFSKILLSLIST
	WSDATA   oWSSKILLSLIST             AS RHKNOWLEDGE_SKILLSLIST OPTIONAL
	WSDATA   _HEADOUT                  AS Array of String
	
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT RHKNOWLEDGE_ARRAYOFSKILLSLIST
	::Init()
Return Self

WSMETHOD INIT WSCLIENT RHKNOWLEDGE_ARRAYOFSKILLSLIST
	::oWSSKILLSLIST        := {} // Array Of  RHKNOWLEDGE_SKILLSLIST():New()
Return

WSMETHOD CLONE WSCLIENT RHKNOWLEDGE_ARRAYOFSKILLSLIST
	Local oClone := RHKNOWLEDGE_ARRAYOFSKILLSLIST():NEW()
	oClone:oWSSKILLSLIST := NIL
	If ::oWSSKILLSLIST <> NIL 
		oClone:oWSSKILLSLIST := {}
		aEval( ::oWSSKILLSLIST , { |x| aadd( oClone:oWSSKILLSLIST , x:Clone() ) } )
	Endif 
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT RHKNOWLEDGE_ARRAYOFSKILLSLIST
	Local nRElem1, oNodes1, nTElem1
	::Init()
	If oResponse = NIL ; Return ; Endif 
	oNodes1 :=  WSAdvValue( oResponse,"_SKILLSLIST","SKILLSLIST",{},NIL,.T.,"O",NIL) 
	nTElem1 := len(oNodes1)
	For nRElem1 := 1 to nTElem1 
		If !WSIsNilNode( oNodes1[nRElem1] )
			aadd(::oWSSKILLSLIST , RHKNOWLEDGE_SKILLSLIST():New() )
			::oWSSKILLSLIST[len(::oWSSKILLSLIST)]:SoapRecv(oNodes1[nRElem1])
		Endif
	Next
Return

/* -------------------------------------------------------------------------------
WSDL Data Structure HEADERPARTICIPANT
------------------------------------------------------------------------------- */

WSSTRUCT RHKNOWLEDGE_HEADERPARTICIPANT
	WSDATA   cAUTHOR                   AS string OPTIONAL
	WSDATA   cCODMAP                   AS string
	WSDATA   cCODPERIOD                AS string OPTIONAL
	WSDATA   dLASTAPPROVEMAP           AS date OPTIONAL
	WSDATA   dLASTUPDATEMAP            AS date OPTIONAL
	WSDATA   cMAPDESC                  AS string OPTIONAL
	WSDATA   cPARTAREA                 AS string OPTIONAL
	WSDATA   cPARTEVALUATOR            AS string OPTIONAL
	WSDATA   cPARTEVALUATORID          AS string OPTIONAL
	WSDATA   cPARTFUNCTION             AS string OPTIONAL
	WSDATA   cPARTID                   AS string
	WSDATA   cPARTLEADER               AS string OPTIONAL
	WSDATA   cPARTLEADERID             AS string OPTIONAL
	WSDATA   cPARTNAME                 AS string
	WSDATA   cPERIODDESC               AS string OPTIONAL
	WSDATA   cVERSION                  AS string OPTIONAL
	WSDATA   _HEADOUT                  AS Array of String
	
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT RHKNOWLEDGE_HEADERPARTICIPANT
	::Init()
Return Self

WSMETHOD INIT WSCLIENT RHKNOWLEDGE_HEADERPARTICIPANT
Return

WSMETHOD CLONE WSCLIENT RHKNOWLEDGE_HEADERPARTICIPANT
	Local oClone := RHKNOWLEDGE_HEADERPARTICIPANT():NEW()
	oClone:cAUTHOR              := ::cAUTHOR
	oClone:cCODMAP              := ::cCODMAP
	oClone:cCODPERIOD           := ::cCODPERIOD
	oClone:dLASTAPPROVEMAP      := ::dLASTAPPROVEMAP
	oClone:dLASTUPDATEMAP       := ::dLASTUPDATEMAP
	oClone:cMAPDESC             := ::cMAPDESC
	oClone:cPARTAREA            := ::cPARTAREA
	oClone:cPARTEVALUATOR       := ::cPARTEVALUATOR
	oClone:cPARTEVALUATORID     := ::cPARTEVALUATORID
	oClone:cPARTFUNCTION        := ::cPARTFUNCTION
	oClone:cPARTID              := ::cPARTID
	oClone:cPARTLEADER          := ::cPARTLEADER
	oClone:cPARTLEADERID        := ::cPARTLEADERID
	oClone:cPARTNAME            := ::cPARTNAME
	oClone:cPERIODDESC          := ::cPERIODDESC
	oClone:cVERSION             := ::cVERSION
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT RHKNOWLEDGE_HEADERPARTICIPANT
	::Init()
	If oResponse = NIL ; Return ; Endif 
	::cAUTHOR            :=  WSAdvValue( oResponse,"_AUTHOR","string",NIL,NIL,NIL,"S",NIL) 
	::cCODMAP            :=  WSAdvValue( oResponse,"_CODMAP","string",NIL,"Property cCODMAP as s:string on SOAP Response not found.",NIL,"S",NIL) 
	::cCODPERIOD         :=  WSAdvValue( oResponse,"_CODPERIOD","string",NIL,NIL,NIL,"S",NIL) 
	::dLASTAPPROVEMAP    :=  WSAdvValue( oResponse,"_LASTAPPROVEMAP","date",NIL,NIL,NIL,"D",NIL) 
	::dLASTUPDATEMAP     :=  WSAdvValue( oResponse,"_LASTUPDATEMAP","date",NIL,NIL,NIL,"D",NIL) 
	::cMAPDESC           :=  WSAdvValue( oResponse,"_MAPDESC","string",NIL,NIL,NIL,"S",NIL) 
	::cPARTAREA          :=  WSAdvValue( oResponse,"_PARTAREA","string",NIL,NIL,NIL,"S",NIL) 
	::cPARTEVALUATOR     :=  WSAdvValue( oResponse,"_PARTEVALUATOR","string",NIL,NIL,NIL,"S",NIL) 
	::cPARTEVALUATORID   :=  WSAdvValue( oResponse,"_PARTEVALUATORID","string",NIL,NIL,NIL,"S",NIL) 
	::cPARTFUNCTION      :=  WSAdvValue( oResponse,"_PARTFUNCTION","string",NIL,NIL,NIL,"S",NIL) 
	::cPARTID            :=  WSAdvValue( oResponse,"_PARTID","string",NIL,"Property cPARTID as s:string on SOAP Response not found.",NIL,"S",NIL) 
	::cPARTLEADER        :=  WSAdvValue( oResponse,"_PARTLEADER","string",NIL,NIL,NIL,"S",NIL) 
	::cPARTLEADERID      :=  WSAdvValue( oResponse,"_PARTLEADERID","string",NIL,NIL,NIL,"S",NIL) 
	::cPARTNAME          :=  WSAdvValue( oResponse,"_PARTNAME","string",NIL,"Property cPARTNAME as s:string on SOAP Response not found.",NIL,"S",NIL) 
	::cPERIODDESC        :=  WSAdvValue( oResponse,"_PERIODDESC","string",NIL,NIL,NIL,"S",NIL) 
	::cVERSION           :=  WSAdvValue( oResponse,"_VERSION","string",NIL,NIL,NIL,"S",NIL) 
Return

/* -------------------------------------------------------------------------------
WSDL Data Structure ARRAYOFHISTORYMAP
------------------------------------------------------------------------------- */

WSSTRUCT RHKNOWLEDGE_ARRAYOFHISTORYMAP
	WSDATA   oWSHISTORYMAP             AS RHKNOWLEDGE_HISTORYMAP OPTIONAL
	WSDATA   _HEADOUT                  AS Array of String
	
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT RHKNOWLEDGE_ARRAYOFHISTORYMAP
	::Init()
Return Self

WSMETHOD INIT WSCLIENT RHKNOWLEDGE_ARRAYOFHISTORYMAP
	::oWSHISTORYMAP        := {} // Array Of  RHKNOWLEDGE_HISTORYMAP():New()
Return

WSMETHOD CLONE WSCLIENT RHKNOWLEDGE_ARRAYOFHISTORYMAP
	Local oClone := RHKNOWLEDGE_ARRAYOFHISTORYMAP():NEW()
	oClone:oWSHISTORYMAP := NIL
	If ::oWSHISTORYMAP <> NIL 
		oClone:oWSHISTORYMAP := {}
		aEval( ::oWSHISTORYMAP , { |x| aadd( oClone:oWSHISTORYMAP , x:Clone() ) } )
	Endif 
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT RHKNOWLEDGE_ARRAYOFHISTORYMAP
	Local nRElem1, oNodes1, nTElem1
	::Init()
	If oResponse = NIL ; Return ; Endif 
	oNodes1 :=  WSAdvValue( oResponse,"_HISTORYMAP","HISTORYMAP",{},NIL,.T.,"O",NIL) 
	nTElem1 := len(oNodes1)
	For nRElem1 := 1 to nTElem1 
		If !WSIsNilNode( oNodes1[nRElem1] )
			aadd(::oWSHISTORYMAP , RHKNOWLEDGE_HISTORYMAP():New() )
			::oWSHISTORYMAP[len(::oWSHISTORYMAP)]:SoapRecv(oNodes1[nRElem1])
		Endif
	Next
Return

/* -------------------------------------------------------------------------------
WSDL Data Structure MAPPARTICIPANT
------------------------------------------------------------------------------- */

WSSTRUCT RHKNOWLEDGE_MAPPARTICIPANT
	WSDATA   cAUTHOR                   AS string OPTIONAL
	WSDATA   cCODMAP                   AS string
	WSDATA   cEVALUATEDID              AS string OPTIONAL
	WSDATA   cEVALUATEDNAME            AS string OPTIONAL
	WSDATA   cEVALUATORID              AS string OPTIONAL
	WSDATA   cEVALUATORNAME            AS string OPTIONAL
	WSDATA   lEXISTITEM                AS boolean OPTIONAL
	WSDATA   dLASTAPPROVE              AS date OPTIONAL
	WSDATA   cMAPDESCRIPTION           AS string OPTIONAL
	WSDATA   cMAPVERSION               AS string OPTIONAL
	WSDATA   cPERIOD                   AS string OPTIONAL
	WSDATA   cSTATUSITEM               AS string OPTIONAL
	WSDATA   _HEADOUT                  AS Array of String
	
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT RHKNOWLEDGE_MAPPARTICIPANT
	::Init()
Return Self

WSMETHOD INIT WSCLIENT RHKNOWLEDGE_MAPPARTICIPANT
Return

WSMETHOD CLONE WSCLIENT RHKNOWLEDGE_MAPPARTICIPANT
	Local oClone := RHKNOWLEDGE_MAPPARTICIPANT():NEW()
	oClone:cAUTHOR              := ::cAUTHOR
	oClone:cCODMAP              := ::cCODMAP
	oClone:cEVALUATEDID         := ::cEVALUATEDID
	oClone:cEVALUATEDNAME       := ::cEVALUATEDNAME
	oClone:cEVALUATORID         := ::cEVALUATORID
	oClone:cEVALUATORNAME       := ::cEVALUATORNAME
	oClone:lEXISTITEM           := ::lEXISTITEM
	oClone:dLASTAPPROVE         := ::dLASTAPPROVE
	oClone:cMAPDESCRIPTION      := ::cMAPDESCRIPTION
	oClone:cMAPVERSION          := ::cMAPVERSION
	oClone:cPERIOD              := ::cPERIOD
	oClone:cSTATUSITEM          := ::cSTATUSITEM
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT RHKNOWLEDGE_MAPPARTICIPANT
	::Init()
	If oResponse = NIL ; Return ; Endif 
	::cAUTHOR            :=  WSAdvValue( oResponse,"_AUTHOR","string",NIL,NIL,NIL,"S",NIL) 
	::cCODMAP            :=  WSAdvValue( oResponse,"_CODMAP","string",NIL,"Property cCODMAP as s:string on SOAP Response not found.",NIL,"S",NIL) 
	::cEVALUATEDID       :=  WSAdvValue( oResponse,"_EVALUATEDID","string",NIL,NIL,NIL,"S",NIL) 
	::cEVALUATEDNAME     :=  WSAdvValue( oResponse,"_EVALUATEDNAME","string",NIL,NIL,NIL,"S",NIL) 
	::cEVALUATORID       :=  WSAdvValue( oResponse,"_EVALUATORID","string",NIL,NIL,NIL,"S",NIL) 
	::cEVALUATORNAME     :=  WSAdvValue( oResponse,"_EVALUATORNAME","string",NIL,NIL,NIL,"S",NIL) 
	::lEXISTITEM         :=  WSAdvValue( oResponse,"_EXISTITEM","boolean",NIL,NIL,NIL,"L",NIL) 
	::dLASTAPPROVE       :=  WSAdvValue( oResponse,"_LASTAPPROVE","date",NIL,NIL,NIL,"D",NIL) 
	::cMAPDESCRIPTION    :=  WSAdvValue( oResponse,"_MAPDESCRIPTION","string",NIL,NIL,NIL,"S",NIL) 
	::cMAPVERSION        :=  WSAdvValue( oResponse,"_MAPVERSION","string",NIL,NIL,NIL,"S",NIL) 
	::cPERIOD            :=  WSAdvValue( oResponse,"_PERIOD","string",NIL,NIL,NIL,"S",NIL) 
	::cSTATUSITEM        :=  WSAdvValue( oResponse,"_STATUSITEM","string",NIL,NIL,NIL,"S",NIL) 
Return

/* -------------------------------------------------------------------------------
WSDL Data Structure SKILLS
------------------------------------------------------------------------------- */

WSSTRUCT RHKNOWLEDGE_SKILLS
	WSDATA   oWSSKILLS                 AS RHKNOWLEDGE_ARRAYOFSKILLLEVEL OPTIONAL
	WSDATA   _HEADOUT                  AS Array of String
	
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPSEND
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT RHKNOWLEDGE_SKILLS
	::Init()
Return Self

WSMETHOD INIT WSCLIENT RHKNOWLEDGE_SKILLS
Return

WSMETHOD CLONE WSCLIENT RHKNOWLEDGE_SKILLS
	Local oClone := RHKNOWLEDGE_SKILLS():NEW()
	oClone:oWSSKILLS            := IIF(::oWSSKILLS = NIL , NIL , ::oWSSKILLS:Clone() )
Return oClone

WSMETHOD SOAPSEND WSCLIENT RHKNOWLEDGE_SKILLS
	Local cSoap := ""
	cSoap += WSSoapValue("SKILLS", ::oWSSKILLS, ::oWSSKILLS , "ARRAYOFSKILLLEVEL", .F. , .F., 0 ) 
Return cSoap

/* -------------------------------------------------------------------------------
WSDL Data Structure COMPETENCELIST
------------------------------------------------------------------------------- */

WSSTRUCT RHKNOWLEDGE_COMPETENCELIST
	WSDATA   cCOMPETENCEAUTHOR         AS string OPTIONAL
	WSDATA   cCOMPETENCEDESC           AS string OPTIONAL
	WSDATA   cCOMPETENCEID             AS string
	WSDATA   cCOMPETENCESTATUS         AS string OPTIONAL
	WSDATA   cCOMPETENCETYPE           AS string OPTIONAL
	WSDATA   lSUBITEM                  AS boolean
	WSDATA   _HEADOUT                  AS Array of String
	
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT RHKNOWLEDGE_COMPETENCELIST
	::Init()
Return Self

WSMETHOD INIT WSCLIENT RHKNOWLEDGE_COMPETENCELIST
Return

WSMETHOD CLONE WSCLIENT RHKNOWLEDGE_COMPETENCELIST
	Local oClone := RHKNOWLEDGE_COMPETENCELIST():NEW()
	oClone:cCOMPETENCEAUTHOR    := ::cCOMPETENCEAUTHOR
	oClone:cCOMPETENCEDESC      := ::cCOMPETENCEDESC
	oClone:cCOMPETENCEID        := ::cCOMPETENCEID
	oClone:cCOMPETENCESTATUS    := ::cCOMPETENCESTATUS
	oClone:cCOMPETENCETYPE      := ::cCOMPETENCETYPE
	oClone:lSUBITEM             := ::lSUBITEM
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT RHKNOWLEDGE_COMPETENCELIST
	::Init()
	If oResponse = NIL ; Return ; Endif 
	::cCOMPETENCEAUTHOR  :=  WSAdvValue( oResponse,"_COMPETENCEAUTHOR","string",NIL,NIL,NIL,"S",NIL) 
	::cCOMPETENCEDESC    :=  WSAdvValue( oResponse,"_COMPETENCEDESC","string",NIL,NIL,NIL,"S",NIL) 
	::cCOMPETENCEID      :=  WSAdvValue( oResponse,"_COMPETENCEID","string",NIL,"Property cCOMPETENCEID as s:string on SOAP Response not found.",NIL,"S",NIL) 
	::cCOMPETENCESTATUS  :=  WSAdvValue( oResponse,"_COMPETENCESTATUS","string",NIL,NIL,NIL,"S",NIL) 
	::cCOMPETENCETYPE    :=  WSAdvValue( oResponse,"_COMPETENCETYPE","string",NIL,NIL,NIL,"S",NIL) 
	::lSUBITEM           :=  WSAdvValue( oResponse,"_SUBITEM","boolean",NIL,"Property lSUBITEM as s:boolean on SOAP Response not found.",NIL,"L",NIL) 
Return

/* -------------------------------------------------------------------------------
WSDL Data Structure ARRAYOFITEMLIST
------------------------------------------------------------------------------- */

WSSTRUCT RHKNOWLEDGE_ARRAYOFITEMLIST
	WSDATA   oWSITEMLIST               AS RHKNOWLEDGE_ITEMLIST OPTIONAL
	WSDATA   _HEADOUT                  AS Array of String
	
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT RHKNOWLEDGE_ARRAYOFITEMLIST
	::Init()
Return Self

WSMETHOD INIT WSCLIENT RHKNOWLEDGE_ARRAYOFITEMLIST
	::oWSITEMLIST          := {} // Array Of  RHKNOWLEDGE_ITEMLIST():New()
Return

WSMETHOD CLONE WSCLIENT RHKNOWLEDGE_ARRAYOFITEMLIST
	Local oClone := RHKNOWLEDGE_ARRAYOFITEMLIST():NEW()
	oClone:oWSITEMLIST := NIL
	If ::oWSITEMLIST <> NIL 
		oClone:oWSITEMLIST := {}
		aEval( ::oWSITEMLIST , { |x| aadd( oClone:oWSITEMLIST , x:Clone() ) } )
	Endif 
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT RHKNOWLEDGE_ARRAYOFITEMLIST
	Local nRElem1, oNodes1, nTElem1
	::Init()
	If oResponse = NIL ; Return ; Endif 
	oNodes1 :=  WSAdvValue( oResponse,"_ITEMLIST","ITEMLIST",{},NIL,.T.,"O",NIL) 
	nTElem1 := len(oNodes1)
	For nRElem1 := 1 to nTElem1 
		If !WSIsNilNode( oNodes1[nRElem1] )
			aadd(::oWSITEMLIST , RHKNOWLEDGE_ITEMLIST():New() )
			::oWSITEMLIST[len(::oWSITEMLIST)]:SoapRecv(oNodes1[nRElem1])
		Endif
	Next
Return

/* -------------------------------------------------------------------------------
WSDL Data Structure MENTORS
------------------------------------------------------------------------------- */

WSSTRUCT RHKNOWLEDGE_MENTORS
	WSDATA   cMENTORID                 AS string OPTIONAL
	WSDATA   cMENTORNAME               AS string OPTIONAL
	WSDATA   _HEADOUT                  AS Array of String
	
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT RHKNOWLEDGE_MENTORS
	::Init()
Return Self

WSMETHOD INIT WSCLIENT RHKNOWLEDGE_MENTORS
Return

WSMETHOD CLONE WSCLIENT RHKNOWLEDGE_MENTORS
	Local oClone := RHKNOWLEDGE_MENTORS():NEW()
	oClone:cMENTORID            := ::cMENTORID
	oClone:cMENTORNAME          := ::cMENTORNAME
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT RHKNOWLEDGE_MENTORS
	::Init()
	If oResponse = NIL ; Return ; Endif 
	::cMENTORID          :=  WSAdvValue( oResponse,"_MENTORID","string",NIL,NIL,NIL,"S",NIL) 
	::cMENTORNAME        :=  WSAdvValue( oResponse,"_MENTORNAME","string",NIL,NIL,NIL,"S",NIL) 
Return

/* -------------------------------------------------------------------------------
WSDL Data Structure SKILLSLIST
------------------------------------------------------------------------------- */

WSSTRUCT RHKNOWLEDGE_SKILLSLIST
	WSDATA   cEVALUATEDCOM             AS string OPTIONAL
	WSDATA   cEVALUATORCOM             AS string OPTIONAL
	WSDATA   oWSLISTOFLEVEL            AS RHKNOWLEDGE_ARRAYOFLEVELLIST OPTIONAL
	WSDATA   cSKILLAUTHOR              AS string OPTIONAL
	WSDATA   dSKILLDATEANSWER          AS date OPTIONAL
	WSDATA   dSKILLDATETOANSWER        AS date OPTIONAL
	WSDATA   cSKILLDESCRIPTION         AS string OPTIONAL
	WSDATA   cSKILLID                  AS string
	WSDATA   cSKILLLEVEL               AS string OPTIONAL
	WSDATA   cSKILLLEVELANSWER         AS string OPTIONAL
	WSDATA   cSKILLSTATUS              AS string OPTIONAL
	WSDATA   _HEADOUT                  AS Array of String
	
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT RHKNOWLEDGE_SKILLSLIST
	::Init()
Return Self

WSMETHOD INIT WSCLIENT RHKNOWLEDGE_SKILLSLIST
Return

WSMETHOD CLONE WSCLIENT RHKNOWLEDGE_SKILLSLIST
	Local oClone := RHKNOWLEDGE_SKILLSLIST():NEW()
	oClone:cEVALUATEDCOM        := ::cEVALUATEDCOM
	oClone:cEVALUATORCOM        := ::cEVALUATORCOM
	oClone:oWSLISTOFLEVEL       := IIF(::oWSLISTOFLEVEL = NIL , NIL , ::oWSLISTOFLEVEL:Clone() )
	oClone:cSKILLAUTHOR         := ::cSKILLAUTHOR
	oClone:dSKILLDATEANSWER     := ::dSKILLDATEANSWER
	oClone:dSKILLDATETOANSWER   := ::dSKILLDATETOANSWER
	oClone:cSKILLDESCRIPTION    := ::cSKILLDESCRIPTION
	oClone:cSKILLID             := ::cSKILLID
	oClone:cSKILLLEVEL          := ::cSKILLLEVEL
	oClone:cSKILLLEVELANSWER    := ::cSKILLLEVELANSWER
	oClone:cSKILLSTATUS         := ::cSKILLSTATUS
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT RHKNOWLEDGE_SKILLSLIST
	Local oNode3
	::Init()
	If oResponse = NIL ; Return ; Endif 
	::cEVALUATEDCOM      :=  WSAdvValue( oResponse,"_EVALUATEDCOM","string",NIL,NIL,NIL,"S",NIL) 
	::cEVALUATORCOM      :=  WSAdvValue( oResponse,"_EVALUATORCOM","string",NIL,NIL,NIL,"S",NIL) 
	oNode3 :=  WSAdvValue( oResponse,"_LISTOFLEVEL","ARRAYOFLEVELLIST",NIL,NIL,NIL,"O",NIL) 
	If oNode3 != NIL
		::oWSLISTOFLEVEL := RHKNOWLEDGE_ARRAYOFLEVELLIST():New()
		::oWSLISTOFLEVEL:SoapRecv(oNode3)
	EndIf
	::cSKILLAUTHOR       :=  WSAdvValue( oResponse,"_SKILLAUTHOR","string",NIL,NIL,NIL,"S",NIL) 
	::dSKILLDATEANSWER   :=  WSAdvValue( oResponse,"_SKILLDATEANSWER","date",NIL,NIL,NIL,"D",NIL) 
	::dSKILLDATETOANSWER :=  WSAdvValue( oResponse,"_SKILLDATETOANSWER","date",NIL,NIL,NIL,"D",NIL) 
	::cSKILLDESCRIPTION  :=  WSAdvValue( oResponse,"_SKILLDESCRIPTION","string",NIL,NIL,NIL,"S",NIL) 
	::cSKILLID           :=  WSAdvValue( oResponse,"_SKILLID","string",NIL,"Property cSKILLID as s:string on SOAP Response not found.",NIL,"S",NIL) 
	::cSKILLLEVEL        :=  WSAdvValue( oResponse,"_SKILLLEVEL","string",NIL,NIL,NIL,"S",NIL) 
	::cSKILLLEVELANSWER  :=  WSAdvValue( oResponse,"_SKILLLEVELANSWER","string",NIL,NIL,NIL,"S",NIL) 
	::cSKILLSTATUS       :=  WSAdvValue( oResponse,"_SKILLSTATUS","string",NIL,NIL,NIL,"S",NIL) 
Return

/* -------------------------------------------------------------------------------
WSDL Data Structure HISTORYMAP
------------------------------------------------------------------------------- */

WSSTRUCT RHKNOWLEDGE_HISTORYMAP
	WSDATA   oWSLISTOFPERIOD           AS RHKNOWLEDGE_ARRAYOFPERIODLIST OPTIONAL
	WSDATA   cPARTICIPANTID            AS string OPTIONAL
	WSDATA   cPARTICIPANTNAME          AS string OPTIONAL
	WSDATA   _HEADOUT                  AS Array of String
	
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT RHKNOWLEDGE_HISTORYMAP
	::Init()
Return Self

WSMETHOD INIT WSCLIENT RHKNOWLEDGE_HISTORYMAP
Return

WSMETHOD CLONE WSCLIENT RHKNOWLEDGE_HISTORYMAP
	Local oClone := RHKNOWLEDGE_HISTORYMAP():NEW()
	oClone:oWSLISTOFPERIOD      := IIF(::oWSLISTOFPERIOD = NIL , NIL , ::oWSLISTOFPERIOD:Clone() )
	oClone:cPARTICIPANTID       := ::cPARTICIPANTID
	oClone:cPARTICIPANTNAME     := ::cPARTICIPANTNAME
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT RHKNOWLEDGE_HISTORYMAP
	Local oNode1
	::Init()
	If oResponse = NIL ; Return ; Endif 
	oNode1 :=  WSAdvValue( oResponse,"_LISTOFPERIOD","ARRAYOFPERIODLIST",NIL,NIL,NIL,"O",NIL) 
	If oNode1 != NIL
		::oWSLISTOFPERIOD := RHKNOWLEDGE_ARRAYOFPERIODLIST():New()
		::oWSLISTOFPERIOD:SoapRecv(oNode1)
	EndIf
	::cPARTICIPANTID     :=  WSAdvValue( oResponse,"_PARTICIPANTID","string",NIL,NIL,NIL,"S",NIL) 
	::cPARTICIPANTNAME   :=  WSAdvValue( oResponse,"_PARTICIPANTNAME","string",NIL,NIL,NIL,"S",NIL) 
Return

/* -------------------------------------------------------------------------------
WSDL Data Structure ARRAYOFSKILLLEVEL
------------------------------------------------------------------------------- */

WSSTRUCT RHKNOWLEDGE_ARRAYOFSKILLLEVEL
	WSDATA   oWSSKILLLEVEL             AS RHKNOWLEDGE_SKILLLEVEL OPTIONAL
	WSDATA   _HEADOUT                  AS Array of String
	
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPSEND
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT RHKNOWLEDGE_ARRAYOFSKILLLEVEL
	::Init()
Return Self

WSMETHOD INIT WSCLIENT RHKNOWLEDGE_ARRAYOFSKILLLEVEL
	::oWSSKILLLEVEL        := {} // Array Of  RHKNOWLEDGE_SKILLLEVEL():New()
Return

WSMETHOD CLONE WSCLIENT RHKNOWLEDGE_ARRAYOFSKILLLEVEL
	Local oClone := RHKNOWLEDGE_ARRAYOFSKILLLEVEL():NEW()
	oClone:oWSSKILLLEVEL := NIL
	If ::oWSSKILLLEVEL <> NIL 
		oClone:oWSSKILLLEVEL := {}
		aEval( ::oWSSKILLLEVEL , { |x| aadd( oClone:oWSSKILLLEVEL , x:Clone() ) } )
	Endif 
Return oClone

WSMETHOD SOAPSEND WSCLIENT RHKNOWLEDGE_ARRAYOFSKILLLEVEL
	Local cSoap := ""
	aEval( ::oWSSKILLLEVEL , {|x| cSoap := cSoap  +  WSSoapValue("SKILLLEVEL", x , x , "SKILLLEVEL", .F. , .F., 0 )  } ) 
Return cSoap

/* -------------------------------------------------------------------------------
WSDL Data Structure ARRAYOFLEVELLIST
------------------------------------------------------------------------------- */

WSSTRUCT RHKNOWLEDGE_ARRAYOFLEVELLIST
	WSDATA   oWSLEVELLIST              AS RHKNOWLEDGE_LEVELLIST OPTIONAL
	WSDATA   _HEADOUT                  AS Array of String
	
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT RHKNOWLEDGE_ARRAYOFLEVELLIST
	::Init()
Return Self

WSMETHOD INIT WSCLIENT RHKNOWLEDGE_ARRAYOFLEVELLIST
	::oWSLEVELLIST         := {} // Array Of  RHKNOWLEDGE_LEVELLIST():New()
Return

WSMETHOD CLONE WSCLIENT RHKNOWLEDGE_ARRAYOFLEVELLIST
	Local oClone := RHKNOWLEDGE_ARRAYOFLEVELLIST():NEW()
	oClone:oWSLEVELLIST := NIL
	If ::oWSLEVELLIST <> NIL 
		oClone:oWSLEVELLIST := {}
		aEval( ::oWSLEVELLIST , { |x| aadd( oClone:oWSLEVELLIST , x:Clone() ) } )
	Endif 
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT RHKNOWLEDGE_ARRAYOFLEVELLIST
	Local nRElem1, oNodes1, nTElem1
	::Init()
	If oResponse = NIL ; Return ; Endif 
	oNodes1 :=  WSAdvValue( oResponse,"_LEVELLIST","LEVELLIST",{},NIL,.T.,"O",NIL) 
	nTElem1 := len(oNodes1)
	For nRElem1 := 1 to nTElem1 
		If !WSIsNilNode( oNodes1[nRElem1] )
			aadd(::oWSLEVELLIST , RHKNOWLEDGE_LEVELLIST():New() )
			::oWSLEVELLIST[len(::oWSLEVELLIST)]:SoapRecv(oNodes1[nRElem1])
		Endif
	Next
Return

/* -------------------------------------------------------------------------------
WSDL Data Structure ARRAYOFPERIODLIST
------------------------------------------------------------------------------- */

WSSTRUCT RHKNOWLEDGE_ARRAYOFPERIODLIST
	WSDATA   oWSPERIODLIST             AS RHKNOWLEDGE_PERIODLIST OPTIONAL
	WSDATA   _HEADOUT                  AS Array of String
	
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT RHKNOWLEDGE_ARRAYOFPERIODLIST
	::Init()
Return Self

WSMETHOD INIT WSCLIENT RHKNOWLEDGE_ARRAYOFPERIODLIST
	::oWSPERIODLIST        := {} // Array Of  RHKNOWLEDGE_PERIODLIST():New()
Return

WSMETHOD CLONE WSCLIENT RHKNOWLEDGE_ARRAYOFPERIODLIST
	Local oClone := RHKNOWLEDGE_ARRAYOFPERIODLIST():NEW()
	oClone:oWSPERIODLIST := NIL
	If ::oWSPERIODLIST <> NIL 
		oClone:oWSPERIODLIST := {}
		aEval( ::oWSPERIODLIST , { |x| aadd( oClone:oWSPERIODLIST , x:Clone() ) } )
	Endif 
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT RHKNOWLEDGE_ARRAYOFPERIODLIST
	Local nRElem1, oNodes1, nTElem1
	::Init()
	If oResponse = NIL ; Return ; Endif 
	oNodes1 :=  WSAdvValue( oResponse,"_PERIODLIST","PERIODLIST",{},NIL,.T.,"O",NIL) 
	nTElem1 := len(oNodes1)
	For nRElem1 := 1 to nTElem1 
		If !WSIsNilNode( oNodes1[nRElem1] )
			aadd(::oWSPERIODLIST , RHKNOWLEDGE_PERIODLIST():New() )
			::oWSPERIODLIST[len(::oWSPERIODLIST)]:SoapRecv(oNodes1[nRElem1])
		Endif
	Next
Return

/* -------------------------------------------------------------------------------
WSDL Data Structure SKILLLEVEL
------------------------------------------------------------------------------- */

WSSTRUCT RHKNOWLEDGE_SKILLLEVEL
	WSDATA   cCODMAP                   AS string
	WSDATA   cCOMPETENCEID             AS string
	WSDATA   cCOMPETENCEITEMID         AS string
	WSDATA   cEVALUATEDCOM             AS string OPTIONAL
	WSDATA   cEVALUATEDID              AS string
	WSDATA   cEVALUATORCOM             AS string OPTIONAL
	WSDATA   cEVALUATORID              AS string
	WSDATA   cITEMVERSION              AS string OPTIONAL
	WSDATA   cLEVELID                  AS string OPTIONAL
	WSDATA   cLEVELITEMID              AS string OPTIONAL
	WSDATA   cMAPACCESS                AS string
	WSDATA   cSKILLID                  AS string
	WSDATA   _HEADOUT                  AS Array of String
	
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPSEND
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT RHKNOWLEDGE_SKILLLEVEL
	::Init()
Return Self

WSMETHOD INIT WSCLIENT RHKNOWLEDGE_SKILLLEVEL
Return

WSMETHOD CLONE WSCLIENT RHKNOWLEDGE_SKILLLEVEL
	Local oClone := RHKNOWLEDGE_SKILLLEVEL():NEW()
	oClone:cCODMAP              := ::cCODMAP
	oClone:cCOMPETENCEID        := ::cCOMPETENCEID
	oClone:cCOMPETENCEITEMID    := ::cCOMPETENCEITEMID
	oClone:cEVALUATEDCOM        := ::cEVALUATEDCOM
	oClone:cEVALUATEDID         := ::cEVALUATEDID
	oClone:cEVALUATORCOM        := ::cEVALUATORCOM
	oClone:cEVALUATORID         := ::cEVALUATORID
	oClone:cITEMVERSION         := ::cITEMVERSION
	oClone:cLEVELID             := ::cLEVELID
	oClone:cLEVELITEMID         := ::cLEVELITEMID
	oClone:cMAPACCESS           := ::cMAPACCESS
	oClone:cSKILLID             := ::cSKILLID
Return oClone

WSMETHOD SOAPSEND WSCLIENT RHKNOWLEDGE_SKILLLEVEL
	Local cSoap := ""
	cSoap += WSSoapValue("CODMAP", ::cCODMAP, ::cCODMAP , "string", .T. , .F., 0 ) 
	cSoap += WSSoapValue("COMPETENCEID", ::cCOMPETENCEID, ::cCOMPETENCEID , "string", .T. , .F., 0 ) 
	cSoap += WSSoapValue("COMPETENCEITEMID", ::cCOMPETENCEITEMID, ::cCOMPETENCEITEMID , "string", .T. , .F., 0 ) 
	cSoap += WSSoapValue("EVALUATEDCOM", ::cEVALUATEDCOM, ::cEVALUATEDCOM , "string", .F. , .F., 0 ) 
	cSoap += WSSoapValue("EVALUATEDID", ::cEVALUATEDID, ::cEVALUATEDID , "string", .T. , .F., 0 ) 
	cSoap += WSSoapValue("EVALUATORCOM", ::cEVALUATORCOM, ::cEVALUATORCOM , "string", .F. , .F., 0 ) 
	cSoap += WSSoapValue("EVALUATORID", ::cEVALUATORID, ::cEVALUATORID , "string", .T. , .F., 0 ) 
	cSoap += WSSoapValue("ITEMVERSION", ::cITEMVERSION, ::cITEMVERSION , "string", .F. , .F., 0 ) 
	cSoap += WSSoapValue("LEVELID", ::cLEVELID, ::cLEVELID , "string", .F. , .F., 0 ) 
	cSoap += WSSoapValue("LEVELITEMID", ::cLEVELITEMID, ::cLEVELITEMID , "string", .F. , .F., 0 ) 
	cSoap += WSSoapValue("MAPACCESS", ::cMAPACCESS, ::cMAPACCESS , "string", .T. , .F., 0 ) 
	cSoap += WSSoapValue("SKILLID", ::cSKILLID, ::cSKILLID , "string", .T. , .F., 0 ) 
Return cSoap

/* -------------------------------------------------------------------------------
WSDL Data Structure LEVELLIST
------------------------------------------------------------------------------- */

WSSTRUCT RHKNOWLEDGE_LEVELLIST
	WSDATA   cLEVELDESCRIPTION         AS string OPTIONAL
	WSDATA   cLEVELID                  AS string
	WSDATA   _HEADOUT                  AS Array of String
	
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT RHKNOWLEDGE_LEVELLIST
	::Init()
Return Self

WSMETHOD INIT WSCLIENT RHKNOWLEDGE_LEVELLIST
Return

WSMETHOD CLONE WSCLIENT RHKNOWLEDGE_LEVELLIST
	Local oClone := RHKNOWLEDGE_LEVELLIST():NEW()
	oClone:cLEVELDESCRIPTION    := ::cLEVELDESCRIPTION
	oClone:cLEVELID             := ::cLEVELID
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT RHKNOWLEDGE_LEVELLIST
	::Init()
	If oResponse = NIL ; Return ; Endif 
	::cLEVELDESCRIPTION  :=  WSAdvValue( oResponse,"_LEVELDESCRIPTION","string",NIL,NIL,NIL,"S",NIL) 
	::cLEVELID           :=  WSAdvValue( oResponse,"_LEVELID","string",NIL,"Property cLEVELID as s:string on SOAP Response not found.",NIL,"S",NIL) 
Return

/* -------------------------------------------------------------------------------
WSDL Data Structure PERIODLIST
------------------------------------------------------------------------------- */

WSSTRUCT RHKNOWLEDGE_PERIODLIST
	WSDATA   cCODMAP                   AS string OPTIONAL
	WSDATA   cPERIODDESC               AS string OPTIONAL
	WSDATA   cPERIODID                 AS string OPTIONAL
	WSDATA   cVERSION                  AS string OPTIONAL
	WSDATA   _HEADOUT                  AS Array of String
	
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT RHKNOWLEDGE_PERIODLIST
	::Init()
Return Self

WSMETHOD INIT WSCLIENT RHKNOWLEDGE_PERIODLIST
Return

WSMETHOD CLONE WSCLIENT RHKNOWLEDGE_PERIODLIST
	Local oClone := RHKNOWLEDGE_PERIODLIST():NEW()
	oClone:cCODMAP              := ::cCODMAP
	oClone:cPERIODDESC          := ::cPERIODDESC
	oClone:cPERIODID            := ::cPERIODID
	oClone:cVERSION             := ::cVERSION
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT RHKNOWLEDGE_PERIODLIST
	::Init()
	If oResponse = NIL ; Return ; Endif 
	::cCODMAP            :=  WSAdvValue( oResponse,"_CODMAP","string",NIL,NIL,NIL,"S",NIL) 
	::cPERIODDESC        :=  WSAdvValue( oResponse,"_PERIODDESC","string",NIL,NIL,NIL,"S",NIL) 
	::cPERIODID          :=  WSAdvValue( oResponse,"_PERIODID","string",NIL,NIL,NIL,"S",NIL) 
	::cVERSION           :=  WSAdvValue( oResponse,"_VERSION","string",NIL,NIL,NIL,"S",NIL) 
Return


