#INCLUDE "PROTHEUS.CH"
#INCLUDE "APWEBSRV.CH"

/* ===============================================================================
WSDL Location    http://172.16.31.75:82/ws/RHMONITORING.apw?WSDL
Gerado em        08/14/12 10:56:23
Observações      Código-Fonte gerado por ADVPL WSDL Client 1.120703
                 Alterações neste arquivo podem causar funcionamento incorreto
                 e serão perdidas caso o código-fonte seja gerado novamente.
=============================================================================== */

User Function _HLRLYXX ; Return  // "dummy" function - Internal Use 

/* -------------------------------------------------------------------------------
WSDL Service WSRHMONITORING
------------------------------------------------------------------------------- */

WSCLIENT WSRHMONITORING

	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD RESET
	WSMETHOD CLONE
	WSMETHOD BROWSEMONITORING
	WSMETHOD GETMONITORING

	WSDATA   _URL                      AS String
	WSDATA   _HEADOUT                  AS Array of String
	WSDATA   _COOKIES                  AS Array of String
	WSDATA   cBRANCH                   AS string
	WSDATA   cREGISTRATION             AS string
	WSDATA   cFILTERFIELD              AS string
	WSDATA   cFILTERVALUE              AS string
	WSDATA   oWSBROWSEMONITORINGRESULT AS RHMONITORING_TMONITORINGBROWSE
	WSDATA   cCODE                     AS string
	WSDATA   oWSGETMONITORINGRESULT    AS RHMONITORING_TGRAPHICSBROWSE

ENDWSCLIENT

WSMETHOD NEW WSCLIENT WSRHMONITORING
::Init()
If !FindFunction("XMLCHILDEX")
	UserException("O Código-Fonte Client atual requer os executáveis do Protheus Build [7.00.120420A-20120529] ou superior. Atualize o Protheus ou gere o Código-Fonte novamente utilizando o Build atual.")
EndIf
Return Self

WSMETHOD INIT WSCLIENT WSRHMONITORING
	::oWSBROWSEMONITORINGRESULT := RHMONITORING_TMONITORINGBROWSE():New()
	::oWSGETMONITORINGRESULT := RHMONITORING_TGRAPHICSBROWSE():New()
Return

WSMETHOD RESET WSCLIENT WSRHMONITORING
	::cBRANCH            := NIL 
	::cREGISTRATION      := NIL 
	::cFILTERFIELD       := NIL 
	::cFILTERVALUE       := NIL 
	::oWSBROWSEMONITORINGRESULT := NIL 
	::cCODE              := NIL 
	::oWSGETMONITORINGRESULT := NIL 
	::Init()
Return

WSMETHOD CLONE WSCLIENT WSRHMONITORING
Local oClone := WSRHMONITORING():New()
	oClone:_URL          := ::_URL 
	oClone:cBRANCH       := ::cBRANCH
	oClone:cREGISTRATION := ::cREGISTRATION
	oClone:cFILTERFIELD  := ::cFILTERFIELD
	oClone:cFILTERVALUE  := ::cFILTERVALUE
	oClone:oWSBROWSEMONITORINGRESULT :=  IIF(::oWSBROWSEMONITORINGRESULT = NIL , NIL ,::oWSBROWSEMONITORINGRESULT:Clone() )
	oClone:cCODE         := ::cCODE
	oClone:oWSGETMONITORINGRESULT :=  IIF(::oWSGETMONITORINGRESULT = NIL , NIL ,::oWSGETMONITORINGRESULT:Clone() )
Return oClone

// WSDL Method BROWSEMONITORING of Service WSRHMONITORING

WSMETHOD BROWSEMONITORING WSSEND cBRANCH,cREGISTRATION,cFILTERFIELD,cFILTERVALUE WSRECEIVE oWSBROWSEMONITORINGRESULT WSCLIENT WSRHMONITORING
Local cSoap := "" , oXmlRet

BEGIN WSMETHOD

cSoap += '<BROWSEMONITORING xmlns="http://172.16.31.75:82/">'
cSoap += WSSoapValue("BRANCH", ::cBRANCH, cBRANCH , "string", .F. , .F., 0 , NIL, .F.) 
cSoap += WSSoapValue("REGISTRATION", ::cREGISTRATION, cREGISTRATION , "string", .F. , .F., 0 , NIL, .F.) 
cSoap += WSSoapValue("FILTERFIELD", ::cFILTERFIELD, cFILTERFIELD , "string", .F. , .F., 0 , NIL, .F.) 
cSoap += WSSoapValue("FILTERVALUE", ::cFILTERVALUE, cFILTERVALUE , "string", .F. , .F., 0 , NIL, .F.) 
cSoap += "</BROWSEMONITORING>"

oXmlRet := SvcSoapCall(	Self,cSoap,; 
	"http://172.16.31.75:82/BROWSEMONITORING",; 
	"DOCUMENT","http://172.16.31.75:82/",,"1.031217",; 
	"http://172.16.31.75:82/ws/RHMONITORING.apw")

::Init()
::oWSBROWSEMONITORINGRESULT:SoapRecv( WSAdvValue( oXmlRet,"_BROWSEMONITORINGRESPONSE:_BROWSEMONITORINGRESULT","TMONITORINGBROWSE",NIL,NIL,NIL,NIL,NIL,NIL) )

END WSMETHOD

oXmlRet := NIL
Return .T.

// WSDL Method GETMONITORING of Service WSRHMONITORING

WSMETHOD GETMONITORING WSSEND cCODE WSRECEIVE oWSGETMONITORINGRESULT WSCLIENT WSRHMONITORING
Local cSoap := "" , oXmlRet

BEGIN WSMETHOD

cSoap += '<GETMONITORING xmlns="http://172.16.31.75:82/">'
cSoap += WSSoapValue("CODE", ::cCODE, cCODE , "string", .F. , .F., 0 , NIL, .F.) 
cSoap += "</GETMONITORING>"

oXmlRet := SvcSoapCall(	Self,cSoap,; 
	"http://172.16.31.75:82/GETMONITORING",; 
	"DOCUMENT","http://172.16.31.75:82/",,"1.031217",; 
	"http://172.16.31.75:82/ws/RHMONITORING.apw")

::Init()
::oWSGETMONITORINGRESULT:SoapRecv( WSAdvValue( oXmlRet,"_GETMONITORINGRESPONSE:_GETMONITORINGRESULT","TGRAPHICSBROWSE",NIL,NIL,NIL,NIL,NIL,NIL) )

END WSMETHOD

oXmlRet := NIL
Return .T.


// WSDL Data Structure TMONITORINGBROWSE

WSSTRUCT RHMONITORING_TMONITORINGBROWSE
	WSDATA   oWSITENS                  AS RHMONITORING_ARRAYOFTMONITORINGLIST OPTIONAL
	WSDATA   _HEADOUT                  AS Array of String
	
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT RHMONITORING_TMONITORINGBROWSE
	::Init()
Return Self

WSMETHOD INIT WSCLIENT RHMONITORING_TMONITORINGBROWSE
Return

WSMETHOD CLONE WSCLIENT RHMONITORING_TMONITORINGBROWSE
	Local oClone := RHMONITORING_TMONITORINGBROWSE():NEW()
	oClone:oWSITENS             := IIF(::oWSITENS = NIL , NIL , ::oWSITENS:Clone() )
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT RHMONITORING_TMONITORINGBROWSE
	Local oNode1
	::Init()
	If oResponse = NIL ; Return ; Endif 
	oNode1 :=  WSAdvValue( oResponse,"_ITENS","ARRAYOFTMONITORINGLIST",NIL,NIL,NIL,"O",NIL,NIL) 
	If oNode1 != NIL
		::oWSITENS := RHMONITORING_ARRAYOFTMONITORINGLIST():New()
		::oWSITENS:SoapRecv(oNode1)
	EndIf
Return

// WSDL Data Structure TGRAPHICSBROWSE

WSSTRUCT RHMONITORING_TGRAPHICSBROWSE
	WSDATA   cDESCRIPSELEC             AS string
	WSDATA   cENDDATESELEC             AS string
	WSDATA   oWSITENS                  AS RHMONITORING_ARRAYOFTGRAPHICSLIST OPTIONAL
	WSDATA   _HEADOUT                  AS Array of String
	
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT RHMONITORING_TGRAPHICSBROWSE
	::Init()
Return Self

WSMETHOD INIT WSCLIENT RHMONITORING_TGRAPHICSBROWSE
Return

WSMETHOD CLONE WSCLIENT RHMONITORING_TGRAPHICSBROWSE
	Local oClone := RHMONITORING_TGRAPHICSBROWSE():NEW()
	oClone:cDESCRIPSELEC        := ::cDESCRIPSELEC
	oClone:cENDDATESELEC        := ::cENDDATESELEC
	oClone:oWSITENS             := IIF(::oWSITENS = NIL , NIL , ::oWSITENS:Clone() )
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT RHMONITORING_TGRAPHICSBROWSE
	Local oNode3
	::Init()
	If oResponse = NIL ; Return ; Endif 
	::cDESCRIPSELEC      :=  WSAdvValue( oResponse,"_DESCRIPSELEC","string",NIL,"Property cDESCRIPSELEC as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::cENDDATESELEC      :=  WSAdvValue( oResponse,"_ENDDATESELEC","string",NIL,"Property cENDDATESELEC as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	oNode3 :=  WSAdvValue( oResponse,"_ITENS","ARRAYOFTGRAPHICSLIST",NIL,NIL,NIL,"O",NIL,NIL) 
	If oNode3 != NIL
		::oWSITENS := RHMONITORING_ARRAYOFTGRAPHICSLIST():New()
		::oWSITENS:SoapRecv(oNode3)
	EndIf
Return

// WSDL Data Structure ARRAYOFTMONITORINGLIST

WSSTRUCT RHMONITORING_ARRAYOFTMONITORINGLIST
	WSDATA   oWSTMONITORINGLIST        AS RHMONITORING_TMONITORINGLIST OPTIONAL
	WSDATA   _HEADOUT                  AS Array of String
	
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT RHMONITORING_ARRAYOFTMONITORINGLIST
	::Init()
Return Self

WSMETHOD INIT WSCLIENT RHMONITORING_ARRAYOFTMONITORINGLIST
	::oWSTMONITORINGLIST   := {} // Array Of  RHMONITORING_TMONITORINGLIST():New()
Return

WSMETHOD CLONE WSCLIENT RHMONITORING_ARRAYOFTMONITORINGLIST
	Local oClone := RHMONITORING_ARRAYOFTMONITORINGLIST():NEW()
	oClone:oWSTMONITORINGLIST := NIL
	If ::oWSTMONITORINGLIST <> NIL 
		oClone:oWSTMONITORINGLIST := {}
		aEval( ::oWSTMONITORINGLIST , { |x| aadd( oClone:oWSTMONITORINGLIST , x:Clone() ) } )
	Endif 
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT RHMONITORING_ARRAYOFTMONITORINGLIST
	Local nRElem1, oNodes1, nTElem1
	::Init()
	If oResponse = NIL ; Return ; Endif 
	oNodes1 :=  WSAdvValue( oResponse,"_TMONITORINGLIST","TMONITORINGLIST",{},NIL,.T.,"O",NIL,NIL) 
	nTElem1 := len(oNodes1)
	For nRElem1 := 1 to nTElem1 
		If !WSIsNilNode( oNodes1[nRElem1] )
			aadd(::oWSTMONITORINGLIST , RHMONITORING_TMONITORINGLIST():New() )
			::oWSTMONITORINGLIST[len(::oWSTMONITORINGLIST)]:SoapRecv(oNodes1[nRElem1])
		Endif
	Next
Return

// WSDL Data Structure ARRAYOFTGRAPHICSLIST

WSSTRUCT RHMONITORING_ARRAYOFTGRAPHICSLIST
	WSDATA   oWSTGRAPHICSLIST          AS RHMONITORING_TGRAPHICSLIST OPTIONAL
	WSDATA   _HEADOUT                  AS Array of String
	
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT RHMONITORING_ARRAYOFTGRAPHICSLIST
	::Init()
Return Self

WSMETHOD INIT WSCLIENT RHMONITORING_ARRAYOFTGRAPHICSLIST
	::oWSTGRAPHICSLIST     := {} // Array Of  RHMONITORING_TGRAPHICSLIST():New()
Return

WSMETHOD CLONE WSCLIENT RHMONITORING_ARRAYOFTGRAPHICSLIST
	Local oClone := RHMONITORING_ARRAYOFTGRAPHICSLIST():NEW()
	oClone:oWSTGRAPHICSLIST := NIL
	If ::oWSTGRAPHICSLIST <> NIL 
		oClone:oWSTGRAPHICSLIST := {}
		aEval( ::oWSTGRAPHICSLIST , { |x| aadd( oClone:oWSTGRAPHICSLIST , x:Clone() ) } )
	Endif 
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT RHMONITORING_ARRAYOFTGRAPHICSLIST
	Local nRElem1, oNodes1, nTElem1
	::Init()
	If oResponse = NIL ; Return ; Endif 
	oNodes1 :=  WSAdvValue( oResponse,"_TGRAPHICSLIST","TGRAPHICSLIST",{},NIL,.T.,"O",NIL,NIL) 
	nTElem1 := len(oNodes1)
	For nRElem1 := 1 to nTElem1 
		If !WSIsNilNode( oNodes1[nRElem1] )
			aadd(::oWSTGRAPHICSLIST , RHMONITORING_TGRAPHICSLIST():New() )
			::oWSTGRAPHICSLIST[len(::oWSTGRAPHICSLIST)]:SoapRecv(oNodes1[nRElem1])
		Endif
	Next
Return

// WSDL Data Structure TMONITORINGLIST

WSSTRUCT RHMONITORING_TMONITORINGLIST
	WSDATA   cCODE                     AS string
	WSDATA   cDESCRIPTION              AS string
	WSDATA   cENDDATE                  AS string
	WSDATA   cSTARTDATE                AS string
	WSDATA   _HEADOUT                  AS Array of String
	
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT RHMONITORING_TMONITORINGLIST
	::Init()
Return Self

WSMETHOD INIT WSCLIENT RHMONITORING_TMONITORINGLIST
Return

WSMETHOD CLONE WSCLIENT RHMONITORING_TMONITORINGLIST
	Local oClone := RHMONITORING_TMONITORINGLIST():NEW()
	oClone:cCODE                := ::cCODE
	oClone:cDESCRIPTION         := ::cDESCRIPTION
	oClone:cENDDATE             := ::cENDDATE
	oClone:cSTARTDATE           := ::cSTARTDATE
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT RHMONITORING_TMONITORINGLIST
	::Init()
	If oResponse = NIL ; Return ; Endif 
	::cCODE              :=  WSAdvValue( oResponse,"_CODE","string",NIL,"Property cCODE as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::cDESCRIPTION       :=  WSAdvValue( oResponse,"_DESCRIPTION","string",NIL,"Property cDESCRIPTION as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::cENDDATE           :=  WSAdvValue( oResponse,"_ENDDATE","string",NIL,"Property cENDDATE as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::cSTARTDATE         :=  WSAdvValue( oResponse,"_STARTDATE","string",NIL,"Property cSTARTDATE as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
Return

// WSDL Data Structure TGRAPHICSLIST

WSSTRUCT RHMONITORING_TGRAPHICSLIST
	WSDATA   cDATRET                   AS string
	WSDATA   cTIPOAV                   AS string
	WSDATA   _HEADOUT                  AS Array of String
	
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT RHMONITORING_TGRAPHICSLIST
	::Init()
Return Self

WSMETHOD INIT WSCLIENT RHMONITORING_TGRAPHICSLIST
Return

WSMETHOD CLONE WSCLIENT RHMONITORING_TGRAPHICSLIST
	Local oClone := RHMONITORING_TGRAPHICSLIST():NEW()
	oClone:cDATRET              := ::cDATRET
	oClone:cTIPOAV              := ::cTIPOAV
Return oClone

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT RHMONITORING_TGRAPHICSLIST
	::Init()
	If oResponse = NIL ; Return ; Endif 
	::cDATRET            :=  WSAdvValue( oResponse,"_DATRET","string",NIL,"Property cDATRET as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
	::cTIPOAV            :=  WSAdvValue( oResponse,"_TIPOAV","string",NIL,"Property cTIPOAV as s:string on SOAP Response not found.",NIL,"S",NIL,NIL) 
Return