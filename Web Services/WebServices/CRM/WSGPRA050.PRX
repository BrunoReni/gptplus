#INCLUDE "PROTHEUS.CH"
#INCLUDE "APWEBSRV.CH"

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Tipos de Questao³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
#DEFINE UNICA_ESCOLHA 		"1"		//Unica Escolha
#DEFINE MULTIPLA_ESCOLHA 	"2"		//Multipla Escolha
#DEFINE DISSERTATIVA 		"3"		//Dissertativa

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Tipos de exibicao da alternativa³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
#DEFINE SEQUENCIAL 			"1"		//Sequencial
#DEFINE COLUNAS 			"2"		//Colunas
#DEFINE LINHAS 				"3"		//Linhas

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³WSGPRA050 ºAutor  ³Luiz Felipe Couto    º Data ³  02/03/05   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Este fonte possui as funcoes utilizadas para inclusao,      º±±
±±º          ³ alteracao, exclusao e busca de Grupos.                      º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºParametros³                                                             º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³SIGAGPR     						                           º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±ºAnalista  ³ Data/Bops/Ver ³Manutencao Efetuada                      	   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Definicao do WebServices de Grupo³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
WSSERVICE GPRGroup DESCRIPTION "" //NAMESPACE "http://.apw"
	WSDATA UserCode			AS String									//Codigo do Usuario (seguranca WS)
	WSDATA QueryAddWhere	AS String OPTIONAL							//Filtro
	WSDATA PageLen			AS Integer OPTIONAL							//Limite de registros por Pagina (paginacao)
	WSDATA PageFirst		AS Integer OPTIONAL							//Primeira Pagina (paginacao)
	WSDATA IndexKey 		AS String OPTIONAL							//Ordenacao
	WSDATA GroupCode		AS String									//Codigo do Grupo
	WSDATA ListOfGroup 		AS Array Of GroupView						//Lista de Grupos
	WSDATA Group			AS GroupView								//Grupo

	WSMETHOD BrwGroup DESCRIPTION ""
	WSMETHOD GetGroup DESCRIPTION ""
ENDWSSERVICE

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³BrwGroup  ºAutor  ³Luiz Felipe Couto    º Data ³  02/03/05   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Retorna os Grupos cadastrados no sistema.                   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºParametros³ ExpC1 : Codigo do Usuario WS                                º±±
±±º          ³ ExpC2 : Filtro                                              º±±
±±º          ³ ExpN3 : Limite de registros por pagina (paginacao)          º±±
±±º          ³ ExpN4 : Primeira pagina (paginacao)                         º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³SIGAGPR     						                           º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±ºAnalista  ³ Data/Bops/Ver ³Manutencao Efetuada                      	   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
WSMETHOD BrwGroup WSRECEIVE UserCode, QueryAddWhere, PageLen, PageFirst, IndexKey WSSEND ListOfGroup WSSERVICE GPRGroup

Local lRetorno 				:= .T.					//Retorno da Funcao
Local aArea					:= GetArea()			//Area atual
Local cAliasSKE 			:= "SKE"				//Alias da tabela SKE
Local cQuery 				:= ""					//String para armazenagem da Query
Local aStruSKE 				:= {}					//Estrutura da tabela SKE
Local nI					:= 0					//Variavel de apoio
Local nJ					:= 0					//Variavel de apoio

SKE->( DbSetOrder( 1 ) )

DEFAULT ::QueryAddWhere 	:= ""					//Filtro
DEFAULT ::PageLen 			:= 0					//Limite de registros por pagina (paginacao)
DEFAULT ::PageFirst 		:= 0					//Primeira pagina (paginacao)
DEFAULT ::IndexKey 			:= SKE->( IndexKey() )	//Ordenacao

If ::UserCode == "MSALPHA"
	aStruSKE 	:= SKE->( DbStruct() )
	cAliasSKE 	:= GetNextAlias()
	
	cQuery 	:= "SELECT * "
	cQuery 	+= "FROM " + RetSqlName( "SKE" ) + " SKE "
	cQuery 	+= "WHERE "
	cQuery 	+= "SKE.KE_FILIAL = '" + xFilial( "SKE" ) + "' AND "
	cQuery 	+= "SKE.D_E_L_E_T_ = ' ' "
	cQuery 	:= WsQueryAdd( cQuery, ::QueryAddWhere )
	cQuery 	+= "ORDER BY " + WsSqlOrder( ::IndexKey )
	
	cQuery 	:= ChangeQuery( cQuery )
	
	DbUseArea( .T., "TOPCONN", TcGenQry( ,, cQuery ), cAliasSKE, .T., .T. )
	
	For nI := 1 To Len( aStruSKE )
		If aStruSKE[nI][2] <> "C" .AND. aStruSKE[nI][2] <> "M"
			TcSetField( cAliasSKE, aStruSKE[nI][1], aStruSKE[nI][2], aStruSKE[nI][3], aStruSKE[nI][4] )
		EndIf
	Next nI
	
	nI := 0
	
	While !( cAliasSKE )->( EOF() )
		nI++
	
		If ::PageFirst == 0 .OR. nI >= ::PageFirst
			If nJ == 0
				::ListOfGroup := {}
			EndIf
			
			aAdd( ::ListOfGroup, WsClassNew( "GroupView" ) )

			nJ++

			GetGroup( @::ListOfGroup[nJ], cAliasSKE )
		EndIf
	
		If nJ >= ::PageLen .And. ::PageLen <> 0
			Exit
		EndIf
		
		( cAliasSKE )->( DbSkip() )
	EndDo
	
	( cAliasSKE )->( DbCloseArea() )
Else
	lRetorno := .F.
	SetSoapFault( "BRWGROUP", "UserCode invalido." )
EndIf

RestArea( aArea )

Return lRetorno

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³GetGroup  ºAutor  ³Luiz Felipe Couto    º Data ³  02/03/05   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Retorna o Grupo do sistema.                                 º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºParametros³ ExpC1 : Codigo do Usuario WS                                º±±
±±º          ³ ExpC2 : Codigo do Grupo                                     º±±
±±º          ³ ExpC3 : Filtro                                              º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³SIGAGPR     						                           º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±ºAnalista  ³ Data/Bops/Ver ³Manutencao Efetuada                      	   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
WSMETHOD GetGroup WSRECEIVE UserCode, GroupCode, QueryAddWhere WSSEND Group WSSERVICE GPRGroup

Local lRetorno 				:= .T.			//Retorno da Funcao
Local aArea					:= GetArea()	//Area atual
Local cAliasSKE				:= "SKE"		//Alias da tabela SKE
Local cAliasSKF				:= "SKF"		//Alias da tabela SKF
Local cAliasSKG				:= "SKG"		//Alias da tabela SKG
Local cAliasSKH				:= "SKH"		//Alias da tabela SKH
Local cAliasSKI				:= "SKI"		//Alias da tabela SKI
Local nLenGroup				:= 0			//Ultima posicao do array de Grupo
Local nLenQst				:= 0			//Ultima posicao do array de Questao
Local nLenOption			:= 0			//Ultima posicao do array de Opcao
Local nLenAlt				:= 0			//Ultima posicao do array de Alternativa
Local nLenSubGroup			:= 0			//Ultima posicao do array de SubGrupo
Local nPosSubGroup			:= 0			//Posicao no array do SubGrupo
Local oObjTmp				:= 0			//Objeto de apoio (temporario)

DEFAULT ::QueryAddWhere 	:= ""			//Filtro

If ::UserCode == "MSALPHA"
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Tabelas:                     ³
	//³SKE - Grupo                  ³
	//³SKF - Grupo x SubGrupo       ³
	//³SKG - Questao                ³
	//³SKH - Alternativa            ³
	//³SKI - Linha e Coluna         ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Busca dados do Grupo³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	( cAliasSKE )->( DbSetOrder( 1 ) )

	If ( cAliasSKE )->( MsSeek( xFilial( "SKE" ) + ::GroupCode ) )
		::Group := WsClassNew( "GroupView" )
		
		GetGroup( @::Group, cAliasSKE )

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Busca dados do SubGrupo³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		( cAliasSKF )->( DbSetOrder( 1 ) )
		
		If ( cAliasSKF )->( MsSeek( xFilial( "SKF" ) + ( cAliasSKE )->KE_CODGRP ) )
			::Group:ListOfSubGroup := {}
			
			While !( cAliasSKF )->( EOF() ) .AND. ;
				( cAliasSKF )->KF_FILIAL == xFilial( "SKF" ) .AND. ;
				( cAliasSKF )->KF_CODGRP == ( cAliasSKE )->KE_CODGRP
				
				aAdd( ::Group:ListOfSubGroup, WsClassNew( "SubGroupView" ) )
				nLenSubGroup := Len( ::Group:ListOfSubGroup )
				
				GetSubGroup( @::Group:ListOfSubGroup[nLenSubGroup], cAliasSKF )
				
				( cAliasSKF )->( DbSkip() )
			EndDo
		EndIf

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Busca dados da questao³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		( cAliasSKG )->( DbSetOrder( 2 ) )
		
		If ( cAliasSKG )->( MsSeek( xFilial( "SKG" ) + ( cAliasSKE )->KE_CODGRP ) )
			While !( cAliasSKG )->( EOF() ) .AND. ;
				( cAliasSKG )->KG_FILIAL == xFilial( "SKG" ) .AND. ;
				( cAliasSKG )->KG_CODGRP == ( cAliasSKE )->KE_CODGRP
				
				If Empty( ( cAliasSKG )->KG_CODSUBG )
					oObjTmp := ::Group
					
					If Empty( oObjTmp:ListOfQuestion )
						oObjTmp:ListOfQuestion := {}
					EndIf
				Else
					nPosSubGroup := aScan( ::Group:ListOfSubGroup, { |x| x:Code == ( cAliasSKG )->KG_CODSUBG } )
					
					If nPosSubGroup > 0
						oObjTmp := ::Group:ListOfSubGroup[nPosSubGroup]
						
						If Empty( oObjTmp:ListOfQuestion )
							oObjTmp:ListOfQuestion := {}
						EndIf
					EndIf
				EndIf
				
				aAdd( oObjTmp:ListOfQuestion, WsClassNew( "QuestionView" ) )
				nLenQst := Len( oObjTmp:ListOfQuestion )
				
				GetQuestion( @oObjTmp:ListOfQuestion[nLenQst], cAliasSKG, cAliasSKE, cAliasSKF )

				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³Multipla Escolha em Linhas ou Colunas³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				If ( cAliasSKG )->KG_TIPOQST == MULTIPLA_ESCOLHA .AND. ;
					( ( cAliasSKG )->KG_TIPEXIB == LINHAS .OR. ;
					( cAliasSKG )->KG_TIPEXIB == COLUNAS )
					
					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³Linhas ou Colunas³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					( cAliasSKI )->( DbSetOrder( 1 ) )
					
					If ( cAliasSKI )->( MsSeek( xFilial( "SKI" ) + ;
						( cAliasSKG )->KG_CODQST ) )
						
						oObjTmp:ListOfQuestion[nLenQst]:ListOfOption := {}
						
						While !( cAliasSKI )->( EOF() ) .AND. ;
							( cAliasSKI )->KI_FILIAL == xFilial( "SKI" ) .AND. ;
							( cAliasSKI )->KI_CODQST == ( cAliasSKG )->KG_CODQST
							
							aAdd( oObjTmp:ListOfQuestion[nLenQst]:ListOfOption, WsClassNew( "OptionView" ) )
							nLenOption := Len( oObjTmp:ListOfQuestion[nLenQst]:ListOfOption )
							
							GetOption( @oObjTmp:ListOfQuestion[nLenQst]:ListOfOption[nLenOption], cAliasSKI )
							
							( cAliasSKI )->( DbSkip() )
						EndDo
					EndIf
				EndIf
			
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³Unica Escolha e Multipla Escolha³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				If ( cAliasSKG )->KG_TIPOQST == UNICA_ESCOLHA .OR. ;
					( cAliasSKG )->KG_TIPOQST == MULTIPLA_ESCOLHA

					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³Busca Alternativas³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					( cAliasSKH )->( DbSetOrder( 1 ) )
					
					If ( cAliasSKH )->( MsSeek( xFilial( "SKH" ) + ( cAliasSKG )->KG_CODQST ) )
						oObjTmp:ListOfQuestion[nLenQst]:ListOfAlternative := {}
						
						While !( cAliasSKH )->( EOF() ) .AND. ;
							( cAliasSKH )->KH_FILIAL == xFilial( "SKH" ) .AND. ;
							( cAliasSKH )->KH_CODQST == ( cAliasSKG )->KG_CODQST
							
							aAdd( oObjTmp:ListOfQuestion[nLenQst]:ListOfAlternative, WsClassNew( "AlternativeView" ) )
							nLenAlt := Len( oObjTmp:ListOfQuestion[nLenQst]:ListOfAlternative )
							
							GetAlternative( @oObjTmp:ListOfQuestion[nLenQst]:ListOfAlternative[nLenAlt], cAliasSKH )
							
							( cAliasSKH )->( DbSkip() )
						EndDo
					EndIf
				EndIf

				( cAliasSKG )->( DbSkip() )
			EndDo
		EndIf
	Else
		lRetorno := .F.
		SetSoapFault( "GETGROUP", "Grupo inválido." )
	EndIf
Else
	lRetorno := .F.
	SetSoapFault( "GETGROUP", "UserCode invalido." )
EndIf

RestArea( aArea )

Return lRetorno