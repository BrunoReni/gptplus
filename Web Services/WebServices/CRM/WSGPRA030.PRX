#INCLUDE "PROTHEUS.CH"
#INCLUDE "APWEBSRV.CH"

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Tipos de Questao³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
#DEFINE UNICA_ESCOLHA 		"1"		//Unica Escolha
#DEFINE MULTIPLA_ESCOLHA 	"2"		//Multipla Escolha
#DEFINE DISSERTATIVA 		"3"		//Dissertativa

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Tipos de exibicao da alternativa³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
#DEFINE SEQUENCIAL 			"1"		//Sequencial
#DEFINE COLUNAS 			"2"		//Colunas
#DEFINE LINHAS 				"3"		//Linhas

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³WSGPRA030 ºAutor  ³Luiz Felipe Couto    º Data ³  02/03/05   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Este fonte possui as funcoes utilizadas para inclusao,      º±±
±±º          ³ alteracao, exclusao e busca de Questoes.                    º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºParametros³                                                             º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³SIGAGPR     						                           º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±ºAnalista  ³ Data/Bops/Ver ³Manutencao Efetuada                      	   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Definicao do WebServices de Questoes³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
WSSERVICE GPRQuestion DESCRIPTION "" //NAMESPACE "http://.apw"
	WSDATA UserCode				AS String									//Codigo do Usuario (seguranca WS)
	WSDATA QueryAddWhere		AS String OPTIONAL							//Filtro
	WSDATA PageLen				AS Integer OPTIONAL							//Limite de registros por Pagina (paginacao)
	WSDATA PageFirst			AS Integer OPTIONAL							//Primeira Pagina (paginacao)
	WSDATA IndexKey 			AS String OPTIONAL							//Ordenacao
	WSDATA QuestionCode			AS String									//Codigo da Questao
	WSDATA ListOfQuestion 		AS Array Of QuestionView					//Lista de Questoes
	WSDATA Question				AS QuestionView								//Questao

	WSMETHOD BrwQuestion DESCRIPTION ""
	WSMETHOD GetQuestion DESCRIPTION ""
ENDWSSERVICE

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³BrwQuestioºAutor  ³Luiz Felipe Couto    º Data ³  02/03/05   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Retorna as Questoes cadastradas no sistema.                 º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºParametros³ ExpC1 : Codigo do Usuario WS                                º±±
±±º          ³ ExpC2 : Filtro                                              º±±
±±º          ³ ExpN3 : Limite de registros por pagina (paginacao)          º±±
±±º          ³ ExpN4 : Primeira pagina (paginacao)                         º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³SIGAGPR     						                           º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±ºAnalista  ³ Data/Bops/Ver ³Manutencao Efetuada                      	   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
WSMETHOD BrwQuestion WSRECEIVE UserCode, QueryAddWhere, PageLen, PageFirst, IndexKey WSSEND ListOfQuestion WSSERVICE GPRQuestion

Local lRetorno 				:= .T.					//Retorno da Funcao
Local aArea					:= GetArea()			//Area atual
Local cAliasSKE 			:= "SKE"				//Alias da tabela SKE
Local cAliasSKF 			:= "SKF"				//Alias da tabela SKF
Local cAliasSKG 			:= "SKG"				//Alias da tabela SKG
Local cQuery 				:= ""					//String para armazenagem da Query
Local aStruSKG 				:= {}					//Estrutura da tabela SKG
Local nI					:= 0					//Variavel de apoio
Local nJ					:= 0					//Variavel de apoio

SKG->( DbSetOrder( 1 ) )

DEFAULT ::QueryAddWhere 	:= ""					//Filtro
DEFAULT ::PageLen 			:= 0					//Limite de registros por pagina (paginacao)
DEFAULT ::PageFirst 		:= 0					//Primeira pagina (paginacao)
DEFAULT ::IndexKey 			:= SKG->( IndexKey() )	//Ordenacao

If ::UserCode == "MSALPHA"
	aStruSKG 	:= SKG->( DbStruct() )
	cAliasSKG 	:= GetNextAlias()
	
	cQuery 	:= "SELECT * "
	cQuery 	+= "FROM " + RetSqlName( "SKG" ) + " SKG "
	cQuery 	+= "WHERE "
	cQuery 	+= "SKG.KG_FILIAL = '" + xFilial( "SKG" ) + "' AND "
	cQuery 	+= "SKG.D_E_L_E_T_ = ' ' "
	cQuery 	:= WsQueryAdd( cQuery, ::QueryAddWhere )
	cQuery 	+= "ORDER BY " + WsSqlOrder( ::IndexKey )
	
	cQuery 	:= ChangeQuery( cQuery )
	
	DbUseArea( .T., "TOPCONN", TcGenQry( ,, cQuery ), cAliasSKG, .T., .T. )
	
	For nI := 1 To Len( aStruSKG )
		If aStruSKG[nI][2] <> "C" .AND. aStruSKG[nI][2] <> "M"
			TcSetField( cAliasSKG, aStruSKG[nI][1], aStruSKG[nI][2], aStruSKG[nI][3], aStruSKG[nI][4] )
		EndIf
	Next nI
	
	nI := 0
	
	While !( cAliasSKG )->( EOF() )
		nI++
	
		If ::PageFirst == 0 .OR. nI >= ::PageFirst
			If nJ == 0
				::ListOfQuestion := {}
			EndIf
			
			aAdd( ::ListOfQuestion, WsClassNew( "QuestionView" ) )

			nJ++

			GetQuestion( @::ListOfQuestion[nJ], cAliasSKG, cAliasSKE, cAliasSKF )
		EndIf
	
		If nJ >= ::PageLen .And. ::PageLen <> 0
			Exit
		EndIf
		
		( cAliasSKG )->( DbSkip() )
	EndDo
	
	( cAliasSKG )->( DbCloseArea() )
Else
	lRetorno := .F.
	SetSoapFault( "BRWQUESTION", "UserCode invalido." )
EndIf

RestArea( aArea )

Return lRetorno

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³GetQuestioºAutor  ³Luiz Felipe Couto    º Data ³  02/03/05   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Retorna a Questao do sistema.                               º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºParametros³ ExpC1 : Codigo do Usuario WS                                º±±
±±º          ³ ExpC2 : Codigo do Questionario                              º±±
±±º          ³ ExpC3 : Filtro                                              º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³SIGAGPR     						                           º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±ºAnalista  ³ Data/Bops/Ver ³Manutencao Efetuada                      	   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
WSMETHOD GetQuestion WSRECEIVE UserCode, QuestionCode, QueryAddWhere WSSEND Question WSSERVICE GPRQuestion

Local lRetorno 				:= .T.			//Retorno da Funcao
Local aArea					:= GetArea()	//Area atual
Local cAliasSKE				:= "SKE"		//Alias da tabela SKE
Local cAliasSKF				:= "SKF"		//Alias da tabela SKF
Local cAliasSKG				:= "SKG"		//Alias da tabela SKG
Local cAliasSKH				:= "SKH"		//Alias da tabela SKH
Local cAliasSKI				:= "SKI"		//Alias da tabela SKI
Local nLenOption			:= 0			//Ultima posicao do array de Opcao
Local nLenAlt				:= 0			//Ultima posicao do array de Alternativa

DEFAULT ::QueryAddWhere 	:= ""			//Filtro

If ::UserCode == "MSALPHA"
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Tabelas:                     ³
	//³SKE - Grupo                  ³
	//³SKF - SubGrupo               ³
	//³SKG - Questao                ³
	//³SKH - Alternativa            ³
	//³SKI - Linha e Coluna         ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Busca dados da questao³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	( cAliasSKG )->( DbSetOrder( 1 ) )
	
	If ( cAliasSKG )->( MsSeek( xFilial( "SKG" ) + ::QuestionCode ) )
		::Question := WsClassNew( "QuestionView" )
	
		GetQuestion( @::Question, cAliasSKG, cAliasSKE, cAliasSKF )

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Multipla Escolha em Linhas ou Colunas³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If ( cAliasSKG )->KG_TIPOQST == MULTIPLA_ESCOLHA .AND. ;
			( ( cAliasSKG )->KG_TIPEXIB == LINHAS .OR. ;
			( cAliasSKG )->KG_TIPEXIB == COLUNAS )
			
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³Linhas ou Colunas³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			( cAliasSKI )->( DbSetOrder( 1 ) )
			
			If ( cAliasSKI )->( MsSeek( xFilial( "SKI" ) + ;
				( cAliasSKG )->KG_CODQST ) )
				
				::Question:ListOfOption := {}
				
				While !( cAliasSKI )->( EOF() ) .AND. ;
					( cAliasSKI )->KI_FILIAL == xFilial( "SKI" ) .AND. ;
					( cAliasSKI )->KI_CODQST == ( cAliasSKG )->KG_CODQST
					
					aAdd( ::Question:ListOfOption, WsClassNew( "OptionView" ) )
					nLenOption := Len( ::Question:ListOfOption )
					
					GetOption( @::Question:ListOfOption[nLenOption], cAliasSKI )
					
					( cAliasSKI )->( DbSkip() )
				EndDo
			EndIf
		EndIf
	
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Unica Escolha e Multipla Escolha³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If ( cAliasSKG )->KG_TIPOQST == UNICA_ESCOLHA .OR. ;
			( cAliasSKG )->KG_TIPOQST == MULTIPLA_ESCOLHA

			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³Busca Alternativas³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			( cAliasSKH )->( DbSetOrder( 1 ) )
			
			If ( cAliasSKH )->( MsSeek( xFilial( "SKH" ) + ( cAliasSKG )->KG_CODQST ) )
				::Question:ListOfAlternative := {}
				
				While !( cAliasSKH )->( EOF() ) .AND. ;
					( cAliasSKH )->KH_FILIAL == xFilial( "SKH" ) .AND. ;
					( cAliasSKH )->KH_CODQST == ( cAliasSKG )->KG_CODQST
					
					aAdd( ::Question:ListOfAlternative, WsClassNew( "AlternativeView" ) )
					nLenAlt := Len( ::Question:ListOfAlternative )
					
					GetAlternative( @::Question:ListOfAlternative[nLenAlt], cAliasSKH )
					
					( cAliasSKH )->( DbSkip() )
				EndDo
			EndIf
		EndIf
	Else
		lRetorno := .F.
		SetSoapFault( "GETQUESTION", "Questão inválida." )
	EndIf
Else
	lRetorno := .F.
	SetSoapFault( "GETQUESTION", "UserCode invalido." )
EndIf

RestArea( aArea )

Return lRetorno