#INCLUDE "WSFATX010.ch"
#INCLUDE "APWEBSRV.CH"
#INCLUDE "PROTHEUS.CH"
/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³WSFAT010  ³ Autor ³Eduardo Riera          ³ Data ³07.08.2003  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Web Service responsavel pela manutencao das informacoes      ³±±
±±³          ³de vendas                                                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³                                                              ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³                                                              ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Web Service                                                  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Atualizacoes sofridas desde a Construcao Inicial.                       ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Programador  ³ Data   ³ BOPS ³  Motivo da Alteracao                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³              ³        ³      ³                                          ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Definicao da Estrutura                                                  ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
WSSTRUCT ProductSummary
   WSDATA ProductCode              As String
   WSDATA Description              AS String
   WSDATA ValueSummary             AS Array Of GenericStruct
ENDWSSTRUCT
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Definicao do Web Service                                                ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
WSSERVICE FtCustomerSalesSummary    DESCRIPTION STR0001 NAMESPACE "http://webservices.microsiga.com.br/" //"Serviço de consulta as estatísticas de vendas e faturamento ( <b>Restrição de cliente</b> )"
    WSDATA UserCode                 AS String
    WSDATA CustomerID               AS String
    WSDATA DateFrom                 As Date             //Data Inicial
    WSDATA DateTo                   As Date             //Data Final
    WSDATA QueryAddWhere            As String
	WSDATA TypeOfProduct            As String  OPTIONAL //Tipo de Produto
	WSDATA GroupOfProduct           As String  OPTIONAL //Grupo de Produto	
	WSDATA ProductCode              As String  OPTIONAL //Codigo do Produto
	WSDATA Currency                 AS Integer OPTIONAL //Moeda
	WSDATA ValueSummary             As Array Of GenericStruct
	WSDATA ProductsValueSummary     As Array Of ProductSummary
	WSDATA Header                   As Array Of BrwHeader
    WSDATA HeaderType               As String
     
   WSMETHOD GetHeader                 DESCRIPTION STR0002 //"Método que descreve as estruturas de retorno do serviço"
   WSMETHOD GetSalesInvoice           DESCRIPTION STR0003 //"Método de consulta as estatísticas do faturamento no período. <br><br><i>As informações do faturamento são extraídas dos documentos de saída, onde podem ser observadas as informações de quantidade ou valor.</i>"
   WSMETHOD GetReturnInvoice          DESCRIPTION STR0004 //"Método de consulta as estatísticas das devoluções no período. <br><br><i>As informações das devoluções são extraídas dos documentos de entrada, onde podem ser observadas as informações de quantidade ou valor.</i>"
   WSMETHOD GetSalesOrder             DESCRIPTION STR0005 //"Método de consulta as estatísticas de vendas no período. <br><br><i>As informações de vendas são extraídas dos pedidos de venda, onde podem ser observadas as informações de quantidade ou valor.</i>"
   WSMETHOD GetBonusInvoice           DESCRIPTION STR0006 //"Método de consulta as estatísticas do faturamento bonificado no período. <br><br><i>As informações de bonificação são extraídas dos documentos de saída, onde podem ser observadas as informações de quantidade ou valor.</i>"
   WSMETHOD GetBonusSalesOrder        DESCRIPTION STR0007 //"Método de consulta as estatísticas de vendas bonificadas no período. <br><br><i>As informações de bonificação são extraídas dos pedidos de venda, onde podem ser observadas as informações de quantidade ou valor.</i>"
   WSMETHOD GetProductSalesInvoice    DESCRIPTION STR0008 //"Método de consulta as estatísticas do faturamento por produtos no período. <br><br><i>As informações do faturamento são extraídas dos documentos de saída, onde podem ser observadas as informações de quantidade ou valor.</i>"
   WSMETHOD GetProductReturnInvoice   DESCRIPTION STR0009 //"Método de consulta as estatísticas das devoluções por produtos no período. <br><br><i>As informações das devoluções são extraídas dos documentos de entrada, onde podem ser observadas as informações de quantidade ou valor.</i>"
   WSMETHOD GetProductSalesOrder      DESCRIPTION STR0010 //"Método de consulta as estatísticas de vendas por produtos no período. <br><br><i>As informações de vendas são extraídas dos pedidos de venda, onde podem ser observadas as informações de quantidade ou valor.</i>"
   WSMETHOD GetProductBonusInvoice    DESCRIPTION STR0011 //"Método de consulta as estatísticas do faturamento bonificado por produtos no período. <br><br><i>As informações de bonificação são extraídas dos documentos de saída, onde podem ser observadas as informações de quantidade ou valor.</i>"
   WSMETHOD GetProductBonusSalesOrder DESCRIPTION STR0012 //"Método de consulta as estatísticas de vendas bonificadas por produto no período. <br><br><i>As informações de bonificação são extraídas dos pedidos de venda, onde podem ser observadas as informações de quantidade ou valor.</i>"
   
ENDWSSERVICE

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³GetHeader ³Autor  ³ Eduardo Riera         ³ Data ³07.08.2003 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³Rotina de recuperacao do header das estatísticas de Venda    ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpC1: Nome da Estrutura                                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ExpL1: Indica que o metodo foi avaliado com sucesso          ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Este metodo devolve o header de uma estrutura                ³±±
±±³          ³                                                             ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ CRM/Materiais/Portais                                       ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
WSMETHOD GetHeader WSRECEIVE HeaderType WSSEND Header WSSERVICE FtCustomerSalesSummary

Local aArea := GetArea()
Local nX    := 0

Do Case
	Case ::HeaderType == "VALUESUMMARY"
		aadd(::Header,WSClassNew("BrwHeader"))
		nX++
		::Header[nX]:HeaderTitle  := RetTitle("E1_MOEDA")
		::Header[nX]:HeaderField   := "CODE"
		::Header[nX]:HeaderPicture := SX3->X3_PICTURE
		::Header[nX]:HeaderSize    := SX3->X3_TAMANHO
		::Header[nX]:HeaderDec     := SX3->X3_DECIMAL
		::Header[nX]:HeaderType    := "C"
		::Header[nX]:HeaderComboBox:= ""
		::Header[nX]:HeaderOblig   := X3OBRIGAT(SX3->X3_CAMPO)
		
		aadd(::Header,WSClassNew("BrwHeader"))
		nX++
		::Header[nX]:HeaderTitle  := STR0013 //"Descricao"
		::Header[nX]:HeaderField   := "DESCRIPTION"
		::Header[nX]:HeaderPicture := ""
		::Header[nX]:HeaderSize    := 30
		::Header[nX]:HeaderDec     := 0
		::Header[nX]:HeaderType    := "C"
		::Header[nX]:HeaderComboBox:= ""         
		::Header[nX]:HeaderOblig   := .F.
		
		aadd(::Header,WSClassNew("BrwHeader"))
		nX++
		::Header[nX]:HeaderTitle  := RetTitle("D2_TOTAL")
		::Header[nX]:HeaderField   := "VALUE"
		::Header[nX]:HeaderPicture := SX3->X3_PICTURE
		::Header[nX]:HeaderSize    := SX3->X3_TAMANHO
		::Header[nX]:HeaderDec     := SX3->X3_DECIMAL
		::Header[nX]:HeaderType    := SX3->X3_TIPO
		::Header[nX]:HeaderComboBox:= ""
		::Header[nX]:HeaderOblig   := X3OBRIGAT(SX3->X3_CAMPO)
				
	Case ::HeaderType == "PRODUCTSUMMARY"
		aadd(::Header,WSClassNew("BrwHeader"))
		nX++
		::Header[nX]:HeaderTitle  := RetTitle("D2_COD")
		::Header[nX]:HeaderField   := "PRODUCTCODE"
		::Header[nX]:HeaderPicture := SX3->X3_PICTURE
		::Header[nX]:HeaderSize    := SX3->X3_TAMANHO
		::Header[nX]:HeaderDec     := SX3->X3_DECIMAL
		::Header[nX]:HeaderType    := SX3->X3_TIPO	
		::Header[nX]:HeaderComboBox:= ""
		::Header[nX]:HeaderOblig   := X3OBRIGAT(SX3->X3_CAMPO)
		
		aadd(::Header,WSClassNew("BrwHeader"))
		nX++
		::Header[nX]:HeaderTitle  := RetTitle("B1_DESC")
		::Header[nX]:HeaderField   := "DESCRIPTION"
		::Header[nX]:HeaderPicture := SX3->X3_PICTURE
		::Header[nX]:HeaderSize    := SX3->X3_TAMANHO
		::Header[nX]:HeaderDec     := SX3->X3_DECIMAL
		::Header[nX]:HeaderType    := SX3->X3_TIPO	
		::Header[nX]:HeaderComboBox:= ""
		::Header[nX]:HeaderOblig   := X3OBRIGAT(SX3->X3_CAMPO)
EndCase
RestArea(aArea)
Return(.T.)

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³GetSalesIn³Autor  ³ Eduardo Riera         ³ Data ³07.08.2003 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³Rotina de recuperacao das vendas efetudas no periodo         ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpC1: Codigo do Usuario                                     ³±±
±±³          ³ExpC2: Codigo do cliente                                     ³±±
±±³          ³ExpD3: Data de Inicio                                        ³±±
±±³          ³ExpD4: Data de termino                                       ³±±
±±³          ³ExpC5: Tipo de Produto                                       ³±±
±±³          ³ExpC6: Grupo de Produto                                      ³±±
±±³          ³ExpC7: Codigo do Produto                                     ³±±
±±³          ³ExpN8: Moeda                                                 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ExpL1: Indica que o metodo foi avaliado com sucesso          ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Este metodo devolve um array com as vendas efetuadas         ³±±
±±³          ³                                                             ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ WEB SERVICES                                                ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
WSMETHOD GetSalesInvoice WSRECEIVE UserCode,CustomerID,DateFrom,DateTo,TypeOfProduct,GroupOfProduct,ProductCode,Currency,QueryAddWhere WSSEND ValueSummary WSSERVICE FtCustomerSalesSummary

Local aArea := GetArea()                      
Local aRetorno  := {}
Local cCliente  := SubStr(::CustomerID,1,Len(SA1->A1_COD))
Local cLoja     := SubStr(::CustomerID,Len(SA1->A1_COD)+1)
Local cTipo     := SubStr(::TypeOfProduct,1,Len(SB1->B1_TIPO))
Local cGrupo    := SubStr(::GroupOfProduct,1,Len(SB1->B1_GRUPO))
Local cProduto  := SubStr(::ProductCode,1,Len(SB1->B1_COD))
Local nMoeda    := IIf(Empty(::Currency),1,::Currency)
Local nX        := 0
Local lRetorno  := .T.

DEFAULT ::ValueSummary := {}

If PrtChkUser(::UserCode,"FtCustomerSalesSummary","GetSalesInvoice","SA1",::CustomerID)

	aRetorno := FtNfVendas(4,Nil,::DateFrom,::DateTo  ,Nil,cTipo,cGrupo,cProduto,nMoeda,cCliente,cLoja,::QueryAddWhere)
	
	aadd(::ValueSummary,WSClassNew("GenericStruct"))
	nX++
	::ValueSummary[nX]:Code := StrZero(nMoeda,2)
	::ValueSummary[nX]:Description := STR0014 //"Valor Liquido Vendido (Vendas-descontos)"
	::ValueSummary[nX]:Value := aRetorno[nX]

	aadd(::ValueSummary,WSClassNew("GenericStruct"))
	nX++
	::ValueSummary[nX]:Code := StrZero(nMoeda,2)
	::ValueSummary[nX]:Description := STR0015 //"Volume Vendido "
	::ValueSummary[nX]:Value := aRetorno[nX]

	aadd(::ValueSummary,WSClassNew("GenericStruct"))
	nX++
	::ValueSummary[nX]:Code := StrZero(nMoeda,2)
	::ValueSummary[nX]:Description := STR0016 //"Valor Bruto Vendido (Vendas)"
	::ValueSummary[nX]:Value := aRetorno[nX]
Else
	lRetorno := .F.
EndIf
RestArea(aArea)
Return(lRetorno)

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³GetReturnI³Autor  ³ Eduardo Riera         ³ Data ³07.08.2003 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³Rotina de recuperacao das vendas efetudas no periodo         ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpC1: Codigo do Usuario                                     ³±±
±±³          ³ExpC2: Codigo do cliente                                     ³±±
±±³          ³ExpD3: Data de Inicio                                        ³±±
±±³          ³ExpD4: Data de termino                                       ³±±
±±³          ³ExpC5: Tipo de Produto                                       ³±±
±±³          ³ExpC6: Grupo de Produto                                      ³±±
±±³          ³ExpC7: Codigo do Produto                                     ³±±
±±³          ³ExpN8: Moeda                                                 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ExpL1: Indica que o metodo foi avaliado com sucesso          ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Este metodo devolve um array com as vendas efetuadas         ³±±
±±³          ³                                                             ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ WEB SERVICES                                                ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
WSMETHOD GetReturnInvoice WSRECEIVE UserCode,CustomerID,DateFrom,DateTo  ,TypeOfProduct,GroupOfProduct,ProductCode,Currency WSSEND ValueSummary WSSERVICE FtCustomerSalesSummary

Local aArea := GetArea()                      
Local aRetorno  := {}
Local cCliente  := SubStr(::CustomerID,1,Len(SA1->A1_COD))
Local cLoja     := SubStr(::CustomerID,Len(SA1->A1_COD)+1)
Local cTipo     := SubStr(::TypeOfProduct,1,Len(SB1->B1_TIPO))
Local cGrupo    := SubStr(::GroupOfProduct,1,Len(SB1->B1_GRUPO))
Local cProduto  := SubStr(::ProductCode,1,Len(SB1->B1_COD))
Local nMoeda    := IIf(Empty(::Currency),1,::Currency)
Local nX        := 0
Local lRetorno  := .T.

DEFAULT ::ValueSummary := {}

If PrtChkUser(::UserCode,"FtCustomerSalesSummary","GetReturnInvoice","SA1",::CustomerID)
	aRetorno := FtNfDevol(4,Nil,::DateFrom,::DateTo  ,Nil,cTipo,cGrupo,cProduto,nMoeda,cCliente,cLoja)
	
	aadd(::ValueSummary,WSClassNew("GenericStruct"))
	nX++
	::ValueSummary[nX]:Code := StrZero(nMoeda,2)
	::ValueSummary[nX]:Description := STR0017 //"Valor Liquido devolvido (Vendas-descontos)"
	::ValueSummary[nX]:Value := aRetorno[nX]

	aadd(::ValueSummary,WSClassNew("GenericStruct"))
	nX++
	::ValueSummary[nX]:Code := StrZero(nMoeda,2)
	::ValueSummary[nX]:Description := STR0018 //"Volume devolvido "
	::ValueSummary[nX]:Value := aRetorno[nX]

	aadd(::ValueSummary,WSClassNew("GenericStruct"))
	nX++
	::ValueSummary[nX]:Code := StrZero(nMoeda,2)
	::ValueSummary[nX]:Description := STR0019 //"Valor Bruto devolvido (Vendas)"
	::ValueSummary[nX]:Value := aRetorno[nX]
Else
	lRetorno := .F.
EndIf
RestArea(aArea)
Return(lRetorno)

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³GetSalesOr³Autor  ³ Eduardo Riera         ³ Data ³07.08.2003 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³Rotina de recuperacao das vendas efetudas no periodo de pedi-³±±
±±³          ³dos de venda                                                 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpC1: Codigo do Usuario                                     ³±±
±±³          ³ExpC2: Codigo do cliente                                     ³±±
±±³          ³ExpD3: Data de Inicio                                        ³±±
±±³          ³ExpD4: Data de termino                                       ³±±
±±³          ³ExpC5: Tipo de Produto                                       ³±±
±±³          ³ExpC6: Grupo de Produto                                      ³±±
±±³          ³ExpC7: Codigo do Produto                                     ³±±
±±³          ³ExpN8: Moeda                                                 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ExpL1: Indica que o metodo foi avaliado com sucesso          ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Este metodo devolve um array com as vendas efetuadas         ³±±
±±³          ³                                                             ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ WEB SERVICES                                                ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
WSMETHOD GetSalesOrder WSRECEIVE UserCode,CustomerID,DateFrom,DateTo,TypeOfProduct,GroupOfProduct,ProductCode,Currency,QueryAddWhere WSSEND ValueSummary WSSERVICE FtCustomerSalesSummary

Local aArea     := GetArea()                      
Local aRetorno  := {}
Local cCliente  := SubStr(::CustomerID,1,Len(SA1->A1_COD))
Local cLoja     := SubStr(::CustomerID,Len(SA1->A1_COD)+1)
Local cTipo     := SubStr(::TypeOfProduct,1,Len(SB1->B1_TIPO))
Local cGrupo    := SubStr(::GroupOfProduct,1,Len(SB1->B1_GRUPO))
Local cProduto  := SubStr(::ProductCode,1,Len(SB1->B1_COD))
Local nMoeda    := IIf(Empty(::Currency),1,::Currency)
Local nX        := 0
Local lRetorno  := .T.

DEFAULT ::ValueSummary := {}

If PrtChkUser(::UserCode,"FtCustomerSalesSummary","GetSalesOrder","SA1",::CustomerID)
	aRetorno := FtPdVendas(7,Nil,::DateFrom,::DateTo  ,cTipo,cGrupo,cProduto,nMoeda,cCliente,cLoja,::QueryAddWhere)
	
	aadd(::ValueSummary,WSClassNew("GenericStruct"))
	nX++
	::ValueSummary[nX]:Code := StrZero(nMoeda,2)
	::ValueSummary[nX]:Description := STR0020 //"Valor Liquido (Vendas-descontos)"
	::ValueSummary[nX]:Value := aRetorno[nX]

	aadd(::ValueSummary,WSClassNew("GenericStruct"))
	nX++
	::ValueSummary[nX]:Code := StrZero(nMoeda,2)
	::ValueSummary[nX]:Description := STR0015 //"Volume vendido "
	::ValueSummary[nX]:Value := aRetorno[nX]

	aadd(::ValueSummary,WSClassNew("GenericStruct"))
	nX++
	::ValueSummary[nX]:Code := StrZero(nMoeda,2)
	::ValueSummary[nX]:Description := STR0021 //"Valor Bruto (Vendas)"
	::ValueSummary[nX]:Value := aRetorno[nX]
	
		aadd(::ValueSummary,WSClassNew("GenericStruct"))
	nX++
	::ValueSummary[nX]:Code := StrZero(nMoeda,2)
	::ValueSummary[nX]:Description := STR0022 //"Saldo Liquido (Vendas-descontos)"
	::ValueSummary[nX]:Value := aRetorno[nX]

	aadd(::ValueSummary,WSClassNew("GenericStruct"))
	nX++
	::ValueSummary[nX]:Code := StrZero(nMoeda,2)
	::ValueSummary[nX]:Description := STR0023 //"Saldo em volume"
	::ValueSummary[nX]:Value := aRetorno[nX]

	aadd(::ValueSummary,WSClassNew("GenericStruct"))
	nX++
	::ValueSummary[nX]:Code := StrZero(nMoeda,2)
	::ValueSummary[nX]:Description := STR0024 //"Saldo Bruto (Vendas)"
	::ValueSummary[nX]:Value := aRetorno[nX]
Else
	lRetorno := .F.
EndIf
RestArea(aArea)
Return(lRetorno)

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³GetBonusIn³Autor  ³ Eduardo Riera         ³ Data ³07.08.2003 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³Rotina de recuperacao das bonificacoes efetuadas no periodo  ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpC1: Codigo do Usuario                                     ³±±
±±³          ³ExpC2: Codigo do cliente                                     ³±±
±±³          ³ExpD3: Data de Inicio                                        ³±±
±±³          ³ExpD4: Data de termino                                       ³±±
±±³          ³ExpC5: Tipo de Produto                                       ³±±
±±³          ³ExpC6: Grupo de Produto                                      ³±±
±±³          ³ExpC7: Codigo do Produto                                     ³±±
±±³          ³ExpN8: Moeda                                                 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ExpL1: Indica que o metodo foi avaliado com sucesso          ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Este metodo devolve um array com as bonificacoes efetuadas   ³±±
±±³          ³                                                             ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ WEB SERVICES                                                ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
WSMETHOD GetBonusInvoice WSRECEIVE UserCode,CustomerID,DateFrom,DateTo,TypeOfProduct,GroupOfProduct,ProductCode,Currency WSSEND ValueSummary WSSERVICE FtCustomerSalesSummary

Local aArea := GetArea()                      
Local aRetorno  := {}
Local cCliente  := SubStr(::CustomerID,1,Len(SA1->A1_COD))
Local cLoja     := SubStr(::CustomerID,Len(SA1->A1_COD)+1)
Local cTipo     := SubStr(::TypeOfProduct,1,Len(SB1->B1_TIPO))
Local cGrupo    := SubStr(::GroupOfProduct,1,Len(SB1->B1_GRUPO))
Local cProduto  := SubStr(::ProductCode,1,Len(SB1->B1_COD))
Local nMoeda    := IIf(Empty(::Currency),1,::Currency)
Local nX        := 0
Local lRetorno  := .T.

DEFAULT ::ValueSummary := {}

If PrtChkUser(::UserCode,"FtCustomerSalesSummary","GetBonusInvoice","SA1",::CustomerID)

	aRetorno := FtNfBonif(4,Nil,::DateFrom,::DateTo  ,Nil,cTipo,cGrupo,cProduto,nMoeda,cCliente,cLoja)
	
	aadd(::ValueSummary,WSClassNew("GenericStruct"))
	nX++
	::ValueSummary[nX]:Code := StrZero(nMoeda,2)
	::ValueSummary[nX]:Description := STR0025 //"Valor Liquido (Bonificacao-descontos)"
	::ValueSummary[nX]:Value := aRetorno[nX]

	aadd(::ValueSummary,WSClassNew("GenericStruct"))
	nX++
	::ValueSummary[nX]:Code := StrZero(nMoeda,2)
	::ValueSummary[nX]:Description := STR0026 //"Volume "
	::ValueSummary[nX]:Value := aRetorno[nX]

	aadd(::ValueSummary,WSClassNew("GenericStruct"))
	nX++
	::ValueSummary[nX]:Code := StrZero(nMoeda,2)
	::ValueSummary[nX]:Description := STR0027 //"Valor Bruto (Bonificacao)"
	::ValueSummary[nX]:Value := aRetorno[nX]
Else
	lRetorno := .F.
EndIf
RestArea(aArea)
Return(lRetorno)

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³GetBonusSa³Autor  ³ Eduardo Riera         ³ Data ³07.08.2003 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³Rotina de recuperacao das bonif. efetudas no periodo de pedi-³±±
±±³          ³dos de venda                                                 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpC1: Codigo do Usuario                                     ³±±
±±³          ³ExpC2: Codigo do cliente                                     ³±±
±±³          ³ExpD3: Data de Inicio                                        ³±±
±±³          ³ExpD4: Data de termino                                       ³±±
±±³          ³ExpC5: Tipo de Produto                                       ³±±
±±³          ³ExpC6: Grupo de Produto                                      ³±±
±±³          ³ExpC7: Codigo do Produto                                     ³±±
±±³          ³ExpN8: Moeda                                                 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ExpL1: Indica que o metodo foi avaliado com sucesso          ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Este metodo devolve um array com as Bonif. efetuadas         ³±±
±±³          ³                                                             ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ WEB SERVICES                                                ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
WSMETHOD GetBonusSalesOrder WSRECEIVE UserCode,CustomerID,DateFrom,DateTo,TypeOfProduct,GroupOfProduct,ProductCode,Currency WSSEND ValueSummary WSSERVICE FtCustomerSalesSummary

Local aArea     := GetArea()                      
Local aRetorno  := {}
Local cCliente  := SubStr(::CustomerID,1,Len(SA1->A1_COD))
Local cLoja     := SubStr(::CustomerID,Len(SA1->A1_COD)+1)
Local cTipo     := SubStr(::TypeOfProduct,1,Len(SB1->B1_TIPO))
Local cGrupo    := SubStr(::GroupOfProduct,1,Len(SB1->B1_GRUPO))
Local cProduto  := SubStr(::ProductCode,1,Len(SB1->B1_COD))
Local nMoeda    := IIf(Empty(::Currency),1,::Currency)
Local nX        := 0
Local lRetorno  := .T.

DEFAULT ::ValueSummary := {}

If PrtChkUser(::UserCode,"FtCustomerSalesSummary","GetBonusSalesOrder","SA1",::CustomerID)
	aRetorno := FtPdBonif(7,Nil,::DateFrom,::DateTo  ,cTipo,cGrupo,cProduto,nMoeda,cCliente,cLoja)
	
	aadd(::ValueSummary,WSClassNew("GenericStruct"))
	nX++
	::ValueSummary[nX]:Code := StrZero(nMoeda,2)
	::ValueSummary[nX]:Description := STR0025 //"Valor Liquido (Bonificacao-descontos)"
	::ValueSummary[nX]:Value := aRetorno[nX]

	aadd(::ValueSummary,WSClassNew("GenericStruct"))
	nX++
	::ValueSummary[nX]:Code := StrZero(nMoeda,2)
	::ValueSummary[nX]:Description := STR0026 //"Volume "
	::ValueSummary[nX]:Value := aRetorno[nX]

	aadd(::ValueSummary,WSClassNew("GenericStruct"))
	nX++
	::ValueSummary[nX]:Code := StrZero(nMoeda,2)
	::ValueSummary[nX]:Description := STR0027 //"Valor Bruto (Bonificacao)"
	::ValueSummary[nX]:Value := aRetorno[nX]
	
		aadd(::ValueSummary,WSClassNew("GenericStruct"))
	nX++
	::ValueSummary[nX]:Code := StrZero(nMoeda,2)
	::ValueSummary[nX]:Description := STR0028 //"Saldo Liquido (Bonificacao-descontos)"
	::ValueSummary[nX]:Value := aRetorno[nX]

	aadd(::ValueSummary,WSClassNew("GenericStruct"))
	nX++
	::ValueSummary[nX]:Code := StrZero(nMoeda,2)
	::ValueSummary[nX]:Description := STR0023 //"Saldo em volume"
	::ValueSummary[nX]:Value := aRetorno[nX]

	aadd(::ValueSummary,WSClassNew("GenericStruct"))
	nX++
	::ValueSummary[nX]:Code := StrZero(nMoeda,2)
	::ValueSummary[nX]:Description := STR0024 //"Saldo Bruto (Vendas)"
	::ValueSummary[nX]:Value := aRetorno[nX]
Else
	lRetorno := .F.
EndIf
RestArea(aArea)
Return(lRetorno)

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³GetProduct³Autor  ³ Eduardo Riera         ³ Data ³18.09.2003 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³Rotina de recuperacao das vendas efetudas no periodo por     ³±±
±±³          ³produto                                                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpC1: Codigo do Usuario                                     ³±±
±±³          ³ExpC2: Codigo do cliente                                     ³±±
±±³          ³ExpD3: Data de Inicio                                        ³±±
±±³          ³ExpD4: Data de termino                                       ³±±
±±³          ³ExpC5: Tipo de Produto                                       ³±±
±±³          ³ExpC6: Grupo de Produto                                      ³±±
±±³          ³ExpC7: Codigo do Produto                                     ³±±
±±³          ³ExpN8: Moeda                                                 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ExpL1: Indica que o metodo foi avaliado com sucesso          ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Este metodo devolve um array com as vendas efetuadas         ³±±
±±³          ³                                                             ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ WEB SERVICES                                                ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
WSMETHOD GetProductSalesInvoice WSRECEIVE UserCode,CustomerID,DateFrom,DateTo,TypeOfProduct,GroupOfProduct,ProductCode,Currency,QueryAddWhere WSSEND ProductsValueSummary WSSERVICE FtCustomerSalesSummary

Local aArea := GetArea()                      
Local aRetorno  := {}
Local cCliente  := SubStr(::CustomerID,1,Len(SA1->A1_COD))
Local cLoja     := SubStr(::CustomerID,Len(SA1->A1_COD)+1)
Local cTipo     := SubStr(::TypeOfProduct,1,Len(SB1->B1_TIPO))
Local cGrupo    := SubStr(::GroupOfProduct,1,Len(SB1->B1_GRUPO))
Local cProduto  := SubStr(::ProductCode,1,Len(SB1->B1_COD))
Local nMoeda    := IIf(Empty(::Currency),1,::Currency)
Local nX        := 0
Local nY        := 0
Local lRetorno  := .T.

::ProductsValueSummary := {}

If PrtChkUser(::UserCode,"FtCustomerSalesSummary","GetProductSalesInvoice","SA1",::CustomerID)

	aRetorno := FtNfVendas(5,Nil,::DateFrom,::DateTo  ,Nil,cTipo,cGrupo,cProduto,nMoeda,cCliente,cLoja,::QueryAddWhere)
	
	For nX := 1 To Len(aRetorno)	
		aadd(::ProductsValueSummary,WSClassNew("ProductSummary"))
		nY := 0
		::ProductsValueSummary[nX]:ProductCode := cProduto
		::ProductsValueSummary[nX]:Description := Posicione("SB1",1,xFilial("SB1")+cProduto,"B1_DESC")
		
		::ProductsValueSummary[nX]:ValueSummary := {}
		aadd(::ProductsValueSummary[nX]:ValueSummary,WSClassNew("GenericStruct"))
		nY++
		
		::ProductsValueSummary[nX]:ValueSummary[nY]:Code := StrZero(nMoeda,2)
		::ProductsValueSummary[nX]:ValueSummary[nY]:Description := STR0014 //"Valor Liquido Vendido (Vendas-descontos)"
		::ProductsValueSummary[nX]:ValueSummary[nY]:Value := aRetorno[nX][nY+1]

		aadd(::ProductsValueSummary[nX]:ValueSummary,WSClassNew("GenericStruct"))
		nY++

		::ProductsValueSummary[nX]:ValueSummary[nY]:Code := StrZero(nMoeda,2)
		::ProductsValueSummary[nX]:ValueSummary[nY]:Description := STR0015 //"Volume Vendido "
		::ProductsValueSummary[nX]:ValueSummary[nY]:Value := aRetorno[nX][nY+1]

		aadd(::ProductsValueSummary[nX]:ValueSummary,WSClassNew("GenericStruct"))
		nY++
		::ProductsValueSummary[nX]:ValueSummary[nY]:Code := StrZero(nMoeda,2)
		::ProductsValueSummary[nX]:ValueSummary[nY]:Description := STR0016 //"Valor Bruto Vendido (Vendas)"
		::ProductsValueSummary[nX]:ValueSummary[nY]:Value := aRetorno[nX][nY+1]
		
	Next nX
Else
	lRetorno := .F.
EndIf
RestArea(aArea)
Return(lRetorno)

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³GetProduct³Autor  ³ Eduardo Riera         ³ Data ³18.09.2003 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³Rotina de recuperacao das vendas efetudas no periodo         ³±±
±±³          ³por produto                                                  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpC1: Codigo do Usuario                                     ³±±
±±³          ³ExpC2: Codigo do cliente                                     ³±±
±±³          ³ExpD3: Data de Inicio                                        ³±±
±±³          ³ExpD4: Data de termino                                       ³±±
±±³          ³ExpC5: Tipo de Produto                                       ³±±
±±³          ³ExpC6: Grupo de Produto                                      ³±±
±±³          ³ExpC7: Codigo do Produto                                     ³±±
±±³          ³ExpN8: Moeda                                                 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ExpL1: Indica que o metodo foi avaliado com sucesso          ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Este metodo devolve um array com as vendas efetuadas         ³±±
±±³          ³                                                             ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ WEB SERVICES                                                ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
WSMETHOD GetProductReturnInvoice WSRECEIVE UserCode,CustomerID,DateFrom,DateTo,TypeOfProduct,GroupOfProduct,ProductCode,Currency WSSEND ProductsValueSummary WSSERVICE FtCustomerSalesSummary

Local aArea := GetArea()                      
Local aRetorno  := {}
Local cCliente  := SubStr(::CustomerID,1,Len(SA1->A1_COD))
Local cLoja     := SubStr(::CustomerID,Len(SA1->A1_COD)+1)
Local cTipo     := SubStr(::TypeOfProduct,1,Len(SB1->B1_TIPO))
Local cGrupo    := SubStr(::GroupOfProduct,1,Len(SB1->B1_GRUPO))
Local cProduto  := SubStr(::ProductCode,1,Len(SB1->B1_COD))
Local nMoeda    := IIf(Empty(::Currency),1,::Currency)
Local nX        := 0
Local nY        := 0
Local lRetorno  := .T.

DEFAULT ::ProductsValueSummary := {}

If PrtChkUser(::UserCode,"FtCustomerSalesSummary","GetProductReturnInvoice","SA1",::CustomerID)

	aRetorno := FtNfDevol(5,Nil,::DateFrom,::DateTo,Nil,cTipo,cGrupo,cProduto,nMoeda,cCliente,cLoja)

	For nX := 1 To Len(aRetorno)
	
		aadd(::ProductsValueSummary,WSClassNew("ProductSummary"))
		nY := 0
		::ProductsValueSummary[nX]:ProductCode := cProduto
		::ProductsValueSummary[nX]:Description := Posicione("SB1",1,xFilial("SB1")+cProduto,"B1_DESC")
		
		::ProductsValueSummary[nX]:ValueSummary := {}
		aadd(::ProductsValueSummary[nX]:ValueSummary,WSClassNew("GenericStruct"))
		nY++

		::ProductsValueSummary[nX]:ValueSummary[nY]:Code := StrZero(nMoeda,2)
		::ProductsValueSummary[nX]:ValueSummary[nY]:Description := STR0017 //"Valor Liquido devolvido (Vendas-descontos)"
		::ProductsValueSummary[nX]:ValueSummary[nY]:Value := aRetorno[nX][nY+1]

		aadd(::ProductsValueSummary[nX]:ValueSummary,WSClassNew("GenericStruct"))
		nY++
		::ProductsValueSummary[nX]:ValueSummary[nY]:Code := StrZero(nMoeda,2)
		::ProductsValueSummary[nX]:ValueSummary[nY]:Description := STR0018 //"Volume devolvido "
		::ProductsValueSummary[nX]:ValueSummary[nY]:Value := aRetorno[nX][nY+1]

		aadd(::ProductsValueSummary[nX]:ValueSummary,WSClassNew("GenericStruct"))
		nY++
		::ProductsValueSummary[nX]:ValueSummary[nY]:Code := StrZero(nMoeda,2)
		::ProductsValueSummary[nX]:ValueSummary[nY]:Description := STR0019 //"Valor Bruto devolvido (Vendas)"
		::ProductsValueSummary[nX]:ValueSummary[nY]:Value := aRetorno[nX][nY+1]
		
	Next nX		
Else
	lRetorno := .F.
EndIf
RestArea(aArea)
Return(lRetorno)

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³GetProduct³Autor  ³ Eduardo Riera         ³ Data ³07.08.2003 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³Rotina de recuperacao das vendas efetudas no periodo de pedi-³±±
±±³          ³dos de venda por produto                                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpC1: Codigo do Usuario                                     ³±±
±±³          ³ExpC2: Codigo do cliente                                     ³±±
±±³          ³ExpD3: Data de Inicio                                        ³±±
±±³          ³ExpD4: Data de termino                                       ³±±
±±³          ³ExpC5: Tipo de Produto                                       ³±±
±±³          ³ExpC6: Grupo de Produto                                      ³±±
±±³          ³ExpC7: Codigo do Produto                                     ³±±
±±³          ³ExpN8: Moeda                                                 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ExpL1: Indica que o metodo foi avaliado com sucesso          ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Este metodo devolve um array com as vendas efetuadas         ³±±
±±³          ³                                                             ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ WEB SERVICES                                                ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
WSMETHOD GetProductSalesOrder WSRECEIVE UserCode,CustomerID,DateFrom,DateTo,TypeOfProduct,GroupOfProduct,ProductCode,Currency,QueryAddWhere WSSEND ProductsValueSummary WSSERVICE FtCustomerSalesSummary

Local aArea     := GetArea()                      
Local aRetorno  := {}
Local cCliente  := SubStr(::CustomerID,1,Len(SA1->A1_COD))
Local cLoja     := SubStr(::CustomerID,Len(SA1->A1_COD)+1)
Local cTipo     := SubStr(::TypeOfProduct,1,Len(SB1->B1_TIPO))
Local cGrupo    := SubStr(::GroupOfProduct,1,Len(SB1->B1_GRUPO))
Local cProduto  := SubStr(::ProductCode,1,Len(SB1->B1_COD))
Local nMoeda    := IIf(Empty(::Currency),1,::Currency)
Local nX        := 0
Local nY        := 0
Local lRetorno  := .T.

DEFAULT ::ProductsValueSummary := {}

If PrtChkUser(::UserCode,"FtCustomerSalesSummary","GetProductSalesOrder","SA1",::CustomerID)

	aRetorno := FtPdVendas(8,Nil,::DateFrom,::DateTo  ,cTipo,cGrupo,cProduto,nMoeda,cCliente,cLoja,::QueryAddWhere)
	For nX := 1 To Len(aRetorno)
	
		aadd(::ProductsValueSummary,WSClassNew("ProductSummary"))
		nY := 0
		::ProductsValueSummary[nX]:ProductCode := cProduto
		::ProductsValueSummary[nX]:Description := Posicione("SB1",1,xFilial("SB1")+cProduto,"B1_DESC")
		
		::ProductsValueSummary[nX]:ValueSummary := {}
		aadd(::ProductsValueSummary[nX]:ValueSummary,WSClassNew("GenericStruct"))
		nY++

		::ProductsValueSummary[nX]:ValueSummary[nY]:Code := StrZero(nMoeda,2)
		::ProductsValueSummary[nX]:ValueSummary[nY]:Description := STR0020 //"Valor Liquido (Vendas-descontos)"
		::ProductsValueSummary[nX]:ValueSummary[nY]:Value := aRetorno[nX][nY+1]

		aadd(::ProductsValueSummary[nX]:ValueSummary,WSClassNew("GenericStruct"))
		nY++
		::ProductsValueSummary[nX]:ValueSummary[nY]:Code := StrZero(nMoeda,2)
		::ProductsValueSummary[nX]:ValueSummary[nY]:Description := STR0015 //"Volume vendido "
		::ProductsValueSummary[nX]:ValueSummary[nY]:Value := aRetorno[nX][nY+1]

		aadd(::ProductsValueSummary[nX]:ValueSummary,WSClassNew("GenericStruct"))
		nY++
		::ProductsValueSummary[nX]:ValueSummary[nY]:Code := StrZero(nMoeda,2)
		::ProductsValueSummary[nX]:ValueSummary[nY]:Description := STR0021 //"Valor Bruto (Vendas)"
		::ProductsValueSummary[nX]:ValueSummary[nY]:Value := aRetorno[nX][nY+1]
	
		aadd(::ProductsValueSummary[nX]:ValueSummary,WSClassNew("GenericStruct"))
		nY++

		::ProductsValueSummary[nX]:ValueSummary[nY]:Code := StrZero(nMoeda,2)
		::ProductsValueSummary[nX]:ValueSummary[nY]:Description := STR0022 //"Saldo Liquido (Vendas-descontos)"
		::ProductsValueSummary[nX]:ValueSummary[nY]:Value := aRetorno[nX][nY+1]

		aadd(::ProductsValueSummary[nX]:ValueSummary,WSClassNew("GenericStruct"))
		nY++

		::ProductsValueSummary[nX]:ValueSummary[nY]:Code := StrZero(nMoeda,2)
		::ProductsValueSummary[nX]:ValueSummary[nY]:Description := STR0023 //"Saldo em volume"
		::ProductsValueSummary[nX]:ValueSummary[nY]:Value := aRetorno[nX][nY+1]

		aadd(::ProductsValueSummary[nX]:ValueSummary,WSClassNew("GenericStruct"))
		nY++

		::ProductsValueSummary[nX]:ValueSummary[nY]:Code := StrZero(nMoeda,2)
		::ProductsValueSummary[nX]:ValueSummary[nY]:Description := STR0024 //"Saldo Bruto (Vendas)"
		::ProductsValueSummary[nX]:ValueSummary[nY]:Value := aRetorno[nX][nY+1]
	Next nX
Else
	lRetorno := .F.
EndIf
RestArea(aArea)
Return(lRetorno)

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³GetProduct³Autor  ³ Eduardo Riera         ³ Data ³18.09.2003 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³Rotina de recuperacao das bonificacoes efetuadas no periodo  ³±±
±±³          ³por produto                                                  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpC1: Codigo do Usuario                                     ³±±
±±³          ³ExpC2: Codigo do cliente                                     ³±±
±±³          ³ExpD3: Data de Inicio                                        ³±±
±±³          ³ExpD4: Data de termino                                       ³±±
±±³          ³ExpC5: Tipo de Produto                                       ³±±
±±³          ³ExpC6: Grupo de Produto                                      ³±±
±±³          ³ExpC7: Codigo do Produto                                     ³±±
±±³          ³ExpN8: Moeda                                                 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ExpL1: Indica que o metodo foi avaliado com sucesso          ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Este metodo devolve um array com as bonificacoes efetuadas   ³±±
±±³          ³                                                             ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ WEB SERVICES                                                ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
WSMETHOD GetProductBonusInvoice WSRECEIVE UserCode,CustomerID,DateFrom,DateTo,TypeOfProduct,GroupOfProduct,ProductCode,Currency WSSEND ProductsValueSummary WSSERVICE FtCustomerSalesSummary

Local aArea := GetArea()                      
Local aRetorno  := {}
Local cCliente  := SubStr(::CustomerID,1,Len(SA1->A1_COD))
Local cLoja     := SubStr(::CustomerID,Len(SA1->A1_COD)+1)
Local cTipo     := SubStr(::TypeOfProduct,1,Len(SB1->B1_TIPO))
Local cGrupo    := SubStr(::GroupOfProduct,1,Len(SB1->B1_GRUPO))
Local cProduto  := SubStr(::ProductCode,1,Len(SB1->B1_COD))
Local nMoeda    := IIf(Empty(::Currency),1,::Currency)
Local nX        := 0
Local nY        := 0
Local lRetorno  := .T.

DEFAULT ::ProductsValueSummary := {}

If PrtChkUser(::UserCode,"FtCustomerSalesSummary","GetProductBonusInvoice","SA1",::CustomerID)

	aRetorno := FtNfBonif(5,Nil,::DateFrom,::DateTo  ,Nil,cTipo,cGrupo,cProduto,nMoeda,cCliente,cLoja)

	For nX := 1 To Len(aRetorno)
	
		aadd(::ProductsValueSummary,WSClassNew("ProductSummary"))
		nY := 0
		::ProductsValueSummary[nX]:ProductCode := cProduto
		::ProductsValueSummary[nX]:Description := Posicione("SB1",1,xFilial("SB1")+cProduto,"B1_DESC")
		
		::ProductsValueSummary[nX]:ValueSummary := {}
		aadd(::ProductsValueSummary[nX]:ValueSummary,WSClassNew("GenericStruct"))
		nY++
		
		::ProductsValueSummary[nX]:ValueSummary[nY]:Code := StrZero(nMoeda,2)
		::ProductsValueSummary[nX]:ValueSummary[nY]:Description := STR0025 //"Valor Liquido (Bonificacao-descontos)"
		::ProductsValueSummary[nX]:ValueSummary[nY]:Value := aRetorno[nX][nY+1]

		aadd(::ProductsValueSummary[nX]:ValueSummary,WSClassNew("GenericStruct"))
		nY++
		
		::ProductsValueSummary[nX]:ValueSummary[nY]:Code := StrZero(nMoeda,2)
		::ProductsValueSummary[nX]:ValueSummary[nY]:Description := STR0026 //"Volume "
		::ProductsValueSummary[nX]:ValueSummary[nY]:Value := aRetorno[nX][nY+1]
		
		aadd(::ProductsValueSummary[nX]:ValueSummary,WSClassNew("GenericStruct"))
		nY++

		::ProductsValueSummary[nX]:ValueSummary[nY]:Code := StrZero(nMoeda,2)
		::ProductsValueSummary[nX]:ValueSummary[nY]:Description := STR0027 //"Valor Bruto (Bonificacao)"
		::ProductsValueSummary[nX]:ValueSummary[nY]:Value := aRetorno[nX][nY+1]
	Next nX
Else
	lRetorno := .F.
EndIf
RestArea(aArea)
Return(lRetorno)

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³GetProduct³Autor  ³ Eduardo Riera         ³ Data ³18.09.2003 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³Rotina de recuperacao das bonif. efetudas no periodo de pedi-³±±
±±³          ³dos de venda por produto                                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpC1: Codigo do Usuario                                     ³±±
±±³          ³ExpC2: Codigo do cliente                                     ³±±
±±³          ³ExpD3: Data de Inicio                                        ³±±
±±³          ³ExpD4: Data de termino                                       ³±±
±±³          ³ExpC5: Tipo de Produto                                       ³±±
±±³          ³ExpC6: Grupo de Produto                                      ³±±
±±³          ³ExpC7: Codigo do Produto                                     ³±±
±±³          ³ExpN8: Moeda                                                 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ExpL1: Indica que o metodo foi avaliado com sucesso          ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Este metodo devolve um array com as Bonif. efetuadas         ³±±
±±³          ³                                                             ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ WEB SERVICES                                                ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
WSMETHOD GetProductBonusSalesOrder WSRECEIVE UserCode,CustomerID,DateFrom,DateTo,TypeOfProduct,GroupOfProduct,ProductCode,Currency WSSEND ProductsValueSummary WSSERVICE FtCustomerSalesSummary

Local aArea     := GetArea()                      
Local aRetorno  := {}
Local cCliente  := SubStr(::CustomerID,1,Len(SA1->A1_COD))
Local cLoja     := SubStr(::CustomerID,Len(SA1->A1_COD)+1)
Local cTipo     := SubStr(::TypeOfProduct,1,Len(SB1->B1_TIPO))
Local cGrupo    := SubStr(::GroupOfProduct,1,Len(SB1->B1_GRUPO))
Local cProduto  := SubStr(::ProductCode,1,Len(SB1->B1_COD))
Local nMoeda    := IIf(Empty(::Currency),1,::Currency)
Local nX        := 0
Local nY        := 0
Local lRetorno  := .T.

DEFAULT ::ProductsValueSummary := {}

If PrtChkUser(::UserCode,"FtCustomerSalesSummary","GetProductBonusSalesOrder","SA1",::CustomerID)

	aRetorno := FtPdBonif(8,Nil,::DateFrom,::DateTo  ,cTipo,cGrupo,cProduto,nMoeda,cCliente,cLoja)

	For nX := 1 To Len(aRetorno)	
	
		aadd(::ProductsValueSummary,WSClassNew("ProductSummary"))
		nY := 0
		::ProductsValueSummary[nX]:ProductCode := cProduto
		::ProductsValueSummary[nX]:Description := Posicione("SB1",1,xFilial("SB1")+cProduto,"B1_DESC")
		
		::ProductsValueSummary[nX]:ValueSummary := {}
		aadd(::ProductsValueSummary[nX]:ValueSummary,WSClassNew("GenericStruct"))
		nY++
	
		::ProductsValueSummary[nX]:ValueSummary[nY]:Code := StrZero(nMoeda,2)
		::ProductsValueSummary[nX]:ValueSummary[nY]:Description := STR0025 //"Valor Liquido (Bonificacao-descontos)"
		::ProductsValueSummary[nX]:ValueSummary[nY]:Value := aRetorno[nX][nY+1]

		aadd(::ProductsValueSummary[nX]:ValueSummary,WSClassNew("GenericStruct"))
		nY++

		::ProductsValueSummary[nX]:ValueSummary[nY]:Code := StrZero(nMoeda,2)
		::ProductsValueSummary[nX]:ValueSummary[nY]:Description := STR0026 //"Volume "
		::ProductsValueSummary[nX]:ValueSummary[nY]:Value := aRetorno[nX][nY+1]

		aadd(::ProductsValueSummary[nX]:ValueSummary,WSClassNew("GenericStruct"))
		nY++

		::ProductsValueSummary[nX]:ValueSummary[nY]:Code := StrZero(nMoeda,2)
		::ProductsValueSummary[nX]:ValueSummary[nY]:Description := STR0027 //"Valor Bruto (Bonificacao)"
		::ProductsValueSummary[nX]:ValueSummary[nY]:Value := aRetorno[nX][nY+1]
	
		aadd(::ProductsValueSummary[nX]:ValueSummary,WSClassNew("GenericStruct"))
		nY++

		::ProductsValueSummary[nX]:ValueSummary[nY]:Code := StrZero(nMoeda,2)
		::ProductsValueSummary[nX]:ValueSummary[nY]:Description := STR0028 //"Saldo Liquido (Bonificacao-descontos)"
		::ProductsValueSummary[nX]:ValueSummary[nY]:Value := aRetorno[nX][nY+1]

		aadd(::ProductsValueSummary[nX]:ValueSummary,WSClassNew("GenericStruct"))
		nY++

		::ProductsValueSummary[nX]:ValueSummary[nY]:Code := StrZero(nMoeda,2)
		::ProductsValueSummary[nX]:ValueSummary[nY]:Description := STR0023 //"Saldo em volume"
		::ProductsValueSummary[nX]:ValueSummary[nY]:Value := aRetorno[nX][nY+1]

		aadd(::ProductsValueSummary[nX]:ValueSummary,WSClassNew("GenericStruct"))
		nY++

		::ProductsValueSummary[nX]:ValueSummary[nY]:Code := StrZero(nMoeda,2)
		::ProductsValueSummary[nX]:ValueSummary[nY]:Description := STR0024 //"Saldo Bruto (Vendas)"
		::ProductsValueSummary[nX]:ValueSummary[nY]:Value := aRetorno[nX][nY+1]
	Next nX
Else
	lRetorno := .F.
EndIf
RestArea(aArea)
Return(lRetorno)

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³WSFAT010  ³ Autor ³Eduardo Riera          ³ Data ³07.08.2003  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Web Service responsavel pela manutencao das informacoes      ³±±
±±³          ³de vendas                                                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³                                                              ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³                                                              ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Web Service                                                  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Atualizacoes sofridas desde a Construcao Inicial.                       ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Programador  ³ Data   ³ BOPS ³  Motivo da Alteracao                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³              ³        ³      ³                                          ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Definicao do Web Service                                                ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
WSSERVICE FtSellerSalesSummary      DESCRIPTION STR0029 NAMESPACE "http://webservices.microsiga.com.br/ftsellersalessummary.apw" //"Serviço de consulta as estatísticas de vendas e faturamento ( <b>Restrição de representante comercial</b> )"
    WSDATA UserCode                 AS String
    WSDATA SellerCode               AS String
    WSDATA CustomerID               AS String  OPTIONAL
    WSDATA DateFrom                 As Date    //Data Inicial
    WSDATA DateTo                   As Date    //Data Final
    WSDATA QueryAddWhere            As String
	WSDATA TypeOfProduct            As String  OPTIONAL //Tipo de Produto
	WSDATA GroupOfProduct           As String  OPTIONAL //Grupo de Produto	
	WSDATA ProductCode              As String  OPTIONAL //Codigo do Produto
	WSDATA Currency                 AS Integer OPTIONAL //Moeda
	WSDATA ValueSummary             As Array Of GenericStruct
	WSDATA ProductsValueSummary     As Array Of ProductSummary
	WSDATA Header                   As Array Of BrwHeader
    WSDATA HeaderType               As String
     
    WSMETHOD GetHeadSum                DESCRIPTION STR0002 //"Método que descreve as estruturas de retorno do serviço"
    WSMETHOD GetSalesInvoice           DESCRIPTION STR0003 //"Método de consulta as estatísticas do faturamento no período. <br><br><i>As informações do faturamento são extraídas dos documentos de saída, onde podem ser observadas as informações de quantidade ou valor.</i>"
    WSMETHOD GetReturnInvoice          DESCRIPTION STR0004 //"Método de consulta as estatísticas das devoluções no período. <br><br><i>As informações das devoluções são extraídas dos documentos de entrada, onde podem ser observadas as informações de quantidade ou valor.</i>"
    WSMETHOD GetSalesOrder             DESCRIPTION STR0005 //"Método de consulta as estatísticas de vendas no período. <br><br><i>As informações de vendas são extraídas dos pedidos de venda, onde podem ser observadas as informações de quantidade ou valor.</i>"
    WSMETHOD GetBonusInvoice           DESCRIPTION STR0006 //"Método de consulta as estatísticas do faturamento bonificado no período. <br><br><i>As informações de bonificação são extraídas dos documentos de saída, onde podem ser observadas as informações de quantidade ou valor.</i>"
    WSMETHOD GetBonusSalesOrder        DESCRIPTION STR0007 //"Método de consulta as estatísticas de vendas bonificadas no período. <br><br><i>As informações de bonificação são extraídas dos pedidos de venda, onde podem ser observadas as informações de quantidade ou valor.</i>"
    WSMETHOD GetProductSalesInvoice    DESCRIPTION STR0008 //"Método de consulta as estatísticas do faturamento por produtos no período. <br><br><i>As informações do faturamento são extraídas dos documentos de saída, onde podem ser observadas as informações de quantidade ou valor.</i>"
    WSMETHOD GetProductReturnInvoice   DESCRIPTION STR0009 //"Método de consulta as estatísticas das devoluções por produtos no período. <br><br><i>As informações das devoluções são extraídas dos documentos de entrada, onde podem ser observadas as informações de quantidade ou valor.</i>"
    WSMETHOD GetProductSalesOrder      DESCRIPTION STR0010 //"Método de consulta as estatísticas de vendas por produtos no período. <br><br><i>As informações de vendas são extraídas dos pedidos de venda, onde podem ser observadas as informações de quantidade ou valor.</i>"
    WSMETHOD GetProductBonusInvoice    DESCRIPTION STR0011 //"Método de consulta as estatísticas do faturamento bonificado por produtos no período. <br><br><i>As informações de bonificação são extraídas dos documentos de saída, onde podem ser observadas as informações de quantidade ou valor.</i>"
    WSMETHOD GetProductBonusSalesOrder DESCRIPTION STR0012 //"Método de consulta as estatísticas de vendas bonificadas por produto no período. <br><br><i>As informações de bonificação são extraídas dos pedidos de venda, onde podem ser observadas as informações de quantidade ou valor.</i>"
   
ENDWSSERVICE

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³GetHeadSum³Autor  ³ Eduardo Riera         ³ Data ³07.08.2003 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³Rotina de recuperacao do header das estatísticas de Venda    ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpC1: Nome da estrutura                                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ExpL1: Indica que o metodo foi avaliado com sucesso          ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Este metodo devolve o header de uma estrutura                ³±±
±±³          ³                                                             ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ CRM/Materiais/Portais                                       ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
WSMETHOD GetHeadSum WSRECEIVE HeaderType WSSEND Header WSSERVICE FtSellerSalesSummary

Local aArea := GetArea()	//Guarda a area atual
Local nX    := 0			//Usada como indice de array

::Header := {}
Do Case
	Case ::HeaderType == "GENERICSTRUCT"

		aAdd(::Header,WSClassNew("BrwHeader"))
		nX++
		::Header[nX]:HeaderTitle   := "Codigo"
		::Header[nX]:HeaderField   := "CODE"
		::Header[nX]:HeaderPicture := "@!"
		::Header[nX]:HeaderSize    := 20
		::Header[nX]:HeaderDec     := 0
		::Header[nX]:HeaderType    := "C"
		::Header[nX]:HeaderComboBox:= ""
    	::Header[nX]:HeaderOblig   := .F.

		aAdd(::Header,WSClassNew("BrwHeader"))
		nX++
		::Header[nX]:HeaderTitle   := STR0013
		::Header[nX]:HeaderField   := "DESCRIPTION"
		::Header[nX]:HeaderPicture := "@!"
		::Header[nX]:HeaderSize    := 20
		::Header[nX]:HeaderDec     := 0
		::Header[nX]:HeaderType    := "C"
		::Header[nX]:HeaderComboBox:= ""
    	::Header[nX]:HeaderOblig   := .F.

		aAdd(::Header,WSClassNew("BrwHeader"))
		nX++
		::Header[nX]:HeaderTitle   := "Valor"
		::Header[nX]:HeaderField   := "VALUE"
		::Header[nX]:HeaderPicture := "@E 999,999,999.99"
		::Header[nX]:HeaderSize    := 14
		::Header[nX]:HeaderDec     := 2
		::Header[nX]:HeaderType    := "N"
		::Header[nX]:HeaderComboBox:= ""
    	::Header[nX]:HeaderOblig   := .F.

	Case ::HeaderType == "VALUESUMMARY"
		aadd(::Header,WSClassNew("BrwHeader"))
		nX++
		::Header[nX]:HeaderTitle  := RetTitle("E1_MOEDA")
		::Header[nX]:HeaderField   := "CODE"
		::Header[nX]:HeaderPicture := SX3->X3_PICTURE
		::Header[nX]:HeaderSize    := SX3->X3_TAMANHO
		::Header[nX]:HeaderDec     := SX3->X3_DECIMAL
		::Header[nX]:HeaderType    := "C"
		::Header[nX]:HeaderComboBox:= ""
		::Header[nX]:HeaderOblig   := X3OBRIGAT(SX3->X3_CAMPO)
		
		aadd(::Header,WSClassNew("BrwHeader"))
		nX++
		::Header[nX]:HeaderTitle  := STR0013 //"Descricao"
		::Header[nX]:HeaderField   := "DESCRIPTION"
		::Header[nX]:HeaderPicture := ""
		::Header[nX]:HeaderSize    := 30
		::Header[nX]:HeaderDec     := 0
		::Header[nX]:HeaderType    := "C"
		::Header[nX]:HeaderComboBox:= ""
		::Header[nX]:HeaderOblig   := .F.
		
		aadd(::Header,WSClassNew("BrwHeader"))
		nX++
		::Header[nX]:HeaderTitle  := RetTitle("D2_TOTAL")
		::Header[nX]:HeaderField   := "VALUE"
		::Header[nX]:HeaderPicture := SX3->X3_PICTURE
		::Header[nX]:HeaderSize    := SX3->X3_TAMANHO
		::Header[nX]:HeaderDec     := SX3->X3_DECIMAL
		::Header[nX]:HeaderType    := SX3->X3_TIPO
		::Header[nX]:HeaderComboBox:= ""
		::Header[nX]:HeaderOblig   := X3OBRIGAT(SX3->X3_CAMPO)
				
	Case ::HeaderType == "PRODUCTSUMMARY"
		aadd(::Header,WSClassNew("BrwHeader"))
		nX++
		::Header[nX]:HeaderTitle  := RetTitle("D2_COD")
		::Header[nX]:HeaderField   := "ProductCode"
		::Header[nX]:HeaderPicture := SX3->X3_PICTURE
		::Header[nX]:HeaderSize    := SX3->X3_TAMANHO
		::Header[nX]:HeaderDec     := SX3->X3_DECIMAL
		::Header[nX]:HeaderType    := SX3->X3_TIPO	
		::Header[nX]:HeaderComboBox:= ""
		::Header[nX]:HeaderOblig   := X3OBRIGAT(SX3->X3_CAMPO)
		
		aadd(::Header,WSClassNew("BrwHeader"))
		nX++
		::Header[nX]:HeaderTitle  := RetTitle("B1_DESC")
		::Header[nX]:HeaderField   := "Description"
		::Header[nX]:HeaderPicture := SX3->X3_PICTURE
		::Header[nX]:HeaderSize    := SX3->X3_TAMANHO
		::Header[nX]:HeaderDec     := SX3->X3_DECIMAL
		::Header[nX]:HeaderType    := SX3->X3_TIPO	
		::Header[nX]:HeaderComboBox:= ""
		::Header[nX]:HeaderOblig   := X3OBRIGAT(SX3->X3_CAMPO)
EndCase
RestArea(aArea)
Return(.T.)

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³GetSalesIn³Autor  ³ Eduardo Riera         ³ Data ³07.08.2003 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³Rotina de recuperacao das vendas efetudas no periodo         ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpC1: Codigo do Usuario                                     ³±±
±±³          ³ExpC2: Vendedor                                              ³±±
±±³          ³ExpC3: Cliente                                               ³±±
±±³          ³ExpD4: Data de Inicio                                        ³±±
±±³          ³ExpD5: Data de termino                                       ³±±
±±³          ³ExpC6: Tipo de Produto                                       ³±±
±±³          ³ExpC7: Grupo de Produto                                      ³±±
±±³          ³ExpC8: Codigo do Produto                                     ³±±
±±³          ³ExpN9: Moeda                                                 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ExpL1: Indica que o metodo foi avaliado com sucesso          ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Este metodo devolve um array com as vendas efetuadas         ³±±
±±³          ³                                                             ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ WEB SERVICES                                                ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
WSMETHOD GetSalesInvoice WSRECEIVE UserCode,SellerCode,CustomerID,DateFrom,DateTo,TypeOfProduct,GroupOfProduct,ProductCode,Currency,QueryAddWhere WSSEND ValueSummary WSSERVICE FtSellerSalesSummary

Local aArea := GetArea()                      
Local aRetorno  := {}
Local cTipo     := SubStr(::TypeOfProduct,1,Len(SB1->B1_TIPO))
Local cGrupo    := SubStr(::GroupOfProduct,1,Len(SB1->B1_GRUPO))
Local cProduto  := SubStr(::ProductCode,1,Len(SB1->B1_COD))
Local cCliente  := Nil
Local cLoja     := Nil
Local nMoeda    := IIf(Empty(::Currency),1,::Currency)
Local nX        := 0
Local lRetorno  := .T.

If ::CustomerID <> Nil
	cCliente  := SubStr(::CustomerID,1,Len(SA1->A1_COD))
	cLoja     := SubStr(::CustomerID,Len(SA1->A1_COD)+1)
EndIf

If PrtChkUser(::UserCode,"FtSellerSalesSummary","GetSalesInvoice","SA3",::SellerCode)

	aRetorno := FtNfVendas(4,Nil,::DateFrom,::DateTo,Nil,cTipo,cGrupo,cProduto,nMoeda,cCliente,cLoja,QueryAddWhere)
	
	aadd(::ValueSummary,WSClassNew("GenericStruct"))
	nX++
	::ValueSummary[nX]:Code := StrZero(nMoeda,2)
	::ValueSummary[nX]:Description := STR0014 //"Valor Liquido Vendido (Vendas-descontos)"
	::ValueSummary[nX]:Value := aRetorno[nX]

	aadd(::ValueSummary,WSClassNew("GenericStruct"))
	nX++
	::ValueSummary[nX]:Code := StrZero(nMoeda,2)
	::ValueSummary[nX]:Description := STR0015 //"Volume Vendido "
	::ValueSummary[nX]:Value := aRetorno[nX]

	aadd(::ValueSummary,WSClassNew("GenericStruct"))
	nX++
	::ValueSummary[nX]:Code := StrZero(nMoeda,2)
	::ValueSummary[nX]:Description := STR0016 //"Valor Bruto Vendido (Vendas)"
	::ValueSummary[nX]:Value := aRetorno[nX]
Else
	lRetorno := .F.
EndIf
RestArea(aArea)
Return(lRetorno)

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³GetReturnI³Autor  ³ Eduardo Riera         ³ Data ³07.08.2003 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³Rotina de recuperacao das vendas efetudas no periodo         ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpC1: Codigo do Usuario                                     ³±±
±±³          ³ExpC2: Vendedor                                              ³±±
±±³          ³ExpC3: Cliente                                               ³±±
±±³          ³ExpD4: Data de Inicio                                        ³±±
±±³          ³ExpD5: Data de termino                                       ³±±
±±³          ³ExpC6: Tipo de Produto                                       ³±±
±±³          ³ExpC7: Grupo de Produto                                      ³±±
±±³          ³ExpC8: Codigo do Produto                                     ³±±
±±³          ³ExpN9: Moeda                                                 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ExpL1: Indica que o metodo foi avaliado com sucesso          ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Este metodo devolve um array com as vendas efetuadas         ³±±
±±³          ³                                                             ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ WEB SERVICES                                                ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
WSMETHOD GetReturnInvoice WSRECEIVE UserCode,SellerCode,CustomerID,DateFrom,DateTo,TypeOfProduct,GroupOfProduct,ProductCode,Currency WSSEND ValueSummary WSSERVICE FtSellerSalesSummary

Local aArea 	:= GetArea()
Local aRetorno  := {}
Local cTipo     := PadR( ::TypeOfProduct, Len( SB1->B1_TIPO ) )
Local cGrupo    := PadR( ::GroupOfProduct, Len( SB1->B1_GRUPO ) )
Local cProduto  := PadR( ::ProductCode, Len( SB1->B1_COD ) )
Local cCliente  := Nil
Local cLoja     := Nil
Local nMoeda    := IIf(Empty(::Currency),1,::Currency)
Local nX        := 0
Local lRetorno  := .T.

If ::CustomerID <> Nil
	cCliente  := SubStr(::CustomerID,1,Len(SA1->A1_COD))
	cLoja     := SubStr(::CustomerID,Len(SA1->A1_COD)+1)
EndIf

If PrtChkUser(::UserCode,"FtSellerSalesSummary","GetReturnInvoice","SA3",::SellerCode)
	aRetorno := FtNfDevol(4,Nil,::DateFrom,::DateTo,Nil,cTipo,cGrupo,cProduto,nMoeda,cCliente,cLoja)
	
	aadd(::ValueSummary,WSClassNew("GenericStruct"))
	nX++
	::ValueSummary[nX]:Code := StrZero(nMoeda,2)
	::ValueSummary[nX]:Description := STR0017 //"Valor Liquido devolvido (Vendas-descontos)"
	::ValueSummary[nX]:Value := aRetorno[nX]

	aadd(::ValueSummary,WSClassNew("GenericStruct"))
	nX++
	::ValueSummary[nX]:Code := StrZero(nMoeda,2)
	::ValueSummary[nX]:Description := STR0018 //"Volume devolvido "
	::ValueSummary[nX]:Value := aRetorno[nX]

	aadd(::ValueSummary,WSClassNew("GenericStruct"))
	nX++
	::ValueSummary[nX]:Code := StrZero(nMoeda,2)
	::ValueSummary[nX]:Description := STR0019 //"Valor Bruto devolvido (Vendas)"
	::ValueSummary[nX]:Value := aRetorno[nX]
Else
	lRetorno := .F.
EndIf
RestArea(aArea)
Return(lRetorno)

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³GetSalesOr³Autor  ³ Eduardo Riera         ³ Data ³07.08.2003 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³Rotina de recuperacao das vendas efetudas no periodo de pedi-³±±
±±³          ³dos de venda                                                 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpC1: Codigo do Usuario                                     ³±±
±±³          ³ExpC2: Vendedor                                              ³±±
±±³          ³ExpC3: Cliente                                               ³±±
±±³          ³ExpD4: Data de Inicio                                        ³±±
±±³          ³ExpD5: Data de termino                                       ³±±
±±³          ³ExpC6: Tipo de Produto                                       ³±±
±±³          ³ExpC7: Grupo de Produto                                      ³±±
±±³          ³ExpC8: Codigo do Produto                                     ³±±
±±³          ³ExpN9: Moeda                                                 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ExpL1: Indica que o metodo foi avaliado com sucesso          ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Este metodo devolve um array com as vendas efetuadas         ³±±
±±³          ³                                                             ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ WEB SERVICES                                                ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
WSMETHOD GetSalesOrder WSRECEIVE UserCode,SellerCode,CustomerId,DateFrom,DateTo,TypeOfProduct,GroupOfProduct,ProductCode,Currency,QueryAddWhere WSSEND ValueSummary WSSERVICE FtSellerSalesSummary

Local aArea     := GetArea()                      
Local aRetorno  := {}
Local cTipo     := SubStr(::TypeOfProduct,1,Len(SB1->B1_TIPO))
Local cGrupo    := SubStr(::GroupOfProduct,1,Len(SB1->B1_GRUPO))
Local cProduto  := SubStr(::ProductCode,1,Len(SB1->B1_COD))
Local cCliente  := Nil
Local cLoja     := Nil
Local nMoeda    := IIf(Empty(::Currency),1,::Currency)
Local nX        := 0
Local lRetorno  := .T.

If ::CustomerID <> Nil
	cCliente  := SubStr(::CustomerID,1,Len(SA1->A1_COD))
	cLoja     := SubStr(::CustomerID,Len(SA1->A1_COD)+1)
EndIf

If PrtChkUser(::UserCode,"FtSellerSalesSummary","GetSalesOrder","SA3",::SellerCode)
	aRetorno := FtPdVendas(7,Nil,::DateFrom,::DateTo  ,cTipo,cGrupo,cProduto,nMoeda,cCliente,cLoja,QueryAddWhere)
	
	aadd(::ValueSummary,WSClassNew("GenericStruct"))
	nX++
	::ValueSummary[nX]:Code := StrZero(nMoeda,2)
	::ValueSummary[nX]:Description := STR0020 //"Valor Liquido (Vendas-descontos)"
	::ValueSummary[nX]:Value := aRetorno[nX]

	aadd(::ValueSummary,WSClassNew("GenericStruct"))
	nX++
	::ValueSummary[nX]:Code := StrZero(nMoeda,2)
	::ValueSummary[nX]:Description := STR0015 //"Volume vendido "
	::ValueSummary[nX]:Value := aRetorno[nX]

	aadd(::ValueSummary,WSClassNew("GenericStruct"))
	nX++
	::ValueSummary[nX]:Code := StrZero(nMoeda,2)
	::ValueSummary[nX]:Description := STR0021 //"Valor Bruto (Vendas)"
	::ValueSummary[nX]:Value := aRetorno[nX]
	
		aadd(::ValueSummary,WSClassNew("GenericStruct"))
	nX++
	::ValueSummary[nX]:Code := StrZero(nMoeda,2)
	::ValueSummary[nX]:Description := STR0022 //"Saldo Liquido (Vendas-descontos)"
	::ValueSummary[nX]:Value := aRetorno[nX]

	aadd(::ValueSummary,WSClassNew("GenericStruct"))
	nX++
	::ValueSummary[nX]:Code := StrZero(nMoeda,2)
	::ValueSummary[nX]:Description := STR0023 //"Saldo em volume"
	::ValueSummary[nX]:Value := aRetorno[nX]

	aadd(::ValueSummary,WSClassNew("GenericStruct"))
	nX++
	::ValueSummary[nX]:Code := StrZero(nMoeda,2)
	::ValueSummary[nX]:Description := STR0024 //"Saldo Bruto (Vendas)"
	::ValueSummary[nX]:Value := aRetorno[nX]
Else
	lRetorno := .F.
EndIf
RestArea(aArea)
Return(lRetorno)

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³GetBonusIn³Autor  ³ Eduardo Riera         ³ Data ³07.08.2003 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³Rotina de recuperacao das bonificacoes efetuadas no periodo  ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpC1: Codigo do Usuario                                     ³±±
±±³          ³ExpC2: Vendedor                                              ³±±
±±³          ³ExpC3: Codigo do cliente                                     ³±±
±±³          ³ExpD4: Data de Inicio                                        ³±±
±±³          ³ExpD5: Data de termino                                       ³±±
±±³          ³ExpC6: Tipo de Produto                                       ³±±
±±³          ³ExpC7: Grupo de Produto                                      ³±±
±±³          ³ExpC8: Codigo do Produto                                     ³±±
±±³          ³ExpN9: Moeda                                                 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ExpL1: Indica que o metodo foi avaliado com sucesso          ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Este metodo devolve um array com as bonificacoes efetuadas   ³±±
±±³          ³                                                             ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ WEB SERVICES                                                ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
WSMETHOD GetBonusInvoice WSRECEIVE UserCode,SellerCode,CustomerID,DateFrom,DateTo,TypeOfProduct,GroupOfProduct,ProductCode,Currency WSSEND ValueSummary WSSERVICE FtSellerSalesSummary

Local aArea := GetArea()                      
Local aRetorno  := {}
Local cCliente  := SubStr(::CustomerID,1,Len(SA1->A1_COD))
Local cLoja     := SubStr(::CustomerID,Len(SA1->A1_COD)+1)
Local cTipo     := SubStr(::TypeOfProduct,1,Len(SB1->B1_TIPO))
Local cGrupo    := SubStr(::GroupOfProduct,1,Len(SB1->B1_GRUPO))
Local cProduto  := SubStr(::ProductCode,1,Len(SB1->B1_COD))
Local nMoeda    := IIf(Empty(::Currency),1,::Currency)
Local nX        := 0
Local lRetorno  := .T.

If PrtChkUser(::UserCode,"FtSellerSalesSummary","GetBonusInvoice","SA3",::SellerCode)

	aRetorno := FtNfBonif(4,Nil,::DateFrom,::DateTo  ,Nil,cTipo,cGrupo,cProduto,nMoeda,cCliente,cLoja)
	
	aadd(::ValueSummary,WSClassNew("GenericStruct"))
	nX++
	::ValueSummary[nX]:Code := StrZero(nMoeda,2)
	::ValueSummary[nX]:Description := STR0025 //"Valor Liquido (Bonificacao-descontos)"
	::ValueSummary[nX]:Value := aRetorno[nX]

	aadd(::ValueSummary,WSClassNew("GenericStruct"))
	nX++
	::ValueSummary[nX]:Code := StrZero(nMoeda,2)
	::ValueSummary[nX]:Description := STR0026 //"Volume "
	::ValueSummary[nX]:Value := aRetorno[nX]

	aadd(::ValueSummary,WSClassNew("GenericStruct"))
	nX++
	::ValueSummary[nX]:Code := StrZero(nMoeda,2)
	::ValueSummary[nX]:Description := STR0027 //"Valor Bruto (Bonificacao)"
	::ValueSummary[nX]:Value := aRetorno[nX]
Else
	lRetorno := .F.
EndIf
RestArea(aArea)
Return(lRetorno)

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³GetBonusSa³Autor  ³ Eduardo Riera         ³ Data ³07.08.2003 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³Rotina de recuperacao das bonif. efetudas no periodo de pedi-³±±
±±³          ³dos de venda                                                 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpC1: Codigo do Usuario                                     ³±±
±±³          ³ExpC2: Vendedor                                              ³±±
±±³          ³ExpC3: Codigo do cliente                                     ³±±
±±³          ³ExpD4: Data de Inicio                                        ³±±
±±³          ³ExpD5: Data de termino                                       ³±±
±±³          ³ExpC6: Tipo de Produto                                       ³±±
±±³          ³ExpC7: Grupo de Produto                                      ³±±
±±³          ³ExpC8: Codigo do Produto                                     ³±±
±±³          ³ExpN9: Moeda                                                 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ExpL1: Indica que o metodo foi avaliado com sucesso          ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Este metodo devolve um array com as Bonif. efetuadas         ³±±
±±³          ³                                                             ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ WEB SERVICES                                                ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
WSMETHOD GetBonusSalesOrder WSRECEIVE UserCode,SellerCode,CustomerID,DateFrom,DateTo,TypeOfProduct,GroupOfProduct,ProductCode,Currency WSSEND ValueSummary WSSERVICE FtSellerSalesSummary

Local aArea     := GetArea()                      
Local aRetorno  := {}
Local cCliente  := SubStr(::CustomerID,1,Len(SA1->A1_COD))
Local cLoja     := SubStr(::CustomerID,Len(SA1->A1_COD)+1)
Local cTipo     := SubStr(::TypeOfProduct,1,Len(SB1->B1_TIPO))
Local cGrupo    := SubStr(::GroupOfProduct,1,Len(SB1->B1_GRUPO))
Local cProduto  := SubStr(::ProductCode,1,Len(SB1->B1_COD))
Local nMoeda    := IIf(Empty(::Currency),1,::Currency)
Local nX        := 0
Local lRetorno  := .T.

If PrtChkUser(::UserCode,"FtSellerSalesSummary","GetBonusSalesOrder","SA3",::SellerCode)
	aRetorno := FtPdBonif(7,Nil,::DateFrom,::DateTo  ,cTipo,cGrupo,cProduto,nMoeda,cCliente,cLoja)
	
	aadd(::ValueSummary,WSClassNew("GenericStruct"))
	nX++
	::ValueSummary[nX]:Code := StrZero(nMoeda,2)
	::ValueSummary[nX]:Description := STR0025 //"Valor Liquido (Bonificacao-descontos)"
	::ValueSummary[nX]:Value := aRetorno[nX]

	aadd(::ValueSummary,WSClassNew("GenericStruct"))
	nX++
	::ValueSummary[nX]:Code := StrZero(nMoeda,2)
	::ValueSummary[nX]:Description := STR0026 //"Volume "
	::ValueSummary[nX]:Value := aRetorno[nX]

	aadd(::ValueSummary,WSClassNew("GenericStruct"))
	nX++
	::ValueSummary[nX]:Code := StrZero(nMoeda,2)
	::ValueSummary[nX]:Description := STR0027 //"Valor Bruto (Bonificacao)"
	::ValueSummary[nX]:Value := aRetorno[nX]
	
		aadd(::ValueSummary,WSClassNew("GenericStruct"))
	nX++
	::ValueSummary[nX]:Code := StrZero(nMoeda,2)
	::ValueSummary[nX]:Description := STR0028 //"Saldo Liquido (Bonificacao-descontos)"
	::ValueSummary[nX]:Value := aRetorno[nX]

	aadd(::ValueSummary,WSClassNew("GenericStruct"))
	nX++
	::ValueSummary[nX]:Code := StrZero(nMoeda,2)
	::ValueSummary[nX]:Description := STR0023 //"Saldo em volume"
	::ValueSummary[nX]:Value := aRetorno[nX]

	aadd(::ValueSummary,WSClassNew("GenericStruct"))
	nX++
	::ValueSummary[nX]:Code := StrZero(nMoeda,2)
	::ValueSummary[nX]:Description := STR0024 //"Saldo Bruto (Vendas)"
	::ValueSummary[nX]:Value := aRetorno[nX]
Else
	lRetorno := .F.
EndIf
RestArea(aArea)
Return(lRetorno)

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³GetProduct³Autor  ³ Eduardo Riera         ³ Data ³18.09.2003 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³Rotina de recuperacao das vendas efetudas no periodo por     ³±±
±±³          ³produto                                                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpC1: Codigo do Usuario                                     ³±±
±±³          ³ExpC2: Codigo do vendedor                                    ³±±
±±³          ³ExpC2: Codigo do cliente                                     ³±±
±±³          ³ExpD3: Data de Inicio                                        ³±±
±±³          ³ExpD4: Data de termino                                       ³±±
±±³          ³ExpC5: Tipo de Produto                                       ³±±
±±³          ³ExpC6: Grupo de Produto                                      ³±±
±±³          ³ExpC7: Codigo do Produto                                     ³±±
±±³          ³ExpN8: Moeda                                                 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ExpL1: Indica que o metodo foi avaliado com sucesso          ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Este metodo devolve um array com as vendas efetuadas         ³±±
±±³          ³                                                             ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ WEB SERVICES                                                ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
WSMETHOD GetProductSalesInvoice WSRECEIVE UserCode,SellerCode,CustomerID,DateFrom,DateTo,TypeOfProduct,GroupOfProduct,ProductCode,Currency,QueryAddWhere WSSEND ProductsValueSummary WSSERVICE FtSellerSalesSummary

Local aArea := GetArea()                      
Local aRetorno  := {}
Local cCliente  := SubStr(::CustomerID,1,Len(SA1->A1_COD))
Local cLoja     := SubStr(::CustomerID,Len(SA1->A1_COD)+1)
Local cTipo     := SubStr(::TypeOfProduct,1,Len(SB1->B1_TIPO))
Local cGrupo    := SubStr(::GroupOfProduct,1,Len(SB1->B1_GRUPO))
Local cProduto  := SubStr(::ProductCode,1,Len(SB1->B1_COD))
Local nMoeda    := IIf(Empty(::Currency),1,::Currency)
Local nX        := 0
Local nY        := 0
Local lRetorno  := .T.

::ProductsValueSummary := {}

If PrtChkUser(::UserCode,"FtCustomerSalesSummary","GetProductSalesInvoice","SA3",::SellerCode)

	aRetorno := FtNfVendas(5,Nil,::DateFrom,::DateTo  ,Nil,cTipo,cGrupo,cProduto,nMoeda,cCliente,cLoja,::QueryAddWhere)
	
	For nX := 1 To Len(aRetorno)	
		aadd(::ProductsValueSummary,WSClassNew("ProductSummary"))
		nY := 0
		::ProductsValueSummary[nX]:ProductCode := cProduto
		::ProductsValueSummary[nX]:Description := Posicione("SB1",1,xFilial("SB1")+cProduto,"B1_DESC")
		
		::ProductsValueSummary[nX]:ValueSummary := {}
		aadd(::ProductsValueSummary[nX]:ValueSummary,WSClassNew("GenericStruct"))
		nY++
		
		::ProductsValueSummary[nX]:ValueSummary[nY]:Code := StrZero(nMoeda,2)
		::ProductsValueSummary[nX]:ValueSummary[nY]:Description := STR0014 //"Valor Liquido Vendido (Vendas-descontos)"
		::ProductsValueSummary[nX]:ValueSummary[nY]:Value := aRetorno[nX][nY+1]

		aadd(::ProductsValueSummary[nX]:ValueSummary,WSClassNew("GenericStruct"))
		nY++

		::ProductsValueSummary[nX]:ValueSummary[nY]:Code := StrZero(nMoeda,2)
		::ProductsValueSummary[nX]:ValueSummary[nY]:Description := STR0015 //"Volume Vendido "
		::ProductsValueSummary[nX]:ValueSummary[nY]:Value := aRetorno[nX][nY+1]

		aadd(::ProductsValueSummary[nX]:ValueSummary,WSClassNew("GenericStruct"))
		nY++
		::ProductsValueSummary[nX]:ValueSummary[nY]:Code := StrZero(nMoeda,2)
		::ProductsValueSummary[nX]:ValueSummary[nY]:Description := STR0016 //"Valor Bruto Vendido (Vendas)"
		::ProductsValueSummary[nX]:ValueSummary[nY]:Value := aRetorno[nX][nY+1]
		
	Next nX
Else
	lRetorno := .F.
EndIf
RestArea(aArea)
Return(lRetorno)

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³GetProduct³Autor  ³ Eduardo Riera         ³ Data ³18.09.2003 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³Rotina de recuperacao das vendas efetudas no periodo         ³±±
±±³          ³por produto                                                  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpC1: Codigo do Usuario                                     ³±±
±±³          ³ExpC2: Codigo do cliente                                     ³±±
±±³          ³ExpD3: Data de Inicio                                        ³±±
±±³          ³ExpD4: Data de termino                                       ³±±
±±³          ³ExpC5: Tipo de Produto                                       ³±±
±±³          ³ExpC6: Grupo de Produto                                      ³±±
±±³          ³ExpC7: Codigo do Produto                                     ³±±
±±³          ³ExpN8: Moeda                                                 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ExpL1: Indica que o metodo foi avaliado com sucesso          ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Este metodo devolve um array com as vendas efetuadas         ³±±
±±³          ³                                                             ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ WEB SERVICES                                                ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
WSMETHOD GetProductReturnInvoice WSRECEIVE UserCode,SellerCode,CustomerID,DateFrom,DateTo,TypeOfProduct,GroupOfProduct,ProductCode,Currency WSSEND ProductsValueSummary WSSERVICE FtSellerSalesSummary

Local aArea := GetArea()                      
Local aRetorno  := {}
Local cCliente  := SubStr(::CustomerID,1,Len(SA1->A1_COD))
Local cLoja     := SubStr(::CustomerID,Len(SA1->A1_COD)+1)
Local cTipo     := SubStr(::TypeOfProduct,1,Len(SB1->B1_TIPO))
Local cGrupo    := SubStr(::GroupOfProduct,1,Len(SB1->B1_GRUPO))
Local cProduto  := SubStr(::ProductCode,1,Len(SB1->B1_COD))
Local nMoeda    := IIf(Empty(::Currency),1,::Currency)
Local nX        := 0
Local nY        := 0
Local lRetorno  := .T.

DEFAULT ::ProductsValueSummary := {}

If PrtChkUser(::UserCode,"FtCustomerSalesSummary","GetProductReturnInvoice","SA3",::SellerCode)

	aRetorno := FtNfDevol(5,Nil,::DateFrom,::DateTo,Nil,cTipo,cGrupo,cProduto,nMoeda,cCliente,cLoja)

	For nX := 1 To Len(aRetorno)
	
		aadd(::ProductsValueSummary,WSClassNew("ProductSummary"))
		nY := 0
		::ProductsValueSummary[nX]:ProductCode := aRetorno[nX][nY+1]
		::ProductsValueSummary[nX]:Description := Posicione("SB1",1,xFilial("SB1")+cProduto,"B1_DESC")
		
		::ProductsValueSummary[nX]:ValueSummary := {}
		aadd(::ProductsValueSummary[nX]:ValueSummary,WSClassNew("GenericStruct"))
		nY++

		::ProductsValueSummary[nX]:ValueSummary[nY]:Code := StrZero(nMoeda,2)
		::ProductsValueSummary[nX]:ValueSummary[nY]:Description := STR0017 //"Valor Liquido devolvido (Vendas-descontos)"
		::ProductsValueSummary[nX]:ValueSummary[nY]:Value := aRetorno[nX][nY+1]

		aadd(::ProductsValueSummary[nX]:ValueSummary,WSClassNew("GenericStruct"))
		nY++
		::ProductsValueSummary[nX]:ValueSummary[nY]:Code := StrZero(nMoeda,2)
		::ProductsValueSummary[nX]:ValueSummary[nY]:Description := STR0018 //"Volume devolvido "
		::ProductsValueSummary[nX]:ValueSummary[nY]:Value := aRetorno[nX][nY+1]

		aadd(::ProductsValueSummary[nX]:ValueSummary,WSClassNew("GenericStruct"))
		nY++
		::ProductsValueSummary[nX]:ValueSummary[nY]:Code := StrZero(nMoeda,2)
		::ProductsValueSummary[nX]:ValueSummary[nY]:Description := STR0019 //"Valor Bruto devolvido (Vendas)"
		::ProductsValueSummary[nX]:ValueSummary[nY]:Value := aRetorno[nX][nY+1]
		
	Next nX		
Else
	lRetorno := .F.
EndIf
RestArea(aArea)
Return(lRetorno)

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³GetProduct³Autor  ³ Eduardo Riera         ³ Data ³07.08.2003 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³Rotina de recuperacao das vendas efetudas no periodo de pedi-³±±
±±³          ³dos de venda por produto                                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpC1: Codigo do Usuario                                     ³±±
±±³          ³ExpC2: Codigo do cliente                                     ³±±
±±³          ³ExpD3: Data de Inicio                                        ³±±
±±³          ³ExpD4: Data de termino                                       ³±±
±±³          ³ExpC5: Tipo de Produto                                       ³±±
±±³          ³ExpC6: Grupo de Produto                                      ³±±
±±³          ³ExpC7: Codigo do Produto                                     ³±±
±±³          ³ExpN8: Moeda                                                 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ExpL1: Indica que o metodo foi avaliado com sucesso          ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Este metodo devolve um array com as vendas efetuadas         ³±±
±±³          ³                                                             ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ WEB SERVICES                                                ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
WSMETHOD GetProductSalesOrder WSRECEIVE UserCode,SellerCode,CustomerID,DateFrom,DateTo,TypeOfProduct,GroupOfProduct,ProductCode,Currency,QueryAddWhere WSSEND ProductsValueSummary WSSERVICE FtSellerSalesSummary

Local aArea     := GetArea()                      
Local aRetorno  := {}
Local cCliente  := SubStr(::CustomerID,1,Len(SA1->A1_COD))
Local cLoja     := SubStr(::CustomerID,Len(SA1->A1_COD)+1)
Local cTipo     := SubStr(::TypeOfProduct,1,Len(SB1->B1_TIPO))
Local cGrupo    := SubStr(::GroupOfProduct,1,Len(SB1->B1_GRUPO))
Local cProduto  := SubStr(::ProductCode,1,Len(SB1->B1_COD))
Local nMoeda    := IIf(Empty(::Currency),1,::Currency)
Local nX        := 0
Local nY        := 0
Local lRetorno  := .T.

DEFAULT ::ProductsValueSummary := {}

If PrtChkUser(::UserCode,"FtCustomerSalesSummary","GetProductSalesOrder","SA3",::SellerCode)

	aRetorno := FtPdVendas(8,Nil,::DateFrom,::DateTo  ,cTipo,cGrupo,cProduto,nMoeda,cCliente,cLoja,::QueryAddWhere)
	For nX := 1 To Len(aRetorno)
	
		aadd(::ProductsValueSummary,WSClassNew("ProductSummary"))
		nY := 0
		::ProductsValueSummary[nX]:ProductCode := cProduto
		::ProductsValueSummary[nX]:Description := Posicione("SB1",1,xFilial("SB1")+cProduto,"B1_DESC")
		
		::ProductsValueSummary[nX]:ValueSummary := {}
		aadd(::ProductsValueSummary[nX]:ValueSummary,WSClassNew("GenericStruct"))
		nY++

		::ProductsValueSummary[nX]:ValueSummary[nY]:Code := StrZero(nMoeda,2)
		::ProductsValueSummary[nX]:ValueSummary[nY]:Description := STR0020 //"Valor Liquido (Vendas-descontos)"
		::ProductsValueSummary[nX]:ValueSummary[nY]:Value := aRetorno[nX][nY+1]

		aadd(::ProductsValueSummary[nX]:ValueSummary,WSClassNew("GenericStruct"))
		nY++
		::ProductsValueSummary[nX]:ValueSummary[nY]:Code := StrZero(nMoeda,2)
		::ProductsValueSummary[nX]:ValueSummary[nY]:Description := STR0015 //"Volume vendido "
		::ProductsValueSummary[nX]:ValueSummary[nY]:Value := aRetorno[nX][nY+1]

		aadd(::ProductsValueSummary[nX]:ValueSummary,WSClassNew("GenericStruct"))
		nY++
		::ProductsValueSummary[nX]:ValueSummary[nY]:Code := StrZero(nMoeda,2)
		::ProductsValueSummary[nX]:ValueSummary[nY]:Description := STR0021 //"Valor Bruto (Vendas)"
		::ProductsValueSummary[nX]:ValueSummary[nY]:Value := aRetorno[nX][nY+1]
	
		aadd(::ProductsValueSummary[nX]:ValueSummary,WSClassNew("GenericStruct"))
		nY++

		::ProductsValueSummary[nX]:ValueSummary[nY]:Code := StrZero(nMoeda,2)
		::ProductsValueSummary[nX]:ValueSummary[nY]:Description := STR0022 //"Saldo Liquido (Vendas-descontos)"
		::ProductsValueSummary[nX]:ValueSummary[nY]:Value := aRetorno[nX][nY+1]

		aadd(::ProductsValueSummary[nX]:ValueSummary,WSClassNew("GenericStruct"))
		nY++

		::ProductsValueSummary[nX]:ValueSummary[nY]:Code := StrZero(nMoeda,2)
		::ProductsValueSummary[nX]:ValueSummary[nY]:Description := STR0023 //"Saldo em volume"
		::ProductsValueSummary[nX]:ValueSummary[nY]:Value := aRetorno[nX][nY+1]

		aadd(::ProductsValueSummary[nX]:ValueSummary,WSClassNew("GenericStruct"))
		nY++

		::ProductsValueSummary[nX]:ValueSummary[nY]:Code := StrZero(nMoeda,2)
		::ProductsValueSummary[nX]:ValueSummary[nY]:Description := STR0024 //"Saldo Bruto (Vendas)"
		::ProductsValueSummary[nX]:ValueSummary[nY]:Value := aRetorno[nX][nY+1]
	Next nX
Else
	lRetorno := .F.
EndIf
RestArea(aArea)
Return(lRetorno)

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³GetProduct³Autor  ³ Eduardo Riera         ³ Data ³18.09.2003 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³Rotina de recuperacao das bonificacoes efetuadas no periodo  ³±±
±±³          ³por produto                                                  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpC1: Codigo do Usuario                                     ³±±
±±³          ³ExpC2: Codigo do cliente                                     ³±±
±±³          ³ExpD3: Data de Inicio                                        ³±±
±±³          ³ExpD4: Data de termino                                       ³±±
±±³          ³ExpC5: Tipo de Produto                                       ³±±
±±³          ³ExpC6: Grupo de Produto                                      ³±±
±±³          ³ExpC7: Codigo do Produto                                     ³±±
±±³          ³ExpN8: Moeda                                                 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ExpL1: Indica que o metodo foi avaliado com sucesso          ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Este metodo devolve um array com as bonificacoes efetuadas   ³±±
±±³          ³                                                             ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ WEB SERVICES                                                ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
WSMETHOD GetProductBonusInvoice WSRECEIVE UserCode,SellerCode,CustomerID,DateFrom,DateTo,TypeOfProduct,GroupOfProduct,ProductCode,Currency WSSEND ProductsValueSummary WSSERVICE FtSellerSalesSummary

Local aArea := GetArea()                      
Local aRetorno  := {}
Local cCliente  := SubStr(::CustomerID,1,Len(SA1->A1_COD))
Local cLoja     := SubStr(::CustomerID,Len(SA1->A1_COD)+1)
Local cTipo     := SubStr(::TypeOfProduct,1,Len(SB1->B1_TIPO))
Local cGrupo    := SubStr(::GroupOfProduct,1,Len(SB1->B1_GRUPO))
Local cProduto  := SubStr(::ProductCode,1,Len(SB1->B1_COD))
Local nMoeda    := IIf(Empty(::Currency),1,::Currency)
Local nX        := 0
Local nY        := 0
Local lRetorno  := .T.

DEFAULT ::ProductsValueSummary := {}

If PrtChkUser(::UserCode,"FtCustomerSalesSummary","GetProductBonusInvoice","SA3",::SellerCode)

	aRetorno := FtNfBonif(5,Nil,::DateFrom,::DateTo  ,Nil,cTipo,cGrupo,cProduto,nMoeda,cCliente,cLoja)

	For nX := 1 To Len(aRetorno)
	
		aadd(::ProductsValueSummary,WSClassNew("ProductSummary"))
		nY := 0
		::ProductsValueSummary[nX]:ProductCode := aRetorno[nX][nY+1]
		::ProductsValueSummary[nX]:Description := Posicione("SB1",1,xFilial("SB1")+aRetorno[nX][nY+1],"B1_DESC")
		
		::ProductsValueSummary[nX]:ValueSummary := {}
		aadd(::ProductsValueSummary[nX]:ValueSummary,WSClassNew("GenericStruct"))
		nY++
		
		::ProductsValueSummary[nX]:ValueSummary[nY]:Code := StrZero(nMoeda,2)
		::ProductsValueSummary[nX]:ValueSummary[nY]:Description := STR0025 //"Valor Liquido (Bonificacao-descontos)"
		::ProductsValueSummary[nX]:ValueSummary[nY]:Value := aRetorno[nX][nY+1]

		aadd(::ProductsValueSummary[nX]:ValueSummary,WSClassNew("GenericStruct"))
		nY++
		
		::ProductsValueSummary[nX]:ValueSummary[nY]:Code := StrZero(nMoeda,2)
		::ProductsValueSummary[nX]:ValueSummary[nY]:Description := STR0026 //"Volume "
		::ProductsValueSummary[nX]:ValueSummary[nY]:Value := aRetorno[nX][nY+1]
		
		aadd(::ProductsValueSummary[nX]:ValueSummary,WSClassNew("GenericStruct"))
		nY++

		::ProductsValueSummary[nX]:ValueSummary[nY]:Code := StrZero(nMoeda,2)
		::ProductsValueSummary[nX]:ValueSummary[nY]:Description := STR0027 //"Valor Bruto (Bonificacao)"
		::ProductsValueSummary[nX]:ValueSummary[nY]:Value := aRetorno[nX][nY+1]
	Next nX
Else
	lRetorno := .F.
EndIf
RestArea(aArea)
Return(lRetorno)

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³GetProduct³Autor  ³ Eduardo Riera         ³ Data ³18.09.2003 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³Rotina de recuperacao das bonif. efetudas no periodo de pedi-³±±
±±³          ³dos de venda por produto                                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpC1: Codigo do Usuario                                     ³±±
±±³          ³ExpC2: Codigo do cliente                                     ³±±
±±³          ³ExpD3: Data de Inicio                                        ³±±
±±³          ³ExpD4: Data de termino                                       ³±±
±±³          ³ExpC5: Tipo de Produto                                       ³±±
±±³          ³ExpC6: Grupo de Produto                                      ³±±
±±³          ³ExpC7: Codigo do Produto                                     ³±±
±±³          ³ExpN8: Moeda                                                 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ExpL1: Indica que o metodo foi avaliado com sucesso          ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Este metodo devolve um array com as Bonif. efetuadas         ³±±
±±³          ³                                                             ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ WEB SERVICES                                                ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
WSMETHOD GetProductBonusSalesOrder WSRECEIVE UserCode,SellerCode,CustomerID,DateFrom,DateTo,TypeOfProduct,GroupOfProduct,ProductCode,Currency WSSEND ProductsValueSummary WSSERVICE FtSellerSalesSummary

Local aArea     := GetArea()                      
Local aRetorno  := {}
Local cCliente  := SubStr(::CustomerID,1,Len(SA1->A1_COD))
Local cLoja     := SubStr(::CustomerID,Len(SA1->A1_COD)+1)
Local cTipo     := SubStr(::TypeOfProduct,1,Len(SB1->B1_TIPO))
Local cGrupo    := SubStr(::GroupOfProduct,1,Len(SB1->B1_GRUPO))
Local cProduto  := SubStr(::ProductCode,1,Len(SB1->B1_COD))
Local nMoeda    := IIf(Empty(::Currency),1,::Currency)
Local nX        := 0
Local nY        := 0
Local lRetorno  := .T.

DEFAULT ::ProductsValueSummary := {}

If PrtChkUser(::UserCode,"FtCustomerSalesSummary","GetProductBonusSalesOrder","SA3",::SellerCode)

	aRetorno := FtPdBonif(8,Nil,::DateFrom,::DateTo  ,cTipo,cGrupo,cProduto,nMoeda,cCliente,cLoja)

	For nX := 1 To Len(aRetorno)	
	
		aadd(::ProductsValueSummary,WSClassNew("ProductSummary"))
		nY := 0
		::ProductsValueSummary[nX]:ProductCode := cProduto
		::ProductsValueSummary[nX]:Description := Posicione("SB1",1,xFilial("SB1")+cProduto,"B1_DESC")
		
		::ProductsValueSummary[nX]:ValueSummary := {}
		aadd(::ProductsValueSummary[nX]:ValueSummary,WSClassNew("GenericStruct"))
		nY++
	
		::ProductsValueSummary[nX]:ValueSummary[nY]:Code := StrZero(nMoeda,2)
		::ProductsValueSummary[nX]:ValueSummary[nY]:Description := STR0025 //"Valor Liquido (Bonificacao-descontos)"
		::ProductsValueSummary[nX]:ValueSummary[nY]:Value := aRetorno[nX][nY+1]

		aadd(::ProductsValueSummary[nX]:ValueSummary,WSClassNew("GenericStruct"))
		nY++

		::ProductsValueSummary[nX]:ValueSummary[nY]:Code := StrZero(nMoeda,2)
		::ProductsValueSummary[nX]:ValueSummary[nY]:Description := STR0026 //"Volume "
		::ProductsValueSummary[nX]:ValueSummary[nY]:Value := aRetorno[nX][nY+1]

		aadd(::ProductsValueSummary[nX]:ValueSummary,WSClassNew("GenericStruct"))
		nY++

		::ProductsValueSummary[nX]:ValueSummary[nY]:Code := StrZero(nMoeda,2)
		::ProductsValueSummary[nX]:ValueSummary[nY]:Description := STR0027 //"Valor Bruto (Bonificacao)"
		::ProductsValueSummary[nX]:ValueSummary[nY]:Value := aRetorno[nX][nY+1]
	
		aadd(::ProductsValueSummary[nX]:ValueSummary,WSClassNew("GenericStruct"))
		nY++

		::ProductsValueSummary[nX]:ValueSummary[nY]:Code := StrZero(nMoeda,2)
		::ProductsValueSummary[nX]:ValueSummary[nY]:Description := STR0028 //"Saldo Liquido (Bonificacao-descontos)"
		::ProductsValueSummary[nX]:ValueSummary[nY]:Value := aRetorno[nX][nY+1]

		aadd(::ProductsValueSummary[nX]:ValueSummary,WSClassNew("GenericStruct"))
		nY++

		::ProductsValueSummary[nX]:ValueSummary[nY]:Code := StrZero(nMoeda,2)
		::ProductsValueSummary[nX]:ValueSummary[nY]:Description := STR0023 //"Saldo em volume"
		::ProductsValueSummary[nX]:ValueSummary[nY]:Value := aRetorno[nX][nY+1]

		aadd(::ProductsValueSummary[nX]:ValueSummary,WSClassNew("GenericStruct"))
		nY++

		::ProductsValueSummary[nX]:ValueSummary[nY]:Code := StrZero(nMoeda,2)
		::ProductsValueSummary[nX]:ValueSummary[nY]:Description := STR0024 //"Saldo Bruto (Vendas)"
		::ProductsValueSummary[nX]:ValueSummary[nY]:Value := aRetorno[nX][nY+1]
	Next nX
Else
	lRetorno := .F.
EndIf
RestArea(aArea)
Return(lRetorno)

Function wsfatx010()
Return
