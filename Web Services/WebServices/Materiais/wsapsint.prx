#INCLUDE "APWEBSRV.CH"
#INCLUDE "PROTHEUS.CH"
#INCLUDE "WSAPSINT.CH"

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Definicao da estruturas utilizadas                                      ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
WSSTRUCT POOperation
	WSDATA POID                     AS String OPTIONAL	//-- Numero da OP (obrigatorio quando IDAPS nao informado)
	WSDATA OperationGuide           AS String			//-- Codigo do roteiro de operacoes
	WSDATA Operation                AS String			//-- Codigo da operacao
	WSDATA ResourceCode             AS String OPTIONAL	//-- Codigo do recurso alocado para a operacao
	WSDATA Tool                     AS String OPTIONAL	//-- Codigo da ferramenta alocada para a operacao
	WSDATA WorkCenter               AS String OPTIONAL	//-- Codigo do centro de trabalho
	WSDATA Quantity                 AS Float			//-- Quantidade alocada na operacao
	WSDATA Setup                    AS Float  OPTIONAL	//-- Temp de setup da operacao
	WSDATA Time                     AS Float			//-- Tempo de trabalho da operacao
	WSDATA IDAPS	                AS String OPTIONAL  //-- ID da OP no APS (obrigatorio quando POID nao informado)
	WSDATA UserFields               As Array Of UserField OPTIONAL
	WSDATA InitialHour		AS String OPTIONAL //-- Hora de Inicio da Operação
	WSDATA EndHour			AS String OPTIONAL //-- Hora de Fim da Operação
	WSDATA InitialDate		AS String OPTIONAL //-- Data de Inicio da Operação
	WSDATA EndDate			AS String OPTIONAL //-- Data de Fim da Operação
ENDWSSTRUCT

WSSTRUCT SalesOrderRepr
	WSDATA SoHeader					AS SalesOrderHeaderRepr
	WSDATA SoItem					AS ARRAY OF SalesOrderItemRepr
ENDWSSTRUCT

WSSTRUCT SalesOrderHeaderRepr
	WSDATA OrderID					AS String  OPTIONAL //	Numero do Pedido
	WSDATA CustomerCode				AS String			//	Codigo do Cliente
	WSDATA CustomerUnit				AS String			//	Loja do Cliente
	WSDATA CustomerType				AS String OPTIONAL	//	Tipo do Cliente
	WSDATA PaymentPlanCode			AS String OPTIONAL  //	Condicao de Pagamento
ENDWSSTRUCT

WSSTRUCT TOTVSAPSPO
	WSDATA POHeader					AS ProductionOrderView // Ordem de Producao
 	WSDATA Operations 				AS ARRAY OF POOperation // Tipos de Operacoes
 	WSDATA PurchasesRequest 		As ARRAY OF PurchasesRequestView  // Solicitacao de Compra
ENDWSSTRUCT                                               

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Definicao da Estrutura de Pedido de Venda                               ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
WSSTRUCT SalesOrderItemRepr
	WSDATA OrderID					AS String OPTIONAL  //	Numero do Pedido
	WSDATA OrderItem				AS String 			//	Numero do Item no Pedido
	WSDATA ProductID				AS String			//	Codigo do Produto
	WSDATA Quantity					AS Float  OPTIONAL  //	Quantidade Vendida
	WSDATA DeliveryDate				AS Date	  OPTIONAL	//	Data da Entrega
ENDWSSTRUCT

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³WSAPSINTR ³ Autor ³Erike Yuri da Silva    ³ Data ³17/10/2006  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Web Service das funcionalidades de integracao de com Aps     ³±±
±±³          ³                                                              ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³                                                              ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³                                                              ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Materiais/Portais	                                        ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Atualizacoes sofridas desde a Construcao Inicial.                       ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Programador  ³ Data   ³ BOPS ³  Motivo da Alteracao                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³              ³        ³      ³                                          ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Definicao do Web Service de Controle do Usuario                         ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
WSSERVICE MtIntegrationAPS DESCRIPTION STR0001 NAMESPACE "http://webservices.microsiga.com.br/mtIntegrationaps.apw"  // ### "Servico de integracao APS"
	WSDATA UserCode               	AS String
	WSDATA CustomerID			  	AS String
	WSDATA OrderID				  	AS String
	WSDATA SalesOrder	  		  	AS SalesOrderRepr
	WSDATA WsNull                 	AS String
	
	WSDATA POFrom					AS String	OPTIONAL
	WSDATA POTo						AS String	OPTIONAL
	WSDATA PODateFrom				AS Date		OPTIONAL
	WSDATA PODateTo					AS Date		OPTIONAL
	WSDATA POStartDateFrom			AS Date		OPTIONAL
	WSDATA POStartDateTo			AS Date		OPTIONAL
	WSDATA POFinishDateFrom			AS Date		OPTIONAL
	WSDATA POFinishDateTo			AS Date		OPTIONAL
	WSDATA QueryAddWhere			AS String	OPTIONAL
	WSDATA ListOfPOOperations 		AS ARRAY OF POOperation
	WSDATA POData					AS POOperation
	WSDATA POStruct					AS TOTVSAPSPO
	WSDATA CreatedAPS			  	As String	
	
	WSMETHOD ReprogrammingSalesOrder DESCRIPTION STR0002 // ### "Método de reprogramação de pedido de venda"
	WSMETHOD BrwPOOperations 		 DESCRIPTION STR0005 // ### "Método de consulta as Operações da Ordem APS"
	WSMETHOD PutPOOperations		 DESCRIPTION STR0006 // ### "Método de inclusão de Operações da Ordem APS"
	WSMETHOD PutPOStruct 			 DESCRIPTION STR0019 // ### "Método de inclusão de OP Operacoes e Solicitacao de Compra no APS"
ENDWSSERVICE                                                                                 

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³Reprogramm³Autor  ³ Erike Yuri da Silva   ³ Data ³15/10/2006 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³Rotina de reprogramacao dos pedidos de vendas                ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpC1: Codigo do usuario                                     ³±±
±±³          ³ExpC2: Numero do Pedido                                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ExpL1: Indica que o metodo foi avaliado com sucesso          ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Este metodo reprograma o pedido de compra apartir da integra-³±±
±±³          ³cao com o APS Drummer.                                       ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Materiais                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
WSMETHOD ReprogrammingSalesOrder WSRECEIVE UserCode,SalesOrder WSSEND WSNull WSSERVICE MtIntegrationAPS

Local aArea		:= GetArea() 	
Local aErro		:= {}   
Local aCab		:= {}
Local aItens	:= {}
Local aItem		:= {}
Local lRetorno	:= .T.
Local nX     
Local cPedido	:= PadR(::SalesOrder:SoHeader:OrderID		,Len(SC5->C5_NUM))
Local cCliente	:= PadR(::SalesOrder:SoHeader:CustomerCode	,Len(SC5->C5_CLIENTE))
Local cLoja		:= PadR(::SalesOrder:SoHeader:CustomerUnit	,Len(SC5->C5_LOJACLI))
Local cErro		:= ""

PRIVATE lMsErroAuto		:= .F.
PRIVATE lAutoErrNoFile	:= .T.

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Por enquanto so sera possivel realizar reprogramacao de pedido de vendas³
//³via webservice se existir integracao com DRUMMER APS                    ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If PrtChkUser(::UserCode,"MtIntegrationAPS","ReprogrammingSalesOrder","SA1",cCliente+cLoja) .And.;
	SuperGetMv("MV_APS",.F.,"")=="DRUMMER"

	If !Empty( ::SalesOrder:SOHeader:CustomerCode )
		//Processa somente os itens que foram preenchidos corretamente
		aEval(::SalesOrder:SOItem,{|x| If(Empty(x:OrderItem),Nil,Aadd(aItens,x))}) 
		::SalesOrder:SOItem := aClone(aItens)
		aItens := {}
	
		DbSelectArea("SC5")
		DbSetOrder(1)
		If !( ::SalesOrder:SOHeader:OrderID <> Nil .And. MsSeek(xFilial("SC5")+::SalesOrder:SOHeader:OrderID) )
			lRetorno := .F.
			cErro		:= STR0003
		Endif                                         

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Atualiacao do cabecalho do pedido de venda                              ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If lRetorno
			lRetorno := PutPvHead(::SalesOrder:SOHeader,@aCab)			
		EndIf
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Atualiacao dos itens do pedido de venda                                 ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If lRetorno 
			lRetorno := PutPvItem(::SalesOrder:SOHeader,::SalesOrder:SOItem,@aItens)
		Endif
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Verifica se eh alteracao ou inclusao                                   ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If lRetorno 
			MATA410(aCab,aItens,4)
			::OrderId := SC5->C5_NUM
	
			If lMsErroAuto
				aErro := GetAutoGRLog()
				For nX := 1 To Len(aErro)
					cErro += aErro[nX] + Chr(13)+Chr(10)
				Next nX
				SetSoapFault("ReprogrammingSalesOrder",cErro)
				lRetorno := .F.
			Endif
		EndIf
	Else
		lRetorno := .F.
		SetSoapFault("ReprogrammingSalesOrder",STR0004) //"Cliente invalido"
	Endif	
Else
	lRetorno := .F.
Endif
RestArea(aArea)
Return(lRetorno)

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³PutPVHead ³Autor  ³ Erike Yuri da Silva   ³ Data ³17.10.2006 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³Rotina de preenchimento do Header do pedido de venda para a  ³±±
±±³          ³rotina automatica                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpO1: Objeto do Header do Pedido de Venda                   ³±±
±±³          ³ExpA2: Array com os dados do Cabecalho                       ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ExpL1:Indica que nao houve erro nos dados enviados           ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Este metodo devolve o objeto passado por parametro com os    ³±±
±±³          ³dados do SC5 posicionado                                     ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ CRM/Materiais/Portais                                       ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function PutPvHead(oObjeto,aCab)

Local aArea    := GetArea()
Local lRetorno := .T.

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Atualiacao do cabecalho do pedido de venda                              ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
AAdd(aCab,{"C5_NUM"		,oObjeto:OrderID,})
AAdd(aCab,{"C5_CLIENTE"	,oObjeto:CustomerCode,})
AAdd(aCab,{"C5_LOJACLI"	,oObjeto:CustomerUnit,})
AAdd(aCab,{"C5_CONDPAG"	,SC5->C5_CONDPAG,})
aCab := WsAutoOpc(aCab,.T.)

RestArea(aArea)
Return(lRetorno)

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³PutPVItem ³Autor  ³ Erike Yuri da Silva   ³ Data ³17.10.2006 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³Rotina de preenchimento dos itens do pedido de venda para a  ³±±
±±³          ³rotina automatica                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpO1: Objeto do Header do Pedido de Venda                   ³±±
±±³          ³ExpO2: Objeto dos itens do Pedido de Venda                   ³±±
±±³          ³ExpA3: Array com os dados dos itens do pedido de venda       ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ExpL1:Indica que nao houve erro nos dados enviados           ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Este metodo devolve o objeto passado por parametro com os    ³±±
±±³          ³dados do SC5 posicionado                                     ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ CRM/Materiais/Portais                                       ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function PutPvItem( oObjSC5, oObjSC6, aItens )

Local nY         	:= 0
Local aArea      	:= GetArea()
Local aItem      	:= {}
Local lRetorno   	:= .T. 
Local cProduto		:= ""
Local cItem			:= ""

DbSelectArea( "SC6" )
DbSetOrder( 1 )

For nY := 1 To Len( oObjSC6 )
	cItem	:= StrZero(Val(oObjSC6[nY]:OrderItem),Len(SC6->C6_ITEM))
	If !SC6->( MsSeek( xFilial( "SC6" ) + oObjSC5:OrderID + cItem ) )
		Loop	
	Endif
		
	cProduto :=  PadR(oObjSC6[nY]:ProductID,Len(SC6->C6_PRODUTO))

	AAdd( aItem, { "LINPOS"		, "C6_ITEM", cItem} )                
	aadd(aItem , {"AUTDELETA","N",Nil})
	AAdd( aItem, { "C6_ITEM"	, cItem                         		, } )
	AAdd( aItem, { "C6_PRODUTO"	, cProduto	                    		, } )
	If Empty(oObjSC6[nY]:Quantity)
		AAdd( aItem, { "C6_QTDVEN" , SC6->C6_QTDVEN	             		, } )
	Else                          
		AAdd( aItem, { "C6_QTDVEN" , oObjSC6[nY]:Quantity	           	, } )	
	EndIf
	AAdd( aItem, { "C6_PRCVEN"	, SC6->C6_PRCVEN                    	, } )
	AAdd( aItem, { "C6_ENTREG"	, oObjSC6[nY]:DeliveryDate	            , } )  
	AAdd( aItem, { "C6_TES"		, SC6->C6_TES							, } )  	
	AAdd( aItem, { "C6_GRADE"	, SC6->C6_GRADE							, } )  
	AAdd( aItem, { "C6_ITEMGRD"	, SC6->C6_ITEMGRD						, } )  
	
	aItem := WsAutoOpc( aItem, .T. )

	AAdd( aItens, aItem )

	aItem := {}
Next nY
RestArea( aArea )
Return ( lRetorno )

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³BrwPOOperationsºAutor  ³Andre Anjos         º Data ³  17/08/10   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDescricao ³ Metodo de consulta as Operacoes da Ordem APS (tabela SHY).      º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ Materiais/Portais                                               º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
WSMETHOD BrwPOOperations WSRECEIVE UserCode,POFrom,POTo,PODateFrom,PODateTo,POStartDateFrom,POStartDateTo,POFinishDateFrom,POFinishDateTo,QueryAddWhere WSSEND ListOfPOOperations WSSERVICE MtIntegrationAPS
Local aArea     := {} 
Local aRetIni   := {} 
Local aStruSC2  := {}
Local cDelSHY   := ""
Local cQuery    := ""
Local lRetorno  := .T.
Local nX		:= 0

IF FindFunction("PCPWSInit")
	aRetIni := PCPWSInit()
Else
	aRetIni := {.T.,""}
EndIf	

IF aRetIni[1]
	aArea     := GetArea()
	
	If !AliasInDic("SHY")
		SetSoapFault("BRWPOOPERATIONS",STR0007) //"Ambiente desatualizado. Executar UPDPCP16!"
		lRetorno := .F.
	EndIf
	
	If lRetorno .And. PrtChkUser(::UserCode,"MtIntegrationAPS","BrwPOOperations")
		aStruSC2 := SHY->(dbStruct())
		
		//-- Deleta registros na SHY
		cDelSHY := "UPDATE " +RetSqlName("SHY") +" SET D_E_L_E_T_ = '*' WHERE "
		cDelSHY += "R_E_C_N_O_ IN ("
		
		cQuery += "SELECT SHY.R_E_C_N_O_ FROM " +RetSqlName("SHY") +" SHY JOIN " +RetSqlName("SC2") +" SC2 ON "
		cQuery += "SC2.D_E_L_E_T_ <> '*' AND SC2.C2_FILIAL = '" +xFilial("SC2") +"' AND "
		cQuery += "SC2.C2_NUM||SC2.C2_ITEM||SC2.C2_SEQUEN||SC2.C2_ITEMGRD = SHY.HY_OP "
		cQuery += "WHERE SHY.D_E_L_E_T_ <> '*' AND SHY.HY_FILIAL = '" +xFilial("SHY") +"' AND ("
		//-- com a ordem de producao encerrada
		cQuery += "SC2.C2_DATRF <> ' ' "
		//-- ou com a operacao encerrada
		cQuery += "OR (SELECT COUNT(*) FROM " +RetSqlName("SH6") +" SH6 WHERE SH6.D_E_L_E_T_ <> '*' AND "
		cQuery += "SH6.H6_FILIAL = '" +xFilial("SH6") +"' AND SH6.H6_OP = SHY.HY_OP AND SH6.H6_OPERAC = SHY.HY_OPERAC AND "
		cQuery += "SH6.H6_PT = 'T') > 0 "
		//-- ou com a quantidade prevista da operacao ja atendida
		cQuery += "OR (SELECT SUM(SH6.H6_QTDPROD) FROM " +RetSqlName("SH6") +" SH6 WHERE SH6.D_E_L_E_T_ <> '*' AND "
		cQuery += "SH6.H6_FILIAL = '" +xFilial("SH6") +"' AND SH6.H6_OP = SHY.HY_OP AND "
		cQuery += "SH6.H6_OPERAC = SHY.HY_OPERAC) >= SC2.C2_QUANT"
		cQuery += ")"

		cQuery := ChangeQuery(cQuery)

		cDelSHY += cQuery + ")"
		
		TCSQLExec(cDelSHY)
	    
		//-- Processa query de consulta
		cQuery := "SELECT SHY.*, SC2.C2_PRODUTO, SC2.C2_IDAPS FROM " +RetSqlName("SHY") +" SHY "
		cQuery += "JOIN " +RetSqlName("SC2") +" SC2 ON SC2.D_E_L_E_T_ <> '*' AND "
		cQuery += "SC2.C2_FILIAL = '" +xFilial("SC2") +"' AND SC2.C2_DATRF = ' ' AND "
		cQuery += "SC2.C2_NUM||SC2.C2_ITEM||SC2.C2_SEQUEN||SC2.C2_ITEMGRD = SHY.HY_OP "
		If !Empty(::PODateFrom)
			cQuery += "AND SC2.C2_EMISSAO >= '"+DToS(::PODateFrom) +"' "
		EndIf
		If !Empty(::PODateTo)
			cQuery += "AND SC2.C2_EMISSAO <= '" +DToS(::PODateTo) +"' "
		EndIf
		If !Empty(::POStartDateFrom)
			cQuery += "AND SC2.C2_DATPRI >= '" +DToS(::POStartDateFrom) +"' "
		EndIf
		If !Empty(::POStartDateTo)
			cQuery += "AND SC2.C2_DATPRI <= '" +DToS(::POStartDateTo) +"' "
		EndIf
		If !Empty(::POFinishDateFrom)
			cQuery += "AND SC2.C2_DATPRF >=' " +DToS(::POFinishDateFrom) +"' "
		EndIf
		If !Empty(::POFinishDateTo)
			cQuery += "AND SC2.C2_DATPRF <= '" +DToS(::POFinishDateTo) +"' "
		EndIf
		cQuery += "WHERE SHY.HY_FILIAL = '" +xFilial("SHY") +"' "
		If !Empty(::POFrom)
			cQuery += "AND SHY.HY_OP >= '" +::POFrom +"' "
		EndIf
		If !Empty(::POTo)
			cQuery += "AND SHY.HY_OP <= '" +::POTo +"' "
		EndIf
		cQuery	+= "AND SHY.D_E_L_E_T_ <> '*' "
		cQuery  := WsQueryAdd(cQuery,::QueryAddWhere)
		cQuery	+= "ORDER BY SHY.HY_OP, SHY.HY_ROTEIRO, SHY.HY_OPERAC"
	                                                  
		cQuery	:= ChangeQuery(cQuery)	
		dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),"TMPSHY",.T.,.T.)

		For nX := 1 To Len(aStruSC2)
			If aStruSC2[nX][2] <> "C" .And. aStruSC2[nX][2] <> "M"
				TcSetField("TMPSHY",aStruSC2[nX][1],aStruSC2[nX][2],aStruSC2[nX][3],aStruSC2[nX][4])
			EndIf
		Next nX

		dbSelectArea("TMPSHY")
		While !Eof()
			SG2->(dbSetOrder(1))
			SG2->(dbSeek(xFilial("SG2")+("TMPSHY")->(C2_PRODUTO+HY_ROTEIRO)))
			
			aAdd(::ListOfPOOperations,WSClassNew("POOperation"))
			aTail(::ListOfPOOperations):Operation := ("TMPSHY")->HY_OPERAC
			aTail(::ListOfPOOperations):OperationGuide	:= Str(SG2->(Recno()))
			aTail(::ListOfPOOperations):POID := Substr(("TMPSHY")->HY_OP,7,2) + Substr(("TMPSHY")->HY_OP,1,6) + "3"
			aTail(::ListOfPOOperations):Quantity := ("TMPSHY")->HY_QUANT
			aTail(::ListOfPOOperations):ResourceCode := ("TMPSHY")->HY_RECURSO
			aTail(::ListOfPOOperations):Setup := ("TMPSHY")->HY_TEMPOS
			aTail(::ListOfPOOperations):Time := ("TMPSHY")->HY_TEMPOM
			aTail(::ListOfPOOperations):Tool := ("TMPSHY")->HY_FERRAM
			aTail(::ListOfPOOperations):IDAPS := ("TMPSHY")->C2_IDAPS
			aTail(::ListOfPOOperations):WorkCenter := ("TMPSHY")->HY_CTRAB			
			dbSkip()
		End
		dbCloseArea()

	    If Len(::ListOfPOOperations) == 0
	   		SetSoapFault("BRWPOOPERATIONS",STR0008) //"Nenhuma operação foi encontrada."
			lRetorno := .F.
		EndIf
	Else
		lRetorno := .F.
	EndIf
	RestArea(aArea)
Else
	lRetorno := .F.
	SetSoapFault("BRWPOOPERATIONS",aRetIni[2])
EndIf

Return (lRetorno)

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³PutPOOperationsºAutor  ³Andre Anjos         º Data ³  17/08/10   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDescricao ³ Metodo de inclusao de Operacoes da Ordem APS (tabela SHY).      º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ Materiais/Portais                                               º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
WSMETHOD PutPOOperations WSRECEIVE UserCode,POData WSSEND WSNull WSSERVICE MtIntegrationAPS
Local aRetIni  :={}
Local lRetorno := .T.

IF FindFunction("PCPWSInit")
	aRetIni := PCPWSInit()
Else
	aRetIni := {.T.,""}
EndIf	

IF aRetIni[1]
	If lRetorno .And. PrtChkUser(::UserCode,"MtIntegrationAPS","BrwPOOperations")
		If !(WSAPSINTPO(::POData))
			lRetorno := .F.
		EndIf
	Else
		lRetorno := .F.
	EndIf
Else
	lRetorno := .F.
	SetSoapFault("PutPOOperations",aRetIni[2])
EndIf	

Return lRetorno

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³PutPOStruct ºAutor  ³Rodrigo Toledo Silva	  º Data ³  05/07/12   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDescricao ³ Metodo de inclusao de OP/Operacoes e Solicitacao de Compra. 	   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ Materiais/Portais                                               º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
WSMETHOD PutPOStruct WSRECEIVE UserCode,POStruct WSSEND CreatedAPS WSSERVICE MtIntegrationAPS
Local aRetIni	:= {}
Local cNumOPSol := ""
Local lRetorno  := .T.
Local nX	    := 0

IF FindFunction("PCPWSInit")
	aRetIni := PCPWSInit()
Else
	aRetIni := {.T.,""}
EndIf	

IF aRetIni[1]
	If lRetorno := PrtChkUser(::UserCode,"MtIntegrationAPS","PutPOStruct")	
		
		Begin Transaction
	    
	    cNumOPSol := WS650PPO(::POStruct:POHeader,"S",3)
	    If !Empty(cNumOPSol)
		    ::CreatedAPS := cNumOPSol
	    	For nX := 1 To Len(::POStruct:Operations)
	 			If !(WSAPSINTPO(::POStruct:Operations[nX],::CreatedAPS))
	 				lRetorno := .F.
	 				Exit
	 			EndIf
	    	Next nX    
	    	If lRetorno
				For nX := 1 To Len(::POStruct:PurchasesRequest)
					If Empty(WS110PPR(::POStruct:PurchasesRequest[nX],,::CreatedAPS))
						lRetorno := .F.
						Exit
					EndIf
				Next nX
			EndIf
		Else
			lRetorno := .F.
		EndIf
		If !lRetorno
			DisarmTransaction()
		EndIf
		
		End Transaction	
	EndIf
Else
	lRetorno := .F.
	SetSoapFault("PutPOStruct",aRetIni[2])
EndIf	

Return (lRetorno)

Function WSAPSINT()
Return

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³ WSAPSINTPO	 ºAutor  ³Rodrigo Toledo Silvaº Data ³  02/08/12   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDescricao ³ Funcao para inclusao das Operacoes da Ordem APS (tabela SHY).   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±³Parametros| ExpO1: Dados das Operacoes da Ordem de Producao         		   ³±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ TOTVS APS                                              		   º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function WSAPSINTPO(POData,cNumOP)
Local lRetorno := .T.
Local cOP 	   := ""
Local cProduto := ""
local cnum     := ""
local citem    := ""
local csequen  := ""
local itemgrd  := ""
Local cFilBack := cFilAnt  
Local cAliasTmp:= GetNextAlias()
Default cNumOP := ""

If !AliasInDic("SHY")
	SetSoapFault("PUTPOOPERATIONS",STR0007) //"Ambiente desatualizado. Executar UPDPCP16!"
	lRetorno := .F.
EndIf

cOP := IIf(Empty(cNumOP),PadR(POData:POID,TamSX3("HY_OP")[1]),cNumOP)

SC2->(dbSetOrder(1))
SG2->(dbSetOrder(1))
SH1->(dbSetOrder(1))
SH4->(dbSetOrder(1))
SHB->(dbSetOrder(1))

If Empty(cOP) .And. Empty(POData:IDAPS)
	SetSoapFault("PUTPOOPERATIONS",STR0009) //"É obrigatório informar OP ou ID APS."
	lRetorno := .F.
ElseIf Empty(cOP)
	BeginSQL Alias cAliasTmp
		SELECT 	SC2.C2_FILIAL, 
				SC2.C2_NUM||SC2.C2_ITEM||SC2.C2_SEQUEN||SC2.C2_ITEMGRD C2_OP, 
				SC2.C2_PRODUTO,
				SC2.C2_NUM,
				SC2.C2_ITEM,
				SC2.C2_SEQUEN,
				SC2.C2_ITEMGRD
		FROM %Table:SC2% SC2 
		WHERE 	SC2.%NotDel% AND 
				SC2.C2_IDAPS = %Exp:POData:IDAPS%
	EndSQL

	If !Empty((cAliasTmp)->C2_OP)
		cOP 	 := (cAliasTmp)->C2_OP
		cFilAnt  := (cAliasTmp)->C2_FILIAL
		cProduto := (cAliasTmp)->C2_PRODUTO
		cnum     := (cAliasTmp)->C2_NUM
		citem    := (cAliasTmp)->C2_ITEM
		csequen  := (cAliasTmp)->C2_SEQUEN
		citemgrd := (cAliasTmp)->C2_ITEMGRD
	Else
		//-- ID APS: <time stamp>;<numero APS>;<cod. produto>
		//-- Caso operacao chegou antes da OP, pega produto no ID APS
		cProduto := Substr(AllTrim(POData:IDAPS),At(';',POData:IDAPS)+1)
		cProduto := Substr(cProduto,At(';',cProduto)+1)
		If At(';',cProduto) > 0
			cProduto := Substr(cProduto,1,At(';',cProduto)-1)
		EndIf
		cProduto := PadR(cProduto,TamSX3("G2_PRODUTO")[1])
	EndIf	
	
	(cAliasTmp)->(dbCloseArea())
ElseIf !SC2->(dbSeek(xFilial("SC2")+cOP))
	SetSoapFault("PUTPOOPERATIONS",STR0011 +cOP) //"OP inexistente: "
	lRetorno := .F.
Else
	cProduto := SC2->C2_PRODUTO
	cnum     := SC2->C2_NUM
	citem    := SC2->C2_ITEM
	csequen  := SC2->C2_SEQUEN
	citemgrd := SC2->C2_ITEMGRD
EndIf

If lRetorno
	SG2->(dbSetOrder(1))
	If Empty(POData:OperationGuide) .Or. Empty(POData:Operation)
		SetSoapFault("PUTPOOPERATIONS",STR0012) //"É obrigatório informar Roteiro e Operação."
		lRetorno := .F.
	ElseIf !SG2->(dbSeek(xFilial("SG2")+cProduto+PadR(POData:OperationGuide,TamSX3("G2_CODIGO")[1])+PadR(POData:Operation,TamSX3("G2_OPERAC")[1])))
		SetSoapFault("PUTPOOPERATIONS",STR0013 +AllTrim(POData:OperationGuide)+"/"+AllTrim(POData:Operation)) //"Roteiro/Operação inexistente: " ###
		lRetorno := .F.
	EndIf
EndIf
         
If lRetorno
	If Empty(POData:WorkCenter) .And. !SHB->(dbSeek(xFilial("SHB")+AllTrim(POData:WorkCenter)))
		SetSoapFault("PUTPOOPERATIONS",STR0015 +AllTrim(POData:WorkCenter)) //"Centro de Trabalho inexistente: "
		lRetorno := .F.
	EndIf
EndIf

If lRetorno .And. !Empty(POData:ResourceCode) .And. !SH1->(dbSeek(xFilial("SH1")+AllTrim(POData:ResourceCode)))
	SetSoapFault("PUTPOOPERATIONS",STR0016 +AllTrim(POData:ResourceCode)) //"Recurso inexistente: "
	lRetorno := .F.
EndIf

If lRetorno .And. !Empty(POData:Tool) .And. !SH4->(dbSeek(xFilial("SH4")+AllTrim(POData:Tool)))
	SetSoapFault("PUTPOOPERATIONS",STR0017 +AllTrim(POData:Tool)) //"Ferramenta inexistente: "
	lRetorno := .F.
EndIf

If lRetorno .And. Empty(POData:Quantity)
	SetSoapFault("PUTPOOPERATIONS",STR0018) //"Quantidade é atributo obrigatório."
	lRetorno := .F.
EndIf

If lRetorno
	dbSelectArea("SHY")
	If !Empty(cOP)
		dbSetOrder(1)                                        	
		dbSeek(xFilial("SHY")+cOP+SG2->(G2_CODIGO+G2_OPERAC))
	Else
		dbSetOrder(2)
		dbSeek(xFilial("SHY")+PadR(POData:IDAPS,TamSX3("HY_IDAPS")[1])+SG2->(G2_CODIGO+G2_OPERAC))
	EndIf
	If Found()
		RecLock("SHY",.F.)
	Else	
		RecLock("SHY",.T.)
		Replace HY_FILIAL  With xFilial("SHY")
		Replace HY_OP	   With cOP
		Replace HY_ROTEIRO With SG2->G2_CODIGO
		Replace HY_OPERAC  With SG2->G2_OPERAC
		Replace HY_SITUAC  With '1'
		Replace HY_DESCRI  With SG2->G2_DESCRI
	EndIf
	Replace HY_RECURSO  With POData:ResourceCode
	Replace HY_FERRAM   With POData:Tool
	Replace HY_CTRAB    With POData:WorkCenter
	Replace HY_QUANT    With POData:Quantity
	Replace HY_TEMPOS   With POData:Setup
	Replace HY_TEMPOM   With POData:Time
	If FieldPos("HY_IDAPS") > 0
		Replace HY_IDAPS With POData:IDAPS
	EndIf
	//-- Hora Inicial e Hora Final da operação
	If FieldPos("HY_HORAINI") > 0
		Replace HY_HORAINI  With POData:InitialHour
		Replace HY_HORAFIM  With POData:EndHour
	EndIf
	//-- Data Inicial e Data Final da operação
	If FieldPos("HY_DATAINI") > 0
		Replace HY_DATAINI  With POData:InitialDate
		Replace HY_DATAFIM  With POData:EndDate
	EndIf
	MsUnLock()
	
	//Criação da SOJ indicando que as OP´s ou as operações vindas do APS ainda não foram integradas com o TOTVS MES
	//Elas serão integradas com a execução do PCPA114 no schedule
	If FindFunction("PCPA114APS")
		PCPA114APS(cnum,citem,csequen,citemgrd,'N')
	Endif

	If ExistBlock("WSAPSSHY")
		ExecBlock("WSAPSSHY",.F.,.F.,{POData})
	EndIf
EndIf

cFilAnt := cFilBack
Return lRetorno
