#INCLUDE "WSMAT690.CH"
#INCLUDE "APWEBSRV.CH"
#INCLUDE "PROTHEUS.CH"
/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³WSMAT690  ³ Autor ³Erike Yuri da Silva    ³ Data ³04.09.2006  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Web Service responsavel pela consulta e execucao do sequenci-³±±
±±³          ³amento de operacoes (Carga Maquina)                           ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³                                                              ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³                                                              ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Materiais/Portais     	                                    ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Atualizacoes sofridas desde a Construcao Inicial.                       ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Programador  ³ Data   ³ BOPS ³  Motivo da Alteracao                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³              ³        ³      ³                                          ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Definicao da Estrutura de Cotacao de compras                            ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
WSSTRUCT MachineLoadParamView
	WSDATA AllocationType			As Integer 				//	mv_ch1	N	1	mv_par01
	WSDATA Period 					As Integer 				//	mv_ch2	N	3	mv_par02
	WSDATA UseTool					As Integer	OPTIONAL 	//	mv_ch3	N	1	mv_par03
	WSDATA ConsiderBalance			As Integer	OPTIONAL 	//	mv_ch4	N	1	mv_par04
	WSDATA ConsiderConfirmedOnes	As Integer	OPTIONAL 	//	mv_ch5	N	1	mv_par05
	WSDATA FromDeliveryDate			As Date  	OPTIONAL 	//	mv_ch7	D		mv_par07
	WSDATA ToDeliveryDate			As Date		OPTIONAL 	//	mv_ch8	D		mv_par08
	WSDATA FromProductionOrders		As String	OPTIONAL	//	mv_ch9	C	13	mv_par09
	WSDATA ToProductionOrders		As String	OPTIONAL	//	mv_cha	C	13	mv_par10
	WSDATA FromProduct				As String	OPTIONAL	//	mv_chb	C	15	mv_par11
	WSDATA ToProduct				As String	OPTIONAL	//	mv_chc	C	15	mv_par12
	WSDATA FromGroup				As String	OPTIONAL	//	mv_chd	C	4	mv_par13
	WSDATA ToGroup					As String	OPTIONAL	//	mv_che	C	4	mv_par14
	WSDATA InitialDate				As Date		OPTIONAL	//	mv_chf	D	8	mv_par15
	WSDATA FromType					As String	OPTIONAL	//	mv_chg	C	2	mv_par16
	WSDATA ToType					As String	OPTIONAL	//	mv_chh	C	2	mv_par17
	//WSDATA EvaluateOccurrences		As Integer  OPTIONAL	//	mv_chi	N	1	mv_par18
	//WSDATA Filter Resources 								//	mv_chj	N	1	mv_par19
	//WSDATA Select Alter. Calendar 						//	mv_chk	N	1	mv_par20
	WSDATA AllocatePOs				As Integer 	OPTIONAL	//	mv_chl	N	1	mv_par21
	//WSDATA Display after Processing 						//	MV_CHM	N	1	mv_par22
	//WSDATA Chart Outflow									//	MV_CHN	N	1	mv_par23
	//WSDATA Display res.w/o allocation						//	MV_CHO	N	1	mv_par24
	WSDATA FromProductionLine		As String 	OPTIONAL	//	MV_CHP	C	3	mv_par25
	WSDATA ToProductionLine			As String 	OPTIONAL	//	MV_CHQ	C	3	mv_par26
	WSDATA MoveAllocatedPartisanOP	As Integer 	OPTIONAL	//	MV_CHR	N	1	mv_par27
	WSDATA RefuseFutureOperations	As Integer 	OPTIONAL	//	MV_CHS	N	1	mv_par28
	//WSDATA Back to the process end 						//	MV_CHT	N	1	mv_par29
	WSDATA DisregardResource		As Integer 	OPTIONAL	// 	MV_CHU	N	1	mv_par30	
ENDWSSTRUCT

WSSTRUCT AllocatedOperationsView
	WSDATA ProductionOrderNumber	As String				//Numero da Ordem de Producao 	- "H8_OP"
	WSDATA Operation				As String				//Codigo de Operacao			- "H8_OPER"
	WSDATA ResourceNumber			As String				//Numero do Recurso				- "H8_RECURSO"
	WSDATA InitialDate				As Date					//Data Inicial					- "H8_DTINI"
	WSDATA InitialTime              As String				//Hora Inicial					- "H8_HRINI"
	WSDATA EndDate                	As Date					//Data Final					- "H8_DTFIM"
	WSDATA FinalTime                As String 				//Hora Final					- "H8_HRFIM"
	WSDATA WorkCenter				As String	OPTIONAL	//Centro de Trabalho			- "H8_CTRAB"	
	WSDATA OperationRoute			As String	OPTIONAL	//Roteiro de Operacoes			- "H8_ROTEIRO"
	WSDATA Setup					As Float	OPTIONAL	// Tempo de Setup				- "H8_SETUP"
	WSDATA Quantity					As Float	OPTIONAL	//Quantidade a Produzir         - "H8_QUANT"
	WSDATA HoursUsed				As Float	OPTIONAL	//Horas Utilizadas				- "H8_USO"
	WSDATA Status			        As String				//Status						- "H8_STATUS" 
ENDWSSTRUCT

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Definicao do Web Service de Controle do Usuario                         ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
WSSERVICE MtMachineLoad  DESCRIPTION STR0001 NAMESPACE "http://webservices.microsiga.com.br/mtmachineload.apw"
	WSDATA HeaderType				As String
	WSDATA Header					As Array Of BrwHeader
	WSDATA UserCode					As String
	WSDATA ProductionOrderNumber	As String
	WSDATA ParamMachineLoad			As MachineLoadParamView			
	WSDATA AllocatedOperations		As AllocatedOperationsView
	WSDATA ListAllocatedOperations	As Array Of AllocatedOperationsView
	WSDATA WsNull					As String
	WSDATA UpdProductionOrder		As Boolean OPTIONAL


	WSMETHOD ExecMachineLoad			DESCRIPTION STR0002
	WSMETHOD PutImportMachineLoad		DESCRIPTION STR0003
	WSMETHOD GetMachineLoad 			DESCRIPTION STR0004
	
ENDWSSERVICE


/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³PutImportM³Autor  ³ Erike Yuri da Silva   ³ Data ³04.09.2003 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³Rotina de execucao do carga maquina                          ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpC1: Codigo do usuario                                     ³±±
±±³          ³ExpE1: Estrutura de Alocacao de operacoes                    ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ExpL1: Indica que o metodo foi avaliado com sucesso          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Materiais/Portais                                           ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
WSMETHOD PutImportMachineLoad WSRECEIVE UserCode,AllocatedOperations WSSEND WsNull WSSERVICE MtMachineLoad

Local aArea			:= GetArea()
Local lRetorno		:= .T.
Local cErro			:= ""
Local cOp           := ""
Local cOper         := ""
Local cRoteiro      := ""
Local nPrecisa		:= SuperGetMV("MV_PRECISA",.F.,4)
Local bConv         := {|x,y| A680ConvHora(x,y,GetMV("MV_TPHR")) }

If PrtChkUser(::UserCode,"MtMachineLoad","","SH8") .And. !Empty( SuperGetMv("MV_APS",.F.,"") )
	dbSelectArea("SH8")
	dbSetOrder(1)
		
	cOp		:= PadR(::AllocatedOperations:ProductionOrderNumber,Len(SH8->H8_OP))
	cOper	:= PadR(::AllocatedOperations:Operation,Len(SH8->H8_OPER) )
	SC2->(dbSetOrder(1))
	If SC2->(!MsSeek(xFilial("SC2")+cOP))
		cErro		:= STR0016 // ### "Ordem de Producao inválida"
		lRetorno	:= .F.
	EndIf

	If lRetorno               
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Abre o arquivo de Operacoes alocadas em modo EXCLUSIVO                 ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If !OpenSemSH8(.F.)
			cErro := STR0006+Chr(13)+Chr(10)+ ;  // ### "A Rotina de Carga Máquina não  pode  ser acessada por mais de uma estação "
					 STR0007+Chr(13)+Chr(10)+ ;  // ### "simultaneamente (não consegui abrir o ArquivoSH8 - Operaçöes Alocadas - "
					 STR0008                      // ### "em  modo  exclusivo"
			lRetorno := .F.
		EndIf

		If lRetorno .And. Empty(::AllocatedOperations:OperationRoute)
			SB1->(dbSetOrder(1))
			If SB1->(MsSeek(xFilial("SB1")+SC2->C2_PRODUTO))
				cRoteiro := IIf(!Empty(SB1->B1_OPERPAD),SB1->B1_OPERPAD,"01")
			EndIf
		Else
			cRoteiro := ::AllocatedOperations:OperationRoute
		EndIf
		
		If lRetorno
			SG2->(dbSetOrder(1))
			If SG2->(!MsSeek(xFilial("SG2")+SC2->C2_PRODUTO+cRoteiro+::AllocatedOperations:Operation))
				cErro		:= STR0017 // "Codigo da operação invalida para este roteiro de operação."
				lRetorno	:= .F.			
			EndIf
		EndIf
				
		If lRetorno .And. Empty(::AllocatedOperations:ResourceNumber)
			SG2->( dbSetOrder(1) )
			If SG2->( MsSeek(xFilial("SG2")+SC2->C2_PRODUTO+cRoteiro+::AllocatedOperations:Operation) )
				::AllocatedOperations:ResourceNumber := SG2->G2_RECURSO			
			Endif
		EndIf
	
		If lRetorno .And. Empty(cOper)
			cErro		:= STR0005 // ### "Operação Inválida"
			lRetorno	:= .F.
		EndIf
		
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Valida dados a serem incluidos.  ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ		
		SH1->(dbSetOrder(1))
		If  lRetorno .And. SH1->(!MsSeek(xFilial("SH1")+Trim(::AllocatedOperations:ResourceNumber)))
			cErro		:= STR0009	// ### "- Recurso inválido;"
			lRetorno	:= .F.		
		EndIf                 
		
		If lRetorno .And. Empty(::AllocatedOperations:InitialDate)
			cErro		:= STR0010	// ### "- Data inicial inválida;"
			lRetorno	:= .F.				
		EndIf
		
		If lRetorno .And. Empty(::AllocatedOperations:InitialTime)
			cErro		:= STR0011	// ### "- Hora inicial inválida;"
			lRetorno	:= .F.						
		EndIf
			
		If lRetorno .And. Empty(::AllocatedOperations:EndDate)
			cErro		:= STR0012	// ### "- Data final inválida;"
			lRetorno	:= .F.						
		EndIf
		
		If lRetorno .And. Empty(::AllocatedOperations:FinalTime)
			cErro		:= STR0013	//### "- Hora final inválida;"
			lRetorno	:= .F.						
		EndIf		
		
		If lRetorno .And. DTOS(::AllocatedOperations:InitialDate)+::AllocatedOperations:InitialTime > DTOS(::AllocatedOperations:EndDate)+::AllocatedOperations:FinalTime
			cErro		:= STR0018 // ### "Periodo inválido! Data/Hora inicial maior que Data/Hora final."
			lRetorno	:= .F.	
		EndIf
	
		If lRetorno .And. Empty(::AllocatedOperations:Status)
			::AllocatedOperations:Status := " "
		ElseIf lRetorno .And. (!::AllocatedOperations:Status $ "DS")
			::AllocatedOperations:Status := " "		
		EndIf
		
		IF lRetorno .And. !Empty(::AllocatedOperations:WorkCenter)
			SHB->(dbSetOrder(1))
			If SHB->(!MsSeek(xFilial("SHB")+Trim(::AllocatedOperations:WorkCenter)))
				cErro		:= STR0019 // ### "Código do Centro de Trabalho inálido."
				lRetorno	:= .F.
			EndIf
		EndIf		
	EndIf
	
	If lRetorno	 
		MsSeek(xFilial("SH8")+cOp+cOper)	

		While SH8->(!Eof() .And. H8_FILIAL+H8_OP+H8_OPER == xFilial("SH8")+cOp+cOper)
			RecLock("SH8",.F.,.T.)
			SH8->( dbDelete() )
			SH8->(dbSkip())
		EndDo
				
		RecLock("SH8",.T.)
			SH8->H8_FILIAL	:= xFilial("SH8")
			SH8->H8_OP		:= ::AllocatedOperations:ProductionOrderNumber
			SH8->H8_OPER	:= ::AllocatedOperations:Operation
			SH8->H8_RECURSO	:= ::AllocatedOperations:ResourceNumber
			SH8->H8_DTINI	:= ::AllocatedOperations:InitialDate
			SH8->H8_HRINI	:= ::AllocatedOperations:InitialTime
			SH8->H8_DTFIM	:= ::AllocatedOperations:EndDate
			SH8->H8_HRFIM	:= ::AllocatedOperations:FinalTime
			SH8->H8_STATUS	:= ::AllocatedOperations:Status
			SH8->H8_ROTEIRO	:= cRoteiro
			SH8->H8_DESDOBR	:= "000"
			SH8->H8_BITUSO	:= A680TimeCale(SH8->H8_DTINI,Eval(bConv,SH8->H8_HRINI,"N"),SH8->H8_DTFIM,Eval(bConv,SH8->H8_HRFIM,"N"),SH8->H8_RECURSO) * nPrecisa

			If !Empty(::AllocatedOperations:WorkCenter)
				SH8->H8_CTRAB	:= ::AllocatedOperations:WorkCenter
			EndIf
			If !Empty(::AllocatedOperations:Setup)			
				SH8->H8_SETUP	:= ::AllocatedOperations:Setup
			EndIf
			If !Empty(::AllocatedOperations:Quantity)
				SH8->H8_QUANT	:= ::AllocatedOperations:Quantity
			EndIf
			If !Empty(::AllocatedOperations:HoursUsed)
				SH8->H8_USO		:= ::AllocatedOperations:HoursUsed	
			EndIf			
		SH8->( MsUnLock() )
		
	EndIf
	
	If !lRetorno
		SetSoapFault("PutImportMachineLoad",cErro)
	EndIf

	ClosSemSH8()
Else
	lRetorno := .F.
EndIf
RestArea(aArea)
Return(lRetorno)


/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³ExecMachin³Autor  ³ Erike Yuri da Silva   ³ Data ³04.09.2003 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³Rotina de execucao do carga maquina                          ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpC1: Codigo do usuario                                     ³±±
±±³          ³ExpL1: Atualiza ou nao o SC2                                 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ExpL1: Indica que o metodo foi avaliado com sucesso          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Materiais/Portais                                       ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
WSMETHOD ExecMachineLoad WSRECEIVE UserCode,ParamMachineLoad,UpdProductionOrder WSSEND WsNull WSSERVICE MtMachineLoad

Local aArea			:= GetArea()
Local aErro			:= {}
Local aAltParam		:= {}                               
Local lRetorno		:= .T.
Local lAtuSC2		:= If(UpdProductionOrder == NIL,.F.,UpdProductionOrder)
Local cErro			:= ""                               
Local nI
Local xVar

//Local cSeqCarga

PRIVATE lMsErroAuto		:= .F.
PRIVATE lAutoErrNoFile	:= .T.         

If PrtChkUser(::UserCode,"MtMachineLoad","","SH8")   
	
    xVar := ::ParamMachineLoad:AllocationType
	If !Empty(xVar) .And. (xVar == 1 .Or. xVar == 2)//	N	1	mv_par01
		Aadd(aAltParam,{"01","N","MV_PAR01",::ParamMachineLoad:AllocationType})
	EndIf        
	xVar := ::ParamMachineLoad:Period
	If !Empty(xVar) 		//	N	3	mv_par02
		Aadd(aAltParam,{"02","N","MV_PAR02",::ParamMachineLoad:Period})
	EndIf                                  
	xVar := ::ParamMachineLoad:UseTool
	If !Empty(xVar) .And. (xVar == 1 .Or. xVar == 2) //N	1	mv_par03
		Aadd(aAltParam,{"03","N","MV_PAR03",::ParamMachineLoad:UseTool})
	EndIf	                               
	xVar := ::ParamMachineLoad:ConsiderBalance
	If !Empty(xVar) .And. (xVar == 1 .Or. xVar == 2 .Or. xVar == 3)//	N	1	mv_par04
		Aadd(aAltParam,{"04","N","MV_PAR04",::aramMachineLoad:ConsiderBalance})
	EndIf	                               
	xVar := ::ParamMachineLoad:ConsiderConfirmedOnes
	If !Empty(xVar) .And. (xVar == 1 .Or. xVar == 2) //	N	1	mv_par05
		Aadd(aAltParam,{"05","N","MV_PAR05",::ParamMachineLoad:ConsiderConfirmedOnes})
	EndIf	                               

	If !Empty(::ParamMachineLoad:FromDeliveryDate) //	D		mv_par07
		Aadd(aAltParam,{"07","D","MV_PAR07",::ParamMachineLoad:FromDeliveryDate})
	EndIf	                               

	If !Empty(::ParamMachineLoad:ToDeliveryDate) //D		mv_par08
		Aadd(aAltParam,{"08","D","MV_PAR08",::ParamMachineLoad:ToDeliveryDate})
	EndIf	                               

	If !Empty(::ParamMachineLoad:FromProductionOrders) //C	13	mv_par09
		Aadd(aAltParam,{"09","C","MV_PAR09",::ParamMachineLoad:AllocationType})
	EndIf	                               

	If !Empty(::ParamMachineLoad:ToProductionOrders) //C	13	mv_par10
		Aadd(aAltParam,{"10","C","MV_PAR10",::ParamMachineLoad:FromProductionOrders})
	EndIf	                               

	If !Empty(::ParamMachineLoad:FromProduct) //C	15	mv_par11
		Aadd(aAltParam,{"11","C","MV_PAR11",::ParamMachineLoad:FromProduct})
	EndIf	                               

	If !Empty(::ParamMachineLoad:ToProduct) //C	15	mv_par12
		Aadd(aAltParam,{"12","C","MV_PAR12",::ParamMachineLoad:ToProduct})
	EndIf	                               

	If !Empty(::ParamMachineLoad:FromGroup) //C	4	mv_par13
		Aadd(aAltParam,{"13","C","MV_PAR13",::ParamMachineLoad:FromGroup})
	EndIf	                               

	If !Empty(::ParamMachineLoad:ToGroup) //C	4	mv_par14
		Aadd(aAltParam,{"14","C","MV_PAR14",::ParamMachineLoad:ToGroup})
	EndIf	                               

	If !Empty(::ParamMachineLoad:InitialDate) //D	8	mv_par15
		Aadd(aAltParam,{"15","D","MV_PAR15",::ParamMachineLoad:InitialDate})
	EndIf	                               

	If !Empty(::ParamMachineLoad:FromType) //	C	2	mv_par16
		Aadd(aAltParam,{"16","C","MV_PAR16",::ParamMachineLoad:FromType})
	EndIf	                               

	If !Empty(::ParamMachineLoad:ToType) //C	2	mv_par17
		Aadd(aAltParam,{"17","C","MV_PAR17",::ParamMachineLoad:ToType})
	EndIf	                               
	xVar := ::ParamMachineLoad:AllocatePOs
	If !Empty(xVar) .And. (xVar == 1 .Or. xVar == 2) //N	1	mv_par21
		Aadd(aAltParam,{"21","N","MV_PAR21",::ParamMachineLoad:AllocatePOs})
	EndIf	                               

	If !Empty(::ParamMachineLoad:FromProductionLine) //C	3	mv_par25
		Aadd(aAltParam,{"25","C","MV_PAR25",::ParamMachineLoad:FromProductionLine})
	EndIf	                               
	
	If !Empty(::ParamMachineLoad:ToProductionLine) //C	3	mv_par26
		Aadd(aAltParam,{"26","C","MV_PAR26",::ParamMachineLoad:ToProductionLine})
	EndIf	                               
	xVar := ::ParamMachineLoad:MoveAllocatedPartisanOP
	If !Empty(xVar) .And. (xVar == 1 .Or. xVar == 2) //N	1	mv_par27
		Aadd(aAltParam,{"27","N","MV_PAR27",::ParamMachineLoad:MoveAllocatedPartisanOP})
	EndIf	                               
	xVar := ::ParamMachineLoad:RefuseFutureOperations
	If !Empty(xVar) .And. (xVar == 1 .Or. xVar == 2) //N	1	mv_par28
		Aadd(aAltParam,{"28","N","MV_PAR28",::ParamMachineLoad:RefuseFutureOperations})
	EndIf	                               
	xVar := ::ParamMachineLoad:DisregardResource
	If !Empty(xVar) .And. (xVar >= 1 .And. xVar <= 4) //N	1	mv_par30	
		Aadd(aAltParam,{"30","N","MV_PAR30",::ParamMachineLoad:DisregardResource})
	EndIf                            

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Execucao do Sequenciamento de Operacoes (Carga Maquina)³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	MATA690(.T.,lAtuSC2,aAltParam)		
	If lMsErroAuto
		aErro := GetAutoGRLog()
	EndIf

	If !lRetorno         
		For nI := 1 To Len(aErro)
			cErro += aErro[nY] + Chr(13)+Chr(10)
		Next nI	
		SetSoapFault("ExecMachineLoad",cErro)
	EndIf
Else
	lRetorno := .F.
EndIf
RestArea(aArea)
Return(lRetorno)



/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³GetMachine³Autor  ³ Erike Yuri da Silva   ³ Data ³05.08.2006 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³Rotina recupera a op e operacao informadoss                  ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpC1: Codigo do usuario                                     ³±±
±±³          ³ExpC2: Codigo do ordem de producao                           ³±±
±±³          ³ExpC1: Codigo da operacao                                    ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ExpL1: Indica que o metodo foi avaliado com sucesso          ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Materiais/Portais                                           ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
WSMETHOD GetMachineLoad WSRECEIVE UserCode,ProductionOrderNumber WSSEND ListAllocatedOperations WSSERVICE MtMachineLoad

Local aArea    := GetArea()
Local cCursor  := "SH8"
Local cErro    := ""
Local lQuery   := .F.
Local lRetorno := .T.
Local nX       := 0
#IFDEF TOP
Local aStruct  := {}
Local cQuery   := ""
#ENDIF

If PrtChkUser(::UserCode,"MtMachineLoad","","SH8")
	dbSelectArea("SH8")
	dbSetOrder(1)
	If Empty(::ProductionOrderNumber)
		cErro		:= STR0014
		lRetorno 	:= .F.	
	Else
		#IFDEF TOP
			lQuery  := .T.
			cCursor := "GetMachineLoad"
			cQuery  := "SELECT * "
			cQuery  += "FROM "+RetSqlName("SH8")
			cQuery  += " WHERE H8_FILIAL='"+xFilial("SH8")+"' AND "
			cQuery	+= " H8_OP = '"+::ProductionOrderNumber+"' AND "
			cQuery  += "D_E_L_E_T_=' ' "
			cQuery  := WsQueryAdd(cQuery,::QueryAddWhere)
			cQuery  += "ORDER BY "+SqlOrder(::IndexKey)
			
			cQuery := ChangeQuery(cQuery)
			
			dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cCursor)
			aStruct := SH8->(dbStruct())
			For nX := 1 To Len(aStruct)
				If aStruct[nX][2]<>"C" .And. FieldPos(aStruct[nX][1])<>0
					TcSetField(cCursor,aStruct[nX][1],aStruct[nX][2],aStruct[nX][3],aStruct[nX][4])
			    EndIf
			Next nX
		#ELSE
	    	SH8->( MsSeek(xFilial("SH8")+::ProductionOrderNumber) )
		#ENDIF
	    
		If (cCursor)->( Eof() ) 
			cErro := STR0015
			lRetorno := .F.
		EndIf
	EndIf
	nX := 0              
	::ListAllocatedOperations := {}
	While lRetorno .And.  (cCursor)->(!Eof() .And. (lQuery .Or. H8_FILIAL+H8_OP == xFilial("SH8")+::ProductionOrderNumber) )
					
	    nX++
		aadd(::ListAllocatedOperations,WSClassNew("AllocatedOperationsView"))

		::ListAllocatedOperations[nX]:ProductionOrderNumber	:= (cCursor)->H8_OP
		::ListAllocatedOperations[nX]:Operation				:= (cCursor)->H8_OPER
		::ListAllocatedOperations[nX]:ResourceNumber		:= (cCursor)->H8_RECURSO
		::ListAllocatedOperations[nX]:InitialDate			:= (cCursor)->H8_DTINI
		::ListAllocatedOperations[nX]:InitialTime			:= (cCursor)->H8_HRINI
		::ListAllocatedOperations[nX]:EndDate              	:= (cCursor)->H8_DTFIM
		::ListAllocatedOperations[nX]:FinalTime				:= (cCursor)->H8_HRFIM
		::ListAllocatedOperations[nX]:WorkCenter			:= (cCursor)->H8_CTRAB	
		::ListAllocatedOperations[nX]:OperationRoute		:= (cCursor)->H8_ROTEIRO
		::ListAllocatedOperations[nX]:Status				:= (cCursor)->H8_STATUS
		::ListAllocatedOperations[nX]:Setup					:= (cCursor)->H8_SETUP
		::ListAllocatedOperations[nX]:Quantity				:= (cCursor)->H8_QUANT
		::ListAllocatedOperations[nX]:HoursUsed				:= (cCursor)->H8_USO

		UserFields("SB8",@::ListAllocatedOperations[nX]:UserFields,cCursor)
				
		dbSelectArea(cCursor)
		dbSkip()			
	EndDo
	If lQuery
		dbSelectArea(cCursor)
		dbCloseArea()
		dbSelectArea("SH8")
	EndIf

	If !lRetorno
		SetSoapFault("GetMachineLoad",cErro)
	EndIf
Else
	lRetorno := .F.
EndIf

RestArea(aArea)
Return(lRetorno)