#INCLUDE "wsmat650.ch"
#INCLUDE "APWEBSRV.CH"
#INCLUDE "PROTHEUS.CH"
/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³WSMAT650  ³ Autor ³Eduardo Riera          ³ Data ³26.08.2004  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Ordens de Producao                                           ³±±
±±³          ³                                                              ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³                                                              ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³                                                              ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Web Service                                                  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Atualizacoes sofridas desde a Construcao Inicial.                       ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Programador  ³ Data   ³ BOPS ³  Motivo da Alteracao                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³              ³        ³      ³                                          ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Definicao do Web Service de Controle do Usuario                         ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
WSSERVICE MtProductionOrder DESCRIPTION STR0001 NAMESPACE "http:webservices.microsiga.com.br/mtproductionorder.apw" //"Serviço de consulta e atualização das ordens de produção "
WSDATA Header                 AS Array OF BrwHeader
WSDATA HeaderType             AS String
WSDATA UserCode               AS String
WSDATA POID	     			  AS String
WSDATA POItem    			  AS String		OPTIONAL
WSDATA POSequence			  AS String 	OPTIONAL
WSDATA PODateFrom             AS Date		OPTIONAL
WSDATA PODateTo               AS Date 		OPTIONAL
WSDATA StartForecastDateFrom  AS Date 		OPTIONAL
WSDATA StartForecastDateTo    AS Date 		OPTIONAL
WSDATA FinishForecastDateFrom AS Date 		OPTIONAL
WSDATA FinishForecastDateTo   AS Date 		OPTIONAL
WSDATA StartAdjustedDateFrom  As Date 		OPTIONAL
WSDATA StartAdjustedDateTo    As Date 		OPTIONAL
WSDATA FinishAdjustedDateFrom As Date 		OPTIONAL
WSDATA FinishAdjustedDateTo   As Date 		OPTIONAL
WSDATA QueryAddWhere          AS String 	OPTIONAL
WSDATA IndexKey               AS String 	OPTIONAL
WSDATA PageLen                AS Integer 	OPTIONAL
WSDATA PageFirst              AS Integer 	OPTIONAL
WSDATA ListOfProductionOrder  As Array Of ProductionOrderView OPTIONAL
WSDATA ListOfPoRequirements   As Array Of PoRequirementsView OPTIONAL
WSDATA ListOfPOMovements      As Array Of GoodsMovementsView OPTIONAL
WSDATA ListOfPOLoss           As Array Of POLossView
WSDATA ProductionOrder        As ProductionOrderView
WSDATA Total                  As Integer
WSDATA PONumber				  As String
WSDATA AutExplode			  As String
WSDATA Option				  As Integer
WSDATA WSNULL				  As String 
WSDATA CreatedPO			  As String

WSMETHOD GetHeader                	DESCRIPTION STR0002 //"Método que descreve as estruturas de retorno do serviço"
WSMETHOD GetProductionOrder       	DESCRIPTION STR0003 //"Método de consulta as informações das ordens de produção"
WSMETHOD BrwPORequirements        	DESCRIPTION STR0004 //"Método de listagem dos empenhos da ordem de produção"
WSMETHOD BrwProductionOrder       	DESCRIPTION STR0005 //"Método de listagem das ordens de produção"
WSMETHOD BrwTotalProductionOrder  	DESCRIPTION STR0006 //"Método de contagem do total das ordens de produções existentes. Este método esta relacionado ao método BrwProductionOrder"
WSMETHOD BrwPOAppointment         	DESCRIPTION STR0007 //"Método de listagem dos apontamentos da ordem de produção"
WSMETHOD BrwPOLoss                	DESCRIPTION STR0008 //"Método de listagem das perdas de producao e seus refugos"
WSMETHOD PutProductionOrder		  	DESCRIPTION STR0016 //"Método de atualização de ordem de produção"
WSMETHOD DelProductionOrder		  	DESCRIPTION STR0017 //"Método de exclusao de ordem de produção"
ENDWSSERVICE

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³GetHeader ³Autor  ³ Eduardo Riera         ³ Data ³26.08.2004 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³Rotina de recuperacao dos headers deste WS                   ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpC1: Nome da Estrutura                                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ExpL1: Indica que o metodo foi avaliado com sucesso          ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Este metodo devolve o header de uma estrutura                ³±±
±±³          ³                                                             ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ WEB SERVICES                                                ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
WSMETHOD GetHeader WSRECEIVE HeaderType WSSEND Header WSSERVICE MtProductionOrder
Local aRetIni := {}

IF FindFunction("PCPWSInit")
	aRetIni := PCPWSInit()
Else
	aRetIni := {.T.,""}
EndIf	

IF aRetIni[1]
	::Header := MtHeader(::HeaderType)
Else
	SetSoapFault("GetHeader",aRetIni[2])
	Return(.F.)
EndIf	

Return(.T.)

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³BrwProduct³Autor  ³ Eduardo Riera         ³ Data ³30.08.2004 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³Rotina de listagem das ordens de produção                    ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpC1: Codigo do usuario                                     ³±±
±±³          ³ExpD2: Emissao de                                            ³±±
±±³          ³ExpD3: Emissao de                                            ³±±
±±³          ³ExpD4: Previsao inicio de                                    ³±±
±±³          ³ExpD5: Previsao inicio ate                                   ³±±
±±³          ³ExpD6: Previsao termino de                                   ³±±
±±³          ³ExpD7: Previsao termino ate                                  ³±±
±±³          ³ExpD8: Data ajustada inicial de                              ³±±
±±³          ³ExpD9: Data ajudata inicial ate                              ³±±
±±³          ³ExpD8: Data ajustada final de                                ³±±
±±³          ³ExpD9: Data ajusdata final ate                               ³±±
±±³          ³ExpCA: Query a ser adicionada                                ³±±
±±³          ³ExpCB: IndexKey                                              ³±±
±±³          ³ExpNC: Tamanho da Pagina                                     ³±±
±±³          ³ExpND: Numero da primeira pagina                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ExpL1: Indica que o metodo foi avaliado com sucesso          ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Este metodo devolve as ordens de producao                    ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ WEB SERVICES                                                ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
WSMETHOD BrwProductionOrder WSRECEIVE UserCode,PODateFrom,PODateTo,StartForecastDateFrom,StartForecastDateTo,FinishForecastDateFrom,FinishForecastDateTo,StartAdjustedDateFrom,StartAdjustedDateTo,FinishAdjustedDateFrom,FinishAdjustedDateTo,QueryAddWhere,IndexKey,PageLen,PageFirst WSSEND ListOfProductionOrder WSSERVICE MtProductionOrder

Local aArea     := {}
Local aRetIni	:= {}
Local aStruSC2  := {}
Local cAliasSC2 := "SC2"
Local cArquivo  := ""
Local cQuery    := ""
Local lQuery    := .F.
Local lRetorno  := .T.
Local nX        := 0
Local nY        := 0

DEFAULT ::PageLen   := 0
DEFAULT ::PageFirst := 0

IF FindFunction("PCPWSInit")
	aRetIni := PCPWSInit()
Else
	aRetIni := {.T.,""}
EndIf	

IF aRetIni[1]
	aArea     := GetArea()
	If PrtChkUser(::UserCode,"MtProductionOrder","BrwProductionOrder")
		dbSelectArea("SC2")
		dbSetOrder(1)
		::IndexKey := IIf(Empty(::IndexKey),SC2->(IndexKey()),::IndexKey)	
		
		#IFDEF TOP
			lQuery	:= .T.
			aStruSC2	:= SC2->(dbStruct())
			cAliasSC2:= GetNextAlias()

			cQuery	:= "SELECT * "
			cQuery	+= "FROM "+RetSqlName("SC2")+" SC2 "
			cQuery	+= "WHERE "
			cQuery	+= "SC2.C2_FILIAL = '"+xFilial("SC2")+"' AND "
			If !Empty(::PODateFrom)
				cQuery	+= "SC2.C2_EMISSAO>='"+Dtos(::PODateFrom)+"' AND "
			EndIf
			If !Empty(::PODateTo)
				cQuery	+= "SC2.C2_EMISSAO<='"+Dtos(::PODateTo)+"' AND "
			EndIf
			If !Empty(::StartForecastDateFrom)
				cQuery	+= "SC2.C2_DATPRI>='"+Dtos(::StartForecastDateFrom)+"' AND "
			EndIf
			If !Empty(::StartForecastDateTo)
				cQuery	+= "SC2.C2_DATPRI<='"+Dtos(::StartForecastDateTo)+"' AND "
			EndIf
			If !Empty(::FinishForecastDateFrom)
				cQuery	+= "SC2.C2_DATPRF>='"+Dtos(::FinishForecastDateFrom)+"' AND "
			EndIf
			If !Empty(::FinishForecastDateTo)
				cQuery	+= "SC2.C2_DATPRF<='"+Dtos(::FinishForecastDateTo)+"' AND "
			EndIf
			If !Empty(::StartAdjustedDateFrom)
				cQuery	+= "SC2.C2_DATAJI>='"+Dtos(::StartAdjustedDateFrom)+"' AND "
			EndIf
			If !Empty(::StartAdjustedDateTo)
				cQuery	+= "SC2.C2_DATAJI<='"+Dtos(::StartAdjustedDateTo)+"' AND "
			EndIf
			If !Empty(::FinishAdjustedDateFrom)
				cQuery	+= "SC2.C2_DATAJF>='"+Dtos(::FinishAdjustedDateFrom)+"' AND "
			EndIf
			If !Empty(::FinishAdjustedDateTo)
				cQuery	+= "SC2.C2_DATAJF<='"+Dtos(::FinishAdjustedDateTo)+"' AND "
			EndIf		
			cQuery	+= "SC2.D_E_L_E_T_=' ' "
			cQuery := WsQueryAdd(cQuery,::QueryAddWhere)
			cQuery	+= "ORDER BY "+SqlOrder(::IndexKey)

			cQuery	:= ChangeQuery(cQuery)
			
			dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cAliasSC2,.T.,.T.)

			For nX := 1 To Len(aStruSC2)
				If aStruSC2[nX][2]<>"C" .And. aStruSC2[nX][2]<>"M"
					TcSetField(cAliasSC2,aStruSC2[nX][1],aStruSC2[nX][2],aStruSC2[nX][3],aStruSC2[nX][4])
				EndIf
			Next nX
		#ELSE
			cQuery	+= "C2_FILIAL == '"+xFilial("SC2")+"' .And. "
			If !Empty(::PODateFrom)
				cQuery	+= "C2_EMISSAO>='"+Dtos(::PODateFrom)+"' .And. "
			EndIf
			If !Empty(::PODateTo)
				cQuery	+= "C2_EMISSAO<='"+Dtos(::PODateTo)+"' .And. "
			EndIf
			If !Empty(::StartForecastDateFrom)
				cQuery	+= "C2_DATPRI>='"+Dtos(::StartForecastDateFrom)+"' .And. "
			EndIf
			If !Empty(::StartForecastDateTo)
				cQuery	+= "C2_DATPRI<='"+Dtos(::StartForecastDateTo)+"' .And. "
			EndIf
			If !Empty(::FinishForecastDateFrom)
				cQuery	+= "C2_DATPRF>='"+Dtos(::FinishForecastDateFrom)+"' .And. "
			EndIf
			If !Empty(::FinishForecastDateTo)
				cQuery	+= "C2_DATPRF<='"+Dtos(::FinishForecastDateTo)+"' .And. "
			EndIf
			If !Empty(::StartAdjustedDateFrom)
				cQuery	+= "C2_DATAJI>='"+Dtos(::StartAdjustedDateFrom)+"' .And. "
			EndIf
			If !Empty(::StartAdjustedDateTo)
				cQuery	+= "C2_DATAJI<='"+Dtos(::StartAdjustedDateTo)+"' .And. "
			EndIf
			If !Empty(::FinishAdjustedDateFrom)
				cQuery	+= "C2_DATAJF>='"+Dtos(::FinishAdjustedDateFrom)+"' .And. "
			EndIf
			If !Empty(::FinishAdjustedDateTo)
				cQuery	+= "C2_DATAJF<='"+Dtos(::FinishAdjustedDateTo)+"' "
			EndIf		
			cArquivo := CriaTrab(,.F.)

			IndRegua("SC2",cArquivo,::IndexKey,,cQuery)
			dbGotop()
		#ENDIF
		nX := 0
		dbSelectArea(cAliasSC2)
		While !Eof() .And. xFilial("SC2") == (cAliasSC2)->C2_FILIAL

			nX++
			If ::PageFirst==0 .Or. nX >= ::PageFirst
				aadd(::ListOfProductionOrder,WSClassNew("ProductionOrderView"))
				nY++
				GetOP(@::ListOfProductionOrder[nY],cAliasSC2)
			EndIf
			If nY >= ::PageLen .And. ::PageLen <> 0
				Exit
			EndIf
			dbSelectArea(cAliasSC2)
			dbSkip()
		EndDo
		If lQuery
			dbSelectArea(cAliasSC2)
			dbCloseArea()
			dbSelectArea("SC2")
		Else
			dbSelectArea(cAliasSC2)
			dbCloseArea()		
			FErase(cARquivo+OrdBagExt())
		EndIf	
		If nY == 0
			SetSoapFault("BRWPRODUCTIONORDER",STR0009) //"Nenhuma orden de produção foi encontrada"
			lRetorno := .F.
		EndIf
	Else
		lRetorno := .F.
	EndIf
	RestArea(aArea)
Else
	lRetorno := .F.
	SetSoapFault("BRWPRODUCTIONORDER",aRetIni[2])
EndIf	

Return(lRetorno)

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³GetTotalPO³Autor  ³ Eduardo Riera         ³ Data ³02.09.2004 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³Rotina de listagem das ordens de produção                    ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpC1: Codigo do usuario                                     ³±±
±±³          ³ExpD2: Emissao de                                            ³±±
±±³          ³ExpD3: Emissao de                                            ³±±
±±³          ³ExpD4: Previsao inicio de                                    ³±±
±±³          ³ExpD5: Previsao inicio ate                                   ³±±
±±³          ³ExpD6: Previsao termino de                                   ³±±
±±³          ³ExpD7: Previsao termino ate                                  ³±±
±±³          ³ExpD8: Data ajustada inicial de                              ³±±
±±³          ³ExpD9: Data ajudata inicial ate                              ³±±
±±³          ³ExpD8: Data ajustada final de                                ³±±
±±³          ³ExpD9: Data ajusdata final ate                               ³±±
±±³          ³ExpCA: Query a ser adicionada                                ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ExpL1: Indica que o metodo foi avaliado com sucesso          ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Este metodo devolve as ordens de producao                    ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ WEB SERVICES                                                ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
WSMETHOD BrwTotalProductionOrder WSRECEIVE UserCode,PODateFrom,PODateTo,StartForecastDateFrom,StartForecastDateTo,FinishForecastDateFrom,FinishForecastDateTo,StartAdjustedDateFrom,StartAdjustedDateTo,FinishAdjustedDateFrom,FinishAdjustedDateTo,QueryAddWhere WSSEND Total WSSERVICE MtProductionOrder

Local aArea     := {}
Local aRetIni	:= {}
Local cAliasSC2 := "SC2"
Local cArquivo  := ""
Local cQuery    := ""
Local lRetorno  := .T.

IF FindFunction("PCPWSInit")
	aRetIni := PCPWSInit()
Else
	aRetIni := {.T.,""}
EndIf	

IF aRetIni[1]
	aArea     := GetArea()
	If PrtChkUser(::UserCode,"MtProductionOrder","BrwTotalProductionOrder")
		dbSelectArea("SC2")
		dbSetOrder(1)
		#IFDEF TOP
			cAliasSC2:= GetNextAlias()

			cQuery	:= "SELECT count(*) TOTALOP "
			cQuery	+= "FROM "+RetSqlName("SC2")+" SC2 "
			cQuery	+= "WHERE "
			cQuery	+= "SC2.C2_FILIAL = '"+xFilial("SC2")+"' AND "
			If !Empty(::PODateFrom)
				cQuery	+= "SC2.C2_EMISSAO>='"+Dtos(::PODateFrom)+"' AND "
			EndIf
			If !Empty(::PODateTo)
				cQuery	+= "SC2.C2_EMISSAO<='"+Dtos(::PODateTo)+"' AND "
			EndIf
			If !Empty(::StartForecastDateFrom)
				cQuery	+= "SC2.C2_DATPRI>='"+Dtos(::StartForecastDateFrom)+"' AND "
			EndIf
			If !Empty(::StartForecastDateTo)
				cQuery	+= "SC2.C2_DATPRI<='"+Dtos(::StartForecastDateTo)+"' AND "
			EndIf
			If !Empty(::FinishForecastDateFrom)
				cQuery	+= "SC2.C2_DATPRF>='"+Dtos(::FinishForecastDateFrom)+"' AND "
			EndIf
			If !Empty(::FinishForecastDateTo)
				cQuery	+= "SC2.C2_DATPRF<='"+Dtos(::FinishForecastDateTo)+"' AND "
			EndIf
			If !Empty(::StartAdjustedDateFrom)
				cQuery	+= "SC2.C2_DATAJI>='"+Dtos(::StartAdjustedDateFrom)+"' AND "
			EndIf
			If !Empty(::StartAdjustedDateTo)
				cQuery	+= "SC2.C2_DATAJI<='"+Dtos(::StartAdjustedDateTo)+"' AND "
			EndIf
			If !Empty(::FinishAdjustedDateFrom)
				cQuery	+= "SC2.C2_DATAJF>='"+Dtos(::FinishAdjustedDateFrom)+"' AND "
			EndIf
			If !Empty(::FinishAdjustedDateTo)
				cQuery	+= "SC2.C2_DATAJF<='"+Dtos(::FinishAdjustedDateTo)+"' AND "
			EndIf		
			cQuery	+= "SC2.D_E_L_E_T_=' ' "
			cQuery := WsQueryAdd(cQuery,::QueryAddWhere)
		
			cQuery	:= ChangeQuery(cQuery)

			dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cAliasSC2,.T.,.T.)
			
			::Total := (cAliasSC2)->TOTALOP
			
		#ELSE
			cQuery	+= "C2_FILIAL == '"+xFilial("SC2")+"' .And. "
			If !Empty(::PODateFrom)
				cQuery	+= "C2_EMISSAO>='"+Dtos(::PODateFrom)+"' .And. "
			EndIf
			If !Empty(::PODateTo)
				cQuery	+= "C2_EMISSAO<='"+Dtos(::PODateTo)+"' .And. "
			EndIf
			If !Empty(::StartForecastDateFrom)
				cQuery	+= "C2_DATPRI>='"+Dtos(::StartForecastDateFrom)+"' .And. "
			EndIf
			If !Empty(::StartForecastDateTo)
				cQuery	+= "C2_DATPRI<='"+Dtos(::StartForecastDateTo)+"' .And. "
			EndIf
			If !Empty(::FinishForecastDateFrom)
				cQuery	+= "C2_DATPRF>='"+Dtos(::FinishForecastDateFrom)+"' .And. "
			EndIf
			If !Empty(::FinishForecastDateTo)
				cQuery	+= "C2_DATPRF<='"+Dtos(::FinishForecastDateTo)+"' .And. "
			EndIf
			If !Empty(::StartAdjustedDateFrom)
				cQuery	+= "C2_DATAJI>='"+Dtos(::StartAdjustedDateFrom)+"' .And. "
			EndIf
			If !Empty(::StartAdjustedDateTo)
				cQuery	+= "C2_DATAJI<='"+Dtos(::StartAdjustedDateTo)+"' .And. "
			EndIf
			If !Empty(::FinishAdjustedDateFrom)
				cQuery	+= "C2_DATAJF>='"+Dtos(::FinishAdjustedDateFrom)+"' .And. "
			EndIf
			If !Empty(::FinishAdjustedDateTo)
				cQuery	+= "C2_DATAJF<='"+Dtos(::FinishAdjustedDateTo)+"' "
			EndIf		
			cArquivo := CriaTrab(,.F.)

			IndRegua("SC2",cArquivo,::IndexKey,,cQuery)
			dbGotop()

			dbSelectArea(cAliasSC2)
			::Total := 0
			While !Eof() .And. xFilial("SC2") == (cAliasSC2)->C2_FILIAL
		
				::Total ++
		
				dbSelectArea(cAliasSC2)
				dbSkip()
			EndDo
		#ENDIF		
		If lQuery
			dbSelectArea(cAliasSC2)
			dbCloseArea()
			dbSelectArea("SC2")
		Else
			dbSelectArea(cAliasSC2)
			RetIndex("SC2")
			FErase(cArquivo+OrdBagExt())
		EndIf
	Else
		lRetorno := .F.
	EndIf
	RestArea(aArea)
Else
	lRetorno := .F.
	SetSoapFault("BrwTotalProductionOrder",aRetIni[2])
EndIf	

Return(lRetorno)

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³GetProduct³Autor  ³ Eduardo Riera         ³ Data ³30.08.2004 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³Rotina de consulta a ordem de producao                       ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpC1: Codigo do usuario                                     ³±±
±±³          ³ExpC2: Numero da OP                                          ³±±
±±³          ³ExpC3: Item da OP                                            ³±±
±±³          ³ExpC4: Sequencia da OP                                       ³±±
±±³          ³                                                             ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ExpL1: Indica que o metodo foi avaliado com sucesso          ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Este metodo devolve a estrutura da ordem de producao         ³±±
±±³          ³                                                             ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ WEB SERVICES                                                ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
WSMETHOD GetProductionOrder WSRECEIVE UserCode,POID,POItem,POSequence WSSEND ProductionOrder WSSERVICE MtProductionOrder

Local aArea  	:= {}   
Local aRetIni	:= {}   
Local lRetorno  := .T.

IF FindFunction("PCPWSInit")
	aRetIni := PCPWSInit()
Else
	aRetIni := {.T.,""}
EndIf	

IF aRetIni[1]
	aArea     := GetArea()
	If PrtChkUser(::UserCode,"MtProductionOrder","GetProductionOrder")
		dbSelectArea("SC2")
		dbSetOrder(1)
		If MsSeek(xFilial("SC2")+::POID+::POItem+::POSequence)
			GetOP(@::ProductionOrder,"SC2")	
		Else
			lRetorno := .F.
			SetSoapFault("GETPRODUCTIONORDER",STR0010) //"Ordem de Produção não encontrada"
		EndIf
	Else
		lRetorno := .F.
	EndIf
	RestArea(aArea)
Else
	lRetorno := .F.
	SetSoapFault("GetProductionOrder",aRetIni[2])
EndIf	

Return(lRetorno)

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³BrwPORequi³Autor  ³ Eduardo Riera         ³ Data ³30.08.2004 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³Rotina de consulta aos empenhos da Ordem de Produção         ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpC1: Codigo do Usuario                                     ³±±
±±³          ³ExpC2: Numero da OP                                          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ExpL1: Indica que o metodo foi avaliado com sucesso          ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Este metodo devolve a estrutura da ordem de producao         ³±±
±±³          ³                                                             ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ WEB SERVICES                                                ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
WSMETHOD BrwPORequirements WSRECEIVE UserCode,POID,POItem,POSequence WSSEND ListOfPORequirements WSSERVICE MtProductionOrder

Local aArea     := {}
Local aRetIni 	:= {}
Local aStruSD4  := {}
Local cAliasSD4 := "SD4"
Local cQuery    := ""
Local lRetorno  := .T.
Local nX        := 0
Local nY        := 0

IF FindFunction("PCPWSInit")
	aRetIni := PCPWSInit()
Else
	aRetIni := {.T.,""}
EndIf	

IF aRetIni[1]
	aArea     := GetArea()
	If PrtChkUser(::UserCode,"MtProductionOrder","BrwPORequirements")
		dbSelectArea("SD4")
		dbSetOrder(1)
		#IFDEF TOP
			cAliasSD4 := GetNextAlias()
			aStruSD4  := SD4->(dbStruct())
			
			cQuery := "SELECT * "
			cQuery += "FROM "+RetSqlName("SD4")+" SD4 "
			cQuery += "WHERE SD4.D4_FILIAL='"+xFilial("SD4")+"' AND "
			cQuery += "SubString(SD4.D4_OP,1,11)='"+::POID+::POItem+::POSequence+"' AND "
			cQuery += "SD4.D_E_L_E_T_=' ' "
			
			cQuery := ChangeQuery(cQuery)
			
			dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cAliasSD4)
			For nX := 1 To Len(aStruSD4)
				If aStruSD4[nX][2] <> "C" 
					TcSetField(cAliasSD4,aStruSD4[nX][1],aStruSD4[nX][2],aStruSD4[nX][3],aStruSD4[nX][4])
				EndIf
			Next nX
		#ELSE
			MsSeek(xFilial("SD4")+::POID+::POItem+::POSequence)
		#ENDIF
		While !Eof() .And. (cAliasSD4)->D4_FILIAL == xFilial("SD4") .And.;
			SubStr((cAliasSD4)->D4_OP,1,11) == ::POID+::POItem+::POSequence


			aadd(::ListOfPORequirements,WSClassNew("PORequirementsView"))
			nY++
			GetEmpenho(@::ListOfPORequirements[nY],cAliasSD4)
			
			dbSelectArea(cAliasSD4)
			dbSkip()
			
		EndDo
		If lQuery
			dbSelectArea(cAliasSD4)
			dbCloseArea()
			dbSelectArea("SD4")
		EndIf
		If Empty(::ListOfPORequirements)
			lRetorno := .F.
			SetSoapFault("BrwPORequirements",STR0011) //"Nenhum empenho encontrado"
		EndIf
	Else
		lRetorno := .F.

	EndIf
	RestArea(aArea)
Else
	lRetorno := .F.
	SetSoapFault("BrwPORequirements",aRetIni[2])
EndIf	

Return(lRetorno)


/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³BrwPOAppoi³Autor  ³ Eduardo Riera         ³ Data ³02.09.2004 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³Rotina de listagem das requisicoes das Ordens de Producao    ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpC1: Codigo do Usuario                                     ³±±
±±³          ³ExpC2: Numero da OP                                          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ExpL1: Indica que o metodo foi avaliado com sucesso          ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Este metodo devolve a estrutura da ordem de producao         ³±±
±±³          ³                                                             ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ WEB SERVICES                                                ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
WSMETHOD BrwPOAppointment WSRECEIVE UserCode,POID,POItem,POSequence WSSEND ListOfPOMovements WSSERVICE MtProductionOrder

Local aArea  	:= {}  
Local aRetIni 	:= {}
Local aStruSD3  := {}
Local cAliasSD3 := "SD3"
Local cQuery    := ""
Local lRetorno  := .T.
Local nX        := 0
Local nY        := 0

IF FindFunction("PCPWSInit")
	aRetIni := PCPWSInit()
Else
	aRetIni := {.T.,""}
EndIf	

IF aRetIni[1]
	aArea     := GetArea()
	If PrtChkUser(::UserCode,"MtProductionOrder","BrwPOAppointment")
		dbSelectArea("SD3")
		dbSetOrder(1)
		#IFDEF TOP
			cAliasSD3 := GetNextAlias()
			aStruSD3  := SD3->(dbStruct())
			
			cQuery := "SELECT * "
			cQuery += "FROM "+RetSqlName("SD3")+" SD3 "
			cQuery += "WHERE SD3.D3_FILIAL='"+xFilial("SD3")+"' AND "
			cQuery += "SubString(SD3.D3_OP,1,11)='"+::POID+::POItem+::POSequence+"' AND "
			cQuery += "SD3.D_E_L_E_T_=' ' "
			
			cQuery := ChangeQuery(cQuery)
			
			dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cAliasSD3)
			For nX := 1 To Len(aStruSD3)
				If aStruSD3[nX][2] <> "C" 
					TcSetField(cAliasSD3,aStruSD3[nX][1],aStruSD3[nX][2],aStruSD3[nX][3],aStruSD3[nX][4])
				EndIf
			Next nX
		#ELSE
			MsSeek(xFilial("SD3")+::POID+::POItem+::POSequence)
		#ENDIF
		While !Eof() .And. (cAliasSD3)->D3_FILIAL == xFilial("SD3") .And.;
			SubStr((cAliasSD3)->D3_OP,1,11) == ::POID+::POItem+::POSequence


			aadd(::ListOfPOMovements,WSClassNew("GoodsMovementsView"))
			nY++
			GetReqInt(@::ListOfPOMovements[nY],cAliasSD3)
			
			dbSelectArea(cAliasSD3)
			dbSkip()
			
		EndDo
		If lQuery
			dbSelectArea(cAliasSD3)
			dbCloseArea()
			dbSelectArea("SD3")
		EndIf	
		If Empty(::ListOfPOMovements)
			lRetorno := .F.
			SetSoapFault("BrwPOAppointment",STR0012) //"Nenhuma requisição encontrada"
		EndIf
	Else
		lRetorno := .F.
	EndIf
	RestArea(aArea)
Else
	lRetorno := .F.
	SetSoapFault("BrwPOAppointment",aRetIni[2])
EndIf	

Return(lRetorno)

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³BrwPOAppoi³Autor  ³ Eduardo Riera         ³ Data ³02.09.2004 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³Rotina de listagem das requisicoes das Ordens de Producao    ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpC1: Codigo do Usuario                                     ³±±
±±³          ³ExpC2: Numero da OP                                          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ExpL1: Indica que o metodo foi avaliado com sucesso          ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Este metodo devolve a estrutura da ordem de producao         ³±±
±±³          ³                                                             ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ WEB SERVICES                                                ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
WSMETHOD BrwPOLoss WSRECEIVE UserCode,POID,POItem,POSequence WSSEND ListOfPOLoss WSSERVICE MtProductionOrder

Local aArea  	:= {}   
Local aRetIni	:= {}   
Local aStruSBC  := {}
Local cAliasSBC := "SBC"
Local cQuery    := ""
Local lRetorno  := .T.
Local nX        := 0
Local nY        := 0

IF FindFunction("PCPWSInit")
	aRetIni := PCPWSInit()
Else
	aRetIni := {.T.,""}
EndIf	

IF aRetIni[1]
	aArea     := GetArea()
	If PrtChkUser(::UserCode,"MtProductionOrder","BrwPOLoss")
		dbSelectArea("SBC")
		dbSetOrder(1)
		#IFDEF TOP
			cAliasSBC := GetNextAlias()
			aStruSBC  := SBC->(dbStruct())
			
			cQuery := "SELECT * "
			cQuery += "FROM "+RetSqlName("SBC")+" SBC "
			cQuery += "WHERE SBC.BC_FILIAL='"+xFilial("SBC")+"' AND "
			cQuery += "SubString(SBC.BC_OP,1,11)='"+::POID+::POItem+::POSequence+"' AND "
			cQuery += "SBC.D_E_L_E_T_=' ' "
			
			cQuery := ChangeQuery(cQuery)
			
			dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cAliasSBC)
			For nX := 1 To Len(aStruSBC)
				If aStruSBC[nX][2] <> "C" 
					TcSetField(cAliasSBC,aStruSBC[nX][1],aStruSBC[nX][2],aStruSBC[nX][3],aStruSBC[nX][4])
				EndIf
			Next nX
		#ELSE
			MsSeek(xFilial("SBC")+::POID+::POItem+::POSequence)
		#ENDIF
		While !Eof() .And. (cAliasSBC)->BC_FILIAL == xFilial("SBC") .And.;
			SubStr((cAliasSBC)->BC_OP,1,11) == ::POID+::POItem+::POSequence


			aadd(::ListOfPOLoss,WSClassNew("POLossView"))
			nY++
			GetOPPerda(@::ListOfPOLoss[nY],cAliasSBC)
			
			dbSelectArea(cAliasSBC)
			dbSkip()
			
		EndDo
		If lQuery
			dbSelectArea(cAliasSBC)
			dbCloseArea()
			dbSelectArea("SBC")
		EndIf	
		If Empty(::ListOfPOLoss)
			lRetorno := .F.
			SetSoapFault("BrwPOLoss",STR0013) //"Nenhum registro de perda encontrado"
		EndIf
	Else
		lRetorno := .F.
	EndIf
	RestArea(aArea)
Else
	lRetorno := .F.
	SetSoapFault("BrwPOLoss",aRetIni[2])
EndIf	

Return(lRetorno)


/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³PUTPRODUCT³Autor  ³ Erike Yuri da Silva   ³ Data ³14.06.2006 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³Rotina de atualizacao de ordens de producao em WS            ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpC1: Codigo do Usuario                                     ³±±
±±³          ³ExpC2: Estrutura do Ordem de Producao                        ³±±
±±³          ³ExpC3: Gera Ops Intermediarias / Scs para operador corrente  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ExpL1: Indica que o metodo foi avaliado com sucesso          ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Este metodo devolve uma string vazia.                        ³±±
±±³          ³                                                             ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ WEB SERVICES                                                ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
WSMETHOD PUTPRODUCTIONORDER WSRECEIVE UserCode,ProductionOrder,AutExplode,Option WSSEND CreatedPO WSSERVICE MtProductionOrder
Local aRetIni	 := {}
Local cOrdemProd := ""
Local lRetorno   := .T.

IF FindFunction("PCPWSInit")
	aRetIni := PCPWSInit()
Else
	aRetIni := {.T.,""}
EndIf	

IF aRetIni[1]
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Verificacao do acesso                                                   ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If PrtChkUser(::UserCode,"MTPRODUCTIONORDER","PUTPRODUCTIONORDER")
		cOrdemProd := WS650PPO(::ProductionOrder,::AutExplode,::Option)
		If Empty(cOrdemProd)
			lRetorno := .F.
		Else
			::CreatedPO := cOrdemProd
		EndIf	
	Else
		lRetorno := .F.
	EndIf
Else
	lRetorno := .F.
	SetSoapFault("PUTPRODUCTIONORDER",aRetIni[2])
EndIf	

Return(lRetorno)

                                                   '

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³DELPRODUCT³Autor  ³ Erike Yuri da Silva   ³ Data ³14.06.2006 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³Rotina de exclusao de ordem de producao em WS                ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpC1: Codigo do Usuario                                     ³±±
±±³          ³ExpC2: Numero da OP C2_NUM+C2_ITEM+C2_SEQUEN+C2_ITEMGRD      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ExpL1: Indica que o metodo foi avaliado com sucesso          ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Este metodo devolve uma string vazia.                        ³±±
±±³          ³                                                             ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ WEB SERVICES                                                ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
WSMETHOD DELPRODUCTIONORDER WSRECEIVE UserCode,PONumber WSSEND WSNULL WSSERVICE MtProductionOrder

Local aArea			:= {}
Local aErro			:= {}
Local aRetIni		:= {}
Local aTam			:= {}
Local aVetPar		:= {}
Local cErro			:= ""    
Local lRetorno 		:= .T.                        
Local nI			:= 0      

PRIVATE lAutoErrNoFile := .T.
PRIVATE lMsErroAuto := .F.
                             
IF FindFunction("PCPWSInit")
	aRetIni := PCPWSInit()
Else
	aRetIni := {.T.,""}
EndIf	

IF aRetIni[1]
	aArea			:= SC2->(GetArea("SC2"))
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Verificacao do acesso                                                   ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If PrtChkUser(::UserCode,"MTPRODUCTIONORDER","DELPRODUCTIONORDER")
		WsChangeModule( "SIGAPCP" )
		DbSelectArea("SC2")                                                                  

	    If Empty(::PONumber) .Or. !	SC2->( DbSeek(xFilial("SC2")+::PONumber) )
			lRetorno := .F.
			SetSoapFault("DELPRODUCTIONORDER",STR0010) //"Ordem de Produção não encontrada"
		EndIf       
		  
		If lRetorno                    
		  	aadd(aVetPar,{"C2_NUM"		, SubStr(::PONumber,1,6)        	,NIL})  //Numero da OP
			aadd(aVetPar,{"C2_ITEM"		, SubStr(::PONumber,7,2)       		,NIL})  //Item da OP
			aadd(aVetPar,{"C2_SEQUEN"	, SubStr(::PONumber,9,3)          	,NIL})  //Sequencia da OP

			If !Empty(SubStr(::PONumber,12,2))
				aadd(aVetPar,{"C2_ITEMGRD"	, SubStr(::PONumber,12,2)        ,NIL})  //OPTIONAL - Item da Grade
			EndIf
			aadd(aVetPar,{"ROTINA"		, "APS"								,NIL})	//Indica que é uma atualização feita pelo APS
			MSExecAuto({|x,y| mata650(x,y)},aVetPar,5)
			        
			If lMsErroAuto                                                     
				aErro := GetAutoGRLog()
				For nI := 1 To Len(aErro)
					cErro += aErro[nI]+Chr(13)+Chr(10)				
				Next nI
				SetSoapFault("DELPRODUCTIONORDER",cErro)
				lRetorno := .F.
			EndIf						
	    EndIf
	Else
		lRetorno := .F.
	EndIf
	RestArea(aArea)
Else
	lRetorno := .F.
	SetSoapFault("DELPRODUCTIONORDER",aRetIni[2])
EndIf

Return(lRetorno)



/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³GetOP     ³Autor  ³ Eduardo Riera         ³ Data ³30.08.2004 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³Rotina de preenchimento da estrutura da Ordem de Producao    ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpO1: Objeto da Ordem de Producao                           ³±±
±±³          ³ExpC2: Alias do SC2                                          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³Nenhum                                                       ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Este metodo devolve o objeto passado por parametro com os    ³±±
±±³          ³dados do SC2 posicionado                                     ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ CRM/Materiais/Portais                                       ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function GetOP(oObjeto,cAliasSC2)

Local aArea    := GetArea()

oObjeto:POID	          := (cAliasSC2)->C2_NUM
oObjeto:POItem	          := (cAliasSC2)->C2_ITEM
oObjeto:POSequence        := (cAliasSC2)->C2_SEQUEN
oObjeto:ProductCode       := (cAliasSC2)->C2_PRODUTO
oObjeto:Quantity          := (cAliasSC2)->C2_QUANT
oObjeto:WareHouse         := (cAliasSC2)->C2_LOCAL
oObjeto:StartForecastDate := (cAliasSC2)->C2_DATPRI
oObjeto:FinishForecastDate:= (cAliasSC2)->C2_DATPRF
oObjeto:Note              := (cAliasSC2)->C2_OBS
oObjeto:PODate            := (cAliasSC2)->C2_EMISSAO
oObjeto:Priority          := (cAliasSC2)->C2_PRIOR
oObjeto:Situation         := (cAliasSC2)->C2_STATUS
oObjeto:SecondMeasureUnitQuantity := (cAliasSC2)->C2_QTSEGUM
oObjeto:TypeOfPO          := (cAliasSC2)->C2_TPOP
oObjeto:StructureRevision := (cAliasSC2)->C2_REVISAO
oObjeto:QuantityProduced  := (cAliasSC2)->C2_QUJE
oObjeto:FinishRealDate    := (cAliasSC2)->C2_DATRF
oObjeto:QuantityLoss      := (cAliasSC2)->C2_PERDA
oObjeto:StartAdjustedDate := (cAliasSC2)->C2_DATAJI
oObjeto:FinishAdjustedDate:= (cAliasSC2)->C2_DATAJF
oObjeto:StartAdjustedHour := (cAliasSC2)->C2_HORAJI
oObjeto:FinishAdjustedHour:= (cAliasSC2)->C2_HORAJF
oObjeto:OrderID           := (cAliasSC2)->C2_PEDIDO
oObjeto:OrderItem         := (cAliasSC2)->C2_ITEMPV
oObjeto:CostCenterCode    := (cAliasSC2)->C2_CC
oObjeto:AccountingItemCode:= (cAliasSC2)->C2_ITEMCTA
oObjeto:ValueCategoryCode := (cAliasSC2)->C2_CLVL
oOBjeto:Status            := Iif(Empty((cAliasSC2)->C2_DATRF),"OPEN","CLOSE")

UserFields("SC2",@oObjeto:UserFields,cAliasSC2)

RestArea(aArea)
Return(.T.)

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³GetEmpenho³Autor  ³ Eduardo Riera         ³ Data ³01.09.2004 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³Rotina de preenchimento da estrutura dos empenhos de producao³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpO1: Objeto dos empenhos de producao                       ³±±
±±³          ³ExpC2: Alias do SD4                                          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³Nenhum                                                       ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Este metodo devolve o objeto passado por parametro com os    ³±±
±±³          ³dados do SD4 posicionado                                     ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ CRM/Materiais/Portais                                       ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function GetEmpenho(oObjeto,cAliasSD4)

Local aArea    := GetArea()

oObjeto:PO                := (cAliasSD4)->D4_OP
oObjeto:ProductCode       := (cAliasSD4)->D4_COD
oObjeto:WareHouse         := (cAliasSD4)->D4_LOCAL
oObjeto:IssueDate         := (cAliasSD4)->D4_DATA
oObjeto:Quantity          := (cAliasSD4)->D4_QTDEORI
oObjeto:Balance           := (cAliasSD4)->D4_QUANT
oObjeto:SecondMeasureUnitBalance := (cAliasSD4)->D4_QTSEGUM
oObjeto:POOrigin          := (cAliasSD4)->D4_OPORIG
oObjeto:LotIdentifier     := WSClassNew("LotView")
oObjeto:LotIdentifier:LotNumber    := (cAliasSD4)->D4_LOTECTL+(cAliasSD4)->D4_NUMLOTE
oObjeto:LotIdentifier:PotencyLot   := (cAliasSD4)->D4_POTENCI
oObjeto:LotIdentifier:ValidityDate := (cAliasSD4)->D4_DTVALID
UserFields("SD4",@oObjeto:UserFields,cAliasSD4)

RestArea(aArea)
Return(.T.)

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³GetReqInt ³Autor  ³ Eduardo Riera         ³ Data ³02.09.2004 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³Rotina de preenchimento da estrutura das requisicoes internas³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpO1: Objeto das requisicoes internas                       ³±±
±±³          ³ExpC2: Alias do SD3                                          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³Nenhum                                                       ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Este metodo devolve o objeto passado por parametro com os    ³±±
±±³          ³dados do SD3 posicionado                                     ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ CRM/Materiais/Portais                                       ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function GetReqInt(oObjeto,cAliasSD3)

Local aArea    := GetArea()

oObjeto:MovementType               := (cAliasSD3)->D3_TM
oObjeto:ProductCode                := (cAliasSD3)->D3_COD
oObjeto:WareHouse                  := (cAliasSD3)->D3_LOCAL
oObjeto:MeasureUnit                := (cAliasSD3)->D3_UM
oObjeto:SecondMeasureUnit          := (cAliasSD3)->D3_SEGUM
oObjeto:Quantity                   := (cAliasSD3)->D3_QUANT
oObjeto:SecondMeasureUnitQuantity  := (cAliasSD3)->D3_QTSEGUM
oObjeto:TypeOfGoodsMovements       := (cAliasSD3)->D3_CF
oObjeto:PO                         := (cAliasSD3)->D3_OP
oObjeto:Document                   := (cAliasSD3)->D3_DOC
oObjeto:IssueDate                  := (cAliasSD3)->D3_EMISSAO
oObjeto:QuantityLoss               := (cAliasSD3)->D3_PERDA
oObjeto:AccountCode                := (cAliasSD3)->D3_CONTA
oObjeto:CostCenterCode             := (cAliasSD3)->D3_CC
oObjeto:AccountingItemCode         := (cAliasSD3)->D3_ITEMCTA
oObjeto:ValueCategoryCode          := (cAliasSD3)->D3_CLVL
oObjeto:LotIdentifier              := WSClassNew("LotView")
oObjeto:LotIdentifier:LotNumber    := (cAliasSD3)->D3_LOTECTL+(cAliasSD3)->D3_NUMLOTE
oObjeto:LotIdentifier:PotencyLot   := (cAliasSD3)->D3_POTENCI
oObjeto:LotIdentifier:ValidityDate := (cAliasSD3)->D3_DTVALID
UserFields("SD3",@oObjeto:UserFields,cAliasSD3)

RestArea(aArea)
Return(.T.)

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³GetOPPerda³Autor  ³ Eduardo Riera         ³ Data ³02.09.2004 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³Rotina de preenchimento da estrutura de perda de producao    ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpO1: Objeto da perda de producao                           ³±±
±±³          ³ExpC2: Alias do SBC                                          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³Nenhum                                                       ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Este metodo devolve o objeto passado por parametro com os    ³±±
±±³          ³dados do SBC posicionado                                     ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ CRM/Materiais/Portais                                       ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function GetOPPerda(oObjeto,cAliasSBC)

Local aArea    := GetArea()

oObjeto:Date                          := (cAliasSBC)->BC_DATA
oObjeto:PO                            := (cAliasSBC)->BC_OP
oObjeto:TypeOfLoss                    := (cAliasSBC)->BC_TIPO
oObjeto:ReasonOfLoss                  := (cAliasSBC)->BC_MOTIVO
If CampoCYO()
	oObjeto:DescriptionOfLoss         := POSICIONE('CYO',1,xFilial('CYO')+(cAliasSBC)->BC_MOTIVO,"CYO_DSRF")
Else
	oObjeto:DescriptionOfLoss         := Tabela("43",(cAliasSBC)->BC_MOTIVO)
EndIf
oObjeto:Operator                      := (cAliasSBC)->BC_OPERADO
oObjeto:ProductOrigin                 := WSClassNew("ProductPOLossView")
oObjeto:ProductOrigin:ProductCode     := (cAliasSBC)->BC_PRODUTO
oObjeto:ProductOrigin:WareHouse       := (cAliasSBC)->BC_LOCORIG
oObjeto:ProductOrigin:Quantity        := (cAliasSBC)->BC_QUANT
oObjeto:ProductDestination            := WSClassNew("ProductPOLossView")
oObjeto:ProductDestination:ProductCode:= (cAliasSBC)->BC_CODDEST
oObjeto:ProductDestination:WareHouse  := (cAliasSBC)->BC_LOCAL
oObjeto:ProductDestination:Quantity   := (cAliasSBC)->BC_QTDDEST
oObjeto:LotIdentifier                 := WSClassNew("LotView")
oObjeto:LotIdentifier:LotNumber       := (cAliasSBC)->BC_LOTECTL+(cAliasSBC)->BC_NUMLOTE
oObjeto:LotIdentifier:PotencyLot      := 0
oObjeto:LotIdentifier:ValidityDate    := (cAliasSBC)->BC_DTVALID
UserFields("SBC",@oObjeto:UserFields,cAliasSBC)

RestArea(aArea)
Return(.T.)


//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Definicao do Web Service de Controle do Usuario                         ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
WSSERVICE MtCustomerProductionOrder DESCRIPTION STR0014 NAMESPACE "http:webservices.microsiga.com.br/mtcustomerproductionorder.apw" //"Serviço de consulta e atualização das ordens de produção ( <b>Restrição de cliente/produto</b> )"
WSDATA Header                 AS Array OF BrwHeader
WSDATA HeaderType             AS String
WSDATA UserCode               AS String
WSDATA POID	     			  AS String
WSDATA POItem    			  AS String
WSDATA POSequence			  AS String
WSDATA PODateFrom             AS Date OPTIONAL
WSDATA PODateTo               AS Date OPTIONAL
WSDATA StartForecastDateFrom  AS Date OPTIONAL
WSDATA StartForecastDateTo    AS Date OPTIONAL
WSDATA FinishForecastDateFrom AS Date OPTIONAL
WSDATA FinishForecastDateTo   AS Date OPTIONAL
WSDATA StartAdjustedDateFrom  As Date OPTIONAL
WSDATA StartAdjustedDateTo    As Date OPTIONAL
WSDATA FinishAdjustedDateFrom As Date OPTIONAL
WSDATA FinishAdjustedDateTo   As Date OPTIONAL
WSDATA QueryAddWhere          AS String OPTIONAL
WSDATA IndexKey               AS String OPTIONAL
WSDATA PageLen                AS Integer OPTIONAL
WSDATA PageFirst              AS Integer OPTIONAL
WSDATA ListOfProductionOrder  As Array Of ProductionOrderView OPTIONAL
WSDATA ListOfPoRequirements   As Array Of PoRequirementsView OPTIONAL
WSDATA ListOfPOMovements      As Array Of GoodsMovementsView OPTIONAL
WSDATA ListOfPOLoss           As Array Of POLossView
WSDATA ProductionOrder        As ProductionOrderView
WSDATA Total                  As Integer
WSDATA CustomerID             As String

WSMETHOD GetHeader                DESCRIPTION STR0002 //"Método que descreve as estruturas de retorno do serviço"
WSMETHOD GetProductionOrder       DESCRIPTION STR0003 //"Método de consulta as informações das ordens de produção"
WSMETHOD BrwPORequirements        DESCRIPTION STR0004 //"Método de listagem dos empenhos da ordem de produção"
WSMETHOD BrwProductionOrder       DESCRIPTION STR0005 //"Método de listagem das ordens de produção"
WSMETHOD BrwTotalProductionOrder  DESCRIPTION STR0006 //"Método de contagem do total das ordens de produções existentes. Este método esta relacionado ao método BrwProductionOrder"
WSMETHOD BrwPOAppointment         DESCRIPTION STR0007 //"Método de listagem dos apontamentos da ordem de produção"
WSMETHOD BrwPOLoss                DESCRIPTION STR0008 //"Método de listagem das perdas de producao e seus refugos"

ENDWSSERVICE

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³GetHeader ³Autor  ³ Eduardo Riera         ³ Data ³26.08.2004 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³Rotina de recuperacao dos headers deste WS                   ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpC1: Nome da Estrutura                                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ExpL1: Indica que o metodo foi avaliado com sucesso          ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Este metodo devolve o header de uma estrutura                ³±±
±±³          ³                                                             ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ WEB SERVICES                                                ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
WSMETHOD GetHeader WSRECEIVE HeaderType WSSEND Header WSSERVICE MtCustomerProductionOrder


::Header := MtHeader(::HeaderType)

Return(.T.)

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³BrwProduct³Autor  ³ Eduardo Riera         ³ Data ³02.09.2004 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³Rotina de listagem das ordens de produção                    ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpC1: Codigo do usuario                                     ³±±
±±³          ³ExpD2: Emissao de                                            ³±±
±±³          ³ExpD3: Emissao de                                            ³±±
±±³          ³ExpD4: Previsao inicio de                                    ³±±
±±³          ³ExpD5: Previsao inicio ate                                   ³±±
±±³          ³ExpD6: Previsao termino de                                   ³±±
±±³          ³ExpD7: Previsao termino ate                                  ³±±
±±³          ³ExpD8: Data ajustada inicial de                              ³±±
±±³          ³ExpD9: Data ajudata inicial ate                              ³±±
±±³          ³ExpD8: Data ajustada final de                                ³±±
±±³          ³ExpD9: Data ajusdata final ate                               ³±±
±±³          ³ExpCA: Query a ser adicionada                                ³±±
±±³          ³ExpCB: IndexKey                                              ³±±
±±³          ³ExpNC: Tamanho da Pagina                                     ³±±
±±³          ³ExpND: Numero da primeira pagina                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ExpL1: Indica que o metodo foi avaliado com sucesso          ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Este metodo devolve as ordens de producao                    ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ WEB SERVICES                                                ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
WSMETHOD BrwProductionOrder WSRECEIVE UserCode,CustomerID,PODateFrom,PODateTo,StartForecastDateFrom,StartForecastDateTo,FinishForecastDateFrom,FinishForecastDateTo,StartAdjustedDateFrom,StartAdjustedDateTo,FinishAdjustedDateFrom,FinishAdjustedDateTo,QueryAddWhere,IndexKey,PageLen,PageFirst WSSEND ListOfProductionOrder WSSERVICE MtCustomerProductionOrder

Local aArea     := GetArea()
Local lRetorno  := .T.
Local lQuery    := .F.
Local nX        := 0
Local nY        := 0
Local cAliasSC2 := "SC2"
Local cQuery    := ""
Local cArquivo  := ""
Local cCliente  := SubStr(::CustomerID,1,Len(SA1->A1_COD))
Local cLoja     := SubStr(::CustomerID,Len(SA1->A1_COD)+1)
#IFDEF TOP
	Local aStruSC2  := {}
#ENDIF
DEFAULT ::PageLen   := 0
DEFAULT ::PageFirst := 0

If PrtChkUser(::UserCode,"MtProductionOrder","BrwProductionOrder","SA1",::CustomerID)
	dbSelectArea("SC2")
	dbSetOrder(1)
	::IndexKey := IIf(Empty(::IndexKey),SC2->(IndexKey()),::IndexKey)	
	
	#IFDEF TOP
		lQuery	:= .T.
		aStruSC2	:= SC2->(dbStruct())
		cAliasSC2:= GetNextAlias()

		cQuery	:= "SELECT * "
		cQuery	+= "FROM "+RetSqlName("SC2")+" SC2 "
		cQuery	+= "WHERE "
		cQuery	+= "SC2.C2_FILIAL = '"+xFilial("SC2")+"' AND "
		If !Empty(::PODateFrom)
			cQuery	+= "SC2.C2_EMISSAO>='"+Dtos(::PODateFrom)+"' AND "
		EndIf
		If !Empty(::PODateTo)
			cQuery	+= "SC2.C2_EMISSAO<='"+Dtos(::PODateTo)+"' AND "
		EndIf
		If !Empty(::StartForecastDateFrom)
			cQuery	+= "SC2.C2_DATPRI>='"+Dtos(::StartForecastDateFrom)+"' AND "
		EndIf
		If !Empty(::StartForecastDateTo)
			cQuery	+= "SC2.C2_DATPRI<='"+Dtos(::StartForecastDateTo)+"' AND "
		EndIf
		If !Empty(::FinishForecastDateFrom)
			cQuery	+= "SC2.C2_DATPRF>='"+Dtos(::FinishForecastDateFrom)+"' AND "
		EndIf
		If !Empty(::FinishForecastDateTo)
			cQuery	+= "SC2.C2_DATPRF<='"+Dtos(::FinishForecastDateTo)+"' AND "
		EndIf
		If !Empty(::StartAdjustedDateFrom)
			cQuery	+= "SC2.C2_DATAJI>='"+Dtos(::StartAdjustedDateFrom)+"' AND "
		EndIf
		If !Empty(::StartAdjustedDateTo)
			cQuery	+= "SC2.C2_DATAJI<='"+Dtos(::StartAdjustedDateTo)+"' AND "
		EndIf
		If !Empty(::FinishAdjustedDateFrom)
			cQuery	+= "SC2.C2_DATAJF>='"+Dtos(::FinishAdjustedDateFrom)+"' AND "
		EndIf
		If !Empty(::FinishAdjustedDateTo)
			cQuery	+= "SC2.C2_DATAJF<='"+Dtos(::FinishAdjustedDateTo)+"' AND "
		EndIf		
		cQuery  += "SC2.C2_PRODUTO IN ( "
		cQuery  += "SELECT SA7.A7_PRODUTO "
		cQuery  += "FROM "+RetSqlName("SA7")+" SA7 "
		cQuery  += "WHERE A7_FILIAL = '"+xFilial("SA7")+"' AND "
		cQuery  += "A7_CLIENTE = '"+cCliente+"' AND "
		cQuery  += "A7_LOJA = '"+cLoja+"' AND "
		cQuery  += "D_E_L_E_T_=' ' ) AND "
		cQuery	+= "SC2.D_E_L_E_T_=' ' "
		cQuery := WsQueryAdd(cQuery,::QueryAddWhere)
		cQuery	+= "ORDER BY "+SqlOrder(::IndexKey)

		cQuery	:= ChangeQuery(cQuery)
		
		dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cAliasSC2,.T.,.T.)

		For nX := 1 To Len(aStruSC2)
			If aStruSC2[nX][2]<>"C" .And. aStruSC2[nX][2]<>"M"
				TcSetField(cAliasSC2,aStruSC2[nX][1],aStruSC2[nX][2],aStruSC2[nX][3],aStruSC2[nX][4])
			EndIf
		Next nX
	#ELSE
		cQuery	+= "C2_FILIAL == '"+xFilial("SC2")+"' .And. "
		If !Empty(::PODateFrom)
			cQuery	+= "C2_EMISSAO>='"+Dtos(::PODateFrom)+"' .And. "
		EndIf
		If !Empty(::PODateTo)
			cQuery	+= "C2_EMISSAO<='"+Dtos(::PODateTo)+"' .And. "
		EndIf
		If !Empty(::StartForecastDateFrom)
			cQuery	+= "C2_DATPRI>='"+Dtos(::StartForecastDateFrom)+"' .And. "
		EndIf
		If !Empty(::StartForecastDateTo)
			cQuery	+= "C2_DATPRI<='"+Dtos(::StartForecastDateTo)+"' .And. "
		EndIf
		If !Empty(::FinishForecastDateFrom)
			cQuery	+= "C2_DATPRF>='"+Dtos(::FinishForecastDateFrom)+"' .And. "
		EndIf
		If !Empty(::FinishForecastDateTo)
			cQuery	+= "C2_DATPRF<='"+Dtos(::FinishForecastDateTo)+"' .And. "
		EndIf
		If !Empty(::StartAdjustedDateFrom)
			cQuery	+= "C2_DATAJI>='"+Dtos(::StartAdjustedDateFrom)+"' .And. "
		EndIf
		If !Empty(::StartAdjustedDateTo)
			cQuery	+= "C2_DATAJI<='"+Dtos(::StartAdjustedDateTo)+"' .And. "
		EndIf
		If !Empty(::FinishAdjustedDateFrom)
			cQuery	+= "C2_DATAJF>='"+Dtos(::FinishAdjustedDateFrom)+"' .And. "
		EndIf
		If !Empty(::FinishAdjustedDateTo)
			cQuery	+= "C2_DATAJF<='"+Dtos(::FinishAdjustedDateTo)+"' "
		EndIf		
		cArquivo := CriaTrab(,.F.)

		IndRegua("SC2",cArquivo,::IndexKey,,cQuery)
		dbGotop()
	#ENDIF
	nX := 0
	dbSelectArea(cAliasSC2)
	While !Eof() .And. xFilial("SC2") == (cAliasSC2)->C2_FILIAL
		If !lQuery
			dbSelectArea("SA7")
			dbSetOrder(1)
			MsSeek(xFilial("SA7")+cCliente+cLoja+(cAliasSC2)->C2_PRODUTO)
		EndIf
		If lQuery .Or. SA7->(Found())
			nX++
			If ::PageFirst==0 .Or. nX >= ::PageFirst
				aadd(::ListOfProductionOrder,WSClassNew("ProductionOrderView"))
				nY++
				GetOP(@::ListOfProductionOrder[nY],cAliasSC2)
			EndIf
			If nY >= ::PageLen .And. ::PageLen <> 0
				Exit
			EndIf
		EndIf
		dbSelectArea(cAliasSC2)
		dbSkip()
	EndDo
	If lQuery
		dbSelectArea(cAliasSC2)
		dbCloseArea()
		dbSelectArea("SC2")
	Else
		dbSelectArea(cAliasSC2)
		dbCloseArea()		
		FErase(cARquivo+OrdBagExt())
	EndIf	
	If nY == 0
		SetSoapFault("BRWPRODUCTIONORDER",STR0009) //"Nenhuma orden de produção foi encontrada"
		lRetorno := .F.
	EndIf
Else
	lRetorno := .F.
EndIf

RestArea(aArea)
Return(lRetorno)

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³GetTotalPO³Autor  ³ Eduardo Riera         ³ Data ³02.09.2004 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³Rotina de listagem das ordens de produção                    ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpC1: Codigo do usuario                                     ³±±
±±³          ³ExpD2: Emissao de                                            ³±±
±±³          ³ExpD3: Emissao de                                            ³±±
±±³          ³ExpD4: Previsao inicio de                                    ³±±
±±³          ³ExpD5: Previsao inicio ate                                   ³±±
±±³          ³ExpD6: Previsao termino de                                   ³±±
±±³          ³ExpD7: Previsao termino ate                                  ³±±
±±³          ³ExpD8: Data ajustada inicial de                              ³±±
±±³          ³ExpD9: Data ajudata inicial ate                              ³±±
±±³          ³ExpD8: Data ajustada final de                                ³±±
±±³          ³ExpD9: Data ajusdata final ate                               ³±±
±±³          ³ExpCA: Query a ser adicionada                                ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ExpL1: Indica que o metodo foi avaliado com sucesso          ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Este metodo devolve as ordens de producao                    ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ WEB SERVICES                                                ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
WSMETHOD BrwTotalProductionOrder WSRECEIVE UserCode,CustomerID,PODateFrom,PODateTo,StartForecastDateFrom,StartForecastDateTo,FinishForecastDateFrom,FinishForecastDateTo,StartAdjustedDateFrom,StartAdjustedDateTo,FinishAdjustedDateFrom,FinishAdjustedDateTo,QueryAddWhere WSSEND Total WSSERVICE MtCustomerProductionOrder

Local aArea     := GetArea()
Local lRetorno  := .T.
Local cAliasSC2 := "SC2"
Local cQuery    := ""
Local cArquivo  := ""
Local cCliente  := SubStr(::CustomerID,1,Len(SA1->A1_COD))
Local cLoja     := SubStr(::CustomerID,Len(SA1->A1_COD)+1)

If PrtChkUser(::UserCode,"MtProductionOrder","BrwTotalProductionOrder","SA1",::CustomerID)
	dbSelectArea("SC2")
	dbSetOrder(1)
	#IFDEF TOP
		cAliasSC2:= GetNextAlias()

		cQuery	:= "SELECT count(*) TOTALOP "
		cQuery	+= "FROM "+RetSqlName("SC2")+" SC2 "
		cQuery	+= "WHERE "
		cQuery	+= "SC2.C2_FILIAL = '"+xFilial("SC2")+"' AND "
		If !Empty(::PODateFrom)
			cQuery	+= "SC2.C2_EMISSAO>='"+Dtos(::PODateFrom)+"' AND "
		EndIf
		If !Empty(::PODateTo)
			cQuery	+= "SC2.C2_EMISSAO<='"+Dtos(::PODateTo)+"' AND "
		EndIf
		If !Empty(::StartForecastDateFrom)
			cQuery	+= "SC2.C2_DATPRI>='"+Dtos(::StartForecastDateFrom)+"' AND "
		EndIf
		If !Empty(::StartForecastDateTo)
			cQuery	+= "SC2.C2_DATPRI<='"+Dtos(::StartForecastDateTo)+"' AND "
		EndIf
		If !Empty(::FinishForecastDateFrom)
			cQuery	+= "SC2.C2_DATPRF>='"+Dtos(::FinishForecastDateFrom)+"' AND "
		EndIf
		If !Empty(::FinishForecastDateTo)
			cQuery	+= "SC2.C2_DATPRF<='"+Dtos(::FinishForecastDateTo)+"' AND "
		EndIf
		If !Empty(::StartAdjustedDateFrom)
			cQuery	+= "SC2.C2_DATAJI>='"+Dtos(::StartAdjustedDateFrom)+"' AND "
		EndIf
		If !Empty(::StartAdjustedDateTo)
			cQuery	+= "SC2.C2_DATAJI<='"+Dtos(::StartAdjustedDateTo)+"' AND "
		EndIf
		If !Empty(::FinishAdjustedDateFrom)
			cQuery	+= "SC2.C2_DATAJF>='"+Dtos(::FinishAdjustedDateFrom)+"' AND "
		EndIf
		If !Empty(::FinishAdjustedDateTo)
			cQuery	+= "SC2.C2_DATAJF<='"+Dtos(::FinishAdjustedDateTo)+"' AND "
		EndIf		
		cQuery  += "SC2.C2_PRODUTO IN ( "
		cQuery  += "SELECT SA7.A7_PRODUTO "
		cQuery  += "FROM "+RetSqlName("SA7")+" SA7 "
		cQuery  += "WHERE A7_FILIAL = '"+xFilial("SA7")+"' AND "
		cQuery  += "A7_CLIENTE = '"+cCliente+"' AND "
		cQuery  += "A7_LOJA = '"+cLoja+"' AND "
		cQuery  += "D_E_L_E_T_=' ' ) AND "
		cQuery	+= "SC2.D_E_L_E_T_=' ' "
		cQuery := WsQueryAdd(cQuery,::QueryAddWhere)
	
		cQuery	:= ChangeQuery(cQuery)

		dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cAliasSC2,.T.,.T.)
		
		::Total := (cAliasSC2)->TOTALOP
		
	#ELSE
		cQuery	+= "C2_FILIAL == '"+xFilial("SC2")+"' .And. "
		If !Empty(::PODateFrom)
			cQuery	+= "C2_EMISSAO>='"+Dtos(::PODateFrom)+"' .And. "
		EndIf
		If !Empty(::PODateTo)
			cQuery	+= "C2_EMISSAO<='"+Dtos(::PODateTo)+"' .And. "
		EndIf
		If !Empty(::StartForecastDateFrom)
			cQuery	+= "C2_DATPRI>='"+Dtos(::StartForecastDateFrom)+"' .And. "
		EndIf
		If !Empty(::StartForecastDateTo)
			cQuery	+= "C2_DATPRI<='"+Dtos(::StartForecastDateTo)+"' .And. "
		EndIf
		If !Empty(::FinishForecastDateFrom)
			cQuery	+= "C2_DATPRF>='"+Dtos(::FinishForecastDateFrom)+"' .And. "
		EndIf
		If !Empty(::FinishForecastDateTo)
			cQuery	+= "C2_DATPRF<='"+Dtos(::FinishForecastDateTo)+"' .And. "
		EndIf
		If !Empty(::StartAdjustedDateFrom)
			cQuery	+= "C2_DATAJI>='"+Dtos(::StartAdjustedDateFrom)+"' .And. "
		EndIf
		If !Empty(::StartAdjustedDateTo)
			cQuery	+= "C2_DATAJI<='"+Dtos(::StartAdjustedDateTo)+"' .And. "
		EndIf
		If !Empty(::FinishAdjustedDateFrom)
			cQuery	+= "C2_DATAJF>='"+Dtos(::FinishAdjustedDateFrom)+"' .And. "
		EndIf
		If !Empty(::FinishAdjustedDateTo)
			cQuery	+= "C2_DATAJF<='"+Dtos(::FinishAdjustedDateTo)+"' "
		EndIf		
		cArquivo := CriaTrab(,.F.)

		IndRegua("SC2",cArquivo,::IndexKey,,cQuery)
		dbGotop()

		dbSelectArea(cAliasSC2)
		::Total := 0
		While !Eof() .And. xFilial("SC2") == (cAliasSC2)->C2_FILIAL
			dbSelectArea("SA7")
			dbSetOrder(1)
			If MsSeek(xFilial("SA7")+cCliente+cLoja+(cAliasSC2)->C2_PRODUTO)
				::Total ++
	        EndIf
			dbSelectArea(cAliasSC2)
			dbSkip()
		EndDo
	#ENDIF		
	If lQuery
		dbSelectArea(cAliasSC2)
		dbCloseArea()
		dbSelectArea("SC2")
	Else
		dbSelectArea(cAliasSC2)
		RetIndex("SC2")
		FErase(cArquivo+OrdBagExt())
	EndIf
Else
	lRetorno := .F.
EndIf

RestArea(aArea)
Return(lRetorno)

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³GetProduct³Autor  ³ Eduardo Riera         ³ Data ³02.09.2004 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³Rotina de consulta a ordem de producao                       ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpC1: Codigo do usuario                                     ³±±
±±³          ³ExpC2: Numero da OP                                          ³±±
±±³          ³ExpC3: Item da OP                                            ³±±
±±³          ³ExpC4: Sequencia da OP                                       ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ExpL1: Indica que o metodo foi avaliado com sucesso          ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Este metodo devolve a estrutura da ordem de producao         ³±±
±±³          ³                                                             ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ WEB SERVICES                                                ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
WSMETHOD GetProductionOrder WSRECEIVE UserCode,CustomerID,POID,POItem,POSequence WSSEND ProductionOrder WSSERVICE MtCustomerProductionOrder

Local aArea     := GetArea()
Local lRetorno  := .T.
Local cCliente  := SubStr(::CustomerID,1,Len(SA1->A1_COD))
Local cLoja     := SubStr(::CustomerID,Len(SA1->A1_COD)+1)

If PrtChkUser(::UserCode,"MtProductionOrder","GetProductionOrder","SA1",::CustomerID)
	dbSelectArea("SC2")
	dbSetOrder(1)
	If MsSeek(xFilial("SC2")+::POID+::POItem+::POSequence)
		dbSelectArea("SA7")
		dbSetOrder(1)
		If MsSeek(xFilial("SA7")+cCliente+cLoja+SC2->C2_PRODUTO)	
			GetOP(@::ProductionOrder,"SC2")	
		Else
			lRetorno := .F.
			SetSoapFault("GETPRODUCTIONORDER",STR0015) //"Ordem de Produção invalida para este cliente"
		EndIf
	Else
		lRetorno := .F.
		SetSoapFault("GETPRODUCTIONORDER",STR0010) //"Ordem de Produção não encontrada"
	EndIf
Else
	lRetorno := .F.
EndIf

RestArea(aArea)
Return(lRetorno)

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³BrwPORequi³Autor  ³ Eduardo Riera         ³ Data ³02.09.2004 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³Rotina de consulta aos empenhos da Ordem de Produção         ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpC1: Codigo do Usuario                                     ³±±
±±³          ³ExpC2: Numero da OP                                          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ExpL1: Indica que o metodo foi avaliado com sucesso          ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Este metodo devolve a estrutura da ordem de producao         ³±±
±±³          ³                                                             ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ WEB SERVICES                                                ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
WSMETHOD BrwPORequirements WSRECEIVE UserCode,CustomerID,POID,POItem,POSequence WSSEND ListOfPORequirements WSSERVICE MtCustomerProductionOrder

Local aArea     := GetArea()    
Local lRetorno  := .T.
Local cAliasSD4 := "SD4"
Local nY        := 0
Local cCliente  := SubStr(::CustomerID,1,Len(SA1->A1_COD))
Local cLoja     := SubStr(::CustomerID,Len(SA1->A1_COD)+1)
#IFDEF TOP
Local aStruSD4  := {}
Local cQuery    := ""
Local nX        := 0
#ENDIF

If PrtChkUser(::UserCode,"MtProductionOrder","BrwPORequirements","SA1",::CustomerID)
	dbSelectArea("SD4")
	dbSetOrder(1)
	#IFDEF TOP
		cAliasSD4 := GetNextAlias()
		aStruSD4  := SD4->(dbStruct())
	
		cQuery := "SELECT * "
		cQuery += "FROM "+RetSqlName("SD4")+" SD4 "
		cQuery += "WHERE SD4.D4_FILIAL='"+xFilial("SD4")+"' AND "
		cQuery += "SubString(SD4.D4_OP,1,11)='"+::POID+::POItem+::POSequence+"' AND "
		cQuery  += "SD4.D4_COD IN ( "
		cQuery  += "SELECT SA7.A7_PRODUTO "
		cQuery  += "FROM "+RetSqlName("SA7")+" SA7 "
		cQuery  += "WHERE A7_FILIAL = '"+xFilial("SA7")+"' AND "
		cQuery  += "A7_CLIENTE = '"+cCliente+"' AND "
		cQuery  += "A7_LOJA = '"+cLoja+"' AND "
		cQuery  += "D_E_L_E_T_=' ' ) AND "		
		cQuery += "SD4.D_E_L_E_T_=' ' "
		
		cQuery := ChangeQuery(cQuery)
		
		dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cAliasSD4)
		For nX := 1 To Len(aStruSD4)
			If aStruSD4[nX][2] <> "C" 
				TcSetField(cAliasSD4,aStruSD4[nX][1],aStruSD4[nX][2],aStruSD4[nX][3],aStruSD4[nX][4])
			EndIf
		Next nX
	#ELSE
		MsSeek(xFilial("SD4")+::POID+::POItem+::POSequence)
	#ENDIF
	While !Eof() .And. (cAliasSD4)->D4_FILIAL == xFilial("SD4") .And.;
		SubStr((cAliasSD4)->D4_OP,1,11) == ::POID+::POItem+::POSequence

		If !lQuery
			dbSelectArea("SA7")
			dbSetOrder(1)
			MsSeek(xFilial("SA7")+cCliente+cLoja+(cAliasSD4)->D4_COD)
		EndIf
		If lQuery .Or. SA7->(Found())

			aadd(::ListOfPORequirements,WSClassNew("PORequirementsView"))
			nY++
			GetEmpenho(@::ListOfPORequirements[nY],cAliasSD4)
			
		EndIf
		dbSelectArea(cAliasSD4)
		dbSkip()
			
	EndDo
	If lQuery
		dbSelectArea(cAliasSD4)
		dbCloseArea()
		dbSelectArea("SD4")
	EndIf
	If Empty(::ListOfPORequirements)
		lRetorno := .F.
		SetSoapFault("BrwPORequirements",STR0011) //"Nenhum empenho encontrado"
	EndIf
Else
	lRetorno := .F.
EndIf

RestArea(aArea)
Return(lRetorno)


/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³BrwPOAppoi³Autor  ³ Eduardo Riera         ³ Data ³02.09.2004 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³Rotina de listagem das requisicoes das Ordens de Producao    ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpC1: Codigo do Usuario                                     ³±±
±±³          ³ExpC2: Numero da OP                                          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ExpL1: Indica que o metodo foi avaliado com sucesso          ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Este metodo devolve a estrutura da ordem de producao         ³±±
±±³          ³                                                             ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ WEB SERVICES                                                ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
WSMETHOD BrwPOAppointment WSRECEIVE UserCode,CustomerID,POID,POItem,POSequence WSSEND ListOfPOMovements WSSERVICE MtCustomerProductionOrder

Local aArea     := GetArea()
Local lRetorno  := .T.
Local cAliasSD3 := "SD3"
Local nY        := 0
Local cCliente  := SubStr(::CustomerID,1,Len(SA1->A1_COD))
Local cLoja     := SubStr(::CustomerID,Len(SA1->A1_COD)+1)
#IFDEF TOP
Local aStruSD3  := {}
Local cQuery    := ""
Local nX        := 0
#ENDIF

If PrtChkUser(::UserCode,"MtProductionOrder","BrwPOAppointment","SA1",::CustomerID)
	dbSelectArea("SD3")
	dbSetOrder(1)
	#IFDEF TOP
		cAliasSD3 := GetNextAlias()
		aStruSD3  := SD3->(dbStruct())
		
		cQuery := "SELECT * "
		cQuery += "FROM "+RetSqlName("SD3")+" SD3 "
		cQuery += "WHERE SD3.D3_FILIAL='"+xFilial("SD3")+"' AND "
		cQuery += "SubString(SD3.D3_OP,1,11)='"+::POID+::POItem+::POSequence+"' AND "
		cQuery  += "SD3.D3_COD IN ( "
		cQuery  += "SELECT SA7.A7_PRODUTO "
		cQuery  += "FROM "+RetSqlName("SA7")+" SA7 "
		cQuery  += "WHERE A7_FILIAL = '"+xFilial("SA7")+"' AND "
		cQuery  += "A7_CLIENTE = '"+cCliente+"' AND "
		cQuery  += "A7_LOJA = '"+cLoja+"' AND "
		cQuery  += "D_E_L_E_T_=' ' ) AND "
		cQuery += "SD3.D_E_L_E_T_=' ' "
		
		cQuery := ChangeQuery(cQuery)
		
		dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cAliasSD3)
		For nX := 1 To Len(aStruSD3)
			If aStruSD3[nX][2] <> "C" 
				TcSetField(cAliasSD3,aStruSD3[nX][1],aStruSD3[nX][2],aStruSD3[nX][3],aStruSD3[nX][4])
			EndIf
		Next nX
	#ELSE
		MsSeek(xFilial("SD3")+::POID+::POItem+::POSequence)
	#ENDIF
	While !Eof() .And. (cAliasSD3)->D3_FILIAL == xFilial("SD3") .And.;
		SubStr((cAliasSD3)->D3_OP,1,11) == ::POID+::POItem+::POSequence

		If !lQuery
			dbSelectArea("SA7")
			dbSetOrder(1)
			MsSeek(xFilial("SA7")+cCliente+cLoja+(cAliasSD3)->D3_COD)
		EndIf
		
		If lQuery .Or. SA7->(Found())

			aadd(::ListOfPOMovements,WSClassNew("GoodsMovementsView"))
			nY++
			GetReqInt(@::ListOfPOMovements[nY],cAliasSD3)

		EndIf
		
		dbSelectArea(cAliasSD3)
		dbSkip()
		
	EndDo
	If lQuery
		dbSelectArea(cAliasSD3)
		dbCloseArea()
		dbSelectArea("SD3")
	EndIf	
	If Empty(::ListOfPOMovements)
		lRetorno := .F.
		SetSoapFault("BrwPOAppointment",STR0012) //"Nenhuma requisição encontrada"
	EndIf
Else
	lRetorno := .F.
EndIf

RestArea(aArea)
Return(lRetorno)

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³BrwPOAppoi³Autor  ³ Eduardo Riera         ³ Data ³02.09.2004 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³Rotina de listagem das requisicoes das Ordens de Producao    ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpC1: Codigo do Usuario                                     ³±±
±±³          ³ExpC2: Numero da OP                                          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ExpL1: Indica que o metodo foi avaliado com sucesso          ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Este metodo devolve a estrutura da ordem de producao         ³±±
±±³          ³                                                             ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ WEB SERVICES                                                ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
WSMETHOD BrwPOLoss WSRECEIVE UserCode,CustomerID,POID,POItem,POSequence WSSEND ListOfPOLoss WSSERVICE MtCustomerProductionOrder

Local aArea     := GetArea()
Local lRetorno  := .T.
Local cAliasSBC := "SBC"
Local nY        := 0
Local cCliente  := SubStr(::CustomerID,1,Len(SA1->A1_COD))
Local cLoja     := SubStr(::CustomerID,Len(SA1->A1_COD)+1)
#IFDEF TOP
	Local aStruSBC  := {}
	Local cQuery    := ""
	Local nX        := 0
#ENDIF

If PrtChkUser(::UserCode,"MtProductionOrder","BrwPOLoss","SA1",::CustomerID)
	dbSelectArea("SBC")
	dbSetOrder(1)
	#IFDEF TOP
		cAliasSBC := GetNextAlias()
		aStruSBC  := SBC->(dbStruct())
		
		cQuery := "SELECT * "
		cQuery += "FROM "+RetSqlName("SBC")+" SBC "
		cQuery += "WHERE SBC.BC_FILIAL='"+xFilial("SBC")+"' AND "
		cQuery += "SubString(SBC.BC_OP,1,11)='"+::POID+::POItem+::POSequence+"' AND "
		cQuery  += "SBC.BC_PRODUTO IN ( "
		cQuery  += "SELECT SA7.A7_PRODUTO "
		cQuery  += "FROM "+RetSqlName("SA7")+" SA7 "
		cQuery  += "WHERE A7_FILIAL = '"+xFilial("SA7")+"' AND "
		cQuery  += "A7_CLIENTE = '"+cCliente+"' AND "
		cQuery  += "A7_LOJA = '"+cLoja+"' AND "
		cQuery  += "D_E_L_E_T_=' ' ) AND "		
		cQuery += "SBC.D_E_L_E_T_=' ' "
		
		cQuery := ChangeQuery(cQuery)
		
		dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cAliasSBC)
		For nX := 1 To Len(aStruSBC)
			If aStruSBC[nX][2] <> "C" 
				TcSetField(cAliasSBC,aStruSBC[nX][1],aStruSBC[nX][2],aStruSBC[nX][3],aStruSBC[nX][4])
			EndIf
		Next nX
	#ELSE
		MsSeek(xFilial("SBC")+::POID+::POItem+::POSequence)
	#ENDIF
	While !Eof() .And. (cAliasSBC)->BC_FILIAL == xFilial("SBC") .And.;
		SubStr((cAliasSBC)->BC_OP,1,11) == ::POID+::POItem+::POSequence

		If !lQuery
			dbSelectArea("SA7")
			dbSetOrder(1)
			MsSeek(xFilial("SA7")+cCliente+cLoja+(cAliasSBC)->BC_PRODUTO)
		EndIf
		If lQuery .Or. SA7->(Found())
			aadd(::ListOfPOLoss,WSClassNew("POLossView"))
			nY++
			GetOPPerda(@::ListOfPOLoss[nY],cAliasSBC)
		EndIf		
		dbSelectArea(cAliasSBC)
		dbSkip()
		
	EndDo
	If lQuery
		dbSelectArea(cAliasSBC)
		dbCloseArea()
		dbSelectArea("SBC")
	EndIf	
	If Empty(::ListOfPOLoss)
		lRetorno := .F.
		SetSoapFault("BrwPOLoss",STR0013) //"Nenhum registro de perda encontrado"
	EndIf
Else
	lRetorno := .F.
EndIf

RestArea(aArea)
Return(lRetorno)

Function WsMt650()
Return

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³ WS650PPO	   ³Autor  ³Rodrigo Toledo Silva³Data  ³02.08.2012 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descricao ³ Funcao criada para execucao do metodo PUTPRODUCTIONORDER    ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³ ExpC1: Estrutura do Ordem de Producao                       ³±±
±±³          ³ ExpC2: Gera Ops Intermediarias / Scs para operador corrente ³±±
±±³          ³ ExpC3: Opcao 3-Inclusao; 4-Alteracao                        ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ ExpC1: Retorna o codigo da OP gravada          	   		   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ TOTVS APS                                           		   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function WS650PPO(ProductionOrder,AutExplode,Option)
Local cOp			:= ""          
Local cErro		:= ""
Local cIDAPS		:= ""
Local cQuery		:= ""
Local lRetorno		:= .T.                            
Local aVetPar		:= {}
Local aErro		:= {}
Local aArea		:= SC2->(GetArea("SC2"))
Local oOP			:= ProductionOrder
Local aRetPE		:= {}
Local nI			:= 0     
Local cNumOP		:= PadR(If(ProductionOrder:POID == NIL,"",ProductionOrder:POID),TamSx3("C2_NUM")[1])
Local cItemOP		:= PadR(If(ProductionOrder:POItem  == NIL,"",ProductionOrder:POItem),TamSx3("C2_ITEM")[1])
Local cSeqOP		:= PadR(If(ProductionOrder:POSequence  == NIL,"",ProductionOrder:POSequence),TamSx3("C2_SEQUEN")[1])
Local cSeqPai		:= PadR(If(ProductionOrder:FatherSequence == NIL,"",ProductionOrder:FatherSequence),TamSx3("C2_SEQPAI")[1])
Local cItemGrd		:= PadR(If(ProductionOrder:POGradeItem == NIL,"",ProductionOrder:POGradeItem),TamSx3("C2_ITEMGRD")[1])
Local nOpc			:= If(Empty(Option) .Or. Option==3,3,4)
Local cAt1			:= If(TCGetDB() $ "MSSQL|MSSQL7","CHARINDEX(';',C2_IDAPS)","INSTR(C2_IDAPS,';')")
Local cAt2			:= If(TCGetDB() $ "MSSQL|MSSQL7","CHARINDEX('.',C2_IDAPS)","INSTR(C2_IDAPS,'.')")
Local cSpace		:= If(TCGetDB() $ "MSSQL|MSSQL7","SPACE(45)","RPAD('',45)")
Local cOrdemPrd	:= ""
Local cSeqOPAux	:= cSeqOP
Local cSeqPaiAux	:= cSeqPai
Local lFilha		:= .F.
Local lPai			:= .F.

PRIVATE lMsErroAuto 	:= .F.
PRIVATE lAutoErrNoFile	:= .T.
PRIVATE cWSMAT650       := ""
                             
WsChangeModule( "SIGAPCP" )
If (nOpc == 4)//se e alteracao
	If Empty(cNumOP) .Or. Empty(CItemOP) .Or. Empty(cSeqOP)//valida digitacao
		lRetorno := .F.
		SetSoapFault("PUTPRODUCTIONORDER",STR0018) //"Ordem de producao Invalida"
	Else//valida existencia
		DbSelectArea("SC2")                  
		DbSetOrder(1)
		If !MsSeek(xFilial("SC2")+cNumOP+cItemOP+cSeqOP+cItemGrd)
			lRetorno := .F.
			SetSoapFault("PUTPRODUCTIONORDER",STR0010) //"Ordem de producao não encontrada"
		EndIf
	EndIf
EndIf       

If SuperGetMv("MV_APS",.F.,"")=="DRUMMER"
	If GetMv("MV_GERAOPI")==.T. .Or. GetMv("MV_GERASC")==.T.
		lRetorno := .F.
		cErro := STR0019+Chr(13)+Chr(10) //"Parâmetro(s) MV_GERAOPI e/ou MV_GERASC habilitado(s). "
		cErro += STR0020+Chr(13)+Chr(10) //"Desabilite esses parâmetros, quando possuir integração"
		cErro += STR0021 //"com o Drummer APS"
		SetSoapFault("PUTPRODUCTIONORDER",cErro)
	EndIf
ElseIf SuperGetMv("MV_APS",.F.,"") == "TOTVS" .And. SC2->(FieldPos("C2_IDAPS")) > 0 .And. !Empty(ProductionOrder:IDAPS)
	cAt1	:= If(TCGetDB() $ "MSSQL|MSSQL7","CHARINDEX(';',C2_IDAPS)","INSTR(C2_IDAPS,';')")
	cAt2	:= If(TCGetDB() $ "MSSQL|MSSQL7","CHARINDEX('.',C2_IDAPS)","INSTR(C2_IDAPS,'.')")
	cSpace	:= If(TCGetDB() $ "MSSQL|MSSQL7","SPACE(45)","RPAD('',45)")
	
	cQuery := "SELECT C2_NUM||C2_ITEM||C2_SEQUEN||C2_ITEMGRD C2_OP FROM " +RetSQLName("SC2") + " WHERE "
	cQuery += "D_E_L_E_T_ <> '*' AND C2_FILIAL = '" +xFilial("SC2") +"' AND "
	cQuery += "C2_IDAPS = '" +ProductionOrder:IDAPS +"'"
	cQuery := ChangeQuery(cQuery) 
	dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),"TRB",.T.,.T.)
	If !Empty(TRB->C2_OP)
		cOrdemPrd := TRB->C2_OP
	EndIf
	TRB->(dbCloseArea())


	//-- Verifica se é uma inclusão de ordem filha de uma Ordem Firme
	//-- Não valida a sequencia do pai (Empty(cSeqPai)), pois se ocorrer algum erro,
	//-- inclui a ordem na mesma familia (com o mesmo numero, mas sem referencia do pai)
	If nOpc == 3 .And. !Empty(cNumOP) .And. !Empty(cItemOP)
		If Substr(ProductionOrder:POSequence,At('_',ProductionOrder:POSequence)+1,At('_',ProductionOrder:POSequence)+1) == "N"
			lFilha := .T.
		EndIf
		If Substr(ProductionOrder:FatherSequence,At('_',ProductionOrder:FatherSequence)+1,At('_',ProductionOrder:FatherSequence)+1) == "N"
			lPai := .T.
		EndIf
	EndIf

	If lFilha
		//-- Validação para criar OPP caso a ordem Pai seja Firme
		//-- Caso seja uma operação de inclusão(nOpc == 3) e os parâmetros POID E POITEM venham preenchidos
		
		//-- Busca a a ultima sequencia da Ordem que já esta no sistema (não tem o mesmo IDAPS)
		cQuery := "SELECT MAX(C2_SEQUEN) MAXIMO FROM " + RetSQLName("SC2") + " WHERE "
		cQuery += "C2_FILIAL = '" +xFilial("SC2") + "' AND C2_NUM = '" + ProductionOrder:POID
		cQuery += "' AND C2_ITEM = '" + ProductionOrder:POITEM
		cQuery += "' AND (C2_IDAPS = ' ' OR SUBSTRING(C2_IDAPS,1," + cAt1 + "-1) <> " + Substr(ProductionOrder:IDAPS,1,At(';',ProductionOrder:IDAPS)-1) + ")"
		cQuery := ChangeQuery(cQuery)		
		
		dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),"TRB",.T.,.T.)
		If !TRB->(EOF())
			cSeqOP  := TRB->MAXIMO
			//-- Soma a sequencia: ultima sequencia + sequencia enviada.
			//-- Ex.: Se a ultima sequencia da ordem for 003 e a sequencia enviada for 002, então sequencia sera 005  
			For nI := 1 To CalcSequen(cSeqOPAux)
				cSeqOP := Soma1(cSeqOP)
			Next nI	
			//-- Modifica sequencia da ordem pai, caso ela ainda não exista no Protheus
			If lPai
				cSeqPai := TRB->MAXIMO
				For nI := 1 To CalcSequen(cSeqPaiAux)
					cSeqPai := Soma1(cSeqPai)
				Next nI	
			EndIf
		EndIf
		TRB->(dbCloseArea())		
		
	Else
		//-- Tratamento para geracao de ordens vinculadas (pai X filha)
		//-- Formato ID APS (separados por ;):
		//-- 1o elemento: data e hora (YYMMDDHHmmSS)
		//-- 2o elemento: ordem e sequencia (OOO.SSS)
		//-- 3o elemento: codigo do item
		cQuery := "SELECT C2_NUM, C2_ITEM FROM " +RetSQLName("SC2") +" WHERE D_E_L_E_T_ <> '*' AND "
		cQuery += "C2_FILIAL = '" +xFilial("SC2") +"' AND C2_IDAPS <> " +cSpace +" AND "
		cQuery += "SUBSTRING(C2_IDAPS,1," +cAt1 +"-1) = '"
		cQuery += Substr(ProductionOrder:IDAPS,1,At(';',ProductionOrder:IDAPS)-1) +"' AND "
		cQuery += "SUBSTRING(C2_IDAPS," +cAt1 +"+1," +cAt2 +"-" +cAt1 +"-1) = '"
		cQuery += Substr(ProductionOrder:IDAPS,At(';',ProductionOrder:IDAPS)+1,At('.',ProductionOrder:IDAPS)-At(';',ProductionOrder:IDAPS)-1) +"'"
		cQuery := ChangeQuery(cQuery)
		dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),"TRB",.T.,.T.)
		If !TRB->(EOF())
			cNumOP  := TRB->C2_NUM
			cItemOP := TRB->C2_ITEM
		EndIf
		TRB->(dbCloseArea())
	Endif
	
	aadd(aVetPar,{"GERAOPI","N",NIL}) //Flag para nao gerar OPs intermediarias
	aadd(aVetPar,{"GERASC","N",NIL}) //Flag para nao gerar SCs
EndIf

If lRetorno .And. Empty(cOrdemPrd)
	
	If !Empty(cSeqOP) //Sequencia da OP
		aadd(aVetPar,{"C2_SEQUEN",PadR(cSeqOP,TamSX3("C2_SEQUEN")[1]),NIL})
	Else
		cSeqOP := PadL("1",TamSX3("C2_SEQUEN")[1],"0")
	EndIf
	If !Empty(cNumOP) //Numero da OP
	  	aadd(aVetPar,{"C2_NUM",PadR(cNumOp,TamSX3("C2_NUM")[1]),NIL})
	EndIf
	If !Empty(cItemOP) //Item da OP
		aadd(aVetPar,{"C2_ITEM",PadR(cItemOP,TamSX3("C2_ITEM")[1]),NIL})
	Else
		cItemOP := PadL("1",TamSX3("C2_ITEM")[1],"0")
	EndIf

	//Campos obrigatorios                                                                                           
	aadd(aVetPar,{"C2_PRODUTO"	, Padr(ProductionOrder:ProductCode,TamSX3("C2_PRODUTO")[1])	,NIL})  //Codigo do Produto
	aadd(aVetPar,{"C2_QUANT"	, ProductionOrder:Quantity										,NIL})  //Quantidade	
	aadd(aVetPar,{"C2_LOCAL"	, Padr(ProductionOrder:WareHouse,TamSX3("C2_LOCAL")[1])		,NIL})  //Almoxarificado
	aadd(aVetPar,{"C2_DATPRI"	, ProductionOrder:StartForecastDate								,NIL})  //Data Prevista de Inicio	
	aadd(aVetPar,{"C2_DATPRF"	, ProductionOrder:FinishForecastDate							,NIL})  //Data Prevista de termino
	aadd(aVetPar,{"C2_EMISSAO"	, ProductionOrder:PODate										,NIL})  //Emissao
		                 
	//Campos opcionais
	aadd(aVetPar,{"C2_ITEMGRD"	, Padr(ProductionOrder:POGradeItem,TamSX3("C2_ITEMGRD")[1])	,NIL})  //Item da Grade
	aadd(aVetPar,{"C2_OBS"		, ProductionOrder:Note											,NIL})  //Observação
	aadd(aVetPar,{"C2_PRIOR"	, ProductionOrder:Priority										,NIL})  //Prioridade
	aadd(aVetPar,{"C2_STATUS"	, ProductionOrder:Situation										,NIL})  //Status da OP
	aadd(aVetPar,{"C2_QTSEGUM"	, ProductionOrder:SecondMeasureUnitQuantity						,NIL})  //Quantidade na segunda unidade de medida
	aadd(aVetPar,{"C2_TPOP"		, ProductionOrder:TypeOfPO										,NIL})  //Tipo da OP
	aadd(aVetPar,{"C2_REVISAO"	, Padr(ProductionOrder:StructureRevision,TamSX3("C2_REVISAO")[1]) ,NIL})  //Revisão
	aadd(aVetPar,{"C2_CC"		, Padr(ProductionOrder:CostCenterCode,TamSX3("C2_CC")[1])		   ,NIL})  //Centro de Custo	
	aadd(aVetPar,{"C2_ITEMCTA"	, Padr(ProductionOrder:AccountingItemCode,TamSX3("C2_ITEMCTA")[1]),NIL})  //Item da Conta
	aadd(aVetPar,{"C2_DATRF"	, ProductionOrder:FinishRealDate								,NIL})	//Data de terminio da OP
	aadd(aVetPar,{"C2_PERDA"	, ProductionOrder:QuantityLoss									,NIL})	//Perda
	aadd(aVetPar,{"C2_PEDIDO"	, Padr(ProductionOrder:OrderID,TamSX3("C2_PEDIDO")[1])			,NIL})	//Pedido
	aadd(aVetPar,{"C2_ITEMPV"	, Padr(ProductionOrder:OrderItem,TamSX3("C2_ITEMPV")[1])    	,NIL})	//Item Pedido
	aadd(aVetPar,{"C2_ROTEIRO"	, Padr(ProductionOrder:Operation,TamSX3("C2_ROTEIRO")[1])		,NIL})	//Roteiro de Operacoes
	aadd(aVetPar,{"C2_IDAPS"	, ProductionOrder:IDAPS											,NIL})	//ID APS
	aadd(aVetPar,{"C2_SEQPAI"	, cSeqPai								,NIL})	//Sequencia Pai
	aadd(aVetPar,{"ROTINA"		, "APS"															,NIL})	//Indica que é uma atualização feita pelo APS

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Inclusao de campos de usuario.                      ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ		    
	PutUserFields("SC2",@ProductionOrder:UserFields,@aVetPar)
	                                             
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Gera Ops Intermediarias / Scs para operador corrente³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ			
	If nOpc == 3 .And. !Empty(AutExplode)
		aadd(aVetPar,{"AUTEXPLODE",AutExplode,NIL})
	EndIf

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Analisa o array eliminando os itens com conteudo NIL³
	//³ou Empyt                                            ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ		    		
	aVetPar := WsAutoOpc(aVetPar,.T.)        

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³PE antes de executar a rotina automatica                     ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If ExistBlock("WSMT650A")
		aRetPe := ExecBlock("WSMT650A",.F.,.F.,{aVetPar,oOP})
		If ValType(aRetPe) == "A"
			aVetPar := aClone(aRetPe)
		EndIf
	EndIf			
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Execucao da rotina automatica de ordem de producao  ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	MSExecAuto({|x,y| mata650(x,y)},aVetPar,nOpc)
	If Empty(cWSMAT650)
		If Empty(cNumOP)
			cNumOP := SC2->C2_NUM
		EndIf
		cOrdemPrd := cNumOP+cItemOP+cSeqOP+cItemGrd+Padr(ProductionOrder:POGradeItem,TamSX3("C2_ITEMGRD")[1])
	Else
		cOrdemPrd := cWSMAT650
	EndIf
	        
	If lMsErroAuto                                                     
		aErro := GetAutoGRLog()
		For nI := 1 To Len(aErro)
			cErro += aErro[nI]+Chr(13)+Chr(10)				
		Next nI
		SetSoapFault("PUTPRODUCTIONORDER",cErro)
		lRetorno := .F.
	EndIf						
EndIf

If !lRetorno
	cOrdemPrd := ""
EndIf

RestArea(aArea)
Return(cOrdemPrd)

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Função    ³ CalcSequen  ³Autor  Iohann Lucas Oro     ³Data ³22.07.2013 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descricao ³ Calcular qual o valor numerico da sequencia da ordem        ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³ cVar1: Sequencia a ser calculada                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ nVar: Valor numerico da sequencia                	        ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ TOTVS APS                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß 
/*/
Static Function CalcSequen(cVar1)
Local cVar2	:= "001"
Local nVar		:= 0
Local nI		:= 0
   
For nI := 1 To 50000
	If cVar2 == cVar1
   		nVar := nI
   		Exit
	Endif
   	cVar2 := Soma1(cVar2)
Next nI

Return nVar