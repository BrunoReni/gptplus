#INCLUDE "WSMAT120.ch"
#INCLUDE "APWEBSRV.CH"
#INCLUDE "PROTHEUS.CH"
/*/ 
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³WSMAT120  ³ Autor ³Eduardo Riera          ³ Data ³15.08.2003  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Web Service responsavel pelos pedidos de compra              ³±±
±±³          ³                                                              ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³                                                              ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³                                                              ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ CRM/Materiais/Portais                                        ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Atualizacoes sofridas desde a Construcao Inicial.                       ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Programador  ³ Data   ³ BOPS ³  Motivo da Alteracao                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³              ³        ³      ³                                          ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Definicao da Estrutura de Pedido de compras                            ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
WSSTRUCT PurchaseOrderView
	WSDATA POHeader   AS PurchaseOrderHeaderView
	WSDATA POItem     AS Array Of PurchaseOrderItemView
ENDWSSTRUCT

WSSTRUCT PurchaseOrderHeaderView
	WSDATA PurchaseOrderID              As String  OPTIONAL  //Codigo do Pedido
	WSDATA Supplier                     As String  //Codigo do Fornecedor
	WSDATA RegisterDate                 As Date    OPTIONAL  //Data de Emissao		
	WSDATA Contact                      As String  OPTIONAL  //Contato
	WSDATA Currency                     As Integer OPTIONAL  //Moeda
	WSDATA CurrencyRate                 As Float   OPTIONAL  //Taxa da moeda
	WSDATA Purchaseres                  As Array Of String OPTIONAL //Comprador
	WSDATA DiscountInCascade1           As Float   OPTIONAL
	WSDATA DiscountInCascade2           As Float   OPTIONAL
	WSDATA DiscountInCascade3           As Float   OPTIONAL
	WSDATA PurchaseOrderStatus          As String  OPTIONAL
	WSDATA UserFields                   As Array Of UserField OPTIONAL
ENDWSSTRUCT

WSSTRUCT PurchaseOrderItemView
	WSDATA PurchaseOrderID              As String  OPTIONAL //Codigo do Pedido
	WSDATA SequentialID                 As String  OPTIONAL //Item do Pedido
	WSDATA ProductCode                  As String  //Codigo do Produto
	WSDATA DescriptionProduct           As String  OPTIONAL //Descricao do Produto
	WSDATA MeasureUnit                  As String  OPTIONAL //Unidade de Medida
	WSDATA Quantity                     As Float   //Quantidade
	WSDATA QuantityDelivered            As Float   OPTIONAL //Quantidade Entregue
	WSDATA QuantityToClassify           As Float   OPTIONAL //Quantidade a Classificar
	WSDATA UnitPrice                    As Float   OPTIONAL //Preco 
	WSDATA TotalValue                   As Float   OPTIONAL //Valor Total
	WSDATA DiscountPercent              As Float   OPTIONAL//% do Desconto
	WSDATA DiscountValue                As Float   OPTIONAL //Valor do Desconto	
	WSDATA PaymentPlanCode			    As String  OPTIONAL //Condicao de Pagamento
	WSDATA DeliveryDate                 As Date    //Data de Entrega
	WSDATA Notes                        As String  OPTIONAL //Observacao
	WSDATA ExpensesValue                As Float   OPTIONAL //Despesa
	WSDATA InsuranceValue               As Float   OPTIONAL //Seguro
	WSDATA FreightValue                 As Float   OPTIONAL //Frete
	WSDATA Taxes                        As Array Of TaxesView OPTIONAL
	WSDATA QuoteId                      As String  OPTIONAL//Numero da Cotacao
	WSDATA TypeofProductionOrder		As String  OPTIONAL	//Tipo da Ordem de Producao C7_TPOP   
	WSDATA UserFields                   As Array Of UserField OPTIONAL
ENDWSSTRUCT
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Definicao do Web Service de Controle do Usuario                         ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
WSSERVICE MtSupplierPurchaseOrder  DESCRIPTION STR0001 NAMESPACE "http://webservices.microsiga.com.br/mtsupplierpurchaseorder.apw" //"Serviço de consulta as informações de pedido de compra"
	WSDATA HeaderType				AS String
	WSDATA Header					AS Array Of BrwHeader
	WSDATA UserCode					AS String
	WSDATA POHeader					AS Array Of PurchaseOrderHeaderView
	WSDATA DeliveryDateFrom			As Date OPTIONAL
	WSDATA DeliveryDateTo			As Date OPTIONAL
	WSDATA Supplier					As String
	WSDATA PurchaseOrderID			As String
	WSDATA PurchaseOrder			As PurchaseOrderView
	WSDATA QueryAddWhere			As String OPTIONAL
	WSDATA WsNull					As String
	WSDATA PageLen					AS Integer OPTIONAL
	WSDATA PageFirst				AS Integer OPTIONAL
	WSDATA TotalPO					AS Integer OPTIONAL

	WSMETHOD GetHeader           		DESCRIPTION STR0002 //"Método que descreve as estruturas de retorno do serviço"
	WSMETHOD BrwPurchaseOrder    		DESCRIPTION STR0003 //"Método de listagem dos pedidos de compra"
	WSMETHOD BrwTotalPurchaseOrder    	DESCRIPTION STR0009 //"Método de retorno do total de pedidos de compra do BrwPurchaseOrder"
	WSMETHOD GetPurchaseOrder    		DESCRIPTION STR0004 //"Método de consulta as informações do pedido de compra"
	WSMETHOD ReprogrammingPurchaseOrder	DESCRIPTION STR0005 //"Método de reprogramação do pedido de compra"
	WSMETHOD PutPurchaseOrder   	    DESCRIPTION STR0007 //"Método de atualização das informacoes do Pedido de Compra / Autorizacao de Entrega"
	WSMETHOD DelPurchaseOrder   	    DESCRIPTION STR0008 //"Método de exclusão do Pedido de Compra / Autorizacao de Entrega"
ENDWSSERVICE

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³GetHeader ³Autor  ³ Eduardo Riera         ³ Data ³15.08.2003 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³Rotina de recuperacao do header das cotacoes do sistema      ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³Nenhum                                                       ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ExpL1: Indica que o metodo foi avaliado com sucesso          ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Este metodo devolve o header de uma estrutura                ³±±
±±³          ³                                                             ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ CRM/Materiais/Portais                                       ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
WSMETHOD GetHeader WSRECEIVE HeaderType WSSEND Header WSSERVICE MtSupplierPurchaseOrder

::Header := MtHeader(::HeaderType)

Return(.T.)

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³BrwPurchas³Autor  ³ Eduardo Riera         ³ Data ³15.08.2003 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³Rotina de recuperacao dos pedidos de compra do sistema       ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpC1: Codigo do usuario                                     ³±±
±±³          ³ExpC2: Fornecedor                                            ³±±
±±³          ³ExpD3: Data Inicial                                          ³±±
±±³          ³ExpD4: Data Final                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ExpL1: Indica que o metodo foi avaliado com sucesso          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Este metodo devolve as cotacaoes em aberto do fornecedor     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ CRM/Materiais/Portais                                       ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
WSMETHOD BrwPurchaseOrder WSRECEIVE UserCode,Supplier,DeliveryDateFrom,DeliveryDateTo,QueryAddWhere,PageLen,PageFirst WSSEND POHeader WSSERVICE MtSupplierPurchaseOrder

Local aArea    := GetArea()
Local aStru    := dbStruct()
Local lRetorno := .T.
Local lQuery   := .F.
Local nX       := 0
Local nY       := 0
Local cPedAnt  := ""
Local cQuery   := ""
Local cAliasSC7:= "SC7"
Local cFornece := SubStr(::Supplier,1,Len(SA2->A2_COD))
Local cLoja    := SubStr(::Supplier,Len(SA2->A2_COD)+1)
Local dDataIni := ::DeliveryDateFrom
Local dDataFim := ::DeliveryDateTo

DEFAULT dDataIni := dDataBase-180
DEFAULT dDataFim := dDataBase
DEFAULT ::PageLen   := 0
DEFAULT ::PageFirst := 0

If PrtChkUser(::UserCode,"MtSupplierPurchaseOrder")
	dbSelectArea("SC7")
	dbSetOrder(3)
	#IFDEF TOP
		lQuery := .T.
		aStru  := SC7->(dbStruct())
		cAliasSC7 := "BrwPurchaseOrder"
		
		cQuery := "SELECT * "
		cQuery += "FROM "+RetSqlName("SC7")+" SC7 "
		cQuery += "WHERE SC7.C7_FILIAL='"+xFilial("SC7")+"' AND "
		cQuery += "SC7.C7_FORNECE='"+cFornece+"' AND "
		cQuery += "SC7.C7_LOJA='"+cLoja+"' AND "
		cQuery += "SC7.C7_DATPRF>='"+Dtos(dDataIni)+"' AND "
		cQuery += "SC7.C7_DATPRF<='"+Dtos(dDataFim)+"' AND "
		cQuery += "SC7.C7_CONAPRO NOT IN ('B','R') AND " //Não careega pedidos bloqueados e rejeitados
		cQuery += "SC7.D_E_L_E_T_=' ' "
		cQuery := WsQueryAdd(cQuery,::QueryAddWhere)
		cQuery += "ORDER BY "+SqlOrder(SC7->(IndexKey()))
		
		cQuery := ChangeQuery(cQuery)
		
		dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cAliasSC7)
		
		For nX := 1 To Len(aStru)
			If aStru[nX][2]<>"C"
				TcSetField(cAliasSC7,aStru[nX][1],aStru[nX][2],aStru[nX][3],aStru[nX][4])
			EndIf
		Next nX		
	#ELSE
		MsSeek(xFilial("SC7")+cFornece+cLoja,.T.)
	#ENDIF
	nX := 0
	While !Eof() .And. xFilial("SC7") == (cAliasSC7)->C7_FILIAL
		If	cFornece == (cAliasSC7)->C7_FORNECE .And.;
			cLoja == (cAliasSC7)->C7_LOJA
			If	(cAliasSC7)->C7_DATPRF >= dDataIni .And.;
				(cAliasSC7)->C7_DATPRF <= dDataFim
				If	cPedAnt<>(cAliasSC7)->C7_NUM
					cPedAnt:=(cAliasSC7)->C7_NUM
					nX++
				EndIf
				If	::PageFirst==0 .OR. nX >= ::PageFirst
					If	aScan(::POHeader,{|x| x:PurchaseOrderID == (cAliasSC7)->C7_NUM}) == 0
						If	nY == 0
							POHeader := {}
						EndIf
						aAdd(::POHeader,WsClassNew("PurchaseOrderHeaderView"))
						nY++
						GetPOHeader(@::POHeader[nY],cAliasSC7)
					ElseIf ::POHeader[nY]:PurchaseOrderStatus == STR0014
						cStatus := IIF(!Empty((cAliasSC7)->C7_RESIDUO).Or.(cAliasSC7)->C7_QUJE>=(cAliasSC7)->C7_QUANT,STR0014,STR0013)
						If	cStatus == STR0013
							::POHeader[nY]:PurchaseOrderStatus := STR0013
						EndIf
					EndIf
				EndIf
			EndIf
			If	nY >= ::PageLen .AND. ::PageLen <> 0
				Exit
			EndIf
		EndIf
		dbSelectArea(cAliasSC7)
		dbSkip()
	EndDo
	If lQuery
		dbSelectArea(cAliasSC7)
		dbCloseArea()
		dbSelectArea("SC7")
	EndIf
Else
	lRetorno := .F.
EndIf
RestArea(aArea)
Return(lRetorno)

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³BrwTotalPO³Autor  ³ Flavio Luiz Vicoo     ³ Data ³26.07.2007 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³Rotina de recuperacao do Total de pedidos de compra          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpC1: Codigo do usuario                                     ³±±
±±³          ³ExpC2: Fornecedor                                            ³±±
±±³          ³ExpD3: Data Inicial                                          ³±±
±±³          ³ExpD4: Data Final                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ExpL1: Indica que o metodo foi avaliado com sucesso          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Metodo de recuperacao do total de pedidos de compra          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ CRM/Materiais/Portais                                       ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
WSMETHOD BrwTotalPurchaseOrder WSRECEIVE UserCode,Supplier,DeliveryDateFrom,DeliveryDateTo,QueryAddWhere WSSEND TotalPO WSSERVICE MtSupplierPurchaseOrder

Local aArea    := GetArea()
Local lRetorno := .T.
Local cAliasSC7:= "SC7"
Local cFornece := SubStr(::Supplier,1,Len(SA2->A2_COD))
Local cLoja    := SubStr(::Supplier,Len(SA2->A2_COD)+1)
Local dDataIni := ::DeliveryDateFrom
Local dDataFim := ::DeliveryDateTo
#IFDEF TOP
Local cQuery   := ""
#ENDIF
DEFAULT dDataIni := dDataBase-180
DEFAULT dDataFim := dDataBase

If PrtChkUser(::UserCode,"MtSupplierPurchaseOrder")
	::TotalPO := 0
	#IFDEF TOP
		cAliasSC7 := GetNextAlias()
		cQuery := "SELECT COUNT(DISTINCT C7_NUM) TOTALPO "
		cQuery += "FROM "+RetSqlName("SC7")+" SC7 "
		cQuery += "WHERE SC7.C7_FILIAL='"+xFilial("SC7")+"' AND "
		cQuery += "SC7.C7_FORNECE='"+cFornece+"' AND "
		cQuery += "SC7.C7_LOJA='"+cLoja+"' AND "
		cQuery += "SC7.C7_DATPRF>='"+Dtos(dDataIni)+"' AND "
		cQuery += "SC7.C7_DATPRF<='"+Dtos(dDataFim)+"' AND "
		cQuery += "SC7.C7_CONAPRO <> 'B' AND "
		cQuery += "SC7.D_E_L_E_T_=' ' "
		cQuery := WsQueryAdd(cQuery,::QueryAddWhere)
		cQuery := ChangeQuery(cQuery)
		dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cAliasSC7)
		::TotalPO := (cAliasSC7)->TOTALPO
	#ENDIF
Else
	lRetorno := .F.
EndIf
RestArea(aArea)
Return(lRetorno)

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³GetPurchas³Autor  ³ Eduardo Riera         ³ Data ³15.08.2003 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³Rotina de recuperacao dos pedidos de compra                  ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpC1: Codigo do usuario                                     ³±±
±±³          ³ExpC2: Numero do Pedido                                      ³±±
±±³          ³ExpC3: Fornecedor                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ExpL1: Indica que o metodo foi avaliado com sucesso          ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Este metodo devolve as cotacaoes em aberto do fornecedor     ³±±
±±³          ³                                                             ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ CRM/Materiais/Portais                                       ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
WSMETHOD GetPurchaseOrder WSRECEIVE UserCode,PurchaseOrderID,Supplier,QueryAddWhere WSSEND PurchaseOrder WSSERVICE MtSupplierPurchaseOrder

Local aArea    := GetArea()
Local lRetorno := .T.
Local lQuery   := .F.
Local nX       := 0
Local cAliasSC7:= "SC7"
Local cFornece := SubStr(::Supplier,1,Len(SA2->A2_COD))
Local cLoja    := SubStr(::Supplier,Len(SA2->A2_COD)+1)
#IFDEF TOP
	Local aStru    := dbStruct()
	Local cQuery   := ""
#ENDIF

If PrtChkUser(::UserCode,"MtSupplierPurchaseOrder","","SA2",::Supplier)
	dbSelectArea("SC7")
	dbSetOrder(1)
	#IFDEF TOP
		lQuery := .T.
		aStru  := SC7->(dbStruct())
		cAliasSC7 := "BrwPurchaseOrder"
		
		cQuery := "SELECT * "
		cQuery += "FROM "+RetSqlName("SC7")+" SC7 "
		cQuery += "WHERE SC7.C7_FILIAL='"+xFilial("SC7")+"' AND "
		cQuery += "SC7.C7_FORNECE='"+cFornece+"' AND "
		cQuery += "SC7.C7_LOJA='"+cLoja+"' AND "
		cQuery += "SC7.C7_NUM='"+::PurchaseOrderID+"' AND "
		cQuery += "SC7.C7_CONAPRO <> 'B' AND "
		cQuery += "SC7.D_E_L_E_T_=' ' "
		cQuery := WsQueryAdd(cQuery,::QueryAddWhere)
		cQuery += "ORDER BY "+SqlOrder(SC7->(IndexKey()))
		
		cQuery := ChangeQuery(cQuery)
		
		dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cAliasSC7)
		
		For nX := 1 To Len(aStru)
			If aStru[nX][2]<>"C"
				TcSetField(cAliasSC7,aStru[nX][1],aStru[nX][2],aStru[nX][3],aStru[nX][4])
			EndIf
		Next nX
	#ELSE
		MsSeek(xFilial("SC7")+::PurchaseOrderID)
	#ENDIF
	nX := 0
	While !Eof() .And. xFilial("SC7") == (cAliasSC7)->C7_FILIAL .And.;
		(cAliasSC7)->C7_NUM==::PurchaseOrderID
		If cFornece == (cAliasSC7)->C7_FORNECE .And.;
			cLoja == (cAliasSC7)->C7_LOJA
			nX++						
			If nX == 1
				::PurchaseOrder:POHeader := WsClassNew("PurchaseOrderHeaderView")
				GetPOHeader(@::PurchaseOrder:POHeader,cAliasSC7)				
			EndIf
			
			aadd(::PurchaseOrder:POItem,WsClassNew("PurchaseOrderItemView"))
			GetPoItem(@::PurchaseOrder:POItem[nX],cAliasSC7)
			
		EndIf
		dbSelectArea(cAliasSC7)
		dbSkip()
	EndDo
	If lQuery
		dbSelectArea(cAliasSC7)
		dbCloseArea()
		dbSelectArea("SC7")
	EndIf
Else
	lRetorno := .F.
EndIf
RestArea(aArea)
Return(lRetorno)
                       

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³Reprogramm³Autor  ³ Erike Yuri da Silva   ³ Data ³15/08/2006 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³Rotina de reprogramacao dos pedidos de compra                ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpC1: Codigo do usuario                                     ³±±
±±³          ³ExpC2: Estrutura do Pedido de compras                        ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ExpL1: Indica que o metodo foi avaliado com sucesso          ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Este metodo reprograma o pedido de compra apartir da integra-³±±
±±³          ³cao com o APS Drummer.                                       ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Materiais                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
WSMETHOD ReprogrammingPurchaseOrder WSRECEIVE UserCode,PurchaseOrder WSSEND WSNull WSSERVICE MtSupplierPurchaseOrder

Local aArea		:= GetArea() 
Local aErro		:= {}   
Local aCab		:= {}
Local aItens	:= {}
Local aItem		:= {}
Local aRetPE	:= {}
Local lRetorno	:= .T.
Local nY      
Local cPedido	:= PadR(::PurchaseOrder:POHeader:PurchaseOrderID,Len(SC7->C7_NUM))
Local cFornece	:= SubStr(::PurchaseOrder:POHeader:Supplier,1,Len(SA2->A2_COD))
Local cLoja		:= SubStr(::PurchaseOrder:POHeader:Supplier,Len(SA2->A2_COD)+1)
Local cErro		:= ""
Local nFuncao   := 1

PRIVATE lMsErroAuto		:= .F.
PRIVATE lAutoErrNoFile	:= .T.         

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Por enquanto so sera possivel realizar reprogramacao de pedido de compra³
//³via webservice se existir integracao com DRUMMER APS                    ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If PrtChkUser(::UserCode,"MtSupplierPurchaseOrder","","SA2",::PurchaseOrder:POHeader:Supplier) .And. ;
	Upper(SuperGetMv("MV_APS",.F.,""))=="DRUMMER"
	
	dbSelectArea("SC7")
	dbSetOrder(3) 
	If MsSeek(xFilial("SC7")+::PurchaseOrder:POHeader:Supplier+cPedido)    
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Determina se o Documento e um Pedido de Compras ou Aut. de Entrega ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		nFuncao := SC7->C7_TIPO
		
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Cabecalho do Pedido de Compras³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		Aadd(aCab,{"C7_NUM"		,cPedido		,NIL})
		//Para manter legado das validacoes da rotina automatica
		Aadd(aCab,{"C7_COND"	,SC7->C7_COND	,NIL})	
		Aadd(aCab,{"C7_CONTATO"	,SC7->C7_CONTATO,NIL})
		Aadd(aCab,{"C7_FILENT"	,SC7->C7_FILENT,NIL}) 
		
		aCab:= WsAutoOpc(aCab)	
		
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Itens do Pedido de Compras    ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ   
		//Processa somente os itens que foram preenchidos corretamente
		aEval(::PurchaseOrder:POItem,{|x| If(Empty(x:SequentialID),Nil,Aadd(aItens,x))}) 
		::PurchaseOrder:POItem := aClone(aItens)
		aItens := {}             
		SC7->( dbSetOrder(1) )
		For nY := 1 To Len(::PurchaseOrder:POItem)
			If SC7->( MsSeek(xFilial("SC7")+cPedido+::PurchaseOrder:POItem[nY]:SequentialID) )
				AAdd( aItem, { "LINPOS", "C7_ITEM",::PurchaseOrder:POItem[nY]:SequentialID} )		
			EndIf
		   	aadd(aItem,{"C7_NUM"		,cPedido									,NIL})   
		   	aadd(aItem,{"C7_ITEM"		,::PurchaseOrder:POItem[nY]:SequentialID	,NIL}) 
		   	aadd(aItem,{"C7_QUANT"		,::PurchaseOrder:POItem[nY]:Quantity		,NIL})
		   	aadd(aItem,{"C7_DATPRF"		,::PurchaseOrder:POItem[nY]:DeliveryDate	,NIL})  
		   	
			PutUserFields("SC7",@::PurchaseOrder:POItem[nY]:UserFields,@aItem)
			aItem:= WsAutoOpc(aItem,.T.)
			aadd(aItens,aItem)
			aItem:= {}			   	
	   Next nY   
	   
	   If Empty(aCab) .Or. Empty(aItens)  
	       Aadd(aErro,STR0006) //"Pedido de compras inválido"
	   	   lRetorno := .F.
	   EndIf	  
	   
	   //Ponto de entrada para permitir manipular o cabecalho e itens do pedido	   
	   If lRetorno .And. ExistBlock("WSMT120A")
	   	aRetPE:= ExecBlock("WSMT120A",.F.,.F.,{aCab,aItens})
	   	If Len(aRetPE) == 2 .And. ValType(aRetPE[1]) == "A" .And. ValType(aRetPE[2]) == "A"
	   		aCab  := aClone(aRetPE[1])
	   		aItens:= aClone(aRetPE[2])
	   	EndIf
	   EndIf
	   
	   If lRetorno
	   	   MSExecAuto({|u,v,x,y| MATA120(u,v,x,y)},nFuncao,aCab,aItens,4)
	   EndIf

		If lMsErroAuto
			aErro := GetAutoGRLog()
		EndIf
	Else
		Aadd(aErro,STR0006) //"Pedido de compras inválido"
		lRetorno := .F.
	EndIf
	
	If !lRetorno    
		For nY := 1 To Len(aErro)
			cErro += aErro[nY] + Chr(13)+Chr(10)
		Next nY
		SetSoapFault("ReprogrammingPurchaseOrder",cErro)
	EndIf
Else
	lRetorno := .F.
EndIf            
RestArea(aArea)
Return(lRetorno)        

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³GetPoHeade³Autor  ³ Eduardo Riera         ³ Data ³29.08.2003 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³Rotina de preenchimento do Header do pedido de compra        ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpO1: Objeto do cabecalho                                   ³±±
±±³          ³ExpC2: Alias do SC7                                          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³Nenhum                                                       ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Este metodo devolve o objeto passado por parametro com os    ³±±
±±³          ³dados do sc7 posicionado                                     ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ CRM/Materiais/Portais                                       ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function GetPOHeader(oObjeto,cAliasSC7)

Local aArea     := GetArea()
Local cAliasSAJ := "SAJ"
Local lQuery    := .F.
#IFDEF TOP
	Local cQuery    := ""
#ENDIF
oObjeto:= WsClassNew("PurchaseOrderHeaderView")
oObjeto:PurchaseOrderID := (cAliasSC7)->C7_NUM
oObjeto:Supplier := (cAliasSC7)->C7_FORNECE+(cAliasSC7)->C7_LOJA
oObjeto:RegisterDate := (cAliasSC7)->C7_EMISSAO
oObjeto:Contact := (cAliasSC7)->C7_CONTATO
oObjeto:Currency :=  (cAliasSC7)->C7_MOEDA
oObjeto:CurrencyRate := (cAliasSC7)->C7_TXMOEDA
oObjeto:DiscountInCascade1 := (cAliasSC7)->C7_DESC1
oObjeto:DiscountInCascade2 := (cAliasSC7)->C7_DESC2
oObjeto:DiscountInCascade3 := (cAliasSC7)->C7_DESC3
oObjeto:PurchaseOrderStatus := IIF(!Empty((cAliasSC7)->C7_RESIDUO).Or.(cAliasSC7)->C7_QUJE>=(cAliasSC7)->C7_QUANT,STR0014,STR0013)
	
If !Empty((cAliasSC7)->C7_GRUPCOM)
	dbSelectArea("SAJ")
	dbSetOrder(1)
	#IFDEF TOP
		cAliasSAJ := "BrwPurchaseOrder2"
		lQuery := .T.
		cQuery := "SELECT * "
		cQuery += "FROM "+RetSqlName("SAJ")+" SAJ "
		cQuery += "WHERE SAJ.AJ_FILIAL='"+xFilial("SAJ")+"' AND "
		cQuery += "SAJ.AJ_GRCOM = '"+(cAliasSC7)->C7_GRUPCOM+"' AND "
		cQuery += "D_E_L_E_T_=' ' "
		cQuery += "ORDER BY "+SqlOrder(SAJ->(IndexKey()))
						
		cQuery := ChangeQuery(cQuery)
						
		dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cAliasSAJ)
										
	#ELSE
		MsSeek(xFilial("SAJ")+(cAliasSC7)->C7_GRUPCOM)
	#ENDIF

	oObjeto:Purchaseres := {}
	While !Eof() .And. xFilial("SAJ") == (cAliasSAJ)->AJ_FILIAL .And.;
		(cAliasSC7)->C7_GRUPCOM == (cAliasSAJ)->AJ_GRCOM
						
		aadd(oObjeto:Purchaseres,(cAliasSAJ)->AJ_USER)
						
		dbSelectArea(cAliasSAJ)
		dbSkip()
	EndDo
	If lQuery
		dbSelectArea(cAliasSAJ)
		dbCloseArea()
		dbSelectArea("SAJ")
	EndIf
EndIf
UserFields("SC7",@oObjeto:UserFields,cAliasSC7)
RestArea(aArea)
Return(.T.)


/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³GetPoItem ³Autor  ³ Eduardo Riera         ³ Data ³29.08.2003 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³Rotina de preenchimento do item do pedido de compra          ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpO1: Objeto do item do pedido de compra                    ³±±
±±³          ³ExpC2: Alias do SC7                                          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³Nenhum                                                       ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Este metodo devolve o objeto passado por parametro com os    ³±±
±±³          ³dados do sc7 posicionado                                     ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ CRM/Materiais/Portais                                       ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function GetPOItem(oObjeto,cAliasSC7)

Local aArea     := GetArea()
Local aImpostos := {}
Local nY    := 0

oObjeto:PurchaseOrderID   := (cAliasSC7)->C7_NUM
oObjeto:SequentialID      := (cAliasSC7)->C7_ITEM
oObjeto:ProductCode       := (cAliasSC7)->C7_PRODUTO
oObjeto:DescriptionProduct:= (cAliasSC7)->C7_DESCRI
oObjeto:MeasureUnit       := (cAliasSC7)->C7_UM
oObjeto:Quantity          := (cAliasSC7)->C7_QUANT
oObjeto:QuantityDelivered := (cAliasSC7)->C7_QUJE 
oObjeto:QuantityToClassify:= (cAliasSC7)->C7_QTDACLA
oObjeto:UnitPrice         := (cAliasSC7)->C7_PRECO
oObjeto:TotalValue        := (cAliasSC7)->C7_TOTAL
oObjeto:DiscountPercent   := (cAliasSC7)->C7_DESC
oObjeto:DiscountValue     := (cAliasSC7)->C7_VLDESC
oObjeto:PaymentPlanCode	 := (cAliasSC7)->C7_COND
oObjeto:DeliveryDate      := (cAliasSC7)->C7_DATPRF
oObjeto:Notes             := (cAliasSC7)->C7_OBS

oObjeto:ExpensesValue     := (cAliasSC7)->C7_DESPESA
oObjeto:InsuranceValue    := (cAliasSC7)->C7_SEGURO
oObjeto:FreightValue      := (cAliasSC7)->C7_VALFRE
oObjeto:QuoteID           := (cAliasSC7)->C7_NUMCOT
			
aImpostos := MaFisImpLd("SC7","IT",cAliasSC7)			
For nY := 1 To Len(aImpostos)
	If nY == 1
		oObjeto:Taxes:={}
	EndIf
	aadd(oObjeto:Taxes,WsClassNew("TaxesView"))
	oObjeto:Taxes[nY]:TaxCode   := aImpostos[nY][1]
	oObjeto:Taxes[nY]:TaxBase   := aImpostos[nY][2]
	oObjeto:Taxes[nY]:TaxRate   := aImpostos[nY][3]
	oObjeto:Taxes[nY]:TaxAmount := aImpostos[nY][4]
Next nY	
UserFields("SC7",@oObjeto:UserFields,cAliasSC7)
RestArea(aArea)
Return(.T.)

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³PutPurchas³Autor  ³ Felipe Nunes de Toledo³ Data ³06/02/2008 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³Rotina de Inclusao de pedidos de compra / autorizacao de     ³±±
±±³          ³entrega                                                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpC1: Codigo do usuario                                     ³±±
±±³          ³ExpC2: Estrutura do Pedido de compras                        ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ExpL1: Indica que o metodo foi avaliado com sucesso          ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Este metodo inclui o pedido de compra / autorizacao de entre-³±±
±±³          ³ga apartir da integracao com o APS Drummer.                  ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Materiais                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
WSMETHOD PutPurchaseOrder WSRECEIVE UserCode,PurchaseOrder WSSEND WSNull WSSERVICE MtSupplierPurchaseOrder

Local aArea		:= GetArea() 
Local lRetorno	:= .T.

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Por enquanto so sera possivel realizar reprogramacao de pedido de compra³
//³via webservice se existir integracao com DRUMMER APS                    ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If lRetorno := PrtChkUser(::UserCode,"MtSupplierPurchaseOrder","PutPurchaseOrder") .And. ;
	Upper(SuperGetMv("MV_APS",.F.,""))=="DRUMMER"	
	WsChangeModule( "SIGACOM" )   
	lRetorno := CheckPutAE(::PurchaseOrder, "PutPurchaseOrder")
EndIf

RestArea(aArea)
Return(lRetorno) 
/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³CheckPutSC³ Autor ³Felipe Nunes de Toledo ³ Data ³ 06/02/08 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Verifica se gera SC ou AE.                                 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³OItem       Objeto do Item                                  ³±±
±±³          ³cNameMethod Nome do Methodo                                 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³Logico                                                      ³±±
±±³          ³(.T.) Gera SC / (.F.) Nao Gera SC                           ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function CheckPutAE(oPurOrder, cNameMethod)
Local lGeraAE    := .T.
Local lQuant     := .F.
Local lData      := .F.
Local lRetorno   := .T.
Local nCntFor    := 0
Local nQtdDisp   := 0
Local cFornece	 := SubStr(oPurOrder:POHeader:Supplier,1,Len(SA2->A2_COD))
Local cLoja		 := SubStr(oPurOrder:POHeader:Supplier,Len(SA2->A2_COD)+1)
Local cSeekSC3   := ""

SB1->( dbSetOrder(1) )
For nCntFor:=1 To Len(oPurOrder:POItem)
	cProduto := PadR(oPurOrder:POItem[nCntFor]:ProductCode,Len(SB1->B1_COD))
	If SB1->( MsSeek(xFilial("SB1") + cProduto) ) .And. (SB1->B1_CONTRAT=="S")
		SC3->( dbSetOrder(5) )
		If SC3->( MsSeek( cSeekSC3 := xFilial("SC3")+cProduto+cFornece+cLoja) )
			Do While SC3->( !Eof() .And. cSeekSC3==C3_FILIAL+C3_PRODUTO+C3_FORNECE+C3_LOJA )
				lGeraAE  := .T.
				lData    := .F.
				lQuant   := .F.
				nQtdDisp := 0
				
				lData:= !(oPurOrder:POItem[nCntFor]:DeliveryDate >= SC3->C3_DATPRI  .And. ;
				oPurOrder:POItem[nCntFor]:DeliveryDate <= SC3->C3_DATPRF)
				nQtdDisp := SC3->C3_QUANT - SC3->C3_QUJE
				
				lQuant:=(nQtdDisp <= oPurOrder:POItem[nCntFor]:Quantity .Or. SC3->C3_ENCER =="E" .Or. ;
				SC3->C3_RESIDUO =="S")
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Nao Considera Contratos de Parceria Encerrados ou fora da data³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				If lData .Or. lQuant
					lGeraAE := .F.
					SC3->( dbSkip() )
					Loop
				EndIf
				Exit
			EndDo
			If SC3->( !Eof() ) .And. lGeraAE
				lRetorno := PutAutDelivery(oPurOrder:POItem[nCntFor]:DeliveryDate, ;
				oPurOrder:POItem[nCntFor]:Quantity,cProduto, ;
				oPurOrder:POItem[nCntFor]:TypeofProductionOrder,cNameMethod)
			Else
				If nCntFor == 1
					SetSoapFault(cNameMethod,STR0010) //"Produto nao possui Contrato de Parceria valido."
					lRetorno := .F.
				EndIf
			EndIf
		Else
			If nCntFor == 1
				SetSoapFault(cNameMethod,STR0011) //"Produto nao possui Contrato de Parceria cadastrado."
				lRetorno := .F.
			EndIf
		EndIf
	Else
		If nCntFor == 1
			SetSoapFault(cNameMethod,STR0012) //"Produto invalido."
			lRetorno := .F.
		EndIf
	EndIf
Next nCntFor

Return( lRetorno )

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³PutAutDeli³ Autor ³Felipe Nunes de Toledo ³ Data ³ 22/05/07 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Rotina de gravacao de AE's                                 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³dNecessity  Dt. necessidade para geracao da AE              ³±±
±±³          ³nQuantity   Quantidade a ser gerada na AE                   ³±±
±±³          ³cProduct    Produto a ser gerado na AE                      ³±±
±±³          ³cNameMethod Nome do Methodo                                 ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function PutAutDelivery(dNecessity,nQuantity,cProduct,cTypePO,cNameMethod)
Local aCab 	      := {}
Local aItem	      := {}
Local aArea	      := GetArea()
Local aErro       := {}
Local cErro       := ""
Local nX          := 0
Local lRet        := .T.
Private lMsErroAuto	:= .F.

dbSelectArea("SB1")
If MSSeek(xFilial("SB1")+cProduct) .AND. !IsProdMod(SB1->B1_COD) .And. (SB1->B1_TIPO != "BN" .Or. (SB1->B1_TIPO == "BN" .And. MatBuyBN())) // nao gera para mao de obra e tipo = "BN" (Beneficiamento)
	aCab:={{"C7_NUM",Criavar("C7_NUM",.F.),NIL},;	// Numero do Pedido
		{"C7_EMISSAO",dDataBase,NIL},;				// Data de Emissao
		{"C7_FORNECE",SC3->C3_FORNECE,NIL},;		// Fornecedor
		{"C7_LOJA",SC3->C3_LOJA,NIL},;             // Loja do Fornecedor
		{"C7_CONTATO",SC3->C3_CONTATO,NIL},;		// Contato
		{"C7_COND",SC3->C3_COND,NIL},;             // Condicao de Pagamento
		{"C7_FILENT",SC3->C3_FILENT,NIL},;			// Filial de Entrega
		{"C7_FRETE",CriaVar("C7_FRETE",.F.),NIL},;
		{"C7_DESPESA",CriaVar("C7_DESPESA",.F.),NIL},;
		{"C7_SEGURO",CriaVar("C7_SEGURO",.F.),NIL},;
		{"C7_DESC1",CriaVar("C7_DESC1",.F.),NIL},;
		{"C7_DESC2",CriaVar("C7_DESC2",.F.),NIL},;
		{"C7_DESC3",CriaVar("C7_DESC3",.F.),NIL},;
		{"C7_MSG",CriaVar("C7_MSG",.F.),NIL},;
		{"C7_REAJUST",CriaVar("C7_REAJUST",.F.),NIL}}
	aItem:={{"C7_ITEM",StrZero(1,Len(SC7->C7_ITEM)),NIL},;
		{"C7_PRODUTO",SC3->C3_PRODUTO,NIL},;
		{"C7_QUANT",nQuantity,NIL},;
		{"C7_QTDSOL",nQuantity,NIL},;
		{"C7_UM",SB1->B1_UM,NIL},;
		{"C7_QTSEGUM",ConvUm(SB1->B1_COD,nQuantity,0,2),NIL},;
		{"C7_PRECO",SC3->C3_PRECO,NIL},;
		{"C7_TOTAL",nQuantity*SC3->C3_PRECO,NIL},;
		{"C7_NUMSC",SC3->C3_NUM,NIL},;
		{"C7_ITEMSC",SC3->C3_ITEM,NIL},;
		{"C7_IPI",SC3->C3_IPI,NIL},;
		{"C7_REAJUST",SC3->C3_REAJUST,NIL},;
		{"C7_FRETE",SC3->C3_FRETE,NIL},;
		{"C7_DATPRF",dNecessity,NIL},;
		{"C7_LOCAL",SC3->C3_LOCAL,NIL},;
		{"C7_MSG",SC3->C3_MSG,NIL},;
		{"C7_TPFRETE",SC3->C3_TPFRETE,NIL},;
		{"C7_OBS",SC3->C3_OBS,NIL},;
		{"C7_CONTA",SB1->B1_CONTA,NIL},;
		{"C7_CC",SB1->B1_CC,NIL},;
		{"C7_DESCRI",SB1->B1_DESC,NIL},;
		{"C7_TPOP",cTypePO,NIL}}
	
	MSExecAuto({|v,x,y,z,w| MATA120(v,x,y,z,w)},2,aCab,{aItem},3,.F.)

	If lMsErroAuto
		aErro := GetAutoGRLog()
		For nX := 1 To Len(aErro)
			cErro += aErro[nX] + Chr(13)+Chr(10)
		Next nX
		SetSoapFault(cNameMethod,cErro)
		lRet := .F.
	EndIf

EndIf
// Restaura area original
RestArea(aArea)
Return( lRet )

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³DelPurchas³Autor  ³ Felipe Nunes de Toledo³ Data ³07/02/2008 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³Rotina de exclusao de todas as Autorizacoes de Entregas Pre- ³±±
±±³          ³vistas existentes no sistema.                                ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpC1: Codigo do usuario                                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ExpL1: Indica que o metodo foi avaliado com sucesso          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Este metodo exclui todas as autorizacao de Entregas Previstas³±±
±±³          ³apartir da integracao com o APS Drummer.                     ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Esp / Integracao Protheus x Drummer                         ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
WSMETHOD DelPurchaseOrder WSRECEIVE UserCode WSSEND WSNull WSSERVICE MtSupplierPurchaseOrder

Local lRetorno := .T.

WSAEApaga()                                        

Return( lRetorno )

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³WSAEApaga ³ Autor ³Felipe Nunes de Toledo ³ Data ³ 26/02/08 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Rotina para delecao das AEs Previstas                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ Nenhum                                                     ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function WSAEApaga()
Local nReg      := Recno()
Local aArea     := GetArea()

dbSelectarea("SC7")
dbSetOrder(11)

If MsSeek( xFilial("SC7") + "P" )
	Do While SC7->( !Eof() ) .And. ( SC7->C7_FILIAL+SC7->C7_TPOP == xFilial("SC7")+"P" )
		nReg:=Recno()
		SB2->(dbSetOrder(1))
		If SB2->(dbSeek(xFilial()+SC7->C7_PRODUTO+SC7->C7_LOCAL))
			GravaB2Pre("-",SC7->C7_QUANT,SC7->C7_TPOP)  
		EndIf
		dbSelectArea("SC3")
		dbSetOrder(1)
		If ( MsSeek(xFilial("SC3")+SC7->C7_NUMSC+SC7->C7_ITEMSC,.F.) )
			RecLock("SC3",.F.)
			SC3->C3_QUJE  -= SC7->C7_QUANT
			SC3->C3_ENCER := IIf(SC3->C3_QUANT - SC3->C3_QUJE > 0," ","E")
		EndIf
		dbSelectArea("SC7")		
		RecLock("SC7",.F.,.T.)
		dbDelete()            
		dbSkip()
		dbSelectArea("SC7")
		dbSetOrder(11)
		dbGoto(nReg)
	
		SC7->( dbSkip() )
	EndDo
EndIf

RestArea(aArea)
Return
